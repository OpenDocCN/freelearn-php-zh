- en: Chapter 7. Magento Backend
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 7 章. Magento 后端
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Registering a backend controller
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 注册后端控制器
- en: Extending the menu
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扩展菜单
- en: Adding an ACL
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加 ACL
- en: Extending the system configuration
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扩展系统配置
- en: Creating a grid from a database table
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从数据库表创建网格
- en: Adding customer attributes
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加客户属性
- en: Working with source models
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与源模型一起工作
- en: Introduction
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: For a store owner, the backend is the interface to manage everything in their
    store. It is very important that everything is secured against visitors with bad
    intentions. The backend of a standard Magento installation is extendible in many
    ways, so everyone can extend it with custom pages, configuration, roles, and more.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 对于店主来说，后端是他们管理店铺中所有事物的接口。确保一切对心怀恶意访客的安全至关重要。标准 Magento 安装的后端可以通过多种方式扩展，因此每个人都可以通过自定义页面、配置、角色等方式对其进行扩展。
- en: By following the configuration patterns of Magento, all the security issues
    (access for anonymous users, a secured environment, and so on) are covered by
    the backend system of Magento. The recipes in this chapter describe all the ways
    in which you can extend your backend using Magento's best practices of extending
    the backend.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 通过遵循 Magento 的配置模式，所有安全问题（匿名用户的访问、安全环境等）都由 Magento 的后端系统覆盖。本章中的食谱描述了您可以使用 Magento
    扩展后端的最佳实践的所有方法。
- en: Registering a backend controller
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 注册后端控制器
- en: The first thing that we will learn is how to extend the backend with a custom
    controller action. For this, we have to create a controller that is secured so
    that only logged-in backend users can see the content of this page.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先将学习如何通过自定义控制器操作扩展后端。为此，我们必须创建一个受保护的控制器，以确保只有登录的后端用户才能看到此页面的内容。
- en: You need a backend controller when you want to add an extra page to your backend.
    This is mostly the case when you are working with a custom form or overview that
    you need for your module.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 当你想在你的后端添加一个额外的页面时，你需要一个后端控制器。这通常是在你使用自定义表单或概述时，你需要为你的模块使用的情况。
- en: Getting ready
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'To make the testing of the admin URLs easier, we will remove the secret key
    (the hash in the URL of a backend page) from the admin URLs. You can configure
    this in **System** | **Configuration** | **Admin** | **Security**. Change the
    configuration as shown in the following screenshot:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使测试管理员 URL 更容易，我们将从管理员 URL 中删除密钥（后端页面 URL 中的哈希）。您可以在 **系统** | **配置** | **管理员**
    | **安全** 中进行此配置。按照以下截图所示更改配置：
- en: '![Getting ready](img/3329OS_07_06.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![准备就绪](img/3329OS_07_06.jpg)'
- en: How to do it...
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'When you want to add an extra page to your backend, you have to perform the
    following steps:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 当你想在你的后端添加一个额外的页面时，你必须执行以下步骤：
- en: 'Open the `app/code/local/Packt/Helloworld/etc/config.xml` file and add the
    following configuration under the `global` tag:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 `app/code/local/Packt/Helloworld/etc/config.xml` 文件，并在 `global` 标签下添加以下配置：
- en: '[PRE0]'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This configuration will initialize the `Adminhtml` module to look for controllers
    in the folders of the `Packt_Helloworld` module.
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此配置将初始化 `Adminhtml` 模块，以便在 `Packt_Helloworld` 模块的文件夹中查找控制器。
- en: 'Add the following folders in the directories as shown:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照以下目录添加以下文件夹：
- en: '`app/code/local/Packt/Helloworld/controllers/Adminhtml`'
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`app/code/local/Packt/Helloworld/controllers/Adminhtml`'
- en: '`app/code/local/Packt/Helloworld/controllers/Adminhtml/Helloworld`'
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`app/code/local/Packt/Helloworld/controllers/Adminhtml/Helloworld`'
- en: 'In the last folder, create the `IndexController.php` file with the following
    content:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在最后一个文件夹中，创建一个名为 `IndexController.php` 的文件，内容如下：
- en: '[PRE1]'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Make sure that you extend from the `Mage_Adminhtml_Controller_Action` class
    so that all the security cases are covered.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保你从 `Mage_Adminhtml_Controller_Action` 类扩展，以确保所有安全情况都得到覆盖。
- en: Clear the cache and navigate to the controller by going to the URL `http://magento-dev.local/index.php/admin/helloworld_index/`.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 清除缓存，并通过访问 URL `http://magento-dev.local/index.php/admin/helloworld_index/`
    导航到控制器。
- en: This will give you a white page. This is normal because the action is empty.
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将给你一个空白页面。这是正常的，因为操作是空的。
- en: 'Add the following code in your `indexAction` function and reload the page.
    You will see that an empty backend page is returned:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的 `indexAction` 函数中添加以下代码，并重新加载页面。你会看到返回了一个空的后端页面：
- en: '[PRE2]'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: How it works...
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The difference between a frontend and backend controller is the parent class.
    A backend controller extends another class as the frontend controller. A backend
    controller always extends from the `Mage_Adminhtml_Controller_Action` class. This
    class adds the security to the controller so that only authenticated users can
    have access to the controller action(s).
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 前端控制器和后端控制器之间的区别在于父类。后端控制器扩展另一个类作为前端控制器。后端控制器始终扩展自`Mage_Adminhtml_Controller_Action`类。这个类为控制器添加了安全性，以确保只有经过身份验证的用户才能访问控制器操作。
- en: When we add the configuration in the `config.xml` file, we will extend the `controllers`
    folder of the `Mage_Adminhtml` module with the `controllers/Adminhtml` folder
    of our module. With the `before="Mage_Adminhtml"` option, Magento will look for
    a controller file in the folder of the module. Later, it will look in the `Mage_Adminhtml`
    module.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们在`config.xml`文件中添加配置时，我们将使用我们的模块的`controllers/Adminhtml`文件夹扩展`Mage_Adminhtml`模块的`controllers`文件夹。使用`before="Mage_Adminhtml"`选项，Magento将在模块的文件夹中查找控制器文件。稍后，它将在`Mage_Adminhtml`模块中查找。
- en: Tip
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: When you create a backend controller for your module, make sure that you add
    the `Adminhtml/Modulename` folder in the `controllers` folder to avoid conflicts
    with the existing `Mage_Adminhtml` controllers.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 当你为你的模块创建后端控制器时，确保你在`controllers`文件夹中添加`Adminhtml/Modulename`文件夹，以避免与现有的`Mage_Adminhtml`控制器冲突。
- en: There's more…
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'In some modules and tutorials, you will find the following configuration to
    link your backend controller:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些模块和教程中，你会找到以下配置来链接你的后端控制器：
- en: '[PRE3]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: It is *not* recommended to do the configuration in this way because this will
    create issues when you work with frontend and backend controllers in the same
    module.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 不建议以这种方式进行配置，因为当你在同一模块中与前端和后端控制器一起工作时，这将会引发问题。
- en: Extending the menu
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 扩展菜单
- en: While extending the backend, it is important to make sure that the user can
    easily navigate to your customized pages. The only alternative that you can use
    for this is to extend the **Admin** menu with your own items. With the Magento
    framework, it is possible to add menu items at every level in that menu.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在扩展后端时，确保用户可以轻松地导航到你的自定义页面是很重要的。你可以使用的唯一替代方案是使用你自己的项目扩展**管理员**菜单。使用Magento框架，可以在该菜单的每个级别添加菜单项。
- en: Getting ready
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: For this recipe, the only task that we have to do is add the right configuration,
    which is in the `adminhtml.xml` file, into the `etc` folder of the `Packt_Helloworld`
    module.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个菜谱，我们唯一要做的任务是将正确的配置（位于`adminhtml.xml`文件中）添加到`Packt_Helloworld`模块的`etc`文件夹中。
- en: How to do it...
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'The following steps describe how you can add an extra menu item to the **Admin**
    menu:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤描述了如何向**管理员**菜单添加额外的菜单项：
- en: The first thing that we have to think about is where will we place an extra
    menu item in the **Admin** menu. For this test, we will place it under the **System**
    menu. Keep the system ID in mind. We have to use this for the menu configuration.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们必须首先考虑的是，我们将在**管理员**菜单的哪个位置放置额外的菜单项。为此测试，我们将将其放在**系统**菜单下。记住系统ID。我们必须使用它来进行菜单配置。
- en: 'The second thing is to add the configuration in the `adminhtml.xml` file. Paste
    the following code under the `config` tag:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第二件事是在`adminhtml.xml`文件中添加配置。在`config`标签下粘贴以下代码：
- en: '[PRE4]'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Note
  id: totrans-51
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: In the `<helloworld>` tag, you see the `translate` and `module` attributes.
    When these attributes are set, the title will be translated using the helper class
    of the `helloworld` module.
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在`<helloworld>`标签中，你可以看到`translate`和`module`属性。当这些属性被设置时，标题将使用`helloworld`模块的帮助类进行翻译。
- en: Clear the cache and reload the backend. While hovering over the system menu,
    you will see that a **Helloworld** link is displayed as shown the following screenshot:![How
    to do it...](img/3329OS_07_07.jpg)
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 清除缓存并重新加载后端。当悬停在系统菜单上时，你会看到显示了一个**HelloWorld**链接，如下截图所示：![如何操作...](img/3329OS_07_07.jpg)
- en: 'To change the position of the menu item, we have to add the following `sort_order`
    tag in the configuration:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要更改菜单项的位置，我们必须在配置中添加以下`sort_order`标签：
- en: '[PRE5]'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: How it works...
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'The **Admin** menu of Magento comprises all menu configuration data from the
    modules. The standard menu contains the following 10 root items:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: Magento的**管理员**菜单包含来自所有模块的所有菜单配置数据。标准菜单包含以下10个根项：
- en: Dashboard
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仪表板
- en: Sales
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 销售
- en: Catalog
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目录
- en: Mobile
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移动
- en: Customers
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户
- en: Promotions
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 促销
- en: Newsletter
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通讯录
- en: Reports
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 报告
- en: System
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 系统
- en: When you want to add an item as a child of one of the root items, you have to
    use these tags in your configuration as we did for this recipe. The IDs of these
    menu items are declared in the configuration XML files of the Magento `core` modules.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 当您想要将一个项作为根项的子项添加时，您必须使用这些标签在您的配置中，就像我们在本菜谱中所做的那样。这些菜单项的ID在Magento `core`模块的配置XML文件中声明。
- en: You can easily add extra root items to the menu, but you have to make sure that
    the menu doesn't become too long. When the root menu becomes too long, it will
    cause layout issues for smaller screen resolutions.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以轻松地向菜单中添加额外的根项，但您必须确保菜单不要太长。当根菜单太长时，它将导致小屏幕分辨率的布局问题。
- en: Adding an ACL
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加ACL
- en: In the previous recipes, we created a backend controller action to which you
    can navigate. However, when you want to configure a custom admin role, you can't
    restrict the access to this page for a specific role. In this recipe, we will
    create an **ACL** (**Access Control List**) for our backend page and configure
    a role with restricted access to this page.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的菜谱中，我们创建了一个后台控制器操作，您可以导航到它。然而，当您想要配置自定义管理员角色时，您不能限制特定角色的访问权限。在这个菜谱中，我们将为我们的后台页面创建一个**ACL（访问控制列表**）并配置一个具有限制性访问权限的角色。
- en: Getting ready
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Every admin user has a role. These roles contain access permissions, so you
    can restrict access to some user roles. In this recipe, we will add an extra permission
    to the roles so that we can configure the access for our previously created page.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 每个管理员用户都有一个角色。这些角色包含访问权限，因此您可以限制某些用户角色的访问。在这个菜谱中，我们将为角色添加额外的权限，以便我们可以配置之前创建的页面的访问权限。
- en: How to do it...
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'The following steps show you how you can restrict the access to a backend page
    for specific users:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤显示了您如何限制特定用户的后台页面访问权限：
- en: 'The first thing we have to do is to check which ACLs are available. To know
    this, we can run the following command:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们必须做的第一件事是检查哪些ACL可用。为了知道这一点，我们可以运行以下命令：
- en: '[PRE6]'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Or, we can navigate to the **Roles** page in the backend. This is located in
    **System** | **Permissions** | **Roles**. Click on **Add new role** and open the
    **Resources** tab. This will give you a list of all the available ACLs in the
    backend.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 或者，我们可以导航到后端的**角色**页面。这位于**系统** | **权限** | **角色**。点击**添加新角色**并打开**资源**标签。这将列出后端中所有可用的ACL。
- en: 'The second step is to add an extra ACL to it. To do this, we can add the following
    configuration in the `adminhtml.xml` file under the `<config>` tag:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第二步是为它添加一个额外的ACL（访问控制列表）。为此，我们可以在`adminhtml.xml`文件中的`<config>`标签下添加以下配置：
- en: '[PRE7]'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Clear your cache and reload the **Resources** page in the backend. When you
    search for `Helloworld`, you will see that there is a checkbox available for our
    previously created ACL as shown in the following screenshot:![How to do it...](img/3329OS_07_08.jpg)
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 清除您的缓存并重新加载后端的**资源**页面。当您搜索`Helloworld`时，您将看到之前创建的ACL旁边有一个可用的复选框，如图所示：![如何操作...](img/3329OS_07_08.jpg)
- en: 'At this point, our ACL is working. To verify this, we have to create a role
    with a user and log in to see that the user has access to the page:'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 到目前为止，我们的ACL正在工作。为了验证这一点，我们必须创建一个带有用户的角色并登录，以查看用户是否有访问页面的权限：
- en: Create a new role on the **Roles** page in **System** | **Permissions**. Name
    it `Test Helloworld` and check the **Helloworld test** and **Manage Products**
    ACL.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**系统** | **权限**下的**角色**页面创建一个新的角色。命名为`Test Helloworld`并勾选**Helloworld test**和**Manage
    Products** ACL。
- en: Create a backend user on the **Users** page at **System** | **Permissions**.
    Fill the form and add the user to the role that we have just created, as shown
    in the following screenshot:![How to do it...](img/3329OS_07_09.jpg)
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**系统** | **权限**下的**用户**页面创建一个后台用户。填写表单并将用户添加到我们刚刚创建的角色中，如图所示：![如何操作...](img/3329OS_07_09.jpg)
- en: Log in as the new user, and you will see that this user has access only to the
    pages that we have configured in the role.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以新用户身份登录，您将看到该用户只能访问我们在角色中配置的页面。
- en: How it works...
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: With the ACL system, it is possible to restrict backend pages for specific roles
    of users. For example, a product manager only has the rights to manage the products,
    categories, and promotion rules and the logistic partner only has access to the
    order pages.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 使用ACL系统，可以限制特定用户角色的后台页面。例如，产品经理只有管理产品、类别和促销规则的权利，而物流合作伙伴只有访问订单页面的权限。
- en: Tip
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: In the Magento Community Edition, it is not possible to restrict the access
    to the data of a specific store. For example, a logistic partner can only see
    the orders of Store 1\. The restrictions are based on the controller actions.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在Magento社区版中，无法限制对特定商店数据的访问。例如，物流合作伙伴只能看到Store 1的订单。限制基于控制器操作。
- en: When you don't create an ACL for a page, only the roles that have access to
    all resources can access the page. In most cases, this is the administrator. For
    other roles, it is not possible to access a page without an ACL.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 当你没有为页面创建ACL时，只有有权访问所有资源的角色才能访问该页面。在大多数情况下，这是管理员。对于其他角色，没有ACL无法访问页面。
- en: Extending the system configuration
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 扩展系统配置
- en: When you want to save some configuration parameters for you module, you can
    use the Magento configuration table to save your configuration in it. You can
    find the configuration forms under **Configuration** in the **System** menu. In
    this recipe, we will add a configuration page in the system configuration with
    some configuration parameters.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 当你想为你自己的模块保存一些配置参数时，你可以使用Magento配置表来保存你的配置。你可以在**系统**菜单下的**配置**中找到配置表单。在本菜谱中，我们将在系统配置中添加一个带有一些配置参数的配置页面。
- en: Getting ready
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Prepare yourselves to extend the `Packt_Helloworld` module with some extra configuration.
    Also, connect to your database because we will have to look at some tables.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 准备好扩展`Packt_Helloworld`模块并添加一些额外的配置。同时，连接到你的数据库，因为我们将需要查看一些表。
- en: How to do it...
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: The following steps describe the procedure to create extra configuration parameters
    in the **Configuration** page under **System**.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤描述了在**系统**下的**配置**页面中创建额外配置参数的流程。
- en: 'Create the following files in the `app/code/local/Packt/Helloworld/etc/` folder:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`app/code/local/Packt/Helloworld/etc/`文件夹中创建以下文件：
- en: '`system.xml`'
  id: totrans-97
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`system.xml`'
- en: '`adminhtml.xml`'
  id: totrans-98
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`adminhtml.xml`'
- en: 'The second step is to create the configuration page. We will create a new tab
    in the left-hand side column under a new section. To create a section with the
    name `packt`, we have to add the following code in the `system.xml` file that
    we have just created:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第二步是创建配置页面。我们将在新部分下的左侧列中创建一个新标签。为了创建名为`packt`的部分，我们必须在刚刚创建的`system.xml`文件中添加以下代码：
- en: '[PRE8]'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'To add a configuration page, we have to add the following code under the `global`
    tag of the `system.xml` file:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要添加一个配置页面，我们必须在`system.xml`文件的`global`标签下添加以下代码：
- en: '[PRE9]'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: When you clear the cache and reload the page, the **PACKT** section with the
    **Helloworld** tab appears in the menu as shown in the following screenshot:![How
    to do it...](img/3329OS_07_01.jpg)
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你清除缓存并重新加载页面时，菜单中会出现带有**Helloworld**标签的**PACKT**部分，如下截图所示：![如何操作...](img/3329OS_07_01.jpg)
- en: 'When you click on the link, you will see a 404 error. This is because we haven''t
    created an ACL for this configuration section. To add an ACL, we have to add the
    following code in the `adminhtml.xml` file that we have created in the first step:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你点击链接时，你会看到一个404错误。这是因为我们还没有为这个配置部分创建ACL。要添加ACL，我们必须在第一步中创建的`adminhtml.xml`文件中添加以下代码：
- en: '[PRE10]'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: We have to make sure that the ACL is added. To test this, you have to clear
    your cache and go to the **Roles** page at **System** | **Permissions**. On that
    page, click on the **Administrator** role, open the **Role Resources** tab, and
    change it to **Custom**. You will see your ACL entry in the list as shown in the
    following screenshot:![How to do it...](img/3329OS_07_02.jpg)
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们必须确保ACL已添加。为了测试这一点，你必须清除你的缓存并转到**系统**|**权限**下的**角色**页面。在该页面上，点击**管理员**角色，打开**角色资源**选项卡，并将其更改为**自定义**。你将在列表中看到你的ACL条目，如下截图所示：![如何操作...](img/3329OS_07_02.jpg)
- en: When we see **Helloworld section** in the list, it means that the ACL is added.
    Don't save the role because this was just to verify ACL's addition. To make sure
    that all the ACL settings are in the backend session, we have to create a new
    backend session by logging out and then logging in.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当我们在列表中看到**Helloworld部分**时，这意味着ACL已添加。不要保存角色，因为这只是为了验证ACL的添加。为了确保所有ACL设置都在后端会话中，我们必须通过注销然后重新登录来创建一个新的后端会话。
- en: Tip
  id: totrans-108
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: When creating an ACL, make sure that your custom ACL configuration follows the
    Magento XML tree where you have placed your page.
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当创建ACL时，确保你的自定义ACL配置遵循你在放置页面的位置放置的Magento XML树。
- en: When you log in again, navigate to the configuration page and you will see an
    empty page. It's because the fields aren't added in the configuration.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当您再次登录时，导航到配置页面，您将看到一个空页面。这是因为字段尚未添加到配置中。
- en: 'A new configuration field has to be in a configuration group. To add a new
    group, we have to add some configuration in the `system.xml` file. Add the following
    code under the `config/sections/helloworld` tag:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 新的配置字段必须位于配置组中。要添加新组，我们必须在`system.xml`文件中添加一些配置。在`config/sections/helloworld`标签下添加以下代码：
- en: '[PRE11]'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'On reloading the page, you will see nothing because there are no fields defined
    in the `<fields>` tag. To add a field (for example, `header_title`), we have to
    add the following code in the `<fields>` tag:'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在重新加载页面时，您将看不到任何内容，因为在`<fields>`标签中未定义任何字段。要添加字段（例如，`header_title`），我们必须在`<fields>`标签中添加以下代码：
- en: '[PRE12]'
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: After clearing the cache and reloading the page, you will see a field in the
    configuration page as shown in the following screenshot:![How to do it...](img/3329OS_07_03.jpg)
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 清除缓存并重新加载页面后，您将在配置页面看到字段，如下面的截图所示：![如何操作...](img/3329OS_07_03.jpg)
- en: Enter a value in the field and save the configuration.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在字段中输入值并保存配置。
- en: 'To see where the value is saved, we have to look in the `core_config_data`
    table. Run the following query to see the record of our field:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要查看值保存的位置，我们必须查看`core_config_data`表。运行以下查询以查看字段的记录：
- en: '[PRE13]'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'This query returns all the values of the field as shown in the following screenshot:'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此查询返回字段的全部值，如下面的截图所示：
- en: '![How to do it...](img/3329OS_07_04.jpg)'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作...](img/3329OS_07_04.jpg)'
- en: To read the config data, we can use the `Mage::getStoreConfig('<path>')` function.
    In our case, the path is `helloworld/hellopage/header_title`. You can determine
    the path from the path column of the `core_config_data` table or from the `system.xml`
    files of the modules.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要读取配置数据，我们可以使用`Mage::getStoreConfig('<path>')`函数。在我们的例子中，路径是`helloworld/hellopage/header_title`。您可以从`core_config_data`表的路径列或从模块的`system.xml`文件中确定路径。
- en: How it works...
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: The Magento configuration is saved in the `core_config_data` table. This table
    contains all the configuration values that you can set in **System** | **Configuration**
    from the backend.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: Magento配置保存在`core_config_data`表中。此表包含您可以在后端**系统** | **配置**中设置的配置值。
- en: 'Every config setting can be configured at three levels:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 每个配置设置都可以在三个级别上进行配置：
- en: Global configuration
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 全局配置
- en: Website configuration
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网站配置
- en: Store view configuration
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储视图配置
- en: 'When you are working with multiple stores, this setup makes it possible to
    save a configuration value for every store view. You can switch the scope with
    the drop-down field in the upper-left corner of the screen, shown as follows:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 当您与多个商店一起工作时，此设置使得为每个商店视图保存配置值成为可能。您可以通过屏幕左上角的下拉字段切换范围，如下所示：
- en: '![How it works...](img/3329OS_07_05.jpg)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![工作原理...](img/3329OS_07_05.jpg)'
- en: 'The type of every configuration value is stored in the scope column. This scope
    has a different code for every level:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 每个配置值的类型都存储在范围列中。此范围在每级都有不同的代码：
- en: default (for global configuration)
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认（用于全局配置）
- en: websites (for website configuration)
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网站（用于网站配置）
- en: stores (for stores)
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 商店（用于商店）
- en: For every configuration field, you can configure the scope in your `system.xml`
    file. This is done with the `use_in_store`, `use_in_website`, and `use_in_default`
    tags.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个配置字段，您可以在您的`system.xml`文件中配置范围。这是通过`use_in_store`、`use_in_website`和`use_in_default`标签完成的。
- en: 'The configuration path of a configuration parameter is set in the `system.xml`
    files of the modules. In the following XML path, you can determine the values:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 配置参数的配置路径设置在模块的`system.xml`文件中。在以下XML路径中，您可以确定值：
- en: '[PRE14]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'When you convert this XML path to a configuration path, it will look as follows:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 当您将此XML路径转换为配置路径时，它将如下所示：
- en: '[PRE15]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: In this recipe, `$1` corresponds to `helloworld`, `$2` corresponds to `hellopage`,
    and `$3` corresponds to `header_title` or `is_enabled`.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 在此配方中，`$1`对应于`helloworld`，`$2`对应于`hellopage`，`$3`对应于`header_title`或`is_enabled`。
- en: Creating a grid from a database table
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从数据库表创建网格
- en: In the previous chapter, we created a Magento entity that was linked to a database
    table. In this recipe, we will create a backend interface so that backend users
    can see the data from this table in the backend.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们创建了一个与数据库表链接的Magento实体。在本配方中，我们将创建一个后端界面，以便后端用户可以在后端查看此表中的数据。
- en: We will create an overview that will use the standard backend grid widget of
    Magento. This widget is widely used in the backend to display information in a
    grid as the **Manage Products** page.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将创建一个概述，它将使用标准的Magento后端网格小部件。这个小部件在后台广泛使用，用于在网格中显示信息，例如**管理产品**页面。
- en: Getting ready
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: For this recipe, we have to configure a backend controller, a menu item, an
    ACL, and the right `Block` files to render the grid output. Prepare yourselves
    to extend the backend with a custom grid.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个菜谱，我们必须配置后端控制器、菜单项、ACL以及正确的`Block`文件来渲染网格输出。准备好扩展后端以使用自定义网格。
- en: How to do it...
  id: totrans-145
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: The first thing we have to do is to create a backend controller for our grid.
    We will create a grid based on the subscription entity, so we will create `SubscriptionController`.
    Create a `SubscriptionController.php` file in the `app/code/local/Packt/Helloworld/controllers/Adminhtml/Helloworld/`
    folder.
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们必须做的第一件事是为我们的网格创建一个后端控制器。我们将基于订阅实体创建一个网格，因此我们将创建`SubscriptionController`。在`app/code/local/Packt/Helloworld/controllers/Adminhtml/Helloworld/`文件夹中创建一个`SubscriptionController.php`文件。
- en: 'Add the following content in the controller:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在控制器中添加以下内容：
- en: '[PRE16]'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Create a menu item for the controller. When you add the following code in the
    `adminhtml.xml` file of the module, it will create a menu item under the **Customer**
    item:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为控制器创建一个菜单项。当你将以下代码添加到模块的`adminhtml.xml`文件中时，它将在**客户**项下创建一个菜单项：
- en: '[PRE17]'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Create an ACL for the controller action. This can be done by adding the following
    code in the same `adminhtml.xml` file as we did for the menu.
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为控制器动作创建一个ACL。这可以通过在`adminhtml.xml`文件中添加以下代码来完成，就像我们为菜单所做的那样。
- en: '[PRE18]'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Clear the cache and reload your backend. The menu item is now in the menu under
    **Customer**. When you navigate to the page, you will see an empty backend page.
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 清除缓存并重新加载你的后端。现在菜单项在**客户**菜单下。当你导航到该页面时，你会看到一个空的后端页面。
- en: We now have a backend page that is linked to the menu. In the next steps, we
    will add a grid in the page. To do this, we have to create two blocks. The first
    block is for the wrapper (title, classes). The second one is for the grid where
    we will define the columns.
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在我们有一个与菜单链接的后端页面。在接下来的步骤中，我们将在页面中添加一个网格。为此，我们必须创建两个块。第一个块是包装器（标题、类）。第二个块是网格，我们将定义列。
- en: 'To create the wrapper block, create the `app/code/local/Packt/Helloworld/Block/Adminhtml`
    folder. In that folder, create a `Subscription.php` file with the following content:'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要创建包装块，创建`app/code/local/Packt/Helloworld/Block/Adminhtml`文件夹。在该文件夹中，创建一个包含以下内容的`Subscription.php`文件：
- en: '[PRE19]'
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Create the `app/code/local/Packt/Helloworld/Block/Adminhtml/Subscription` folder
    with a `Grid.php` file in it. In that file, add the following content:'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`app/code/local/Packt/Helloworld/Block/Adminhtml/Subscription`文件夹中创建一个包含`Grid.php`文件的文件夹。在该文件中，添加以下内容：
- en: '[PRE20]'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'To add the blocks to the page, add the following code in the `indexAction()`
    function of the previously created controller file:'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要将块添加到页面，在之前创建的控制器文件中的`indexAction()`函数中添加以下代码：
- en: '[PRE21]'
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Reload the page and you will get the following output:![How to do it...](img/3329OS_07_10.jpg)
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新加载页面，你会得到以下输出：![如何操作...](img/3329OS_07_10.jpg)
- en: To change the page title, we have to go to the wrapper block class. This is
    the `app/code/local/Packt/Helloworld/Block/Adminhtml/Subscription.php` file. The
    `$this->_headerText` variable in the `__contsruct()` action contains the title
    of the page.
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要更改页面标题，我们需要进入包装块类。这是`app/code/local/Packt/Helloworld/Block/Adminhtml/Subscription.php`文件。在`__construct()`动作中的`$this->_headerText`变量包含页面的标题。
- en: Now, the grid contains the **Subscription id**, **Firstname**, **Lastname**,
    and **Email**. In `_prepareColumns()`, we will add more columns to the grid so
    that it shows all the columns of the database table.
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，网格包含**订阅ID**、**名**、**姓**和**电子邮件**。在`_prepareColumns()`中，我们将向网格添加更多列，以便显示数据库表的全部列。
- en: 'The `created_at` field is of the type `datetime`. When we add the following
    code in the `_prepareColumns()` function, we will see the `created_at` column
    with a date filter:'
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`created_at`字段的数据类型为`datetime`。当我们向`_prepareColumns()`函数中添加以下代码时，我们将看到带有日期过滤器的`created_at`列：'
- en: '[PRE22]'
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The last column that we will add is the **status** column. In this column,
    we will add some HTML markup to the values. For this, we need to add the following
    code in the `_prepareColumns()` function:'
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将添加的最后一个列是**状态**列。在这个列中，我们将向值添加一些HTML标记。为此，我们需要在`_prepareColumns()`函数中添加以下代码：
- en: '[PRE23]'
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'The `frame_callback` column requires the `prepareStatusLayout()` function.
    Create the following function in the `grid` class:'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`frame_callback`列需要`prepareStatusLayout()`函数。在`grid`类中创建以下函数：'
- en: '[PRE24]'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: How it works...
  id: totrans-170
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The backend grid is one of the backend widgets that is available in Magento.
    Other widgets that are widely used are the forms or the tabbed left menu. The
    grid widget is made to display the content of a collection in a grid, where you
    can sort and filter on the columns. A pager is automatically included, which prevents
    out-of-memory exceptions when there is a very large number of records in a collection.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 后端网格是Magento中可用的后端小部件之一。其他广泛使用的小部件是表单或标签式左侧菜单。网格小部件是为了显示集合的内容而设计的，可以在列上进行排序和筛选。自动包含分页器，这可以防止在集合中有大量记录时出现内存不足异常。
- en: The rendering of the grid is done in the `Mage_Adminhtml_Block_Widget_Grid`
    class. Our grid directly extends this class and overwrites the functions that
    were needed to customize the output for our entity.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 网格的渲染是在`Mage_Adminhtml_Block_Widget_Grid`类中完成的。我们的网格直接扩展了这个类，并覆盖了需要自定义输出以适应我们实体的函数。
- en: 'In the `_prepareCollection()` function, we initialize the collection where
    we will work. The `_prepareColumns()` function is used to define the columns of
    the grid. In the `_prepareColumns()` function, we can play with the definition
    of the columns. A column definition is done with the `$this->addColumn()` function.
    In this function, we will initialize an array with the parameters for the column.
    It is recommended to use the following parameters for every column:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在`_prepareCollection()`函数中，我们初始化我们将要工作的集合。`_prepareColumns()`函数用于定义网格的列。在`_prepareColumns()`函数中，我们可以玩转列的定义。列定义是通过`$this->addColumn()`函数完成的。在这个函数中，我们将初始化一个包含列参数的数组。建议为每个列使用以下参数：
- en: '`header` (column title)'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`header`（列标题）'
- en: '`index` (column in database)'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`index`（数据库中的列）'
- en: '`sortable` (enables sorting for the column when true)'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sortable`（当为真时，启用列的排序）'
- en: 'The following parameters are optional:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 以下参数是可选的：
- en: '`width` (defines a width for the column)'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`width`（为列定义宽度）'
- en: '`frame_callback` (calls a function to render the value of a cell)'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`frame_callback`（调用一个函数来渲染单元格的值）'
- en: '`type` (defines the filter widget such as number, datetime, and options)'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`type`（定义过滤器小部件，如数字、日期和时间、选项）'
- en: '`options` (defines a source model when the type is `options`)'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`options`（当类型为`options`时定义源模型）'
- en: Adding customer attributes
  id: totrans-182
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加客户属性
- en: Sometimes, it is easy if we can add an attribute to a customer as we can do
    with products. This is possible, but there is no interface for adding attributes
    in the backend. We have to create it using a module that adds the attributes to
    the `customer` object. In this recipe, we will add a `loyaltynumber` field to
    the customer.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候，如果我们能像处理产品一样向客户添加属性，那就容易多了。这是可能的，但在后端没有添加属性的界面。我们必须使用一个模块来创建它，该模块将属性添加到`customer`对象中。在这个菜谱中，我们将添加一个`loyaltynumber`字段到客户。
- en: Getting ready
  id: totrans-184
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: For adding a `customer` attribute, the only task is to create an upgrade script
    which adds the attribute. Then, we have to link the attribute in the `form` table.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 要添加`customer`属性，唯一任务是创建一个添加属性的升级脚本。然后，我们必须在`form`表中链接属性。
- en: How to do it...
  id: totrans-186
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'Perform the following steps to add the `loyaltynumber` attribute to your customer
    objects:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤以将`loyaltynumber`属性添加到您的客户对象中：
- en: The first step is to create the upgrade script. In the previous chapters, we
    have created an `install` and `upgrade` script in the `app/code/local/Packt/Helloworld/sql/helloworld_setup`
    folder. Create an extra install script with the name `upgrade-002-003.php`.
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一步是创建升级脚本。在之前的章节中，我们在`app/code/local/Packt/Helloworld/sql/helloworld_setup`文件夹中创建了一个`install`和`upgrade`脚本。创建一个额外的安装脚本，命名为`upgrade-002-003.php`。
- en: 'To install the `customer` attribute, add the following code in that `install`
    script:'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要安装`customer`属性，在`install`脚本中添加以下代码：
- en: '[PRE25]'
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: This will add a `text` attribute to the `customer` entity.
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将为`customer`实体添加一个`text`属性。
- en: 'The previous code was to create the attribute for the customer. In this step,
    we will add the attribute to the customer form in the backend. We can do this
    by adding the following code under the `@todo` comment:'
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之前的代码是为了创建客户的属性。在这个步骤中，我们将属性添加到后端的客户表单中。我们可以通过在`@todo`注释下添加以下代码来完成：
- en: '[PRE26]'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: To execute the upgrade script, update the version number from `0.0.2` to `0.0.3`
    in `config.xml`.
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要执行升级脚本，将`config.xml`中的版本号从`0.0.2`更新到`0.0.3`。
- en: 'To run the script, clear the caches and reload the page. When you navigate
    to a customer in the backend, you will see that the attribute is added in the
    form as shown in the following screenshot:'
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要运行脚本，请清除缓存并重新加载页面。当您在后台导航到客户时，您将看到属性已按以下截图所示添加到表单中：
- en: '![How to do it...](img/3329OS_07_11.jpg)'
  id: totrans-196
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作...](img/3329OS_07_11.jpg)'
- en: How it works...
  id: totrans-197
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: The installation of the `customer` attribute works in the same way as adding
    a `product` attribute via code. The only big difference is the entity type. Adding
    the field to the backend form of a customer is not as easy as for a product. For
    a customer, the fields to be displayed in the form are stored in the `eav_form_attribute`
    table.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: '`customer`属性的安装方式与通过代码添加`product`属性相同。唯一的大区别是实体类型。将字段添加到客户的后台表单并不像添加产品那样简单。对于客户，要在表单中显示的字段存储在`eav_form_attribute`表中。'
- en: While rendering the form, Magento will get the data from this table and render
    the fields based on the configuration in the attribute. The customer address is
    another EAV entity related to the customer entity. Adding attributes to a customer
    address works in the same way as adding a customer entity.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 在渲染表单时，Magento将从该表中获取数据，并根据属性中的配置渲染字段。客户地址是与客户实体相关的另一个EAV实体。向客户地址添加属性的方式与添加客户实体相同。
- en: Working with source models
  id: totrans-200
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用源模型
- en: Magento works with a lot of drop-down fields that you can select in the forms
    of the application. Also, we can make use of drop-down fields in our custom fields.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: Magento与许多下拉字段一起工作，您可以在应用程序的表单中选择这些字段。此外，我们还可以在我们的自定义字段中使用下拉字段。
- en: A drop-down or multiselect field always has options that you can choose in this
    field. To render these options, Magento uses a class that returns the options.
    Such a class is called a **source model**.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 下拉或多选字段总是有可以在该字段中选择选项。为了渲染这些选项，Magento使用一个返回选项的类。这样的类被称为**源模型**。
- en: In this recipe, we will see which source models Magento uses and how we can
    create a custom source model for a custom configuration field.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将了解Magento使用的源模型以及如何为自定义配置字段创建自定义源模型。
- en: Getting ready
  id: totrans-204
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: For this recipe, we will create a source model that is linked to a custom configuration
    field. This is done in the `Packt_Helloworld` module, which we will extend in
    this recipe.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个菜谱，我们将创建一个与自定义配置字段链接的源模型。这是在`Packt_Helloworld`模块中完成的，我们将在本菜谱中扩展它。
- en: How to do it...
  id: totrans-206
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: The following steps describe how you can create your own source models for your
    form fields.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤描述了如何为表单字段创建自己的源模型。
- en: 'The first thing that we have to create is a configuration field of the type
    drop-down. This has the same syntax as a normal configuration. In the `system.xml`
    file of the `Packt_Helloworld` module, add the following configuration under the
    `<fields>` tag:'
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们必须首先创建的是一个下拉类型的配置字段。这与正常配置的语法相同。在`Packt_Helloworld`模块的`system.xml`文件中，在`<fields>`标签下添加以下配置：
- en: '[PRE27]'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Clear your cache and go to the configuration page. You will see that there
    is an additional drop-down field without options. To create the options, we have
    to link a source model to it. The next code adds a **Yes**/**No** option to the
    field. Add this under the `is_enabled` tag:'
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 清除缓存并转到配置页面。您将看到有一个没有选项的下拉字段。要创建选项，我们必须将源模型链接到它。以下代码向字段添加了**是**/**否**选项。在`is_enabled`标签下添加此代码：
- en: '[PRE28]'
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'To create our own source model, we have to create a `Model` instance. Create
    the `Packt_Helloworld_Model_Source_Config_Relation` class. We can do this by creating
    a `Relation.php` file in the `app/code/local/Packt/Helloworld/Model/Source/Config`
    folder. Add the following content to that file:'
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要创建我们自己的源模型，我们必须创建一个`Model`实例。创建`Packt_Helloworld_Model_Source_Config_Relation`类。我们可以通过在`app/code/local/Packt/Helloworld/Model/Source/Config`文件夹中创建一个`Relation.php`文件来实现。将以下内容添加到该文件中：
- en: '[PRE29]'
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'To link the previously created source model to the block, we have to change
    the `source_model` line in the `system.xml` file. Change the line to the following:'
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要将之前创建的源模型链接到块，我们必须更改`system.xml`文件中的`source_model`行。将行更改为以下内容：
- en: '[PRE30]'
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Clear your cache and you will see that the options of the field are changed
    based on the output from the source model, as shown in the following screenshot:'
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 清除缓存后，您将看到字段的选项已根据源模型的输出更改，如图所示：
- en: '![How to do it...](img/3329OS_07_12.jpg)'
  id: totrans-217
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作...](img/3329OS_07_12.jpg)'
- en: How it works...
  id: totrans-218
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: 'A source model is a model instance with a `toOptionArray()` function. This
    function returns an array with all the items of the source array. This array has
    the following format:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 源模型是一个具有`toOptionArray()`函数的模型实例。此函数返回一个包含源数组中所有项目的数组。此数组具有以下格式：
- en: '[PRE31]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: The `value` key is the value of the `<option>` in the drop-down list. The `label`
    key is the text that appears in the drop-down list.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '`value`键是下拉列表中`<option>`的值。`label`键是出现在下拉列表中的文本。'
- en: 'In this recipe, we configured a source model for a configuration field. We
    can also use source models in the following cases:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个配方中，我们为配置字段配置了一个源模型。我们还可以在以下情况下使用源模型：
- en: The product attribute in the backend
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 后端的产品属性
- en: The customer attribute in the backend
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 后端中的客户属性
- en: The additional backend form
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 后端表单的附加信息
- en: The drop-down filter in backend grids
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 后端网格中的下拉筛选器
- en: The configuration of the source model is mostly done in the configuration of
    the field. For EAV forms, the information of the source model is stored in the
    attribute configuration that is in the database.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 源模型的配置主要是在字段的配置中完成的。对于EAV表单，源模型的信息存储在数据库中的属性配置中。
- en: When a drop-down or multiselect field is saved, it is always saved in a single
    field of the database. If a field is a drop-down, a value will be stored in that
    field. When the field is a multiselect field, a comma-separated list of the selected
    values will be saved in that field.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 当保存下拉或多选字段时，它总是保存在数据库的单个字段中。如果一个字段是下拉字段，则在该字段中存储一个值。当字段是多选字段时，所选值的逗号分隔列表将保存在该字段中。
