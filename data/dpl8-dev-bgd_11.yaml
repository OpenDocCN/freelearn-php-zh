- en: Chapter 11. Searching Your Site with the Search API Module
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 11 章. 使用 Search API 模块在您的网站上搜索
- en: '*In this chapter, we are going to look at a more powerful and flexible replacement
    for the search module that comes packaged with Drupal core. We''ll walk through
    the installation of the Apache Solr search server and look at ways of enhancing
    the user''s search experience.*'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '*在本章中，我们将探讨一个更强大、更灵活的搜索模块替代品，该模块包含在 Drupal 核心中。我们将介绍 Apache Solr 搜索服务器的安装，并探讨增强用户搜索体验的方法。*'
- en: 'In this chapter, we will learn:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习：
- en: How to choose a suitable search configuration for your needs
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何根据您的需求选择合适的搜索配置
- en: Installing and configuring the Search API module to replace the Drupal core
    search
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装和配置 Search API 模块以替换 Drupal 核心搜索
- en: Installing and configuring the Apache Solr search server using two different
    methods
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用两种不同的方法安装和配置 Apache Solr 搜索服务器
- en: Setting up a search server and a search index using the Search API module
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Search API 模块设置搜索服务器和搜索索引
- en: Creating custom faceted search blocks to enhance the user's search experience
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建自定义的细分搜索块以增强用户的搜索体验
- en: The Drupal core search
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Drupal 核心搜索
- en: Like Drupal 7, Drupal 8 core comes packaged with its own built-in search module.
    This provides usable search functionality by querying the Drupal database directly.
    The Drupal core search allows you to search for user profiles and for node content.
    It periodically queries the database to maintain an index of content without requiring
    any prior configuration.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 与 Drupal 7 类似，Drupal 8 核心自带内置的搜索模块。通过直接查询 Drupal 数据库，它提供了可用的搜索功能。Drupal 核心搜索允许您搜索用户资料和节点内容。它定期查询数据库以维护内容索引，无需任何先前的配置。
- en: 'The Drupal search may be fine for your needs if you only require basic search
    functionality and you don''t have a large amount of site traffic. However, it
    has several functional limitations which include the following:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您只需要基本搜索功能且网站流量不大，Drupal 搜索可能适合您的需求。然而，它有几个功能限制，包括以下内容：
- en: It uses the Drupal database to carry out its queries, placing extra load on
    the database which may already be a performance bottleneck on your site
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它使用 Drupal 数据库来执行其查询，这可能会给数据库增加额外的负载，而数据库可能已经是您网站上性能瓶颈的一部分
- en: It's not possible to control which nodes are indexed for the search
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无法控制哪些节点被索引以供搜索
- en: The content is always indexed based on the default display mode of each node
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内容始终根据每个节点的默认显示模式进行索引
- en: The search only matches whole keywords for nodes
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 搜索只匹配节点的完整关键词
- en: If you mind about any of these limitations, you should switch to using the Search
    API module.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您介意这些限制中的任何一项，您应该切换到使用 Search API 模块。
- en: As well as allowing additional control over how your content is searched and
    indexed, the Search API module gives you the option of taking a load off the Drupal
    database by integrating with a third-party search engine.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 除了允许对内容搜索和索引方式有更多的控制外，Search API 模块还提供了通过集成第三方搜索引擎来减轻 Drupal 数据库负载的选项。
- en: If the complexity of your site or the amount of traffic it gets has increased
    to a point to which the performance of the database is becoming a bottleneck,
    you'll need to use the Search API module in conjunction with a third party search
    engine so that the Drupal database is left to concentrate on other things. Apache
    Solr is an example of a third party search engine which we'll use in this chapter.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您网站或其流量增加的复杂性已经达到数据库性能成为瓶颈的程度，您需要使用 Search API 模块与第三方搜索引擎结合使用，以便让 Drupal 数据库专注于其他事情。Apache
    Solr 是我们将在本章中使用的第三方搜索引擎的一个例子。
- en: The Search API module
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Search API 模块
- en: The Search API module ([http://www.drupal.org/project/search_api](http://www.drupal.org/project/search_api))
    replaces the Drupal core search with a framework that can be used with different
    kinds of underlying search engines. The search engines exist as third parties
    independent of the Drupal site and its database.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: Search API 模块（[http://www.drupal.org/project/search_api](http://www.drupal.org/project/search_api)）用可以与不同类型的底层搜索引擎一起使用的框架替换了
    Drupal 核心搜索。搜索引擎作为独立于 Drupal 网站及其数据库的第三方存在。
- en: 'Thomas Seidl (also known as "drunken monkey") is one of the main contributors
    to the Search API module. This is how he explained its origins:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 托马斯·赛德尔（也被称为“醉酒的猴子”）是 Search API 模块的主要贡献者之一。这是他对其起源的解释：
- en: '*"Search API was created in 2010\. I was involved in discussions about how
    to improve Drupal''s core search module and turn it into more of a framework for
    Drupal 8\. The problem was that there was no search framework in Drupal and all
    search-related modules had to include the same boilerplate code over and over.
    I took the best parts of that discussion and turned them into a contributed module
    and search framework for Drupal 7."*'
  id: totrans-21
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*"搜索API是在2010年创建的。我参与了有关如何改进Drupal核心搜索模块并将其转变为Drupal 8框架的讨论。问题是Drupal中没有搜索框架，所有与搜索相关的模块都必须反复包含相同的样板代码。我取了那次讨论的最好部分，并将其转化为Drupal
    7的贡献模块和搜索框架。"*'
- en: The Search API module can be extended with other contributed modules to provide
    very powerful search functionality. Search API also integrates with the Views
    module, which allows you to create Views listing pages based on search terms entered
    by the user.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 搜索API模块可以通过其他贡献的模块进行扩展，以提供非常强大的搜索功能。搜索API还与视图模块集成，这使得您可以根据用户输入的搜索词创建视图列表页面。
- en: The Apache Solr search engine we'll use later is open source, fast, and has
    many features. However, in place of a search engine, we also have the option of
    continuing to query the Drupal database with the Search API module. This has the
    advantage that we can set up any complex configuration we require based on the
    Search API without installing a search engine in our development environment.
    Then, when we deploy our site to a production environment we can swap to using
    a search engine with minimal re-configuration.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们稍后将要使用的Apache Solr搜索引擎是开源的、快速的，并且具有许多功能。然而，在不使用搜索引擎的情况下，我们也有继续使用搜索API模块查询Drupal数据库的选项。这有一个优点，即我们可以根据搜索API设置任何所需的复杂配置，而无需在我们的开发环境中安装搜索引擎。然后，当我们将网站部署到生产环境时，我们可以切换到使用搜索引擎，并且最小化重新配置。
- en: We'll start by setting up the Search API module to search using the Drupal database.
    This will allow us to explore some of the features and concepts that the Search
    API module provides. Later on, we'll swap to using the Apache Solr search engine
    with Search API and explore some more powerful search functionality.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先设置搜索API模块以使用Drupal数据库进行搜索。这将使我们能够探索搜索API模块提供的一些功能和概念。稍后，我们将切换到使用Apache
    Solr搜索引擎与搜索API，并探索一些更强大的搜索功能。
- en: Time for action – basic installation and configuration of the Search API module
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 - 搜索API模块的基本安装和配置
- en: 'In the following steps, we''ll download, install, and configure the Search
    API module:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下步骤中，我们将下载、安装和配置搜索API模块：
- en: 'First, download the `search_api` module using the method that you''re used
    to. If you have Drush installed, as explained in the *Mobile First, Responsive
    Design* section of [Chapter 5](ch05.html "Chapter 5. Theming in Drupal 8"), *Theming
    in Drupal 8*, you''ll be able to type the following at the command line:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，使用您习惯的方法下载`search_api`模块。如果您已安装Drush，如第5章中“移动优先，响应式设计”部分所述，您将能够在命令行中键入以下内容：
- en: '[PRE0]'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Before we go further, we should follow Drupal's suggestion to uninstall the
    core search module which the Search API module replaces.![Time for action – basic
    installation and configuration of the Search API module](img/4659_11_01.jpg)
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我们继续之前，我们应该遵循Drupal的建议卸载被搜索API模块替换的核心搜索模块。![行动时间 - 搜索API模块的基本安装和配置](img/4659_11_01.jpg)
- en: 'You''ll be notified of this via a command line message if you install the module
    via Drush, or the message will appear on the **Status Report** page at **Reports**
    | **Status report**. Disabling the core search module will remove the search block
    as well as the search pages for content and users. Don''t panic, we''ll replace
    them. To install the core search module with drush, type:'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您通过Drush安装模块，您将通过命令行消息得到通知，或者该消息将出现在**报告** | **状态报告**的**状态报告**页面上。禁用核心搜索模块将删除搜索块以及内容和用户的搜索页面。不要慌张，我们将替换它们。要使用drush安装核心搜索模块，请键入：
- en: '[PRE1]'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Search API does not do anything on its own - we need to give it a search engine
    to interact with. To do this, we'll use a submodule that you will have downloaded
    as part of `search_api` called `search_api_db`. Enable it now using the method
    that you're used to.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 搜索API本身并不做任何事情——我们需要给它一个搜索引擎来交互。为此，我们将使用一个子模块，您将作为`search_api`的一部分下载，称为`search_api_db`。现在使用您习惯的方法启用它。
- en: The `search_api_db` module allows the Search API to interact directly with the
    Drupal database. This has the advantage of being simple to set up, and on small
    sites where the database does not already have significant load on it, you can
    use this method of search on the production server.
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`search_api_db`模块允许搜索API直接与Drupal数据库交互。这具有设置简单、易于配置的优点，在小型网站上，如果数据库本身没有显著的负载，您可以在生产服务器上使用这种方法进行搜索。'
- en: The `search_api_db` module contains a very handy submodule which sets up some
    sensible default configuration. You can then use this configuration as the basis
    of your search setup. To take advantage of this, enable `search_api_db_defaults`
    and then disable it again. All the configuration happens when the module is initially
    enabled and will remain when you disable the module.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`search_api_db`模块包含一个非常实用的子模块，该子模块设置了一些合理的默认配置。然后您可以使用这个配置作为您搜索设置的起点。为了利用这一点，启用`search_api_db_defaults`，然后再次禁用它。所有配置都是在模块最初启用时发生的，并在您禁用模块时保持不变。'
- en: If you now navigate to **Configuration** | **Search and metadata** | **Search
    API**, you should see a screen similar to the following:![Time for action – basic
    installation and configuration of the Search API module](img/4659_11_02.jpg)
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您现在导航到**配置** | **搜索和元数据** | **搜索API**，您应该会看到一个类似于以下屏幕的界面：![执行时间 – 搜索API模块的基本安装和配置](img/4659_11_02.jpg)
- en: '*What just happened?*'
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚才发生了什么？*'
- en: You downloaded and installed the Search API module and used one of its submodules
    to install some default configuration. We can now see that this configuration
    includes a search server and a search index, and we'll examine what this means.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 您下载并安装了搜索API模块，并使用其子模块之一安装了一些默认配置。现在我们可以看到这个配置包括一个搜索服务器和一个搜索索引，我们将探讨这意味着什么。
- en: In the next few sections, we'll review some aspects of the default settings
    that have been set up by the `search_api_db_defaults` module. Note that some of
    these settings and screen layouts may change in subsequent versions of the modules
    that we're using. We won't cover all the settings, but hopefully enough to give
    you a good start in customizing the settings to your own needs.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的几节中，我们将回顾由`search_api_db_defaults`模块设置的默认设置的一些方面。请注意，我们使用的一些设置和屏幕布局可能在后续版本的模块中发生变化。我们不会涵盖所有设置，但希望足以让您开始根据自己的需求定制设置。
- en: An explanation of search servers and search indexes
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 搜索服务器和搜索索引的解释
- en: In Drupal terminology, a search server defines how searchable data is indexed.
    This includes the way in which it is queried on your Drupal site and how the search
    index is stored. These things are dictated by the *backend* that you choose to
    give your search server. In this chapter, we'll be looking at search servers that
    use the Drupal database as a backend and the Apache Solr search engine as a backend.
    However, there are other backends that you can use which will define other ways
    in which your data is queried and indexed.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在Drupal术语中，搜索服务器定义了可搜索数据的索引方式。这包括在您的Drupal网站上如何查询它以及搜索索引是如何存储的。这些事情是由您为搜索服务器选择的*后端*决定的。在本章中，我们将探讨使用Drupal数据库作为后端和Apache
    Solr搜索引擎作为后端的搜索服务器。然而，您还可以使用其他后端，这将定义您的数据如何被查询和索引的其他方式。
- en: The search index defines the indexing process. The search index is associated
    with a search server that you previously configured to power it. The search index
    settings dictate things such as the types of content that gets indexed on your
    site, the fields that are indexed, and various ways the data is processed before,
    during, and after the search.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 搜索索引定义了索引过程。搜索索引与一个之前配置好的用于提供动力的搜索服务器相关联。搜索索引设置决定了诸如在您的网站上哪些内容被索引、哪些字段被索引以及数据在搜索前后处理的各种方式。
- en: By splitting the configuration up into a search server and a search index, it
    is possible to swap out the search engine that performs the work whilst maintaining
    the way the data is queried and indexed. This is a little akin to being able to
    swap the petrol engine in your car for a diesel one whilst maintaining everything
    else about the way it looks and feels to drive.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将配置拆分为搜索服务器和搜索索引，可以在保持数据查询和索引方式的同时更换执行工作的搜索引擎。这有点类似于能够在保持车辆外观和驾驶感受不变的情况下，将您的汽车汽油发动机更换为柴油发动机。
- en: It's also possible to have more than one search server and choose which one
    is most appropriate to use, depending on the point you're at in site development
    or which of your environments you're working in.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 还有可能有多个搜索服务器，并选择在网站开发中的哪个阶段或你正在工作的哪个环境中使用最合适的搜索服务器。
- en: To extend the search configuration even further, it is also possible to have
    multiple search indexes. Imagine a future in which your recipe site is so popular
    that you start selling cookery books of your recipes on your site. You may want
    to have a separate search index that contains only details of the books, so that
    when users type `India` in a separate search box, they only see cookery books
    related to Indian cooking in the search result. Both your search indexes could
    still be based on the search server with the Apache Solr backend.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 为了进一步扩展搜索配置，也可以有多个搜索索引。想象一下，未来的某个时刻，你的食谱网站如此受欢迎，以至于你开始在网站上销售你的食谱书籍。你可能希望有一个单独的搜索索引，只包含书籍的详细信息，这样当用户在单独的搜索框中输入`印度`时，他们只会在搜索结果中看到与印度烹饪相关的烹饪书籍。你的两个搜索索引仍然可以基于具有Apache
    Solr后端的搜索服务器。
- en: Search server
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 搜索服务器
- en: Having configured the Search API module in the previous steps, the first item
    you'll see listed on the Search API configuration table is a search server named
    Database Server. As the name suggests, this is a search server based on the Drupal
    database as the backend.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一步配置了搜索API模块后，你将在搜索API配置表中看到第一个列出的是名为数据库服务器的搜索服务器。正如其名所示，这是一个基于Drupal数据库作为后端的服务器。
- en: 'Click on **Edit** in the operations column and you will be taken to the Database
    Server configuration:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在操作列中点击**编辑**，你将被带到数据库服务器配置：
- en: '![Search server](img/4659_11_03.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![搜索服务器](img/4659_11_03.jpg)'
- en: The server configuration is fairly self-explanatory. A server has a name and
    it should be enabled via the checkbox. It also has a backend, which in this case
    is Database and is provided by our `search_api_db` module. You can also set the
    minimum number of letters in words that will be used in a search.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器配置相当直观。服务器有一个名称，并且应该通过复选框启用。它还有一个后端，在这个例子中是数据库，由我们的`search_api_db`模块提供。你还可以设置用于搜索的单词的最小字母数。
- en: Next up, we'll look at the configuration for default content index.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将查看默认内容索引的配置。
- en: Search index
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 搜索索引
- en: 'We now require our search index settings. Configuration for the search index
    is also on the Search API page at **Configuration** | **Search and metadata**
    | **Search API**. Click on **Edit** next to the **Default content index** to see
    the configuration page:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在需要我们的搜索索引设置。搜索索引的配置也在搜索API页面的**配置** | **搜索和元数据** | **搜索API**。点击**默认内容索引**旁边的**编辑**，以查看配置页面：
- en: '![Search index](img/4659_11_04.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![搜索索引](img/4659_11_04.jpg)'
- en: You'll see that there are a number of data sources available for indexing. We're
    not just limited to users and node content as we were with the Drupal core search.
    For now we'll only index content, as it's already selected in the default configuration
    we installed.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 你会看到有多个数据源可供索引。我们不仅仅限于用户和节点内容，就像我们在Drupal核心搜索中做的那样。目前我们只索引内容，因为默认配置中已经选择了它。
- en: You'll note also that the search index is linked to a search server by way of
    a radio button selection. The **Server** field is set to **Database Server** in
    this case, as that's the only one we have set up so far.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 你还会注意到搜索索引是通过单选按钮选择与搜索服务器链接的。在这种情况下，**服务器**字段设置为**数据库服务器**，因为我们目前只设置了这一个。
- en: Fields
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 字段
- en: 'Next, move on to the **Fields** tab at the top of the page. This is where we
    set which fields on each of the data sources actually get indexed:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，转到页面顶部的**字段**标签页。这是我们设置每个数据源上哪些字段实际上会被索引的地方：
- en: '![Fields](img/4659_11_05.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![字段](img/4659_11_05.jpg)'
- en: Inside the **general** table, you'll see **Item language** and **Rendered item**
    listed. These are properties that are common to all types of searchable data sources.
    The **Rendered item** field allows you to go to a full text search based on what
    an entity looks like when rendered in Drupal.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在**常规**表中，你会看到**项目语言**和**渲染项**列出。这些是所有可搜索数据源共有的属性。**渲染项**字段允许你根据实体在Drupal中渲染的样子进行全文搜索。
- en: In the **CONTENT** table further down the page, you'll see fields that are common
    to nodes. For each field on the field configuration page, you can set the boost
    value, which controls the relative significance that a search match in that field
    is given when it comes to ordering the search results.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在页面底部的**内容**表中，你会看到节点共有的字段。对于字段配置页面上的每个字段，你可以设置提升值，这控制了在排序搜索结果时，该字段中的搜索匹配项的相对重要性。
- en: Processors
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 处理器
- en: Processors act on data or the query at different points during the search and
    indexing process, and make alterations. Processes have their own tab on the search
    index where they can be configured.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 处理器在搜索和索引过程中的不同点对数据或查询进行操作，并做出更改。进程有自己的标签页，可以在其中进行配置。
- en: '![Processors](img/4659_11_06.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![处理器](img/4659_11_06.jpg)'
- en: 'Half way down this page, you see the processor order table which allows you
    to control the order in which the processors run:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在页面中间，你可以看到处理器顺序表，它允许你控制处理器运行的顺序：
- en: '![Processors](img/4659_11_07.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![处理器](img/4659_11_07.jpg)'
- en: For example, the **Rendered item** processor, that assembles the whole entity
    to be searched, has to be run before the data gets indexed. Processors such as
    the highlight that gets put on the results of the search to show the term you
    searched for happens after the query is executed, so you will note that this is
    in the **POSTPROCESS QUERY** section.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，**渲染项**处理器，它将整个要搜索的实体组装起来，必须在数据被索引之前运行。像高亮显示这样的处理器，它将显示在搜索结果上以显示你搜索的术语，是在查询执行之后发生的，所以你会注意到这一点位于**后处理查询**部分。
- en: If you're making changes to processors, pay special attention to the **Processor
    settings** in the vertical tabs at the bottom of the page. This is where the exact
    behavior of each processor is configured. If enabled processors aren't behaving
    exactly as you expect them to, it's these settings which should be your first
    port of call.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在修改处理器，请特别注意页面底部的垂直标签页中的**处理器设置**。这是配置每个处理器确切行为的地方。如果启用的处理器没有按照你预期的行为，那么这些设置应该是你的首要考虑。
- en: '![Processors](img/4659_11_08.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![处理器](img/4659_11_08.jpg)'
- en: Populating your search index
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 填充你的搜索索引
- en: Now that we've set up our search backend and search index, we need to use them
    to index the content on our site.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经设置了我们的搜索后端和搜索索引，我们需要使用它们来索引我们网站上的内容。
- en: Bulk indexing of your content can be performed by clicking on the **Index now**
    button at the foot of the **Default content index view** tab. You'll see a blue
    progress bar to show progress as your content is indexed and then you'll be returned
    to the content index view tab.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过点击**默认内容索引视图**标签页底部的**立即索引**按钮来执行内容的批量索引。当你内容被索引时，你会看到一个蓝色进度条来显示进度，然后你会返回到内容索引视图标签页。
- en: 'Content can also be indexed during a `cron` run. One way to trigger a `cron`
    run is with the `drush` command:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在`cron`运行期间也可以索引内容。触发`cron`运行的一种方法是通过`drush`命令：
- en: '[PRE2]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The number of content nodes that are indexed each time `cron` runs is 50 by
    default. If you have 50 items of content or less, the blue progress bar should
    show 100 percent after one `cron` run. If you have more content, you might have
    to run `cron` a few times before it is all indexed. You can adjust the number
    of nodes that are indexed on each `cron` run (that is, the `cron` batch size)
    on the **Edit** tab of your search settings. Scroll to the bottom of the page
    and expand the **Index Options** where you''ll be able to adjust this value:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 每次运行`cron`时索引的内容节点数默认为50。如果你有50个或更少的内容项，蓝色进度条应该在一次`cron`运行后显示100%。如果你有更多内容，你可能需要运行几次`cron`才能全部索引。你可以在搜索设置的**编辑**标签页上调整每次`cron`运行要索引的节点数（即`cron`批量大小）。滚动到页面底部并展开**索引选项**，你将能够调整此值：
- en: '![Populating your search index](img/4659_11_09.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![填充你的搜索索引](img/4659_11_09.jpg)'
- en: Whether you ran `cron` or clicked on the **Index now** button, your content
    should now be indexed.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你是运行了`cron`还是点击了**立即索引**按钮，你的内容现在应该已经被索引。
- en: 'You''ll note that there are some links at the bottom of the content index view
    tab that provide some extra control over the indexation of your content:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到在内容索引视图标签页的底部有一些链接，可以提供一些额外的控制来管理你的内容索引：
- en: '**Queue all items for reindexing** marks all the currently indexed items of
    content as ready to be indexed again the next time `cron` runs or you click on
    **Index now**. Until content re-indexing is triggered, the current search index
    will continue to be used. This helps deliver uninterrupted searching for your
    users, even when content must be re-indexed.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**将所有项目排队以重新索引**将当前索引的内容项标记为准备好在下次`cron`运行或您点击**立即索引**时再次索引。在内容重新索引被触发之前，当前搜索索引将继续被使用。这有助于确保用户在内容必须重新索引时也能不间断地进行搜索。'
- en: '**Clear all indexed data** makes the current search index immediately unavailable
    and searches will stop yielding results until content is re-indexed.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**清除所有索引数据**将当前搜索索引立即变为不可用，并且搜索将停止产生结果，直到内容被重新索引。'
- en: Exposing the search to users
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向用户展示搜索
- en: So now we have a search index with content in it, but how do we actually allow
    the end users to perform a search on our Drupal site?
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们现在有一个包含内容的搜索索引，但如何实际上允许最终用户在我们的Drupal网站上执行搜索呢？
- en: One of the features of Search API is that it integrates well with the Views
    module. This means that you can search content using the search server you set
    up and display it in a view. The `search_api_db_defaults` module that you used
    earlier provides some views configuration which implements the search index and
    search server that was configured.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 搜索API的一个特性是它与视图模块很好地集成。这意味着您可以使用您设置的搜索服务器搜索内容，并在视图中显示它。您之前使用的`search_api_db_defaults`模块提供了一些视图配置，实现了配置的搜索索引和搜索服务器。
- en: To see this View, go to `/search/content` on your site. Try searching the content
    for a certain word and check that you get sensible results. You should find that
    if you have two items of content, one of which has your search keyword in the
    title and one in the body text, that the search results are ordered according
    to the boost values that you set in the **Fields** tab of your search index settings
    section earlier. By default, the title field has a boost value of eight while
    the rendered item has a boost value of one. Therefore, content that has your keyword
    in its title should appear before content that has your keyword in its body or
    elsewhere.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看此视图，请访问您网站上的`/search/content`。尝试搜索特定单词的内容，并检查您是否得到合理的结果。您应该会发现，如果您有两个内容项，其中一个标题中有您的搜索关键字，另一个在正文文本中有，搜索结果将根据您在之前搜索索引设置部分的**字段**选项卡中设置的增强值进行排序。默认情况下，标题字段的增强值为八，而渲染项的增强值为一。因此，标题中包含您的关键字的
    内容应该出现在正文或其它地方包含您的关键字的 内容之前。
- en: In order to better replicate the Drupal core search functionality that we disabled
    earlier in favor of the Search API, it would be nice to have a search field that
    we can display site-wide so that users don't need to navigate to `/search/content`
    to perform a search.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地复制我们之前为了使用搜索API而禁用的Drupal核心搜索功能，有一个可以显示在全站范围内的搜索字段会很好，这样用户就不需要导航到`/search/content`来执行搜索。
- en: 'To achieve this, we''ll expose the search form in a block. Navigate to **Structure**
    | **Views** and click on the **Edit** button next to the **Search content** view.
    Expand the **Advanced** section and toggle **Exposed form in block** from **No**
    to **Yes**. Click on the **Save** button:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现这一点，我们将以块的形式显示搜索表单。导航到**结构** | **视图**，然后点击**搜索内容**视图旁边的**编辑**按钮。展开**高级**部分，将**块中显示表单**从**否**切换到**是**。点击**保存**按钮：
- en: '![Exposing the search to users](img/4659_11_10.jpg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![向用户展示搜索](img/4659_11_10.jpg)'
- en: 'The exposed search field that appears at the top of our new search results
    page is now available in a block that we can configure to appear on pages on our
    site. Go to **Structure** | **Block layout** and click on **Place block** next
    to the region you want to place it in. Somewhere in the list that appears, you
    will see the block **Exposed form: search_content-page_1**. Configure the block
    settings in the usual way:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 出现在我们新搜索结果页面顶部的暴露搜索字段现在可以在一个我们可以配置以出现在我们网站页面上的块中。转到**结构** | **块布局**，然后点击您想要放置该块的区域的**放置块**旁边的按钮。在出现的列表中，您将看到块**暴露表单：search_content-page_1**。以通常的方式配置块设置：
- en: '![Exposing the search to users](img/4659_11_11.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![向用户展示搜索](img/4659_11_11.jpg)'
- en: You should now have a sitewide search block that replaces the core search block
    that we removed.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在应该有一个全站搜索块，它替换了我们之前移除的核心搜索块。
- en: Altering the search display
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 修改搜索显示
- en: One advantage of Search API is that the way each item in your search results
    is displayed can be controlled with your content type display settings. You will
    note that the search content view uses a node display mode of **Search result
    highlighting input**.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 搜索API的一个优点是，你可以通过内容类型显示设置来控制搜索结果中每个项目的显示方式。你会注意到搜索内容视图使用的是**搜索结果高亮输入**的节点显示模式。
- en: '![Altering the search display](img/4659_11_12.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![修改搜索显示](img/4659_11_12.jpg)'
- en: This is a node display mode which is supplied by **search_api_db_defaults**.
    You can change the settings of this display mode from the settings of each content
    type.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个由**search_api_db_defaults**提供的节点显示模式。你可以从每个内容类型的设置中更改此显示模式的设置。
- en: 'Go to **Structure** | **Content types**, choosing the content type whose display
    settings you''d like to change, and then go to tab **Manage display** | **Search
    result highlighting input**:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 前往**结构** | **内容类型**，选择你想要更改显示设置的特定内容类型，然后转到标签**管理显示** | **搜索结果高亮输入**：
- en: '![Altering the search display](img/4659_11_13.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![修改搜索显示](img/4659_11_13.jpg)'
- en: Try changing the fields from your content type that are displayed in the search
    results. For example, try hiding the image and setting the **Body format** to
    **Trimmed** with a trimmed limit of 400 characters.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试更改在搜索结果中显示的内容类型的字段。例如，尝试隐藏图片并将**正文格式**设置为**截断**，截断限制为400个字符。
- en: 'You should now get search results as something similar to the following screenshot:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在应该得到类似以下截图的搜索结果：
- en: '![Altering the search display](img/4659_11_14.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![修改搜索显示](img/4659_11_14.jpg)'
- en: Excluding entities from being indexed
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 排除实体不被索引
- en: With the configuration we've set up so far, all the nodes on your site will
    be indexed and will be searchable. What if we'd like to choose whether individual
    recipes we create on our site should appear in the search results or not. Perhaps
    we'd like to create promotional links to special recipes that are not available
    through a site search, for example.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已设置的配置将使你网站上的所有节点都被索引并可搜索。如果我们想选择是否将我们在网站上创建的个别菜谱显示在搜索结果中，会怎样呢？也许我们想创建指向特殊菜谱的促销链接，这些菜谱无法通过网站搜索获得。
- en: 'Well, there''s a contributed module for that called Search API Exclude Entity
    ([https://www.drupal.org/project/search_api_exclude_entity](https://www.drupal.org/project/search_api_exclude_entity)).
    When you download and install it, you''ll find that there is an additional field
    type available that can be added to your nodes and other entities. If you add
    this field to your recipe content type, then when you next create or edit a recipe,
    you''ll note that there are some extra metadata options that appear on the recipe
    edit screen:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 嗯，有一个名为Search API Exclude Entity的模块可以做到这一点（[https://www.drupal.org/project/search_api_exclude_entity](https://www.drupal.org/project/search_api_exclude_entity)）。当你下载并安装它时，你会发现有额外的字段类型可以添加到你的节点和其他实体中。如果你将此字段添加到你的菜谱内容类型中，那么当你下次创建或编辑菜谱时，你会在菜谱编辑屏幕上注意到一些额外的元数据选项：
- en: '![Excluding entities from being indexed](img/4659_11_36.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![排除实体不被索引](img/4659_11_36.jpg)'
- en: 'Next, go to the **Processors** configuration on your search index: **Configuration**
    | **Search and metadata** | **Search API**. Click on **Edit** next to the **Default
    content index** to see the configuration page, then choose the **Processors**
    tab. You''ll see that you have a new Search API Exclude Entity that can be enabled.
    Once you''ve enabled this processor, scroll down to the **Processor settings**
    section at the bottom of the screen and check the checkbox next to the field name
    that you just added to your content type.'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，前往你的搜索索引的**处理器**配置：**配置** | **搜索和元数据** | **搜索API**。点击**默认内容索引**旁边的**编辑**，查看配置页面，然后选择**处理器**标签。你会看到有一个新的搜索API排除实体可以启用。一旦启用了此处理器，滚动到屏幕底部的**处理器设置**部分，并检查你刚刚添加到内容类型中的字段名称旁边的复选框。
- en: Try creating a new recipe and excluding it from the search. Check that all your
    content has been indexed and then do a search for your new recipe. You should
    find that it doesn't appear in the search results.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试创建一个新的菜谱并将其排除在搜索之外。检查所有内容是否已被索引，然后搜索你的新菜谱。你应该会发现它没有出现在搜索结果中。
- en: Installing Apache Solr as the search backend
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Apache Solr作为搜索后端
- en: The main reason for using Search API over the core search module is that we
    can plug in different search engines and use them to index your content. This
    really becomes an advantage when we start working with a large site that contains
    a lot of content.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 使用搜索 API 而不是核心搜索模块的主要原因是我们可以插入不同的搜索引擎并使用它们来索引你的内容。当我们开始处理包含大量内容的网站时，这确实成为一种优势。
- en: Apache Solr is an open source search engine used by many high profile enterprise
    level sites. It is not part of Drupal or a Drupal module and is very often used
    independently of Drupal. However, it integrates well with the Drupal Search API
    module, as we'll see.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: Apache Solr 是一个开源搜索引擎，被许多知名企业级网站使用。它不是 Drupal 或 Drupal 模块的一部分，并且通常独立于 Drupal
    使用。然而，它与 Drupal 搜索 API 模块很好地集成，正如我们将看到的。
- en: 'Solr has the following advantages over using the Search API with the database:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 与使用数据库的搜索 API 相比，Solr 具有以下优势：
- en: It's faster
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它更快
- en: It does not rely on your Drupal database, freeing up database resources for
    Drupal to do the rest of its work with
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它不依赖于你的 Drupal 数据库，从而为 Drupal 释放数据库资源以完成其余工作
- en: It can be hosted on a server separate from your database and your code base
    which is useful when you need to scale your infrastructure
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它可以托管在独立于你的数据库和代码库的服务器上，这在需要扩展你的基础设施时非常有用。
- en: You can search for phrases and use wildcards
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以搜索短语并使用通配符
- en: We'll examine these same defaults later in this chapter. Meanwhile, if you'd
    like more information on the Apache Solr project, see its website at [http://lucene.apache.org/solr/](http://lucene.apache.org/solr/).
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本章后面检查这些相同的默认设置。同时，如果你想了解更多关于 Apache Solr 项目的信息，请访问其网站 [http://lucene.apache.org/solr/](http://lucene.apache.org/solr/)。
- en: There are a few different ways to install Solr. Here, we'll explain two methods,
    one using a virtual machine and a puppet script, and one more manual method using
    an Ubuntu 14.04 server.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 Solr 有几种不同的方法。在这里，我们将解释两种方法，一种使用虚拟机和 puppet 脚本，另一种更手动的方法使用 Ubuntu 14.04 服务器。
- en: Note
  id: totrans-115
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you follow either of these methods, Apache Solr does not block unauthorized
    users from accessing your Solr server by default. If you are setting up a Solr
    server outside your local machine, or that can be connected to over the Internet,
    it is extremely important that you employ some method of securing Apache Solr.
    Otherwise, unauthorized users will be able to make search queries and possibly
    even compromise your website in other ways. See the section *Securing Apache Solr
    with Uncomplicated Firewall* in this chapter to learn how to secure Solr.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你遵循这两种方法中的任何一种，Apache Solr 默认不会阻止未经授权的用户访问你的 Solr 服务器。如果你在本地机器之外设置 Solr 服务器，或者可以通过互联网连接，那么使用某种方法来保护
    Apache Solr 非常重要。否则，未经授权的用户将能够进行搜索查询，甚至可能以其他方式损害你的网站。请参阅本章的 *使用 Uncomplicated
    Firewall 保护 Apache Solr* 部分，了解如何保护 Solr。
- en: Installing Solr 4.x on a virtual machine with Vagrant and Puppet
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在使用 Vagrant 和 Puppet 的虚拟机上安装 Solr 4.x
- en: This is a quick and easy method of setting up a disposable virtual machine that
    you can use locally for development purposes. It will behave exactly the same
    as a Solr instance on a real server that you can go on to set up later if you
    want.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个快速简单的方法来设置一个可丢弃的虚拟机，你可以用于本地开发目的。它将表现得与真实服务器上的 Solr 实例完全相同，你可以稍后设置它。
- en: A useful online service for generating Puppet deployment configuration was introduced
    in [Chapter 1](ch01.html "Chapter 1. Setting Up a Drupal Development Environment"),
    *Setting Up a Drupal Development Environment*. This tool is called PuPHPet—Puppet
    with a capital PHP in the middle to denote that it is primarily intended for PHP
    web development. At the time of writing, the latest version of Apache Solr to
    be available on PuPHPet ([https://puphpet.com/](https://puphpet.com/)) was 4.10.*.
    Therefore, these instructions will assume that you're using the 4.x version of
    Solr.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第 1 章](ch01.html "第 1 章。设置 Drupal 开发环境")中介绍了用于生成 Puppet 部署配置的有用在线服务，*设置 Drupal
    开发环境*。这个工具叫做 PuPHPet——中间的 PHP 字母大写以表明它主要用于 PHP 网络开发。在撰写本文时，PuPHPet 上可用的 Apache
    Solr 最新版本是 4.10.*。因此，以下说明将假设你正在使用 Solr 的 4.x 版本。
- en: If you really need the latest and greatest version of Solr, you can skip to
    the next section where we'll explain how to install Solr manually on an Ubuntu
    14.04 server.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你真的需要 Solr 的最新和最佳版本，你可以跳到下一节，我们将解释如何在 Ubuntu 14.04 服务器上手动安装 Solr。
- en: Time for action – creating and configuring your virtual machine
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 动手时间 - 创建和配置你的虚拟机
- en: The following steps will use an online service to create a Puppet script that
    you can use with Vagrant to launch a virtual machine locally. Puppet, Vagrant,
    and the PuPHPet site were introduced in [Chapter 1](ch01.html "Chapter 1. Setting
    Up a Drupal Development Environment"), *Setting Up a Drupal Development Environment*
    of this book. If you haven't already got Puppet and Vagrant set up locally, follow
    the instructions there to get them working.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将使用在线服务创建一个你可以使用Vagrant在本地启动虚拟机的Puppet脚本。Puppet、Vagrant和PuPHPet网站在本书的[第1章](ch01.html
    "第1章。设置Drupal开发环境")中介绍，*设置Drupal开发环境*。如果你还没有在本地设置Puppet和Vagrant，请按照那里的说明来设置它们。
- en: Create your VM at PuPHPet. Point your browser at [https://puphpet.com/](https://puphpet.com/)
    and click the big green **Get started right away** button:![Time for action –
    creating and configuring your virtual machine](img/4659_11_15.jpg)
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在PuPHPet上创建你的虚拟机。将你的浏览器指向[https://puphpet.com/](https://puphpet.com/)并点击那个大绿色的**立即开始**按钮：![操作时间
    – 创建和配置你的虚拟机](img/4659_11_15.jpg)
- en: During the wizard that you'll be guided through, you can generally accept the
    default options. Just make sure that when you get to the **Search Servers** section
    you choose to install the latest 4.* version of Apache Solr. We'll also glance
    at a couple of other options here for creating a nice, clean virtual machine that
    you can use time and time again.
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在你将被引导的向导过程中，你通常可以接受默认选项。只需确保当你到达**搜索服务器**部分时，你选择安装最新的4.*版本的Apache Solr。我们还将快速查看这里的一些其他选项，以创建一个干净、可重复使用的虚拟机。
- en: 'On the first page of the wizard after you''ve clicked on the **Get started**
    button, make sure you have **Deploy to Local Host** checked, along with VirtualBox
    as the provider. We''ll also select Ubuntu Trusty 14.04 LTS x64 as the Distro:'
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在点击**开始**按钮后的向导的第一页，确保你已经勾选了**部署到本地主机**，并且选择VirtualBox作为提供者。我们还将选择Ubuntu Trusty
    14.04 LTS x64作为发行版：
- en: '![Time for action – creating and configuring your virtual machine](img/4659_11_16.jpg)'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![操作时间 – 创建和配置你的虚拟机](img/4659_11_16.jpg)'
- en: If you scroll further down this page, you'll find options for setting an **Internal
    Identifier**, **Hostname**, and **IP Address**. You may want to change these if
    you have other virtual machines already running and need to distinguish this one
    from the others.
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你继续向下滚动这个页面，你会找到设置**内部标识符**、**主机名**和**IP地址**的选项。如果你已经运行了其他虚拟机并且需要区分它们，你可能想要更改这些设置。
- en: '![Time for action – creating and configuring your virtual machine](img/4659_11_17.jpg)'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![操作时间 – 创建和配置你的虚拟机](img/4659_11_17.jpg)'
- en: It's also important that you have a folder that will be shared between your
    physical host machine and the virtual machine you are creating. By default, this
    is configured for you.
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 同样重要的是，你有一个文件夹，它将在你的物理主机机器和你创建的虚拟机之间共享。默认情况下，这是为你配置好的。
- en: Follow the wizard using the big green buttons at the bottom of the screen and
    accept the defaults for the rest of the **System** section.
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用屏幕底部的绿色大按钮遵循向导，并接受**系统**部分的其余默认设置。
- en: When you get to the **Web Servers** section, you can deselect both Apache and
    Nginx (Apache Solr doesn't require either of them). All the options can also be
    deselected in the **Languages and Databases** sections—Solr does not require any
    of these.
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当你到达**Web服务器**部分时，你可以取消选择Apache和Nginx（Apache Solr不需要它们中的任何一个）。在**语言和数据库**部分的所有选项也可以取消选择——Solr不需要这些中的任何一个。
- en: 'Keep moving through the wizard, continuing to accept the further defaults until
    you get to **Search Servers**. Choose **Apache Solr** and select the latest version
    from the drop-down box:'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 继续通过向导前进，继续接受进一步的默认设置，直到你到达**搜索服务器**。选择**Apache Solr**并从下拉框中选择最新版本：
- en: '![Time for action – creating and configuring your virtual machine](img/4659_11_18.jpg)'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![操作时间 – 创建和配置你的虚拟机](img/4659_11_18.jpg)'
- en: Download and set up your virtual machine. Now you can hit the **Create Archive**
    button to download a ZIP file containing the Puppet configuration you've just
    set up.
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载并设置你的虚拟机。现在你可以点击**创建存档**按钮下载一个包含你刚刚设置的Puppet配置的ZIP文件。
- en: 'As previously explained in [Chapter 1](ch01.html "Chapter 1. Setting Up a Drupal
    Development Environment"), *Setting Up a Drupal Development Environment*, you
    can now run your virtual machine by extracting the ZIP archive, navigating to
    the extracted folder at your command line (which will contain a file called `Vagrantfile`),
    and typing:'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如前所述，在 [第 1 章](ch01.html "第 1 章。设置 Drupal 开发环境") “设置 Drupal 开发环境”中，您现在可以通过解压
    ZIP 存档，在命令行中导航到解压的文件夹（其中将包含一个名为 `Vagrantfile` 的文件），并键入以下命令来运行您的虚拟机：
- en: '[PRE3]'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: It will take a little while the first time you start the virtual machine because
    it has to download a large disk image containing the operating system. During
    this process you should get some verbose output at your command line, informing
    you of what is happening.
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 第一次启动虚拟机时需要一些时间，因为它需要下载包含操作系统的大型磁盘镜像。在此过程中，您应该在命令行中收到一些详细的输出，告知您正在发生的事情。
- en: If everything ran correctly, you should now be able to open a browser and navigate
    to `http://localhost:8983/solr`. If this doesn't work, check that the port number
    is correct by scrolling back through the output at your command line and checking
    which local port has been forwarded to `8983`, the Apache Solr port.
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果一切运行正确，您现在应该能够打开浏览器并导航到 `http://localhost:8983/solr`。如果不起作用，请通过滚动回您的命令行输出并检查哪个本地端口已转发到
    `8983`（Apache Solr 端口）来检查端口号是否正确。
- en: 'Here''s what you should now see in your browser:'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您现在应该在浏览器中看到以下内容：
- en: '![Time for action – creating and configuring your virtual machine](img/4659_11_19.jpg)'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间 – 创建和配置您的虚拟机](img/4659_11_19.jpg)'
- en: Install the Drupal schema. Apache Solr is now installed on your virtual machine
    and you can connect to it through your browser. Congratulations!
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 Drupal 架构。Apache Solr 现已安装到您的虚拟机中，您可以通过浏览器连接到它。恭喜！
- en: It's not going to be of much use though unless we give it some content to index
    and search. We need to connect it to our Drupal site. The first step to doing
    this is to install the correct configuration files that tell Solr how to index
    Drupal content.
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 但除非我们给它一些要索引和搜索的内容，否则它将没有太大用处。我们需要将其连接到我们的 Drupal 网站。完成此操作的第一步是安装正确的配置文件，这些文件告诉
    Solr 如何索引 Drupal 内容。
- en: Download and extract the `search_api_solr` module for Drupal 8\. Put it in the
    `/modules` folder of your site, but don't enable it just yet. The configuration
    files required for the Vagrant Solr instance can be found in the Drupal `search_api_solr`
    module at `search_api_solr/solr-conf/4.x`.
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 下载并解压 Drupal 8 的 `search_api_solr` 模块。将其放入您网站的 `/modules` 文件夹中，但暂时不要启用它。Vagrant
    Solr 实例所需的配置文件可以在 Drupal 的 `search_api_solr` 模块中的 `search_api_solr/solr-conf/4.x`
    找到。
- en: To copy these files to your virtual machine, copy the `4.x` folder into the
    `puphpet` folder, which sits in the same folder as the Vagrantfile that you extracted
    earlier.
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要将这些文件复制到您的虚拟机中，请将 `4.x` 文件夹复制到之前提取的 Vagrantfile 所在的 `puphpet` 文件夹中。
- en: 'Next, SSH into your virtual machine by navigating to the folder that contains
    Vagrantfile and typing:'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 接下来，通过导航到包含 Vagrantfile 的文件夹并在其中键入以下命令来 SSH 进入您的虚拟机：
- en: '[PRE4]'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: You will be logged in to your virtual machine over SSH, just as though it was
    a remote server.
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您将通过 SSH 登录到您的虚拟机，就像它是一个远程服务器一样。
- en: 'The `puphpet` folder you copied the configuration into is shared between the
    physical host machine and the virtual machine. You can find the `4.x` folder at
    `/var/www/puphpet/4.x` on the virtual machine. First, back up the original Solr
    configuration and then move the new configuration into your Solr instance at `/opt/solr/solr-4.10.2/example/solr/collection1/conf`:'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您复制的配置文件所在的 `puphpet` 文件夹在物理主机机器和虚拟机之间是共享的。您可以在虚拟机上的 `/var/www/puphpet/4.x`
    找到 `4.x` 文件夹。首先，备份原始 Solr 配置，然后将新配置移动到您的 Solr 实例中的 `/opt/solr/solr-4.10.2/example/solr/collection1/conf`：
- en: '[PRE5]'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Now we'll restart Solr. An easy way to do this is just to restart our entire
    virtual machine.
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，我们将重新启动 Solr。一个简单的方法是直接重新启动整个虚拟机。
- en: 'Next, exit the SSH terminal:'
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 接下来，退出 SSH 终端：
- en: '[PRE6]'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Then stop the virtual machine:'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后停止虚拟机：
- en: '[PRE7]'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Then start it up again:'
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后再次启动它：
- en: '[PRE8]'
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Check that everything worked correctly by visiting the Solr admin page again
    in your browser.
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过在浏览器中再次访问 Solr 管理页面来检查一切是否运行正确。
- en: '![Time for action – creating and configuring your virtual machine](img/4659_11_20.jpg)'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间 – 创建和配置您的虚拟机](img/4659_11_20.jpg)'
- en: Select **collection1** from the dropdown in the sidebar and then click on **Schema
    Browser** at the bottom of the sidebar. In the dropdown that then appears in the
    main content area of the page, you should see a bunch of Drupal related **fields**,
    **bundle_name**, **entity_id**, **entity_type**, and so on.
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从侧边栏的下拉菜单中选择 **collection1**，然后点击侧边栏底部的 **Schema Browser**。在随后出现在页面主要内容区域的下拉菜单中，您应该会看到一些与
    Drupal 相关的 **字段**、**bundle_name**、**entity_id**、**entity_type** 等等。
- en: Next, you'll need to enable and configure the `seach_api_solr` module in Drupal.
    To do this now, skip to the section. The Search API Solr module.
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 接下来，您需要在 Drupal 中启用和配置 `seach_api_solr` 模块。要执行此操作，请跳转到“搜索 API Solr 模块”部分。
- en: '*What just happened?*'
  id: totrans-161
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚才发生了什么？*'
- en: You used Vagrant and Puppet to set up a virtual machine running Apache Solr.
    You then configured your Solr server to work with Drupal by installing the configuration
    file that comes with the Drupal Search API Solr module. This virtual machine configuration
    can be reused again and again whilst you're experimenting and developing with
    Apache Solr.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 您使用 Vagrant 和 Puppet 来设置运行 Apache Solr 的虚拟机。然后，您通过安装随 Drupal 搜索 API Solr 模块提供的配置文件来配置
    Solr 服务器以与 Drupal 一起工作。当您在 Apache Solr 上进行实验和开发时，此虚拟机配置可以反复使用。
- en: Installing Solr 5.x manually on Ubuntu 14.04
  id: totrans-163
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 Ubuntu 14.04 上手动安装 Solr 5.x
- en: 'This is the method to use if any of the following apply:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 如果以下任何一项适用，请使用此方法：
- en: You want a later version of Apache Solr than is available on PuPHPet
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您希望拥有比 PuPHPet 上可用的 Apache Solr 更新的版本
- en: You need Solr to run on a server outside your local machine
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您需要在本地机器之外的服务器上运行 Solr
- en: You want more control over the installation process
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您希望在安装过程中有更多的控制权
- en: These instructions will assume that you are installing Solr 5.x on an Ubuntu
    4.x box. This could be the same server that your site is running on, or one dedicated
    to Solr.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 这些说明将假设您正在 Ubuntu 4.x 箱子上安装 Solr 5.x。这可能就是您的网站正在运行的服务器，或者是一个专门用于 Solr 的服务器。
- en: The version of Solr that is available in the Ubuntu package repository is one
    major version before the current one. Rather than simply using Ubuntu's apt package
    manager tool to install the earlier version, we will follow a method that allows
    us to install the latest 5.x version of Solr.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: Ubuntu 软件仓库中可用的 Solr 版本比当前版本低一个主要版本。我们不会简单地使用 Ubuntu 的 apt 软件包管理工具来安装早期版本，而是会遵循一种允许我们安装最新
    5.x 版本 Solr 的方法。
- en: Time for action – installing and configuring Solr on Ubuntu
  id: totrans-170
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 是时候采取行动——在 Ubuntu 上安装和配置 Solr
- en: 'First, we''ll install some required packages and then we''ll manually install
    the latest version of Solr from the Apache Solr site:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将安装一些必需的软件包，然后从 Apache Solr 网站手动安装最新版本的 Solr：
- en: 'Install required packages. First, use `apt-get` to ensure you have the `python-software-properties`
    package available. This will allow you to add a new package repository:'
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装必需的软件包。首先，使用 `apt-get` 确保您有 `python-software-properties` 软件包可用。这将允许您添加一个新的软件包仓库：
- en: '[PRE9]'
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Now, add the unofficial Java installer repository:'
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，添加非官方的 Java 安装程序仓库：
- en: '[PRE10]'
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Confirm that you want to add this repository when prompted and then update
    the list of source packages:'
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当提示时，确认您想要添加此仓库，然后更新源软件包列表：
- en: '[PRE11]'
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'We can now install the Oracle Java JDK Version 8:'
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们现在可以安装 Oracle Java JDK 版本 8：
- en: '[PRE12]'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: This is an Oracle package and you will have to agree to the license terms in
    order to proceed. Just press *Enter* when prompted.
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是一个 Oracle 软件包，您必须同意许可条款才能继续。当提示时，只需按 *Enter* 键。
- en: Run the Apache Solr installer. Now that we have the Java JDK installed, we can
    install the latest version of Apache Solr. Go to the list of mirrors available
    to download Solr from [http://www.apache.org/dyn/closer.lua/lucene/solr/](http://www.apache.org/dyn/closer.lua/lucene/solr/).
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行 Apache Solr 安装程序。现在我们已经安装了 Java JDK，我们可以安装 Apache Solr 的最新版本。转到可从 [http://www.apache.org/dyn/closer.lua/lucene/solr/](http://www.apache.org/dyn/closer.lua/lucene/solr/)
    下载 Solr 的镜像列表。
- en: Choose a mirror and then choose the latest directory with a version number that
    starts with `5.*`.
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 选择一个镜像，然后选择以 `5.*` 开头的最新版本号目录。
- en: Next, right-click the latest `.tgz` file whose name does not contain `src` and
    copy the link to it. At the time of writing, this was `solr-5.5.0.tgz`, where
    the version number appears in the commands below, replace with the version you
    have downloaded.
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 接下来，右键单击最新版本的 `.tgz` 文件（文件名中不包含 `src`），并复制其链接。在撰写本文时，这是 `solr-5.5.0.tgz`，下面的命令中的版本号将替换为您下载的版本。
- en: 'Back at the command line of the server you are installing Solr on, download
    the file to your home folder and untar it:'
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 回到您正在安装 Solr 的服务器的命令行，将文件下载到您的家目录，并解压它：
- en: '[PRE13]'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Solr 5.x comes with its own installer script which makes it easier to set up
    than the previous versions. We''ll run the script as follows:'
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Solr 5.x 附带自己的安装脚本，这使得它比以前的版本更容易设置。我们将按以下方式运行脚本：
- en: '[PRE14]'
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'When it starts up, Solr will output the port number that it is running on,
    usually `8983`. Open a browser window and navigate to the IP address of your server
    followed by the port number. For example: `http://<Server IP address>:8983`.'
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当它启动时，Solr 将输出它正在运行的端口号，通常是 `8983`。打开浏览器窗口，导航到服务器的 IP 地址后跟端口号。例如：`http://<服务器
    IP 地址>:8983`。
- en: 'You should see the Solr admin screen as follows:'
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您应该会看到以下 Solr 管理界面：
- en: '![Time for action – installing and configuring Solr on Ubuntu](img/4659_11_21.jpg)'
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![是时候采取行动——在 Ubuntu 上安装和配置 Solr](img/4659_11_21.jpg)'
- en: Note
  id: totrans-191
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Ensure you pay special attention to the following section in this chapter *Securing
    Apache Solr with Uncomplicated Firewall* to ensure there is no unauthorized access
    to your Solr interface.
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 确保您特别注意本章的以下部分 *使用简单防火墙保护 Apache Solr*，以确保没有未经授权的访问您的 Solr 接口。
- en: Install the Drupal schema. Apache Solr is now installed on your virtual machine
    and you can connect to it through your browser. Congratulations!
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 Drupal 架构。Apache Solr 现已安装到您的虚拟机中，您可以通过浏览器连接到它。恭喜！
- en: It's not going to be of much use though unless we give it some content to index
    and search. We need to connect it to our Drupal site. The first step to doing
    this is to install the correct configuration files that tell Solr how to index
    Drupal content.
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然而，除非我们给它一些内容来索引和搜索，否则它将没有太大用处。我们需要将其连接到我们的 Drupal 网站。完成此操作的第一步是安装正确的配置文件，这些文件告诉
    Solr 如何索引 Drupal 内容。
- en: 'The configuration files required to make Solr work with Drupal can be found
    in the `search_api_solr` module. Navigate to the module page on Drupal to get
    the link to the latest packaged `tar.gz` file. Download it to your Apache Solr
    server and extract the files:'
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使 Solr 与 Drupal 一起工作的所需配置文件可以在 `search_api_solr` 模块中找到。导航到 Drupal 上的模块页面以获取最新打包的
    `tar.gz` 文件的链接。将其下载到您的 Apache Solr 服务器并解压文件：
- en: '[PRE15]'
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: You will have to replace the filenames in the preceding commands with the filename
    of the latest version of the module.
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您将需要将前面命令中的文件名替换为模块的最新版本文件名。
- en: 'Next, create the directory that you will copy the Solr configuration files
    into:'
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 接下来，创建一个目录，您将复制 Solr 配置文件到该目录：
- en: '[PRE16]'
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Copy the files from the Drupal module into the Solr configuration directory:'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将 Drupal 模块中的文件复制到 Solr 配置目录：
- en: '[PRE17]'
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Set the correct ownership on the files:'
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 设置文件的正确所有权：
- en: '[PRE18]'
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Create a new Solr core:'
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 创建一个新的 Solr 核心库：
- en: '[PRE19]'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Restart the Solr service:'
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重新启动 Solr 服务：
- en: '[PRE20]'
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Navigate again to the Solr admin screen in your browser. In the **Core Selector**
    drop down in the sidebar, you should now have a core called **drupal**:'
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 再次在浏览器中导航到 Solr 管理界面。在侧边栏的 **核心选择器** 下拉菜单中，您现在应该有一个名为 **drupal** 的核心：
- en: '![Time for action – installing and configuring Solr on Ubuntu](img/4659_11_22.jpg)'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![是时候采取行动——在 Ubuntu 上安装和配置 Solr](img/4659_11_22.jpg)'
- en: '*What just happened?*'
  id: totrans-210
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: You installed the latest version of Apache Solr on Ubuntu using the package
    manager. This is the process you'll use when setting Solr up from scratch on a
    production server. Just make sure you secure it too!
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 您已使用包管理器在 Ubuntu 上安装了 Apache Solr 的最新版本。这是您在将 Solr 从头开始在生产服务器上设置时将使用的流程。只需确保您也保护它即可！
- en: Securing Apache Solr with Uncomplicated Firewall
  id: totrans-212
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用简单防火墙保护 Apache Solr
- en: It's very important that you secure Apache Solr to prevent outside access to
    it. If your Solr server is accessible over the Internet or even over your local
    network, you should employ a method of controlling unauthorized access to it.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 保护 Apache Solr 非常重要，以防止外部访问。如果您的 Solr 服务器可以通过互联网或甚至通过您的本地网络访问，您应该采用一种控制对它的未经授权访问的方法。
- en: Time for action – configuring Uncomplicated Firewall
  id: totrans-214
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 是时候采取行动——配置简单防火墙
- en: 'On Ubuntu, you can use the built in Uncomplicated Firewall tool to set access
    to the server at a firewall level:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Ubuntu 上，您可以使用内置的简单防火墙工具在防火墙级别设置对服务器的访问权限：
- en: 'Start by denying all access:'
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先拒绝所有访问：
- en: '[PRE21]'
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'However, we don''t want to break the SSH connection that we''re currently using,
    so make sure that we allow access for SSH connections:'
  id: totrans-218
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然而，我们不想打断我们目前正在使用的 SSH 连接，所以请确保我们允许 SSH 连接的访问：
- en: '[PRE22]'
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Also, we want to allow all connections from our local IP address:'
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此外，我们希望允许来自我们本地 IP 地址的所有连接：
- en: '[PRE23]'
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Here, `<ip address>` is the IP address of the machine you are connecting from.
    You will also want to add the IP address of your Drupal server here if it's different
    from your Solr server. Just run the preceding command again, changing the IP address
    to that of your Drupal server. For further details, see the Ubuntu UFW documentation
    at [https://help.ubuntu.com/community/UFW](https://help.ubuntu.com/community/UFW).
  id: totrans-222
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这里，`<IP地址>`是您连接的机器的IP地址。如果您要连接的Drupal服务器的IP地址与Solr服务器不同，您还需要在这里添加Drupal服务器的IP地址。只需再次运行前面的命令，将IP地址更改为您的Drupal服务器。有关更多详细信息，请参阅Ubuntu
    UFW文档：[https://help.ubuntu.com/community/UFW](https://help.ubuntu.com/community/UFW)。
- en: 'Now enable the firewall with the following settings:'
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在启用防火墙，使用以下设置：
- en: '[PRE24]'
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: You may receive a warning to say that the existing SSH commands may be disrupted.
    As long as you've allowed access for SSH connections with the command we ran earlier,
    you can proceed.
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可能会收到一个警告，表示现有的SSH命令可能会被中断。只要您已经使用我们之前运行的命令允许了SSH连接的访问，您就可以继续操作。
- en: 'Now check the status of your firewall:'
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在检查您的防火墙状态：
- en: '[PRE25]'
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'You should receive an output that looks as follows:'
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您应该会收到如下所示的输出：
- en: '[PRE26]'
  id: totrans-229
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'You should now be able to access the Solr admin interface from your local machine
    or network but not from anywhere else. Try navigating to the following URL: `http://<Server
    IP address>:8983`.'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你应该能够从您的本地机器或网络访问Solr管理界面，但不能从其他任何地方访问。尝试导航到以下URL：`http://<服务器IP地址>:8983`。
- en: '*What just happened?*'
  id: totrans-231
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚才发生了什么？*'
- en: You configured Ubuntu's Uncomplicated Firewall to allow access to your Solr
    installation only from a specific IP address.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 您已配置Ubuntu的简单防火墙，仅允许从特定的IP地址访问您的Solr安装。
- en: The Search API Solr module
  id: totrans-233
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 搜索API Solr模块
- en: 'Prior to Drupal 8, Drupal used a module that was independent of Search API
    to integrate with Apache Solr. This module was called Apache Solr Search. However,
    it was decided that the Search API would become the module on which to base all
    search integrations for Drupal 8\. A main contributor to both the Search API project
    and the earlier Apache Solr Search module for Drupal 7 is Nick Veenhof (also known
    as "Nick_vh" on Drupal.org). He explained the rationale behind making the Search
    API module a requirement of the new Search API Solr module:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 在Drupal 8之前，Drupal使用一个独立于搜索API的模块来与Apache Solr集成。该模块被称为Apache Solr搜索。然而，决定将搜索API作为Drupal
    8所有搜索集成的模块。Search API项目和早期Drupal 7的Apache Solr搜索模块的主要贡献者是Nick Veenhof（在Drupal.org上也被称为"Nick_vh")。他解释了将Search
    API模块作为新Search API Solr模块要求的理由：
- en: '*"Drupal 8 has also helped in forcing us to rethink certain concepts and also
    live up to our promise to avoid the divide we had in Drupal 7 between the Apache
    Solr Module and Search API. Search API will be the sole provider of Apache Solr
    integration in Drupal 8\. Search API in Drupal 8 ships with sane defaults (which
    you can enable or disable) that pre-configures the module so it can be used instantly."*'
  id: totrans-235
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*"Drupal 8还迫使我们重新思考某些概念，并履行我们避免在Drupal 7中Apache Solr模块和搜索API之间存在的分歧的承诺。Drupal
    8中的搜索API将作为Apache Solr集成的唯一提供者。Drupal 8中的搜索API带有合理的默认设置（您可以选择启用或禁用），这些设置预先配置了模块，使其可以立即使用。"*'
- en: Time for action – configuring Drupal to use Apache Solr
  id: totrans-236
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 - 配置Drupal以使用Apache Solr
- en: 'However you set up Apache Solr, you''ll now want to configure Drupal to use
    your new Solr server as your search server in Drupal:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 无论您如何设置Apache Solr，现在您都希望配置Drupal以使用您的新Solr服务器作为Drupal中的搜索服务器：
- en: 'Installing the Search API Solr module. First we need to install the `search_api_solr`
    module on our Drupal site. Download the module and extract it into the `/modules`
    folder of your Drupal site as usual. The module has some dependencies that are
    managed by composer, so navigate into the directory of your module and run:'
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装搜索API Solr模块。首先，我们需要在我们的Drupal网站上安装`search_api_solr`模块。下载模块并将其解压到您的Drupal网站的`/modules`文件夹中，就像平常一样。该模块有一些由composer管理的依赖项，因此请导航到您的模块目录并运行：
- en: '[PRE27]'
  id: totrans-239
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'At the time of writing, the development version of `search_api_solr` was required
    in order to fix some errors on the official alpha release displayed for download
    on the module page. To fetch this, it is best to use Git:'
  id: totrans-240
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在撰写本文时，为了修复在模块页面下载的官方alpha版本中显示的一些错误，需要使用`search_api_solr`的开发版本。为了获取这个版本，最好使用Git：
- en: '[PRE28]'
  id: totrans-241
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Configuring the Search API Solr module. When we installed the `search_api_db_defaults`
    module earlier on in this chapter, it created a search server based on the database
    for us.
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置搜索API Solr模块。当我们在本章早期安装`search_api_db_defaults`模块时，它为我们创建了一个基于数据库的搜索服务器。
- en: Now that we have the Search API Solr module installed, we can set up a second
    search server based on the Solr server.
  id: totrans-243
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在我们已经安装了Search API Solr模块，我们可以根据Solr服务器设置第二个搜索服务器。
- en: Navigate to **Configuration** | **Search and metadata** | **Search API** and
    click on the **Add Server** button.
  id: totrans-244
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 导航到**配置** | **搜索和元数据** | **搜索API**，然后单击**添加服务器**按钮。
- en: 'Fill in the form as shown next. The Solr path should be `/solr/` followed by
    the name of your core. This will be `drupal` if you followed the previous instructions
    to install Solr 5.x or `collection1` if you followed the instructions for installing
    Solr 4.x:'
  id: totrans-245
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 按照下面的示例填写表单。Solr路径应该是`/solr/`后跟您的核心名称。如果您按照之前的说明安装了Solr 5.x，这将将是`drupal`；如果您按照安装Solr
    4.x的说明操作，这将将是`collection1`：
- en: '![Time for action – configuring Drupal to use Apache Solr](img/4659_11_23.jpg)'
  id: totrans-246
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![操作时间 - 配置Drupal以使用Apache Solr](img/4659_11_23.jpg)'
- en: 'If you''ve secured the Solr admin interface using the firewall rules as explained
    in the previous section, you will not need to add login details for HTTP authentication.
    Leave this blank and click on **Save**:'
  id: totrans-247
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您已经使用上一节中解释的防火墙规则保护了Solr管理界面，您将不需要为HTTP身份验证添加登录详细信息。留空并单击**保存**：
- en: '![Time for action – configuring Drupal to use Apache Solr](img/4659_11_24.jpg)'
  id: totrans-248
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![操作时间 - 配置Drupal以使用Apache Solr](img/4659_11_24.jpg)'
- en: Now that you've created a second search server in the Drupal configuration,
    one of the advantages of the Search API module is that you can swap between them
    easily. You may want to dedicate your Solr server to the production site for example,
    but you still want to be able to perform searches for development purposes on
    your staging and development sites.
  id: totrans-249
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在您已经在Drupal配置中创建了第二个搜索服务器，Search API模块的一个优点是您可以轻松地在它们之间切换。例如，您可能希望将您的Solr服务器专用于生产站点，但您仍然希望在预发布和开发站点上能够进行开发目的的搜索。
- en: In development and staging environments, you can set your search index to use
    the database, and on the production environment, you can swap it to use Solr.
  id: totrans-250
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在开发和预发布环境中，您可以将搜索索引设置为使用数据库，而在生产环境中，您可以将它切换到使用Solr。
- en: 'Edit the default content index that you set up earlier in this chapter and
    change the **Server** radio button to **Solr**:'
  id: totrans-251
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 编辑本章中较早设置的默认内容索引，并将**服务器**单选按钮更改为**Solr**：
- en: '![Time for action – configuring Drupal to use Apache Solr](img/4659_11_25.jpg)'
  id: totrans-252
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![操作时间 - 配置Drupal以使用Apache Solr](img/4659_11_25.jpg)'
- en: Click on **Save** and then re-index your content. That's it! Go back to your
    search page and test out the new search, this time powered by Solr.
  id: totrans-253
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 单击**保存**，然后重新索引内容。就是这样！返回您的搜索页面并测试新的搜索，这次是由Solr提供支持。
- en: '*What just happened?*'
  id: totrans-254
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: You installed Drupal's Search API Solr module and configured it to connect to
    your Apache Solr installation via a new search server. You then connected your
    search index to the new search server and indexed your content using Solr.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 您已安装了Drupal的Search API Solr模块，并将其配置为通过新的搜索服务器连接到您的Apache Solr安装。然后，您将搜索索引连接到新的搜索服务器，并使用Solr索引了内容。
- en: Using the read-only mode
  id: totrans-256
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用只读模式
- en: In some situations, you may want to make your search index read-only. This can
    help if you implement a Drupal development workflow across several servers. For
    example, when you copy the Drupal database down from production to your staging
    and development environments in order to keep them updated with the latest content
    from your production site. Rather than create a new Apache Solr server for each
    of your environments, you'll want to use the same Apache Solr server but ensure
    that only content added to your production server gets indexed.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，您可能希望使搜索索引为只读模式。如果您在多个服务器上实施Drupal开发工作流程，这可能很有帮助。例如，当您将Drupal数据库从生产环境复制到您的预发布和开发环境以保持它们与生产站点的最新内容同步时。与其为每个环境创建一个新的Apache
    Solr服务器，您可能希望使用相同的Apache Solr服务器，但确保只有添加到您的生产服务器的内容被索引。
- en: 'On your staging and production environments, you can check the **Read only**
    checkbox in the **Index Options**. This will prevent any test content you create
    here making it into the Apache Solr index:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的预发布和生产环境中，您可以在**索引选项**中勾选**只读**复选框。这将防止您在此处创建的任何测试内容进入Apache Solr索引：
- en: '![Using the read-only mode](img/4659_11_35.jpg)'
  id: totrans-259
  prefs: []
  type: TYPE_IMG
  zh: '![使用只读模式](img/4659_11_35.jpg)'
- en: You should note that if you add a new content type to the system, you will need
    to ensure that the search index is not set to read only in order for the content
    type to be indexed. When the index is set to read-write (that is, the read only
    checkbox is unchecked), any new content created using your new content type will
    be automatically indexed as usual.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该注意，如果你向系统中添加新的内容类型，你需要确保搜索索引没有被设置为只读，以便内容类型可以被索引。当索引被设置为读写（即，取消选中只读复选框）时，使用你的新内容类型创建的任何新内容将像往常一样自动索引。
- en: Search facets
  id: totrans-261
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 搜索分面
- en: To further showcase the power of the Search API, we're going to create a facet
    block to accompany the search listing. You may be familiar with facet blocks from
    other websites that have a lot of categorized content to search and sort.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 为了进一步展示搜索API的强大功能，我们将创建一个与搜索列表一起使用的分面块。你可能熟悉来自其他网站的分面块，这些网站有大量分类内容可供搜索和排序。
- en: 'For example, here are some faceted search blocks from a popular recipe website:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，以下是一些来自流行食谱网站的分面搜索块：
- en: '![Search facets](img/4659_11_26.jpg)'
  id: totrans-264
  prefs: []
  type: TYPE_IMG
  zh: '![搜索分面](img/4659_11_26.jpg)'
- en: '[http://www.bbcgoodfood.com/search/recipes?query=family](http://www.bbcgoodfood.com/search/recipes?query=family)'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://www.bbcgoodfood.com/search/recipes?query=family](http://www.bbcgoodfood.com/search/recipes?query=family)'
- en: Time for action – building faceted search blocks
  id: totrans-266
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 - 构建分面搜索块
- en: 'Let''s look at how you can build one of these faceted search blocks using the
    Search API and the Drupal 8 facets module:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何使用搜索API和Drupal 8分面模块构建这些分面搜索块之一：
- en: Download and enable the facets module from ([https://www.drupal.org/project/facets](https://www.drupal.org/project/facets))
    in the way you're used to.
  id: totrans-268
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照你习惯的方式，从([https://www.drupal.org/project/facets](https://www.drupal.org/project/facets))下载并启用分面模块。
- en: Navigate to **Configuration** | **Search API** | **Facets** and click on the
    blue Add Facet button. As an example, we'll create a facet block that uses words
    from the titles of our recipes. However, if you have categorized your recipes
    using taxonomy terms, you could also base your facet block on that field.
  id: totrans-269
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到**配置** | **搜索API** | **分面**，然后点击蓝色的添加分面按钮。作为一个例子，我们将创建一个使用我们食谱标题中的单词的分面块。然而，如果你已经使用分类法术语对食谱进行了分类，你也可以基于该字段创建你的分面块。
- en: 'Give the facet a human readable name and a machine name:'
  id: totrans-270
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 给分面一个可读的人名和一个机器名：
- en: '![Time for action – building faceted search blocks](img/4659_11_27.jpg)'
  id: totrans-271
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间 - 构建分面搜索块](img/4659_11_27.jpg)'
- en: The facet block needs a source to get its data from. In the **Facet field**
    dropdown, you'll have one option which will be the search view that we created
    earlier. Set the **Facet field** to **Title** and the weight of the facet to `0`,
    then save the settings.
  id: totrans-272
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 分面块需要从一个源获取数据。在**分面字段**下拉菜单中，你将有一个选项，即我们之前创建的搜索视图。将**分面字段**设置为**标题**，并将分面的权重设置为`0`，然后保存设置。
- en: You can also configure the display settings of your facet by clicking the **Display**
    tab at the top of the page. Here, you can choose options such as whether to display
    your facet list as a dropdown, checkboxes, or list of links. You can also choose
    the way the facet list behaves, such as hiding items that will not narrow the
    currently displayed search results down any further. We're going to aim to make
    our facet list similar to the example at the start of this section. Therefore,
    we'll choose **List of links** as the **Widget** and we'll check **Hide non narrowing
    results**:![Time for action – building faceted search blocks](img/4659_11_28.jpg)
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你也可以通过点击页面顶部的**显示**选项卡来配置分面的显示设置。在这里，你可以选择是否将你的分面列表显示为下拉菜单、复选框或链接列表。你还可以选择分面列表的行为方式，例如隐藏不会进一步缩小当前显示的搜索结果的项目。我们的目标是使我们的分面列表类似于本节开头的示例。因此，我们将选择**链接列表**作为**小部件**，并勾选**隐藏非缩小结果**：![行动时间
    - 构建分面搜索块](img/4659_11_28.jpg)
- en: You have now created a facet which is related to a facet source. The facets
    table you now see at **Configuration** | **Search API** | **Facets** should look
    as follows:![Time for action – building faceted search blocks](img/4659_11_29.jpg)
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你已经创建了一个与分面源相关的分面。你现在在**配置** | **搜索API** | **分面**下看到的分面表应该如下所示：![行动时间 - 构建分面搜索块](img/4659_11_29.jpg)
- en: The facet you have created will manifest itself as a block. We'll make this
    block visible by placing it in a region in the usual way using the Block layout
    configuration at **Structure** | **Block layout**. Next to Sidebar first, click
    on the **Place block** button and search for your block in the list that pops
    up:![Time for action – building faceted search blocks](img/4659_11_30.jpg)
  id: totrans-275
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你创建的分面将表现为一个块。我们将通过在**结构** | **块布局**中使用块布局配置将其放置在区域中使其可见。在“侧边栏第一”旁边，点击**放置块**按钮，并在弹出的列表中搜索你的块：![动手实践
    – 构建分面搜索块](img/4659_11_30.jpg)
- en: The block will have the name that you gave the facet earlier in the configuration.
  id: totrans-276
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 块将具有你在配置中较早为面指定的名称。
- en: Click on **Place block**.
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**放置块**。
- en: In the block configuration screen, in the **Other facet** blocks field, select
    the radio button of the Facet you created:![Time for action – building faceted
    search blocks](img/4659_11_31.jpg)
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在块配置屏幕中，在**其他分面**块字段中，选择你创建的分面的单选按钮：![动手实践 – 构建分面搜索块](img/4659_11_31.jpg)
- en: Click on **Save block** and navigate to your search page at `/search/content`.
  id: totrans-279
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存块**并导航到你的搜索页面`/search/content`。
- en: You will have to ensure you have a few pieces of content on your site that have
    the same word in their title to show the power of facets. For example, I have
    three recipes with the word `awesome` in the title. To start with, the facet block
    lists all the discrete words in the titles of my recipes:![Time for action – building
    faceted search blocks](img/4659_11_32.jpg)
  id: totrans-280
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将必须确保你的网站上有一些建议的内容，它们的标题中包含相同的单词，以展示分面的功能。例如，我有三个标题中包含单词`awesome`的食谱。首先，分面块列出了我的食谱标题中的所有离散单词：![动手实践
    – 构建分面搜索块](img/4659_11_32.jpg)
- en: When I search for `awesome`, the search results and facet list are narrowed
    down:![Time for action – building faceted search blocks](img/4659_11_33.jpg)
  id: totrans-281
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当我搜索`awesome`时，搜索结果和分面列表被缩小：![动手实践 – 构建分面搜索块](img/4659_11_33.jpg)
- en: I can now click in the facet block on any of the other words that occur in titles
    that also have the word awesome in them. This makes it very easy to filter down
    to the search result that you are looking for:![Time for action – building faceted
    search blocks](img/4659_11_34.jpg)
  id: totrans-282
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我现在可以点击分面块中的任何其他单词，这些单词也出现在标题中，并且也包含单词`awesome`。这使得过滤到所需的搜索结果变得非常容易：![动手实践 –
    构建分面搜索块](img/4659_11_34.jpg)
- en: When you've built up a large amount of content on your site, your users will
    be able to search, filter, and explore using a powerful mix of keyword searches
    and filtering with facets.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在网站上积累了大量内容时，你的用户将能够通过关键词搜索和分面过滤的强大组合进行搜索、筛选和探索。
- en: '*What just happened?*'
  id: totrans-284
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚才发生了什么？*'
- en: You configured Drupal's Facet module to show a block containing search terms
    to filter by next to your search results. This allows your users to further refine
    their search by choosing from the list of search keywords in your content titles.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 你已配置Drupal的分面模块以显示一个包含搜索词的块，以便在搜索结果旁边进行筛选。这允许你的用户通过选择内容标题中的搜索关键词列表进一步细化他们的搜索。
- en: Have a go hero
  id: totrans-286
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 尝试英雄
- en: Try creating a taxonomy vocabulary for tagging your recipes with different categorizations.
    For example, cuisine, origin country, different dietary requirements, ease to
    make, or level of spice. Then create new facet blocks that allow your users to
    filter their search by each of these categories. For example, they may wish to
    start by searching for `rice`, then use facets to filter further by `Italian`,
    and finally `Vegetarian` to end up with a recipe for a tasty Asparagas risotto!
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试为你的食谱创建一个分类法词汇表，用于使用不同的分类进行标记。例如，菜系、起源国家、不同的饮食要求、制作难度或辣度级别。然后创建新的分面块，允许你的用户通过每个这些类别进行筛选。例如，他们可能希望从搜索`rice`开始，然后使用分面进一步筛选`意大利`，最后筛选`素食`以得到美味的芦笋烩饭！
- en: Pop quiz
  id: totrans-288
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 快速测验
- en: 'Q1\. Choose for which of the following you can use Uncomplicated Firewall for:'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: Q1. 选择以下哪些可以使用简单防火墙：
- en: To prevent remote access to a server from a certain IP address.
  id: totrans-290
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了防止从某个IP地址远程访问服务器。
- en: To stop users logging into your server with root access.
  id: totrans-291
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了阻止用户使用root权限登录你的服务器。
- en: To prevent a certain port being accessed on your server.
  id: totrans-292
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了防止你的服务器上的某个端口被访问。
- en: To display a welcome message to your users when they log into your server.
  id: totrans-293
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当用户登录你的服务器时显示欢迎信息。
- en: 'Q2\. Choose which of the following are valid reasons to use Apache Solr instead
    of a database-based search:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: Q2. 选择以下哪些是使用Apache Solr而不是数据库搜索的有效理由：
- en: You want to be able to search the titles of the nodes on your site as well as
    the body content.
  id: totrans-295
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您希望能够搜索您网站上节点的标题以及正文内容。
- en: Your site has a lot of visitors and the load on your Drupal database is often
    high.
  id: totrans-296
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您的网站有很多访客，并且您的 Drupal 数据库的负载经常很高。
- en: You want anonymous users and logged in users to be able to search on your site.
  id: totrans-297
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您希望匿名用户和登录用户都能在您的网站上搜索。
- en: You want to automatically suggest search terms to your users as they type in
    the search box.
  id: totrans-298
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您希望当用户在搜索框中输入时，能够自动建议搜索词。
- en: Summary
  id: totrans-299
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned about Drupal search concepts and how to configure
    a powerful and flexible search solution for visitors to find what they're looking
    for on your site. We introduced the Search API module and understood how it can
    be configured to work with the Drupal database. We then introduced the Apache
    Solr search engine and looked at the advantages of using this as a search engine
    instead of relying on the Drupal database. Finally, we learnt how to create a
    faceted search interface like that used by online shops or other sites with a
    large amount of content to search through.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了 Drupal 搜索概念以及如何为访客配置一个强大且灵活的搜索解决方案，以便他们在您的网站上找到他们想要的内容。我们介绍了搜索 API
    模块，并了解了它如何配置与 Drupal 数据库协同工作。然后，我们介绍了 Apache Solr 搜索引擎，并探讨了使用该引擎作为搜索引擎而不是依赖 Drupal
    数据库的优点。最后，我们学习了如何创建类似于在线商店或其他内容丰富的网站所使用的分面搜索界面。
- en: 'In the next chapter, we will explore one of the major new developer features
    in Drupal 8: built-in support for REST. We''ll develop an Angular JS app that
    will consume a REST API on our website.'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探讨 Drupal 8 中的一个主要新开发者功能：内置对 REST 的支持。我们将开发一个 Angular JS 应用程序，该应用程序将消费我们网站上的
    REST API。
