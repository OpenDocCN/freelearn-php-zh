- en: Chapter 5. Database Concepts
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第5章 数据库概念
- en: 'In this chapter, we will cover:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖：
- en: Finding your way in the tables
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在表中找到你的方向
- en: Creating a database connection in Magento
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Magento中创建数据库连接
- en: Working with flat tables
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用平面表
- en: Working with EAV tables
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用EAV表
- en: Configuring a Master/Slave setup
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置主/从设置
- en: Repairing the database
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修复数据库
- en: Introduction
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: Magento has a very large database model to store all kinds of information. There
    are many Magento modules. Every module has its own tables in the database. A naming
    convention is used to provide a good overview in the database. Some modules use
    a flat database model (one table per entity), while other modules use the **EAV**
    (**Entity Attribute Value**) database model. The recipes in this chapter will
    cover the most important things you need to know when you are working with a database.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Magento有一个非常大的数据库模型来存储各种信息。有许多Magento模块。每个模块在数据库中都有自己的表。使用命名约定可以在数据库中提供良好的概览。一些模块使用平面数据库模型（每个实体一个表），而其他模块使用**EAV**（**实体属性值**）数据库模型。本章中的食谱将涵盖你在与数据库一起工作时需要了解的最重要的事情。
- en: Finding your way in the tables
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在表中找到你的方向
- en: When you look at the tables, you will realize that the number of tables is very
    high. In a standard installation, there are more than 300 database tables. A structured
    naming convention is needed to find your way in this maze of tables.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 当你查看表时，你会意识到表的数目非常高。在一个标准安装中，有超过300个数据库表。需要一个结构化的命名约定来在这个表的迷宫中找到你的方向。
- en: Getting ready
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In this recipe, we will make some queries to the database to get an idea of
    the tables and their purpose.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个食谱中，我们将对数据库进行一些查询，以了解表及其用途。
- en: Here, you have to firstly make a connection with your database client using
    **phpMyAdmin**.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你首先需要使用**phpMyAdmin**与你的数据库客户端建立连接。
- en: How to do it...
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'In the next steps, we will learn some methods to familiarize you with the database
    model in Magento:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的步骤中，我们将学习一些方法，帮助你熟悉Magento中的数据库模型：
- en: 'Get a list of the core modules. You can do this by running the `ls –l` command
    in the `app/code/core/Mage` folder. This will give you the following output:'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取核心模块的列表。你可以在`app/code/core/Mage`文件夹中运行`ls –l`命令来做到这一点。这将给出以下输出：
- en: '[PRE0]'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Run the `SHOW TABLES` command on your database. This will give the following
    result in phpMyAdmin:![How to do it...](img/3329OS_05_01.jpg)
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的数据库上运行`SHOW TABLES`命令。这将在phpMyAdmin中给出以下结果：![如何操作...](img/3329OS_05_01.jpg)
- en: Compare the first part of the table names with the module list. You will see
    that the name of every table starts with the name of the module.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将表名的第一部分与模块列表进行比较。你会发现每个表的名字都是以模块的名字开头的。
- en: Go to phpMyAdmin and navigate to the **Designer** tab of the database. This
    page will render a database schema with all the database tables in Magento.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开phpMyAdmin并导航到数据库的**设计器**选项卡。这个页面将渲染一个包含所有数据库表的数据库模式，这些表都在Magento中。
- en: You can limit the result by checking the tables you want to see in the left
    column. Uncheck all the tables and check the core tables. These are the tables
    starting with `core_*`. This will give you an overview of the relationships between
    the core tables, as shown in the following screenshot:![How to do it...](img/3329OS_05_03.jpg)
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以通过在左侧列中检查你想要看到的表来限制结果。取消选择所有表并选择核心表。这些表以`core_*`开头。这将给出核心表之间关系的概览，如下截图所示：![如何操作...](img/3329OS_05_03.jpg)
- en: In the previous screenshot, we see that there are a lot of relations starting
    from the `core_store` table. Let's have a look at the structure of this table.
    You can do this by clicking on the **Relation view** link in the **Structure**
    tab of the `core_store` table. This gives the following output:![How to do it...](img/3329OS_05_04.jpg)
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在上一张截图，我们看到从`core_store`表开始有很多关系。让我们看看这个表的结构。你可以通过点击`core_store`表的`结构`选项卡中的**关系视图**链接来做到这一点。这将给出以下输出：![如何操作...](img/3329OS_05_04.jpg)
- en: How it works...
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: The Magento database is just like any database with tables and relations between
    them. The difficulty is that there are so many tables that make a simple overview
    very difficult.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Magento数据库就像任何带有表和它们之间关系的数据库一样。困难的是，有如此多的表使得简单的概览变得非常困难。
- en: You don't need to know the whole structure of the database while working. With
    the **Designer** option in phpMyAdmin, you can show the tables you want to see.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在工作过程中，你不需要知道数据库的整个结构。使用phpMyAdmin中的**设计器**选项，你可以显示你想要看到的表。
- en: Most of the tables in the database represent entities in Magento. These entities
    (models) are connected with the database using the Magento framework. This framework
    uses collections to do select queries on the database. These collections will
    generate a `Zend_Db_Statement` object that generates SQL queries.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库中的大多数表都代表Magento中的实体。这些实体（模型）通过Magento框架与数据库连接。此框架使用集合在数据库上执行选择查询。这些集合将生成一个`Zend_Db_Statement`对象，该对象生成SQL查询。
- en: The purpose of these collections is that they return instances of Magento models.
    A SQL or Zend DB query will return an array with data.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这些集合的目的在于它们返回Magento模型的实例。一个SQL或Zend DB查询将返回包含数据的数组。
- en: Creating a database connection in Magento
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Magento中创建数据库连接
- en: Magento uses resources to connect to a database. By default, Magento uses one
    connection to interact with the database. In this connection, there are resources
    declared in the `config.xml` files of the modules to link the models with the
    right table.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: Magento使用资源来连接到数据库。默认情况下，Magento使用一个连接与数据库交互。在这个连接中，模块的`config.xml`文件中声明了资源，以将模型与正确的表链接起来。
- en: In this recipe, we will use a Magento connection to read some tables and we
    will learn how to configure a second connection to another database, such as a
    third-party system.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将使用 Magento 连接来读取一些表，并学习如何配置第二个连接到另一个数据库，例如第三方系统。
- en: Getting ready
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Navigate to `IndexController` of the `Packt_Helloworld` module that we created
    in [Chapter 4](ch04.html "Chapter 4. Creating a Module"), *Creating a Module*.
    We will test some connections in the `indexController`.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 导航到我们在[第4章](ch04.html "第4章。创建模块")“创建模块”中创建的`Packt_Helloworld`模块的`IndexController`。我们将测试`indexController`中的某些连接。
- en: How to do it...
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'In the following steps, we will explain how to work with multiple database
    connections in your script:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下步骤中，我们将解释如何在您的脚本中处理多个数据库连接：
- en: 'Paste the following code in the `indexAction` method:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码粘贴到`indexAction`方法中：
- en: '[PRE1]'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This query will return an array of the values in the `core_store` table.
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此查询将返回`core_store`表中的值数组。
- en: 'Reload the `indexAction` method in the frontend. You will see all the values
    from the `core_store` table like the following code:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在前端重新加载`indexAction`方法。您将看到`core_store`表中的所有值，如下所示：
- en: '[PRE2]'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Create a new connection. For example, we will make some queries on a second
    Drupal database. Paste the following code in the `indexAction` method and modify
    the connection parameters with your credentials:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的连接。例如，我们将对第二个Drupal数据库进行一些查询。将以下代码粘贴到`indexAction`方法中，并使用您的凭据修改连接参数：
- en: '[PRE3]'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Reload your frontend and you will see the result of your previous query. The
    previous piece of code will make a connection to an external database using the
    Magento connection.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新加载您的客户端，您将看到您之前查询的结果。前面的代码将使用Magento连接连接到外部数据库。
- en: How it works...
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The database connections in Magento are managed by the `Mage_Core_Model_Resource`
    model. By using the **singleton** pattern to load the class, the connection is
    made once per process.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: Magento中的数据库连接由`Mage_Core_Model_Resource`模型管理。通过使用**单例**模式加载类，连接在每次进程中进行一次。
- en: To get an instance of a model, you can use the `Mage::getModel()` function,
    which returns a new instance of the object. By using the `Mage::getSingleton()`
    function, an instance of the object given in the first parameter is returned.
    However, once the model is declared, Magento doesn't create a new instance but
    returns the existing instance of the object.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取模型的一个实例，您可以使用`Mage::getModel()`函数，该函数返回对象的新实例。通过使用`Mage::getSingleton()`函数，返回第一个参数中给出的对象实例。然而，一旦模型被声明，Magento不会创建一个新的实例，而是返回对象的现有实例。
- en: Working with flat tables
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理平面表
- en: 'Magento has two types of entities while working with the databases: **flat**
    entities and **EAV** entities.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在与数据库交互时，Magento有两种类型的实体：**平面**实体和**EAV**实体。
- en: Flat tables works with fields that represent columns in a database table. EAV
    tables, which are described in the next chapter, will use attributes. In this
    recipe, we will concentrate on flat tables.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 平面表与表示数据库表列的字段一起工作。下一章中描述的EAV表将使用属性。在这个菜谱中，我们将专注于平面表。
- en: Getting ready
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In this recipe, we will make some example queries on flat tables. Open the `IndexController`
    from the `Packt_Helloworld` module and create a `flatAction()` method in it. This
    controller action will be used to trigger the example queries.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在本食谱中，我们将对扁平表进行一些示例查询。打开 `IndexController` 从 `Packt_Helloworld` 模块，并在其中创建一个
    `flatAction()` 方法。此控制器操作将用于触发示例查询。
- en: How to do it...
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'In the next set of instructions, we will show you how a flat table from the
    database is linked to a Magento model:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一组说明中，我们将向您展示数据库中的扁平表是如何与 Magento 模型关联的：
- en: Have a look at the review tables. You can do this by filtering them in the phpMyAdmin
    table names.![How to do it...](img/3329OS_05_05.jpg)
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看评论表。您可以通过在 phpMyAdmin 表名中过滤它们来完成此操作。![如何操作...](img/3329OS_05_05.jpg)
- en: Get all the data from the `review_detail` table. You can do this by clicking
    on the table.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 `review_detail` 表中获取所有数据。您可以通过单击表来完成此操作。
- en: 'Print the same data by selecting it in the Magento code. To do this, paste
    the following code in your `flatAction` method:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在 Magento 代码中选择数据来打印相同的数据。为此，请将以下代码粘贴到您的 `flatAction` 方法中：
- en: '[PRE4]'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: While executing this code, an array of values is returned.
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在执行此代码时，会返回一个值数组。
- en: 'We can get the same result by working with the Magento collections. You can
    do this by running the following code:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以通过处理 Magento 集合来获得相同的结果。您可以通过运行以下代码来完成此操作：
- en: '[PRE5]'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: This code will give the same output, but the data of a collection is coming
    from objects and not directly from the database. The purpose of this is that we
    can directly call functions on the object.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此代码将产生相同的输出，但集合的数据来自对象，而不是直接来自数据库。这样做的原因是我们可以直接在对象上调用函数。
- en: Tip
  id: totrans-62
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: When working with Magento database tables, it is recommended to use the collections
    instead of a direct SQL query. More information about the Magento collection is
    described in the *Working with Magento collections* recipe from [Chapter 6](ch06.html
    "Chapter 6. Databases and Modules"), *Databases and Modules*.
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当与 Magento 数据库表一起工作时，建议使用集合而不是直接 SQL 查询。有关 Magento 集合的更多信息，请参阅第 6 章 *使用 Magento
    集合* 的食谱，*数据库和模块*。
- en: 'Print the URLs of the reviews on the screen. We can do this simply by calling
    the `getReviewUrl()` function on the `review` entities. Add the following code
    in each loop:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在屏幕上打印评论的 URL。我们可以通过在 `review` 实体上调用 `getReviewUrl()` 函数来完成此操作。在每个循环中添加以下代码：
- en: '[PRE6]'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: While reloading the page, you will see that all the URLs of the reviews are
    printed. The logic of the URL structure is done in the `Mage_Review_Model_Review`
    class, which represents a `review` entity.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在重新加载页面时，您将看到所有评论的 URL 都被打印出来。URL 结构的逻辑是在 `Mage_Review_Model_Review` 类中完成的，它代表一个
    `review` 实体。
- en: How it works...
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: 'Working with flat tables in Magento is not so difficult. When using the Magento
    framework, a flat entity consists of the following parts:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Magento 中处理扁平表并不困难。当使用 Magento 框架时，一个扁平实体由以下部分组成：
- en: '**The database table**: The database table is used to store the information
    of the entity. This database table can have relations to different tables in the
    Magento database, such as a relation with a product.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据库表**：数据库表用于存储实体的信息。此数据库表可以与 Magento 数据库中的不同表相关联，例如与产品相关联。'
- en: '**The model object**: The model object is a class where an instance is returned
    while loading a row from the database table. This class can have methods with
    business logic, such as the `getReviewUrl()` function in this recipe.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型对象**：模型对象是一个类，在从数据库表加载一行时返回一个实例。此类可以具有具有业务逻辑的方法，例如本食谱中的 `getReviewUrl()`
    函数。'
- en: '**The resource model object**: The resource model is a class that connects
    the model with the database table. This class will handle, for example, the `save()`
    method.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资源模型对象**：资源模型是一个将模型与数据库表连接起来的类。此类将处理例如 `save()` 方法。'
- en: '**The resource collection object**: The resource collection object is a class
    that makes it possible to work with Magento collections for an entity.'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资源收集对象**：资源收集对象是一个类，它使得可以处理实体的 Magento 收集。'
- en: Working with EAV tables
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理 EAV 表
- en: The EAV table is a database model that is used for some entities in Magento.
    In this recipe, we will explore the details of the EAV implementation in Magento.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: EAV 表是一个数据库模型，用于 Magento 中的一些实体。在本食谱中，我们将探讨 Magento 中 EAV 实现的细节。
- en: Getting ready
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: The EAV pattern is used for some entities in Magento such as the product entity.
    In this recipe, we will make some queries for updating a product using SQL queries.
    Open your database client and prepare yourself for running some complex queries.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: EAV模式用于Magento中的一些实体，如产品实体。在这个菜谱中，我们将使用SQL查询进行一些更新产品的查询。打开你的数据库客户端，并准备好运行一些复杂的查询。
- en: How to do it...
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'The following steps show you how you can create a query to return the data
    of a Magento EAV model:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤展示了如何创建一个查询来返回Magento EAV模型的数据：
- en: 'The Magento EAV entities are declared in the `eav_entity_type` table. Run the
    following query to see which EAV entities are available:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Magento的EAV实体在`eav_entity_type`表中声明。运行以下查询以查看哪些EAV实体可用：
- en: '[PRE7]'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Remember the ID of the `catalog_product` entity.
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 记住`catalog_product`实体的ID。
- en: 'To get the attributes related to a product, we have to look in the `eav_attribute`
    table. To see which attributes are related to a product, we have to run the following
    query:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要获取与产品相关的属性，我们必须查看`eav_attribute`表。要查看哪些属性与产品相关，我们必须运行以下查询：
- en: '[PRE8]'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Make sure `10` is the entity type ID for `catalog_product`.
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 确保实体类型ID为`10`的是`catalog_product`。
- en: Now we have the entity and attributes, so the value is the next part to find
    out. Find a product in the backend and remember the ID. For example, the product
    `HTC Touch Diamond` with the ID `166`.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们有了实体和属性，所以下一步是找出值。在后台找到一个产品并记住其ID。例如，ID为`166`的`HTC Touch Diamond`产品。
- en: 'Select the product from the `catalog_product_entity` table by running the following
    query:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下查询从`catalog_product_entity`表中选择产品：
- en: '[PRE9]'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The last query will only return the entity information of this product. To
    get the information for an attribute, such as `name`, we have to look in the `value`
    table. For the `name` attribute, the `value` table is `catalog_product_entity_varchar`.
    Run the following query to get all the `varchar` attribute values for the product:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后一个查询只会返回该产品的实体信息。要获取属性信息，如`name`，我们必须查看`value`表。对于`name`属性，`value`表是`catalog_product_entity_varchar`。运行以下查询以获取产品的所有`varchar`属性值：
- en: '[PRE10]'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The previous query gives the following result:![How to do it...](img/3329OS_05_06.jpg)
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之前的查询给出了以下结果：![如何做到这一点...](img/3329OS_05_06.jpg)
- en: With this result, you can recognize the name of the product. If you look at
    the attribute ID of the row and match the attribute ID with the one in the `eav_attribute`
    table, you will see that this refers to the `name` attribute.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过这个结果，你可以识别出产品的名称。如果你查看行的属性ID并将属性ID与`eav_attribute`表中的ID匹配，你会看到这指的是`name`属性。
- en: 'To update the name of the product, make an update query on the row as follows:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要更新产品的名称，对以下行进行更新查询：
- en: '[PRE11]'
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: See that the `value_id` value matches the value ID of your previous result.
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意`value_id`值与之前结果中的值ID相匹配。
- en: Reload the product in the backend, and you will see that the name of the product
    is updated.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在后端重新加载产品，你会看到产品的名称已更新。
- en: How it works...
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: EAV entities in Magento are declared in the `eav_entity_type` table and the
    attributes are declared in the `eav_attribute` table.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: Magento中的EAV实体在`eav_entity_type`表中声明，属性在`eav_attribute`表中声明。
- en: Like every entity, each EAV entity has its own base table. In this base table,
    the primary fields are declared as columns in this table. All the other fields
    are declared as attributes in the `eav_attribute` table.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 与每个实体一样，每个EAV实体都有自己的基础表。在这个基础表中，主字段作为此表中的列声明。所有其他字段作为`eav_attribute`表中的属性声明。
- en: Every attribute is of a specific type such as `int`, `varchar`, `date`, `time`,
    `decimal`, and `text`. The place where these values are stored depends on the
    entity type and is declared in the configuration files of Magento.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 每个属性都是特定类型的，如`int`、`varchar`、`date`、`time`、`decimal`和`text`。这些值存储的位置取决于实体类型，并在Magento的配置文件中声明。
- en: 'The following screenshot shows the structure of the EAV tables for a product:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了产品EAV表的结构：
- en: '![How it works...](img/3329OS_05_07.jpg)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![如何工作...](img/3329OS_05_07.jpg)'
- en: There's more...
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Not all EAV entities work with multiple tables by entity. For example, the `sales_flat_*`
    tables are all EAV tables, but they are, as their name suggests, flat. This means
    that all the attributes of the entity are set in a separate column of the flat
    table.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 并非所有EAV实体都通过实体使用多个表。例如，`sales_flat_*`表都是EAV表，但正如其名称所暗示的，它们是扁平的。这意味着实体的所有属性都设置在扁平表的单独列中。
- en: In the catalog configuration, you have the ability to enable the **Flat catalog**
    option for the tables for category and products. When this configuration is enabled,
    Magento will sync all the data from the EAV tables to the `catalog_flat_*` tables
    and will load the data from there.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在目录配置中，你有能力为分类和产品表启用 **Flat catalog** 选项。当此配置被启用时，Magento 将将所有数据从 EAV 表同步到 `catalog_flat_*`
    表，并从那里加载数据。
- en: When the **Flat catalog** option is enabled, you get a better performance because
    a `select` query on a single table is faster than getting the data from the different
    tables. The advantage is a better performance, but on the other hand, there are
    some disadvantages that could be a problem with a large amount of products and
    categories.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 当 **Flat catalog** 选项被启用时，你会获得更好的性能，因为在一个单独的表上执行 `select` 查询比从不同的表中获取数据要快。优点是更好的性能，但另一方面，对于大量产品和分类，可能会有一些缺点。
- en: The Master data will be stored in the EAV tables. This means there is synchronization
    between the flat tables. This process is implemented as a **Magento Index Process**.
    When there are a lot of products and categories, this process can run very long.
    Another thing is that the size of the database can explode because the data is
    stored twice.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 主数据将存储在 EAV 表中。这意味着在扁平表中存在同步。这个过程作为 **Magento 索引过程** 实现。当有大量产品和分类时，这个过程可能运行非常长。另一件事是，数据库的大小可能会爆炸，因为数据被存储了两次。
- en: Configuring a Master/Slave setup
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置主/从设置
- en: '**Database replication** is used when you want to scale your infrastructure
    to serve more requests. There are a lot of methods available to scale your database
    to set up replication. The exact choice is different for every situation.'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据库复制**用于当你想要扩展你的基础设施以服务更多请求时。有许多方法可以扩展数据库以设置复制。具体选择因情况而异。'
- en: In this recipe, we will use a generic setup to create a Master/Slave setup for
    our Magento store. This setup will use a Master database server where all the
    `write` queries will be saved. The Slave database server(s) will be used for the
    `read` queries. The database is the most difficult component of an application
    to scale.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将使用一个通用设置来为我们的 Magento 店创建一个主/从设置。这个设置将使用一个主数据库服务器，所有 `write` 查询都将保存在这里。从数据库服务器（们）将用于
    `read` 查询。数据库是应用程序扩展性中最困难的部分。
- en: Getting ready
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备中
- en: To complete the Master/Slave setup, we will use two different MySQL servers.
    Get the connection information such as hostname, IP addresses, username, and passwords.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完成主/从设置，我们将使用两个不同的 MySQL 服务器。获取连接信息，如主机名、IP 地址、用户名和密码。
- en: How to do it...
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Here, we will set up a Master/Slave replication in MySQL and configure Magento
    to use this setup. Have a look at the following steps:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将设置 MySQL 中的主/从复制，并配置 Magento 使用此设置。请查看以下步骤：
- en: Setting up the Master database
  id: totrans-114
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置主数据库
- en: Log in to the server with SSH and open the `/etc/mysql/my.cnf` file.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 SSH 登录到服务器并打开 `/etc/mysql/my.cnf` 文件。
- en: 'Look for the `bind-address` section in the file and comment it out. By commenting
    this, you make it possible to make connections from different servers:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文件中查找 `bind-address` 部分，并将其注释掉。通过注释这一行，你可以使不同服务器之间建立连接成为可能：
- en: '[PRE12]'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Paste the following code in the `my.cnf` file under the `[mysqld]` section:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码粘贴到 `[mysqld]` 部分的 `my.cnf` 文件中：
- en: '[PRE13]'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Restart your MySQL server by running the following command:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下命令重启你的 MySQL 服务器：
- en: '[PRE14]'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Open the MySQL shell by running the following command. This will perform a
    login with the root user:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下命令打开 MySQL shell。这将使用 root 用户进行登录：
- en: '[PRE15]'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'When you are logged in, you have to run the following queries:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你登录后，你必须运行以下查询：
- en: '[PRE16]'
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Run the following commands to show the status of the Master database:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令以显示主数据库的状态：
- en: '[PRE17]'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The last command from the previous snippet will give the following output:'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 上一段代码中的最后一个命令将给出以下输出：
- en: '![Setting up the Master database](img/3329OS_05_08.jpg)'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![设置主数据库](img/3329OS_05_08.jpg)'
- en: We will use this information in the Slave setup, so keep this with you.
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们将在从设置中使用这些信息，所以请保留好。
- en: 'Unlock the tables with the following command:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令解锁表：
- en: '[PRE18]'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: While entering the `quit` or `exit` command, you will be returned to the shell
    of the server. The setup of the Master database is done.
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当你输入 `quit` 或 `exit` 命令时，你将返回到服务器的 shell。主数据库的设置已完成。
- en: Setting up the Slave database
  id: totrans-134
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置从数据库
- en: Perform an SSH login to your Slave server. This is a different server than your
    Master server.
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过 SSH 登录到您的从服务器。这是一个不同于主服务器的不同服务器。
- en: 'Open the MySQL shell with the following command:'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令打开 MySQL 命令行：
- en: '[PRE19]'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Create a new database `magento_dev` and import the Master database in it.
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的数据库 `magento_dev` 并将主数据库导入其中。
- en: 'Add the following configuration in `the /etc/mysql/my.cnf` file under the `[mysqld]`
    section:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `[mysqld]` 部分下 `etc/mysql/my.cnf` 文件中添加以下配置：
- en: '[PRE20]'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Restart the MySQL server with the following command:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令重新启动 MySQL 服务器：
- en: '[PRE21]'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Run the following commands in your MySQL shell. Make sure the `MASTER_LOG_FILE`
    and `MASTER_LOG_POST` values match the values that you have seen while running
    the `SHOW MASTER STATUS` command:'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的 MySQL 命令行中运行以下命令。请确保 `MASTER_LOG_FILE` 和 `MASTER_LOG_POST` 的值与您在运行 `SHOW
    MASTER STATUS` 命令时看到的值匹配：
- en: '[PRE22]'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Run the following command to start the Slave server:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令以启动从服务器：
- en: '[PRE23]'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Check the status by running the following command:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下命令来检查状态：
- en: '[PRE24]'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'The output will look as follows:'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '![Setting up the Slave database](img/3329OS_05_09.jpg)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![设置从数据库](img/3329OS_05_09.jpg)'
- en: Configuring Magento
  id: totrans-151
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置 Magento
- en: 'Now, when the MySQL setup for the Master/Slave setup is done, it is time to
    configure Magento to use this setup. We have to configure this in the `app/etc/local.xml`
    file of Magento. Here, we will configure a `default_setup` connection and a `default_read`
    connection. To configure this, add the following XML in the `local.xml` file under
    the `<resources>` tag:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当 Master/Slave 设置的 MySQL 配置完成时，是时候配置 Magento 以使用此设置了。我们必须在 Magento 的 `app/etc/local.xml`
    文件中配置此设置。在这里，我们将配置一个 `default_setup` 连接和一个 `default_read` 连接。为此，在 `<resources>`
    标签下 `local.xml` 文件中添加以下 XML：
- en: '[PRE25]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Clear your cache and your Magento will use this setup.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 清除您的缓存，您的 Magento 将使用此设置。
- en: How it works...
  id: totrans-155
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: When data in the Master database changes, it has to be in sync with the Slave
    database. To establish this, the binary logfile is used to communicate between
    each other.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 当主数据库中的数据发生变化时，它必须与从数据库保持同步。为了建立这种同步，使用二进制日志文件在它们之间进行通信。
- en: You have to see that binary logging is configured on the Master. If not, you
    have to enable this and restart your MySQL server. If it is not enabled, there
    is no logfile, so there is no communication between servers. This is also the
    reason why the `MASTER_LOG_FILE` Slave must match the one on the Master database.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 您必须确认在主数据库上已配置二进制日志。如果没有，您必须启用此功能并重新启动您的 MySQL 服务器。如果没有启用，则没有日志文件，因此服务器之间没有通信。这也是为什么从数据库的
    `MASTER_LOG_FILE` 必须与主数据库上的 `MASTER_LOG_FILE` 匹配的原因。
- en: If the setup is done and the Magento configuration is in the `app/etc/local.xml`
    file, everything is finished. Magento is smart enough to send the `write` request
    to the Master and the `read` requests to the Slave.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 如果设置完成，并且 Magento 配置已位于 `app/etc/local.xml` 文件中，则一切完成。Magento 足够智能，能够将 `write`
    请求发送到主服务器，将 `read` 请求发送到从服务器。
- en: Repairing the database
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 修复数据库
- en: Sometimes it happens that your Magento database is broken or corrupt. This can
    be caused by various reasons such as hacking or server crash. When the database
    is broken and you have to fix it, the database repair tool from Magento is of
    great help.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 有时会发生您的 Magento 数据库损坏或损坏的情况。这可能是由于各种原因造成的，例如黑客攻击或服务器崩溃。当数据库损坏并且您必须修复它时，来自 Magento
    的数据库修复工具非常有帮助。
- en: In this recipe, we will make our database corrupt and fix it with the repair
    tool.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 在本食谱中，我们将使我们的数据库损坏，并使用修复工具来修复它。
- en: Getting ready
  id: totrans-162
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To prepare you, download the **database repair tool** from the Magento site
    at [http://www.magentocommerce.com](http://www.magentocommerce.com) and place
    the PHP file in your server root.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 为了做好准备，从 Magento 网站下载**数据库修复工具**（[http://www.magentocommerce.com](http://www.magentocommerce.com)），并将
    PHP 文件放置在您的服务器根目录下。
- en: How to do it...
  id: totrans-164
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'The following steps show you how to make your database corrupt and fix it using
    the database repair tool:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将向您展示如何使您的数据库损坏，并使用数据库修复工具来修复它：
- en: Create a backup of your existing database.
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建现有数据库的备份。
- en: Create an empty database as the reference database. Let's say we call it `magento_dev_repair`.
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个空数据库作为参考数据库。让我们称它为 `magento_dev_repair`。
- en: Configure Magento to use this database in the `app/etc/local.xml` file.
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `app/etc/local.xml` 文件中配置 Magento 以使用此数据库。
- en: Clear the cache and run Magento. This will install an empty Magento in this
    database.
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 清除缓存并运行 Magento。这将在此数据库中安装一个空的 Magento。
- en: 'Make your original database corrupt. You can do this by running the following
    queries that remove a foreign key and a table:'
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使您的原始数据库损坏。您可以通过运行以下查询来实现，这些查询删除了一个外键和一个表：
- en: '[PRE26]'
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Browse to the repair tool in your browser, and configure your original and reference
    database as shown in the following screenshot:![How to do it...](img/3329OS_05_10.jpg)
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在浏览器中浏览到修复工具，并按照以下截图配置您的原始和参考数据库：![如何操作...](img/3329OS_05_10.jpg)
- en: Submit the form and the script will repair your database. On the next page,
    you will see what changes are made to your original database.
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提交表单后，脚本将修复您的数据库。在下一页，您将看到对您的原始数据库所做的更改。
- en: Switch the database in the `app/etc/local.xml` file, so Magento uses your original
    database.
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`app/etc/local.xml`文件中切换数据库，以便Magento使用您原始的数据库。
- en: Clear the cache and your shop is up and running.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 清除缓存后，您的商店即可正常运行。
- en: How it works...
  id: totrans-176
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: While running the database repair tool, the script will compare the original
    database with the reference database. If the comparison is done, the script will
    make the structure of your original database the same as the one of the reference
    databases.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行数据库修复工具时，脚本将比较原始数据库与参考数据库。如果比较完成，脚本将使您的原始数据库结构与参考数据库的结构相同。
- en: The database repair tool only fixes structural issues with your database. If
    you miss some data, this is not the right tool to get the data back.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库修复工具仅修复数据库的结构问题。如果您丢失了一些数据，这不是恢复数据的正确工具。
