- en: Chapter 1. The World Wide Web
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 1 章。万维网
- en: 'This book talks about the past, present, and future of Web Development. Beginning
    with [Chapter 2](ch02.html "Chapter 2. HTML"), *HTML*, we will walk you through
    all the technologies you need to know about, in order to practice web development.
    Before we do that, we want to set the stage, so that we all know which Web we
    are talking about: this would be the **World Wide Web** (**www**).'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本书将讨论 Web 开发的过去、现在和未来。从 [第 2 章](ch02.html "第 2 章。HTML") 开始，我们将介绍 *HTML*，我们将向您介绍所有您需要了解的技术，以便进行
    Web 开发。在我们这样做之前，我们想要设定舞台，以便我们所有人都知道我们在谈论哪个 Web：这将是 **万维网** （**www**）。
- en: World Wide Web
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 万维网
- en: I love history! So let us start with a little history about the World Wide Web.
    I was fortunate enough to be able to work at a company that developed the first
    commercial version of the UNIX Operating System. They were founded in 1977 and
    I joined them ten years later. UNIX is an Operating System (the thing you need
    to make your computer do something) that was intended to run on minicomputers
    (although they were called that, they could not fit into your apartment and required
    air-cooling). These computers were typically used as an isolated system that had
    quite a number of text-based terminals attached to them.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我热爱历史！那么，让我们从万维网的一点点历史开始。我有幸能够在一家公司工作，该公司开发了 UNIX 操作系统的第一个商业版本。他们成立于 1977 年，我十年后加入了他们。UNIX
    是一种操作系统（你需要它来让你的电脑做某事），它原本打算在小型计算机上运行（尽管它们被称为小型计算机，但它们无法放入你的公寓，并且需要空气冷却）。这些计算机通常用作一个独立的系统，连接了相当多的基于文本的终端。
- en: Today UNIX lives on, and forms the basis of Linux, Solaris, MacOS, and others.
    Our company spotted an opportunity to add products that would add features and
    technologies that today are standard. Some of these examples are email (ability
    to send a mail to a person on another computer), and ftp (ability to transfer
    a file to another computer, or to just access another computer). Yes, you had
    to pay extra if you wanted to be able to send mail. Thanks to the Internet, all
    of this was made possible.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 今天，UNIX 仍然存在，并构成了 Linux、Solaris、MacOS 等操作系统的基石。我们的公司发现了添加具有今天标准功能和技术产品的机会。其中一些例子包括电子邮件（能够向另一台电脑上的人发送邮件）和
    ftp（能够将文件传输到另一台电脑，或者仅仅访问另一台电脑）。是的，如果你想发送邮件，你需要额外付费。多亏了互联网，所有这一切才成为可能。
- en: The Internet
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 互联网
- en: The Internet is a global network that today interconnects billions of computers
    worldwide. Its origin dates back to research done for the US government, but today
    everybody can get on the Internet, using its standard set of protocols, commonly
    referred to as TCP/IP (the IP here being Internet Protocol).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 互联网是一个全球网络，今天它连接着全球数十亿台电脑。它的起源可以追溯到为美国政府进行的研究，但今天每个人都可以通过使用其标准协议集上网，这些协议通常被称为
    TCP/IP（这里的 IP 是指互联网协议）。
- en: Every computer or device that is connected to the Internet will have a unique
    Internet address, aka IP address. It is a set of 4 numbers separated by dots,
    for example, 192.25.13.90\. Of course, you will never tell your friend that you
    bought something at 192.25.13.90 but at, for instance, [www.amazon.com](http://www.amazon.com).
    This is because the Internet also uses a feature that translates IP addresses
    into easier to remember domain names. The example I used happens to be a website
    you can go to and buy things from a practice that we all know has caused the www
    to become what it is today.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 每一台连接到互联网的电脑或设备都将有一个独特的互联网地址，也就是 IP 地址。它是一组由点分隔的 4 个数字，例如，192.25.13.90。当然，你永远不会告诉你的朋友你在
    192.25.13.90 上买了东西，而是在例如 [www.amazon.com](http://www.amazon.com) 上。这是因为互联网还使用了一个将
    IP 地址转换为更容易记住的域名功能。我使用的例子碰巧是一个你可以去购买东西的网站，这种做法我们都熟悉，它导致了万维网成为今天的样子。
- en: The Internet and the www are, in everyday speech, treated as if they are synonyms
    but they are indeed not. There are a lot of different services provided on the
    Internet (by companies called **Internet Service Providers** (**ISP**)), and that
    was already the case before the www existed (for example, giving you access to
    electronic mail). What it took for the www to emerge was (just like in JavaScript)
    a series of asynchronous events. Two of those are too important to not mention.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在日常用语中，互联网和万维网通常被视为同义词，但实际上它们并不是。互联网上提供了许多不同的服务（由被称为 **互联网服务提供商** （**ISP**）的公司提供），在万维网出现之前就已经如此（例如，提供电子邮件访问）。万维网出现所需要的是（就像在
    JavaScript 中一样）一系列异步事件。其中有两个非常重要，不能不提。
- en: HTTP and HTML
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: HTTP 和 HTML
- en: You have probably heard this story many times, but the World Wide Web would
    not have existed without it. It is the story of Tim Berners Lee, an engineer at
    the **European Centre for Nuclear Research** (**CERN**). The centre had many computers
    that were, of course, hooked up to the Internet. It also produced a tremendous
    amount of data and documents, and that became almost impossible to manage. Tim
    worked out a solution by developing a language to write these documents in, a
    protocol on top of the Internet to manage them, as well as a computer program
    for users to access them.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经听过这个故事很多次了，但如果没有它，万维网就不会存在。这是蒂姆·伯纳斯-李的故事，他是**欧洲核子研究中心**（**CERN**）的一名工程师。该中心拥有许多计算机，当然，它们都连接到互联网。它还产生了大量的数据和文档，几乎无法管理。蒂姆通过开发一种用于编写这些文档的语言，一种在互联网上管理它们的协议，以及一个供用户访问它们的计算机程序来解决这个问题。
- en: HTML
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: HTML
- en: HTML, short for Hypertext Markup Language is the name of that language. Hypertext
    is text that contains **hyperlinks**, which in turn are those parts of a document
    which readers can click on to take them to a different document, using the link.
    You have all seen the blue underlined parts of a text, in not-so-good-looking
    web pages. These are hyperlinks.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: HTML，即超文本标记语言的缩写，是那种语言的名称。超文本是包含**超链接**的文本，而超链接则是文档中读者可以点击的部分，通过链接将他们带到另一个文档。你们都见过文本中蓝色下划线部分，在不太美观的网页上。这些都是超链接。
- en: 'A document in HTML consists of tags, with text in between them. There are opening
    and closing tags for example, as follows:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: HTML文档由标签组成，标签之间是文本。例如，有开标签和闭标签，如下所示：
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Here, `<h1>` is the opening tag and `</h1>` the closing one. We will learn
    about a similar markup language: XML. HTML and XML are not the same though. One
    important difference is that in XML you can define your own tags, as long as you
    close each one you''ve opened. XML is used to transfer the data and the tags are
    used to organize the data.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`<h1>`是开标签，`</h1>`是闭标签。我们将学习一种类似的标记语言：XML。尽管HTML和XML不同，但一个重要的区别是，在XML中你可以定义自己的标签，只要关闭你打开的每一个标签。XML用于传输数据，而标签用于组织数据。
- en: In HTML, tags do have a specific meaning. `<h1>` would be used in a document
    for the text of a level one header. A `<a>` tag—the anchor tag—is the one used
    to include the hyperlinks we just discussed. So the purpose of writing HTML is
    not to transfer data, but to present it to human users.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在HTML中，标签确实有特定的含义。`<h1>`在文档中用于一级标题的文本。`<a>`标签——锚标签——是我们刚才讨论的超链接所使用的标签。因此，编写HTML的目的不是传输数据，而是向人类用户展示数据。
- en: To do so, these tags are interpreted by the computer program we mentioned earlier.
    Such a program is called a **browser**. When the reader clicks on a hyperlink,
    the browser will detect that as well, and send a request to yet another program,
    the web server, to go fetch another document.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 要做到这一点，这些标签将由我们之前提到的计算机程序解释。这样的程序被称为**浏览器**。当读者点击超链接时，浏览器也会检测到这一点，并向另一个程序，即网络服务器，发送请求以获取另一个文档。
- en: HTTP
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: HTTP
- en: 'This is where HTTP, the Hypertext Transfer Protocol fits in. If a user clicks
    on a link, it is like saying: go fetch another HTML document. The name of that
    document would be part of a longer string that starts with `http://` and also
    contains the domain name of the server. It is called a **uniform resource locator,**
    but we all refer to it as URL. Following is an example: [http://www.paulpwellens.com/examples/secondpage.html](http://www.paulpwellens.com/examples/secondpage.html).'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是超文本传输协议HTTP发挥作用的地方。如果用户点击链接，就像是在说：去获取另一个HTML文档。该文档的名称将是一个以`http://`开头的更长的字符串的一部分，同时也包含服务器的域名。它被称为**统一资源定位符**，但我们通常称之为URL。以下是一个示例：[http://www.paulpwellens.com/examples/secondpage.html](http://www.paulpwellens.com/examples/secondpage.html)。
- en: 'What you can do with HTTP has evolved over time and we will learn about it
    later on in the book, but for now we need to move on with our history lesson.
    One more little tidbit of history for you: guess how our friend Tim called his
    browser, the first ever browser: WorldWideWeb. He later renamed it to avoid confusion.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以用HTTP做什么，随着时间的推移已经发生了变化，我们将在本书的后面部分了解到这一点，但就目前而言，我们需要继续我们的历史课程。再给你一个小小的历史趣闻：猜猜我们的朋友蒂姆是如何称呼他的浏览器的，这是第一个浏览器：WorldWideWeb。后来他将其重命名以避免混淆。
- en: The World Wide Web Consortium (W3C)
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 万维网联盟（W3C）
- en: After he left the CERN in 1994, Tim Berners Lee founded the **World Wide Web
    Consortium** (**W3C**). The consortium tries to enforce compatibility and agreement
    between vendors that deliver components for the web. Incompatible versions of
    HTML would cause browsers to render web pages differently; and incompatible features
    added to browsers have the same unexpected result.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在1994年离开CERN之后，蒂姆·伯纳斯-李创立了**万维网联盟**（**W3C**）。该联盟试图确保提供网络组件的厂商之间的兼容性和一致性。不兼容的HTML版本会导致浏览器以不同的方式渲染网页；而添加到浏览器中的不兼容特性也会产生同样的意外结果。
- en: If you visit [www.w3.org](http://www.w3.org), the consortiums website, you will
    notice that the W3C has evolved into a standards body for many technologies, but
    even in those days, having such an organization was sorely needed.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你访问[www.w3.org](http://www.w3.org)，即该联盟的网站，你会注意到W3C已经发展成为许多技术的标准机构，但即使在那些日子里，拥有这样一个组织也是迫切需要的。
- en: Mosaic
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Mosaic
- en: History moved on, and so did I! Our company was acquired by Sun Microsystems
    and I became product manager for our PC UNIX product. Oh yes, before I forget,
    PCs were everywhere by then and that phenomenon would, in the long run, also contribute
    to the explosion of the World Wide Web.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 历史在前进，我也在前进！我们的公司被Sun Microsystems收购，我成为了我们PC UNIX产品的产品经理。哦，对了，在此之前，PC已经无处不在，从长远来看，这种现象也促进了万维网的爆炸式增长。
- en: One day, in the year 1993, my engineering manager walked into my office, together
    with Jonathan, his lead programmer. They wanted to show me what he (Jonathan)
    had done over the weekend. It was a port (take the source code of a program and
    make it run as a binary on a computer) of a program called **Mosaic** for our
    PC UNIX product. I saw him type a few commands but did not quite understand why
    these guys were so excited. Little did I know that this seemingly innocent little
    program was going to change our lives forever!
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 有一天，在1993年，我的工程经理和我（乔纳森，他的主要程序员）一起走进我的办公室。他们想向我展示乔纳森周末所做的工作。这是一款名为**Mosaic**的程序为我们PC
    UNIX产品做的移植（将程序的源代码转换为在计算机上运行的二进制文件）。我看着他输入了几条命令，但并不完全理解为什么这些人如此兴奋。我并不知道这个看似无害的小程序将永远改变我们的生活！
- en: The first browser
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第一个浏览器
- en: Mosaic was developed at the **National Center for Supercomputer Applications**
    (**NCSA**)at the University of Illinois in Champaign-Urbana (this is a long drive
    through cornfields from Chicago, which I took once) by a team led by Marc Andreesen.
    It was the first browser to support multiple protocols (hence the name) as well
    as display an image and text on the same page (surprisingly, this is not a trivial
    matter on a webpage!) It soon caught attention worldwide and the browser was ported
    to many platforms, so that more and more people could develop or have access to
    websites.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Mosaic是由马克·安德森领导的一个团队在伊利诺伊大学香槟分校的**国家超级计算应用中心**（**NCSA**）开发的（这是从芝加哥出发穿过玉米田的漫长车程，我曾经走过这条路）。它是第一个支持多种协议（因此得名）并在同一页面上显示图像和文本的浏览器（令人惊讶的是，这在网页上并非易事！）它很快引起了全世界的关注，并且这款浏览器被移植到许多平台上，以便更多的人能够开发或访问网站。
- en: In November 1992, there were 26 websites. In the Mosaic browser, there was a
    *What's new* section that showed a new website everyday. Three years later, there
    were 10,000 and another three years later, millions. Today, I do not think it
    is possible to count them anymore. So how did we get from thousands to millions?
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 1992年11月，有26个网站。在Mosaic浏览器中，有一个*最新动态*部分，每天展示一个新的网站。三年后，网站数量达到了10,000，再过三年，数量达到了数百万。今天，我认为已经无法再统计它们的数量了。那么我们是如何从几千个发展到几百万个的呢？
- en: Netscape
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Netscape
- en: Marc Andreesen founded a company, named it after Mosaic, and then later renamed
    it *Netscape Communications Corporation*. They basically rewrote the Mosaic browser
    and optimized it for environments with lower network bandwidth, such as individuals
    who access the Internet from home through their ISP. The browser was called **Netscape
    Navigator**. This was clearly the first commercial browser, making it to the shelves
    of computer retail stores as part of a bundle, Netscape Communicator.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 马克·安德森创立了一家名为Mosaic的公司，后来将其更名为*网景通信公司*。他们基本上重写了Mosaic浏览器，并针对网络带宽较低的环境进行了优化，例如那些通过ISP从家中上网的个人。这款浏览器被称为**网景导航者**。这显然是第一个商业浏览器，作为Netscape
    Communicator捆绑包的一部分出现在电脑零售店的货架上。
- en: Netscape was also credited as the first browser to include support for JavaScript.
    With this scripting language, interactivity could be added to web pages. The World
    Wide Web could be at anybody's fingertips, as long as you had Netscape. From 1994
    to about 1999, Netscape clearly had the biggest market share for browsers.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: Netscape也被认为是第一个包含对JavaScript支持的浏览器。有了这种脚本语言，可以为网页添加交互性。只要你有Netscape，互联网世界就触手可及。从1994年到大约1999年，Netscape在浏览器市场占有明显的份额。
- en: Over time, Netscape was moved over to Mozilla Corporation, an Open Source organization,
    and the development of Netscape ended. Today, users can download the *Firefox*
    browser from [www.mozilla.org](http://www.mozilla.org).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 随着时间的推移，Netscape被转移到Mozilla公司，一个开源组织，Netscape的开发也随之结束。今天，用户可以从[www.mozilla.org](http://www.mozilla.org)下载*Firefox*浏览器。
- en: Internet Explorer
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Internet Explorer
- en: Another derivative of Mosaic, Spyglass Mosaic, made it into the Microsoft codebase
    and was eventually bundled with Microsoft Windows. We know it today as *Internet
    Explorer*. This is how we reach the topic of the so-called browser wars. As I
    mentioned, Netscape was trying to win over as many customers as possible by getting
    into the retail market and charge for its browser. Microsoft, on the other hand,
    decided to bundle Internet Explorer *for free* in its Windows Operating System
    (of course you had to pay for Windows).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个Mosaic的衍生品，Spyglass Mosaic，进入了微软的代码库，并最终捆绑在微软Windows中。我们今天称之为*Internet Explorer*。这就是我们如何进入所谓的浏览器战争的话题。正如我提到的，Netscape试图通过进入零售市场并对其浏览器收费来争取尽可能多的客户。另一方面，微软决定免费将其Internet
    Explorer捆绑在其Windows操作系统（当然，您仍然需要为Windows付费）中。
- en: This led to many lawsuit-like situations as Microsoft was accused of unfair
    competition by the other browser vendors. This situation has now changed as all
    browsers are free. Computer users can today choose which browser they want to
    use. On tablets, choices are limited, but on the other hand, browsers on tablets
    usually have all the latest features.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这导致了许多类似诉讼的情况，因为微软被其他浏览器供应商指责不公平竞争。现在这种情况已经改变，因为所有浏览器都是免费的。计算机用户现在可以选择他们想要使用的浏览器。在平板电脑上，选择有限，但另一方面，平板电脑上的浏览器通常都有所有最新的功能。
- en: A different and potentially more bloody war was going on at the technical level.
    Despite having a standards body, the W3C, which controlled and introduced new
    features (both HTML and CSS), not all browsers were adapting those features equally
    as fast. So the same web pages continued to look different when they were rendered
    by different browsers. Sad but true to say, the browser that was the most incompatible
    and unpredictable, Internet Explorer, was, by the turn of the century, also the
    one used by the majority of the people who would surf the web.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在技术层面上，正在发生一场不同且可能更加血腥的战争。尽管有一个标准机构W3C，它控制和引入了新的功能（包括HTML和CSS），但并非所有浏览器都以相同的速度适应这些功能。因此，当由不同的浏览器渲染时，相同的网页看起来也不同。遗憾的是，最不兼容和不可预测的浏览器——Internet
    Explorer，在世纪之交时，也是大多数上网的人使用的浏览器。
- en: Developers therefore had no choice but to delay the use of new cool features
    at the expense of spending a considerable amount of extra time making their web
    pages look the same on a PC used by most visitors as it did on the system where
    they were created.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，开发者别无选择，只能推迟使用新酷炫的功能，代价是花费大量额外的时间来确保他们的网页在大多数访客使用的PC上看起来和它们在创建的系统上一样。
- en: Things got far worse before they began to get better, as more developers started
    using JavaScript to add interaction and animation to the pages, whereas many System
    Administrators recommended a configuration with JavaScript switched off. Sometimes
    this resulted in the visitor seeing nothing at all on the page.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始好转之前，情况变得更糟，因为更多的开发者开始使用JavaScript来为页面添加交互和动画，而许多系统管理员则推荐关闭JavaScript的配置。有时这会导致访客在页面上什么也看不到。
- en: But do not despair, we are in 2015 now! In this book, we will take a different
    approach and always let you use the new features when the browser supports it.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 但不要绝望，我们现在已经是2015年了！在这本书中，我们将采取不同的方法，并且始终在浏览器支持的情况下让您使用新功能。
- en: The explosion of the Web
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 互联网的爆炸式增长
- en: By the turn of the century, every company wanted to have a webpage. Web pages
    were created by linking more web pages, with information about the company or
    just the owner of the site. The latter was made possible by smart ISPs that also
    offered web hosting. People have to be able to access your site even while you
    or your computer is sleeping; so these services offer 24/7 uptime to put your
    HTML files. Web hosting companies also take care of getting you a domain name,
    such as [www.thecoolestphotographer.com](http://www.thecoolestphotographer.com).
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 到世纪之交，每家公司都想拥有一个网页。网页是通过链接更多的网页来创建的，这些网页包含有关公司或网站所有者的信息。后者是通过提供网络托管服务的智能ISP实现的。人们必须能够在你或你的电脑睡觉时访问你的网站；因此，这些服务提供24/7的不间断服务来放置你的HTML文件。网络托管公司还负责为你注册域名，例如[www.thecoolestphotographer.com](http://www.thecoolestphotographer.com)。
- en: At some point, obtaining the domain name you wanted was bordering on another
    browser war, as there could only be one `xyz.com,` and if some entrepreneurial
    folks thought that having `xyz.com` first would be worth money, they would grab
    it.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在某个时候，获取你想要的域名几乎到了另一场浏览器战争的边缘，因为只有一个`xyz.com`，如果一些有创业精神的人认为拥有`xyz.com`会带来金钱，他们就会抢注。
- en: When I wanted one for myself, `paulwellens.com` was already taken by a British
    rugby player, so I went for [www.paulpwellens.com](http://www.paulpwellens.com)
    (P is my middle initial). I am neither British nor a rugby player so this was
    fine with me.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 当我想为自己注册一个时，`paulwellens.com`已经被一位英国橄榄球运动员注册了，所以我选择了[www.paulpwellens.com](http://www.paulpwellens.com)（P是我的中间名首字母）。我既不是英国人也不是橄榄球运动员，所以这对我来说没问题。
- en: So a lot of pages were created worldwide, but all they had initially was information
    for you to look at, nothing else. In some cases, they were created once and never
    updated. That fortunately was the exception to confirm the rule. Many companies
    decided that they had to have a presence on the web and corporate websites were
    thus created. The advent of CSS facilitated this a lot, as it allowed the separation
    of presentation and content. That way, the marketing department would provide
    the corporate logo, and the look and feel, and all the other departments would
    provide the content.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，全球创建了大量页面，但它们最初只是提供了供你查看的信息，没有其他内容。在某些情况下，它们一旦创建就再也没有更新过。幸运的是，这只是一个例外，证实了规则。许多公司决定他们必须在互联网上有所存在，因此创建了企业网站。CSS的出现极大地促进了这一点，因为它允许将展示和内容分离。这样，市场营销部门会提供企业标志和外观感觉，而其他所有部门则提供内容。
- en: Amazon.com and e-commerce
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Amazon.com和电子商务
- en: Some creative minds realized that the Web presented an opportunity to do more
    than just provide information. It is only a (relatively) small step from providing
    the information of the products you have on your site, to actually selling them.
    E-commerce was thus born. Amazon comes to mind as a good example of a site that
    everybody can relate to as being a **Web shop**. Developing a web shop of course
    involved a lot more than having someone in the company type in some content.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 一些有创意的头脑意识到，网络不仅提供了一个提供信息的平台。从在网站上提供产品的信息到实际销售它们，只是一小步。电子商务因此诞生。亚马逊就是一个很好的例子，它是一个每个人都能联想到的**网络商店**。开发一个网络商店当然需要比让公司里的人输入一些内容更多的工作。
- en: These products are real products; they sit in a warehouse, have a part number,
    a price, a name and description, different sizes and colors, and so on. That information,
    more than likely, is already present in some database that is updated each time
    a product is sold in a retail store. To sell something online, your webpage has
    to interact with the visitor, present him with some kind of an on-screen shopping
    cart, calculate subtotals, check warehouse inventory, and so on.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这些产品是真实的产品；它们存放在仓库中，有零件号、价格、名称和描述、不同的尺寸和颜色等等。这些信息很可能已经存在于某个数据库中，每次在零售店销售产品时都会更新。要在网上销售东西，你的网页必须与访客互动，向他展示某种屏幕上的购物车，计算小计，检查仓库库存等等。
- en: To do this, more and more programming was involved, and not just data entry
    into an HTML file anymore. So the job of Web Developer was born. Traditional programmers
    are skilled in a single programming language (Java or C++) and usually a single
    platform (**Solaris** or **.NET**). Web Developers have to be fluent in at least
    four different languages, as well as know a thing or two about databases. I would
    like to add one aspect which, to me, makes this job very exciting—one gets to
    be involved in design aspects. The gap between a Web Designer and a Web Developer
    is narrowing. So today, one talks about Front-End and Back-End developers.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 要做到这一点，需要越来越多的编程知识，而不仅仅是将数据输入HTML文件。因此，网络开发者的工作就诞生了。传统的程序员精通一种编程语言（Java或C++）和通常一个平台（**Solaris**或**.NET**）。网络开发者必须精通至少四种不同的语言，并且对数据库有所了解。我想补充一点，对我来说，这个工作非常令人兴奋——可以参与到设计方面。网络设计师和网络开发者之间的差距正在缩小。所以今天，人们谈论的是前端和后端开发者。
- en: So this is what we will teach you in this book; *how to be a Web Developer*,
    but not before wrapping up our history lesson. There are a few more things that
    made the web what it is today.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，这本书将教授你们的内容是；*如何成为一名网络开发者*，但在结束我们的历史课程之前。还有一些事情使得网络成为今天的样子。
- en: Google and Yahoo!
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 谷歌和雅虎！
- en: So you have a website with information, or a web shop because you are selling
    something on the web, like `www.mycoolproduct.com`. How do you expect to reach
    your potential customers, call every single one of them? This is where Google
    or Yahoo fit in. These popular companies developed the so-called search engines.
    You want to find out everything there is to know about a movie you just watched,
    a song you cannot remember the name of, or simply the phone number of your favorite
    restaurant? You visit [google.com](http://google.com), [yahoo.com](http://yahoo.com),
    or equivalent sites and type in what you are looking for. Chances are you will
    find it.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 所以你有一个包含信息的网站，或者是一个网店，因为你正在网上销售一些东西，比如 `www.mycoolproduct.com`。你期望如何接触到你的潜在客户，给每一个都打电话吗？这就是谷歌或雅虎发挥作用的地方。这些流行的公司开发了所谓的搜索引擎。你想了解你刚刚看过的电影的所有信息，你无法记住名字的歌曲，或者你最喜欢的餐厅的电话号码？你访问
    [google.com](http://google.com)，[yahoo.com](http://yahoo.com)，或者类似的网站，并输入你想要查找的内容。你可能会找到它。
- en: We did a usability study at work where we gave one group a set of CDs, a stack
    of manuals, and a computer to install; the other group did not get the manuals
    but Internet access. The second group did way better because they felt they did
    not need the manuals, as they assumed them to probably be out of date, and immediately
    looked things up online. And this happened over 10 years ago.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在工作场所进行了一项可用性研究，我们给一组人提供了一套CD、一摞手册和一台安装的电脑；另一组人没有手册，但有互联网接入。第二组做得更好，因为他们觉得不需要手册，因为他们认为手册可能已经过时了，所以他们立即在网上查找信息。而且这是在10年前发生的。
- en: Today, the use of search engines is so commonplace that terms like Yahoo! and
    Google are used as verbs. In some languages, they actually have become verbs and
    made it into the official dictionary.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 今天，搜索引擎的使用如此普遍，以至于像Yahoo!和Google这样的术语被用作动词。在某些语言中，它们实际上已经成为动词，并进入了官方词典。
- en: Social networking
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 社交网络
- en: I know people who do not use Facebook today, but I do not know anybody who does
    not know of Facebook. For years I walked by the building where Facebook had its
    office. I was not really interested. Then, when I moved back to Belgium, I decided
    to join them so I could stay in touch with my friends in California, who live
    in a different time zone and several thousands of miles away. From one of them
    I found out that the Facebook folks have since moved into the building where I
    used to have my office. Funny how that goes sometimes!
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我认识一些今天不使用Facebook的人，但我不知道有谁不知道Facebook。多年来，我路过Facebook办公楼的建筑。我并不真的感兴趣。然后，当我搬回比利时时，我决定加入他们，这样我就可以与加利福尼亚的朋友保持联系，他们生活在不同的时区，相隔数千英里。从其中一个人那里我得知，Facebook的人已经搬进了我曾经办公的建筑。有时候事情就是这样有趣！
- en: Facebook, Twitter, YouTube, and LinkedIn are examples of popular social networking
    sites. Nothing is sold here, but shared. People share pictures, stories, events,
    thoughts, ideas, opinions, and so on.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: Facebook、Twitter、YouTube和LinkedIn是流行的社交网站的代表。这里没有销售，只有分享。人们分享图片、故事、事件、想法、观点等等。
- en: Web development
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络开发
- en: Many years ago, I took a 6 month class on what, basically, is part one of this
    book. Months into it, it became apparent that the lack of an introductory part
    that explains how all the components of the course were related, was the course's
    biggest flaw.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 多年前，我参加了一个为期6个月的课程，基本上是这本书的第一部分。几个月后，很明显，缺乏一个解释课程所有组成部分之间关系的介绍部分是这门课程的最大缺陷。
- en: 'After six months, there were still people who did not understand the difference
    between Java and JavaScript. So I promised myself two things: that one day I would
    write a book, and that such a chapter would be part of it. So let''s go!'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 经过六个月后，仍有很多人不理解Java和JavaScript之间的区别。所以我对自己承诺了两件事：有一天我会写一本书，并且这样一个章节将包含在其中。那么，让我们开始吧！
- en: HTML
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: HTML
- en: 'Files written in HTML form the basis of every website. We briefly touched on
    its history in the previous section; here we will dig a little deeper in its structure.
    Look at the following example:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 以HTML编写的文件是每个网站的基础。我们在上一节中简要提到了其历史；在这里，我们将更深入地探讨其结构。看看以下示例：
- en: '[PRE1]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The first line specifies `DOCTYPE`, referring to the HTML version used, so the
    browser knows how to interpret the file. The one in the example is indicative
    of HTML5\. `DOCTYPE` statements used to be a lot longer.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 第一行指定了 `DOCTYPE`，指的是使用的HTML版本，以便浏览器知道如何解释该文件。示例中的 `DOCTYPE` 是HTML5的示例。`DOCTYPE`
    声明过去要长得多。
- en: This is followed by the main tag, the `<html>` tag. In-between, we will find
    all our HTML in two sections, `<head>` and `<body>`. The body tag is what contains
    your content, and the head tag contains other information. In our example, there
    is one metatag that specifies what encoding is used. The `<title>` tag contains
    text that will be displayed by the browser at the very top of the window. It is
    very important to not forget the `<title>` tag, as this is one of the things search
    engines will examine.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是主要标签，即 `<html>` 标签。在其中，我们将找到所有的HTML，分为两个部分，即 `<head>` 和 `<body>`。主体标签包含您的内容，而头部标签包含其他信息。在我们的例子中，有一个元标签指定了使用的编码。`<title>`
    标签包含将在浏览器窗口顶部显示的文本。不要忘记 `<title>` 标签非常重要，因为这是搜索引擎将检查的事项之一。
- en: In this simple example, the body contains a single `<h1>` tag. This represents
    a level one header in the document, similar to headers you find in word processors.
    The browser will decide how to display that content or, as they say, render it.
    So how do we get the HTML into a file and how do we get it to a browser?
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个简单的例子中，主体部分包含一个 `<h1>` 标签。这代表文档中的一级标题，类似于您在文字处理程序中找到的标题。浏览器将决定如何显示该内容，或者如他们所说，渲染它。那么我们如何将HTML放入文件，以及如何将其放入浏览器中呢？
- en: HTML editors and other tools
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: HTML编辑器和其他工具
- en: As an HTML file is just a text file, your favorite text editor will do just
    fine. Just make sure it has the `.html` extension in the name, for example `hello.html`.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 由于HTML文件只是一个文本文件，您最喜欢的文本编辑器就可以胜任。只需确保文件名中有 `.html` 扩展名，例如 `hello.html`。
- en: However, at some point, you are probably going to include some CSS, JavaScript,
    and surely PHP in the same file, in which case specialized tools will make you
    far more productive.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在某个时候，您可能需要在同一文件中包含一些CSS、JavaScript，当然还有PHP，在这种情况下，专业的工具将使您的工作效率更高。
- en: Browsers and web servers
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 浏览器和Web服务器
- en: So now you have a file called `hello.html` and you want to look at it in a browser.
    In real life, this file will be part of your website and you will have to put
    it there. This is where the company that is hosting your website told you to put
    your files. They will give you all the information to correctly transfer your
    file(s) to their server.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您有一个名为 `hello.html` 的文件，并想在浏览器中查看它。在现实生活中，这个文件将是您网站的一部分，您必须将其放置在那里。这就是您的网站托管公司告诉您放置文件的地方。他们将提供所有正确传输文件（s）到他们的服务器的信息。
- en: 'They will end up in a folder that is called the **document root**, the root
    of all the files that make up your site. If you were to follow the instructions
    with the `hello.html` file and transfer it there, you will see the result when
    you type the following address in the URL bar of your browser:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 它们最终会进入一个名为**文档根目录**的文件夹，这是构成您网站的所有文件的根。如果您按照 `hello.html` 文件中的说明将其传输到那里，您将在浏览器地址栏中输入以下地址时看到结果：
- en: '`http://www.mycoolsite.com/hello`'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://www.mycoolsite.com/hello`'
- en: You can also look at your file locally, and we will teach you more about that
    in the next chapter.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 您也可以在本地查看您的文件，我们将在下一章中向您介绍更多关于这方面的内容。
- en: It is very important to realize that to the people who visit your site, your
    web page may not look the same as what you created. One factor—but not the only
    factor—is the browser that is being used. We therefor recommend that, from the
    early development stage on, you look at your work using different browsers and
    increase the number of browsers, for/and different devices.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 很重要的一点是，要意识到对于访问你网站的人来说，你的网页可能看起来和你创建的不一样。一个因素——但不是唯一因素——是正在使用的浏览器。因此，我们建议，从早期开发阶段开始，你就要使用不同的浏览器查看你的作品，并且增加浏览器的数量，用于/并且针对不同的设备。
- en: Always install Mozilla Firefox and Google Chrome on your Mac or PC. Pick one
    to do your development (I like Firefox because of *Firebug*), but always do a
    little bit of testing with other browsers before you deliver.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 总是在你的Mac或PC上安装Mozilla Firefox和Google Chrome。选择一个来开发（我喜欢Firefox，因为*Firebug*），但在交付之前，总是要对其他浏览器进行一些测试。
- en: So, start with our little example, and you will see that even *Hello World*
    will look different in different browsers. Fortunately, we can control almost
    all of this by using CSS.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，从我们的这个小例子开始，你会发现即使是*Hello World*在不同的浏览器中看起来也会不同。幸运的是，我们可以通过使用CSS来控制几乎所有这些。
- en: CSS
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: CSS
- en: '**Cascading Style Sheets** (**CSS**) is a technology that works nicely in accordance
    with HTML and allows you, not the browser, to determine what your page will look
    like.'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '**层叠样式表**（**CSS**）是一种与HTML配合得很好的技术，它允许你，而不是浏览器，来决定你的页面将呈现什么样子。'
- en: 'Look at this slightly modified example of our **Hello, World** webpage, `hello.html`:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 看看这个稍微修改过的我们的**Hello, World**网页示例，`hello.html`：
- en: '[PRE2]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: In the line containing the `<h1>` tag, we added two HTML attributes, `class`
    and `id`, to the `<h1>` element. Attributes are strings inside an HTML opening
    tag of the format name="value" and the two most important attributes you can use
    are `class` and `id`. Many elements can be part of several classes, but `id`s
    are unique to a single element.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在包含`<h1>`标签的行中，我们向`<h1>`元素添加了两个HTML属性，`class`和`id`。属性是HTML开标签内的字符串，格式为name="value"，你可以使用的两个最重要的属性是`class`和`id`。许多元素可以是多个类的一部分，但`id`对于单个元素是唯一的。
- en: 'Now create a file called `hello.css` with the following content:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 现在创建一个名为`hello.css`的文件，内容如下：
- en: '[PRE3]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This is our first CSS stylesheet. The first rule in the file means that any
    `<h1>` element in our document will be in the Baskerville font (or cambria, if
    Baskerville is not present on the user's computer), at 24 pixels, and in the color
    the browser has chosen (usually black).
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们的第一个CSS样式表。文件中的第一个规则意味着我们的文档中的任何`<h1>`元素都将使用Baskerville字体（如果Baskerville在用户的计算机上不可用，则为cambria），24像素大小，以及浏览器选择的颜色（通常是黑色）。
- en: However, when it, or any other element, not just h1, has a class="`green`" (in
    CSS, the `.` in name means class name), it will be displayed in the color green.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，当它或任何其他元素（不仅仅是h1），具有class="`green`"（在CSS中，名称中的`.`表示类名）时，它将以绿色显示。
- en: Finally, our specific **Hello World** header will be displayed in bold and italics
    because of the last few lines in the CSS file. The `#` character is used in CSS
    to indicate an identifier, so the **#hello** rule means a rule for the element
    that is set to the id= "`hello`".
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们的特定**Hello World**标题将因为CSS文件中的最后几行而以粗体和斜体显示。在CSS中，`#`字符用于表示标识符，所以**#hello**规则意味着针对设置为id="`hello`"的元素的规则。
- en: As a result of all of this, any browser should render our HTML file as a line
    containing the text *Hello, world*, displayed in letter type Baskerville (a serif
    font often used for eBooks, no relation to Sherlock Holmes that I know of), in
    green, of size 24 pixels, and in bold and italic. Just try it, it works!
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 由于所有这些，任何浏览器都应该将我们的HTML文件渲染为包含文本*Hello, world*的行，以Baskerville字体（一种常用于电子书的衬线字体，据我所知与福尔摩斯无关），绿色，24像素大小，并且加粗和斜体。试试看，它真的有效！
- en: 'Note that we did not repeat the Baskerville line in the #hello rule, the rule
    is simply inherited. The `<h1>` rules cascade into #hello, as this happens to
    be an `<h1>`, hence the name Cascading Style Sheets. As we just demonstrated,
    we can clearly separate the content and the presentation of our page by using
    CSS. That is why it is important to learn how to use CSS as early as possible.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，我们没有在#hello规则中重复Baskerville行，该规则只是简单地继承。`<h1>`规则会级联到#hello，因为恰好这是一个`<h1>`元素，所以得名层叠样式表。正如我们刚才所展示的，我们可以通过使用CSS清楚地分离页面的内容和表现。这就是为什么尽早学习如何使用CSS很重要的原因。
- en: So, as a Web Developer, you already know that you need to master at least HTML
    and CSS. We will now move on to the next piece of the language puzzle—JavaScript.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，作为一名Web开发者，你已经知道你需要掌握至少HTML和CSS。我们现在将进入语言拼图中的下一部分——JavaScript。
- en: JavaScript
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: JavaScript
- en: When we talk about JavaScript in this book, unless noted otherwise, we mean
    client-side JavaScript. All the code is interpreted, just like the HTML and CSS,
    by the browser.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，当我们谈论JavaScript时，除非另有说明，我们指的是客户端JavaScript。所有代码都由浏览器解释，就像HTML和CSS一样。
- en: 'By using JavaScript, we can add action to our pages and interaction with the
    visitors of our website, as well as change the contents and look of our page through
    programming. Let us take a look at the following example:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用JavaScript，我们可以给我们的页面添加动作，与我们的网站访客进行交互，并通过编程改变页面的内容和外观。让我们看看以下示例：
- en: '[PRE4]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: If you look at this page in a browser, there will be no **Hello, World** displayed
    on your screen, but a pop-up box will appear with a question. If you answer the
    question **Yes**, our familiar green **Hello World** text will be back. The pop-up
    box itself will look completely different when you use a different browser.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在一个浏览器中查看这个页面，你的屏幕上不会显示**Hello, World**，而会出现一个带有问题的弹出框。如果你回答问题**是**，我们熟悉的绿色**Hello
    World**文本将重新出现。当你使用不同的浏览器时，弹出框本身看起来也会完全不同。
- en: If you look at the code, you will recognize programming-like stuff. There is
    an `if` clause and there is a variable (answer). Note that the name of the variable
    is a normal character string but in its declaration it is preceded by `var`. All
    of the JavaScript code is in-between an HTML `<script>` tag with a `type` attribute
    of `text/javascript`.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你查看代码，你会认出类似编程的东西。有一个`if`语句和一个变量（answer）。请注意，变量的名称是一个普通的字符字符串，但在其声明中它前面有`var`。所有的JavaScript代码都位于一个带有`type`属性为`text/javascript`的HTML
    `<script>`标签之间。
- en: 'There is one line that is very typical to JavaScript and does all the work
    for us:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个对于JavaScript来说非常典型的语句，为我们做了所有的工作：
- en: '[PRE5]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[Chapter 4](ch04.html "Chapter 4. JavaScript"), *JavaScript* is where we will
    really teach you what this means. For now, we will give you the English interpretation
    of this line of code: In our document, replace the inner content of the HTML tag
    with `id` hello by the string **Hello, world**.'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '[第4章](ch04.html "第4章。JavaScript")，*JavaScript*将真正教你这个含义。现在，我们将给出这条代码的英文解释：在我们的文档中，将HTML标签的内部内容替换为`id`为hello的字符串**Hello,
    world**。'
- en: In subsequent chapters, we will introduce JavaScript `libraries`, which will
    allow you to write more compact JavaScript code, with a lot of work already done
    for you. **jQuery** is one of these libraries and will be discussed in [Chapter
    7](ch07.html "Chapter 7. jQuery"), *jQuery*.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在随后的章节中，我们将介绍JavaScript `库`，这将允许你编写更紧凑的JavaScript代码，其中已经为你做了很多工作。**jQuery**是这些库之一，将在[第7章](ch07.html
    "第7章。jQuery")中讨论，*jQuery*。
- en: PHP
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PHP
- en: JavaScript is a complete language and allows you to do a lot more things than
    those we showed you in the previous little example. However, as I mentioned, this
    is client-side JavaScript, interpreted by the browser. So once you switch off
    your computer or tablet, it is all gone. Well, some of it may be saved on your
    machine.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript是一种完整的语言，它允许你做比我们在上一个简单示例中展示的更多的事情。然而，正如我提到的，这是客户端JavaScript，由浏览器解释。所以一旦你关闭了电脑或平板，它就消失了。好吧，其中一些可能保存在你的机器上。
- en: Imagine trying to create an online store using only the languages we have mentioned
    so far. That would not work. The information of what is available in the store,
    as well as the data of your specific order has to live somewhere else. That would
    be the computer of the company that runs the store, not the device that runs the
    browser used to visit the site.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，如果我们只使用我们之前提到的语言来创建在线商店，那将不会起作用。商店中有什么信息，以及你特定订单的数据必须存在于其他地方。那将是运行商店的公司计算机，而不是运行浏览器的设备。
- en: 'So, dear Web Developer, you have guessed it, you will have to learn at least
    one more programming language to deal with all of this, before you can create
    an online store. The language itself could be any of several (it can even be JavaScript),
    but where the code is stored and interpreted is the key difference here: a remote
    Application Server. One of the most popular of these languages is PHP, which is
    covered in detail in [Chapter 5](ch05.html "Chapter 5. PHP"), *PHP*. Let us look
    at the following example:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，亲爱的网络开发者，你已经猜到了，在你能够创建一个在线商店之前，你至少需要学习一种额外的编程语言来处理所有这些，而语言本身可以是多种之一（甚至可以是
    JavaScript），但代码存储和解释的关键区别在于：远程应用服务器。这些语言中最受欢迎的一种是 PHP，它在第 5 章（[Chapter 5](ch05.html
    "Chapter 5. PHP")）中有详细说明，*PHP*。让我们看看以下例子：
- en: '[PRE6]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: So far we have been able to test our little examples in a browser, but this
    is different. To try out this example, you will need to have an Application Server,
    local or not, installed. For now, just read on.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们能够在浏览器中测试我们的小例子，但这是不同的。要尝试这个例子，你需要安装一个应用服务器，无论是本地还是远程。现在，只需继续阅读。
- en: Notice the `<?php` and `?>` strings in the example. This is the beginning and
    end of where the PHP code resides and will have to be interpreted by that Application
    Server. The first portion of the code defines two variables. Note that in PHP,
    names of variables start with a `$` sign, whereas in JavaScript they don't. `echo`,
    familiar to UNIX folks, simply echoes the value of these variables.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 注意例子中的 `<?php` 和 `?>` 字符串。这是 PHP 代码开始和结束的位置，并且必须由该应用服务器进行解释。代码的第一部分定义了两个变量。请注意，在
    PHP 中，变量的名称以 `$` 符号开头，而在 JavaScript 中则不是。对 UNIX 用户来说熟悉的 `echo` 命令简单地回显这些变量的值。
- en: 'So once the AppServer is done interpreting the PHP code, all you are left with
    is our HTML example from the CSS section. This is exactly how it works: the AppServer
    interprets the PHP code, and then the WebServer passes the resulting HTML code
    to the browser.'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，一旦应用服务器完成对 PHP 代码的解释，你剩下的就是 CSS 部分中的我们的 HTML 示例。这正是它的工作方式：应用服务器解释 PHP 代码，然后网络服务器将生成的
    HTML 代码传递给浏览器。
- en: '**Apache** is the name of a very popular AppServer that happens to be a WebServer
    at the same time. This is software that runs on a computer we also call a server
    and this is where your program file resides: `hello.php`.'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '**Apache** 是一个非常流行的应用服务器，同时也是一个网络服务器。这是运行在计算机上（我们通常称之为服务器）的软件，你的程序文件就存放在这里：`hello.php`。'
- en: So `http://www.mycoolsite.com/hello` will be, once again, the way this webpage
    can be accessed. This may look like a little bit of using an overkill tour an
    additional language to display **Hello, World**. But there are some situations
    where you'd want to do so, for example if the data you need in your HTML is stored
    somewhere else.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，`http://www.mycoolsite.com/hello` 将再次成为访问这个网页的方式。这看起来可能是在使用过度夸张的方式使用额外的语言来显示
    **Hello, World**。但有些情况下你可能想要这样做，例如，如果你需要的 HTML 中的数据存储在其他地方。
- en: Data
  id: totrans-111
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据
- en: 'One of the main reasons to use the remote server and the server-side language
    is going to be the storage and manipulation of data. This data can be in several
    formats, from a flat text file to a spreadsheet, XML, JSON, or a full-fledged
    database, which requires a Database Server. In the latter case, you may need to
    learn yet another language, **Standard** **Query Language** (**SQL**) and deal
    with another (software) server: a database server. We will address several options
    in this book.'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 使用远程服务器和服务器端语言的主要原因之一将是数据的存储和处理。这些数据可以以多种格式存在，从平面文本文件到电子表格，XML、JSON 或一个完整的数据库，这需要数据库服务器。在后一种情况下，你可能需要学习另一种语言，**标准查询语言**（**SQL**）并处理另一个（软件）服务器：数据库服务器。本书将介绍几种选择。
- en: Summary
  id: totrans-113
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: 'In this chapter we discussed the advent and history of the World Wide Web.
    Next we discussed Web Development in general with a few examples. In order to
    become a developer of Web Applications, you will have to master at least four
    languages: HTML, CSS, JavaScript, and a server-side language such as PHP.'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了万维网的诞生和历史。接下来，我们通过一些例子讨论了网络开发。为了成为一名网络应用开发者，你必须掌握至少四种语言：HTML、CSS、JavaScript
    以及像 PHP 这样的服务器端语言。
- en: Depending on how you plan to organize your data, there may be a need to learn
    a fifth language (SQL) as well. There will also be more things to learn, such
    as how to use a library or framework. The good news is that they all have their
    role in the overall picture of what a Web Application is all about.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 根据你计划如何组织你的数据，可能还需要学习第五种语言（SQL）。还有更多东西需要学习，比如如何使用库或框架。好消息是，它们都在构建一个完整的Web应用程序概念中扮演着各自的角色。
- en: Now that we know what we need to learn, let us go do it! We will start with
    HTML.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道了我们需要学习的内容，让我们去行动吧！我们将从HTML开始。
