- en: Chapter 8. Programming phpBB
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章。编程phpBB
- en: We’ve learned a lot about installing phpBB, configuring it, and customizing
    it to suit our community’s needs. It’s now time for the last, most advanced chapter
    of the book, describing what you need to know in order to program new custom phpBB
    features.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经学习了关于安装phpBB、配置它以及根据我们社区的需求定制它的很多知识。现在是时候阅读本书的最后一章，也是最复杂的一章，描述你需要了解的内容才能编写新的自定义phpBB功能。
- en: PHP programming knowledge and some SQL knowledge are pre-requisites for a good
    understanding of the chapter, but even if you’re not familiar with PHP, you can
    still skim through the examples, if only to whet your programming appetite. Who
    knows, maybe you’ll like what you see and decide to learn some more PHP.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地理解本章，需要具备PHP编程知识和一些SQL知识，但即使你不熟悉PHP，你仍然可以浏览示例，只是为了激发你的编程兴趣。谁知道呢，你可能喜欢你所看到的东西，并决定学习更多的PHP。
- en: This chapter is not a comprehensive guide to the phpBB programming experience,
    but instead will concentrate on the most used phpBB libraries and functions. The
    chapter starts with a simple "Hello phpBB World" script and slowly moves on to
    include more complicated examples. At the end of the chapter, you’ll develop an
    all-new phpBB script called "What’s Up?", which displays the recent topics from
    all the forums in your board on a single screen, while respecting the user-specific
    privileges.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章不是对phpBB编程体验的全面指南，而是将专注于最常用的phpBB库和函数。本章从简单的“Hello phpBB World”脚本开始，逐渐过渡到包含更复杂的示例。在章节的结尾，你将开发一个全新的phpBB脚本，名为“What’s
    Up?”，它会在单个屏幕上显示你论坛中所有论坛的最新主题，同时尊重用户的特定权限。
- en: 'In this chapter you will learn about:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将学习以下内容：
- en: Creating the "Hello phpBB World!" script
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建“Hello phpBB World!”脚本
- en: Working with the database
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与数据库一起工作
- en: Using phpBB messages
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用phpBB消息
- en: phpBBs multi-language system
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: phpBB的多语言系统
- en: Using phpBB templates
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用phpBB模板
- en: User authentication
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户身份验证
- en: Other handy phpBB functions and coding standards
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他有用的phpBB函数和编码标准
- en: Putting it all together to create a new phpBB add-on script
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将所有这些组合起来创建一个新的phpBB插件脚本
- en: Hello phpBB World!
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Hello phpBB World!
- en: It’s a tradition when you start learning a new programming language or technology;
    the first thing you learn to do is how to write a simple application that just
    displays "Hello World!". Let’s see how to do this in phpBB.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 当你开始学习一门新的编程语言或技术时，这是一个传统；你首先学习做的事情是如何编写一个简单的应用程序，它只显示“Hello World!”。让我们看看如何在phpBB中做到这一点。
- en: First off, just to give you an idea of what the goal is, here’s the result of
    executing the Hello World script, displayed in a browser.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，为了给你一个目标的概念，这里是执行Hello World脚本的结果，在浏览器中显示。
- en: '![Hello phpBB World!](img/1132_08_01.jpg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![Hello phpBB World!](img/1132_08_01.jpg)'
- en: Here’s the code to produce the result in the screenshot above.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这是生成上述截图结果的代码。
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: In order to reproduce this on your board, you just need to create a new blank
    text file named, for example, `helloBB.php`, type the earlier code into the file,
    save it, and copy it to your board’s root folder. You can then access the newly
    created script with your preferred browser (if your board is located at [http://www.yourdomain.com/forum](http://www.yourdomain.com/forum),
    you can go to [http://www.yourdomain.com/forum/helloBB.php](http://www.yourdomain.com/forum/helloBB.php)
    to access this script.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在你的论坛上重现这个效果，你只需要创建一个名为，例如，`helloBB.php`的新空白文本文件，将前面的代码输入到文件中，保存它，并将其复制到你的论坛根目录。然后你可以使用你喜欢的浏览器访问新创建的脚本（如果你的论坛位于[http://www.yourdomain.com/forum](http://www.yourdomain.com/forum)，你可以转到[http://www.yourdomain.com/forum/helloBB.php](http://www.yourdomain.com/forum/helloBB.php)来访问此脚本）。
- en: Note
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The source code for this file (and for all the examples in the chapter) can
    be downloaded from [http://www.packtpub.com](http://www.packtpub.com).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 本文件的源代码（以及本章中所有示例的源代码）可以从[http://www.packtpub.com](http://www.packtpub.com)下载。
- en: Before reading the explanations, take a look at the code; take the time to read
    it and see if you can figure out what’s happening in the script.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在阅读解释之前，先看看代码；花点时间阅读它，看看你是否能弄清楚脚本中发生了什么。
- en: 'The script is divided into *five code blocks* delimited by empty lines. The
    actual work of the script is done in the *fourth* block—that’s where the "Hello"
    is:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本被分成由空行分隔的*五个代码块*。脚本的实际工作是在*第四个*块中完成的——那就是“Hello”所在的地方：
- en: '[PRE1]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The rest of the script is setting up the phpBB environment for the actual work
    to be performed. Every script that you write should have the same flow, so you
    can use this script as a prototype for all your future scripts and just replace
    the "working" part with the functionality you require. This being said, you don’t
    really need to know what’s happening outside the fourth block but if you’re curious,
    here’s some more information.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 剩余的脚本正在为实际要执行的工作设置 phpBB 环境。你写的每个脚本都应该有相同的流程，因此你可以将此脚本作为所有未来脚本的模板，只需将“工作”部分替换为你需要的功能。话虽如此，你实际上并不需要了解第四个代码块之外发生的事情，但如果你好奇，这里有一些更多信息。
- en: 'Here’s what’s happening in the *first* block:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在*第一个*代码块中发生的情况如下：
- en: On the first line, a constant called `IN_PHPBB` is defined. This is a security
    measure that will be discussed in a bit more detail later in the chapter.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在第一行，定义了一个名为 `IN_PHPBB` 的常量。这是一项安全措施，将在本章稍后更详细地讨论。
- en: Then the phpBB root directory is defined, which in this case is the current
    directory since the script is located in the phpBB root.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后定义了 phpBB 的根目录，在这种情况下是当前目录，因为脚本位于 phpBB 根目录中。
- en: Then a simple file called `extension.inc` is included. It only defines the extension
    of the PHP files on the server. Most likely the extension will be `.php`.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后包含了一个简单的文件 `extension.inc`。它只定义了服务器上 PHP 文件的后缀。很可能是 `.php` 后缀。
- en: In the last line of the first block, a really important file—`common.php`—is
    included. This script is responsible for the most of the phpBB environment setup
    and configuration. You can look into its source for more details, but just to
    have a general idea, this script is responsible for initializing the forum configuration,
    establishing a database connection, and including the other libraries and functions
    that phpBB cannot do without.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在第一个代码块的最后一条线，包含了一个非常重要的文件——`common.php`。这个脚本负责大多数 phpBB 环境的设置和配置。你可以查看其源代码以获取更多详细信息，但为了有一个大致的了解，这个脚本负责初始化论坛配置、建立数据库连接以及包含
    phpBB 无法没有的其他库和函数。
- en: The *second* block of code is responsible for calling two functions that deal
    with the session data and user preferences. The *third* and the *fifth* blocks
    are including respectively the header and the footer of the phpBB graphical user
    interface. The header is everything you see on the screenshot that is *before*
    the `Hello, phpBB World!` line, and the footer is everything *after* that. If
    you program a special script, for example a pop-up window script, you may not
    necessarily need the header and the footer.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '*第二个*代码块负责调用两个处理会话数据和用户偏好的函数。*第三个*和*第五个*代码块分别包含 phpBB 图形用户界面的头部和尾部。头部是截图上 `Hello,
    phpBB World!` 行之前的所有内容，而尾部是之后的所有内容。如果你编写了一个特殊的脚本，例如弹出窗口脚本，你可能不一定需要头部和尾部。'
- en: Now that we know the basic structure of a phpBB script, let’s move ahead and
    retrieve some data from the database.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经了解了 phpBB 脚本的基本结构，让我们继续前进并从数据库中检索一些数据。
- en: Working with the Database
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 与数据库一起工作
- en: The database connectivity in phpBB is an important topic, so it needs special
    attention. This section gives you some background information about the database
    abstraction used in phpBB, and some examples of its use to retrieve data from
    your database.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: phpBB 中的数据库连接是一个重要的话题，因此需要特别注意。本节提供了有关 phpBB 中使用的数据库抽象的背景信息，以及一些从数据库中检索数据的示例。
- en: Database Abstraction
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据库抽象
- en: As you know already, phpBB can work with different databases. To achieve this
    result without re-coding the whole system, phpBB employs a programming technique
    called **database abstraction**. This simply means that there are several scripts
    (classes), specific for each supported database system that in a different way
    achieve the same result. In this case, the other phpBB scripts don’t need to know
    anything about the specific database system, they just call the functions (class
    methods) of the database abstraction class and it does the work on the specific
    database.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所知，phpBB 可以与不同的数据库一起工作。为了在不重新编码整个系统的情况下实现这一结果，phpBB 采用了一种称为**数据库抽象**的编程技术。这仅仅意味着有几个脚本（类），针对每个支持的数据库系统特定，以不同的方式实现相同的结果。在这种情况下，其他
    phpBB 脚本不需要了解特定的数据库系统，它们只需调用数据库抽象类的函数（类方法），然后它会在特定的数据库上完成工作。
- en: 'For example, to execute an SQL query on a MySQL database, PHP scripts use the
    `mysql_query()` function. To do the same on an MS Access database, `odbc_exec()`
    is used. So, as part of the database abstraction mechanism, phpBB is defining
    individual classes that work on different database systems: one class for MySQL,
    one for MS Access, and so on for the other supported RDBMS. The classes have different
    implementations, but share the same "public interface", meaning all classes have
    the same set of functions (methods). So when you want to execute an SQL query,
    all you need to do is use the `sql_query()` method from the phpBB database abstraction
    layer without having to understand how this method is implemented and what underlying
    database system is used. Abstracting and concentrating on the more important stuff,
    while leaving other classes responsible for some details—that’s the beauty of
    the object-oriented programming!'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，要在 MySQL 数据库上执行 SQL 查询，PHP 脚本使用 `mysql_query()` 函数。要在 MS Access 数据库上执行相同的操作，则使用
    `odbc_exec()`。因此，作为数据库抽象机制的一部分，phpBB 定义了针对不同数据库系统的独立类：一个用于 MySQL，一个用于 MS Access，以及其他支持的
    RDBMS。这些类有不同的实现，但共享相同的“公共接口”，这意味着所有类都有相同的一组函数（方法）。因此，当您想要执行 SQL 查询时，您只需使用 phpBB
    数据库抽象层的 `sql_query()` 方法，而无需了解此方法是如何实现的以及使用了哪种底层数据库系统。抽象并关注更重要的事情，同时让其他类负责一些细节——这就是面向对象编程的美丽之处！
- en: In the `common.php` script (which we mentioned earlier) a database connection
    is established for you and the `$db` variable is defined, containing an object
    of the appropriate database class. Again, you don’t care what type of database
    system is used; you only need to know the programming interface of the phpBB abstraction
    layer. This may sound like we’re going into more trouble learning additional functions
    and how they work, but this is in fact a good thing, because this way you code
    once and then reuse your code on any database supported by phpBB.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `common.php` 脚本（我们之前提到过）中，为您建立了数据库连接，并定义了 `$db` 变量，其中包含适当的数据库类的对象。同样，您不必关心使用的是哪种数据库系统；您只需要了解
    phpBB 抽象层的编程接口。这听起来可能像是我们在学习更多函数及其工作方式时遇到了更多的麻烦，但实际上这是一件好事，因为这样您只需编写一次代码，然后就可以在
    phpBB 支持的任何数据库上重用您的代码。
- en: One last thing about the database abstraction—the use of standard SQL commands.
    If you use any SQL commands or functions specific to a particular RDBMS, then
    be aware that this functionality may not exist in other systems. This shouldn’t
    be a problem in general, because you don’t just switch between different databases
    every day, but it’s still something you should know.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 关于数据库抽象的最后一件事——标准 SQL 命令的使用。如果您使用任何特定于特定 RDBMS 的 SQL 命令或函数，请注意，这种功能可能在其他系统中不存在。通常情况下，这不应该成为问题，因为您不会每天在不同的数据库之间切换，但您仍然应该知道这一点。
- en: Database Abstraction Working
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据库抽象工作
- en: Let’s take a look at an example of how the phpBB database abstraction layer
    works. You’ll create a script that shows a counter of how many words were used
    on the board forums so far. phpBB has a full text search system that stores all
    the used words into a database table. So for the purposes of the example, all
    you need to do is count the number of rows in this table.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看 phpBB 数据库抽象层的一个示例。您将创建一个脚本，显示到目前为止在论坛上使用了多少个单词。phpBB 有一个全文搜索系统，将所有使用的单词存储到数据库表中。因此，为了示例的目的，您只需要计算这个表中的行数。
- en: 'To help visualize what you’re aiming at, here’s the result of the script execution:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助您可视化目标，以下是脚本执行的结果：
- en: '![Database Abstraction Working](img/1132_08_02.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![数据库抽象工作](img/1132_08_02.jpg)'
- en: 'Here’s the source code used to achieve it:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这是实现它的源代码：
- en: '[PRE2]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Save this code into a file called `phpBBdb.php` (or get it from the book’s code
    download), copy the file to your phpBB root, and give it a try in your browser.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 将此代码保存到名为 `phpBBdb.php` 的文件中（或从书籍的代码下载中获取），将文件复制到您的 phpBB 根目录，并在浏览器中尝试运行。
- en: As you can see, this script follows the structure of the previous one, only
    the "working" part was changed. Let’s discuss this part a bit.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，此脚本遵循了上一个脚本的结构，只是“工作”部分发生了变化。让我们详细讨论一下这部分。
- en: First we start with a SQL query to be executed.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们从要执行的 SQL 查询开始。
- en: '[PRE3]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: In this query, `SEARCH_WORD_TABLE` is a constant that defines the name of the
    table that contains the full-text search data. If you remember, during the installation
    you could specify a table prefix for all the tables in the database. Using constants
    (such as `SEARCH_WORD_TABLE, POSTS_TABLE`, and so on) instead of hard-coded table
    names allows phpBB to offer this feature. You can see how all database-related
    constants (as well as other constants) are defined by looking at the `includes/constants.php`
    script. By default, the table prefix is `phpbb_`, so after the constant is replaced
    with its value, the query will look like `SELECT COUNT(*) FROM phpbb_search_wordlist`;.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个查询中，`SEARCH_WORD_TABLE` 是一个常量，它定义了包含全文搜索数据的表名。如果你还记得，在安装过程中，你可以为数据库中的所有表指定一个表前缀。使用常量（如
    `SEARCH_WORD_TABLE, POSTS_TABLE` 等）而不是硬编码的表名允许 phpBB 提供这个功能。你可以通过查看 `includes/constants.php`
    脚本来了解所有数据库相关常量（以及其他常量）是如何定义的。默认情况下，表前缀是 `phpbb_`，因此，在将常量替换为其值后，查询将看起来像 `SELECT
    COUNT(*) FROM phpbb_search_wordlist`;。
- en: Now let’s take a look at the next the next line of code.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来看看下一行代码。
- en: '[PRE4]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This line executes the SQL query calling the `sql_query()` method of the instance
    of the appropriate DB abstraction class (which you didn’t need to worry about).
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这行代码通过调用适当 DB 抽象类的实例的 `sql_query()` 方法来执行 SQL 查询（你不需要担心这个）。
- en: 'This is followed by:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这之后是：
- en: '[PRE5]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: These lines check whether the query was executed successfully. If not, an error
    message is displayed (you’ll find out more about the messages in a bit). After
    the query is successfully executed, it’s time to get the results of the execution.
    (The phpBB abstraction layer offers a variety of ways to do that, which will be
    discussed later.)
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这些行检查查询是否成功执行。如果没有，将显示错误消息（你将在稍后了解更多关于这些消息的内容）。查询成功执行后，就是获取执行结果的时候了。（phpBB 抽象层提供了多种方法来实现这一点，稍后将会讨论。）
- en: '[PRE6]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: This line gets a row of results as an array and assigns it to a variable called
    `$row`. In this case, only one row (record), actually only one field, is returned.
    So `$row[0]` will contain the value that we want. The zero stands for offset zero
    in the row of returned results.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这行代码将结果行作为数组获取，并将其分配给一个名为 `$row` 的变量。在这种情况下，只返回了一行（记录），实际上只返回了一个字段。因此 `$row[0]`
    将包含我们想要的价值。零代表返回结果行中的偏移量为零。
- en: '[PRE7]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The last thing left is to display the value using `echo`.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 最后剩下的事情是使用 `echo` 显示值。
- en: '[PRE8]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Using the phpBB Database Abstraction Layer
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 phpBB 数据库抽象层
- en: We mentioned that there are several ways to retrieve data from the result of
    a query execution, after the query has been executed using `sql_query()`. Let’s
    see the options.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我们提到，有几种方法可以从查询执行的结果中检索数据，在执行 `sql_query()` 查询之后。让我们看看选项。
- en: Option 1
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 选项 1
- en: 'The example here used the `sql_fetchrow()` method. This method returns the
    results as both enumerated and associative array. The keys of the associative
    array are the field names in the result set—the same result as above could have
    been achieved by using:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这里使用的示例是 `sql_fetchrow()` 方法。此方法以枚举和关联数组的形式返回结果。关联数组的键是结果集中的字段名——上面提到的相同结果可以通过使用以下方式实现：
- en: '[PRE9]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Clearly, the above is not very typing-friendly. A better option would be to
    use:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，上面的方式不太方便输入。更好的选择是使用：
- en: '[PRE10]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'This will work if the query is slightly modified to use `words` as an alias
    to `COUNT(*)`:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 如果将查询稍微修改一下，使用 `words` 作为 `COUNT(*)` 的别名，这将有效：
- en: '[PRE11]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Option 2
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 选项 2
- en: Another way to get results from an executed query is by using the `sql_fetchrowset()`
    method. It works like `sql_fetchrow()`, except that it returns the data for all
    the records matched by a query. If you use `sql_fetchrow()`, you have to call
    this method in a loop until you reach the end of the result set, while `sql_fetchrowset()`
    returns all results and you loop through an array of results. The second option
    is somewhat friendlier, but consumes more memory because it requires copying the
    result set into the memory as an array. It’s thus not recommended for use with
    queries that will return huge result sets, but is OK for smaller "everyday" queries.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 从执行查询的结果中获取结果的另一种方式是使用 `sql_fetchrowset()` 方法。它的工作方式类似于 `sql_fetchrow()`，只不过它返回由查询匹配的所有记录的数据。如果你使用
    `sql_fetchrow()`，你必须在一个循环中调用此方法，直到达到结果集的末尾，而 `sql_fetchrowset()` 返回所有结果，并且你通过结果数组进行循环。第二个选项相对友好一些，但因为它需要将结果集作为数组复制到内存中，所以消耗更多的内存。因此，不建议与将返回大量结果集的查询一起使用，但对于较小的“日常”查询来说是可以的。
- en: 'To illustrate the difference, you can `print_r()` the results of both functions.
    From `sql_fetchrow()`, you’ll get something like:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 为了说明区别，你可以 `print_r()` 两个函数的结果。从 `sql_fetchrow()`，你会得到类似以下的内容：
- en: '[PRE12]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '.. and from `sql_fetchrowset()`, you’ll get:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: ..并且从 `sql_fetchrowset()`，你会得到：
- en: '[PRE13]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Option 3
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 选项 3
- en: 'Another way to get the result from an executed query is by using `sql_fetchfield()`,
    which returns the result from one field only, and this field is referenced by
    name. To get the expected result from the previous example, you can use:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 从执行查询的结果中获取结果的另一种方法是使用 `sql_fetchfield()`，它只返回一个字段的值，并且这个字段是通过名称引用的。为了从之前的示例中获得预期的结果，你可以使用：
- en: '[PRE14]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'If you don’t know the field name, but know its offset in the result-set row,
    you can use the `sql_fieldname()` method as follows:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不知道字段名称，但知道它在结果集行中的偏移量，你可以使用 `sql_fieldname()` 方法，如下所示：
- en: '[PRE15]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Here again zero is the offset of the field you’re interested in.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，零是你感兴趣的字段的偏移量。
- en: Using phpBB Messages
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 phpBB 消息
- en: In the previous example, you already saw how phpBB messages are used. Now it’s
    time to take a closer look at those messages and test them in action.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的示例中，你已经看到了 phpBB 消息的使用方法。现在，是时候更仔细地查看这些消息并在实际操作中测试它们了。
- en: 'In order to see a phpBB message in action, you can simply use the previous
    example, but this time, introduce an invalid command in the SQL string; for example:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 为了看到 phpBB 消息的实际效果，你可以简单地使用之前的示例，但这次，在 SQL 字符串中引入一个无效命令；例如：
- en: '[PRE16]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: If you save the file that you’ve just modified as `phpBBmessage.php` and preview
    it in your browser, you’ll see an error message caused by the invalid SQL string.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你将刚刚修改的文件保存为 `phpBBmessage.php` 并在浏览器中预览，你会看到一个由无效 SQL 字符串引起的错误消息。
- en: '![Using phpBB Messages](img/1132_08_03.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![使用 phpBB 消息](img/1132_08_03.jpg)'
- en: 'This message was caused by the following piece of code from the example:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 这条消息是由以下示例中的代码引起的：
- en: '[PRE17]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Here the `message_die()` function available in phpBB was used. You see all
    the details of the error because the forum runs in debug mode. When in production
    (when your forum is live) it’s a good idea to have the debug mode turned off.
    You can do this by changing a line in the `constants.php` script, located in the
    `includes` folder. The debug setup code is located at the very top of the `constants.php`
    script. Make sure the `DEBUG` constant is set to `0`, as follows:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 这里使用了 phpBB 中可用的 `message_die()` 函数。你看到所有错误细节，因为论坛处于调试模式。在生产环境中（当你的论坛上线时），关闭调试模式是个好主意。你可以通过更改
    `includes` 文件夹中的 `constants.php` 脚本中的一行来实现这一点。调试设置代码位于 `constants.php` 脚本的顶部。确保
    `DEBUG` 常量设置为 `0`，如下所示：
- en: '[PRE18]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'If the debug mode is disabled, the above message will be much less verbose:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 如果禁用了调试模式，上述消息将不那么冗长：
- en: '![Using phpBB Messages](img/1132_08_04.jpg)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![使用 phpBB 消息](img/1132_08_04.jpg)'
- en: 'The `message_die()` phpBB function can be used for purposes other than for
    error messages. For instance, it can be used to display much nicer results from
    the database example discussed in the previous section of this chapter (`helloBBdb.php`).
    In this database example, change the line:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_die()` phpBB 函数可以用于除错误消息以外的其他目的。例如，它可以用来显示比之前章节中讨论的数据库示例（`helloBBdb.php`）更友好的结果。在这个数据库示例中，更改以下行：'
- en: '[PRE19]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'to:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 到：
- en: '[PRE20]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Save this as `helloBBmessage2.php` and view it in your browser. The result
    will be:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 将其保存为 `helloBBmessage2.php` 并在浏览器中查看。结果将是：
- en: '![Using phpBB Messages](img/1132_08_05.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![使用 phpBB 消息](img/1132_08_05.jpg)'
- en: 'Here’s some information about the six function parameters you can use when
    calling `message_die()`:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些关于你可以用于调用 `message_die()` 的六个函数参数的信息：
- en: '**Message type**: Can be `GENERAL_MESSAGE, CRITICAL_MESSAGE, GENERAL_ERROR`,
    or `CRITICAL_ERROR`, depending on the severity of the message.'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**消息类型**：可以是 `GENERAL_MESSAGE, CRITICAL_MESSAGE, GENERAL_ERROR` 或 `CRITICAL_ERROR`，具体取决于消息的严重性。'
- en: '**Message text**: Can be anything you want to communicate to the user.'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**消息文本**：可以是你想传达给用户的任何内容。'
- en: '**Message title**: If you dont supply it, a default title will be used based
    on the message type. In the last example, the title was **Word count**.'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**消息标题**：如果你不提供它，将使用基于消息类型的默认标题。在最后一个示例中，标题是 **单词计数**。'
- en: '**Error line** (for debug mode only): This contains the line in the script
    where the error occurred. The way to pass this parameter is just to use the `__LINE__`
    PHP core constant.'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**错误行**（仅限调试模式）：这包含脚本中发生错误的行。传递此参数的方法只是使用 PHP 核心常量 `__LINE__`。'
- en: '**Error file**: (for debug mode only): This is the filename of the script that
    caused the error. As with the previous parameter, just use `__FILE__` here.'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**错误文件**：（仅用于调试模式）：这是导致错误的脚本的文件名。与前面的参数一样，这里只需使用 `__FILE__`。'
- en: '**SQL**: SQL string (if any) related to the error.'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SQL**：与错误相关的 SQL 字符串（如果有）。'
- en: 'Of all the function parameters, only the first (message type) is a required
    parameter: the rest are optional.'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有函数参数中，只有第一个（消息类型）是必需参数：其余的都是可选的。
- en: Using phpBB’s Multi-Language System
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 phpBB 的多语言系统
- en: In the previous examples, a few texts were displayed to the user. The problem
    with these texts was that they were in English only, and might not be understood
    by visitors who browse your forums in a language other than English. To offer
    multi-lingual support your custom scripts, you can make use of phpBB’s multi-language
    system.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的示例中，显示了一些文本给用户。这些文本的问题在于它们只使用英语，可能不会被使用非英语浏览你论坛的访客理解。为了为你的自定义脚本提供多语言支持，你可以利用
    phpBB 的多语言系统。
- en: 'The language folder of your phpBB installation contains sub-folders for each
    installed language, like `lang_english, lang_spanish`, etc. These folders have
    a number of files, but the one you’ll be interested in the most, is called `lang_main.php`.
    This file contains static texts, defined as elements of an associative array called
    `$lang`. For example:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 你的 phpBB 安装的语言文件夹包含每个已安装语言的子文件夹，例如 `lang_english, lang_spanish` 等。这些文件夹包含许多文件，但你最感兴趣的文件是名为
    `lang_main.php` 的文件。此文件包含静态文本，定义为名为 `$lang` 的关联数组中的元素。例如：
- en: '[PRE21]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'At the end of this file (before the "That’s `all, Folks!"` comment) you can
    add your texts as new array elements. In the previous example (`helloBBmessage2.php`)
    two texts were used: `Word count` and `Hey, did you know that` *(number of words
    here)* `words were used in my board so far!?`. You can define them in `lang_main.php`
    as follows:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在此文件末尾（在 "That’s `all, Folks!"` 注释之前）您可以添加您的文本作为新的数组元素。在先前的示例 (`helloBBmessage2.php`)
    中使用了两个文本：`Word count` 和 `Hey, did you know that` *(此处为单词数量)* `words were used
    in my board so far!?`。您可以在 `lang_main.php` 中如下定义它们：
- en: '[PRE22]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '`%d` is used as a placeholder for the actual number of words, and it’s to be
    replaced in your script. You can use anything as a replaceable placeholder, but
    phpBB team has adopted the usage of the PHP `printf()` function. For details on
    how `printf()` and `sprintf()` work, you can consult the PHP manual entries at
    [http://php.net/printf](http://php.net/printf) and [http://php.net/sprintf](http://php.net/sprintf).'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '`%d` 用作实际单词数量的占位符，并在你的脚本中替换。你可以使用任何作为可替换占位符的内容，但 phpBB 团队采用了 PHP `printf()`
    函数的使用。有关 `printf()` 和 `sprintf()` 如何工作的详细信息，你可以查阅 PHP 手册条目 [http://php.net/printf](http://php.net/printf)
    和 [http://php.net/sprintf](http://php.net/sprintf)。'
- en: You’ve probably spotted a slight change in the text of the message. Well, just
    to make the message a bit different and at the same time to test how HTML is supported,
    the word count value `%d` was enclosed with the `<strong>` HTML tags to emphasize
    the number of words.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经注意到了消息文本中有一点点变化。嗯，为了使消息有些不同，同时测试HTML的支持情况，单词计数值 `%d` 被包含在 `<strong>` HTML
    标签中以强调单词数量。
- en: 'Now that your texts are in the `lang_main.php` file, they will be initialized
    automatically every time your script is accessed. So you can use them in your
    script by changing the call to `message_die()` to the following:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您的文本已位于 `lang_main.php` 文件中，每次访问脚本时它们都会自动初始化。因此，您可以通过将 `message_die()` 的调用更改为以下内容来在脚本中使用它们：
- en: '[PRE23]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Here’s a complete listing of the modified script. You can save it as `helloBBlangs.php`
    and test it on your board. Don’t forget the changes to `lang_main.php` and, if
    your board uses multiple languages, don’t forget that you need to translate the
    texts and add them to the `lang_main.php` script in the corresponding languages’
    directories.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是修改后的脚本完整列表。您可以将其保存为 `helloBBlangs.php` 并在您的论坛上测试它。别忘了对 `lang_main.php` 进行更改，如果您的论坛使用多种语言，别忘了您需要将文本翻译并添加到相应语言的目录中的
    `lang_main.php` 脚本中。
- en: '[PRE24]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Here’s the result of executing `helloBBlangs.php`:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是执行 `helloBBlangs.php` 的结果：
- en: '![Using phpBB’s Multi-Language System](img/1132_08_06.jpg)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![使用 phpBB 的多语言系统](img/1132_08_06.jpg)'
- en: Using phpBB Templates
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 phpBB 模板
- en: In the previous examples, there wasn’t much graphical user interface work involved,
    but normally there will be, if you’re developing new phpBB scripts or extending
    existing ones. Separating the programming code from the user interface is generally
    a good programming practice, often referred to as a "separation of logic from
    presentation". For web applications such as phpBB, this means having the PHP code
    and logic separated from the HTML code that is used to present the results to
    the user.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的示例中，没有涉及太多图形用户界面工作，但通常情况下，如果您正在开发新的phpBB脚本或扩展现有的脚本，那么通常会有。将编程代码与用户界面分离通常是一种良好的编程实践，通常被称为“逻辑与展示的分离”。对于像phpBB这样的Web应用程序，这意味着将PHP代码和逻辑与用于向用户展示结果的HTML代码分离。
- en: 'This is normally achieved by using the so called **templating systems** (templating
    engines), which consist of two parts:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 这通常是通过使用所谓的**模板系统**（模板引擎）来实现的，它由两部分组成：
- en: Static HTML template files that contain the rules of displaying the content;
    "rules" mean formatting, layout, and so on
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包含显示内容规则的静态HTML模板文件；“规则”意味着格式、布局等。
- en: PHP logic to "fill-in the blanks" in the HTML templates
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PHP逻辑用于在HTML模板中“填充空白”。
- en: Using a templating engine allows for changing the face of a bulletin board completely,
    by changing the static HTML files only and not dealing with the programming logic,
    database access, and so on. Creating new templates was discussed in detail in
    [Chapter 4](ch04.html "Chapter 4. Customizing Your Forum").
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 使用模板引擎可以通过仅更改静态HTML文件来完全改变论坛的外观，而不需要处理编程逻辑、数据库访问等。在[第4章](ch04.html "第4章。自定义您的论坛")中详细讨论了创建新模板。
- en: phpBB has its own templating engine, which is discussed here in order to give
    you a basic understanding on how to use it in your scripts.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: phpBB有其自己的模板引擎，在这里讨论它是为了让您对如何在脚本中使用它有一个基本的了解。
- en: You can find the template library script (`template.php`) in the `includes`
    folder. This file contains the definition (the code) for a class called `Template`
    and you can see its implementation if you’re interested. For the purposes of coding
    phpBB scripts, you only need to know how to use the library and not how it’s actually
    coded (remember, that’s the beauty of the object-oriented coding approach).
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在 `includes` 文件夹中找到模板库脚本（`template.php`）。此文件包含名为 `Template` 的类的定义（代码），如果您感兴趣，可以查看其实现。对于编写phpBB脚本的目的，您只需要知道如何使用库，而不需要知道它是如何编写的（记住，这就是面向对象编程方法的美妙之处）。
- en: In order to use the template class, an instance (an object) of that class needs
    to be created. There is such an object created for you as part of the phpBB environment
    setup. As soon as you include the page header script, a variable called `$template`
    is initialized and it contains an object of the `Template` class.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用模板类，需要创建该类的一个实例（一个对象）。在phpBB环境设置过程中已经为您创建了一个这样的对象。一旦包含页面头部脚本，就会初始化一个名为 `$template`
    的变量，它包含 `Template` 类的对象。
- en: A Simple Example
  id: totrans-132
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一个简单示例
- en: 'It is time to create a brand new, simple template. Create (or copy from the
    book code download) the following file (call it `wordcount.tpl` and place it in
    the `templates/subSilver` directory):'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候创建一个新的、简单的模板了。创建（或从书籍代码下载中复制）以下文件（命名为 `wordcount.tpl` 并将其放置在 `templates/subSilver`
    目录中）：
- en: '[PRE25]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Before proceeding with the PHP code, take a look at the following screenshot;
    it shows the result of executing the example.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续编写PHP代码之前，请看一下下面的截图；它显示了执行示例的结果。
- en: '![A Simple Example](img/1132_08_07.jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![一个简单示例](img/1132_08_07.jpg)'
- en: 'The template specified earlier is responsible only for the following part of
    the screenshot:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 之前指定的模板只负责截图的以下部分：
- en: '![A Simple Example](img/1132_08_08.jpg)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![一个简单示例](img/1132_08_08.jpg)'
- en: The rest is displayed by the default header and footer.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 其余内容由默认的头部和尾部显示。
- en: 'Let’s see how to achieve this result. There are three parts to using the templating
    functionality in your scripts:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何实现这个结果。在脚本中使用模板功能有三个部分：
- en: First you specify the filename(s) that contain the static HTML, using `$template->set_filenames()`.
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先，您需要指定包含静态HTML的文件名（或文件名列表），使用 `$template->set_filenames()` 方法。
- en: Then you use PHP to replace the template variables with data by calling `$template->assign_vars()`
    or `$template->assign_block_vars()`. Having read [Chapter 4](ch04.html "Chapter 4. Customizing
    Your Forum"), youre already familiar with the template variables and their syntax;
    they are enclosed by curly brackets and capitalized, like `{I_AM_A_VAR}`.
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然后你使用PHP通过调用`$template->assign_vars()`或`$template->assign_block_vars()`来替换模板变量与数据。在阅读了[第4章](ch04.html
    "第4章。自定义您的论坛")之后，你已经熟悉了模板变量及其语法；它们被大括号包围并大写，如`{I_AM_A_VAR}`。
- en: Finally you call the `$template->pparse()` method to display the result.
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，你调用`$template->pparse()`方法来显示结果。
- en: 'Here’s the PHP code that uses the `wordcount.tpl` template listed earlier:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 这是使用前面列出的`wordcount.tpl`模板的PHP代码：
- en: '[PRE26]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: There are two more template variables that were displayed in the result but
    were not assigned values using `$template->assign_vars()`—`U_INDEX` and `L_INDEX`.
    The reason you don’t need to worry about them is that they were already assigned
    when the page header was processed. For more information and a full listing of
    the behind-the-scenes processed variables, open the `includes/page_header.php`
    script and scroll down to near the bottom of the file where the template variables
    are assigned.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在结果中显示了两个更多的模板变量，但它们没有使用`$template->assign_vars()`分配值——`U_INDEX`和`L_INDEX`。你不需要担心它们的原因是，它们在处理页面标题时已经被分配了。有关更多信息以及幕后处理变量的完整列表，请打开`includes/page_header.php`脚本，并将文件滚动到接近底部，在那里分配模板变量。
- en: 'To test the example, create a `helloBBtemplates.php` file with the following
    code and navigate to it in your browser (don’t forget to also copy the `wordcount.tpl`
    template into the `templates/subSilver` directory):'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 要测试这个例子，创建一个包含以下代码的`helloBBtemplates.php`文件，并在浏览器中导航到它（别忘了也将`wordcount.tpl`模板复制到`templates/subSilver`目录中）：
- en: '[PRE27]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Using Loops in phpBB Templates
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在phpBB模板中使用循环
- en: Often, assigning static template variables is not enough; you’ll need the ability
    to perform dynamic assignments like using loops within a template (for example,
    listing all topics in a forum is performing a loop, listing all replies to a topic
    is also a loop, and so on). Let’s consider an example to see how you can use loops.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，仅分配静态模板变量是不够的；你需要具备在模板中使用循环等动态赋值的能力（例如，列出论坛中的所有主题是在执行循环，列出主题的所有回复也是循环，等等）。让我们通过一个例子来看看你如何使用循环。
- en: The example displays the numbers from one to ten. To set up the loop in the
    template, use the **block variable** syntax.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 这个例子显示了从一到十的数字。要在模板中设置循环，请使用**块变量**语法。
- en: '[PRE28]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Here `number_loop` is the name of the block and `NUMBER` is a variable. Note
    the dotted syntax to refer to a variable within a loop like `{number_loop.NUMBER}`.
    To make it a bit more interesting and to understand the difference between a variable
    within a block and outside a block, add another `{NUMBER}` variable, but this
    time not related to the loop. It will have a constant value during the loop iterations.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里`number_loop`是块的名字，`NUMBER`是一个变量。注意在循环中引用变量的点状语法，如`{number_loop.NUMBER}`。为了使它更有趣，并理解块内变量与块外变量的区别，添加另一个`{NUMBER}`变量，但这次与循环无关。在循环迭代期间，它将具有一个常量值。
- en: 'Here’s the listing of the template (save it to a file called `example2.tpl`
    and place it in `templates/subSilver)`:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 这是模板的列表（将其保存为名为`example2.tpl`的文件，并将其放置在`templates/subSilver`中）：
- en: '[PRE29]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Here’s the PHP script (`helloBBtemplates2.php`) to parse the template:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 这是解析模板的PHP脚本（`helloBBtemplates2.php`）：
- en: '[PRE30]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'The result of executing `helloBBtemplates2.php` in a browser:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 在浏览器中执行`helloBBtemplates2.php`的结果：
- en: '![Using Loops in phpBB Templates](img/1132_08_09.jpg)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![在phpBB模板中使用循环](img/1132_08_09.jpg)'
- en: Using Conditions in phpBB Templates
  id: totrans-160
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在phpBB模板中使用条件
- en: Sometimes you’ll want to display data to the user conditionally, depending on
    some "if" case (a "switch"). To do this using the phpBB templating engine, use
    the same **block variables** as when working with loops.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 有时你可能想根据某些“if”条件（一个“switch”）有条件地向用户显示数据。要使用phpBB模板引擎执行此操作，请使用与处理循环时相同的**块变量**。
- en: The next example is quite similar to the previous one; it lists the numbers
    from one to ten. But it uses an "if" case for even numbers in order to display
    them in bold font.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个例子与上一个例子非常相似；它列出了从一到十的数字。但是，它使用了一个“if”条件来显示偶数，以便以粗体字体显示。
- en: 'Here’s the template. Save it as `example3.tpl` in `templates/subSilver`:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 这是模板。将其保存为`example3.tpl`在`templates/subSilver`中：
- en: '[PRE31]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Because you have nested blocks (a switch block within a loop block), when you
    reference a variable from the inner block, you need to specify both blocks’ names,
    separated by a dot, like `{number_loop.odd_switch.NUMBER}`. Also note that there
    is no separate test for the even case—you simply use `else` to introduce an alternative
    block of code.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 因为您有嵌套块（一个在循环块内的switch块），当您从内部块引用变量时，您需要指定两个块的名字，用点分隔，如`{number_loop.odd_switch.NUMBER}`。此外，请注意，没有为偶数情况进行单独的测试——您只需使用`else`来引入一个替代代码块。
- en: 'Here is the listing of the PHP script (save it as `helloBBtemplates3.php` in
    your root phpBB folder):'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 这是PHP脚本的列表（将其保存为`helloBBtemplates3.php`在您的根phpBB文件夹中）：
- en: '[PRE32]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Here’s the script in action:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 这是脚本的实际运行情况：
- en: '![Using Conditions in phpBB Templates](img/1132_08_10.jpg)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![在phpBB模板中使用条件](img/1132_08_10.jpg)'
- en: Note
  id: totrans-170
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: To round off your knowledge on the phpBB templating engine, there is a comprehensive
    knowledge-base article at [http://www.phpbb.com/kb/article.php?article_id=200](http://www.phpbb.com/kb/article.php?article_id=200).
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完善您对phpBB模板引擎的知识，有一个全面的知识库文章在[http://www.phpbb.com/kb/article.php?article_id=200](http://www.phpbb.com/kb/article.php?article_id=200)。
- en: User Authentication
  id: totrans-172
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用户身份验证
- en: When you develop new scripts or extend existing ones, it’s likely that you’ll
    need a way to verify a user’s privileges (in other words, check if a user is allowed
    to do or view what your script provides); for example, if you develop a script
    to display postings from a hidden forum, you’ll need to make sure that only users
    that are allowed access to this forum can see the postings.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 当您开发新脚本或扩展现有脚本时，您可能需要一种方式来验证用户的权限（换句话说，检查用户是否允许执行或查看您的脚本提供的内容）；例如，如果您开发一个显示隐藏论坛帖子的脚本，您需要确保只有允许访问此论坛的用户才能看到帖子。
- en: There is one important user authentication function that is defined in `includes/auth.php`—the
    `auth()` function.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 在`includes/auth.php`中定义了一个重要的用户身份验证功能——`auth()`函数。
- en: The `auth()` function returns an associative array that contains information
    about the privileges that are checked. You can check for individual privileges
    (permission types), like permission to view, read, post, vote, and so on; you
    can even check for all permission types at once. You can also check for privileges
    in a specific forum or in all forums.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '`auth()`函数返回一个包含已检查权限信息的关联数组。您可以检查单个权限（权限类型），如查看、读取、发布、投票等；您甚至可以一次性检查所有权限类型。您还可以在特定论坛或所有论坛中检查权限。'
- en: 'There are three required parameters when you use the `auth()` function:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`auth()`函数时需要三个必需的参数：
- en: '**Permission type**: The possible values are the constants `AUTH_VIEW, AUTH_READ,
    AUTH_POST, AUTH_REPLY, AUTH_EDIT, AUTH_DELETE, AUTH_STICKY, AUTH_ANNOUNCE, AUTH_VOTE,
    AUTH_POLLCREATE`, or (to check for all permission types) `AUTH_ALL`.'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**权限类型**：可能的值是常量`AUTH_VIEW, AUTH_READ, AUTH_POST, AUTH_REPLY, AUTH_EDIT, AUTH_DELETE,
    AUTH_STICKY, AUTH_ANNOUNCE, AUTH_VOTE, AUTH_POLLCREATE`，或者（为了检查所有权限类型）`AUTH_ALL`。'
- en: '**Forum ID**: If you want to check for privileges in a specific forum, you
    specify its ID. To check for permissions in all forums, you use the `AUTH_LIST_ALL`
    constant.'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**论坛ID**：如果您想检查特定论坛的权限，请指定其ID。要检查所有论坛的权限，请使用`AUTH_LIST_ALL`常量。'
- en: '**User data**: An array of user information. You dont need to worry about this;
    there is a `$userdata` variable defined at the beginning of every script, in the
    session management part. So you just need to pass this variable as is.'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户数据**：用户信息数组。您不需要担心这一点；在每段脚本的开头，在会话管理部分定义了一个`$userdata`变量。因此，您只需将此变量原样传递即可。'
- en: The `auth()` function returns the results as associative arrays. Let’s look
    at a few examples of how `auth()` can be used in order to get a better idea of
    the return values.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '`auth()`函数将结果以关联数组的形式返回。让我们看看几个`auth()`如何使用的例子，以便更好地了解返回值。'
- en: Using the Authentication Function
  id: totrans-181
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用身份验证函数
- en: 'You can use the following code to play around and test how the authentication
    function works and what types of values it returns. Save this code as `helloBBauth.php`
    and load it in your browser:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用以下代码来尝试并测试身份验证功能的工作方式以及它返回的类型值。将此代码保存为`helloBBauth.php`并在浏览器中加载：
- en: '[PRE33]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: This script contains a call to the `auth()` function and then displays the results
    of the execution. You can start changing the parameters you pass to the `auth()`
    function and see how the return values are changed. You can also log in as a normal
    user, then log in as a moderator or an administrator, and then log out and see
    how the return values change.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 此脚本包含对 `auth()` 函数的调用，然后显示执行结果。您可以从更改传递给 `auth()` 函数的参数开始，看看返回值是如何变化的。您还可以以普通用户身份登录，然后以版主或管理员身份登录，然后注销，看看返回值是如何变化的。
- en: 'Let’s say your forum has a forum ID equal to 1, and this forum is set up as
    a **registered** forum, meaning that in the **Administration Panel | Forum Admin
    | Permissions**, its permissions were set to **Registered** using **Simple Mode**.
    This means that a user has to register and log in to be able to post. In this
    case to check the user privileges you can change the call to the `auth()` function
    in the previous example to:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您的论坛ID等于1，并且这个论坛被设置为**注册**论坛，这意味着在**管理面板 | 论坛管理 | 权限**中，其权限被使用**简单模式**设置为**注册用户**。这意味着用户必须注册并登录才能发帖。在这种情况下，要检查用户权限，您可以将上一个例子中对
    `auth()` 函数的调用更改为：
- en: '[PRE34]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'If you save the modified script as `helloBBauth2.php` and load it in your browser,
    you’ll see the return value as:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您将修改后的脚本保存为 `helloBBauth2.php` 并在浏览器中加载，您将看到以下返回值：
- en: '[PRE35]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: This result is displayed when you’re not logged in. You see that only the `auth_view`
    and `auth_read` indices in the return value are set to `1`, the rest are `0`.
    This means that when you’re not logged in, you only have the privilege to see
    that this forum exists and to read it.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 当您未登录时，会显示此结果。您会看到返回值中只有 `auth_view` 和 `auth_read` 索引被设置为 `1`，其余都是 `0`。这意味着当您未登录时，您只有查看该论坛和阅读它的权限。
- en: 'Now if you log in as a regular user and visit `helloBBauth2.php` again, you’ll
    see different return values:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 现在如果您以普通用户身份登录并再次访问 `helloBBauth2.php`，您将看到不同的返回值：
- en: '[PRE36]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: As you can see, now the only permission types set to `0` are `auth_mod, auth_sticky`,
    and `auth_announce`, because being logged as a regular user, you cannot moderate
    the forum or post stickies or announcements.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，现在唯一设置为 `0` 的权限类型是 `auth_mod, auth_sticky` 和 `auth_announce`，因为以普通用户身份登录，您无法管理论坛或发布置顶帖或公告。
- en: Checking for Poll-Creation Privileges
  id: totrans-193
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 检查创建投票权限
- en: If all these associative array return values are giving you a headache, here’s
    a friendlier way of displaying results from the calls to the `auth()` function.
    This example (`helloBBauth3.php`) tells you whether you can create polls in the
    forum with forum ID equal to 1\. Test it when you’re logged in and then when you’re
    logged out.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 如果所有这些关联数组返回值都让您头疼，这里有一个更友好的方式来显示对 `auth()` 函数调用的结果。这个例子（`helloBBauth3.php`）告诉您是否可以在论坛ID等于1的情况下创建投票。在您登录和注销后测试它。
- en: '[PRE37]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'If you’re logged in when you visit `helloBBauth3.php`, you’ll see the following
    message:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在访问 `helloBBauth3.php` 时已登录，您将看到以下消息：
- en: '![Checking for Poll-Creation Privileges](img/1132_08_11.jpg)'
  id: totrans-197
  prefs: []
  type: TYPE_IMG
  zh: '![检查创建投票权限](img/1132_08_11.jpg)'
- en: 'When you log out and come to the same page again, you’ll see a changed message:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 当您注销并再次访问同一页面时，您将看到更改后的消息：
- en: '![Checking for Poll-Creation Privileges](img/1132_08_11.jpg)'
  id: totrans-199
  prefs: []
  type: TYPE_IMG
  zh: '![检查创建投票权限](img/1132_08_11.jpg)'
- en: Note
  id: totrans-200
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Some code comments that serve as documentation on how the `auth()` function
    can be used; you can find these code comments before the function definition,
    at the top of the `includes/auth.php` file in your phpBB installation.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 一些代码注释，用作 `auth()` 函数如何使用的文档；您可以在您的phpBB安装中的 `includes/auth.php` 文件定义函数之前找到这些代码注释。
- en: 'This section describes some other phpBB functions that may come in handy. The
    functions listed are of two types: general functions (mostly contained in `includes/functions.php`),
    and posting-related functions that deal with processing BB code and smilies (these
    functions are defined in `includes/bbcode.php`). At the end of this section, there
    are some phpBB-specific coding guidelines and standards.'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述了一些可能很有用的phpBB函数。列出的函数有两种类型：通用函数（主要包含在 `includes/functions.php` 中），以及与处理BB代码和表情符号相关的发帖函数（这些函数定义在
    `includes/bbcode.php` 中）。本节最后有一些phpBB特定的编码指南和标准。
- en: Miscellaneous Functions
  id: totrans-203
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他函数
- en: These are some general-purpose functions that are shipped with phpBB.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是一些与phpBB一起提供的通用功能。
- en: Getting Board Statistics
  id: totrans-205
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 获取论坛统计数据
- en: 'Use this function to retrieve some board statistics data:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此函数检索一些论坛统计数据：
- en: '[PRE38]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'The type of data this function returns depends of the parameter passed to it.
    This function can take only one of four pre-defined strings as a parameter. Here
    are the parameters, along with the returned values from the function (the last
    two options will give the stats for all forums, including hidden ones):'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 这个函数返回的数据类型取决于传递给它的参数。这个函数只能接受四个预定义字符串之一作为参数。以下是参数及其从函数返回的值（最后两个选项将给出所有论坛的统计数据，包括隐藏的论坛）：
- en: '`usercount`: When this parameter is passed, the function will return the total
    number of registered users.'
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`usercount`：当传递此参数时，函数将返回注册用户的总数。'
- en: '`newestuser`: When this is passed, the function will return an array with keys
    `username` and `user_id` containing the most recent registered user.'
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`newestuser`：当传递此参数时，函数将返回一个包含`username`和`user_id`键的数组，包含最近注册的用户。'
- en: '`postcount`: This will give you the total number of posts.'
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`postcount`：这将返回帖子的总数。'
- en: '`topiccount`: This will give you the total number of topics created in your
    forums.'
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`topiccount`：这将返回你在论坛中创建的主题总数。'
- en: 'Here’s an example usage of this function:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是这个函数的一个示例用法：
- en: '[PRE39]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'The output:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 输出：
- en: '![Getting Board Statistics](img/1132_08_12.jpg)'
  id: totrans-216
  prefs: []
  type: TYPE_IMG
  zh: '![获取论坛统计数据](img/1132_08_12.jpg)'
- en: Retrieving User Information
  id: totrans-217
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 获取用户信息
- en: 'Use this function for an array of information about a user:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此函数来获取关于用户的信息数组：
- en: '[PRE40]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: It will return all the fields from the user’s entry in the database table as
    an array with both associative and enumerated values.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 它将返回数据库表中用户条目的所有字段，作为一个包含关联和枚举值的数组。
- en: 'Try the following piece of code into a script:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 将以下代码片段尝试放入脚本中：
- en: '[PRE41]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'This will display an array that starts like the following:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 这将显示一个数组，其开始如下：
- en: '[PRE42]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Replace the `2` in the function call with any user ID or username you like.
    This function can take either a numeric ID or a username as a string.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 将函数调用中的`2`替换为你喜欢的任何用户ID或用户名。此函数可以接受数字ID或作为字符串的用户名。
- en: If you pass the second parameter with value `TRUE`, the first parameter should
    be a *username*, and not an *ID*.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你传递第二个参数并设置为`TRUE`，第一个参数应该是`用户名`，而不是`ID`。
- en: Encoding and Decoding IP Addresses
  id: totrans-227
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 编码和解码IP地址
- en: phpBB encodes all IP addresses it stores into the database. `encode_ip()` and
    `decode_ip()` are the two functions that serve this purpose. The first one takes
    a properly formatted IP address like `127.0.0.1` and returns an encoded representation
    of it. The second function takes an encoded string and returns the original IP
    address.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: phpBB将存储在数据库中的所有IP地址进行编码。`encode_ip()`和`decode_ip()`是两个用于此目的的函数。第一个函数接受格式正确的IP地址，如`127.0.0.1`，并返回其编码表示形式。第二个函数接受编码字符串并返回原始IP地址。
- en: 'You can try these functions by using the following code:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过以下代码尝试这些函数：
- en: '[PRE43]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'This will result in something like:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 这将导致类似以下的结果：
- en: '![Encoding and Decoding IP Addresses](img/1132_08_13.jpg)'
  id: totrans-232
  prefs: []
  type: TYPE_IMG
  zh: '![编码和解码IP地址](img/1132_08_13.jpg)'
- en: You can find the script to display this output in the book’s code download,
    named `misc_encode_decode_ip.php`.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在书籍的代码下载中找到显示此输出的脚本，命名为`misc_encode_decode_ip.php`。
- en: Displaying Dates
  id: totrans-234
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 显示日期
- en: 'You can use the following phpBB function to display a formatted date:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用以下phpBB函数来显示一个格式化的日期：
- en: '[PRE44]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: It’s not only a wrapper around the `gmdate` PHP function (see [http://php.net/gmdate](http://php.net/gmdate)
    for details), but also takes care of translating the date (months and weekdays)
    and takes account of the user’s time zone and date format preferences set in the
    profile page.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 它不仅是对`gmdate` PHP函数的一个包装（有关详细信息，请参阅[http://php.net/gmdate](http://php.net/gmdate)），而且还负责翻译日期（月份和星期几），并考虑用户在个人资料页面中设置的时区和日期格式偏好。
- en: 'A sample usage of the function would be to print the current date and time,
    using the user’s preferred format and time zone. You can do that by using:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 函数的一个示例用法是打印当前日期和时间，使用用户在个人资料页面中偏好的格式和时间区。你可以通过以下方式实现：
- en: '[PRE45]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'This will return a string like: **Mon Mar 14, 2005 8:56 am**.'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 这将返回一个类似以下格式的字符串：**Mon Mar 14, 2005 8:56 am**。
- en: The book’s code download has a script called `misc_create_date.php`, which shows
    how to use this function. You can also see the function used in the custom "What’s
    Up" script at the end of the chapter.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 书籍的代码下载中有一个名为`misc_create_date.php`的脚本，展示了如何使用此函数。你还可以在章节末尾的定制“What’s Up”脚本中看到函数的使用。
- en: Getting a List of Censored Words
  id: totrans-242
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 获取被审查词汇列表
- en: 'The following function retrieves the list of censored words and their replacement
    words:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 以下函数检索被审查词汇及其替换词汇的列表：
- en: '[PRE46]'
  id: totrans-244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: The function accepts two parameters passed by reference. This basically means
    that you pass two empty arrays to this function and it populates these arrays
    with values.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 该函数接受两个通过引用传递的参数。这基本上意味着你向此函数传递两个空数组，然后它将这些数组填充值。
- en: 'We can use the word censoring as follows:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用以下方式进行词库屏蔽：
- en: '[PRE47]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: Don’t forget to use this functionality to filter not only post texts, but also
    topic titles, poll questions and answers, and anything else where you feel the
    need.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 不要忘记使用此功能来过滤帖子文本，以及主题标题、投票问题和答案，以及其他任何你觉得需要的地方。
- en: Preserving the Session in the Hyperlinks
  id: totrans-249
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在超链接中保留会话
- en: 'The following function helps you preserve the user session by passing the session
    identifier in the URL for users that have their cookies disabled:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 以下函数通过在 URL 中传递会话标识符来帮助保留用户会话，对于禁用了 cookie 的用户：
- en: '[PRE48]'
  id: totrans-251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: Note
  id: totrans-252
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You need to call this function every time you create a link to other pages in
    the forum, otherwise you’ll lose the session ID of the user’s visit and phpBB
    will create a new session for every page visited.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 每次你在论坛中创建指向其他页面的链接时，都需要调用此函数，否则你将丢失用户访问的会话 ID，phpBB 将为每个访问的页面创建一个新的会话。
- en: The second parameter of the function is optional; if it’s `true`, the function
    will use "&" and not the correct HTML value "&amp;" when constructing URL’s parameters.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 函数的第二个参数是可选的；如果它是 `true`，则在构造 URL 参数时，函数将使用 "&" 而不是正确的 HTML 值 "&amp;"。
- en: 'Example usage:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 示例用法：
- en: '[PRE49]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: Be careful if you use "#" (named anchors) in your URL; you need to add them
    *after* the call to `append_sid()` or otherwise the session ID will not be passed
    correctly.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用 "#"（命名锚点）在 URL 中，请小心；你需要将其添加到 `append_sid()` 调用之后，否则会话 ID 将无法正确传递。
- en: 'Here’s the incorrect way of doing it:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 这是错误的做法：
- en: '[PRE50]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'And the correct way:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 正确的做法如下：
- en: '[PRE51]'
  id: totrans-261
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: If you’re interested in more details of the implementation of this function,
    look into the source file `includes/sessions.php`.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对这个函数实现的更多细节感兴趣，请查看源文件 `includes/sessions.php`。
- en: IN_PHPBB
  id: totrans-263
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: IN_PHPBB
- en: '`IN_PHPBB` is a constant, not a function. It was mentioned earlier and you
    have probably noticed that it’s defined at the top of every script.'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: '`IN_PHPBB` 是一个常量，不是一个函数。它之前已经提到过，你可能已经注意到它在每个脚本的顶部定义。'
- en: This is a security measure that doesn’t allow include scripts to be accessed
    directly via a browser. In every include script, phpBB checks (and your script
    should too) if `IN_PHPBB` is defined. If it is not, this means somebody was trying
    to access the include scripts directly in the browser. They’ll get an error message
    saying **Hack attempt** and won’t be allowed to proceed further.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个安全措施，不允许直接通过浏览器访问包含的脚本。在每一个包含脚本中，phpBB 都会检查（并且你的脚本也应该检查）`IN_PHPBB` 是否已定义。如果没有定义，这意味着有人试图直接在浏览器中访问包含的脚本。他们将收到一个显示
    **Hack attempt** 的错误消息，并且不会被允许进一步操作。
- en: Postings-Related Functions
  id: totrans-266
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 与帖子相关的函数
- en: The following functions help you out when displaying a posting text.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 以下函数有助于你在显示帖子文本时解决问题。
- en: Create Links Automatically
  id: totrans-268
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 自动创建链接
- en: 'The following function will take any text and will make clickable all the strings
    that look like URLs or e-mails:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 以下函数将接受任何文本，并将看起来像 URL 或电子邮件的所有字符串都转换为可点击的：
- en: '[PRE52]'
  id: totrans-270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'An example:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '[PRE53]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'This snippet will output the following HTML:'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码片段将输出以下 HTML：
- en: '[PRE54]'
  id: totrans-274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: Processing Smilies
  id: totrans-275
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 处理表情符号
- en: The `smilies_pass($text)` function will replace all the smilie codes in a text
    with the HTML code for the corresponding image tags. See the following section
    for an example.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: '`smilies_pass($text)` 函数将替换文本中的所有表情符号代码，并用相应的图像标签的 HTML 代码替换。有关示例，请参阅以下部分。'
- en: Displaying a Posting Body
  id: totrans-277
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 显示帖子正文
- en: 'In order to properly display a posting text you need to:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 为了正确显示帖子文本，你需要：
- en: Parse the BB code and convert it into HTML code
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解析 BB 代码并将其转换为 HTML 代码
- en: Replace smilies
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 替换表情符号
- en: Make links clickable
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使链接可点击
- en: Replace filtered words
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 替换过滤的单词
- en: Convert new lines to HTML breaks
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将新行转换为 HTML 换行符
- en: Look at the following example (it assumes that you have an array called `$row`
    that contains a database record from the posting texts table). Note that you need
    the **BB Code UID**, which is the key to transforming BB code into HTML.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 看以下示例（它假设你有一个名为 `$row` 的数组，其中包含来自帖子文本表的数据库记录）。注意，你需要 **BB Code UID**，这是将 BB
    代码转换为 HTML 的关键。
- en: '[PRE55]'
  id: totrans-285
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'Note that in order for this piece of code to work, you need to include the
    `includes/bbcode.php` file in your script. This is normally done in the beginning
    of the script, as follows:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，为了使此代码块正常工作，你需要在脚本中包含 `includes/bbcode.php` 文件。这通常在脚本的开头完成，如下所示：
- en: '[PRE56]'
  id: totrans-287
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: Coding Guidelines
  id: totrans-288
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编码指南
- en: 'Coding standards and guidelines are always a good thing to have and follow.
    So it’s a good idea to familiarize yourself with the phpBB coding standards and
    code your extensions following those standards. It’s not mandatory (your code
    will still run even it does not adhere to the standards), but following pre-set
    standards can improve the maintainability of the code that you write. According
    to Sun Microsystems, "80% of the lifetime cost of a piece of software goes to
    maintenance" (source: *Code Conventions for the Java Programming Language* at
    [http://java.sun.com/docs/codeconv/](http://java.sun.com/docs/codeconv/)) and
    maintenance is much easier when coding conventions are employed. This is true
    even if you are the maintainer of your own code.'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 编码标准和指南始终是一件好事，并且值得遵循。因此，熟悉phpBB编码标准和按照这些标准编写您的扩展代码是个好主意。虽然这不是强制性的（即使您的代码不遵循标准，它仍然可以运行），但遵循预设标准可以提高您所编写代码的可维护性。根据Sun
    Microsystems的说法，“软件的终身成本中有80%用于维护”（来源：[http://java.sun.com/docs/codeconv/](http://java.sun.com/docs/codeconv/)中的*Java编程语言编码规范*），当采用编码规范时，维护工作会变得更加容易。即使您是您自己代码的维护者，这也是正确的。
- en: The idea behind using code conventions is to minimize the individual "handwriting"
    of a programmer, unifying how functions and variables are named, how code is indented,
    etc. When all programmers working on a project use the same style, one can easily
    read code written by another, because it looks consistent with the way you would
    have written it.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 使用编码规范背后的想法是尽量减少程序员的个人“手写”风格，统一函数和变量的命名方式，代码缩进方式等。当所有参与项目的程序员使用相同的风格时，人们可以很容易地阅读其他程序员编写的代码，因为它们看起来与您自己编写的方式一致。
- en: You can find the current phpBB coding standards and guidelines in the phpBB.com
    development area at [http://area51.phpbb.com/](http://area51.phpbb.com).
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在phpBB.com的开发区域找到当前的phpBB编码标准和指南，网址为[http://area51.phpbb.com/](http://area51.phpbb.com)。
- en: Recent Postings MOD
  id: totrans-292
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最近帖子 MOD
- en: This final section of the chapter is about creating a custom phpBB script called
    "Recent Postings" (or "What’s Up") MOD. This script uses the techniques discussed
    earlier in this chapter and is designed to wrap up your knowledge on phpBB programming
    and the use of templates.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的最后一节是关于创建一个名为“最近帖子”MOD（或“最新动态”）的自定义phpBB脚本。这个脚本使用了本章前面讨论的技术，旨在总结您对phpBB编程和模板使用的知识。
- en: The Challenge
  id: totrans-294
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 挑战
- en: The script we’re about to create will list the 15 most recent postings in all
    forums of the board. It can be very useful for you and the other forum junkies
    to have an overview page of what’s happening in the board, without having to browse
    each forum individually. The same goes for moderators and administrators, the
    people that need to be up to speed with everything that’s going on in the board.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 我们即将创建的脚本将列出论坛中所有论坛的15个最新帖子。对于您和其他论坛爱好者来说，有一个概述页面查看论坛上发生的事情非常有用，而无需逐个浏览每个论坛。对于版主和管理员来说也是如此，他们需要了解论坛上发生的一切。
- en: The recent postings listing will respect user privileges, meaning that if a
    user doesn’t have read access to a certain forum, the postings from this forum
    won’t be present in the listing when viewed by this user.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 最近帖子列表将尊重用户权限，这意味着如果用户没有访问某个论坛的阅读权限，那么当该用户查看列表时，这个论坛的帖子将不会出现在列表中。
- en: 'To give you a more visual idea, here is a screenshot of the script in action:'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 为了给您一个更直观的概念，以下是脚本运行时的截图：
- en: '![The Challenge](img/1132_08_15.jpg)'
  id: totrans-298
  prefs: []
  type: TYPE_IMG
  zh: '![挑战](img/1132_08_15.jpg)'
- en: 'If users with moderator privileges in a certain forum are logged in and are
    viewing this page, they’ll have a link to the moderator control panel for this
    forum, as shown:'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 如果某个论坛具有版主权限的用户登录并查看此页面，他们将有一个链接到该论坛的版主控制面板，如下所示：
- en: '![The Challenge](img/1132_08_16.jpg)'
  id: totrans-300
  prefs: []
  type: TYPE_IMG
  zh: '![挑战](img/1132_08_16.jpg)'
- en: There are two icons after the username in the right column. Clicking the first
    one takes the user to the posting, located in the **View topic** page (`viewtopic.php`).
    Clicking the second one doesn’t load a new page, but expands the area below the
    posting title and shows the posting here in the same screen, with the BB code
    and the smilies processed properly. This is shown on the next illustration.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 在右侧列的用户名后面有两个图标。点击第一个图标会将用户带到帖子所在的“查看主题”页面（`viewtopic.php`）。点击第二个图标不会加载新页面，而是展开帖子标题下方的区域，并在同一屏幕上显示帖子，同时正确处理了BB代码和表情符号。这将在下一幅插图中进行展示。
- en: '![The Challenge](img/1132_08_17.jpg)'
  id: totrans-302
  prefs: []
  type: TYPE_IMG
  zh: '![挑战](img/1132_08_17.jpg)'
- en: Clicking the same icon again (once a posting is expanded) collapses the additional
    area and hides the posting.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 再次点击相同的图标（一旦帖子被展开）会折叠额外的区域并隐藏帖子。
- en: This is a convenient way to read the latest 15 posting in all forums, without
    leaving the page. To keep it simple, this script is not introducing new texts
    or graphics.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个方便的方法，可以在不离开页面的情况下阅读所有论坛的最新15篇帖子。为了保持简单，这个脚本没有引入新的文本或图形。
- en: The Recent Postings MOD you’re about to create consists of a PHP script and
    a template file. The PHP script is named `whatsup.php` and is hosted in the phpBB
    root, so if your board is installed in [http://www.yourdomain.com/forum/](http://www.yourdomain.com/forum/),
    the scripts will be accessible at [http://www.yourdomain.com/forum/whatsup.php](http://www.yourdomain.com/forum/whatsup.php).
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 你即将创建的Recent Postings MOD由一个PHP脚本和一个模板文件组成。PHP脚本命名为`whatsup.php`，托管在phpBB根目录下，所以如果你的论坛安装在[http://www.yourdomain.com/forum/](http://www.yourdomain.com/forum/)，脚本将在[http://www.yourdomain.com/forum/whatsup.php](http://www.yourdomain.com/forum/whatsup.php)处可访问。
- en: The Template
  id: totrans-306
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模板
- en: 'The template for the script is named `whatsup.tpl` and is located in `templates/subSilver`
    directory. Here’s its listing:'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本的模板命名为`whatsup.tpl`，位于`templates/subSilver`目录中。以下是它的列表：
- en: '[PRE57]'
  id: totrans-308
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: There’s nothing too specific for the template, it contains a table with three
    columns for **Forum**, **Topic**, and **Author** respectively. A loop block encloses
    two table rows (`<tr> ... </tr>`); the first one is the row that contains the
    forum name, the topic and the author information and links. The second one contains
    the posting. It’s hidden by default (having `style="display:none"`) and gets shown/hidden
    on user request by a JavaScript linked to the second small icon (![The Template](img/1132_08_18.jpg)).
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 对于模板来说，没有太多具体的要求，它包含一个有三个列的表格，分别对应**论坛**、**主题**和**作者**。一个循环块包围了两个表格行（`<tr> ...
    </tr>`）；第一个包含论坛名称、主题和作者信息以及链接的行。第二个包含帖子。它默认隐藏（具有`style="display:none"`），通过链接到第二个小图标（![The
    Template](img/1132_08_18.jpg)）的JavaScript在用户请求时显示/隐藏。
- en: 'There is also one nested block within the `row` block. It’s called `is_mod_switch`
    and serves the purpose of handling an "if" case. The case is if the user has moderator
    privileges in the forum currently being listed. If yes, the link to the moderator
    control panel is displayed. This portion of the template is listed here:'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 在`row`块内部还有一个嵌套的块。它被称为`is_mod_switch`，其目的是处理一个“if”情况。这个情况是，如果用户在当前列出的论坛中具有管理员权限，则显示管理员控制面板的链接。这个模板的部分如下所示：
- en: '[PRE58]'
  id: totrans-311
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: The Code
  id: totrans-312
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 代码
- en: 'Now let’s take a look at `whatsup.php`. The implementation starts like all
    other scripts discussed in the chapter, with a small difference: an additional
    file, `bbcode.php`, is included. It contains the necessary functions to work with
    the BBCode and the smilies:'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看看`whatsup.php`文件。实现方式与本章讨论的所有其他脚本类似，但有一个小的不同：包含了一个额外的文件`bbcode.php`。它包含了与BBCode和表情符号一起工作的必要函数：
- en: '[PRE59]'
  id: totrans-314
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'After including the required files comes the session management, which is similar
    to all the other scripts in this chapter:'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 在包含所需的文件之后，是会话管理，这与本章中所有其他脚本类似：
- en: '[PRE60]'
  id: totrans-316
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'Then comes the user authorization and privileges check:'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 然后是用户授权和权限检查：
- en: '[PRE61]'
  id: totrans-318
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'This check verifies the user’s read privileges for all the board’s forums.
    Right after this there is a loop through the results of the authorization, so
    that an array of forum IDs is compiled. The array contains the IDs of the forums
    the user is allowed to read:'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 这个检查验证了用户对所有论坛的阅读权限。在此之后，有一个通过授权结果的循环，以便编译一个包含用户允许阅读的论坛ID的数组：
- en: '[PRE62]'
  id: totrans-320
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'After the privileges are checked, we need some data from the database, for
    which we need to execute an SQL string. It is quite long as it joins five tables
    in order to retrieve the required information. The logic of the query is as follows:'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 权限检查完成后，我们需要从数据库中获取一些数据，为此我们需要执行一个SQL字符串。它相当长，因为它连接了五个表以检索所需的信息。查询的逻辑如下：
- en: The most recent 15 entries from the **postings** table are selected. The way
    to get the most recent is to sort descending on the posting auto-increment ID.
  id: totrans-322
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从**帖子**表中选择了最近的15条帖子。获取最近的方法是按帖子自动递增ID降序排序。
- en: Based on the topic ID from the postings table, the **topics** table is joined
    to retrieve topic data such as title and topic type.
  id: totrans-323
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据帖子表中的主题ID，将**主题**表连接起来以检索标题和主题类型等主题数据。
- en: Based on the forum ID from the postings table, the **forums** table is joined
    to retrieve forum data such as the name, and also to filter the allowed forums
    using the `$allowed_forum_ids` array that was already compiled.
  id: totrans-324
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据帖子表中的论坛ID，将**论坛**表连接起来以检索论坛数据，例如名称，并且使用已编译的`$allowed_forum_ids`数组来过滤允许的论坛。
- en: Based on the post ID from the postings table, the **posting texts** table is
    joined in order to retrieve the posting body.
  id: totrans-325
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据帖子表中的帖子ID，将**帖子文本**表连接起来以检索帖子正文。
- en: Finally based on the user ID from the postings table, the **users** table is
    joined as it contains the username of the poster, which is displayed in the listing.
  id: totrans-326
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，根据帖子表中的用户ID，将**用户**表连接起来，因为它包含发帖者的用户名，该用户名在列表中显示。
- en: '[PRE63]'
  id: totrans-327
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'After the SQL query is assembled, it’s executed:'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 在SQL查询组装完成后，执行它：
- en: '[PRE64]'
  id: totrans-329
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: After successful query execution, it’s time to loop through the results and
    replace some template variables. Before the loop, we retrieve the list of censored
    words and their replacements. Remember that the filters were set up in the Admin
    panel.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 在查询执行成功后，现在是时候遍历结果并替换一些模板变量了。在循环之前，我们检索被审查词汇及其替换列表。请记住，过滤器是在管理面板中设置的。
- en: '[PRE65]'
  id: totrans-331
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'The results loop starts:'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 结果循环开始：
- en: '[PRE66]'
  id: totrans-333
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: The first thing to do in the loop is to compile the "go to" links. These are
    the links like the ones shown in the following illustration.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 在循环中要做的第一件事是编译“转到”链接。这些链接就像以下插图中所展示的那样。
- en: '![The Code](img/1132_08_19.jpg)'
  id: totrans-335
  prefs: []
  type: TYPE_IMG
  zh: '![代码](img/1132_08_19.jpg)'
- en: The code to retrieve these types of links is borrowed from a phpBB core script
    (`search.php`) without modifications—a good example of how you can learn from
    the phpBB application.
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 获取这些类型链接的代码是从phpBB核心脚本（`search.php`）中借用的，没有进行修改——这是一个很好的例子，说明了你可以从phpBB应用程序中学习。
- en: Next follows a check for some topic attributes—is this topic a sticky or an
    announcement and does it contain a poll? A `$topic_type` variable is assigned
    a value; this variable’s value will be displayed before the topic name.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是对一些主题属性进行检查——这个主题是否是粘帖或公告，以及它是否包含投票？将一个值分配给`$topic_type`变量；这个变量的值将在主题名称之前显示。
- en: '[PRE67]'
  id: totrans-338
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'Next the parsing of the posting body follows. It consists of processing the
    BB code, replacing the smilies codes with images, replacing any filtered words,
    and making clickable all strings that look like links or e-mail addresses:'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是对帖子正文的解析。它包括处理BB代码，将表情符号代码替换为图像，替换任何过滤词汇，以及将所有看起来像链接或电子邮件地址的字符串变为可点击：
- en: '[PRE68]'
  id: totrans-340
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: 'At this point, all the data is retrieved and processed/compiled as necessary.
    It’s now time to display it. So this is where the assignment of template variables
    within the `row` template block starts:'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个阶段，所有数据都已检索并按需处理/编译。现在是时候显示它了。所以这就是在`row`模板块内分配模板变量的开始：
- en: '[PRE69]'
  id: totrans-342
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: What you may find interesting in this piece of code is the use of the phpBB
    functions `append_sid()` (for keeping the session ID in hyperlinks) and `create_date()`
    (for formatting the date). Their usage was already described earlier in the *Tips
    and Tricks* section of this chapter, but here you can see them in action.
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会对这个代码片段中使用的phpBB函数`append_sid()`（用于在超链接中保持会话ID）和`create_date()`（用于格式化日期）感兴趣。它们的用法已经在本章的“技巧与窍门”部分中描述过，但在这里你可以看到它们是如何工作的。
- en: 'Next is the `is_mod_switch`, providing moderators with a link to the forum’s
    moderator control panel:'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是`is_mod_switch`，为版主提供一个链接到论坛的版主控制面板：
- en: '[PRE70]'
  id: totrans-345
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: 'The loop through the results is now completed. All that remains to be done
    is:'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 结果的循环现在已完成。剩下要做的只是：
- en: Include the page header
  id: totrans-347
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包含页面头部
- en: Assign the template file
  id: totrans-348
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分配模板文件
- en: Assign some global template variables ("global" meaning "outside the `row` loop")
  id: totrans-349
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分配一些全局模板变量（“全局”意味着“在`row`循环之外”）
- en: Parse and output the compiled template
  id: totrans-350
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解析并输出编译后的模板
- en: Include the page footer (tail)
  id: totrans-351
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包含页面页脚（尾部）
- en: 'Here is how it’s done:'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是如何操作的：
- en: '[PRE71]'
  id: totrans-353
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: 'And... that’s it! This is how a completely new phpBB script is built from scratch.
    The following is the complete source code listing for the new phpBB feature, the
    `whatsup.php` script (included in the code download). Copy this to your board’s
    root and you’re done! And don’t forget: `whatsup.tpl` should be copied to `templates/subSilver`.'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 好了！这就是从头开始构建一个全新的phpBB脚本的方法。以下是新phpBB功能的完整源代码列表，`whatsup.php`脚本（包含在代码下载中）。将其复制到您的论坛根目录，然后完成！别忘了：`whatsup.tpl`应该复制到`templates/subSilver`。
- en: '[PRE72]'
  id: totrans-355
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: Summary
  id: totrans-356
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: This last chapter introduced you to the new and exciting world of phpBB programming.
    The chapter described in detail how to use different phpBB functions, how to use
    the phpBB database abstraction layer, the phpBB templating engine, and how to
    properly parse and display postings. Now you have the basic knowledge to start
    coding your own extensions to the phpBB core features. A number of examples were
    given, which are all available in the book’s code download.
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 这最后一章向你介绍了 phpBB 编程的新鲜和激动人心的世界。本章详细介绍了如何使用不同的 phpBB 函数，如何使用 phpBB 数据库抽象层，phpBB
    模板引擎，以及如何正确解析和显示帖子。现在你有了开始编写自己扩展 phpBB 核心功能的基本知识。书中给出了许多示例，这些示例都可以在书籍的代码下载中找到。
- en: It’s a good idea to start experimenting with the examples; tweak them a bit,
    and see how the results change. By doing so, you’ll get a better understanding
    of how the different functions work, and probably some ideas will start taking
    shape as to how you can customize and extend the phpBB functionality. Happy phpBB-ing!
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 试着用示例开始实验是个好主意；稍微调整一下，看看结果如何变化。通过这样做，你会更好地理解不同函数的工作方式，也许一些关于如何自定义和扩展 phpBB 功能的想法也会开始成形。祝你在
    phpBB 之旅中愉快！
