- en: Chapter 7. Search Using Lucene
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7章：使用Lucene进行搜索
- en: '*More often than not, we will come across web applications that need support
    for built-in search capabilities. Sometimes the search could involve searching
    a simple field in a MySQL table, or at times you may want to search a document
    or a plain text file; there are multiple ways to address the search requirements
    using various search libraries. Lucene is one such library that offers excellent
    search capabilities for implementing full text search.*'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '*通常情况下，我们会遇到需要内置搜索功能的Web应用程序。有时搜索可能涉及在MySQL表中搜索一个简单的字段，或者有时你可能想要搜索一个文档或纯文本文件；使用各种搜索库有多种方法来解决搜索需求。Lucene就是这样一种库，它为实施全文搜索提供了出色的搜索功能。*'
- en: 'In this chapter we will be using Zend Framework''s Lucene search implementation.
    Zend Framework 1.0 had a built-in `Zend_Search_Lucene` library which supported
    indexing and searching with Lucene; in ZF 2.0, this library is available as `ZendSearch\Lucene`,
    which can be downloaded and installed on your web application. In this chapter,
    we will be learning the fundamentals of implementing a full-text search using
    the Lucene search library in the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将使用Zend Framework的Lucene搜索实现。Zend Framework 1.0内置了`Zend_Search_Lucene`库，该库支持使用Lucene进行索引和搜索；在ZF
    2.0中，这个库作为`ZendSearch\Lucene`提供，可以下载并安装到你的Web应用程序中。在本章中，我们将学习使用Lucene搜索库实现全文搜索的基本原理，以下是一些主题：
- en: Installing the `ZendSearch` library in your application
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在你的应用程序中安装`ZendSearch`库
- en: Creating data index for simple MySQL data
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为简单的MySQL数据创建数据索引
- en: Querying the Lucene index
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查询Lucene索引
- en: Adding new documents files to the index
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向索引中添加新的文档文件
- en: Introduction to Lucene
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Lucene简介
- en: Lucene is a high-performance, scalable information retrieval (search) library
    developed by Apache Foundation, which can be used for implementing free-text search
    in web applications. Lucene provides a simple-to-use API, which will provide powerful
    indexing and searching capability to your web application. To read more about
    Lucene visit [http://lucene.apache.org/](http://lucene.apache.org/).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Lucene是由Apache基金会开发的一个高性能、可扩展的信息检索（搜索）库，可用于在Web应用程序中实现全文搜索。Lucene提供了一个简单易用的API，它将为你的Web应用程序提供强大的索引和搜索功能。要了解更多关于Lucene的信息，请访问[http://lucene.apache.org/](http://lucene.apache.org/)。
- en: 'The most important components of the Lucene search library are explained as
    follows:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Lucene搜索库最重要的组件解释如下：
- en: '**Index**: Lucene index is the data store that holds all the indexed documents;
    queries are executed against the index to fetch the documents.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**索引**：Lucene索引是存储所有已索引文档的数据存储；查询是针对索引执行的，以获取文档。'
- en: '**Document**: A document is the default building block for a Lucene index;
    documents can be compared to records in a table. Each document holds a number
    of fields upon which queries can be executed.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文档**：文档是Lucene索引的默认构建块；文档可以与表中的记录相比较。每个文档包含多个字段，查询可以针对这些字段执行。'
- en: '**Field**: Each Lucene document comprises of one or more fields; it is not
    necessary that all the fields are indexed, fields can also be stored without indexing.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**字段**：每个Lucene文档包含一个或多个字段；并非所有字段都必须被索引，字段也可以在不索引的情况下存储。'
- en: 'The Lucene search works based on the index, so it is necessary to have the
    index updated with the latest content to get the best search results. The following
    diagram explains the overview of the Lucene search:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Lucene搜索基于索引进行，因此有必要更新索引以包含最新内容，以获得最佳的搜索结果。以下图表解释了Lucene搜索的概述：
- en: '![Introduction to Lucene](img/1929OS_07_01.jpg)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![Lucene简介](img/1929OS_07_01.jpg)'
- en: Time for action – installing ZendSearch\Lucene
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 现在是时候安装ZendSearch\Lucene了
- en: 'Perform the following steps for installing `ZendSearch\Lucene`:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤以安装`ZendSearch\Lucene`：
- en: '`ZendSearch\Lucene` was not available as a composer package at the time of
    writing this book. So, we will check out the source from the GitHub repository.
    The repository is available at [https://github.com/zendframework/ZendSearch](https://github.com/zendframework/ZendSearch).'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在撰写本书时，`ZendSearch\Lucene`不是一个composer包。因此，我们将从GitHub仓库中检出源代码。仓库位于[https://github.com/zendframework/ZendSearch](https://github.com/zendframework/ZendSearch)。
- en: 'Next we need to navigate to the `vendor` folder:'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要导航到`vendor`文件夹：
- en: '[PRE0]'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Clone the Zend search repository into the `vendor` folder:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将Zend搜索仓库克隆到`vendor`文件夹中：
- en: '[PRE1]'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Next we should configure the ZendSearch library using composer:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们应该使用composer配置ZendSearch库：
- en: '[PRE2]'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Once the library is configured, we will need to define a module-level configuration
    to store the index location. To do this, we need to modify `CommunicationApp/module/Users/config/module.config.php`,
    and add a new configuration for `search_index`:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦库配置完成，我们需要定义一个模块级别的配置来存储索引位置。为此，我们需要修改 `CommunicationApp/module/Users/config/module.config.php`，并为
    `search_index` 添加一个新的配置：
- en: '[PRE3]'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '*What just happened?*'
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: We have now downloaded and configured the `ZendSearch` library for Zend Framework
    2.0; the previous tutorial also provides us with a guideline for downloading and
    installing packages which cannot be downloaded directly from Composer.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经下载并配置了 Zend Framework 2.0 的 `ZendSearch` 库；之前的教程也为我们提供了下载和安装无法直接从 Composer
    下载的包的指南。
- en: Now that we have the `ZendSearch\Lucene` search library installed, our next
    task will be to create a Lucene index for some of the data that is already stored
    in our communication application.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经安装了 `ZendSearch\Lucene` 搜索库，我们的下一个任务将是为存储在我们通信应用中的某些数据创建一个 Lucene 索引。
- en: Indexing
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 索引
- en: 'Indexing is a fairly straightforward process using `ZendSearch\Lucene`. All
    we need is to create documents with fields and values, and keep adding the document
    to the index. You can also remove documents, update documents, and clear an index.
    The following classes are used in index generation:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `ZendSearch\Lucene` 进行索引是一个相当直接的过程。我们只需要创建带有字段和值的文档，并持续将文档添加到索引中。您还可以删除文档、更新文档和清除索引。以下类用于索引生成：
- en: '`Field` – The `ZendSearch\Lucene\Document\Field` class allows users to define
    a new document field; this field can be classified into one the following types:'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Field` – `ZendSearch\Lucene\Document\Field` 类允许用户定义一个新的文档字段；此字段可以被分类为以下类型之一：'
- en: '`Field::keyword($name, $value, $encoding = ''UTF-8'')`: the `keyword` field
    type is used to identify string fields that don''t have to be tokenized, yet need
    to be indexed and stored. For example, date and URL.'
  id: totrans-32
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Field::keyword($name, $value, $encoding = ''UTF-8'')`: `keyword` 字段类型用于标识不需要分词但需要索引和存储的字符串字段。例如，日期和
    URL。'
- en: '`Field::unIndexed($name, $value, $encoding = ''UTF-8'')`: The `unIndexed` field
    type is used to store fields in the index without having to index/tokenize them.
    For example, ID fields.'
  id: totrans-33
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Field::unIndexed($name, $value, $encoding = ''UTF-8'')`: `unIndexed` 字段类型用于在索引中存储字段，而无需对其进行索引/分词。例如，ID
    字段。'
- en: '`Field::binary($name, $value)`: The `binary` field type is used for storing
    binary values in the index.'
  id: totrans-34
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Field::binary($name, $value)`: `binary` 字段类型用于在索引中存储二进制值。'
- en: '`Field::text($name, $value, $encoding = ''UTF-8'')`: The `text` field type
    is the most common field type used for describing short strings which are tokenized
    and stored in the index.'
  id: totrans-35
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Field::text($name, $value, $encoding = ''UTF-8'')`: `text` 字段类型是最常用的字段类型，用于描述短字符串，这些字符串将被分词并存储在索引中。'
- en: '`Field::unStored($name, $value, $encoding = ''UTF-8'')`: The `unStored` field
    type is used to identify fields that will be tokenized and indexed, but not stored
    in the index.'
  id: totrans-36
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Field::unStored($name, $value, $encoding = ''UTF-8'')`: `unStored` 字段类型用于标识那些将被分词和索引但不会存储在索引中的字段。'
- en: '`Document` – The `ZendSearch\Lucene\Document` class allows definition of a
    new index document. Some of the most commonly-used methods in this class are described
    as follows:'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Document` – `ZendSearch\Lucene\Document` 类允许定义一个新的索引文档。以下是一些在这个类中最常用的方法的描述：'
- en: '`addField(Document\Field $field)`: Adds a new field to the document'
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`addField(Document\Field $field)`: 向文档中添加一个新的字段'
- en: '`getFieldNames()`: Used to retrieve all field names from the document'
  id: totrans-39
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`getFieldNames()`: 用于从文档中检索所有字段名称'
- en: '`getField($fieldName)`: Used to retrieve a specific field from the document'
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`getField($fieldName)`: 用于从文档中检索特定字段'
- en: '`getFieldValue($fieldName)`: Used to retrieve a specific field value from the
    document'
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`getFieldValue($fieldName)`: 用于从文档中检索特定字段值'
- en: '`Index` – `Index` can be retrieved using the `create()` and `open()` methods
    in the `ZendSearch\Lucene` class. Both the methods take the index path as the
    parameter and return an index of type `ZendSearch\Lucene\SearchIndexInterface`.
    The `SearchIndexInterface` provides the following methods for manipulating the
    documents inside the index:'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Index` – 可以使用 `ZendSearch\Lucene` 类中的 `create()` 和 `open()` 方法检索 `Index`。这两个方法都接受索引路径作为参数，并返回一个类型为
    `ZendSearch\Lucene\SearchIndexInterface` 的索引。`SearchIndexInterface` 为操作索引内的文档提供了以下方法：'
- en: '`addDocument(Document $document)`: Adds a new document to the index'
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`addDocument(Document $document)`: 向索引中添加一个新的文档'
- en: '`delete($id)`: Deletes the indexed document based on the internal document
    ID'
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`delete($id)`: 根据内部文档 ID 删除索引中的文档'
- en: '`optimize()`: Helps in optimizing the index, by merging all segments into a
    single segment, thereby increasing the performance'
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`optimize()`: 通过合并所有段为一个单一段来优化索引，从而提高性能'
- en: '`commit()`: Used to commit transactions to the search index'
  id: totrans-46
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`commit()`: 用于将事务提交到搜索索引'
- en: Now that we have learned about the methods that are used for index generation,
    let's get started and generate the index for the `uploads` table that is available
    in our communication application.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了用于索引生成的各种方法，让我们开始并为我们的通信应用程序中可用的 `uploads` 表生成索引。
- en: Time for action – generating a Lucene index
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 执行动作时间 – 生成 Lucene 索引
- en: 'Perform the following steps for generating a Lucene index:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤以生成 Lucene 索引：
- en: Create a new search controller, `CommunicationApp/module/Users/src/Users/Controller/SearchController.php`,
    which will be used for searching and generating indexes.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的搜索控制器，`CommunicationApp/module/Users/src/Users/Controller/SearchController.php`，它将被用于搜索和生成索引。
- en: 'Add references to `ZendSearch\Lucene`:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加对 `ZendSearch\Lucene` 的引用：
- en: '[PRE4]'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Add a method to fetch the index location from the module configuration:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加一个方法从模块配置中获取索引位置：
- en: '[PRE5]'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The index document needs to be generated in the following format:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 索引文档需要以下格式生成：
- en: '| Index field | Description |'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 索引字段 | 描述 |'
- en: '| --- | --- |'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `upload_id` | This is non-indexed field which will be used for retrieving
    the uploaded file that gets returned in the search results |'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `upload_id` | 这是一个非索引字段，将用于检索在搜索结果中返回的已上传文件 |'
- en: '| `label` | This field is used to index the `label` field of the `uploads`
    table |'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `label` | 此字段用于索引 `uploads` 表的 `label` 字段 |'
- en: '| `owner` | This field is used to index the `name` field of the user who uploaded
    the document |'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| `owner` | 此字段用于索引上传文档的用户 `name` 字段 |'
- en: 'Create a new action to generate the index:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的操作以生成索引：
- en: '[PRE6]'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Now open the action URL (`http://comm-app.local/users/search/generateIndex`)
    in your web browser, and if everything works as expected, you will see that the
    index files that created in the `search_index` folder.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在在您的网络浏览器中打开操作 URL (`http://comm-app.local/users/search/generateIndex`)，如果一切按预期工作，您将看到在
    `search_index` 文件夹中创建的索引文件。
- en: 'The following screenshot shows the browser response upon a successful index
    update:'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下截图显示了成功更新索引后的浏览器响应：
- en: '![Time for action – generating a Lucene index](img/1929OS_07_09.jpg)'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![执行动作时间 – 生成 Lucene 索引](img/1929OS_07_09.jpg)'
- en: 'You can see in the following screenshot that the index files are generated
    and stored in the `search_index` folder:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在以下截图中看到索引文件已生成并存储在 `search_index` 文件夹中：
- en: '![Time for action – generating a Lucene index](img/1929OS_07_02.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![执行动作时间 – 生成 Lucene 索引](img/1929OS_07_02.jpg)'
- en: '*What just happened?*'
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: Now we have created a method to index the data stored in the `MySQL` table to
    the Lucene data store; our next step will be to have some queries executed against
    the Lucene index and to fetch and show the results.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经创建了一个方法，将存储在 `MySQL` 表中的数据索引到 Lucene 数据存储中；我们的下一步将是执行针对 Lucene 索引的查询，并获取并显示结果。
- en: Searching
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 搜索
- en: Searching the index is relatively simple using `ZendSearch\Lucene`. The index
    needs to be opened for querying and the query string needs to be passed to the
    `find()` method in `ZendSearch\Lucene\Index`. The `find` methods return an array
    matching the hits for the specific query, and this in turn can be used to render
    the search results.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `ZendSearch\Lucene` 搜索索引相对简单。需要打开索引以进行查询，并将查询字符串传递给 `ZendSearch\Lucene\Index`
    中的 `find()` 方法。`find` 方法返回一个数组，匹配特定查询的命中项，然后可以用来渲染搜索结果。
- en: There are two options for querying the index—you can pass the plain text query
    string to the find function or you can build your own `Query` object using `ZendSearch\Lucene\Search\Query`.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 查询索引有两种选项——你可以将纯文本查询字符串传递给查找函数，或者你可以使用 `ZendSearch\Lucene\Search\Query` 构建自己的
    `Query` 对象。
- en: Tip
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: 'To read more about various query options in ZendSearch\Lucene, check the following
    developer documentation:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解有关 ZendSearch\Lucene 中各种查询选项的更多信息，请查看以下开发者文档：
- en: '[https://zf2.readthedocs.org/en/release-2.2.0/modules/zendsearch.lucene.queries.html](https://zf2.readthedocs.org/en/release-2.2.0/modules/zendsearch.lucene.queries.html
    )'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://zf2.readthedocs.org/en/release-2.2.0/modules/zendsearch.lucene.queries.html](https://zf2.readthedocs.org/en/release-2.2.0/modules/zendsearch.lucene.queries.html
    )'
- en: 'In the following example, we will be using plain text queries, and you can
    manipulate the search results by using operators such as `:`,`+`,`-`, and field
    searches. For example, see the following list:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下示例中，我们将使用纯文本查询，并且您可以通过使用操作符如 `:`,`+`,`-` 和字段搜索来操作搜索结果。例如，请参阅以下列表：
- en: 'A search for all documents uploaded by Anne could be retrieved by the following
    query:'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过以下查询可以检索到由名为 `Anne` 的用户上传的所有文档：
- en: '[PRE7]'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'A search for all documents having the word `report` and uploaded by the user
    named `Anne` could be retrieved by the following query:'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过以下查询可以检索到包含单词 `report` 并由用户名为 `Anne` 上传的所有文档：
- en: '[PRE8]'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'A search for all documents having the word `report` and excluding the ones
    uploaded by `Anne` could be retrieved by the following query:'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过以下查询可以检索到包含单词 `report` 的所有文档，并排除由 `Anne` 上传的文档：
- en: '[PRE9]'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Time for action – displaying search results
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 执行操作时间 – 显示搜索结果
- en: 'Perform the following steps for displaying search results:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤以显示搜索结果：
- en: For displaying the search results, we will need to create a new form which will
    display the search textbox and render the search results right below the search
    form. The form will be placed in `SearchController` under `CommunicationApp/module/Users/src/Users/Controller/SearchController.php`.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了显示搜索结果，我们需要创建一个新的表单，该表单将显示搜索文本框，并在搜索表单下方渲染搜索结果。该表单将放置在 `CommunicationApp/module/Users/src/Users/Controller/SearchController.php`
    下的 `SearchController` 中。
- en: Create a new view which will be used for displaying the query window and also
    rendering search results. This will be placed under `CommunicationApp/module/Users/view/users/search/index.phtml`.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的视图，该视图将用于显示查询窗口并渲染搜索结果。这将放置在 `CommunicationApp/module/Users/view/users/search/index.phtml`
    下。
- en: '[PRE10]'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Now create a new action which will display the `Search` form and also query
    the Lucene index with the input provided in the `Search` form. This will be placed
    in `SearchController` under `CommunicationApp/module/Users/src/Users/Controller/SearchController.php`.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在创建一个新的操作，该操作将显示 `搜索` 表单，并使用 `搜索` 表单中提供的输入查询 Lucene 索引。这将放置在 `CommunicationApp/module/Users/src/Users/Controller/SearchController.php`
    下的 `SearchController` 中。
- en: '[PRE11]'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Test the page in your browser; you should be able to see search results for
    keywords that are available in the `label` and `owner` fields:![Time for action
    – displaying search results](img/1929OS_07_03.jpg)
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的浏览器中测试页面；您应该能够看到 `标签` 和 `所有者` 字段中可用的关键字搜索结果：![执行操作时间 – 显示搜索结果](img/1929OS_07_03.jpg)
- en: 'On searching using `Owner Name`, you will get the following search results:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用 `所有者名称` 搜索时，您将得到以下搜索结果：
- en: '![Time for action – displaying search results](img/1929OS_07_04.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![执行操作时间 – 显示搜索结果](img/1929OS_07_04.jpg)'
- en: '*What just happened?*'
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: We have now implemented the search results page, which allows us to query for
    uploaded documents using their labels and owners. The retrieved search results
    are displayed in a customized view which allows us to download the document from
    the search result.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经实现了搜索结果页面，该页面允许我们通过标签和所有者查询上传的文档。检索到的搜索结果在自定义视图中显示，允许我们从搜索结果中下载文档。
- en: Our next step will be to expand the search to search the contents of the uploaded
    documents; for this we will need to make changes to the way we generate the index.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的下一步将是扩展搜索以搜索上传文档的内容；为此，我们需要更改生成索引的方式。
- en: Indexing Microsoft Office documents
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 索引 Microsoft Office 文档
- en: 'As we have seen in the previous example, it is usually insufficient to index
    the documents'' meta information. Most of the time the query string is only present
    in the document''s content. In order to achieve that, we need to parse the document
    and index the content; `ZendSearch\Lucene` provides support indexing the contents
    of the following document types:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一个示例所示，仅索引文档的元信息通常是不够的。大多数情况下，查询字符串仅存在于文档的内容中。为了实现这一点，我们需要解析文档并索引内容；`ZendSearch\Lucene`
    提供了索引以下文档类型内容的支持：
- en: 'For HTML documents the following are the index document creation methods:'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于 HTML 文档，以下是指示文档创建方法：
- en: '[PRE12]'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'For Word 2007 documents the following is the index document creation method:'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于 Word 2007 文档，以下是指示文档创建方法：
- en: '[PRE13]'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'For Powerpoint 2007 documents the following is the index document creation
    method:'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于 Powerpoint 2007 文档，以下是指示文档创建方法：
- en: '[PRE14]'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'For Excel 2007 documents the following is the index document creation method:'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于 Excel 2007 文档，以下是指示文档创建方法：
- en: '[PRE15]'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: All these methods return a document of type `ZendSearch\Lucene\Document`, which
    can be improvised further by adding more index fields to it.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些方法都返回一个类型为`ZendSearch\Lucene\Document`的文档，可以通过添加更多索引字段来进一步改进。
- en: So let's get started by indexing the documents that are available in the `uploads`
    section.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从索引`uploads`部分可用的文档开始吧。
- en: Time for action – indexing document files
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 – 索引文档文件
- en: 'Perform the following steps for indexing document files:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤以索引文档文件：
- en: To index office documents, add a new `uploads` section for sample Word and Excel
    documents. In this case, we will upload a Word document and an Excel spreadsheet
    as follows:![Time for action – indexing document files](img/1929OS_07_05.jpg)
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要索引办公文档，为样本Word和Excel文档添加一个新的`uploads`部分。在这种情况下，我们将上传一个Word文档和一个Excel电子表格，如下所示：![行动时间
    – 索引文档文件](img/1929OS_07_05.jpg)
- en: Sample Word 2007 document
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 样本Word 2007文档
- en: '![Time for action – indexing document files](img/1929OS_07_06.jpg)'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间 – 索引文档文件](img/1929OS_07_06.jpg)'
- en: Sample Excel 2007 spreadsheet
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 样本Excel 2007电子表格
- en: 'Add the following lines to the indexing function present in `SearchController`,
    which is present in `CommunicationApp/module/Users/src/Users/Controller/SearchController.php`,
    so that the method picks up and indexes Word documents and Excel spreadsheets
    separately:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下行添加到位于`CommunicationApp/module/Users/src/Users/Controller/SearchController.php`中的`SearchController`索引函数中，以便该方法能够分别索引Word文档和Excel电子表格：
- en: '[PRE16]'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Now update the index (navigate to `http://comm-app.local/users/search/generateIndex`),
    come back to the **Document Search** page, and try searching for keywords that
    are present in the document. You should be able to see the search results as shown
    in the following screenshot:![Time for action – indexing document files](img/1929OS_07_07.jpg)
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在更新索引（导航到`http://comm-app.local/users/search/generateIndex`），回到**文档搜索**页面，尝试搜索文档中存在的关键词。你应该能够看到如下截图所示的搜索结果：![行动时间
    – 索引文档文件](img/1929OS_07_07.jpg)
- en: 'Search results for the content inside Office documents will be as shown in
    the following screenshot:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: Office文档内容的搜索结果将如下截图所示：
- en: '![Time for action – indexing document files](img/1929OS_07_08.jpg)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![行动时间 – 索引文档文件](img/1929OS_07_08.jpg)'
- en: '*What just happened?*'
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: In the last task we saw the implementation of indexing and searching the content
    of Microsoft Office documents. As you can see, it is relatively easy to implement
    these features using `ZendSearch\Lucene`.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一个任务中，我们看到了如何实现索引和搜索Microsoft Office文档的内容。正如你所见，使用`ZendSearch\Lucene`实现这些功能相对简单。
- en: Have a go hero
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 有所作为的英雄
- en: Here is a simple task for you before you move on to the next chapter. Now that
    we have implemented indexing and searching, your task will be to modify the entities
    so that the index is updated each time changes are made to uploads. If a new upload
    is made, a document needs to be added to the index, and if an upload is deleted,
    it should be removed from the index, and so on.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在你进入下一章之前，这里有一个简单的任务给你。现在我们已经实现了索引和搜索，你的任务将是修改实体，以便每次对上传进行更改时，索引都会更新。如果上传了新文件，需要将文档添加到索引中，如果上传被删除，则应从索引中移除，依此类推。
- en: Pop quiz – search
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 快速问答 – 搜索
- en: Q1\. Which of the following field types is not tokenized, yet is indexed and
    stored?
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: Q1. 以下哪种字段类型未进行分词，但已索引并存储？
- en: '`keyword ()`'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`keyword ()`'
- en: '`unStored ()`'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`unStored ()`'
- en: '`text()`'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`text()`'
- en: '`unIndexed()`'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`unIndexed()`'
- en: Q2\. Which of the following file formats is not supported for `ZendSearch\Lucene`
    as a valid document format for content indexing?
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: Q2. 以下哪种文件格式不支持作为`ZendSearch\Lucene`内容索引的有效文档格式？
- en: '`.docx`'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`.docx`'
- en: '`.pdf`'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`.pdf`'
- en: '`.xslx`'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`.xslx`'
- en: '`.html`'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`.html`'
- en: Summary
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter we have learned about implementing a simple search interface
    using `ZendSearch\Lucene`. This would be very useful when implementing search
    in any web application that you work with. In the next chapter we will be learning
    about implementing a simple e-commerce store using Zend Framework 2.0.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何使用`ZendSearch\Lucene`实现一个简单的搜索界面。这对于实现你正在工作的任何Web应用程序中的搜索功能非常有用。在下一章中，我们将学习如何使用Zend
    Framework 2.0实现一个简单的电子商务商店。
