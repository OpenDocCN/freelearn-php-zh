- en: Chapter 3. Drupal Views and Configuration Management
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3章。Drupal Views和配置管理
- en: '*In the last chapter, we learned how to create basic custom modules as well
    as create new content types. Now let''s explore the new configuration management
    introduced in Drupal 8 for better version control. We will learn how to use the
    Devel module to generate content for testing purposes, along with learning the
    basics of new and improved views.*'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '*在上一个章节中，我们学习了如何创建基本的自定义模块以及创建新的内容类型。现在让我们探索Drupal 8中引入的新配置管理，以实现更好的版本控制。我们将学习如何使用Devel模块生成内容以进行测试，同时学习新和改进的视图的基础知识。*'
- en: 'In these chapter, we will learn these topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习以下主题：
- en: Using built-in Drupal 8 views
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用内置的Drupal 8视图
- en: What is new configuration management in Drupal?
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Drupal中的新配置管理是什么？
- en: Using the configuration management module to export and import site configuration
    through the user interface
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用配置管理模块通过用户界面导出和导入网站配置
- en: Using the Devel module to autogenerate content for testing purposes
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Devel模块自动生成内容以进行测试目的
- en: A quick introduction to Views
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Views的快速介绍
- en: 'Views in Drupal 7 was the most installed and most used contributed module.
    Using views, it is easy to create pages and blocks that list a variety of content
    on the site. You can create a photo gallery or an event calendar, or list out
    users logged in to your site. Here are a few points listed when we need views:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Drupal 7中的Views是安装和使用最广泛的贡献模块。使用Views，您可以轻松创建列出网站上各种内容的页面和块。您可以创建一个照片画廊或事件日历，或者列出登录到您网站的用户。以下是我们需要Views时列出的一些要点：
- en: We like the default front page view, but we want to sort it differently
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们喜欢默认的前页视图，但希望以不同的方式排序它
- en: We want to provide an "unread forum posts" option
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们希望提供一个“未读论坛帖子”选项
- en: We like the default taxonomy/term view, but we want to sort it differently,
    for example, alphabetically
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们喜欢默认的分类/术语视图，但希望以不同的方式排序它，例如按字母顺序
- en: We want a way to display a block with the five most recent posts of a particular
    type
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们希望有一种方式来显示包含特定类型最近五篇帖子的块
- en: In Drupal 8, views has been moved to the core module system. Creating a view
    in Drupal 8 is similar to the process followed in Drupal 7\. Now the Views module
    will get installed as part of the default core module installation.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在Drupal 8中，Views已被移动到核心模块系统。在Drupal 8中创建视图的过程与Drupal 7中遵循的过程相似。现在，Views模块将作为默认核心模块安装的一部分进行安装。
- en: Time for action – creating a recipe listing block using views
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 动手实践时间 – 使用视图创建食谱列表块
- en: 'We will see how easy the new Views module makes it to display a list of recipes
    on our site:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将看到新的Views模块如何使在网站上显示食谱列表变得多么简单：
- en: If you aren't already logged in to your site, log in as admin and navigate to
    **Manage** | **Structure** at `http://yourdrupal8site.com/admin/structure`.![Time
    for action – creating a recipe listing block using views](img/4659_03_01.jpg)
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您还没有登录到您的网站，请以管理员身份登录并导航到`http://yourdrupal8site.com/admin/structure`的**管理**
    | **结构**。![动手实践时间 – 使用视图创建食谱列表块](img/4659_03_01.jpg)
- en: Select the **Views** link to create a new view. It will take you to the **Views**
    configuration page, `http://yourdrupal8site.com/admin/structure/views`.![Time
    for action – creating a recipe listing block using views](img/4659_03_02.jpg)
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**Views**链接创建一个新的视图。它将带您到**Views**配置页面，`http://yourdrupal8site.com/admin/structure/views`。![动手实践时间
    – 使用视图创建食谱列表块](img/4659_03_02.jpg)
- en: Here, you will find a minor difference in style from the Drupal 7 Views configuration
    page. There are many default views. According to your requirement, you can either
    duplicate or edit and use these predefined views. Or you can create an entirely
    new one by clicking on the **Add new view** button.
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这里，您会发现与Drupal 7 Views配置页面在风格上的细微差别。有许多默认视图。根据您的需求，您可以选择复制或编辑并使用这些预定义视图。或者，您可以点击**添加新视图**按钮创建一个全新的视图。
- en: 'Now we are going to create our own view for listing the article content type.
    Go to this path: `http://yourdrupal8site.com/admin/structure/views/addorhttp://yourdrupal8site.com/admin/structure/views`.
    Click on the **Add new view** button.'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们将创建自己的视图来列出文章内容类型。转到此路径：`http://yourdrupal8site.com/admin/structure/views/addorhttp://yourdrupal8site.com/admin/structure/views`。点击**添加新视图**按钮。
- en: You will get a form similar to the one shown next. Fill in the **View name**
    field. In this example, I am giving the view's name as `Recipe List`. For the
    **Show** and **of type** fields, I have selected **Content** and **Recipe**, respectively.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将获得一个类似于下面所示的形式。填写**视图名称**字段。在这个例子中，我给视图命名为`Recipe List`。对于**显示**和**类型**字段，我分别选择了**内容**和**食谱**。
- en: Check the **Create a block** checkbox.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选中**创建一个块**复选框。
- en: Click on the **Save and edit** button. Accepting all the default values for
    creating a block, your page should look similar to this:![Time for action – creating
    a recipe listing block using views](img/4659_03_03.jpg)
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存并编辑**按钮。接受创建块的所有默认值，您的页面应该看起来类似于这个：![执行时间 – 使用视图创建食谱列表块](img/4659_03_03.jpg)
- en: It will take you to the views configuration page at `http://yourdrupal8site.comadmin/structure/views/view/recipe_list`.
    There, you have to click on the **Save** button at the bottom of the page:![Time
    for action – creating a recipe listing block using views](img/4659_03_04.jpg)
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将带您进入`http://yourdrupal8site.comadmin/structure/views/view/recipe_list`的视图配置页面。在那里，您需要在页面底部点击**保存**按钮：![执行时间
    – 使用视图创建食谱列表块](img/4659_03_04.jpg)
- en: Now, we need to configure our d8dev site so that our Recipe List views-based
    block shows up on the front page.
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，我们需要配置我们的d8dev站点，以便我们的基于Recipe List视图的块显示在首页上。
- en: Click on the **Structure** link in the **Admin** toolbar and select **Block
    layout**:![Time for action – creating a recipe listing block using views](img/4659_03_05.jpg)
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**管理**工具栏中的**结构**链接，并选择**块布局**：![执行时间 – 使用视图创建食谱列表块](img/4659_03_05.jpg)
- en: On the next page, click on the +**Recipe List** on the right-hand side of the
    page under **LISTS (VIEWS)**:![Time for action – creating a recipe listing block
    using views](img/4659_03_06.jpg)
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一页，点击页面右侧**列表（视图）**下的+**食谱列表**：![执行时间 – 使用视图创建食谱列表块](img/4659_03_06.jpg)
- en: On the next page, leave the **Block title** field blank because that way the
    title will default to the title we added previously in the view creation wizard.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一页，将**块标题**字段留空，因为这样标题将默认为我们之前在视图创建向导中添加的标题。
- en: Under the **Region** settings, select **Sidebar second** from the dropdown:![Time
    for action – creating a recipe listing block using views](img/4659_03_07.jpg)
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**区域**设置下，从下拉菜单中选择**侧边栏第二**：![执行时间 – 使用视图创建食谱列表块](img/4659_03_07.jpg)
- en: '*What just happened?*'
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: 'You have now created a views-based block of recipes and configured it so that
    it will only be displayed on the front page. Now, when you visit the front page
    of our d8dev site, you will have a nice **Recipe List** block on the right-hand
    side of the page:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在已经创建了一个基于视图的食谱块，并配置了它，以便它只会在首页上显示。现在，当您访问d8dev网站的首页时，您将在页面的右侧看到一个漂亮的**食谱列表**块：
- en: '![What just happened?](img/4659_03_08.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![发生了什么？](img/4659_03_08.jpg)'
- en: Configuration management in Drupal 8
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Drupal 8的配置管理
- en: As developers, we have always have faced the situation of how to do incremental
    development or work around staging and deployment issues in Drupal projects. An
    even bigger challenge has been, "What to classify as content and what as configuration?"
    Though we have configuration as a separate menu to identify this problem, what
    about views, taxonomy, or theme configuration?
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 作为开发者，我们一直面临如何进行增量开发或解决Drupal项目中预演和部署问题的挑战。更大的挑战是，“什么应该归类为内容，什么应该归类为配置？”虽然我们有配置作为一个独立的菜单来识别这个问题，但关于视图、分类法或主题配置怎么办呢？
- en: It's not that we do not have a solution in Drupal 7\. To address this issue,
    the Features & Strongarm module was introduced during the Drupal 6 days, and it
    has made great improvements in the last couple of years. This was a savior in
    most of the cases. Still, we had to recreate a few configurations manually, making
    it error-prone.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 并非我们没有在Drupal 7中找到解决方案。为了解决这个问题，在Drupal 6时代引入了Features & Strongarm模块，在过去几年中它取得了很大的改进。这在大多数情况下都是一个救星。尽管如此，我们仍然不得不手动重新创建一些配置，这使得它容易出错。
- en: But documenting the configuration required for the feature export itself has
    always been challenging when there is user-generated content being added periodically,
    and we have multiple teams working on the same project, sometimes in different
    time zones. We cannot export the complete site configuration from one installation
    to another.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，当定期添加用户生成内容，并且有多个团队在同一项目上工作，有时在不同的时区时，记录特征导出所需的配置始终是一个挑战。我们不能从一台安装导出完整的站点配置。
- en: Besides, there are many contributed modules that store specific configurations
    in their own ways, making it more difficult to consolidate feature exports in
    an incremental manner.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还有许多贡献的模块以自己的方式存储特定的配置，这使得以增量方式合并功能导出变得更加困难。
- en: To improve the development process, a new configuration management initiative
    was started in Drupal 8\. Now, because of this, we have an easier way to manage
    configuration in Drupal sites. We have the entire configuration saved in files
    instead of database tables. This makes it easier to follow version control systems
    in the true way. Now we can store history and roll back changes if required.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 为了提高开发过程，Drupal 8启动了一个新的配置管理倡议。现在，由于这个原因，我们有了在Drupal网站上管理配置的更简单方法。我们将整个配置保存在文件中而不是数据库表中。这使得真正遵循版本控制系统变得更容易。现在，如果需要，我们可以存储历史记录并回滚更改。
- en: 'Let''s start by understanding what has been defined as content and what is
    configuration in a Drupal project:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先了解在Drupal项目中什么被定义为内容，什么被定义为配置：
- en: '**Content**: Everything that we display on the site''s frontend is content,
    for example, articles, basic pages, blog posts, images, video, and audio'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**内容**：我们在网站前端显示的所有内容都是内容，例如，文章、基本页面、博客文章、图片、视频和音频'
- en: '**Sessions**: Sessions store information about specific users when logged in
    while they are interacting with the Drupal site'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**会话**：会话存储有关特定用户在登录并与其Drupal网站交互时的信息'
- en: '**State**: This holds the information about the site in different scenarios
    that are temporary in nature, for example, the state when site permission is rebuilt
    or before a cron job is run'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**状态**：这包含有关网站在不同场景中的信息，这些场景本质上是临时的，例如，在重建网站权限之前或运行cron作业之前的状态'
- en: '**Configuration**: This is all of the information that is not content and is
    specific to your website, for example, the site name, content types used, fields,
    vocabularies, image styles, text formats, menu, menu links, permission system,
    and even the views you have created'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**配置**：这是所有不是内容且特定于您网站的信息，例如，网站名称、使用的内容类型、字段、词汇表、图像样式、文本格式、菜单、菜单链接、权限系统，甚至您创建的视图'
- en: It is best to use a version control system, for example, `git` or `svn`, to
    make best use of configuration management, especially when you are working with
    a distributed team.
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 最好使用版本控制系统，例如 `git` 或 `svn`，以充分利用配置管理，尤其是在与分布式团队协作时。
- en: Besides adding configuration in files, you can also add configuration manually.
    But this is best avoided as you will have to remember every step to be recreated
    during migration from staging to deployment. You cannot even use any version control
    system.
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 除了在文件中添加配置外，您还可以手动添加配置。但最好避免这样做，因为您将不得不记住在从预发布到部署迁移过程中需要重新创建的每个步骤。您甚至无法使用任何版本控制系统。
- en: Note
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Avoid using manual configuration management.
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 避免使用手动配置管理。
- en: Using the Configuration Management interface
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用配置管理界面
- en: In Drupal 8 we have a Configuration Manager module, which provides an easy interface
    to export and import site configurations and share between different environments
    of the project, such as development, staging, and deployment. You can easily verify
    the changes from your production environment using this module.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在Drupal 8中，我们有一个配置管理模块，它提供了一个简单的界面来导出和导入网站配置，并在项目的不同环境之间共享，例如开发、预发布和部署。您可以使用此模块轻松验证生产环境中的更改。
- en: This module assumes your different environment; for example, dev, staging, testing,
    and production are the same site. Each site is identified using a **Universally
    Unique Identifier** (**UUID**). The module will allow importing of configuration
    between different sites only when the UUID matches the target site.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 此模块假定您的不同环境；例如，dev、预发布、测试和生产是同一个网站。每个网站都使用**通用唯一标识符**（**UUID**）进行标识。只有当UUID与目标网站匹配时，模块才会允许在不同网站之间导入配置。
- en: 'By default, Drupal 8 saves all site configurations in the database. When installing
    the new Drupal site, it creates a new folder in `sites/default/files` named `config_HASH`.
    Here, HASH is a randomly generated long string of numbers and letters. Refer to
    this screenshot:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Drupal 8将所有网站配置保存在数据库中。在安装新的Drupal网站时，它会在 `sites/default/files` 中创建一个新的文件夹，命名为
    `config_HASH`。在这里，HASH是一个随机生成的长数字和字母字符串。请参考以下截图：
- en: '![Using the Configuration Management interface](img/4659_03_09.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![使用配置管理界面](img/4659_03_09.jpg)'
- en: This is where the configuration of different states of the site is saved.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 这是保存网站不同状态配置的地方。
- en: Let us use the module UI to export the configuration we created in the previous
    chapter in the following section.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用模块UI在下一节中导出我们在上一章创建的配置。
- en: Time for action – importing, exporting, and synchronizing configurations
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作时间 - 导入、导出和同步配置
- en: The goal of the configuration system in Drupal 8 is to make taking a copy of
    the site configuration easy to set up a development site where you make changes.
    Then, importing those changes to the other site is also made simple.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: Drupal 8中配置系统的目标是使复制网站配置变得容易，以便设置一个开发站点，在那里你可以进行更改。然后，将这些更改导入到其他站点也变得简单。
- en: 'To export Recipe content type, follow these steps:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 要导出Recipe内容类型，请按照以下步骤操作：
- en: In [Chapter 2](ch02.html "Chapter 2. Custom Module Development"), *Custom Module
    Development*, we created the Recipe content type. We will export this content
    type using configuration management. Browse to the module page at `http://yourdrupal8site.com/admin/config/development/configuration`.![Time
    for action – importing, exporting, and synchronizing configurations](img/4659_03_10.jpg)
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在[第2章](ch02.html "第2章。自定义模块开发")中，我们创建了“自定义模块开发”的Recipe内容类型。我们将使用配置管理来导出此内容类型。浏览到模块页面
    `http://yourdrupal8site.com/admin/config/development/configuration` ![操作时间 - 导入、导出和同步配置](img/4659_03_10.jpg)
- en: Click on the **Single import/Export** tab and then **Export**.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**单个导入/导出**选项卡，然后点击**导出**。
- en: 'On the configuration management module UI, the first tab is **Synchronize**.
    When you are using this feature for the first time, you will see: **There are
    no configuration changes to import**. This implies that your dev site is using
    the configurations from the database itself.'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在配置管理模块UI中，第一个选项卡是**同步**。当你第一次使用此功能时，你会看到：**没有配置更改要导入**。这意味着你的开发站点正在使用数据库本身的配置。
- en: You will see that there are no configuration changes, which means that your
    site is using the configuration files from the database and that no changes were
    made to the site.
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你会看到没有配置更改，这意味着你的网站正在使用数据库中的配置文件，并且没有对网站进行任何更改。
- en: Select the **Configuration type** as **Content type** and **Configuration name**
    as **Recipe**. You will see YAML-formatted configurations in the text area box.
    Save these YAML configurations in a separate file, `node.type.recipe.yml`. This
    file contains all the configurations related to our content type.![Time for action
    – importing, exporting, and synchronizing configurations](img/4659_03_11.jpg)
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**配置类型**为**内容类型**，**配置名称**为**Recipe**。你将在文本区域框中看到YAML格式的配置。将这些YAML配置保存在一个单独的文件中，`node.type.recipe.yml`。此文件包含与我们内容类型相关的所有配置。![操作时间
    - 导入、导出和同步配置](img/4659_03_11.jpg)
- en: However, `node.type.recipe.yml` doesn't include any fields used in the same.
    We need to export them too.
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然而，`node.type.recipe.yml`不包含任何在相同内容类型中使用的字段。我们还需要导出它们。
- en: To export, select **Field** from the dropdown on the same page.![Time for action
    – importing, exporting, and synchronizing configurations](img/4659_03_12.jpg)
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要导出，从同一页面的下拉菜单中选择**字段**。![操作时间 - 导入、导出和同步配置](img/4659_03_12.jpg)
- en: In the same way, export the form display of the Recipe content type. Select
    the **Configuration type** as **Entity form display** and **Configuration name**
    as **node.recipe.default**. Save the YAML configuration in `core.entity_form_display.node.recipe.default.yml`.![Time
    for action – importing, exporting, and synchronizing configurations](img/4659_03_13.jpg)
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以同样的方式，导出Recipe内容类型的表单显示。选择**配置类型**为**实体表单显示**，**配置名称**为**node.recipe.default**。将YAML配置保存到`core.entity_form_display.node.recipe.default.yml`。![操作时间
    - 导入、导出和同步配置](img/4659_03_13.jpg)
- en: Export the default view teaser of the Recipe content type. Select the **Configuration**
    **type** as **Entity view display** and **Configuration name** as **node.recipe.teaser**.
    Save the YAML configuration in `core.entity_view_display.node.recipe.default.yml`.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导出Recipe内容类型的默认视图摘要。选择**配置类型**为**实体视图显示**，**配置名称**为**node.recipe.teaser**。将YAML配置保存到`core.entity_view_display.node.recipe.default.yml`。
- en: Export the view Recipe List. Select the **Configuration type** as **View** and
    **Configuration name** as **Recipe List**. Save the YAML configuration in `views.view.recipe_list.yml`.![Time
    for action – importing, exporting, and synchronizing configurations](img/4659_03_14.jpg)
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导出Recipe列表视图。选择**配置类型**为**视图**，**配置名称**为**Recipe List**。将YAML配置保存到`views.view.recipe_list.yml`。![操作时间
    - 导入、导出和同步配置](img/4659_03_14.jpg)
- en: '**Importing configurations in other dev sites**'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '**在其他开发站点导入配置**'
- en: 'Install another Drupal site on your local machine which we will be using as
    target site to import all the features. Now import the content type Recipe from
    the configuration management:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的本地机器上安装另一个 Drupal 网站，我们将将其用作目标网站以导入所有功能。现在从配置管理中导入内容类型 Recipe：
- en: Go to **Administration** | **Configuration** | **Development** | **Synchronize**
    | **Import** at `http://yourstagingsite.com/admin/config/development/configuration/single/import`.
    Select the **Configuration type** as **Content type**, paste the YAML from `node.type.recipe.yml`,
    and click on **Import**.![Time for action – importing, exporting, and synchronizing
    configurations](img/4659_03_15.jpg)
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请访问 `http://yourstagingsite.com/admin/config/development/configuration/single/import`
    中的 **管理** | **配置** | **开发** | **同步** | **导入**。选择 **配置类型** 为 **内容类型**，粘贴 `node.type.recipe.yml`
    中的 YAML，然后点击 **导入**。![操作时间 – 导入、导出和同步配置](img/4659_03_15.jpg)
- en: You will get a confirmation page asking you to create a new content type.
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您将获得一个确认页面，要求您创建一个新的内容类型。
- en: '![Time for action – importing, exporting, and synchronizing configurations](img/4659_03_16.jpg)'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![操作时间 – 导入、导出和同步配置](img/4659_03_16.jpg)'
- en: 'On successful import, you should see the following screen:'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 成功导入后，您应该看到以下屏幕：
- en: '![Time for action – importing, exporting, and synchronizing configurations](img/4659_03_17.jpg)'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![操作时间 – 导入、导出和同步配置](img/4659_03_17.jpg)'
- en: In a similar way, import fields of the Recipe content type. Select the **Configuration
    type** as **Field**, paste the YAML configurations, and click on **Import**.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以类似的方式，导入 Recipe 内容类型的字段。选择 **配置类型** 为 **字段**，粘贴 YAML 配置，然后点击 **导入**。
- en: Import the view modes and form modes using the file we saved after exporting
    from our initial dev site.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用我们从初始开发网站导出后保存的文件导入视图模式和表单模式。
- en: In the preceding steps, we saw how **Single Import/Export** works. Let's explore
    the other option of **Full Import/Export:**
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的步骤中，我们看到了 **单个导入/导出** 的工作方式。让我们探索 **完整导入/导出** 的其他选项：
- en: 'Browse to the module configuration page again: `http://yourdrupal8site.com/admin/config/development/configuration`.
    This time we will focus on the third tab, **Full Import/Export**. As earlier,
    there are two options, **Import** and **Export**.![Time for action – importing,
    exporting, and synchronizing configurations](img/4659_03_18.jpg)'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次浏览到模块配置页面：`http://yourdrupal8site.com/admin/config/development/configuration`。这次我们将关注第三个选项卡
    **完整导入/导出**。与之前一样，有两个选项，**导入** 和 **导出**。![操作时间 – 导入、导出和同步配置](img/4659_03_18.jpg)
- en: Export your site configuration by clicking on the option. This will create a
    `config.tar.gz` file and prompt you to download the same on your machine.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击选项导出您的网站配置。这将创建一个 `config.tar.gz` 文件，并提示您在您的机器上下载。
- en: The next step would be to create another Drupal 8 site, if you have not created
    one already, where we will be importing the `config.tar.gz` file.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步将是创建另一个 Drupal 8 网站（如果您还没有创建的话），我们将在此网站上导入 `config.tar.gz` 文件。
- en: Browse to `http://yourstagingsite.com/admin/config/development/configuration/full/import`.
    Select `config.tar.gz` and upload it as shown in this screenshot:![Time for action
    – importing, exporting, and synchronizing configurations](img/4659_03_18a.jpg)
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 浏览到 `http://yourstagingsite.com/admin/config/development/configuration/full/import`。选择
    `config.tar.gz` 并按照此截图所示上传：![操作时间 – 导入、导出和同步配置](img/4659_03_18a.jpg)
- en: Now that we have imported our site configuration to the new site, let's check
    out the first tab, **Synchronize**, again. Visit `http://yourstagingsite.com/admin/config/development/configuration`.
    Now it should display something like this:![Time for action – importing, exporting,
    and synchronizing configurations](img/4659_03_18b.jpg)
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们已将网站配置导入到新网站，让我们再次查看第一个选项卡 **同步**。访问 `http://yourstagingsite.com/admin/config/development/configuration`。现在它应该显示如下：![操作时间
    – 导入、导出和同步配置](img/4659_03_18b.jpg)
- en: This page is basically displaying all the configuration changes. It helps us
    to verify that everything was imported as expected.
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此页面基本上显示所有配置更改。这有助于我们验证所有内容是否按预期导入。
- en: You can click on **View differences**, which will open a popup listing out the
    various configurations imported/changed. After making sure that everything is
    as expected, close the pop-up window and select **Import all**.
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可以点击 **查看差异**，这将打开一个弹出窗口，列出已导入/更改的各种配置。在确认一切如预期后，关闭弹出窗口并选择 **导入全部**。
- en: This will take a couple of minutes depending on the volume of tasks.
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将根据任务量花费几分钟时间。
- en: '![Time for action – importing, exporting, and synchronizing configurations](img/4659_03_19.jpg)'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![操作时间 – 导入、导出和同步配置](img/4659_03_19.jpg)'
- en: Once the import is complete, you should be back on the configuration page, in
    the first tab and with a success message.![Time for action – importing, exporting,
    and synchronizing configurations](img/4659_03_20.jpg)
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦导入完成，您应该回到配置页面，第一个标签页，并显示成功消息。![操作时间 – 导入、导出和同步配置](img/4659_03_20.jpg)
- en: Now, just verify that the new configuration has been implemented.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，只需验证新配置是否已实施。
- en: '*What just happened?*'
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚才发生了什么？*'
- en: You have imported the Recipe content type from your dev site to a new instance
    of the Drupal site using an easy-to-use configuration management module UI, without
    using database import or the features module.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 您已使用易于使用的配置管理模块用户界面，从您的开发站点将食谱内容类型导入到Drupal站点的全新实例中，而没有使用数据库导入或功能模块。
- en: Working of Configuration Management in Drupal 8
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Drupal 8中的配置管理工作原理
- en: As developers, let's explore how configuration management works in Drupal 8\.
    As mentioned earlier in the chapter, by default, Drupal keeps all configurations
    in the database. While installing, it creates a folder called `config_HASH` within
    `/sites/default/files`, where `HASH` is a randomly generated long string consisting
    of numbers and letters. Randomly generated HASH ensures additional protection
    for the website.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 作为开发者，让我们探索Drupal 8中配置管理是如何工作的。如本章前面所述，默认情况下，Drupal将所有配置保存在数据库中。在安装过程中，它会在`/sites/default/files`中创建一个名为`config_HASH`的文件夹，其中`HASH`是一个由数字和字母组成的随机生成的长字符串。随机生成的HASH为网站提供了额外的保护。
- en: '![Working of Configuration Management in Drupal 8](img/4659_03_21.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![Drupal 8中的配置管理工作原理](img/4659_03_21.jpg)'
- en: 'Within the `Config` folder, there are two additional folders: `active` and
    `staging`. Both are empty by default and contain only `.htaccessandREADME.txt`.'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在`Config`文件夹中，有两个额外的文件夹：`active`和`staging`。默认情况下，它们都是空的，只包含`.htaccess`和`README.txt`。
- en: Generally, Drupal 8 uses the database to store the active configuration, unless
    we change it. If we change the default behavior, the `active` folder will contain
    the configuration of the default Drupal installation.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，Drupal 8使用数据库来存储活动配置，除非我们更改它。如果我们更改默认行为，`active`文件夹将包含默认Drupal安装的配置。
- en: Another directory, `staging`, is used to store the configuration of the Drupal
    site imported from your dev environment.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个目录`staging`用于存储从您的开发环境导入的Drupal站点的配置。
- en: By default, Drupal and the associated module store the configuration under active
    storage during installation. These configurations are sets of files that maintain
    the configuration required to run your Drupal site. These configurations are stored
    in YAML format.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Drupal和相关模块在安装期间将配置存储在活动存储中。这些配置是一组文件，用于维护运行您的Drupal站点所需的配置。这些配置以YAML格式存储。
- en: If you explore the Drupal installation folder on your machine, you will find
    that there is a `config` folder under each module and profile. This folder contains
    two or more folders, `install` and `schema`.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在您的机器上探索Drupal安装文件夹，您会发现每个模块和配置文件下都有一个`config`文件夹。这个文件夹包含两个或多个文件夹，`install`和`schema`。
- en: '![Working of Configuration Management in Drupal 8](img/4659_03_22.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![Drupal 8中的配置管理工作原理](img/4659_03_22.jpg)'
- en: Both the folders contain the set of `.yml` files that hold the respective configuration
    for the module or profiles.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个文件夹都包含一组`.yml`文件，这些文件保存了模块或配置文件的相应配置。
- en: During the site installation process, values stored in these files are copied
    to the active configuration of your Drupal site. In case we are using default
    Drupal configuration storage, the values will be copied to config tables, and
    if we have selected file-based storage, these configuration values will be copied
    to respective directories in active.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在站点安装过程中，这些文件中存储的值将被复制到您的Drupal站点的活动配置中。如果我们使用默认的Drupal配置存储，这些值将被复制到配置表中，如果我们选择了基于文件的存储，这些配置值将被复制到活动目录中的相应目录。
- en: Changing the active configuration storage
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更改活动配置存储
- en: Even though it is not advisable to change the default active configuration storage
    from database to files, you can make this change in your `settings.php` file.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管不建议将默认的活动配置存储从数据库更改为文件，但您可以在`settings.php`文件中执行此更改。
- en: Tip
  id: totrans-103
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: You can make this change only before installing your Drupal site. You will not
    be able to change the configuration storage after completion of the installation
    process.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 您只能在安装您的Drupal站点之前进行此更改。安装过程完成后，您将无法更改配置存储。
- en: 'Open `settings.php` in your editor and search for active configuration settings.
    Now you just have to uncomment the line `$settings[''bootstrap_ config_storage'']`
    to enable the file-based system for active configuration. In addition to this,
    you also have to copy `default.services.yml` to `services.yml` and enable to file-based
    configuration storage:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的编辑器中打开`settings.php`并搜索活动配置设置。现在您只需取消注释行`$settings['bootstrap_config_storage']`以启用基于文件的系统用于活动配置。除此之外，您还必须将`default.services.yml`复制到`services.yml`并启用基于文件的配置存储：
- en: '[PRE0]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This will enable Drupal to change the default configuration storage setting
    from the database to a file-based system and use the `config.storage.file` as
    active storage.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 这将使Drupal能够将默认的配置存储设置从数据库更改为基于文件的系统，并使用`config.storage.file`作为活动存储。
- en: After changing the configuration storage setting, install your Drupal 8 site
    by following the same standard steps. Now let's have a look at our `active` folder
    under `sites/default/files`.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在更改配置存储设置后，按照相同的标准步骤安装您的Drupal 8站点。现在让我们看看`sites/default/files`下的`active`文件夹。
- en: '![Changing the active configuration storage](img/4659_03_23.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![更改活动配置存储](img/4659_03_23.jpg)'
- en: Now the active directory contains the site configuration of the entire site.
    These files have been copied here during the installation process. Now, whenever
    you make the change to your site configuration, changes will be made in these
    files too. You can use a version control system to track changes in your site
    actively.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 现在活动目录包含整个站点的站点配置。这些文件在安装过程中被复制到这里。现在，每次您更改站点配置时，这些文件也会进行更改。您可以使用版本控制系统来跟踪您的站点配置的更改。
- en: But changing the storage system will not change the way we export/import the
    site configuration.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 但更改存储系统不会改变我们导出/导入站点配置的方式。
- en: Note
  id: totrans-112
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Learn more about configuration management at [https://www.drupal.org/documentation/administer/config](https://www.drupal.org/documentation/administer/config).
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在[https://www.drupal.org/documentation/administer/config](https://www.drupal.org/documentation/administer/config)了解更多关于配置管理的知识。
- en: Introducing the Devel module
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍Devel模块
- en: So, in the previous section, we saw how easy it was to create a custom Views-based
    block for displaying a list of the recipes on the front page. One thing that you
    will notice right away is that there is only one recipe showing up, because so
    far we have only created one.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在前一节中，我们看到了创建一个基于视图的自定义块以在首页显示食谱列表是多么容易。您会立即注意到，只有一个食谱显示出来，因为我们到目前为止只创建了一个。
- en: You may also recall that when we created the Recipe List block with Views, we
    left the setting for items per page at the default value of 5\. Now, it would
    be nice to be able to test that setting without needing to manually create four
    more recipe items. Enter the Devel module at [http://drupal.org/project/devel](http://drupal.org/project/devel).
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能还记得，当我们使用视图创建食谱列表块时，我们保留了每页项目数量的默认值5。现在，能够测试这个设置而不需要手动创建四个更多的食谱项目会很好。进入Devel模块的[http://drupal.org/project/devel](http://drupal.org/project/devel)。
- en: The Devel module includes a number of submodules that make Drupal development
    easier; and the one we are interested in to help us out with content creation
    for development purposes is the `devel_generate` module.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: Devel模块包含一些子模块，使Drupal开发更容易；而我们感兴趣的是帮助我们在开发目的下创建内容的`devel_generate`模块。
- en: Installing the Devel module
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装Devel模块
- en: This should be an easy step. Just download the module and enable the **Extend**
    page.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该是一个简单的步骤。只需下载模块并启用**扩展**页面。
- en: '![Installing the Devel module](img/4659_03_24.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![安装Devel模块](img/4659_03_24.jpg)'
- en: Devel is installed and ready to do some magic.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: Devel已安装并准备好进行一些魔法操作。
- en: Time for action – generating dummy content using the devel_generate module
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用devel_generate模块生成虚拟内容的时间
- en: 'Now, with the `devel_generate` module enabled, we are going to generate some
    Recipe content so that we can test the number of items in our Recipe List block:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，随着`devel_generate`模块的启用，我们将生成一些食谱内容，以便我们可以测试我们的食谱列表块中的项目数量：
- en: First, click on the **Configuration** link in the admin toolbar, and then click
    on the **Generate content** link under the **Development** section.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，点击管理工具栏中的**配置**链接，然后点击**开发**部分下的**生成内容**链接。
- en: On the **Generate content** page, uncheck all the **Content type** checkboxes
    except the one for **Recipe**.![Time for action – generating dummy content using
    the devel_generate module](img/4659_03_25.jpg)
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**生成内容**页面，取消选中除了**食谱**之外的所有**内容类型**复选框。![使用devel_generate模块生成虚拟内容的行动时间](img/4659_03_25.jpg)
- en: Stick with the default values for all the rest of the settings, and click on
    the **Generate** button at the bottom of the page.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于所有其他设置，请保持默认值，并在页面底部点击**生成**按钮。
- en: Now, navigate to the home page and you will see the **Recipe List** block fully
    populated.![Time for action – generating dummy content using the devel_generate
    module](img/4659_03_26.jpg)
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，导航到主页，你会看到**食谱列表**块已经完全填充。![使用devel_generate模块生成虚拟内容的行动时间](img/4659_03_26.jpg)
- en: '*What just happened?*'
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么事？*'
- en: Although this is a very simple example of using the `devel_generate` module,
    being able to generate content can be a big time saver when testing custom code
    that requires multiple content items. We just used the `devel_generate` module
    to generate some dummy content, based on our custom Recipe content type, and now
    our **Recipe List** block on the home page is fully populated with five recipes.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这是一个使用`devel_generate`模块的非常简单的例子，但在测试需要多个内容项的自定义代码时，能够生成内容可以节省大量时间。我们只是使用了`devel_generate`模块来生成一些基于我们自定义的食谱内容类型的虚拟内容，现在主页上的**食谱列表**块已经完全填充了五个食谱。
- en: Summary
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned to create view blocks using the views module, which
    is a part of the Drupal 8 core now. We also explored newly introduced configuration
    management for better version control of our Drupal site. Now we can set up the
    development, staging, and production environments separately and add new features
    to the site incrementally. We explored how to use the Devel module to generate
    a lot of content for testing purposes.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何使用视图模块创建视图块，该模块现在是Drupal 8核心的一部分。我们还探索了为我们的Drupal站点提供更好版本控制的全新配置管理。现在我们可以分别设置开发、测试和生产环境，并逐步向站点添加新功能。我们探讨了如何使用Devel模块生成大量内容以供测试目的。
- en: In the next chapter, we are going to learn about HTML5, which is one of the
    five major initiatives outlined by Dries for Drupal 8.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习HTML5，这是Dries为Drupal 8概述的五大主要倡议之一。
