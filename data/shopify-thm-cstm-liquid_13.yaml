- en: Appendix
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 附录
- en: Frequently Asked Questions
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 常见问题解答
- en: 'Through the years of helping developers adapt to Liquid, specific situations
    and questions have arisen to which answers are not so easy to come by. We will
    now list the most frequent situations and offer some advice that will help improve
    your knowledge of both Shopify and Liquid and make your work that much easier:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 经过多年的帮助开发者适应Liquid，出现了许多特定的情况和问题，对于这些问题的答案并不容易找到。现在我们将列出最常见的情况，并提供一些建议，这些建议将有助于提高你对Shopify和Liquid的了解，并使你的工作变得更加容易：
- en: '*Is it possible to find the location of some particular code inside the code
    editor without manually searching every template, section, or snippet?*'
  id: totrans-3
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*是否可以在代码编辑器中找到特定代码的位置，而无需手动搜索每个模板、部分或代码片段？*'
- en: One of the biggest problems that the developers have when starting to work with
    **Shopify** is that they have trouble finding a specific piece of code across
    different templates, sections, and snippets. While after some time, we do get
    used to finding things more efficiently, it can be pretty troublesome at the start.
  id: totrans-4
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 开发者在开始使用**Shopify**时遇到的最大问题之一是，他们很难在不同的模板、部分和代码片段中找到特定的代码片段。虽然经过一段时间，我们确实会习惯于更有效地查找东西，但一开始可能会相当麻烦。
- en: To help us with this, we can use a nifty little **Chrome** addon called **Shopify
    Theme Search by Bold**. This little addon provides us with a search input inside
    the code editor to type in any string that we are looking for. After a few seconds,
    it will highlight every directory and file that contains any occurrence of the
    searched string. You can read more about it at [https://chrome.google.com/webstore/detail/shopify-theme-search-by-b/epbnmkionkpliaiogpemfkclmcnbdfle](https://chrome.google.com/webstore/detail/shopify-theme-search-by-b/epbnmkionkpliaiogpemfkclmcnbdfle).
  id: totrans-5
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为了帮助我们解决这个问题，我们可以使用一个叫做**Shopify Theme Search by Bold**的**Chrome**插件。这个小插件在代码编辑器内提供了一个搜索输入框，我们可以输入任何想要查找的字符串。几秒钟后，它会高亮显示包含搜索字符串的每一个目录和文件。你可以在[https://chrome.google.com/webstore/detail/shopify-theme-search-by-b/epbnmkionkpliaiogpemfkclmcnbdfle](https://chrome.google.com/webstore/detail/shopify-theme-search-by-b/epbnmkionkpliaiogpemfkclmcnbdfle)了解更多信息。
- en: '*No matter how many new duplicate themes we create, for some reason, the duplicate
    theme does not have any of the previous customizations saved.* *What should we
    do in this case?*'
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*无论我们创建多少新的副本主题，出于某种原因，副本主题都没有保存任何之前所做的自定义设置。* *在这种情况下我们应该怎么办呢？*'
- en: The second most problematic issue happens during the theme duplication process.
    After creating a theme duplicate, we may notice that the duplicate theme has reset
    entirely. It does not contain any of the customizations that we had previously
    set inside the theme editor.
  id: totrans-7
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 第二个最棘手的问题发生在主题复制过程中。在创建主题副本后，我们可能会注意到副本主题已经完全重置。它不包含我们在主题编辑器中之前设置的任何自定义设置。
- en: The problem lies inside the `settings_data.json` file, which, if we open it,
    we will see is empty, and in some instances, the file might be missing altogether.
    The reason for this occurrence is apparent – Shopify did not copy the file's content
    correctly – but the question is *why?* If we were to navigate to the theme from
    which we initially created a duplicate, open the `settings_data.json` file, and
    try to copy its content to the new duplicate theme, we would not be able to save
    the file due to an error inside the JSON file. If we try to save the copied content
    to a new file, Shopify will not allow it and instead provide us with an error
    code of the problematic value.
  id: totrans-8
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 问题出在`settings_data.json`文件中，如果我们打开它，我们会看到它是空的，在某些情况下，文件可能完全缺失。这种发生的原因很明显——Shopify没有正确地复制文件内容——但问题是**为什么**？如果我们导航到最初创建副本的主题，打开`settings_data.json`文件，并尝试将其内容复制到新的副本主题中，由于JSON文件中的错误，我们无法保存文件。如果我们尝试将复制的内容保存到新文件中，Shopify将不允许这样做，并给我们提供一个错误代码，指示有问题的值。
- en: To resolve this, we will need to manually search for every value that we received
    inside the error and update it accordingly. Possible issues could be that we have
    entirely deleted a particular section block without first removing the block from
    inside the theme editor. Shopify will keep trying to load the block. However,
    since we have deleted it, it will not be able to, and it will break the JSON file.
    The second most frequent issue comes up when using the `range` input type, where
    the current value of the input exceeds the range between the min and max values.
    Only after resolving all of these issues will we be able to save the file correctly.
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为了解决这个问题，我们需要手动搜索错误中收到的每个值，并相应地更新它。可能出现的问题包括，我们在删除特定部分块之前没有从主题编辑器内部删除该块，就完全删除了该部分。Shopify会继续尝试加载该块。然而，由于我们已经删除了它，它将无法加载，并会破坏JSON文件。第二个最常见的问题是使用`range`输入类型时，输入的当前值超过了最小值和最大值之间的范围。只有在解决所有这些问题之后，我们才能正确保存文件。
- en: '*Is it possible to recover a deleted theme?*'
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*是否可以恢复已删除的主题？*'
- en: Each store allows us to keep up to 20 duplicate themes as a backup and up to
    50 duplicate themes on the **Shopify Plus** plan. If we delete a theme file for
    any reason and do not have a backup file saved on GitHub or somewhere locally,
    the file will be permanently lost, and we will not be able to recover it in any
    way.
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 每个商店允许我们保留最多20个重复的主题作为备份，在**Shopify Plus**计划中最多可以保留50个重复的主题。如果我们因任何原因删除主题文件，并且没有在GitHub或本地保存备份文件，该文件将永久丢失，我们将无法以任何方式恢复它。
- en: '*How can we find which app is being used by a particular store?*'
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*我们如何找到特定商店正在使用的应用程序？*'
- en: 'While it is not possible to see every type of app that a store is using, we
    can retrieve the names of most of the apps by using the **Shopify App Detector
    by Fera.ai** or **Koala Inspector - Inspect Shopify Shops** Chrome addons. You
    can find more info on Shopify App Detector by Fera.ai using the following link:
    [https://chrome.google.com/webstore/detail/shopify-app-detector-by-f/lhfdhjladfcmghahdbcmlceajdlbkale](https://chrome.google.com/webstore/detail/shopify-app-detector-by-f/lhfdhjladfcmghahdbcmlceajdlbkale).'
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 虽然我们无法看到商店使用的每种应用程序，但我们可以通过使用**Fera.ai的Shopify App Detector**或**Koala Inspector
    - 检查Shopify商店**Chrome插件来检索大多数应用程序的名称。您可以通过以下链接获取有关Fera.ai Shopify App Detector的更多信息：[https://chrome.google.com/webstore/detail/shopify-app-detector-by-f/lhfdhjladfcmghahdbcmlceajdlbkale](https://chrome.google.com/webstore/detail/shopify-app-detector-by-f/lhfdhjladfcmghahdbcmlceajdlbkale).
- en: 'You can find more info on Koala Inspector - Inspect Shopify Shops using the
    following link: [https://chrome.google.com/webstore/detail/koala-inspector-inspect-s/hjbfbllnfhppnhjdhhbmjabikmkfekgf](https://chrome.google.com/webstore/detail/koala-inspector-inspect-s/hjbfbllnfhppnhjdhhbmjabikmkfekgf).'
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可以通过以下链接获取有关Koala Inspector - 检查Shopify商店的更多信息：[https://chrome.google.com/webstore/detail/koala-inspector-inspect-s/hjbfbllnfhppnhjdhhbmjabikmkfekgf](https://chrome.google.com/webstore/detail/koala-inspector-inspect-s/hjbfbllnfhppnhjdhhbmjabikmkfekgf).
- en: '*How can we easily identify the Liquid code that is slowing down the store?*'
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*我们如何轻松识别导致商店变慢的Liquid代码？*'
- en: 'To help us with this, Shopify has introduced an addon named **Shopify Theme
    Inspector for Chrome**, which we can use to retrieve a detailed analysis render
    profiling and help us narrow down which files are causing the most significant
    delay. We can find more info on Shopify Theme Inspector for Chrome using the following
    link: [https://chrome.google.com/webstore/detail/shopify-theme-inspector-f/fndnankcflemoafdeboboehphmiijkgp](https://chrome.google.com/webstore/detail/shopify-theme-inspector-f/fndnankcflemoafdeboboehphmiijkgp).'
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为了帮助我们，Shopify推出了一款名为**Shopify Theme Inspector for Chrome**的插件，我们可以使用它来获取详细的分析渲染配置文件，并帮助我们缩小导致最大延迟的文件。您可以通过以下链接获取有关Shopify
    Theme Inspector for Chrome的更多信息：[https://chrome.google.com/webstore/detail/shopify-theme-inspector-f/fndnankcflemoafdeboboehphmiijkgp](https://chrome.google.com/webstore/detail/shopify-theme-inspector-f/fndnankcflemoafdeboboehphmiijkgp).
- en: '*When we try to send a collaborator account request to the client using the
    Shopify partners platform, for some reason, we keep getting the message that the
    store URL is not associated to a shop.* *How can we resolve this?*'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*当我们尝试使用Shopify合作伙伴平台向客户发送协作账户请求时，由于某种原因，我们始终收到消息说商店URL未与商店关联。* *我们该如何解决这个问题？*'
- en: The reason for this is that in most cases, store owners have set up a custom
    domain whose URL is quite different than the [myshopify.com](http://myshopify.com)
    URL that we require to send them a collaborator account request, so replacing
    the `.com` with `.myshopify.com` will not resolve our problem. We can easily resolve
    this by simply navigating to the URL they have provided us by opening the inspector
    and typing `Shopify` inside the console, which will prompt a set of various information
    about the store. Among that, we will find a correct [myshopify.com](http://myshopify.com)
    URL. Note that the `Shopify` keyword is case-sensitive.
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 原因在于，在大多数情况下，店主已经设置了一个自定义域名，其 URL 与我们要求发送协作账户请求的 [myshopify.com](http://myshopify.com)
    URL 相差甚远，所以将 `.com` 替换为 `.myshopify.com` 并不能解决我们的问题。我们可以通过简单地导航到他们提供给我们的 URL，打开检查器并在控制台中输入
    `Shopify` 来轻松解决这个问题，这将提示一系列关于商店的各种信息。其中，我们将找到一个正确的 [myshopify.com](http://myshopify.com)
    URL。请注意，`Shopify` 关键字是区分大小写的。
- en: '*Does the Shopify code editor have a dark mode?*'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*Shopify 代码编辑器有暗黑模式吗？*'
- en: The answer is yes! But it is pretty hidden. In order to reveal it, navigate
    to the code editor and click on the button to expand the editor screen. We can
    find it in the top-right corner of the editor screen. Once we have expanded the
    editor screen, we will notice that we now have two scroll bars on our right. If
    we scroll down to the bottom of the page, we will find the **White** and **Black**
    buttons allowing us to change the color mode of the editor. However, note that
    the editor will revert to its default color when we close the expanded editor
    view.
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 答案是肯定的！但它相当隐蔽。为了揭示它，导航到代码编辑器并点击按钮以展开编辑器屏幕。我们可以在编辑器屏幕的右上角找到它。一旦我们展开了编辑器屏幕，我们会注意到现在我们的右侧有两个滚动条。如果我们滚动到页面底部，我们会找到允许我们更改编辑器颜色模式的
    **白色** 和 **黑色** 按钮。然而，请注意，当我们关闭展开的编辑器视图时，编辑器将恢复到默认颜色。
- en: '*Is there a way to automatically format the code inside the Liquid files?*'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*有没有一种方法可以自动格式化 Liquid 文件中的代码呢？*'
- en: '*The answer is yes!* We can highlight the entire Liquid file inside the code
    editor using the *CTRL + A* and then press *Shift + Tab*, automatically formatting
    the entire file accordingly. However, while auto-formatting will be helpful with
    most files, note that automatic formatting does not work on the `section` schema
    tag and its content.'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*答案是肯定的!* 我们可以使用 *CTRL + A* 在代码编辑器中突出显示整个 Liquid 文件，然后按 *Shift + Tab*，自动根据整个文件进行格式化。然而，虽然自动格式化对大多数文件都有帮助，但请注意，自动格式化在
    `section` 架构标签及其内容上不适用。'
