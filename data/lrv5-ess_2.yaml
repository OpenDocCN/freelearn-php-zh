- en: Chapter 2. Setting Up a Development Environment
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二章. 设置开发环境
- en: 'Laravel is more than just a framework: a whole ecosystem and toolset has been
    developed around it to make building PHP applications faster and more enjoyable.
    These tools are entirely opt-in and the knowledge of them is not necessary to
    use and build projects in Laravel, but they do go hand-in-hand with the framework,
    so it''s worth covering.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Laravel不仅仅是一个框架：围绕它已经开发了一个完整的生态系统和工具集，以使构建PHP应用程序更快、更愉快。这些工具完全是可选的，并且了解它们并不是在Laravel中使用和构建项目所必需的，但它们与框架紧密相关，因此值得介绍。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Meeting Composer, a dependency manager
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 认识Composer，一个依赖管理器
- en: Introduction to Homestead, and using it to manage Laravel projects
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Homestead简介，以及如何使用它来管理Laravel项目
- en: Meeting Composer
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 认识Composer
- en: In the previous chapter, you discovered that Laravel is built on top of several
    third-party packages. Rather than including these external dependencies in its
    own source code, Laravel uses a dependency manager called **Composer** to download
    them and keep them up to date. Since Laravel is made up of multiple packages,
    they too are downloaded and installed each time you create a new Laravel project.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，你发现Laravel建立在几个第三方包之上。Laravel不是将其外部依赖包含在其自己的源代码中，而是使用名为**Composer**的依赖管理器来下载它们并保持它们更新。由于Laravel由多个包组成，因此每次你创建一个新的Laravel项目时，它们也会被下载和安装。
- en: Strongly inspired by popular dependency managers in other languages, such as
    Ruby's Bundler or Node.js's **Node Package Manager** (**npm**), Composer brings
    these features to PHP and has quickly become the de facto dependency manager in
    PHP.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 强烈受到其他语言中流行的依赖管理器的启发，如Ruby的Bundler或Node.js的**Node包管理器**（**npm**），Composer将这些功能带到了PHP，并迅速成为PHP事实上的依赖管理器。
- en: A few years ago, you may have used **PHP Extension and Application Repository**
    (**PEAR**) to download libraries. PEAR differs from Composer, in that PEAR would
    install packages on a system-level basis, whereas a dependency manager, such as
    Composer, installs them on a project-level basis. With PEAR, you could only have
    one version of a package installed on a system. Composer allows you to use different
    versions of the same package in different applications, even if they reside on
    the same system.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 几年前，你可能使用过**PHP扩展和应用仓库**（**PEAR**）来下载库。PEAR与Composer不同，因为PEAR会在系统级别上安装包，而依赖管理器，如Composer，则是在项目级别上安装它们。使用PEAR，你只能在系统上安装一个版本的包。Composer允许你在不同的应用程序中使用同一包的不同版本，即使它们位于同一系统上。
- en: Working with the command line
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用命令行
- en: If you are just getting started with web development, you might not be completely
    familiar with the **command-line interface** (**CLI**). Working with Composer,
    virtual machines, and Homestead, and later on with **Artisan**, Laravel's CLI
    utility, will require some interaction with it.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你刚开始接触Web开发，你可能并不完全熟悉**命令行界面**（**CLI**）。在使用Composer、虚拟机、Homestead以及之后的Artisan、Laravel的CLI工具时，将需要与之进行一些交互。
- en: 'Here is how you can start with CLI:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是如何开始使用CLI的步骤：
- en: On Windows, look for the **Command Prompt** program. If you cannot find it,
    just navigate to **Start** | **Run** and type in `cmd.exe`.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Windows上，寻找**命令提示符**程序。如果你找不到它，只需导航到**开始** | **运行**，并输入`cmd.exe`。
- en: On Mac OS X, CLI is called **Terminal**, and it can be found at `/Applications/Utilities`.
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Mac OS X上，CLI被称为**终端**，它可以在`/Applications/Utilities`中找到。
- en: On Linux, depending on your distribution of Linux, it will be called **Terminal**
    or **Konsole**, but if you are running Linux, you are probably already familiar
    with it.
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Linux上，根据你的Linux发行版，它可能被称为**终端**或**Konsole**，但如果你正在运行Linux，你很可能已经熟悉它了。
- en: You do not need to have any advanced command-line skills to get through this
    book and build applications with Laravel. You will, however, need to be able to
    navigate to the right directory in your file system before running commands. To
    do this, just enter the `cd` command, followed by the path to your code directory.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 你不需要任何高级命令行技能就能通过这本书并使用Laravel构建应用程序。然而，你将需要能够在运行命令之前在文件系统中导航到正确的目录。为此，只需输入`cd`命令，然后跟随你的代码目录路径。
- en: Note
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'On most systems, you can also just enter `cd`, followed by a space, and then
    drag and drop the directory into the terminal, as shown here:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数系统上，你还可以直接输入`cd`，然后跟一个空格，并将目录拖放到终端中，如图所示：
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Otherwise, you can run the following command line on Windows:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 否则，你可以在Windows上运行以下命令行：
- en: '`> cd C:\path\to\your\code\directory`'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '`> cd C:\path\to\your\code\directory`'
- en: 'If the path contains spaces, then be sure to include it in double quotes to
    ensure spaces are escaped:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果路径包含空格，请确保将其包含在双引号中，以确保空格被转义：
- en: '`> cd "C:\path\to\your\Laravel Projects"`'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '`> cd "C:\path\to\your\Laravel Projects"`'
- en: In the rest of this book, unless the example is specific to Windows, we will
    always use the `$` character to denote a shell command and use slashes as directory
    separators. Make sure you adapt the command accordingly, if you are running Windows.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的其余部分，除非示例专门针对Windows，否则我们将始终使用`$`字符表示shell命令，并使用斜杠作为目录分隔符。如果你正在运行Windows，请确保相应地调整命令。
- en: Meet Homestead
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 认识Homestead
- en: If you wanted to develop PHP applications on your personal computer, you needed
    to have a web server installed and running locally. PHP is installed to interpret
    your scripts, and other utilities your website may need, such as working with
    a database. Your website or web application may even have a requirement for other
    services such as **Memcached** or **Redis**, which are popular caching systems.
    This saw the rise of utilities such as **WampServer** and **MAMP** to create environments
    for developing dynamic websites without getting connected to the Internet, but
    these required configuring.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想在你的个人电脑上开发PHP应用程序，你需要安装并运行一个本地网络服务器。PHP被安装来解释你的脚本，以及你的网站可能需要的其他工具，例如与数据库交互。你的网站或网络应用甚至可能需要其他服务，如**Memcached**或**Redis**，这些是流行的缓存系统。这导致了像**WampServer**和**MAMP**这样的工具的兴起，它们可以创建开发动态网站的环境，而不需要连接到互联网，但这些工具需要配置。
- en: Building on from installed environments like these, the recommended practice
    for developing dynamic websites and applications is to use **virtual machines**
    (**VMs**). These allow you to emulate your production web server's setup on your
    local machine. You can also use differently configured VMs for different projects—with
    a WAMP- or MAMP-like setup, every project had to use the same version of PHP,
    MySQL, and anything else you installed.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些已安装的环境中构建，开发动态网站和应用程序的推荐做法是使用**虚拟机（VMs**）。这允许你在本地机器上模拟你的生产网络服务器的设置。你也可以为不同的项目使用不同配置的虚拟机——使用类似WAMP或MAMP的设置，每个项目都必须使用相同版本的PHP、MySQL以及其他你安装的任何东西。
- en: The creators of Laravel have created an official Vagrant box called **Homestead**.
    **Vagrant** is software that allows you to create virtual development environments
    on your personal computer. You can install Homestead and start creating Laravel
    projects right away. And if you don't need it any more, you can just remove it
    from your machine, without anything else being affected. Best of all, if you are
    currently using a globally installed development environment such as WAMP or MAMP,
    Homestead won't conflict with it.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Laravel的创建者创建了一个名为**Homestead**的官方Vagrant箱。**Vagrant**是一种软件，它允许你在个人电脑上创建虚拟开发环境。你可以安装Homestead并立即开始创建Laravel项目。而且，如果你不再需要它，你只需从你的机器上移除它，而不会影响其他任何东西。最好的是，如果你目前正在使用全局安装的开发环境，如WAMP或MAMP，Homestead不会与之冲突。
- en: Installing Homestead
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装Homestead
- en: 'Homestead is a Vagrant-based VM. Therefore, before using it you will need to
    install two utilities:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: Homestead是一个基于Vagrant的虚拟机。因此，在使用它之前，你需要安装两个工具：
- en: '**VirtualBox** ([https://www.virtualbox.org/wiki/Downloads](https://www.virtualbox.org/wiki/Downloads))'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**VirtualBox** ([https://www.virtualbox.org/wiki/Downloads](https://www.virtualbox.org/wiki/Downloads))'
- en: '**Vagrant** ([http://www.vagrantup.com/downloads.html](http://www.vagrantup.com/downloads.html))'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Vagrant** ([http://www.vagrantup.com/downloads.html](http://www.vagrantup.com/downloads.html))'
- en: 'Both have installers for Windows, Mac OS X, and Linux that will guide you through
    the installation process. To install Homestead, follow these steps:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 它们都有Windows、Mac OS X和Linux的安装程序，将引导你完成安装过程。要安装Homestead，请按照以下步骤操作：
- en: 'One of the best things about Homestead is that it is hosted on Packagist. This
    means you can install it via Composer by using the following command:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Homestead最好的事情之一是它托管在Packagist上。这意味着你可以通过使用以下命令通过Composer安装它：
- en: '[PRE1]'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Once downloaded, you need to initialize the VM using the following command
    (you may need to add Homestead to your path first, if you are using Windows):'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载完成后，你需要使用以下命令初始化虚拟机（如果你正在使用Windows，可能需要首先将Homestead添加到你的路径中）：
- en: '[PRE2]'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This will create a configuration file that you can edit to point to your projects,
    as well as create any databases you may need. To edit this file, you can run the
    following command:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将创建一个配置文件，你可以编辑它来指向你的项目，以及创建你可能需要的任何数据库。要编辑此文件，你可以运行以下命令：
- en: '[PRE3]'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The file will open in your default text editor. When it does, you will see
    the file is organized into sections. To get up and running, the two sections of
    most importance are the `folders` section and the `sites` section:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 文件将在您的默认文本编辑器中打开。当它打开时，您会看到文件组织成几个部分。为了启动运行，最重要的两个部分是 `folders` 部分和 `sites`
    部分：
- en: '`folders`: This specifies the directory that you want to be shared on the VM.'
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`folders`：这指定了您希望在虚拟机上共享的目录。'
- en: '`sites`: This allows you to map a domain to a folder on the Homestead VM, similar
    to Apache Virtual Hosts.'
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sites`：这允许您将域名映射到 Homestead VM 上的文件夹，类似于 Apache 虚拟主机。'
- en: '![Installing Homestead](img/B04308_02_01.jpg)'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![安装 Homestead](img/B04308_02_01.jpg)'
- en: 'Once you have configured your shared folders and sites, you can boot the VM
    with the following command:'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您已配置共享文件夹和网站，您可以使用以下命令启动虚拟机：
- en: '[PRE4]'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Finally, you need to add the VM's IP address to your computer's hosts file.
    The location of this file differs, depending on the platform you're using.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，您需要将虚拟机的 IP 地址添加到您计算机的 hosts 文件中。此文件的位置取决于您使用的平台。
- en: On Windows, it is located at `C:\Windows\System32\Drivers\etc\hosts`.
  id: totrans-46
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Windows 上，它位于 `C:\Windows\System32\Drivers\etc\hosts`。
- en: On a *nix system (such as Mac OS X and Linux), it can be found at `/etc/hosts`.
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 *nix 系统（如 Mac OS X 和 Linux）中，它位于 `/etc/hosts`。
- en: 'Usually, you would need to be an administrator to edit this file. On Mac OS
    X and Linux, you can open the file with elevated permissions by using the following
    command:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通常，您需要是管理员才能编辑此文件。在 Mac OS X 和 Linux 上，您可以使用以下命令以提升权限打开文件：
- en: '[PRE5]'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'You might be prompted for an administrator''s password. In your hosts file,
    add the following line to the bottom:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可能会被提示输入管理员密码。在您的 hosts 文件中，将以下行添加到末尾：
- en: '[PRE6]'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![Installing Homestead](img/B04308_02_02.jpg)'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![安装 Homestead](img/B04308_02_02.jpg)'
- en: Now, if in a web browser you try to visit `http://homestead.app`, instead of
    your browser trying to find a website with the domain, it will try to find the
    website on the machine with the specified IP address. In this instance, the IP
    address will belong to your Homestead VM and serve the site you've configured
    for that domain in your configuration file.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，如果在网页浏览器中尝试访问 `http://homestead.app`，浏览器将尝试在指定 IP 地址的机器上找到网站，而不是尝试找到具有该域名的网站。在这种情况下，IP
    地址将属于您的 Homestead VM，并为您配置文件中为该域名配置的网站提供服务。
- en: Note
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For more information on Homestead and advanced configuration, you can view the
    official documentation at [http://laravel.com/docs/master/homestead](http://laravel.com/docs/master/homestead).
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 Homestead 和高级配置的更多信息，您可以在 [http://laravel.com/docs/master/homestead](http://laravel.com/docs/master/homestead)
    查看官方文档。
- en: Everyday usage of Homestead
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Homestead 的日常使用
- en: There are various commands that you can use to interact with your Homestead
    virtual machine. For example, if the virtual machine is running, how do you stop
    it? There are two ways.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用各种命令与您的 Homestead 虚拟机交互。例如，如果虚拟机正在运行，您如何停止它？有两种方法。
- en: The first method is with the `$ homestead suspend` command. This will save the
    current state of your VM, and allow you to `$ homestead resume` at a later point
    in time. Alternatively, you can issue the `$ homestead halt` command, which will
    shut down the virtual machine and discard anything in memory. You can think of
    the differences as either putting the virtual machine to sleep, or completely
    shutting it down. To bring a halted VM back, you can simply run the `$ homestead
    up` command again.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 第一种方法是使用 `$ homestead suspend` 命令。这将保存您虚拟机的当前状态，并允许您在稍后的时间点使用 `$ homestead resume`
    命令恢复。或者，您也可以使用 `$ homestead halt` 命令，这将关闭虚拟机并丢弃内存中的所有内容。您可以将这些差异视为将虚拟机置于休眠状态或完全关闭。要恢复已停止的虚拟机，您可以再次运行
    `$ homestead up` 命令。
- en: You can also interact and run commands on the virtual machine via the command
    line. You can SSH into Homestead just like you would an external server. Instead
    of having to remember the virtual machine's host name and your credentials though,
    there's a handy `$ homestead ssh` command that will connect to the machine and
    then place you in a command prompt ready and waiting. If you are using Windows,
    there are various tools to execute SSH commands, such as **PuTTY**.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以通过命令行与虚拟机交互并运行命令。您可以通过 SSH 连接到 Homestead，就像连接外部服务器一样。不过，您不需要记住虚拟机的主机名和凭证，因为有一个方便的
    `$ homestead ssh` 命令可以连接到机器，并将您置于一个准备就绪的命令提示符中。如果您使用 Windows，有各种工具可以执行 SSH 命令，例如
    **PuTTY**。
- en: Adding additional websites
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加额外的网站
- en: One of Homestead's benefits is that you can host more than one application on
    it. This means you can run as many Laravel applications on it as you want (subject
    to constraints such as disk space). The process for each site is to map the directory
    between your host machine and the virtual machine, and to configure nginx to look
    in this directory when a specific domain name is requested. To do this by hand
    would mean editing various configuration files, which would become tedious if
    we needed to do this on a regular basis. Thankfully, Homestead comes with a handy
    script to make adding new sites a breeze.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: Homestead 的一个好处是您可以在其上托管多个应用程序。这意味着您可以在其上运行任意数量的 Laravel 应用程序（受限于磁盘空间等约束）。为每个站点设置的过程是在主机机器和虚拟机之间映射目录，并配置
    nginx 在请求特定域名时查看此目录。手动完成此操作意味着需要编辑各种配置文件，如果我们需要定期这样做，这会变得很繁琐。幸运的是，Homestead 提供了一个方便的脚本，可以轻松添加新站点。
- en: 'You first need to start a new SSH session as mentioned before. Then, run the
    following script:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 您首先需要启动一个新的 SSH 会话，如之前所述。然后，运行以下脚本：
- en: '[PRE7]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Replace `example.app` with the host name you want to use. Then, add a new line
    to your hosts file and you are good to go!
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `example.app` 替换为您想要使用的域名。然后，在您的 hosts 文件中添加一行新内容，您就可以开始了！
- en: Connecting to your databases
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 连接到您的数据库
- en: 'Homestead runs a MySQL instance, which contains the data for all of your configured
    applications. Laravel exposes the port of the MySQL server via port forwarding,
    which means you can connect to it from your host machine by using a database management
    tool such as **Navicat**, **Sequel Pro**, or **MySQL Workbench**. To connect,
    all you have to do is specify the following parameters:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: Homestead 运行一个 MySQL 实例，其中包含您配置的所有应用程序的数据。Laravel 通过端口转发公开 MySQL 服务器的端口，这意味着您可以使用数据库管理工具（如
    **Navicat**、**Sequel Pro** 或 **MySQL Workbench**）从您的主机机器连接到它。要连接，您只需指定以下参数：
- en: '**Host**: 127.0.0.1'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主机**：127.0.0.1'
- en: '**Port**: 33060'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**端口**：33060'
- en: '**Username**: homestead'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户名**：homestead'
- en: '**Password**: secret'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**密码**：secret'
- en: Once connected, you can then browse all of the databases on the Homestead virtual
    machine, tables, and data, just as you would if the MySQL server was installed
    on your machine.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 连接后，您就可以浏览 Homestead 虚拟机上的所有数据库、表和数据，就像 MySQL 服务器安装在本机上一样。
- en: Homestead also ships with a **PostgreSQL** database server. Connecting is the
    same as with the MySQL database server, but you instead use port `54320`.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: Homestead 还附带了一个 **PostgreSQL** 数据库服务器。连接方式与 MySQL 数据库服务器相同，但您需要使用端口 `54320`。
- en: Creating a new Laravel application
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个新的 Laravel 应用程序
- en: With Homestead set up, you now have a development environment to build Laravel
    applications that can easily be removed at a later date without disturbing your
    machine. You must be itching to get started with Laravel, so here we go!
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在设置好 Homestead 之后，您现在拥有了一个开发环境，可以构建 Laravel 应用程序，稍后可以轻松移除，而不会干扰您的机器。您一定迫不及待地想要开始使用
    Laravel，那么，我们开始吧！
- en: 'In the next chapter, we will go through building a simple application in Laravel
    from start to finish. So now, we will prepare this project in Homestead:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将从头到尾构建一个简单的 Laravel 应用程序。因此，现在，我们将在 Homestead 中准备这个项目：
- en: 'First, check whether Homestead is running by using the following command:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，使用以下命令检查 Homestead 是否正在运行：
- en: '[PRE8]'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: If the status is anything other than running, bring it up with the `homestead
    reload` command. We now need to add our site. It will be a browsable database
    of cat profiles, so let's call it "Furbook" and give it the fictional domain name
    of `furbook.com`.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果状态不是正在运行，请使用 `homestead reload` 命令将其启动。我们现在需要添加我们的站点。它将是一个可浏览的猫的资料数据库，让我们称它为
    "Furbook"，并给它一个虚构的域名 `furbook.com`。
- en: 'We can set this up in Homestead by editing the configuration file and adding
    the following mappings:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以通过编辑配置文件并添加以下映射来在 Homestead 中设置此环境：
- en: '[PRE9]'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Run `$ homestead reload`, which should reprovision the sites and also create
    a new, empty database.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行 `$ homestead reload`，这将重新配置站点并创建一个新的、空的数据库。
- en: 'Now with our workspace prepared, we need to actually create a new Laravel project.
    To do this, we need to SSH into our running VM. Homestead makes this incredibly
    simple:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们已经准备好了工作空间，我们需要实际创建一个新的 Laravel 项目。为此，我们需要 SSH 进入我们的运行中的 VM。Homestead 使这一过程变得非常简单：
- en: '[PRE10]'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'This will create a new SSH session and log us in to the running Homestead VM
    instance. We can now run a Composer command to create a brand new Laravel project
    as follows:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将创建一个新的 SSH 会话，并将我们登录到正在运行的 Homestead VM 实例。现在，我们可以运行一个 Composer 命令来创建一个新的
    Laravel 项目，如下所示：
- en: '[PRE11]'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: This will create a new Laravel skeleton project, as well as download all of
    the libraries that make up the Laravel framework.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 这将创建一个新的Laravel骨架项目，并下载构成Laravel框架的所有库。
- en: Summary
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: 'In this chapter, we have begun working with the command line. We''ve installed
    Composer and looked at how a dependency manager such as Composer aids development
    by utilizing prebuilt packages in our projects (of which the Laravel framework
    is one). We''ve looked at the concept of virtual machines for developing in, and
    taken a look and installed the official Laravel VM: Homestead.'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们开始使用命令行。我们安装了Composer，并了解了依赖管理器如Composer如何通过在我们的项目中使用预构建的包来帮助开发（其中Laravel框架就是一个例子）。我们探讨了用于开发的虚拟机概念，并查看并安装了官方的Laravel
    VM：Homestead。
- en: The next chapter is where the fun begins! Now that we have a complete development
    environment set up and a fresh Laravel application created, we will go through
    the different steps involved in creating a complete Laravel application.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章将开始有趣的部分！现在我们已经设置了一个完整的发展环境和创建了一个新的Laravel应用程序，我们将逐步了解创建一个完整的Laravel应用程序所涉及的不同步骤。
