- en: Enabling Plugin Internationalization
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启用插件国际化
- en: 'In this chapter, you will learn about plugin localization through the following
    topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将通过以下主题了解插件本地化：
- en: Changing the WordPress language configuration
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修改WordPress语言配置
- en: Adapting default user settings for translation
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 适配默认用户设置以进行翻译
- en: Making admin page code ready for translation
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使管理页面代码准备好翻译
- en: Modifying shortcode output for translation
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修改短代码输出以进行翻译
- en: Translating text strings using Poedit
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Poedit翻译文本字符串
- en: Loading a language file in the plugin initialization
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在插件初始化中加载语言文件
- en: Introduction
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: WordPress is a worldwide phenomenon, with users embracing the platform all around
    the globe. To create a more specific experience for users in different locales,
    WordPress offers the ability to translate all of its user- and visitor-facing
    content, resulting in numerous localizations becoming available for download online.
    Like most other functionalities in the platform, internationalization is also
    available to plugin developers through a set of easy-to-use functions--the main
    difference being that plugin translations are typically included with the extension,
    instead of being downloaded separately as is the case with WordPress.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: WordPress是一个全球现象，用户遍布全球。为了为不同地区的用户提供更具体的使用体验，WordPress提供了翻译所有面向用户和访客内容的能力，从而使得众多本地化版本可供在线下载。像平台上的大多数其他功能一样，国际化也通过一系列易于使用的函数提供给插件开发者——主要区别在于，插件翻译通常包含在扩展中，而不是像WordPress那样单独下载。
- en: To prepare their plugin to be localized, developers must use special internationalization
    functions when dealing with text elements. Once this structure is in place, any
    users can create localizations by themselves for languages that they know and
    submit them back to the plugin author for inclusion in a future update to the
    extension. WordPress.org also offers an online interface for users to be able
    to contribute translations without requiring to use offline tools.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使他们的插件能够本地化，开发者在处理文本元素时必须使用特殊的国际化函数。一旦这种结构建立，任何用户都可以为自己所知的语言创建本地化版本，并将它们提交给插件作者，以便在未来的扩展更新中包含在内。WordPress.org还提供了一个在线界面，让用户能够在不使用离线工具的情况下贡献翻译。
- en: This chapter explains how to prepare a plugin to be translated and shows how
    to use the Poedit tool to create a new language file for a simple plugin.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本章解释了如何准备插件以进行翻译，并展示了如何使用Poedit工具为简单插件创建新的语言文件。
- en: Changing the WordPress language configuration
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 修改WordPress语言配置
- en: The first step to translate a plugin is to configure WordPress to a different
    language setting other than English. This will automatically trigger mechanisms
    in the platform to look for alternate language content for any internationalized
    string.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 翻译插件的第一步是将WordPress配置为非英语的语言设置。这将自动触发平台中的机制，以寻找任何国际化字符串的替代语言内容。
- en: In this recipe, we will set the site to French.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将设置网站为法语。
- en: Getting ready
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: You should have access to a WordPress development environment.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该能够访问WordPress开发环境。
- en: How to do it...
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Open your site Dashboard and navigate to the General section of the Settings
    menu.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开您的网站仪表板，并导航到设置菜单的常规部分。
- en: Set the Site Language to Franais du Canada and click on Save Changes.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将网站语言设置为加拿大法语并点击保存更改。
- en: How it works...
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The Site Language configuration option of WordPress allows you to select the
    language that will be seen by visitors when they go to your website. As can be
    seen in the drop-down list of languages, WordPress has a single language installed
    by default, shown at the top of the list. The remainder of the list indicates
    languages that can be added to your website. When you set a new language, translation
    files are automatically downloaded for the selected language and the new selection
    becomes the default for visitors. If you look inside the `wp-content/languages`
    directory of your WordPress installation, you will see that a number of files
    with `.po` and `.mo` extensions were downloaded for the selected language. Portable
    object (`.po`) files are ASCII text files that contain a list of all the original
    English text from the WordPress source code, while machine object (`.mo`) files
    are binary versions of the translation table that have been compiled to be efficiently
    loaded by PHP as a website is rendered.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: WordPress的“站点语言”配置选项允许您选择访客访问您的网站时将看到的语言。如语言下拉列表所示，WordPress默认安装了单一语言，显示在列表顶部。列表的其余部分表示可以添加到您网站的语言。当您设置新语言时，将自动下载所选语言的翻译文件，并且新选择成为访客的默认语言。如果您查看WordPress安装的`wp-content/languages`目录，您将看到为所选语言下载了多个具有`.po`和`.mo`扩展名的文件。便携对象（`.po`）文件是包含WordPress源代码中所有原始英文文本的ASCII文本文件，而机器对象（`.mo`）文件是编译成二进制版本的翻译表，以便在网站渲染时由PHP高效加载。
- en: If you are not presented with a list of languages to install automatically in
    the General section of the Dashboard, visit [https://codex.wordpress.org/Installing_WordPress_in_Your_Language](https://codex.wordpress.org/Installing_WordPress_in_Your_Language)
    to learn how to manually download and install translation files for WordPress.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在仪表板的“常规”部分没有提供要自动安装的语言列表，请访问[https://codex.wordpress.org/Installing_WordPress_in_Your_Language](https://codex.wordpress.org/Installing_WordPress_in_Your_Language)了解如何手动下载和安装WordPress的翻译文件。
- en: Adapting default user settings for translation
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 适配默认用户设置以进行翻译
- en: Before we can create translation files for our own plugins, their code needs
    to be specifically written to allow text items to be translated. This work starts
    in the plugin's activation routine, where default plugin option values are set,
    to find alternate values when a language other than English is specified in the
    website's configuration file.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们能够为我们的插件创建翻译文件之前，它们的代码需要特别编写，以便允许文本项进行翻译。这项工作从插件的激活例程开始，在那里设置默认插件选项值，以便在网站配置文件中指定了除英语以外的语言时找到替代值。
- en: This recipe shows how to assign a translated string to a plugin's default options
    array on initialization.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这个配方展示了如何在初始化时将翻译字符串分配给插件默认选项数组。
- en: Getting ready
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: You should have already followed the *Changing the WordPress language configuration*
    recipe to have a specified translation language for the website.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该已经遵循了“更改WordPress语言配置”配方，以便为网站指定翻译语言。
- en: How to do it...
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: Navigate to the WordPress plugin directory of your development installation.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到您的开发安装的WordPress插件目录。
- en: Create a new directory called `ch11-hello-world`.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`ch11-hello-world`的新目录。
- en: Navigate to the directory and create a text file called `ch11-hello-world.php`.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到该目录并创建一个名为`ch11-hello-world.php`的文本文件。
- en: Open the new file in a code editor and add an appropriate header at the top
    of the plugin file, naming the plugin `Chapter 11 - Hello World`.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在代码编辑器中打开新文件，并在插件文件顶部添加一个适当的标题，命名为“第11章 - Hello World”。
- en: 'Add the following line of code to register a function to be called when the
    plugin is activated:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下代码行以注册在插件激活时调用的函数：
- en: '[PRE0]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Insert the following block of code to provide an implementation for the `ch11hw_set_default_options_array`
    function:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 插入以下代码块以提供`ch11hw_set_default_options_array`函数的实现：
- en: '[PRE1]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Save and close the plugin file.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存并关闭插件文件。
- en: Navigate to the Extensions (Plugins in French) management page and click on
    the Activer (Activate in French) link for the `Chapter 11 - Hello World` plugin.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到扩展（法语中的插件）管理页面，并点击`Chapter 11 - Hello World`插件的“激活”（法语中的“激活”）链接。
- en: 'Using phpMyAdmin, find the `options` table entry where the `option_name` field
    has a value of `ch11hw_options` to see the newly created option:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用phpMyAdmin，找到`options`表条目，其中`option_name`字段的值为`ch11hw_options`以查看新创建的选项：
- en: '![](img/5c361311-43b5-4dbf-b0a0-5ee77711781c.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/5c361311-43b5-4dbf-b0a0-5ee77711781c.png)'
- en: How it works...
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The `__` function (that's two underscores) is a WordPress utility function that
    tries to find a translation for the text that it receives in its first argument
    within the text domain specified in the second argument. A text domain is essentially
    a subsection of the global translation table that is managed by WordPress. In
    this example, the text to be translated is the string `Hello World`, for which
    the system tries to find a translation in the `ch11hw_hello_world` domain. Since
    this domain is not available at this time, the function returns the original string
    that it received as its first parameter. The plugin code assigns the value it
    receives to the default configuration array.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '`__`函数（即两个下划线）是一个WordPress实用函数，它试图在其第二个参数指定的文本域中找到其第一个参数接收到的文本的翻译。文本域基本上是由WordPress管理的全局翻译表的一个子部分。在这个例子中，要翻译的文本是字符串`Hello
    World`，系统试图在该`ch11hw_hello_world`域中找到其翻译。由于该域目前不可用，该函数返回其第一个参数接收到的原始字符串。插件代码将该值分配给默认配置数组。'
- en: It should be noted that the `__` function is actually an alias for the `translate`
    function. While both functions have the same functionality, using `__` makes the
    code shorter when it contains a lot of text elements to be translated.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 应当注意，`__`函数实际上是对`translate`函数的一个别名。虽然这两个函数具有相同的功能，但当代码中包含大量需要翻译的文本元素时，使用`__`可以使代码更短。
- en: While it may be tempting for developers to use a variable or constant in the
    first parameter of the `__` function if they need to display the same text multiple
    times, this should not be done, as it will cause problems with the translation
    lookup mechanism.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然开发者可能会倾向于在`__`函数的第一个参数中使用变量或常量来显示相同的文本多次，但这不应该这样做，因为这会导致翻译查找机制出现问题。
- en: See also
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参见
- en: The *Changing the WordPress language configuration* recipe
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*更改WordPress语言配置*配方'
- en: Making admin page code ready for translation
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备管理页面代码以供翻译
- en: While the previous recipe showed how to look up the translation of a text item
    and return its value for further processing in the plugin code, there are many
    instances where it is more practical to display the translated content immediately.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然前面的配方展示了如何在插件代码中查找文本项的翻译并返回其值以供进一步处理，但在许多情况下，立即显示翻译内容更为实用。
- en: This recipe shows how to translate the contents of a simple administration page
    for immediate display.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这个配方展示了如何翻译简单管理页面的内容以供立即显示。
- en: Getting ready
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: You should have already followed the *Adapting default user settings for translation*
    recipe to have a starting point for this recipe. Alternatively, you can get the
    resulting code (`Chapter 11/ch11-hello-world/ch11-hello-world-v1.php`) for that
    recipe from the code bundle. You should rename the file to `ch11-hello-world.php`
    before starting.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该已经遵循了*调整默认用户设置以进行翻译*配方，以便为本配方提供一个起点。或者，您可以从代码包中获取该配方的结果代码（`第11章/ch11-hello-world/ch11-hello-world-v1.php`）。在开始之前，您应该将文件重命名为`ch11-hello-world.php`。
- en: How to do it...
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到...
- en: Navigate to the `ch11-hello-world` folder of the WordPress plugin directory
    of your development installation.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到您开发安装中WordPress插件目录的`ch11-hello-world`文件夹。
- en: Open the `ch11-hello-world.php` file in a text editor.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文本编辑器中打开`ch11-hello-world.php`文件。
- en: 'Add the following line of code at the end of the file to register a function
    to be called when WordPress is building the administration page''s menu:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文件末尾添加以下行代码以注册一个在WordPress构建管理页面菜单时被调用的函数：
- en: '[PRE2]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Add the following code section to provide an implementation for the `ch11hw_settings_menu`
    function:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下代码部分以提供`ch11hw_settings_menu`函数的实现：
- en: '[PRE3]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Insert the following block of code to create the `ch11hw_config_page` function
    declared in the call to `add_options_page`:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 插入以下代码块以创建在`add_options_page`调用中声明的`ch11hw_config_page`函数：
- en: '[PRE4]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Add the following line of code to register a function to be executed when the
    administration panel is being prepared to be displayed:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下行代码以注册一个在准备显示管理面板时执行的函数：
- en: '[PRE5]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Append the following code segment to provide an implementation for the `ch11hw_admin_init`
    function:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码段附加到提供`ch11hw_admin_init`函数实现的代码：
- en: '[PRE6]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Provide code for the `process_ch11hw_options` function, declared in the previous
    step, by inserting the following code:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提供在上一步骤中声明的`process_ch11hw_options`函数的代码，通过插入以下代码：
- en: '[PRE7]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Save and close the plugin file.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存并关闭插件文件。
- en: Navigate to the administration page of your development WordPress installation.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到您开发WordPress安装的管理页面。
- en: 'Click on the Reglages (Settings in French) section on the left-hand navigation
    menu to expand it. You will see a new menu item called Hello World in the tree.
    Selecting the new entry displays the plugin''s simple configuration form, as shown
    in the following screenshot:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击左侧导航菜单中的“设置”（法语中的“Reglages”）部分以展开它。您将在树中看到一个名为“Hello World”的新菜单项。选择新条目将显示插件简单的配置表单，如下面的截图所示：
- en: '![](img/3a74c5cc-7298-4dd5-b121-d80f65d2a894.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/3a74c5cc-7298-4dd5-b121-d80f65d2a894.png)'
- en: How it works...
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: This recipe makes use of the `__` function, covered in the previous recipe,
    along with the `_e` function. This second function's purpose is similar to `__`,
    except that it immediately echoes the outcome of the translation lookup to the
    browser. It should be used for all text elements that would previously have just
    been simple text in HTML code. Of course, making a call to this function requires
    the presence of standard opening and closing PHP tags (`<?` and `?>`) to be executed
    among the surrounding HTML.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 本食谱使用了之前食谱中提到的`__`函数，以及`_e`函数。第二个函数的目的是与`__`类似，但它会立即将翻译查找的结果输出到浏览器。它应该用于所有之前只是简单文本的HTML代码中的文本元素。当然，调用此函数需要标准打开和关闭PHP标签（`<?`和`?>`）在周围的HTML中执行。
- en: The rest of this plugin's code takes care of storing user updates in the website
    database, as covered previously in [Chapter 3](0346c3c6-27ee-45fb-bfd6-df398e04b2b4.xhtml),
    *User Settings and Administration Pages*.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 本插件代码的其余部分负责将用户更新存储在网站数据库中，如之前在[第3章](0346c3c6-27ee-45fb-bfd6-df398e04b2b4.xhtml)，*用户设置和管理页面*中所述。
- en: See also
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参见
- en: The *Adapting default user settings for translation* recipe
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*为翻译调整默认用户设置*的食谱'
- en: Modifying shortcode output for translation
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 修改短代码输出以进行翻译
- en: As we have seen in numerous recipes, shortcodes are powerful tools that provide
    an easy way for users to add content to their website posts and pages. Since this
    content is presented to users, it can benefit from a translation just as much
    as the website's administration pages.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在众多食谱中看到的，短代码是强大的工具，为用户提供了一种简单的方法，将内容添加到他们的网站帖子中。由于这些内容是展示给用户的，因此它们可以从翻译中受益，就像网站的管理页面一样。
- en: This recipe shows how to translate shortcode output before it is displayed.
    It also explains how to deal with variable data elements that can be positioned
    differently between languages.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 这个食谱展示了如何在显示之前翻译短代码输出。它还解释了如何处理在不同语言中可以放置在不同位置的可变数据元素。
- en: Getting ready
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: You should have already followed the *Making admin page code ready for translation*
    recipe to have a starting point for this recipe. Alternatively, you can get the
    resulting code (`Chapter 11/ch11-hello-world/ch11-hello-world-v2.php`) for that
    recipe from the code bundle. You should rename the file to `ch11-hello-world.php`
    before starting.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该已经遵循了*制作管理页面代码准备翻译*的食谱，以便为本食谱提供一个起点。或者，您可以从代码包中获取该食谱的结果代码（`第11章/ch11-hello-world/ch11-hello-world-v2.php`）。在开始之前，您应该将文件重命名为`ch11-hello-world.php`。
- en: How to do it...
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Navigate to the `ch11-hello-world` folder of the WordPress plugin directory
    of your development installation.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到您开发安装的WordPress插件目录中的`ch11-hello-world`文件夹。
- en: Open the `ch11-hello-world.php` file in a text editor.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文本编辑器中打开`ch11-hello-world.php`文件。
- en: 'Add the following line of code at the end of the file to declare a new shortcode
    that will be available to content authors:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文件末尾添加以下代码行以声明一个新短代码，该短代码将可供内容作者使用：
- en: '[PRE8]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Add the following code section to provide an implementation for the `ch11hw_hello_world_shortcode`
    function:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下代码部分以提供`ch11hw_hello_world_shortcode`函数的实现：
- en: '[PRE9]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Save and close the plugin file.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存并关闭插件文件。
- en: Create a new page (using the Ajouter item of the Pages menu) and insert the
    new shortcode `[hello-world]` in the content, then publish the page (Publier).
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新页面（使用页面菜单的“添加项目”），在内容中插入新的短代码`[hello-world]`，然后发布页面（发布）。
- en: 'View the page (Voir la page) to see the output of the shortcode:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看页面（查看页面）以查看短代码的输出：
- en: '![](img/192337e6-0088-4f89-bd70-f769b221bc2f.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/192337e6-0088-4f89-bd70-f769b221bc2f.png)'
- en: How it works...
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: This recipe shows something that's a bit more complex than the previous two,
    as we want the shortcode output to be a combination of static text with a dynamic
    element, and we want that element to appear in different places based on the grammatical
    structure of the target language. The way to achieve this functionality is to
    combine the `__` internationalization function with the `sprintf` standard PHP
    function.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 本菜谱展示的内容比前两个菜谱稍微复杂一些，因为我们希望短代码输出是静态文本与动态元素的组合，并且我们希望该元素根据目标语言的语法结构出现在不同的位置。实现此功能的方法是将`__`国际化函数与`sprintf`标准PHP函数相结合。
- en: The purpose of the `sprintf` function is to insert a variable in a string. It
    performs this task by looking for a placeholder in the target string sent in the
    first argument, and replaces it with the variable that it receives as its second
    argument. Some examples of placeholders are `%s` for a string and `%d` for an
    integer. With this functionality in mind, we use a placeholder as part of the
    string to be translated so that users who create localization files can choose
    where the value will be placed as part of the sentence structure. Once the translation
    has been obtained by the `__` function, we can immediately send the alternate
    language string to `sprintf` to create the final text.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '`sprintf`函数的目的是在字符串中插入一个变量。它通过在第一个参数中发送的目标字符串中查找占位符来完成此任务，并用它收到的第二个参数中的变量替换它。一些占位符的例子是`%s`用于字符串和`%d`用于整数。考虑到这种功能，我们使用占位符作为要翻译的字符串的一部分，以便创建本地化文件的用户可以选择值在句子结构中的位置。一旦通过`__`函数获得翻译，我们就可以立即将替代语言字符串发送到`sprintf`以创建最终文本。'
- en: See also
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参见
- en: The *Adapting default user settings for translation* recipe
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*调整默认用户设置以进行翻译* 菜单'
- en: Translating text strings using Poedit
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Poedit翻译文本字符串
- en: After inserting all the necessary code to look up translations for text elements,
    we need to create the actual translation files. While there are multiple tools
    available to perform this task, we will focus our efforts around the most popular
    one, the free multiplatform Poedit.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在插入所有必要的代码以查找文本元素的翻译后，我们需要创建实际的翻译文件。虽然有多种工具可用于执行此任务，但我们将集中精力在最受欢迎的一个上，即免费的跨平台Poedit。
- en: This recipe shows how to extract all the strings to be translated from the plugin's
    code using Poedit, translate them, and save the resulting language file under
    the plugin directory.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 本菜谱展示了如何使用Poedit从插件代码中提取所有要翻译的字符串，翻译它们，并将生成的语言文件保存到插件目录下。
- en: Getting ready
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: You should have already followed the *Modifying shortcode output for translation*
    recipe to have a starting point for this recipe. Alternatively, you can get the
    resulting code (`Chapter 11/ch11-hello-world/ch11-hello-world-v3.php`) for that
    recipe from the code bundle. You should rename the file to `ch11-hello-world.php`
    before starting.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该已经遵循了*修改短代码输出以进行翻译*菜谱，以便为本菜谱提供一个起点。或者，您可以从代码包中获取该菜谱的结果代码（`Chapter 11/ch11-hello-world/ch11-hello-world-v3.php`）。在开始之前，您应该将文件重命名为`ch11-hello-world.php`。
- en: How to do it...
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Navigate to the `ch11-hello-world` folder of the WordPress plugin directory
    of your development installation.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到您开发安装的WordPress插件目录中的`ch11-hello-world`文件夹。
- en: Create a new subdirectory named `languages`.
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`languages`的新子目录。
- en: Navigate to the Poedit download page and download the appropriate version of
    the tool for your computer ([https://www.poedit.net/download](https://www.poedit.net/download)).
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到Poedit下载页面，下载适合您计算机的相应版本的工具（[https://www.poedit.net/download](https://www.poedit.net/download)）。
- en: Install and start the Poedit application.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装并启动Poedit应用程序。
- en: Select the New menu item under the application's File menu.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在应用程序的文件菜单下选择“新建”菜单项。
- en: While Poedit offers an automated way to create translations for WordPress themes
    or plugins, we will focus on the free version of Poedit and highlight all steps
    required to create a translation in this mode.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然Poedit提供了一种自动创建WordPress主题或插件翻译的方法，但我们将专注于Poedit的免费版本，并突出创建翻译所需的所有步骤。
- en: Select French (Canada) as Language of the translation.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择翻译的语言为法语（加拿大）。
- en: Click on the Save button from the toolbar, navigate to the `languages` folder
    created earlier in this recipe, and set the filename to `ch11hw_hello_world-fr_CA.po`.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击工具栏中的“保存”按钮，导航到本菜谱中先前创建的`languages`文件夹，并将文件名设置为`ch11hw_hello_world-fr_CA.po`。
- en: Click on the Extract from sources button in the main interface window to open
    the Catalog Properties window, which will default to the Sources paths tab.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在主界面窗口中点击“从源提取”按钮，打开目录属性窗口，它将默认显示为源路径选项卡。
- en: If the Poedit window is too small, it will not display the main interface section.
    Simply make the window larger to see the Extract from sources button.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 Poedit 窗口太小，它将不会显示主界面部分。只需将窗口放大，即可看到从源提取按钮。
- en: Create a new entry in the Paths list by pressing the New item button.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击“新建项目”按钮在路径列表中创建一个新的条目。
- en: Set the value of the new path entry to `..` (two period characters).
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将新路径条目的值设置为 `..`（两个点字符）。
- en: Switch to the Sources keywords tab and add two new items to the list of Additional
    keywords and set their values to `__` and `_e`.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到源关键词选项卡，并在附加关键词列表中添加两个新项目，并将它们的值设置为 `__` 和 `_e`。
- en: Switch to the Translation properties tab and set the Project name and version
    field to `Hello World`.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到翻译属性选项卡，并将项目名称和版本字段设置为 `Hello World`。
- en: Click on the OK button to close the Catalog properties dialog, then click on
    Save from the toolbar to be able to start editing entries in the file.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“确定”按钮关闭目录属性对话框，然后从工具栏点击“保存”，以便能够开始编辑文件中的条目。
- en: Select the items one by one in order to display them in the lower section of
    the window.
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 逐个选择项目，以便在窗口的下方部分显示它们。
- en: 'Enter a translation for each text element in the lower dialog box. The following
    screenshot shows the translations of each item to French:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下方的对话框中为每个文本元素输入翻译。以下截图显示了每个项目的法语翻译：
- en: '![](img/e620d692-c7cc-4af5-9f0b-1840c4caacfd.png)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e620d692-c7cc-4af5-9f0b-1840c4caacfd.png)'
- en: Save the translation file once completed.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成翻译后，保存翻译文件。
- en: How it works...
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The Poedit tool searches through PHP files, looking for functions that have
    specific names, as specified in the Keywords configuration section. It looks through
    all the files located in the same directory as the catalog itself and in any additional
    folders specified under the Paths section of the catalog settings. By specifying
    `..` as an additional path, we tell Poedit to look one directory up from the `languages`
    folder, where the plugin files are located.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: Poedit 工具会搜索 PHP 文件，寻找在关键词配置部分中指定的具有特定名称的函数。它会在与目录本身相同的目录以及目录设置部分中指定的任何附加文件夹中查找所有文件。通过指定
    `..` 作为附加路径，我们告诉 Poedit 在 `languages` 文件夹（插件文件所在位置）的上一个目录中查找。
- en: Based on the configuration that we specified, Poedit is able to find all the
    instances of the `__` and `_e` functions in the plugin code and retrieve the text
    strings that are set as the first argument to these functions. Once all the strings
    have been found, Poedit provides a simple interface to provide translations for
    each string and saves the resulting translation file. Upon saving, Poedit actually
    creates two files, the portable object file and the machine object file.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我们指定的配置，Poedit 能够找到插件代码中所有 `__` 和 `_e` 函数的实例，并检索这些函数的第一个参数中设置的文本字符串。一旦找到所有字符串，Poedit
    提供一个简单的界面来为每个字符串提供翻译，并保存生成的翻译文件。保存时，Poedit 实际上创建了两个文件，可移植对象文件和机器对象文件。
- en: 'The name of the language files is made from two parts: the name of the text
    domain, `ch11hw_hello_world`, which was used in all of our calls to the `__` and
    `_e` functions in the previous recipes, and the target language code, `fr_CA`,
    to match the language configuration that we set earlier in this chapter. To support
    all the variants of the French language that WordPress supports, you can copy
    the translation files, changing the language code each time in the Poedit catalog
    configuration, as well as in the file names (`ch11hw_hello_world-fr_CA.po` and
    `ch11hw_hello_world-fr_BE.po`).'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 语言文件的名称由两部分组成：文本域的名称 `ch11hw_hello_world`，这是我们之前所有对 `__` 和 `_e` 函数的调用中使用的，以及目标语言代码
    `fr_CA`，以匹配我们在本章中之前设置的配置。为了支持 WordPress 支持的所有法语变体，你可以复制翻译文件，每次在 Poedit 目录配置以及文件名（`ch11hw_hello_world-fr_CA.po`
    和 `ch11hw_hello_world-fr_BE.po`）中更改语言代码。
- en: There's more...
  id: totrans-126
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: If you are only comfortable with English, create a template file that users
    will be able to import to start their translation.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你只熟悉英语，创建一个模板文件，用户可以导入以开始他们的翻译。
- en: Translation template file
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 翻译模板文件
- en: When you are only familiar with English, you can create a translation template
    that only contains the text to be translated by saving the catalog as a `.pot`
    file instead of a `.po`/`.mo` combination. In addition to the special extension,
    the filename should not contain a language tag (for example, `ch11hw_hello_world.pot`).
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 当你只熟悉英语时，你可以创建一个只包含要翻译的文本的翻译模板，通过将目录保存为`.pot`文件而不是`.po`/`.mo`组合来实现。除了特殊的扩展名外，文件名不应包含语言标签（例如，`ch11hw_hello_world.pot`）。
- en: See also
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参见
- en: The *Adapting default user settings for translation* recipe
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*调整默认用户设置以进行翻译*食谱'
- en: Loading a language file in the plugin initialization
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在插件初始化时加载语言文件
- en: The final step to plugin translation is to put the code in place to load a translation
    file. This is done by registering an action hook callback and calling a single
    function when it gets executed.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 插件翻译的最终步骤是将代码放入加载翻译文件的代码。这是通过注册一个动作钩子回调并在执行时调用一个单一函数来完成的。
- en: This recipe shows how to load the translation file created in the previous recipe.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 本食谱展示了如何加载在先前的食谱中创建的翻译文件。
- en: Getting ready
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: You should have already followed the *Making admin page code ready for translation*
    and *Translating text strings using Poedit* recipes to have the proper files required
    for this recipe. Alternatively, you can get the resulting code (`Chapter 11/ch11-hello-world/ch11-hello-world-v3.php`
    and `Chapter 11/ch11-hello-world/languages` folder) for these recipes from the
    code bundle. You should rename the file `ch11-hello-world-v3.php` to `ch11-hello-world.php`
    and copy the `languages` folder next to the renamed file before starting the recipe.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该已经遵循了*为管理页面代码准备翻译*和*使用Poedit翻译文本字符串*的食谱，以获得本食谱所需的正确文件。或者，你可以从代码包中获取这些食谱的结果代码（`Chapter
    11/ch11-hello-world/ch11-hello-world-v3.php`和`Chapter 11/ch11-hello-world/languages`文件夹）。你应该将文件`ch11-hello-world-v3.php`重命名为`ch11-hello-world.php`，并在开始食谱之前将`languages`文件夹复制到重命名文件旁边。
- en: How to do it...
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Navigate to the `ch11-hello-world` folder of the WordPress plugin directory
    of your development installation.
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到你的开发安装的WordPress插件目录中的`ch11-hello-world`文件夹。
- en: Open the `ch11-hello-world.php` file in a text editor.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文本编辑器中打开`ch11-hello-world.php`文件。
- en: 'Add the following line of code at the end of the file to register a function
    to be called when the plugin is initialized:'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文件末尾添加以下代码行以注册一个在插件初始化时被调用的函数：
- en: '[PRE10]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Add the following code section to provide an implementation for the `ch11hw_plugin_init`
    function:'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下代码段以提供`ch11hw_plugin_init`函数的实现：
- en: '[PRE11]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Locate the `ch11hw_set_default_options_array` function and add the same call
    to `load_plugin_textdomain` at the top of the function before the `if` statement:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定位到`ch11hw_set_default_options_array`函数，并在`if`语句之前添加相同的`load_plugin_textdomain`调用：
- en: '[PRE12]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Save and close the plugin file.
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存并关闭插件文件。
- en: Navigate to the Reglages menu to see if the plugin's menu item has changed.
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到“设置”菜单，查看插件菜单项是否已更改。
- en: 'Select the Bonjour Monde item to see the translated configuration page:'
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择“Bonjour Monde”项以查看翻译后的配置页面：
- en: '![](img/e42fd6c1-bb03-4d2f-96e6-63d9f7540968.png)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e42fd6c1-bb03-4d2f-96e6-63d9f7540968.png)'
- en: How it works...
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The `load_plugin_textdomain` function has three arguments. When called, it looks
    in the folder specified in the last parameter for a `.mo` file with a name starting
    with the text domain specified in the first parameter, followed by the current
    language set in the WordPress configuration file. If found, the translation file
    is loaded in memory and is used to search for translations every time the `__`
    or `_e` functions are encountered during execution. The middle argument, set to
    a `false` value, is obsolete but is still needed for backward compatibility.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '`load_plugin_textdomain`函数有三个参数。当被调用时，它会在最后一个参数指定的文件夹中查找以第一个参数指定的文本域开头的`.mo`文件，后跟WordPress配置文件中设置的当前语言。如果找到，翻译文件将被加载到内存中，并在执行过程中每次遇到`__`或`_e`函数时用于搜索翻译。中间参数设置为`false`值，已过时但仍然需要向后兼容。'
- en: Once all the hooks are in place in the plugin code, and a first translation
    file (or template) is made available with the plugin, users can easily modify
    text elements to other languages, which they can use immediately. They can also
    provide these new translations back to the plugin author for inclusion in future
    updates. We added a second call to `load_plugin_textdomain` in the activation
    hook, since the `init` action hook is not executed when activation hooks execute.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦在插件代码中设置了所有钩子，并且提供了一个带有插件的第一个翻译文件（或模板），用户就可以轻松地将文本元素修改为其他语言，他们可以立即使用这些语言。他们还可以将这些新翻译提供给插件作者，以便包含在未来的更新中。我们在激活钩子中添加了对
    `load_plugin_textdomain` 的第二次调用，因为当激活钩子执行时，`init` 动作钩子不会执行。
- en: There's more...
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: As a plugin evolves over time, new text items may need to be translated. There
    may also be a need to use more advanced translation functions and translate JavaScript
    code.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 随着插件随时间发展，可能需要翻译新的文本项。也可能需要使用更高级的翻译函数并翻译JavaScript代码。
- en: Updating a translation file
  id: totrans-155
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更新翻译文件
- en: When new calls to the `__` or `_e` functions are made in a plugin, the translation
    file needs to be updated to take new text elements into account. To do this, start
    the Poedit tool and open the existing catalog. Then, select Update from the toolbar.
    This will extract all the text items and identify new entries. Once this is done,
    new items can be translated and saved back to the catalog file.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 当在插件中调用 `__` 或 `_e` 函数时，需要更新翻译文件以考虑新的文本元素。为此，启动 Poedit 工具并打开现有目录。然后，从工具栏中选择更新。这将提取所有文本项并识别新条目。一旦完成，新项目就可以翻译并保存回目录文件。
- en: Advanced translation functions
  id: totrans-157
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 高级翻译功能
- en: 'While we used the most common internationalization functions in this chapter,
    there are a few more advanced functions that may be useful in your efforts:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们在本章中使用了最常见的国际化函数，但还有一些更高级的函数可能在您的努力中很有用：
- en: '`_n( $singular, $plural, $number, $domain )`: This function will look up one
    of the first two strings received, depending on whether the number is one or more.'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`_n( $singular, $plural, $number, $domain )`: 此函数将根据数字是一还是更多来查找接收到的前两个字符串之一。'
- en: '`_x( $text, $context, $domain )`: Adds a parameter to the localization lookup
    to add a context parameter. This is useful when dealing with words that have the
    same spelling but different meanings.'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`_x( $text, $context, $domain )`: 向本地化查找添加一个参数以添加上下文参数。当处理拼写相同但含义不同的单词时，这很有用。'
- en: '`_ex( $text, $context, $domain )`: Same as `_x` but echoes the result of the
    lookup.'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`_ex( $text, $context, $domain )`: 与 `_x` 相同，但会回显查找的结果。'
- en: '`_nx( $singular, $plural, $number, $context, $domain)`: Same as `_n` with the
    additional context parameter from `_x`.'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`_nx( $singular, $plural, $number, $context, $domain)`: 与 `_n` 相同，但增加了 `_x`
    的附加上下文参数。'
- en: There are also a number of functions that will perform a localization lookup
    immediately, followed by the escape of the resulting string. These functions include
    `esc_attr__()`, `esc_attr_e()`, `esc_html__()`, `esc_html_x()`, and many more.
    For a full list of internationalization functions, visit [https://codex.wordpress.org/L10n](https://codex.wordpress.org/L10n).
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 还有许多函数会立即执行本地化查找，然后转义结果字符串。这些函数包括 `esc_attr__()`, `esc_attr_e()`, `esc_html__()`,
    `esc_html_x()` 以及更多。有关国际化函数的完整列表，请访问 [https://codex.wordpress.org/L10n](https://codex.wordpress.org/L10n)。
- en: Localizing JavaScript files
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本地化JavaScript文件
- en: 'JavaScript files are a bit more tricky to translate, as they are often read
    from an external file that cannot contain any PHP code. The solution to this is
    the `wp_localize_script` function. When called, this function declares new variables
    in scripts that have already been queued up to be loaded, and populates these
    variables with localized strings. Upon execution, the code will be able to access
    and display the proper text on screen. The following code snippet is an example
    showing how to use the function:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript文件翻译起来有点棘手，因为它们通常是从不能包含任何PHP代码的外部文件中读取的。这个解决方案是 `wp_localize_script`
    函数。当调用时，此函数在已经排队等待加载的脚本中声明新变量，并用本地化字符串填充这些变量。在执行时，代码将能够访问和显示屏幕上的正确文本。以下代码片段是一个示例，展示了如何使用此函数：
- en: '[PRE13]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: In the previous code example, a new object called `javascript_object` will be
    created inside the `script_handle` script, with a data member called `string_val`
    that contains a translation of the target text in the current WordPress language,
    if available.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的代码示例中，将在 `script_handle` 脚本内部创建一个名为 `javascript_object` 的新对象，该对象包含一个名为 `string_val`
    的数据成员，其中包含当前WordPress语言中目标文本的翻译（如果可用）。
- en: See also
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参见
- en: The *Translating text strings using Poedit* recipe
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Poedit 翻译文本字符串的配方
