- en: '*Chapter 6*: Using Digital Asset Management'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第6章*：使用数字资产管理'
- en: In the previous chapter, you learned what a Pimcore class is and how to create
    object instances for defined classes.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，你学习了什么是Pimcore类以及如何为定义的类创建对象实例。
- en: 'In this chapter, we will focus on **Digital Asset Management** (**DAM**), which
    is one of the main Pimcore features. This feature doesn''t just let you upload
    your images like a storage platform, but it also helps you to categorize, elaborate,
    and version images and, in general, any kind of file, and distribute them across
    different channels. The chapter is organized as follows:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将重点关注**数字资产管理**（**DAM**），这是Pimcore的主要功能之一。这个功能不仅仅是让你像存储平台一样上传图像，它还帮助你分类、详细说明和版本控制图像以及一般类型的文件，并将它们分发到不同的渠道。本章的组织结构如下：
- en: What is a DAM?
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是DAM？
- en: Uploading and Relating Assets
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 上传和关联资产
- en: Editing Images
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编辑图像
- en: How to Create Thumbnails
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何创建缩略图
- en: After starting with an explanation of what a DAM is, we will then introduce
    the Pimcore DAM features. Then, we will discover how to upload digital assets
    on Pimcore and how to relate them to objects. A specific focus on images will
    follow, to let you see how images can be edited or enhanced inside Pimcore, and
    then we'll explore how easy it is to create different thumbnails.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在解释了什么是DAM之后，我们将介绍Pimcore的DAM功能。然后，我们将探讨如何在Pimcore上上传数字资产以及如何将它们与对象关联起来。接下来，我们将特别关注图像，以便让你看到如何在Pimcore内部编辑或增强图像，然后我们将探索创建不同缩略图有多容易。
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: As you have previously done in [*Chapter 5*](B17073_05_ePub_RK.xhtml#_idTextAnchor093)*,
    Exploring Objects and Classes*, all you need to run the demo connected with this
    chapter is to navigate to the `6\. Using Digital Asset Management` folder in the
    official book repository and start a Docker environment.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你在[*第5章*](B17073_05_ePub_RK.xhtml#_idTextAnchor093)*，探索对象和类*中所做的那样，要运行与本章相关的演示，你只需要导航到官方书库中的`6.
    使用数字资产管理`文件夹并启动Docker环境。
- en: 'To do so, just follow these instructions:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 要这样做，只需遵循以下说明：
- en: 'Run Docker with the following command:'
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令运行Docker：
- en: '[PRE0]'
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Then, to restore all the settings on your local machine, just open a new shell
    and type this:'
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，为了恢复你本地机器上的所有设置，只需打开一个新的shell并输入以下命令：
- en: '[PRE1]'
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Navigate to [http://localhost/admin](http://localhost/admin) and log in with
    your admin/pimcore credentials.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到[http://localhost/admin](http://localhost/admin)并使用你的管理员/pimcore凭据登录。
- en: 'You can access the official book repository to get the source code using the
    following link:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用以下链接访问官方书库以获取源代码：
- en: '[https://github.com/PacktPublishing/Modernizing-Enterprise-CMS-using-Pimcore/tree/main/6.%20Using%20Digital%20Asset%20Management](https://github.com/PacktPublishing/Modernizing-Enterprise-CMS-using-Pimcore/tree/main/6.%20Using%20Digital%20Asset%20Management)'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/PacktPublishing/Modernizing-Enterprise-CMS-using-Pimcore/tree/main/6.%20Using%20Digital%20Asset%20Management](https://github.com/PacktPublishing/Modernizing-Enterprise-CMS-using-Pimcore/tree/main/6.%20Using%20Digital%20Asset%20Management)'
- en: Now you are ready to navigate the demo to discover all the aspects related to
    this chapter.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你已经准备好导航到演示，以发现与本章相关的所有方面。
- en: What is a DAM?
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是DAM？
- en: In this section, you will learn about the concepts of Digital Asset Management.
    DAM software is an integrated system designed for the centralized strategic management
    of media content. It is the software that allows you to create, organize, and
    distribute content across different channels such as websites and applications
    and increase the effectiveness of communication.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你将了解数字资产管理的概念。DAM软件是一个集成的系统，旨在对媒体内容进行集中式战略管理。它是允许你在不同的渠道（如网站和应用程序）上创建、组织和分发内容，并提高沟通有效性的软件。
- en: Now that we know the academic definition, let's see what DAM software is useful
    for and what its main features are. As the name suggests, DAM revolves around
    *Digital Assets*; this concept is not intended to be restricted to images or videos
    but involves all kinds of digital files, such as documents and audio recordings.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道了学术定义，让我们看看DAM软件有什么用途以及其主要功能是什么。正如其名所示，DAM围绕*数字资产*；这个概念并不局限于图像或视频，而是涉及所有类型的数字文件，如文档和音频记录。
- en: So, given the digital assets, let's now move on to the *Management* part of
    the definition. The management of digital assets is not just intended to organize
    assets in several folders like on the desktop of your PC; of course, in DAM systems,
    and thus also in Pimcore, we will always find the concept of folders, but this
    is just the starting point for structured organization. When it comes to management,
    DAM is all about being able to search for assets through indexes, share assets
    between users, and keep track of versioning, with the ability to define workflows
    to support the life cycle of an asset.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，考虑到数字资产，我们现在将转向定义中的*管理*部分。数字资产管理不仅仅是将资产组织在几个文件夹中，就像在您的PC桌面一样；当然，在DAM系统中，以及在Pimcore中，我们总会找到文件夹的概念，但这只是结构化组织的起点。当涉及到管理时，DAM是关于能够通过索引搜索资产，在用户之间共享资产，并跟踪版本控制的能力，同时能够定义支持资产生命周期的流程。
- en: In this section, we will first look at the common characteristics of all DAM
    systems, then we will present the specific features of the Pimcore DAM system.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将首先探讨所有DAM系统的共同特征，然后我们将介绍Pimcore DAM系统的具体功能。
- en: Characteristics of a DAM system
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DAM系统的特征
- en: Let's see what characteristics must be present in every DAM system.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看每个DAM系统必须具备哪些特征。
- en: Organization
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 组织
- en: As we mentioned before, organization is one of the key aspects of asset management.
    The first thing that we must consider is creating folders and subfolders in a
    hierarchical structure. The folder paradigm has become a widespread concept in
    many different kinds of software and is crucial to organizing content.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前提到的，组织是资产管理的关键方面之一。我们必须考虑的第一件事是在分层结构中创建文件夹和子文件夹。文件夹范式已成为许多不同类型软件中的普遍概念，对于组织内容至关重要。
- en: However, this in itself is not enough, so it is required to have features to
    improve content organization, such as categorization through tags or other properties
    and advanced research methods for filtering and searching for content.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这本身并不足够，因此需要具备改进内容组织的功能，例如通过标签或其他属性进行分类，以及用于过滤和搜索内容的先进研究方法。
- en: Content Enrichment
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 内容丰富化
- en: Every digital asset is, after all, a digital file. Every file has content that
    must be shown or downloaded, but there may be the need to provide some information
    to describe the asset or its content; we can think of these pieces of information
    as asset metadata.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 毕竟，每个数字资产都是一个数字文件。每个文件都有必须显示或下载的内容，但可能需要提供一些信息来描述资产或其内容；我们可以将这些信息视为资产元数据。
- en: In very common scenarios, metadata is used to provide an alternative view of
    a digital asset without showing its content. Let's take images, for example –
    it is good practice to use an alternative tag on websites to describe visual content
    with a short piece of text, in case there are connection problems or to improve
    accessibility for the visually impaired.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在非常常见的场景中，元数据被用来提供对数字资产的另一种视图，而不显示其内容。以图片为例，在网站上使用替代标签并用简短的文字描述视觉内容是一种良好的做法，以防出现连接问题或提高视觉障碍者的可访问性。
- en: In addition to being used to improve accessibility, the correct design of metadata
    is useful to improve SEO, because it increases site indexing on search engines.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 除了用于提高可访问性之外，元数据的正确设计对提高搜索引擎优化（SEO）也很有用，因为它增加了网站在搜索引擎中的索引。
- en: Sharing and Access Control
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 共享和访问控制
- en: The use of a DAM system is important to centralize assets information and to
    share assets between all users that need a copy of an image. Sending and receiving
    assets through different kinds of distribution channels, such as emails or shared
    hosting services, is a heavy and dangerous operation because we risk losing files
    among the hundreds of other received emails or overriding someone else's changes
    if we upload a modified file in a shared folder.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 使用DAM系统对于集中资产信息并在所有需要图像副本的用户之间共享资产非常重要。通过不同类型的分发渠道，如电子邮件或共享托管服务发送和接收资产是一项繁重且危险的操作，因为我们可能会在数百封其他收到的电子邮件中丢失文件，或者如果我们上传一个修改过的文件到共享文件夹，可能会覆盖他人的更改。
- en: In a DAM system, every user has its account, and appropriate rules can be defined
    for file sharing or to limit seeing or modifying assets for certain users or all
    users with a specific role. These rules could prevent, for example, accidental
    file deletions.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在数字资产管理（DAM）系统中，每个用户都有自己的账户，可以定义适当的规则来共享文件或限制某些用户或具有特定角色的所有用户查看或修改资产。这些规则可以防止例如意外删除文件。
- en: Versioning
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 版本控制
- en: Connected to the previous characteristic, it's important to maintain versioning
    for digital assets. Every user that has access to an asset in write mode can potentially
    update it to a new version. Versioning allows you to keep a history of asset changes
    over time, recording users who have made changes. This concept is useful to implement
    workflows and moderate the process of asset creation through different approval
    phases.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 与前面的特性相关，维护数字资产的版本控制非常重要。任何具有写入模式访问资产的用户都可能将其更新为新版本。版本控制允许你记录资产随时间的变化历史，记录做出更改的用户。这个概念对于实现工作流程和通过不同的审批阶段来调节资产创建过程非常有用。
- en: Assets Distribution
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 资产分发
- en: In modern scenarios, the same assets may be used in different contexts that
    require different specifications. Thinking about an image, it could be required
    to be shown on a website and maybe on the corresponding app, and also to be placed
    in a paper catalog. It seems clear that, for different targets, different image
    sizing could be required.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在现代场景中，相同的资产可能在不同需要不同规格的上下文中使用。以图像为例，它可能需要在网站上显示，也可能需要在相应的应用中显示，还可能需要放置在纸质目录中。显然，对于不同的目标，可能需要不同的图像尺寸。
- en: To serve this need, different croppings are usually manually created from the
    same original image. This practice leads to chaos because a lot of different versions
    must be maintained for the same image; if the original image changes, all croppings
    must be created again. Modern DAM systems circumvent this problem by letting you
    upload a high-quality version of the image and define rules to create croppings
    at runtime when they are needed.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 为了满足这一需求，通常需要从同一原始图像手动创建不同的裁剪版本。这种做法会导致混乱，因为必须维护同一图像的许多不同版本；如果原始图像发生变化，所有裁剪都必须重新创建。现代DAM系统通过允许你上传高质量版本的图像，并在需要时定义规则来创建运行时裁剪，从而绕过这个问题。
- en: To summarize, in this section, you learned the common characteristics of DAM
    systems. All these characteristics are implemented on the Pimcore DAM system,
    and in the next section, we will introduce the Pimcore DAM system, presenting
    its main features.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，在本节中，你学习了DAM系统的常见特性。所有这些特性都在Pimcore DAM系统中实现，在下一节中，我们将介绍Pimcore DAM系统，展示其主要特性。
- en: Introducing Pimcore DAM features
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 介绍Pimcore DAM功能
- en: Previously, we presented the definition of DAM, introducing the main characteristics
    that a DAM system should have. In this section, we will introduce the Pimcore
    DAM component and briefly present its main features to discover Pimcore's DAM
    potential.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 之前，我们介绍了DAM的定义，介绍了DAM系统应具备的主要特性。在本节中，我们将介绍Pimcore DAM组件，并简要介绍其主要特性，以发现Pimcore的DAM潜力。
- en: Asset Organization
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 资产组织
- en: As for object management, Pimcore's user-friendly interface helps users with
    asset organization. The use of a folder structure to store assets and the ability
    to search and filter through the grid component, combined with multi-tabbing navigation,
    makes asset management easy and fast. You can use the simple search options and
    work within an asset's tree structure, or utilize a grid view to filter by tags,
    metadata, and other properties that help you to organize the assets.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 对于对象管理，Pimcore的用户友好界面帮助用户进行资产组织。使用文件夹结构存储资产，以及通过网格组件进行搜索和过滤的能力，结合多标签页导航，使得资产管理变得简单快捷。你可以使用简单的搜索选项在资产的树结构中工作，或者利用网格视图通过标签、元数据和其它有助于组织资产的属性进行过滤。
- en: Pimcore offers a highly flexible and configurable metadata management system.
    It's possible to define metadata for each specific asset or, if needed, to define
    common metadata properties that will be attached to all assets automatically.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: Pimcore提供了一种高度灵活和可配置的元数据管理系统。可以为每个特定资产定义元数据，如果需要，也可以定义将自动附加到所有资产的通用元数据属性。
- en: Pimcore's DAM software supports Office document formats, including Word, Excel,
    PowerPoint, and PDF. In addition to open source functionalities, enterprise features
    let you connect Pimcore to Adobe Creative Cloud applications and Microsoft Office
    software without leaving the application.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: Pimcore的DAM软件支持Office文档格式，包括Word、Excel、PowerPoint和PDF。除了开源功能外，企业功能允许您在不离开应用程序的情况下将Pimcore连接到Adobe
    Creative Cloud应用程序和Microsoft Office软件。
- en: Image and Video Conversion
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 图像和视频转换
- en: As we mentioned previously, one of the key aspects of DAM is the ability to
    distribute content among different channels. Those channels could be heterogeneous
    in terms of target size or media format, and this requires you to produce different
    versions of the same image or video.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们之前提到的，DAM的关键方面之一是能够在不同渠道之间分发内容。这些渠道在目标大小或媒体格式方面可能不同，这需要您为同一图像或视频制作不同版本。
- en: Instead of uploading a bunch of different versions for the same asset, Pimcore
    gives the ability to upload just a high-definition version and to dynamically
    generate optimized versions for each target, through an integrated transformation
    pipeline to convert and transform your files. You will learn more about creating
    image thumbnails in the final section of this chapter.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 与上传同一资产的多个不同版本相比，Pimcore提供了上传仅高清版本的能力，并通过集成的转换管道为每个目标动态生成优化版本。您将在本章的最后部分了解更多关于创建图像缩略图的内容。
- en: The original and transformed images can be served as public links or eventually
    via content distribution networks or Pimcore integrated APIs. Pimcore's DAM software
    also provides transformations of images for offline and print channels in the
    right quality and format.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 原始图像和转换后的图像可以作为公开链接提供，或者最终通过内容分发网络或Pimcore集成API提供。Pimcore的DAM软件还提供了适合离线和印刷渠道的图像转换，以正确的质量和格式。
- en: Users Rights and Permissions
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 用户权限和权限
- en: 'One of the key aspects of DAM is the ability to share assets between different
    users, so it is important to define sharing rules. In Pimcore, there is the ability
    to create different users and roles. In the following figure, you will see how
    to configure rights for users and roles:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: DAM的关键方面之一是能够在不同用户之间共享资产，因此定义共享规则很重要。在Pimcore中，您有能力创建不同的用户和角色。在以下图中，您将看到如何配置用户和角色的权限：
- en: '![Figure 6.1: User rights and permissions'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.1：用户权限和权限'
- en: '](img/Figure_6.01_B17073.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.01_B17073.jpg)'
- en: 'Figure 6.1: User rights and permissions'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.1：用户权限和权限
- en: As you can see in the preceding figure, for each asset folder it's possible
    to let the user view a list of assets and open each of them. In the same way,
    the user can have the right to create, edit, or delete assets and alter their
    settings or properties. The same principle can be applied to documents and object
    folders. In [*Chapter 7*](B17073_07_ePub_RK.xhtml#_idTextAnchor129)*, Administrating
    Pimcore Sites*, you will learn more about users and role management.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 如前图所示，对于每个资产文件夹，用户可以查看资产列表并打开每个资产。同样，用户可以拥有创建、编辑或删除资产以及更改其设置或属性的权限。同样的原则可以应用于文档和对象文件夹。在[*第7章*](B17073_07_ePub_RK.xhtml#_idTextAnchor129)*，管理Pimcore站点*中，您将了解更多关于用户和角色管理的内容。
- en: To summarize, in this section, you learned about the main characteristics of
    DAM systems, with an introduction to Pimcore's DAM features. In the following
    sections, you will see some of these functionalities in action and discover how
    to use them. In the following section, we will see how to create assets and how
    to relate them to created objects.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，在本节中，您了解了DAM系统的主要特点，并介绍了Pimcore的DAM功能。在接下来的章节中，您将看到一些这些功能的应用，并了解如何使用它们。在下一节中，我们将了解如何创建资产以及如何将它们与创建的对象关联起来。
- en: Uploading and Relating Assets
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 上传和关联资产
- en: In the previous section, we presented the characteristics of DAM systems, introducing
    some of Pimcore's specific features. In this section, we are going to see how
    to upload assets in Pimcore, and then we will see how assets are organized and
    how to relate assets to existing objects, introducing the various media components
    for object classes.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一节中，我们介绍了DAM系统的特点，并介绍了一些Pimcore的特定功能。在本节中，我们将了解如何在Pimcore中上传资产，然后我们将了解资产是如何组织的，以及如何将资产与现有对象关联起来，介绍对象类别的各种媒体组件。
- en: Uploading Assets
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 上传资产
- en: 'In this section, we will start discovering how to upload assets in Pimcore.
    To upload a file, you just need to right-click on an asset folder and hover over
    the **Add Asset(s)** option to expand the menu. As you can see in the following
    figure, assets can be uploaded from different kinds of sources:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将开始探索如何在Pimcore中上传资产。要上传文件，您只需在资产文件夹上右键单击，并将鼠标悬停在**添加资产(s)**选项上以展开菜单。如图所示，资产可以从不同的来源上传：
- en: '![Figure 6.2: Uploading Assets'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.2：上传资产'
- en: '](img/Figure_6.02_B17073.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.02_B17073.jpg)'
- en: 'Figure 6.2: Uploading Assets'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.2：上传资产
- en: 'Let''s describe the different methods that are shown in the figure:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们描述图中所显示的不同方法：
- en: '**Upload Files**: This is the standard file upload form, which allows uploading
    more than 200 file formats. Multiple files can be uploaded together, and they
    don''t need to be of the same type. Images are the most common kind of assets,
    but also PDF and other Office documents are used. Pimcore can render preview images
    for most file types.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**上传文件**：这是一个标准的文件上传表单，允许上传200多种文件格式。可以同时上传多个文件，它们不需要是同一类型。图像是最常见的资产类型，但PDF和其他Office文档也被使用。Pimcore可以为大多数文件类型生成预览图像。'
- en: '**Upload File (Compatibility Mode)**: For older browsers, the previous functionality
    may not work. If that''s the case, you must use this method to upload a single
    file.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**上传文件（兼容模式）**：对于较旧的浏览器，之前的功能可能无法正常工作。如果出现这种情况，您必须使用此方法上传单个文件。'
- en: '**Upload ZIP Archive**: This method lets you upload a ZIP file containing your
    assets. The ZIP file will be automatically unpackaged during the import.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**上传ZIP存档**：此方法允许您上传包含资产的ZIP文件。导入过程中，ZIP文件将自动解包。'
- en: '**Import from Server**: With the previous methods, files must be uploaded by
    your local filesystem. This functionality lets you select files that are stored
    within the Pimcore hosting server filesystem. This could be especially useful
    if files are shared through, for example, an SFTP folder.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**从服务器导入**：使用之前的方法，文件必须通过您的本地文件系统上传。此功能允许您选择存储在Pimcore托管服务器文件系统中的文件。如果文件通过例如SFTP文件夹共享，这可能特别有用。'
- en: '**Import from URL**: Instead of uploading physical files, there''s the ability
    to upload assets just by pasting an external URL. Here, the asset name is extracted
    by the URL itself.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**从URL导入**：不是上传物理文件，您可以通过粘贴外部URL来上传资产。在这里，资产名称由URL本身提取。'
- en: For each uploaded asset, there is the ability to upload a new version at any
    time. Ensure that only the standard upload method can be used to upload new versions.
    Let's now have a look at how to organize uploaded assets.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个上传的资产，都可以在任何时候上传新版本。请确保只能使用标准上传方法上传新版本。现在让我们来看看如何组织上传的资产。
- en: Organizing Assets
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 组织资产
- en: 'In this section, we will see how assets are organized within a folder and how
    to list and filter them. Unlike the case with objects folders, for the assets
    folders, we have two different tabs: the **Preview** tab just shows, as the name
    suggests, the preview images of the various assets, alphabetically ordered. The
    **List** tab shows, in turn, a small preview image and the list of asset properties.
    In the following figure, you will see how this tab looks:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将看到资产如何在文件夹中组织，以及如何列出和筛选它们。与对象文件夹的情况不同，对于资产文件夹，我们有两个不同的标签页：**预览**标签页正如其名所示，显示各种资产的预览图像，按字母顺序排列。**列表**标签页则显示，依次是小型预览图像和资产属性列表。在下面的图中，您将看到此标签页的外观：
- en: '![Figure 6.3: Assets list'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.3：资产列表'
- en: '](img/Figure_6.03_B17073.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.03_B17073.jpg)'
- en: 'Figure 6.3: Assets list'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.3：资产列表
- en: Looking at the figure, you will notice that, unlike what was shown for object
    grids in the *Working with the grid component* section of [*Chapter 3*](B17073_03_ePub_RK.xhtml#_idTextAnchor062)*,
    Getting Started with Pimcore Admin UI*, there are some extra functionalities.
    Above the grid, we can see the **only unreferenced** checkbox; if checked, only
    assets that are not related to objects or documents are shown. Nearby, you can
    see a button that lets you download the selected items as a ZIP file. Last but
    not least, to the left of the grid we can find a collapsible section that allows
    the filtering of assets by tags assigned to the assets. It's important to point
    out that only assets to which all the selected tags are linked will be shown in
    the grid.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 观察图例，您会注意到，与在[*第3章*](B17073_03_ePub_RK.xhtml#_idTextAnchor062)*“使用Pimcore Admin
    UI入门”部分的*“使用网格组件”*中展示的对象网格不同，有一些额外的功能。在网格上方，我们可以看到**仅未引用**复选框；如果选中，则仅显示与对象或文档无关的资产。附近，您可以看到一个按钮，允许您将选定的项目下载为ZIP文件。最后但同样重要的是，在网格左侧我们可以找到一个可折叠的部分，允许通过分配给资产的标签筛选资产。重要的是要指出，只有与所有选定的标签相关联的资产才会显示在网格中。
- en: Let's now have a look at how to relate assets, introducing the various kinds
    of media components.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来看看如何关联资产，介绍各种媒体组件类型。
- en: Relating Assets to Data Objects
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将资产关联到数据对象
- en: 'In this section, we will see how to practically relate assets to objects. Firstly,
    we will present the different kinds of media components that can be attached to
    classes, explaining the peculiarities of each one. Then, we will see how to upload,
    search, or drag assets directly on the object. In the following figure, you can
    see the various kinds of media components:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将了解如何将资产与对象实际关联。首先，我们将介绍可以附加到类上的不同类型的媒体组件，并解释每个组件的独特之处。然后，我们将展示如何直接在对象上上传、搜索或拖动资产。在下面的图中，您可以查看各种媒体组件：
- en: '![Figure 6.4: Media components in the Data Object Class Editor'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 6.4: 数据对象类编辑器中的媒体组件'
- en: '](img/Figure_6.04_B17073.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.04_B17073.jpg)'
- en: 'Figure 6.4: Media components in the Data Object Class Editor'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.4：数据对象类编辑器中的媒体组件
- en: 'Let''s describe each field that is shown in the figure:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们描述图中显示的每个字段：
- en: '**Image**: Allows you to attach an image to an object. As you can see in the
    previous figure, it''s possible to set the component''s width and height and to
    define an upload path for assets that are uploaded directly through the component.
    The defined path of folders and subfolders will be created at the first upload
    (if they were not previously created in the asset folders tree).'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**图像**：允许您将图像附加到对象上。如图中所示，可以设置组件的宽度和高度，并为通过组件直接上传的资产定义上传路径。定义的文件夹和子文件夹路径将在第一次上传时创建（如果它们之前未在资产文件夹树中创建）。'
- en: '**External Image**: Lets you link an external image by providing the image
    URL, instead of linking a physical asset. In the component settings, you can set
    the width and height of the image preview.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**外部图像**：允许您通过提供图像URL来链接外部图像，而不是链接物理资产。在组件设置中，您可以设置图像预览的宽度和高度。'
- en: '**Image Advanced**: This is an extension of a simple **Image** component; this
    allows you to define and render hotspots, markers, and cropping on the uploaded
    image. For each hotspot or marker, we can set a name and eventually add one or
    more pieces of metadata, which could be textual information or relations with
    other assets, objects, or documents.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**高级图像**：这是简单**图像**组件的扩展；这允许您定义和渲染上传图像的热点、标记和裁剪。对于每个热点或标记，我们可以设置一个名称，并最终添加一个或多个元数据，这些元数据可以是文本信息或与其他资产、对象或文档的关系。'
- en: '**Image Gallery**: As the name suggests, this component allows you to add an
    unlimited number of images to create an image gallery, which can be sorted at
    any time. There is no control over which images are already present in the gallery,
    so you can potentially add the same image to the gallery multiple times. For each
    image in the gallery, we can add hotspots and markers as for the previous component.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**图像库**：正如其名所示，此组件允许您添加无限数量的图像以创建图像库，该库可以随时排序。对库中已存在的图像没有控制权，因此您可能将相同的图像多次添加到库中。对于库中的每一张图像，我们都可以添加热点和标记，就像之前的组件一样。'
- en: '**Video**: This allows you to attach a video to the object. This video can
    be a physical asset previously uploaded on Pimcore, or an external video. For
    external videos, you must only attach the video ID; the allowed platforms are
    YouTube, Vimeo, and Dailymotion. For internal video assets, we can attach a poster
    image by dragging an existing image asset, and provide a title and the description.'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**视频**：这允许您将视频附加到对象上。此视频可以是之前在Pimcore上上传的物理资产，或外部视频。对于外部视频，您只需附加视频ID；允许的平台是YouTube、Vimeo和Dailymotion。对于内部视频资产，我们可以通过拖动现有的图像资产来附加海报图像，并提供标题和描述。'
- en: 'Now that we have presented the various media components, let''s see how to
    relate an image to an object. The different ways to make this operation are shown
    in the following figure:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经介绍了各种媒体组件，让我们看看如何将图像与对象关联起来。以下图所示的不同方式展示了进行此操作的不同方法：
- en: '![Figure 6.5: Image relation'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 6.5：图像关系'
- en: '](img/Figure_6.05_B17073.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.05_B17073.jpg)'
- en: 'Figure 6.5: Image relation'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.5：图像关系
- en: 'As shown in the figure, there are three ways to relate an image in the component:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 如图中所示，有三种方式将组件中的图像关联起来：
- en: '**Direct upload**: Upon clicking on the upload icon, the standard upload form
    will open, letting you upload a file from your filesystem.'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**直接上传**：点击上传图标后，将打开标准上传表单，让您从文件系统中上传文件。'
- en: '**Search**: Upon clicking on the search icon, a search modal will open, letting
    you select an image from the previously uploaded ones.'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**搜索**：点击搜索图标后，将打开搜索模态，让您从之前上传的图像中选择一个。'
- en: '**Drag and drop**: Just drag and drop an image from the asset tree to attach
    to the component.'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**拖放**：只需将图像从资产树拖放到组件中即可将其附加。'
- en: Once the image is attached, you can open the asset directly from the component.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦图像被附加，你就可以直接从组件中打开资产。
- en: To summarize, in this section, you learned how to upload assets in Pimcore,
    with a particular focus on different upload methods. Then, you saw how to organize
    assets in folders and how to filter them to perform searching. In the last part
    of this section, you discovered the different kinds of media components and how
    to attach images to those components.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，在本节中，你学习了如何在Pimcore上传资产，特别关注了不同的上传方法。然后，你看到了如何将资产组织到文件夹中，以及如何过滤它们以执行搜索。在本节的最后部分，你发现了不同类型的媒体组件以及如何将这些组件与图像关联起来。
- en: In the next section, we will have a look at the Pimcore internal image editor,
    and we will see how to enrich images by adding metadata.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将查看Pimcore内部图像编辑器，并了解如何通过添加元数据来丰富图像。
- en: Image Editing and Enrichment
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 图像编辑和丰富
- en: In the previous section, you learned how to upload assets on Pimcore and how
    to relate them to objects. In this section, we will present the Pimcore-integrated
    image editor and how to perform product enrichment by creating metadata for images.
    After that, we will see how to set up a focal point for an image.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一节中，你学习了如何在Pimcore上传资产以及如何将它们与对象关联起来。在本节中，我们将介绍Pimcore集成的图像编辑器以及如何通过为图像创建元数据来执行产品丰富化。之后，我们将看到如何为图像设置焦点。
- en: Exploring the Image Editor
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索图像编辑器
- en: 'Pimcore integrates a web-based component for image editing. Based on *miniPaint*,
    the image editor is essential for simple manipulation tasks such as color corrections
    and cropping. In the following figure, you can see how this editor looks:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: Pimcore集成了基于网络的图像编辑组件。基于*miniPaint*，图像编辑器对于简单的操作任务，如颜色校正和裁剪，是必不可少的。在下面的图中，你可以看到这个编辑器的样子：
- en: '![Figure 6.6: Image Editor'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 6.6：图像编辑器'
- en: '](img/Figure_6.06_B17073.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.06_B17073.jpg)'
- en: 'Figure 6.6: Image Editor'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.6：图像编辑器
- en: 'As you can see in the figure, in the left menu we find all the common tools
    of image editors, such as pencil, eraser, text, and so on. Then, in the top toolbar,
    we can access other features:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 如图中所示，在左侧菜单中我们可以找到所有常见的图像编辑工具，例如铅笔、橡皮擦、文本等。然后，在顶部工具栏中，我们可以访问其他功能：
- en: '**Save**: This lets you save changes to the image.'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**保存**：这允许你保存对图像的更改。'
- en: '**File**: This lets you upload a new image to replace the current one.'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文件**：这允许你上传新图像以替换当前图像。'
- en: '**Edit**: Here you can find methods to copy and paste a selected area or to
    undo changes.'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**编辑**：在这里你可以找到复制和粘贴选定区域或撤销更改的方法。'
- en: '**Image**: Here you can find methods to zoom and resize the image and functions
    to flip and rotate it. Moreover, there are corrective functions to adjust color
    brightness and contrast and the tool to get the image palette and histogram.'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**图像**：在这里你可以找到放大和调整图像大小的方法，以及翻转和旋转图像的功能。此外，还有调整颜色亮度、对比度的校正功能，以及获取图像调色板和直方图的工具。'
- en: '**Layers**: Here you can find methods to create and manage different layers
    of the image.'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**图层**：在这里你可以找到创建和管理图像不同图层的方法。'
- en: '**Effects**: Here you can add effects/filters to the image, for example, the
    **Black & White** filter.'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**效果**：在这里你可以为图像添加效果/过滤器，例如**黑白**过滤器。'
- en: '**Tools**: In this menu, you can find some advanced functions for color replacement,
    border creation, and calculating key points on the image.'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**工具**：在这个菜单中，你可以找到一些用于颜色替换、创建边框和在图像上计算关键点的先进功能。'
- en: Now that we have explored the image editor, we will see how to define asset
    metadata.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经探索了图像编辑器，我们将看到如何定义资产元数据。
- en: Defining Assets Metadata
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定义资产元数据
- en: In this section, we will discover how to define metadata for assets. Typically,
    metadata is used to enhance asset information to describe content without showing
    it; this could be useful for scenarios in which the content cannot be shown due
    to poor connection or for accessibility reasons. With images, for example, it
    is good practice to use an alternative tag on websites to describe the visual
    content in a short bit of text.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将了解如何为资产定义元数据。通常，元数据用于增强资产信息，以描述内容而不显示它；这在内容因网络连接差或出于可访问性原因无法显示的情况下可能很有用。例如，对于图像，在网站上使用替代标签以简短文本描述视觉内容是一种良好的做法。
- en: 'In Pimcore, it''s possible to create predefined metadata that could be applied
    to every asset. You can open the metadata definitions panel through **Settings
    | Predefined Asset Metadata**. The following figure shows the metadata properties
    and the different types of metadata that can be created:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在Pimcore中，可以创建预定义的元数据，这些元数据可以应用于每个资产。您可以通过**设置 | 预定义资产元数据**打开元数据定义面板。以下图显示了元数据属性和可以创建的不同类型的元数据：
- en: '![Figure 6.7: Predefined Metadata Definitions'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.7：预定义元数据定义'
- en: '](img/Figure_6.07_B17073.jpg)'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.07：预定义元数据定义](img/Figure_6.07_B17073.jpg)'
- en: 'Figure 6.7: Predefined Metadata Definitions'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.7：预定义元数据定义
- en: 'Let''s look at the various properties that we can see in the figure:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看图中可以看到的各种属性：
- en: '**Name**: The name of the metadata property (there are no unique constraints
    for this field).'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**名称**：元数据属性的名称（此字段没有唯一约束）。'
- en: '**Description**: An optional description of the metadata.'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**描述**：元数据的可选描述。'
- en: '**Type**: We can define simple metadata types such as **Input**, **Textarea**,
    **Date**, **Checkbox**, and **Select**. As a more complex option, there is the
    ability to link **Object**, **Document**, or another asset as metadata.'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**类型**：我们可以定义简单的元数据类型，如**输入**、**文本区域**、**日期**、**复选框**和**选择**。作为一个更复杂的选项，还有将**对象**、**文档**或另一个资产作为元数据链接的能力。'
- en: '**Value**: For each metadata, it''s possible to define a default value. The
    type of this value reflects the previously defined type.'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**值**：对于每个元数据，可以定义一个默认值。此值的类型反映了之前定义的类型。'
- en: '**Configuration**: For select metadata, in this property, we must specify the
    options that could be selected for the metadata. These options must be comma-separated.'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**配置**：对于选择型元数据，在此属性中，我们必须指定可以用于元数据的选项。这些选项必须以逗号分隔。'
- en: '**Language**: This specifies the language of the metadata.'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**语言**：这指定了元数据的语言。'
- en: '**Target Type**: We can specify whether certain metadata is restricted to a
    specific type of asset. If none is selected, the metadata can be applied to all
    kinds of assets.'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**目标类型**：我们可以指定某些元数据是否仅限于特定类型的资产。如果没有选择，元数据可以应用于所有类型的资产。'
- en: To define new metadata, you just need to click on the **Add** button; all changes
    are autosaved without the need to click a button.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 要定义新的元数据，只需点击**添加**按钮；所有更改都会自动保存，无需点击按钮。
- en: 'The predefined metadata can be attached to assets. You can do this by clicking
    on the **Custom Metadata** tab in the asset window, as you can see in the following
    figure:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 预定义的元数据可以附加到资产上。您可以通过点击资产窗口中的**自定义元数据**选项卡来完成此操作，如图所示：
- en: '![Figure 6.8: Asset Metadata'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.8：资产元数据'
- en: '](img/Figure_6.08_B17073.jpg)'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.8：资产元数据](img/Figure_6.08_B17073.jpg)'
- en: 'Figure 6.8: Asset Metadata'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.8：资产元数据
- en: As you can see in the figure, for each asset, it's possible to create custom
    metadata. For each bit of metadata, we can define the value and specify the language.
    The previously created metadata can be attached to the asset by clicking on the
    **Add predefined definitions** button.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 如图中所示，对于每个资产，可以创建自定义元数据。对于每条元数据，我们可以定义值并指定语言。之前创建的元数据可以通过点击**添加预定义定义**按钮附加到资产上。
- en: Now that you have learned how to create asset metadata, let's see how to set
    up focal points in Pimcore images.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经学会了如何创建资产元数据，让我们看看如何在Pimcore图像中设置焦点。
- en: Setting up Focal Points
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置焦点
- en: 'In this section, you will learn how to set up focal points for images. This
    property can be configured in the image editor by clicking the **Set Focal Point**
    button, which you can see in the following figure:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你将学习如何为图像设置焦点。此属性可以通过点击以下图中的**设置焦点**按钮在图像编辑器中进行配置：
- en: '![Figure 6.9: Setting up a focal point'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.9：设置焦点'
- en: '](img/Figure_6.09_B17073.jpg)'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.09：设置焦点](img/Figure_6.09_B17073.jpg)'
- en: 'Figure 6.9: Setting up a focal point'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.9：设置焦点
- en: As you can see in the previous figure, clicking the previously mentioned button
    will add a marker to the image. The focal point is placed in the middle of the
    image by default, but you can drag it to move it to the desired place.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 如前图所示，点击之前提到的按钮将在图像上添加一个标记。默认情况下，焦点位于图像中间，但您可以将其拖动到所需的位置。
- en: As you will learn in the next section, the focal point can be used to dynamically
    create image thumbnails to ensure that the focus of the image is on the focal
    point.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你将在下一节中学习的那样，焦点可以被用来动态创建图像缩略图，以确保图像的焦点在焦点上。
- en: To summarize, in this section, you learned how to edit images through the integrated
    editor. Then, you learned how to create predefined metadata and how to attach
    metadata to assets to enrich them, and how to set up focal points on images. In
    the next section, you will learn how to create images and video thumbnails and
    how they can be used to distribute assets across different mediums.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，在本节中，你学习了如何通过集成编辑器编辑图像。然后，你学习了如何创建预定义的元数据，以及如何将元数据附加到资产上以丰富它们，以及如何在图像上设置焦点。在下一节中，你将学习如何创建图像和视频缩略图以及它们如何用于在不同媒体上分发资产。
- en: Defining and Using Thumbnails
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定义和使用缩略图
- en: In the previous section, you discovered how to edit images using the internal
    editor and how to create metadata for assets. In this section, you will learn
    how to define thumbnails for images and videos in order to distribute them across
    different platforms.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一节中，你发现了如何使用内部编辑器编辑图像以及如何为资产创建元数据。在本节中，你将学习如何定义图像和视频的缩略图，以便在不同平台上分发。
- en: In a lot of scenarios, the same images must be shown both on a website and a
    mobile app, and this requires different resizing due to different spatial content
    organization and the different shapes and sizes of various devices' screens. Uploading
    different versions of the image as different assets is not the best solution,
    because if we want to make a change to the original image, we must resize all
    the images again.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多场景中，相同的图像必须在网站和移动应用上显示，并且由于不同的空间内容组织以及各种设备屏幕的不同形状和大小，这需要不同的调整大小。将不同版本的图像作为不同的资产上传并不是最佳解决方案，因为如果我们想对原始图像进行更改，我们必须再次调整所有图像的大小。
- en: To avoid this problem, Pimcore provides the ability to define transformation
    rules to dynamically create different thumbnails both for images and videos. We
    can therefore upload a high-definition version of the assets and define rules
    to create smaller resizing.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免这个问题，Pimcore提供了定义转换规则的能力，以动态地为图像和视频创建不同的缩略图。因此，我们可以上传资产的高清版本，并定义规则来创建较小的调整大小。
- en: In this section, we will first see how to define rules for thumbnail creation.
    Then, we will discover how to practically require them on templates and how to
    dynamically generate public URLs. The physical thumbnail file will be automatically
    created by Pimcore when a certain thumbnail is requested for the first time.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将首先了解如何定义缩略图创建的规则。然后，我们将发现如何在模板中实际要求它们，以及如何动态生成公共URL。当第一次请求某个缩略图时，Pimcore会自动创建物理缩略图文件。
- en: Defining thumbnails
  id: totrans-152
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定义缩略图
- en: To define thumbnail generation rules for images, just go to **Settings | Thumbnails
    | Image Thumbnails**. In the tab that opens, click on the **Add** button, fill
    in the thumbnail name, and click **Ok** to create a new thumbnail definition.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 要为图像定义缩略图生成规则，请转到**设置 | 缩略图 | 图像缩略图**。在打开的选项卡中，点击**添加**按钮，填写缩略图名称，然后点击**确定**以创建一个新的缩略图定义。
- en: 'In the following figure, you can see how the thumbnail definition panel appears:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下图中，你可以看到缩略图定义面板的显示方式：
- en: '![Figure 6.10: Image thumbnail'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.10：图像缩略图'
- en: '](img/Figure_6.10_B17073.jpg)'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.10_B17073.jpg)'
- en: 'Figure 6.10: Image thumbnail'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.10：图像缩略图
- en: As you can see in the previous figure, the thumbnail definition name is the
    one that was defined on creation; this name acts as a unique identifier within
    the thumbnail definitions, and it's not possible to rename a thumbnail definition.
    Thus, we can add a description for the thumbnail and group multiple thumbnails
    in a folder.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 如前图所示，缩略图定义名称是在创建时定义的名称；这个名称在缩略图定义中作为唯一标识符，并且无法重命名缩略图定义。因此，我们可以为缩略图添加描述，并将多个缩略图分组到一个文件夹中。
- en: The first relevant property is the output format. We can choose to keep the
    original image format, to produce a web-optimized image, or we can force the output
    format to be PNG, JPG, GIF, or TIFF. In the **Advanced** settings, we can set
    extra properties to define the image quality and resolution for JPEG and print
    formats.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个相关的属性是输出格式。我们可以选择保留原始图像格式，生成一个针对网页优化的图像，或者强制输出格式为PNG、JPG、GIF或TIFF。在**高级**设置中，我们可以设置额外的属性来定义JPEG和打印格式的图像质量和分辨率。
- en: At the bottom of the screen, you can see the **Transformations** definitions
    pipeline. For each thumbnail, we can define one or more transformations, which
    will be performed in the defined order from top to bottom. You can choose from
    a large set of transformations to perform cropping, resizing, rotating, or color
    filtering. In the previous image, for example, we have defined a transformation
    to scale the image by width, giving the maximum width in pixels and maintaining
    the image ratio. If we enable the **Force resize** checkbox, we force the generation
    of a thumbnail with the desired width; this also works when the original image
    is smaller than this width. Besides, it's possible to apply different transformations
    for different media queries, to dynamically adapt the image aspect based on screen
    size.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 在屏幕底部，你可以看到**转换**定义管道。对于每个缩略图，我们可以定义一个或多个转换，这些转换将按照从上到下的定义顺序执行。你可以从大量转换中选择执行裁剪、调整大小、旋转或颜色过滤。例如，在前面的图像中，我们定义了一个通过宽度缩放图像的转换，给出最大像素宽度和保持图像比例。如果我们启用**强制调整大小**复选框，我们将强制生成具有所需宽度的缩略图；这也适用于原始图像小于此宽度的情况。此外，还可以为不同的媒体查询应用不同的转换，以根据屏幕大小动态调整图像宽高比。
- en: Once you have defined the transformation pipeline, just click on **Save** to
    persist the thumbnail definition.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦定义了转换管道，只需点击**保存**即可持久化缩略图定义。
- en: 'What has been said for image thumbnails is also valid for video thumbnails.
    In the following figure, you can see how a video thumbnail definition appears:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 对于图像缩略图所说的也适用于视频缩略图。在下图中，你可以看到视频缩略图定义的外观：
- en: '![Figure 6.11: Video Thumbnails'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 6.11：视频缩略图'
- en: '](img/Figure_6.11_B17073.jpg)'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.11_B17073.jpg)'
- en: 'Figure 6.11: Video Thumbnails'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.11：视频缩略图
- en: As you can see in the figure, there are a limited number of possible settings
    for videos compared to images. Basically, for video thumbnails, we can define
    bitrates and scaling operations.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 如图中所示，与图像相比，视频的可设置选项有限。基本上，对于视频缩略图，我们可以定义比特率和缩放操作。
- en: Now that you have learned how to create thumbnail definitions, let's have a
    look at how to define a thumbnail that uses an image's focal point.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经学会了如何创建缩略图定义，让我们来看看如何定义一个使用图像焦点点的缩略图。
- en: Focal point on thumbnails
  id: totrans-168
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 缩略图上的焦点
- en: In the *Setting up focal points* subsection of the *Image Editing and Enrichment*
    section, you learned how to set up focal points for images.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 在**图像编辑和增强**部分的**设置焦点点**子节中，你学习了如何为图像设置焦点点。
- en: 'As mentioned in that subsection, focal points can be used to define a particular
    kind of thumbnail transformation. In the following figure, you can see how to
    set up this transformation:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 如该子节所述，焦点点可以用来定义特定类型的缩略图转换。在下图中，你可以看到如何设置这种转换：
- en: '![Figure 6.12: Thumbnail Cover Transformation'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 6.12：缩略图封面转换'
- en: '](img/Figure_6.12_B17073.jpg)'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.12_B17073.jpg)'
- en: 'Figure 6.12: Thumbnail Cover Transformation'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.12：缩略图封面转换
- en: As you can see in the previous figure, you can add a **Cover** transformation,
    which supports the usage of the focal points. This kind of transformation will
    create a cropped image centered by the focal point. The size of this thumbnail
    is defined through the **Width** and **Height** parameters.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 如前图所示，你可以添加一个**封面**转换，它支持焦点点的使用。这种转换将创建一个以焦点为中心的裁剪图像。这个缩略图的大小是通过**宽度**和**高度**参数定义的。
- en: If no focal points are set for the image, the **Default Positioning** parameter
    will let you create a cropped image placed in the defined position.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有为图像设置焦点点，**默认定位**参数将允许你创建一个放置在定义位置的裁剪图像。
- en: In the next section, we will see how to invoke thumbnails on templates and how
    to dynamically generate a public thumbnail URL.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将看到如何在模板上调用缩略图以及如何动态生成公共缩略图 URL。
- en: Using Thumbnails
  id: totrans-177
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用缩略图
- en: In the previous section, you learned how to define thumbnails for images and
    videos. In this section, we will see how these thumbnails can be used in template
    and backend development. Then, we will show you how to dynamically generate public
    URLs to retrieve thumbnails in external applications.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一节中，你学习了如何为图像和视频定义缩略图。在本节中，我们将看到这些缩略图如何在模板和后端开发中使用。然后，我们将向你展示如何在外部应用程序中动态生成公共
    URL 来检索缩略图。
- en: Usage Examples
  id: totrans-179
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用示例
- en: 'Let''s show some code tips to explain how to use thumbnails. First of all,
    you need to get an instance of an asset; this lets you call the `getThumbnail`
    method, as we will show you here:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过一些代码技巧来展示如何使用缩略图。首先，你需要获取一个资源实例；这让你可以调用`getThumbnail`方法，就像我们在这里展示的那样：
- en: '[PRE2]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'In the previous code snippet, we can see how to retrieve an image thumbnail
    given the name of a previously created thumbnail definition. This method also
    permits the creation of a custom thumbnail definition on the fly, passing the
    thumbnail configuration as an input, as we can see in the following snippet:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的代码片段中，我们可以看到如何根据先前创建的缩略图定义的名称检索图像缩略图。此方法还允许在运行时创建自定义缩略图定义，通过传递缩略图配置作为输入，如下面的代码片段所示：
- en: '[PRE3]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: As we can see, we can create a custom thumbnail by setting basic configuration
    options like `width` and `format`.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，我们可以通过设置基本的配置选项，如`width`和`format`，来创建一个自定义缩略图。
- en: 'The retrieved thumbnail can be placed in HTML templates. As we can see in the
    following snippet, one option is to set the source property for an image tag:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 获取的缩略图可以放置在HTML模板中。正如我们在下面的代码片段中所见，一个选项是为图像标签设置源属性：
- en: '[PRE4]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The `getPath` method retrieves the filesystem path and can be used to set the
    image tag source; this method is called automatically if omitted because it's
    called by the implicit `__toString` function.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '`getPath`方法检索文件系统路径，并可用于设置图像标签的源；如果省略此方法，它将自动调用，因为它是由隐式的`__toString`函数调用的。'
- en: 'As an alternative, we have the option to let the thumbnail generate the HTML
    tag itself:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 作为替代，我们还有一个选项让缩略图自己生成HTML标签：
- en: '[PRE5]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The `getHtml` method returns the image HTML tag; as an input of this method,
    we can pass an array of properties that will be applied to the tag. This could
    be useful to dynamically add a CSS class or data properties such as alternate
    text.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: '`getHtml`方法返回图像HTML标签；作为此方法的输入，我们可以传递一个属性数组，这些属性将应用于标签。这可能有助于动态添加CSS类或数据属性，如替代文本。'
- en: 'If you are using media queries in your thumbnail configuration, the `getHtml`
    method will return a picture HTML tag instead. If you want to require the image
    tag for a specific format, you can use the `getMedia` function, as you can see
    in the following code snippet:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在你的缩略图配置中使用媒体查询，`getHtml`方法将返回一个图片HTML标签。如果你想为特定格式要求图像标签，你可以使用`getMedia`函数，如下面的代码片段所示：
- en: '[PRE6]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The defined image thumbnail definitions can also be used to show a preview
    image of a video when we need to insert a video asset in a template. In the following
    snippet, we can see how to acquire these snapshots:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 定义好的图像缩略图定义也可以用来在需要将视频资源插入模板时显示视频的预览图像。在下面的代码片段中，我们可以看到如何获取这些快照：
- en: '[PRE7]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: As we can see in the code, the `getImageThumbnail` method accepts a thumbnail
    definition name or an inline configuration as an input. As a second parameter,
    we can specify which second of the video we want to take a snapshot of.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们在代码中所见，`getImageThumbnail`方法接受一个缩略图定义名称或一个内联配置作为输入。作为第二个参数，我们可以指定我们想要从视频中截取的哪一秒。
- en: All these examples show how to use assets internally, but every asset in Pimcore
    has also a public URL, and the same goes for thumbnails. Let's see how to dynamically
    generate a thumbnail URL given asset information.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些示例都展示了如何内部使用资源，但Pimcore中的每个资源都有一个公开的URL，缩略图也是如此。让我们看看如何根据资源信息动态生成缩略图URL。
- en: Downloading Thumbnails
  id: totrans-197
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 下载缩略图
- en: 'Pimcore thumbnails are dynamically generated the first time they are requested
    for download or when they have to be shown on a page. To make a thumbnail downloadable
    from the asset details panel, you must check the **List as option in download
    section on image detail view** flag on the thumbnail definition. As we can see
    in the following figure, all thumbnails with this option enabled are listed in
    the **Download Thumbnail** dropdown on the detail view of an asset:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: Pimcore缩略图在第一次请求下载或需要在页面上显示时动态生成。要使缩略图可以从资产详情面板下载，你必须检查缩略图定义中的**下载部分列表选项**标志在图像详情视图中。正如我们在下面的图中所见，所有启用了此选项的缩略图都列在资产的**下载缩略图**下拉菜单中：
- en: '![Figure 6.13: Download Thumbnail'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.13：下载缩略图'
- en: '](img/Figure_6.13_B17073.jpg)'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.13：下载缩略图](img/Figure_6.13_B17073.jpg)'
- en: 'Figure 6.13: Download Thumbnail'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.13：下载缩略图
- en: To download a thumbnail, you just need to select the desired thumbnail definition
    from the dropdown that you can see in the figure and click the **Download** button.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 要下载缩略图，你只需从图中可以看到的下拉菜单中选择所需的缩略图定义，然后点击**下载**按钮。
- en: 'Thumbnails can be also accessed and downloaded through a web browser by their
    public URLs. These URLs come with a fixed rule to define them. Let''s look at
    the following example URL:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 缩略图也可以通过它们的公共 URL 通过网络浏览器访问和下载。这些 URL 具有固定的规则来定义它们。让我们看看以下示例 URL：
- en: https://your-pimcore-url.com/Path/To/The/image-thumb__123__my-thumbnail/Image.jpg
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: https://your-pimcore-url.com/Path/To/The/image-thumb__123__my-thumbnail/Image.jpg
- en: 'Let''s explain all the parts that compose the previous URL:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们解释构成前面 URL 的所有部分：
- en: '**https://your-pimcore-url.com**: This is the base URL of your Pimcore installation.'
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**https://your-pimcore-url.com**：这是您 Pimcore 安装的基准 URL。'
- en: '**Path/To/The**: This is the path of folders and subfolders in which the image
    is contained.'
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Path/To/The**：这是包含图片的文件夹和子文件夹的路径。'
- en: '**image-thumb**: This is a fixed part of the URL to specify that you require
    a thumbnail.'
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**image-thumb**：这是 URL 中的一个固定部分，用于指定您需要缩略图。'
- en: '**123**: The ID of the asset. It''s preceded and followed by two underscores.'
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**123**：资产的 ID。它由两个下划线前后包围。'
- en: '**my-thumbnail**: The name of the thumbnail definition.'
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**my-thumbnail**：缩略图定义的名称。'
- en: '**Image.jpg**: The name of the image.'
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Image.jpg**：图片的名称。'
- en: Using this pattern, you can dynamically generate public URLs for all the thumbnail
    definitions starting from the image path and ID.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这种模式，您可以从图片路径和 ID 开始动态生成所有缩略图定义的公共 URL。
- en: To summarize, in this section, you learned how to define different thumbnails
    for images and videos by defining a pipeline of transformation rules. Then, you
    saw some code examples showing how to practically use thumbnails during development.
    In the last part, you discovered how to dynamically generate the public URL for
    a thumbnail to make it downloadable.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，在本节中，您学习了如何通过定义转换规则管道来定义图像和视频的不同缩略图。然后，您看到了一些代码示例，展示了如何在开发期间实际使用缩略图。在最后一部分，您发现了如何动态生成缩略图的公共
    URL 以使其可下载。
- en: Summary
  id: totrans-214
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we introduced Pimcore's **Digital Asset Management** (**DAM**)
    feature. After defining the common characteristics of all DAM systems, we presented
    how these characteristics are implemented in Pimcore.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们介绍了 Pimcore 的 **数字资产管理** (**DAM**) 功能。在定义了所有 DAM 系统的共同特征之后，我们展示了这些特征如何在
    Pimcore 中实现。
- en: We then learned how to upload assets in Pimcore, selecting various formats of
    files from different kinds of sources, which could be offline or online. Then,
    we learned how to organize assets using folders and tags and how to relate assets
    to objects. In particular, we presented the different data components that can
    be used to attach assets to objects.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 我们随后学习了如何在 Pimcore 中上传资产，从不同类型的来源选择各种格式的文件，这些来源可以是离线或在线的。然后，我们学习了如何使用文件夹和标签来组织资产，以及如何将资产与对象关联起来。特别是，我们介绍了可以用来将资产附加到对象的不同数据组件。
- en: After that, we saw how to edit images through the integrated editor and how
    to enhance image content by defining metadata for them. In particular, we learned
    how to create predefined metadata definitions and how to define custom metadata
    for each asset.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们看到了如何通过集成编辑器编辑图片，以及如何通过为它们定义元数据来增强图片内容。特别是，我们学习了如何创建预定义的元数据定义以及如何为每个资产定义自定义元数据。
- en: We then focused on asset distribution, learning how to create thumbnail definitions
    for images and videos. We saw how to practically use thumbnails in development,
    showing some code snippets, and how to dynamically generate public URLs for thumbnails.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 我们随后专注于资产分发，学习了如何为图片和视频创建缩略图定义。我们展示了如何在开发中实际使用缩略图，展示了代码片段，以及如何动态生成缩略图的公共 URL。
- en: In the next chapter, we will cover the administration of Pimcore sites, explaining
    how to install third parties' plugins and how to manage users and roles.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将介绍 Pimcore 网站的行政管理，解释如何安装第三方插件以及如何管理用户和角色。
