- en: Chapter 2. Building Your First Zend Framework Application
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二章 构建您的第一个 Zend Framework 应用程序
- en: '*In this chapter, we are going to create our first Zend Framework 2.0 project;
    we will be reviewing some of the key aspects of building a ZF2 MVC Application
    by creating modules, controllers, and views. We will be creating our own custom
    module in Zend Framework which will be enhanced further in subsequent chapters
    of this book.*'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '*在本章中，我们将创建我们的第一个 Zend Framework 2.0 项目；我们将通过创建模块、控制器和视图来回顾构建 ZF2 MVC 应用程序的一些关键方面。我们将在
    Zend Framework 中创建自己的自定义模块，该模块将在本书的后续章节中得到进一步扩展。*'
- en: Prerequisites
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 先决条件
- en: 'Before you get started with setting up your first ZF2 Project, make sure that
    you have the following software installed and configured in your development environment:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在您开始设置第一个 ZF2 项目之前，请确保您已在您的开发环境中安装并配置了以下软件：
- en: PHP Command Line Interface
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PHP 命令行界面
- en: '**Git**: Git is needed to check out source code from various [github.com](http://github.com)
    repositories'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Git**：Git 用于从各种 [github.com](http://github.com) 仓库检出源代码'
- en: '**Composer**: Composer is the dependency management tool used for managing
    PHP dependencies'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Composer**：Composer 是用于管理 PHP 依赖的依赖管理工具'
- en: Tip
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'The following commands will be useful for installing the necessary tools to
    setup a ZF2 Project:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令将有助于安装设置 ZF2 项目所需的工具：
- en: 'To install PHP Command Line Interface:'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要安装 PHP 命令行界面：
- en: '**$ sudo apt-get install php5-cli**'
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**$ sudo apt-get install php5-cli**'
- en: 'To install Git:'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要安装 Git：
- en: '**$ sudo apt-get install git**'
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**$ sudo apt-get install git**'
- en: 'To install Composer:'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要安装 Composer：
- en: '**$ curl -s https://getcomposer.org/installer | php**'
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**$ curl -s https://getcomposer.org/installer | php**'
- en: ZendSkeletonApplication
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ZendSkeletonApplication
- en: '`ZendSkeletonApplication` provides a sample skeleton application that can be
    used by developers as a starting point to get started with Zend Framework 2.0\.
    The skeleton application makes use of ZF2 MVC, including a new module system.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '`ZendSkeletonApplication` 为开发者提供了一个示例骨架应用程序，可以作为开始使用 Zend Framework 2.0 的起点。骨架应用程序使用了
    ZF2 MVC，包括一个新的模块系统。'
- en: '`ZendSkeletonApplication` can be downloaded from GitHub ([https://github.com/zendframework/ZendSkeletonApplication](https://github.com/zendframework/ZendSkeletonApplication)).'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '`ZendSkeletonApplication` 可从 GitHub 下载 ([https://github.com/zendframework/ZendSkeletonApplication](https://github.com/zendframework/ZendSkeletonApplication))。'
- en: Time for action – creating a Zend Framework project
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 – 创建 Zend Framework 项目
- en: 'To set up a new Zend Framework project, we will need to download the latest
    version of `ZendSkeletonApplication` and set up a virtual host to point to the
    newly created Zend Framework project. The steps are given as follows:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 要设置新的 Zend Framework 项目，我们需要下载最新版本的 `ZendSkeletonApplication` 并设置一个虚拟主机以指向新创建的
    Zend Framework 项目。步骤如下：
- en: 'Navigate to a folder location where you want to set up the new Zend Framework
    project:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到您想要设置新 Zend Framework 项目的文件夹位置：
- en: '[PRE0]'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Clone the `ZendSkeletonApplication` app from GitHub:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 GitHub 克隆 `ZendSkeletonApplication` 应用程序：
- en: '[PRE1]'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![Time for action – creating a Zend Framework project](img/1929OS_02_08.jpg)'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间 – 创建 Zend Framework 项目](img/1929OS_02_08.jpg)'
- en: Tip
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: In some Linux configurations, necessary permissions may not be available to
    the current user for writing to `/var/www`. In such cases, you can use any folder
    that is writable and make necessary changes to the virtual host configuration.
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在某些 Linux 配置中，当前用户可能没有写入 `/var/www` 的必要权限。在这种情况下，您可以使用任何可写文件夹并对虚拟主机配置进行必要的更改。
- en: 'Install dependencies using Composer:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Composer 安装依赖项：
- en: '[PRE2]'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The following screenshot shows how Composer downloads and installs the necessary
    dependencies:'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下截图显示了 Composer 下载和安装必要依赖项的过程：
- en: '![Time for action – creating a Zend Framework project](img/1929OS_02_01.jpg)'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间 – 创建 Zend Framework 项目](img/1929OS_02_01.jpg)'
- en: 'Before adding a virtual host entry we need to set up a hostname entry in our
    hosts file so that the system points to the local machine whenever the new hostname
    is used. In Linux this can be done by adding an entry to the `/etc/hosts` file:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在添加虚拟主机条目之前，我们需要在我们的 `hosts` 文件中设置一个主机名条目，以便系统在每次使用新主机名时指向本地计算机。在 Linux 中，这可以通过向
    `/etc/hosts` 文件添加条目来完成：
- en: '[PRE3]'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Tip
  id: totrans-33
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: In Windows, this file can be accessed at `%SystemRoot%\system32\drivers\etc\hosts`.
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 Windows 中，此文件可以在 `%SystemRoot%\system32\drivers\etc\hosts` 中访问。
- en: 'Add the following line to the `hosts` file:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下行添加到 `hosts` 文件中：
- en: '[PRE4]'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The final `hosts` file should look like the following:'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 最终的 `hosts` 文件应如下所示：
- en: '![Time for action – creating a Zend Framework project](img/1929OS_02_02.jpg)'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间 – 创建 Zend Framework 项目](img/1929OS_02_02.jpg)'
- en: 'Our next step would be to add a virtual host entry on our web server; this
    can be done by creating a new virtual host''s configuration file:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们下一步将是在我们的 web 服务器上添加一个虚拟主机条目；这可以通过创建一个新的虚拟主机配置文件来完成：
- en: '[PRE5]'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Tip
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: This new virtual host filename could be different for you depending upon the
    web server that you use; please check out your web server documentation for setting
    up new virtual hosts.
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个新的虚拟主机文件名可能因您使用的 web 服务器而异；请查阅您的 web 服务器文档以设置新的虚拟主机。
- en: For example, if you have Apache2 running on Linux, you will need to create the
    new virtual host file in `/etc/apache2/sites-available` and enable the site using
    the command `a2ensite comm-app.local`.
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 例如，如果您在 Linux 上运行 Apache2，您需要在 `/etc/apache2/sites-available` 中创建新的虚拟主机文件，并使用命令
    `a2ensite comm-app.local` 启用该站点。
- en: 'Add the following configuration to the virtual host file:'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下配置添加到虚拟主机文件中：
- en: '[PRE6]'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Tip
  id: totrans-46
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: If you are using a different path for checking out the `ZendSkeletonApplication`
    project make sure that you include that path for both `DocumentRoot` and `Directory`
    directives.
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果您使用不同的路径来检出 `ZendSkeletonApplication` 项目，请确保您在 `DocumentRoot` 和 `Directory`
    指令中都包含该路径。
- en: 'After configuring the virtual host file, the web server needs to be restarted:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在配置虚拟主机文件后，需要重新启动 web 服务器：
- en: '[PRE7]'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Once the installation is completed, you should be able to open `http://comm-app.local`
    on your web browser. This should take you to the following test page :![Time for
    action – creating a Zend Framework project](img/1929OS_02_03.jpg)
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装完成后，您应该能够在您的网页浏览器中打开 `http://comm-app.local`。这应该会带您到以下测试页面：![动手时间 – 创建 Zend
    Framework 项目](img/1929OS_02_03.jpg)
- en: Tip
  id: totrans-51
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Test rewrite rules**'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**测试重写规则**'
- en: In some cases, `mod_rewrite` may not have been enabled in your web server by
    default; to check if the URL redirects are working properly, try to navigate to
    an invalid URL such as `http://comm-app.local/12345`; if you get an Apache 404
    page, then the `.htaccess` rewrite rules are not working; they will need to be
    fixed, otherwise if you get a page like the following one, you can be sure of
    the URL working as expected.
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在某些情况下，`mod_rewrite` 可能默认没有在您的 web 服务器上启用；为了检查 URL 重定向是否正常工作，尝试导航到一个无效的 URL，例如
    `http://comm-app.local/12345`；如果您得到一个 Apache 404 页面，那么 `.htaccess` 重写规则没有正常工作；它们需要被修复，否则如果您得到如下所示的页面，您可以确信
    URL 正常工作。
- en: '![Time for action – creating a Zend Framework project](img/1929OS_02_04.jpg)'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![动手时间 – 创建 Zend Framework 项目](img/1929OS_02_04.jpg)'
- en: '*What just happened?*'
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: We have successfully created a new ZF2 project by checking out `ZendSkeletonApplication`
    from GitHub and have used Composer to download the necessary dependencies including
    Zend Framework 2.0\. We have also created a virtual host configuration that points
    to the project's `public` folder and tested the project in a web browser.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经通过从 GitHub 检出 `ZendSkeletonApplication` 并使用 Composer 下载必要的依赖项（包括 Zend Framework
    2.0）成功创建了一个新的 ZF2 项目。我们还创建了一个指向项目 `public` 文件夹的虚拟主机配置，并在网页浏览器中测试了该项目。
- en: Tip
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Downloading the example code**'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '**下载示例代码**'
- en: You can download the example code files for all Packt books you have purchased
    from your account at [http://www.packtpub.com](http://www.packtpub.com). If you
    purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从您在 [http://www.packtpub.com](http://www.packtpub.com) 的账户下载您购买的所有 Packt
    书籍的示例代码文件。如果您在其他地方购买了这本书，您可以访问 [http://www.packtpub.com/support](http://www.packtpub.com/support)
    并注册以将文件直接通过电子邮件发送给您。
- en: Tip
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Alternate installation options**'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**其他安装选项**'
- en: We have seen just one of the methods of installing `ZendSkeletonApplication`;
    there are other ways of doing this.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到了安装 `ZendSkeletonApplication` 的一种方法；还有其他的方法可以做到这一点。
- en: 'You can use Composer to directly download the skeleton application and create
    the project using the following command:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用 Composer 直接下载骨架应用程序，并使用以下命令创建项目：
- en: '[PRE8]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'You can also use a recursive Git clone to create the same project:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用递归 Git 克隆来创建相同的项目：
- en: '[PRE9]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Refer to:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 参考：
- en: '[http://framework.zend.com/downloads/skeleton-app](http://framework.zend.com/downloads/skeleton-app)'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://framework.zend.com/downloads/skeleton-app](http://framework.zend.com/downloads/skeleton-app)'
- en: Zend Framework 2.0 – modules
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Zend Framework 2.0 – 模块
- en: In Zend Framework, a module can be defined as a unit of software that is portable
    and reusable and can be interconnected to other modules to construct a larger,
    complex application.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Zend Framework 中，一个模块可以被定义为一种可移植和可重用的软件单元，它可以与其他模块相互连接，构建更大、更复杂的应用程序。
- en: Modules are not new in Zend Framework, but with ZF2, there is a complete overhaul
    in the way modules are used in Zend Framework. With ZF2, modules can be shared
    across various systems, and they can be repackaged and distributed with relative
    ease. One of the other major changes coming into ZF2 is that even the main application
    is now converted into a module; that is, the application module.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 模块在Zend Framework中并不新鲜，但使用ZF2，模块在Zend Framework中的使用方式进行了全面革新。在ZF2中，模块可以在各种系统间共享，并且可以相对容易地进行重新打包和分发。即将到来的ZF2的另一个重大变化是，主应用程序现在也被转换成了一个模块；即应用程序模块。
- en: 'Some of the key advantages of Zend Framework 2.0 modules are listed as follows:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 以下列出了Zend Framework 2.0模块的一些关键优势：
- en: Self-contained, portable, reusable
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自包含、便携、可重用
- en: Dependency management
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 依赖管理
- en: Lightweight and fast
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 轻量级且快速
- en: Support for Phar packaging and Pyrus distribution
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Phar打包和Pyrus分发的支持
- en: Zend Framework 2.0 – project folder structure
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Zend Framework 2.0 – 项目文件夹结构
- en: 'The folder layout of a ZF2 project is shown as follows:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: ZF2项目的文件夹布局如下所示：
- en: '![Zend Framework 2.0 – project folder structure](img/1929OS_02_05.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![Zend Framework 2.0 – 项目文件夹结构](img/1929OS_02_05.jpg)'
- en: '| Folder name | Description |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| 文件夹名称 | 描述 |'
- en: '| --- | --- |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `config` | Used for managing application configuration. |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| `config` | 用于管理应用程序配置。 |'
- en: '| `data` | Used as a temporary storage location for storing application data
    including cache files, session files, logs, and indexes. |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| `data` | 用作存储应用程序数据的临时存储位置，包括缓存文件、会话文件、日志和索引。 |'
- en: '| `module` | Used to manage all application code. |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| `module` | 用于管理所有应用程序代码。 |'
- en: '| `module/Application` | This is the default application module that is provided
    with `ZendSkeletonApplication`. |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| `module/Application` | 这是与`ZendSkeletonApplication`一起提供的默认应用程序模块。 |'
- en: '| `public` | Serves as an entry point to the application; the website''s document
    root points here. All web resources including CSS files, images, and JavaScripts
    are stored here. |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| `public` | 作为应用程序的入口点；网站的文档根目录指向此处。所有网络资源，包括CSS文件、图像和JavaScript，都存储在此处。 |'
- en: '| `vendor` | Used to manage common libraries that are used by the application.
    Zend Framework is also installed in this folder. |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| `vendor` | 用于管理应用程序使用的通用库。Zend Framework也安装在此文件夹中。 |'
- en: '| `vendor/zendframework` | Zend Framework 2.0 is installed here. |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| `vendor/zendframework` | Zend Framework 2.0安装在此处。 |'
- en: Time for action – creating a module
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作时间 – 创建模块
- en: 'Our next activity will be about creating a new `Users` module in Zend Framework
    2.0\. The `Users` module will be used for managing users including user registration,
    authentication, and so on. We will be making use of `ZendSkeletonModule` provided
    by Zend, shown as follows:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 我们接下来的活动将是关于在Zend Framework 2.0中创建一个新的`Users`模块。`Users`模块将用于管理用户，包括用户注册、认证等。我们将利用Zend提供的`ZendSkeletonModule`，如下所示：
- en: 'Navigate to the application''s `module` folder:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到应用程序的`module`文件夹：
- en: '[PRE10]'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Clone `ZendSkeletonModule` into a desired module name, in this case it is `Users`:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`ZendSkeletonModule`克隆到所需的模块名称中，在本例中是`Users`：
- en: '[PRE11]'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: After the checkout is complete, the folder structure should look like the following
    screenshot:![Time for action – creating a module](img/1929OS_02_09.jpg)
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查出完成后，文件夹结构应如下截图所示：![操作时间 – 创建模块](img/1929OS_02_09.jpg)
- en: Edit `Module.php`; this file will be located in the `Users` folder under modules
    (`CommunicationApp/module/Users/module.php`) and change the namespace to `Users`.
    Replace `namespace ZendSkeletonModule;` with `namespace Users;`.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑`Module.php`；此文件位于模块下的`Users`文件夹中（`CommunicationApp/module/Users/module.php`），并将命名空间更改为`Users`。将`namespace
    ZendSkeletonModule;`替换为`namespace Users;`。
- en: 'The following folders can be removed because we will not be using them in our
    project:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下文件夹可以删除，因为我们不会在我们的项目中使用它们：
- en: '`* Users/src/ZendSkeletonModule`'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`* Users/src/ZendSkeletonModule`'
- en: '`* Users/view/zend-skeleton-module`'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`* Users/view/zend-skeleton-module`'
- en: '*What just happened?*'
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: We have installed a skeleton module for Zend Framework; this is just an empty
    module, and we will need to extend this by creating custom controllers and views.
    In our next activity, we will focus on creating new controllers and views for
    this module.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经为Zend Framework安装了一个骨架模块；这只是一个空模块，我们需要通过创建自定义控制器和视图来扩展它。在我们的下一个活动中，我们将专注于为该模块创建新的控制器和视图。
- en: Tip
  id: totrans-102
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Creating a module using ZFTool**'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '**使用ZFTool创建模块**'
- en: '`ZFTool` is a utility for managing Zend Framework applications/projects, and
    it can also be used for creating new modules; in order to do that, you will need
    to install `ZFTool` and use the `create module` command to create the module using
    `ZFTool`:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '`ZFTool` 是一个用于管理 Zend Framework 应用程序/项目的实用工具，也可以用于创建新模块；为了做到这一点，您需要安装 `ZFTool`
    并使用 `create module` 命令通过 `ZFTool` 创建模块：'
- en: '[PRE12]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Read more about ZFTool at the following link:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下链接中了解更多关于 ZFTool 的信息：
- en: '[http://framework.zend.com/manual/2.0/en/modules/zendtool.introduction.html](http://framework.zend.com/manual/2.0/en/modules/zendtool.introduction.html)'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://framework.zend.com/manual/2.0/en/modules/zendtool.introduction.html](http://framework.zend.com/manual/2.0/en/modules/zendtool.introduction.html)'
- en: MVC layer
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MVC 层
- en: 'The fundamental goal of any MVC Framework is to enable easier segregation of
    three layers of the MVC, namely, model, view, and controller. Before we get to
    the details of creating modules, let''s quickly try to understand how these three
    layers work in an MVC Framework:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 任何 MVC 框架的基本目标都是使 MVC 的三层（模型、视图和控制器）更容易分离。在我们深入了解创建模块的细节之前，让我们快速了解一下这三个层在 MVC
    框架中的工作方式：
- en: '**Model**: The model is a representation of data; the model also holds the
    business logic for various application transactions.'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型**：模型是数据的表示；模型还持有各种应用程序事务的业务逻辑。'
- en: '**View**: The view contains the display logic that is used to display the various
    user interface elements in the web browser.'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**视图**：视图包含用于在网页浏览器中显示各种用户界面元素的显示逻辑。'
- en: '**Controller**: The controller controls the application logic in any MVC application;
    all actions and events are handled at the controller layer. The controller layer
    serves as a communication interface between the model and the view by controlling
    the model state and also by representing the changes to the view. The controller
    also provides an entry point for accessing the application.'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**控制器**：控制器控制任何 MVC 应用程序中的应用程序逻辑；所有操作和事件都在控制器层处理。控制器层通过控制模型状态和表示视图的变化，充当模型和视图之间的通信接口。控制器还提供了访问应用程序的入口点。'
- en: In the new ZF2 MVC structure, all the models, views, and controllers are grouped
    by modules. Each module will have its own set of models, views, and controllers,
    and will share some components with other modules.
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在新的 ZF2 MVC 结构中，所有模型、视图和控制器都按模块分组。每个模块都将有自己的模型、视图和控制器集合，并且将与其他模块共享一些组件。
- en: Zend Framework module – folder structure
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Zend Framework 模块 – 文件夹结构
- en: 'The folder structure of Zend Framework 2.0 module has three vital components—the
    configurations, the module logic, and the views. The following table describes
    how contents in a module are organized:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: Zend Framework 2.0 模块的文件夹结构有三个关键组件——配置、模块逻辑和视图。以下表格描述了模块中内容的组织方式：
- en: '| Folder name | Description |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| 文件夹名称 | 描述 |'
- en: '| --- | --- |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `config` | Used for managing module configuration |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: '| `config` | 用于管理模块配置 |'
- en: '| `src` | Contains all module source code, including all controllers and models
    |'
  id: totrans-119
  prefs: []
  type: TYPE_TB
  zh: '| `src` | 包含所有模块源代码，包括所有控制器和模型 |'
- en: '| `view` | Used to store all the views used in the module |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
  zh: '| `view` | 用于存储模块中使用的所有视图 |'
- en: Time for action – creating controllers and views
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 – 创建控制器和视图
- en: 'Now that we have created the module, our next step would be having our own
    controllers and views defined. In this section, we will create two simple views
    and will write a controller to switch between them:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经创建了模块，我们的下一步就是定义我们自己的控制器和视图。在本节中，我们将创建两个简单的视图，并编写一个控制器在它们之间切换：
- en: 'Navigate to the module location:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到模块位置：
- en: '[PRE13]'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Create the folder for controllers:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建控制器文件夹：
- en: '[PRE14]'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Create a new `IndexController` file, `< ModuleName >/src/<ModuleName>/Controller/`:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的 `IndexController` 文件，`< ModuleName >/src/<ModuleName>/Controller/`：
- en: '[PRE15]'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Add the following code to the `IndexController` file:'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码添加到 `IndexController` 文件中：
- en: '[PRE16]'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The preceding code will do the following actions; if the user visits the home
    page, the user is shown the default view; if the user arrives with an action `register`,
    the user is shown the `new-user` template; and if the user arrives with an action
    set to `login`, then the `login` template is rendered.
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 上述代码将执行以下操作；如果用户访问主页，用户将看到默认视图；如果用户通过操作 `register` 到达，用户将看到 `new-user` 模板；如果用户通过设置操作为
    `login` 到达，则渲染 `login` 模板。
- en: Now that we have created the controller, we will have to create necessary views
    to render for each of the controller actions.
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们已经创建了控制器，我们将必须为每个控制器操作创建必要的视图。
- en: 'Create the folder for views:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建视图文件夹：
- en: '[PRE17]'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Navigate to the views folder, `<Module>/view/<module-name>/index`:'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到视图文件夹，`<Module>/view/<module-name>/index`：
- en: '[PRE18]'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Create the following view files:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建以下视图文件：
- en: '`index`'
  id: totrans-138
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`index`'
- en: '`login`'
  id: totrans-139
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`login`'
- en: '`new-user`'
  id: totrans-140
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`new-user`'
- en: 'For creating the `view/users/index/index.phtml` file, use the following code:'
  id: totrans-141
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了创建`view/users/index/index.phtml`文件，使用以下代码：
- en: '[PRE19]'
  id: totrans-142
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'For creating the `view/users/index/login.phtml` file, use the following code:'
  id: totrans-143
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了创建`view/users/index/login.phtml`文件，使用以下代码：
- en: '[PRE20]'
  id: totrans-144
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'For creating the `view/users/index/new-user.phtml` file, use the following
    code:'
  id: totrans-145
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了创建`view/users/index/new-user.phtml`文件，使用以下代码：
- en: '[PRE21]'
  id: totrans-146
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '*What just happened?*'
  id: totrans-147
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: We have now created a new controller and views for our new Zend Framework module;
    the module is still not in a shape to be tested. To make the module fully functional
    we will need to make changes to the module's configuration, and also enable the
    module in the application's configuration.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在为我们的新Zend Framework模块创建了一个新的控制器和视图；该模块目前还没有达到可以测试的状态。为了使模块完全功能化，我们需要对模块的配置进行更改，并在应用程序的配置中启用该模块。
- en: Zend Framework module – configuration
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Zend Framework模块 – 配置
- en: 'Zend Framework 2.0 module configuration is spread across a series of files
    which can be found in the skeleton module. Some of the configuration files are
    described as follows:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: Zend Framework 2.0模块配置分散在一系列文件中，这些文件可以在骨架模块中找到。以下是一些配置文件的描述：
- en: '`Module.php`: The Zend Framework 2 module manager looks for the `Module.php`
    file in the module''s root folder. The module manager uses the `Module.php` file
    to configure the module and invokes the `getAutoloaderConfig()` and `getConfig()`
    methods.'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Module.php`：Zend Framework 2模块管理器在模块的根目录中查找`Module.php`文件。模块管理器使用`Module.php`文件来配置模块，并调用`getAutoloaderConfig()`和`getConfig()`方法。'
- en: '`autoload_classmap.php`: The `getAutoloaderConfig()` method in the skeleton
    module loads `autoload_classmap.php` to include any custom overrides other than
    the classes loaded using the standard autoloader format. Entries can be added
    or removed to the `autoload_classmap.php` file to manage these custom overrides.'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`autoload_classmap.php`：骨架模块中的`getAutoloaderConfig()`方法加载`autoload_classmap.php`以包含除使用标准自动加载格式加载的类之外的所有自定义覆盖。可以向`autoload_classmap.php`文件中添加或删除条目以管理这些自定义覆盖。'
- en: '`config/module.config.php`: The `getConfig()` method loads `config/module.config.php`;
    this file is used for configuring various module configuration options including
    routes, controllers, layouts, and various other configurations.'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config/module.config.php`：`getConfig()`方法加载`config/module.config.php`；此文件用于配置各种模块配置选项，包括路由、控制器、布局以及各种其他配置。'
- en: Time for action – modifying module configuration
  id: totrans-154
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 – 修改模块配置
- en: 'In this section will make configuration changes to the `Users` module to enable
    it to work with the newly created controller and views using the following steps:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将对`Users`模块进行配置更改，使其能够使用以下步骤与新建的控制器和视图一起工作：
- en: '**Autoloader configuration** – The default autoloader configuration provided
    by the `ZendSkeletonModule` needs to be disabled; this can be done by editing
    `autoload_classmap.php` and replacing it with the following content:'
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**自动加载配置** – 由`ZendSkeletonModule`提供的默认自动加载配置需要被禁用；这可以通过编辑`autoload_classmap.php`并替换为以下内容来完成：'
- en: '[PRE22]'
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '**Module configuration** – The module configuration file can be found in `config/module.config.php`;
    this file needs to be updated to reflect the new controllers and views that have
    been created, as follows:'
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**模块配置** – 模块配置文件位于`config/module.config.php`中；此文件需要更新以反映已创建的新控制器和视图，如下所示：'
- en: '**Controllers** – The default controller mapping points to the `ZendSkeletonModule`;
    this needs to be replaced with the mapping shown in the following snippet:'
  id: totrans-159
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**控制器** – 默认控制器映射指向`ZendSkeletonModule`；这需要替换为以下片段中显示的映射：'
- en: '[PRE23]'
  id: totrans-160
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '**Views** – The views for the module have to be mapped to the appropriate view
    location. Make sure that the view uses lowercase names separated by a hyphen (for
    example, `ZendSkeleton` will be referred to as zend-skeleton):'
  id: totrans-161
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**视图** – 模块的视图需要映射到适当的视图位置。确保视图使用由连字符分隔的小写名称（例如，`ZendSkeleton`将被称为zend-skeleton）：'
- en: '[PRE24]'
  id: totrans-162
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '**Routes** – The last module configuration is to define a route for accessing
    this module from the browser; in this case we are defining the route as `/users`,
    which will point to the `index` action in the `Index` controller of the `Users`
    module:'
  id: totrans-163
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**路由** – 最后一个模块配置是定义一个从浏览器访问此模块的路由；在这种情况下，我们定义的路由为`/users`，它将指向`Users`模块的`Index`控制器的`index`操作：'
- en: '[PRE25]'
  id: totrans-164
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'After making all the configuration changes as detailed in the previous sections,
    the final configuration file, `config/module.config.php`, should look like the
    following:'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在上一节中详细说明的所有配置更改完成后，最终的配置文件 `config/module.config.php` 应该看起来像以下这样：
- en: '[PRE26]'
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '**Application configuration** – Enable the module in the application''s configuration—this
    can be done by modifying the application''s `config/application.config.php` file,
    and adding `Users` to the list of enabled modules:'
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**应用程序配置** – 在应用程序配置中启用模块，这可以通过修改应用程序的 `config/application.config.php` 文件，并将
    `Users` 添加到已启用模块列表中来实现：'
- en: '[PRE27]'
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: To test the module in a web browser, open `http://comm-app.local/users/` in
    your web browser; you should be able to navigate within the module.
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要在网页浏览器中测试模块，请在您的网页浏览器中打开 `http://comm-app.local/users/`；您应该能够在模块内进行导航。
- en: 'The module home page is shown as follows:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 模块主页如下所示：
- en: '![Time for action – modifying module configuration](img/1929OS_02_06.jpg)'
  id: totrans-171
  prefs: []
  type: TYPE_IMG
  zh: '![操作时间 – 修改模块配置](img/1929OS_02_06.jpg)'
- en: 'The registration page is shown as follows:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 注册页面如下所示：
- en: '![Time for action – modifying module configuration](img/1929OS_02_07.jpg)'
  id: totrans-173
  prefs: []
  type: TYPE_IMG
  zh: '![操作时间 – 修改模块配置](img/1929OS_02_07.jpg)'
- en: '*What just happened?*'
  id: totrans-174
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: We have modified the configuration of `ZendSkeletonModule` to work with the
    new controller and views created for the `Users` module. Now we have a fully-functional
    module up and running using the new ZF module system.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已修改 `ZendSkeletonModule` 的配置，使其与新创建的 `Users` 模块的控制器和视图一起工作。现在我们使用新的 ZF 模块系统拥有了一个完全功能性的模块并正在运行。
- en: Have a go hero
  id: totrans-176
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 尝试一下英雄
- en: 'Now that we have the knowledge to create and configure own modules, your next
    task would be to set up a new `CurrentTime` module. The requirement for this module
    is to render the current time and date in the following format:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了创建和配置自己模块的知识，您的下一个任务将是设置一个新的 `CurrentTime` 模块。此模块的要求是按照以下格式渲染当前时间和日期：
- en: '**Time: 14:00:00 GMT Date: 12-Oct-2012**'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '**时间：14:00:00 GMT 日期：2012年10月12日**'
- en: Pop quiz – Zend Framework 2.0
  id: totrans-179
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 快速测验 – Zend Framework 2.0
- en: Q1\. What is the tool used by `ZendSkeletonApplication` for managing dependencies
    in PHP?
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: Q1. `ZendSkeletonApplication` 在 PHP 中管理依赖关系所使用的工具是什么？
- en: Git
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Git
- en: Composer
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编曲家
- en: PHP Command Line Interface
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: PHP 命令行界面
- en: Pyrus
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Pyrus
- en: Q2\. What is the filename of a module's configuration file?
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: Q2. 模块配置文件的文件名是什么？
- en: '`<App>/module/<Module>/config.inc`'
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`<App>/module/<Module>/config.inc`'
- en: '`<App>/<Module>/config/config.php`'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`<App>/<Module>/config/config.php`'
- en: '`<App>/module/<Module>/module.config.php`'
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`<App>/module/<Module>/module.config.php`'
- en: '`<App>/module/<Module>/config/module.config.php`'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`<App>/module/<Module>/config/module.config.php`'
- en: Summary
  id: totrans-190
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: We have now learned about setting up a new Zend Framework project using Zend's
    skeleton application and module. In our next chapters, we will be focusing on
    further development on this module and extending it into a fully-fledged application.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经学习了如何使用 Zend 的骨架应用程序和模块来设置新的 Zend Framework 项目。在接下来的章节中，我们将专注于进一步开发此模块并将其扩展为一个完整的应用程序。
