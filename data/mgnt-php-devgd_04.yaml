- en: Chapter 4. Backend Development
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第四章：后端开发
- en: In the previous chapter, we added all the frontend functionality for the gift
    registry. Now, customers are able to create registries and add products to the
    customer registries, and in general, have full control over their own registries.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一章中，我们添加了礼品登记册的所有前端功能。现在，客户能够创建登记册并向客户登记册添加产品，并且通常可以完全控制自己的登记册。
- en: In this chapter, we are going build all the functionality that store owners
    need to manage and control the registries through the Magento backend.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将构建店主通过 Magento 后端管理和控制登记册所需的所有功能。
- en: The Magento backend can be considered, in many senses, as a separate application
    from the Magento frontend. It uses a completely separate theme, style, and a different
    base controller.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多方面，可以将 Magento 后端视为与 Magento 前端完全不同的应用程序。它使用完全不同的主题、样式和不同的基本控制器。
- en: 'For our gift registry, we want to allow store owners to see all customer registries,
    modify the information, and add/remove items. In this chapter, we will cover the
    following points:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的礼品登记册，我们希望允许店主查看所有客户登记册，修改信息，并添加/删除项目。在本章中，我们将涵盖以下内容：
- en: Extending Adminhtml with configuration
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用配置扩展 Adminhtml
- en: Using the grid widget
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用网格小部件
- en: Using the form widget
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用表单小部件
- en: Restricting access and permissions with **Access Control Lists** (**ACLs**)
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用**访问控制列表**（**ACLs**）限制访问和权限
- en: Extending Adminhtml
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 扩展 Adminhtml
- en: '`Mage_Adminhtml` is a single module that provides all the backend functionality
    for Magento through the usage of configuration. As we learned before, Magento
    uses scopes to define the configuration. In the previous chapter, we used the
    frontend scope to set up the configuration for our custom module.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '`Mage_Adminhtml` 是一个提供所有 Magento 后端功能的单一模块，它通过使用配置来实现。正如我们之前所学的，Magento 使用作用域来定义配置。在前一章中，我们使用了前端作用域来设置我们自定义模块的配置。'
- en: 'To modify the backend, we need to create a new scope in our configuration file
    called `admin`. Perform the following steps to do so:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 要修改后端，我们需要在我们的配置文件中创建一个新的作用域，命名为 `admin`。执行以下步骤来完成此操作：
- en: Open the `config.xml` file.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 `config.xml` 文件。
- en: 'Add the following code to the file located at `app/code/local/Mdg/Giftregistry/etc/config.xml`:'
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码添加到位于 `app/code/local/Mdg/Giftregistry/etc/config.xml` 的文件中：
- en: '[PRE0]'
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This code is very similar to the one we used before to specify our frontend
    route. However, by declaring the route this way, we are breaking an unwritten
    Magento design pattern.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码与我们之前用来指定前端路由的代码非常相似。然而，通过这种方式声明路由，我们打破了未成文的 Magento 设计模式。
- en: In order to keep things consistent on the backend, all new modules should extend
    the main admin route.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 为了保持后端的一致性，所有新的模块都应该扩展主要的管理员路由。
- en: Instead of defining the route with the previous code, we are creating a completely
    new admin route.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不是使用之前的代码定义路由，而是创建一个全新的管理员路由。
- en: Normally, you don't want to do this for the Magento backend unless you are creating
    a new route that requires admin access but not the rest of the Magento backend.
    A callback URL for an admin action would be a good example of something like this.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 通常情况下，除非你正在创建一个需要管理员访问但不需要 Magento 后端其他部分的新路由，否则你不想为 Magento 后端做这件事。管理员操作的回调
    URL 就是这样一个例子。
- en: Fortunately, there is a very easy way to share route names among Magento modules.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，有一个非常简单的方法可以在 Magento 模块之间共享路由名称。
- en: Note
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Sharing route names was introduced in Magento 1.3, but to this day, we still
    see extensions that don't use this pattern properly.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Magento 1.3 中引入了共享路由名称的功能，但时至今日，我们仍然看到一些扩展没有正确使用这种模式。
- en: 'Let''s update our code:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更新我们的代码：
- en: Open the `config.xml` file.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 `config.xml` 文件。
- en: 'Update the route''s configuration file located at `app/code/local/Mdg/Giftregistry/etc/config.xml`
    with the following code:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码更新位于 `app/code/local/Mdg/Giftregistry/etc/config.xml` 的路由配置文件：
- en: '[PRE1]'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: After making this change, we can properly access our `admin` controllers through
    the `admin` namespace, for example, `http://magento.localhost.com/giftregistry/index`
    will now be `http://magento.localhost.com/admin/giftregistry/index`.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 进行此更改后，我们可以通过 `admin` 命名空间正确访问我们的 `admin` 控制器，例如，`http://magento.localhost.com/giftregistry/index`
    现在将是 `http://magento.localhost.com/admin/giftregistry/index`。
- en: Our next step is to create a new controller that we can use to manage the customer
    registries. Let's call this controller `GiftregistryController.php`.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的下一步是创建一个新的控制器，我们可以使用它来管理客户登记册。让我们称这个控制器为 `GiftregistryController.php`。
- en: Navigate to your module's `controllers` folder.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到您的模块的 `controllers` 文件夹。
- en: Create a new folder named `Adminhtml`.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为 `Adminhtml` 的新文件夹。
- en: Create a file named `GiftregistryController.php`.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为 `GiftregistryController.php` 的文件。
- en: 'Insert the following code into this file located at `app/code/local/Mdg/Giftregistry/controllers/Adminhtml/GiftregistryController.php`:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码插入到位于 `app/code/local/Mdg/Giftregistry/controllers/Adminhtml/GiftregistryController.php`
    的此文件中：
- en: '[PRE2]'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Notice something important; this new controller extends `Mage_Adminhtml_Controller_Action`
    instead of `Mage_Core_Controller_Front_Action`, which we have been using so far.
    This is because the `Adminhtml` controller has additional validation to prevent
    non-admin users from accessing their actions.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 注意一个重要的事情；这个新的控制器扩展了 `Mage_Adminhtml_Controller_Action` 而不是我们迄今为止一直在使用的 `Mage_Core_Controller_Front_Action`。这是因为
    `Adminhtml` 控制器有额外的验证来防止非管理员用户访问其操作。
- en: Notice that we are placing our controller inside a new subfolder inside the
    `controllers/` directory. By using this subdirectory, we are keeping the frontend
    and backend controllers organized. This is a widely accepted Magento standard
    practice.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 注意我们正在将控制器放置在 `controllers/` 目录下的一个新子文件夹中。通过使用这个子目录，我们保持了前端和后端控制器的组织。这是一个广泛接受的
    Magento 标准做法。
- en: For now, let's leave this blank controller alone, extend the Magento backend
    navigation, and add some extra tabs to the customer edit page.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，让我们先保留这个空白控制器不变，扩展 Magento 后端导航，并在客户编辑页面上添加一些额外的标签页。
- en: Back to the configuration
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 回到配置
- en: 'As we have seen so far, much of Magento is controlled by XML configuration
    files and the backend layout is no different. We need a new `adminhtml` layout
    file. We create it as follows:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，Magento 的许多功能都是由 XML 配置文件控制的，后端布局也不例外。我们需要一个新的 `adminhtml` 布局文件。我们创建它如下：
- en: Navigate to the `design` folder.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 `design` 文件夹。
- en: 'Create a new folder named `adminhtml`, and inside it, create the following
    folder structure:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为 `adminhtml` 的新文件夹，并在其中创建以下文件夹结构：
- en: '`adminhtml/`'
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`adminhtml/`'
- en: '`--default/`'
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--default/`'
- en: '`----default/`'
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`----default/`'
- en: '`------template/`'
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`------template/`'
- en: '`------layout/`'
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`------layout/`'
- en: Inside the `layout` folder, let's create a new layout file called `giftregistry.xml`.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `layout` 文件夹内，让我们创建一个名为 `giftregistry.xml` 的新布局文件。
- en: 'Copy the following code to the `layout` file located at `app/design/adminhtml/default/default/layout/giftregistry.xml`:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码复制到位于 `app/design/adminhtml/default/default/layout/giftregistry.xml` 的
    `layout` 文件中：
- en: '[PRE3]'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'We also need to add the new layout file to the `config.xml` module:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要将新的布局文件添加到 `config.xml` 模块中：
- en: Navigate to the `etc/` folder.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 `etc/` 文件夹。
- en: Open the `config.xml` file.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 `config.xml` 文件。
- en: 'Copy the following code to the `config.xml` file located at `app/code/local/Mdg/Giftregistry/etc/config.xml`:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码复制到位于 `app/code/local/Mdg/Giftregistry/etc/config.xml` 的 `config.xml` 文件中：
- en: '[PRE4]'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: What we are doing inside the layout is creating a new container block and declaring
    a new tab that contains this block.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在布局中做的事情是创建一个新的容器块并声明一个包含此块的新的标签页。
- en: Let's quickly test our changes so far by logging in to the Magento backend and
    opening the customer information by going into **Customer Manager** by navigating
    to **Customers** | **Manage Customers**.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们快速测试一下到目前为止的更改，通过登录到 Magento 后端，并通过导航到 **客户经理** -> **客户** -> **管理客户** 来打开客户信息。
- en: 'We should get the following error at the backend:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应该在后端得到以下错误：
- en: '![Back to the configuration](img/4195OS_04_01.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![回到配置](img/4195OS_04_01.jpg)'
- en: This is because we are trying to add a block that has not been declared yet.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为我们正在尝试添加一个尚未声明的块。
- en: 'To fix this, we need to create a new block class:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这个问题，我们需要创建一个新的块类：
- en: Navigate to the `Block` folder and create a new block class following the directory
    structure named `Giftregistry.php`.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 `Block` 文件夹，并按照目录结构创建一个名为 `Giftregistry.php` 的新块类。
- en: 'Add the following code to the `Giftregistry.php` file located at `app/code/local/Mdg/Giftregistry/Block/Adminhtml/Customer/Edit/Tab/Giftregistry.php`:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码添加到位于 `app/code/local/Mdg/Giftregistry/Block/Adminhtml/Customer/Edit/Tab/Giftregistry.php`
    的 `Giftregistry.php` 文件中：
- en: '[PRE5]'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: There are a couple of interesting things happening with this block class. For
    starters, we are extending a different block class, `Mage_Adminhtml_Block_Template`,
    and implementing a new interface, `Mage_Adminhtml_Block_Widget_Tab_Interface`.
    This is done in order to access all the features and functionality of the Magento
    backend.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这个块类发生了一些有趣的事情。首先，我们扩展了一个不同的块类，`Mage_Adminhtml_Block_Template`，并实现了一个新的接口，`Mage_Adminhtml_Block_Widget_Tab_Interface`。这样做是为了访问
    Magento 后端的全部功能和特性。
- en: We are also setting the block template inside the `construct` function of our
    class. Additionally, under `getCustomerId`, we are making use of the Magento global
    variables to get the current customer.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还在类的`construct`函数中设置了块模板。此外，在`getCustomerId`中，我们使用了Magento全局变量来获取当前客户。
- en: Our next step is to create the corresponding template file for this block, otherwise,
    we will get an error on the block initialization.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们下一步是为此块创建相应的模板文件，否则在块初始化时将会出现错误。
- en: Create a template file named `main.phtml` under the `adminhtml` template folder.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`adminhtml`模板文件夹下创建一个名为`main.phtml`的模板文件。
- en: 'Copy the following code into `main.phtml`, located at `app/design/adminhtml/default/default/template/mdg/giftregistry/customer/main.phtml`:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码复制到位于`app/design/adminhtml/default/default/template/mdg/giftregistry/customer/main.phtml`的`main.phtml`文件中：
- en: '[PRE6]'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: For now, we are just adding the placeholder content to the template, so we can
    actually see our tabs in action. Now, if we go to the customer section in the
    backend, we should see that a new tab is available. Clicking on that tab will
    display our placeholder content.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，我们只是在模板中添加占位符内容，以便我们实际上能看到我们的标签页在行动。现在，如果我们去后端的客户部分，我们应该能看到一个新标签页可用。点击该标签页将显示我们的占位符内容。
- en: By now, we have modified the backend and added a **Customers** tab to the customer
    section just by changing a configuration and adding some simple blocks and template
    files. However, so far, this hasn't been particularly useful, so we need a way
    of displaying all the customer gift registries under the **Gift registry** tab.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们通过更改配置和添加一些简单的块和模板文件，已经在后端添加了一个**客户**标签页到客户部分。然而，到目前为止，这并没有特别有用，因此我们需要一种方法来在**礼品登记**标签页下显示所有客户礼品登记。
- en: The grid widget
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网格小部件
- en: Instead of having to write our own grid blocks from scratch, we can reuse the
    ones that are already provided by the Magento `Adminhtml` module.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不必从头开始编写自己的网格块，可以重用Magento `Adminhtml`模块已经提供的那些。
- en: The block that we will be extending is called the grid widget. The grid widget
    is a special type of block designed to render a collection of Magento objects
    in a particular table grid.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要扩展的块称为网格小部件。网格小部件是一种特殊类型的块，旨在以特定的表格网格形式渲染一组Magento对象。
- en: 'A grid widget is normally rendered inside a grid container. The combination
    of both elements not only allows us to display our data in grid form, but also
    adds search, filtering, sorting, and mass action capabilities. Perform the following
    steps:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 网格小部件通常在网格容器内渲染。这两个元素的组合不仅允许我们以网格形式显示我们的数据，还增加了搜索、过滤、排序和批量操作功能。执行以下步骤：
- en: Navigate to the block's `Adminhtml/` folder and create a folder named `Giftregistry/`.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到块的`Adminhtml/`文件夹，并创建一个名为`Giftregistry/`的文件夹。
- en: Create a class called `List.php` inside that folder.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在该文件夹中创建一个名为`List.php`的类。
- en: 'Copy the following code inside `List.php`, located at `app/code/local/Mdg/Giftregistry/Block/Adminhtml/Customer/Edit/Tab/Giftregistry/List.php`:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码复制到位于`app/code/local/Mdg/Giftregistry/Block/Adminhtml/Customer/Edit/Tab/Giftregistry/List.php`的`List.php`文件中：
- en: '[PRE7]'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Looking at the class we just created, there are only three functions involved:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 看看我们刚刚创建的类，其中只涉及三个函数：
- en: '`__construct()`'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`__construct()`'
- en: '`_prepareCollection()`'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`_prepareCollection()`'
- en: '`_prepareColumns()`'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`_prepareColumns()`'
- en: In the `__construct` function, we are specifying a few important options about
    our grid class, we are setting the grid ID, and the default sort to by `event_date`,
    and we are enabling pagination and filtering.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在`__construct`函数中，我们指定了我们网格类的一些重要选项，我们设置了网格ID，并将默认排序设置为`event_date`，同时启用了分页和过滤。
- en: The `_prepareCollection()` function loads a collection of registries filtered
    by the current customer ID. This function can be used for more complex operations
    in our collection as well. For example, joining a secondary table to get more
    information about the customer or another related record.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '`_prepareCollection()`函数加载了一个按当前客户ID过滤的登记集合。此函数也可以用于我们集合中的更复杂操作。例如，通过连接一个辅助表来获取更多关于客户或其他相关记录的信息。'
- en: Finally, by using the `_prepareColumns()` function, we are telling Magento which
    attributes and columns of our data collection should be shown and how to render
    them.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，通过使用`_prepareColumns()`函数，我们告诉Magento我们数据集合中应该显示哪些属性和列以及如何渲染它们。
- en: 'Now that we have created a functional grid block, let''s make some changes
    to our layout XML file in order to display it:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经创建了一个功能性的网格块，让我们对我们的布局XML文件做一些更改，以便显示它：
- en: Open the `giftregistry.xml` folder under the `adminhtml` layout folder.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开位于`adminhtml`布局文件夹下的`giftregistry.xml`文件夹。
- en: 'Make the following changes in this folder, which is located at `app/design/adminhtml/default/default/layout/giftregistry.xml`:'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在位于`app/design/adminhtml/default/default/layout/giftregistry.xml`的文件夹中做出以下更改：
- en: '[PRE8]'
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'What we did was add the grid block as part of our main block, but if we go
    to the customer edit page and click on the **Gift Registry** tab, we still see
    the old placeholder text where the grid is not displayed:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 我们所做的就是在我们的主块中添加网格块，但如果我们转到客户编辑页面并点击**礼品注册**选项卡，我们仍然看到旧的占位符文本，其中网格没有显示：
- en: '![The grid widget](img/4195OS_04_02.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![网格小部件](img/4195OS_04_02.jpg)'
- en: 'This is because we haven''t made the necessary changes to our `main.phtml`
    template file. In order to display children blocks, we specifically need to tell
    the templating system to load any or a specific child. For now, let''s just load
    our specific grid block:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为我们还没有对我们的`main.phtml`模板文件做出必要的更改。为了显示子块，我们需要特别告诉模板系统加载任何或特定的子块。现在，让我们只加载我们的特定网格块：
- en: Open the `main.phtml` template file.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`main.phtml`模板文件。
- en: 'Replace the template code located at `app/design/adminhtml/default/default/template/mdg/giftregistry/customer/main.phtml`
    with the following code:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将位于`app/design/adminhtml/default/default/template/mdg/giftregistry/customer/main.phtml`的模板代码替换为以下代码：
- en: '[PRE9]'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The `getChildHtml()` function is responsible for rendering all the child blocks.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '`getChildHtml()`函数负责渲染所有子块。'
- en: The `getChildHtml()` function can be called with a specific child block name
    or without parameters. When called without parameters, it will load all the available
    children blocks.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '`getChildHtml()`函数可以用特定的子块名称调用，也可以不带参数。当不带参数调用时，它将加载所有可用的子块。'
- en: In our extension, we are only interested in instantiating a particular child
    block. So, we will be passing the block name as the function parameter. Now, if
    we refresh the page, we should see our grid block loaded with all the gift registries
    available for that particular customer.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的扩展中，我们只对实例化特定的子块感兴趣。因此，我们将传递块名称作为函数参数。现在，如果我们刷新页面，我们应该看到我们的网格块已加载，并显示特定客户可用的所有礼品注册信息。
- en: Managing the registries
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 管理注册信息
- en: Now, this comes in handy if we want to manage the registries for a specific
    customer, but it does not really help us if we want to manage all the registries
    available in a store. For the latter, we need to create a grid that loads all
    the available gift registries.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果我们想管理特定客户的注册信息，这会很有用，但如果我们要管理商店中所有可用的注册信息，这实际上并没有太大帮助。对于后者，我们需要创建一个网格，加载所有可用的礼品注册信息。
- en: As we have already created a `giftregistry` controller for the backend, we can
    use the index action to display all the available registries.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们已经在后端为`giftregistry`控制器创建了一个控制器，我们可以使用索引操作来显示所有可用的注册信息。
- en: 'The first thing we need to do is modify the Magento backend navigation to show
    a link to our new controller index action. Again, we can achieve this by using
    XML. In this particular case, we are going to create a new XML file named `adminhtml.xml`:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要做的第一件事是修改Magento后端导航，以显示指向我们新控制器索引操作的链接。同样，我们可以通过使用XML来实现这一点。在这种情况下，我们将创建一个名为`adminhtml.xml`的新XML文件：
- en: Navigate to your module `etc` folder.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到您的模块`etc`文件夹。
- en: Create a new file named `adminhtml.xml`.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`adminhtml.xml`的新文件。
- en: 'Place the following content in the file located at `app/code/local/Mdg/Giftregistry/etc/adminhtml.xml`:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下内容放置在位于`app/code/local/Mdg/Giftregistry/etc/adminhtml.xml`的文件中：
- en: '[PRE10]'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Note
  id: totrans-106
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Note that while the standard is to have this configuration added inside the
    `adminhtml.xml` file, you are likely to encounter extensions where this standard
    is not followed. This configuration can be located inside the `config.xml` file.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，虽然标准是在`adminhtml.xml`文件内添加此配置，但你可能会遇到不遵循此标准的扩展。此配置可以位于`config.xml`文件中。
- en: This configuration code creates a new main level menu and a new child-level
    option under it. We are also specifying which action the menu should be mapped
    to, in this case, the index action of our `giftregistry` controller.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 此配置代码创建了一个新的主菜单以及其下的一个新子菜单选项。我们还在指定菜单应映射到哪个操作，在这种情况下，是`giftregistry`控制器的索引操作。
- en: If we refresh the backend now, we should see a new gift registry menu added
    to the top-level navigation.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们现在刷新后端，我们应该看到一个新的礼品注册菜单被添加到顶级导航中。
- en: Permissions and ACL
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 权限和ACL
- en: Sometimes we need to restrict access to certain features of our module, or even
    the whole module, based on the admin rule. Magento allows us to do this by using
    a power feature called Access Control List (ACL). Each role in the Magento backend
    can have different permissions and different ACLs.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 有时我们需要根据管理员规则限制对模块某些功能或整个模块的访问。Magento 允许我们通过使用一个名为访问控制列表（ACL）的强大功能来实现这一点。Magento
    后端中的每个角色都可以有不同的权限和不同的 ACL。
- en: 'The first step to enable ACLs with our custom module is to define which resources
    should be restricted by the ACL. Not so surprisingly, this is controlled by the
    configuration XML files. Perform the following steps:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 启用我们自定义模块的 ACL 的第一步是定义哪些资源应该由 ACL 限制。不出所料，这由配置 XML 文件控制。执行以下步骤：
- en: Open the `adminhtml.xml` configuration file.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 `adminhtml.xml` 配置文件。
- en: 'Add the following code after the menu path `app/code/local/Mdg/Giftregistry/etc/adminhtml.xml`:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在菜单路径 `app/code/local/Mdg/Giftregistry/etc/adminhtml.xml` 之后添加以下代码：
- en: '[PRE11]'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Now, we go to the Magento backend by navigating to **System** | **Permissions**
    | **Roles**. Next, we select the administrator''s role and try to set **Role Resources**
    at the bottom of the list. We will see the new ACL resources we created:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们通过导航到 **系统** | **权限** | **角色** 来进入 Magento 后端。接下来，我们选择管理员角色并尝试在列表底部设置 **角色资源**。我们将看到我们创建的新
    ACL 资源：
- en: '![Permissions and ACL](img/4195OS_04_06.jpg)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![权限和 ACL](img/4195OS_04_06.jpg)'
- en: By doing this, we gain granular control over which operations each user has
    access to.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这样做，我们可以对每个用户可以访问的操作进行细粒度控制。
- en: If we click on the **Manage Registries** menu, we should get a blank page. As
    we haven't created the corresponding grid block, layouts, and templates, we should
    see a completely blank page.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们点击 **管理注册** 菜单，我们应该得到一个空白页面。因为我们还没有创建相应的网格块、布局和模板，我们应该看到一个完全空白的页面。
- en: So, let's start by creating the blocks that we need for our new grid. The way
    we create our `giftregistry` grid will be slightly different from what we did
    for our **Customers** tab.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，让我们首先创建我们需要的用于新网格的块。我们创建 `giftregistry` 网格的方式将与我们为 **客户** 选项卡所做的方式略有不同。
- en: We need to create a grid container block and a grid block. The grid container
    is used to hold the grid header, the buttons, and the grid content, while the
    grid block is only in charge of rendering the grid with pagination, filtering,
    and mass actions.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要创建一个网格容器块和一个网格块。网格容器用于容纳网格标题、按钮和网格内容，而网格块只负责渲染带有分页、过滤和批量操作的网格。
- en: 'Perform the following steps:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤：
- en: Go to your block `Adminhtml` folder.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往你的 `Adminhtml` 块文件夹。
- en: Create a new block named `Registries.php`.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为 `Registries.php` 的新块。
- en: 'Add the following code to the block located at `app/code/local/Mdg/Giftregistry/Block/Adminhtml/Registries.php`:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `app/code/local/Mdg/Giftregistry/Block/Adminhtml/Registries.php` 中的块添加以下代码：
- en: '[PRE12]'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: One important thing we are setting up in the `construct` function inside our
    grid container is the protected value of _`controller` and `_blockGroup`. Both
    are used by the Magento grid container to identify the corresponding grid block.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的网格容器内部 `construct` 函数中设置的一个重要事情是 `_controller` 和 `_blockGroup` 的受保护值。这两个值都由
    Magento 网格容器用来识别相应的网格块。
- en: It is important to clarify that `$this->_controller` is not the actual controller's
    name but the `block` class' name, and `$this->_blockGroup` is actually the module's
    name.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 需要明确的是，`$this->_controller` 并不是实际控制器的名称，而是 `block` 类的名称，而 `$this->_blockGroup`
    实际上是模块的名称。
- en: 'Let''s continue by creating the grid block that as we learned previously. It
    has three main functions, namely _`construct`, `_prepareCollection()`, and `_prepareColumns()`.
    However, in this case, we will add a new function called `_prepareMassActions()`,
    which allow us to modify selected sets of records without having to edit each
    individually. Perform the following steps:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续创建之前学到的网格块。它有三个主要功能，即 `_construct`、`_prepareCollection()` 和 `_prepareColumns()`。然而，在这种情况下，我们将添加一个名为
    `_prepareMassActions()` 的新函数，它允许我们修改选定的记录集，而无需逐个编辑。执行以下步骤：
- en: Navigate to your block's `Adminhtml` folder and create a new folder called `Registries`.
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到你的 `Adminhtml` 块文件夹并创建一个名为 `Registries` 的新文件夹。
- en: Under the `Model` folder, create a new block called `Grid.php`.
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Model` 文件夹下，创建一个名为 `Grid.php` 的新块。
- en: 'Add the following code in the block located at `app/code/local/Mdg/Giftregistry/Block/Adminhtml/Registries/Grid.php`:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `app/code/local/Mdg/Giftregistry/Block/Adminhtml/Registries/Grid.php` 中的块添加以下代码：
- en: '[PRE13]'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: This grid code is very similar to what we created before for the **Customers**
    tab with the exception that, this time, we are not specifically filtering by a
    customer record. Also, this time, we are also creating a grid container block
    instead of implementing a custom block.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 这段网格代码与我们之前为**客户**标签创建的代码非常相似，唯一的区别是，这次我们不是特别根据客户记录进行筛选。此外，这次我们还在创建网格容器块而不是实现自定义块。
- en: 'Finally, in order to show the grid in our controller action, we need to perform
    the following steps:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，为了在我们的控制器操作中显示网格，我们需要执行以下步骤：
- en: Open the `giftregistry.xml` file inside the `adminhtml` layout folder.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开位于`adminhtml`布局文件夹内的`giftregistry.xml`文件。
- en: 'Add the following code in the `giftregistry.xml` file located at `app/code/design/adminhtml/default/default/layout/giftregistry.xml`:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在位于`app/code/design/adminhtml/default/default/layout/giftregistry.xml`的`giftregistry.xml`文件中添加以下代码：
- en: '[PRE14]'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: As we are using a grid container, we only need to specify the grid container
    block; Magento will take care of loading the matching grid container.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们使用的是网格容器，我们只需要指定网格容器块；Magento 将负责加载匹配的网格容器。
- en: There is no need to specify or create a template file for the grid or the grid
    container. Both blocks automatically load the base templates from the `adminhtml/default/default`
    theme.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 没有必要指定或创建网格或网格容器的模板文件。这两个块都会自动从`adminhtml/default/default`主题加载基本模板。
- en: 'Now, we can check our newly added gift registry by going to the backend. To
    do so, navigate to **Gift Registry** | **Manage Registries** and to the screen
    shown in the following screenshot:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以通过访问后端来检查我们新添加的礼品注册。要做到这一点，导航到**礼品注册** | **管理注册**，并查看以下截图所示的屏幕：
- en: '![Permissions and ACL](img/4195OS_04_03.jpg)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![权限和ACL](img/4195OS_04_03.jpg)'
- en: Updating in bulk with mass actions
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 批量更新使用批量操作
- en: 'When creating our base grid block, we defined a function called `_prepareMassactions()`.
    Mass actions provide an easy way of manipulating multiple records from the grid.
    In our case, for now, let''s just implement a mass delete action. Perform the
    following steps to do so:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建我们的基本网格块时，我们定义了一个名为`_prepareMassactions()`的函数。批量操作提供了一种轻松操作网格中多个记录的方法。就目前而言，让我们只实现一个批量删除操作。执行以下步骤来完成此操作：
- en: Open the `Giftregistry` grid block.
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`Giftregistry`网格块。
- en: 'Replace the `_prepareMassaction()` function with the following code in this
    block located at `app/code/local/Mdg/Giftregistry/Block/Adminhtml/Registries/Grid.php`:'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在位于`app/code/local/Mdg/Giftregistry/Block/Adminhtml/Registries/Grid.php`的此块中替换`_prepareMassaction()`函数为以下代码：
- en: '[PRE15]'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The way mass actions work is that they pass a series of selected IDs to our
    specified controller action (in this case `massDelete()`). Inside, the `massDelete()`
    action will add code to iterate through the registry collection and delete each
    of the specified registries. Perform the following steps:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 批量操作的工作方式是将一系列选定的ID传递到我们指定的控制器操作（在本例中为`massDelete()`）。在内部，`massDelete()`操作将添加代码来遍历注册集合并删除每个指定的注册。执行以下步骤：
- en: Open the `GiftregistryController.php` file.
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`GiftregistryController.php`文件。
- en: 'Replace the blank `massDelete()` action with the following code in the file
    located at `app/code/local/Mdg/Giftregistry/controllers/Adminhtml/GiftregistryController.php`:'
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在位于`app/code/local/Mdg/Giftregistry/controllers/Adminhtml/GiftregistryController.php`的文件中将空的`massDelete()`操作替换为以下代码：
- en: '[PRE16]'
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Note
  id: totrans-152
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**Challenge**: Add two new mass actions to change the status of the registries
    to enabled or disabled. To see the answer with the complete code and full breakdown,
    visit [http://www.magedevguide.com/](http://www.magedevguide.com/).'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**挑战**：添加两个新的批量操作来更改注册的状态为启用或禁用。要查看完整的代码和完整分解，请访问[http://www.magedevguide.com/](http://www.magedevguide.com/)。'
- en: 'Finally, we also want to be able to edit the records listed in our grid. For
    that, we need to add a new function to our registries'' grid class. This function
    is called `getRowUrl()` and is used to specify the action to be taken when clicking
    on a grid row. In our particular case, we want to map that function to the `editAction()`
    function. Perform the following steps:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们还想能够编辑网格中列出的记录。为此，我们需要向我们的注册网格类中添加一个新函数。这个函数叫做`getRowUrl()`，用于指定点击网格行时要执行的操作。在我们的特定情况下，我们希望将该函数映射到`editAction()`函数。执行以下步骤：
- en: Open the `Grid.php` file.
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`Grid.php`文件。
- en: 'Add the following function to the file located at `app/code/local/Mdg/Giftregistry/Block/Adminhtml/Registries/Grid.php`:'
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在位于`app/code/local/Mdg/Giftregistry/Block/Adminhtml/Registries/Grid.php`的文件中添加以下函数：
- en: '[PRE17]'
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: The form widget
  id: totrans-158
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 表单小部件
- en: So far, we have a working gift registry grid, but right now, we aren't able
    to do much more than just getting the list of all the available registries or
    deleting registries in bulk. We need a way of getting the details for a specific
    registry. We can map this to the edit controller action.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们有一个工作的礼品注册网格，但到目前为止，我们无法做更多的事情，而只是获取所有可用注册的列表或批量删除注册。我们需要一种方法来获取特定注册的详细信息。我们可以将此映射到编辑控制器动作。
- en: The edit controller action will display the registry-specific details and will
    also allow us to modify the registry details and status. We need to create a few
    blocks and templates for this action.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑控制器动作将显示注册特定的详细信息，并允许我们修改注册的详细信息和状态。我们需要为此动作创建几个块和模板。
- en: In order to view and edit the registry information, we must implement a form
    widget block. Form widgets work in a similar fashion to the grid widget blocks
    and need to have a form block and a form container block that extend the `Mage_Adminhtml_Block_Widget_Form_Container`
    class.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 为了查看和编辑注册信息，我们必须实现一个表单小部件块。表单小部件与网格小部件块的工作方式类似，需要有一个表单块和一个表单容器块，这两个块扩展了`Mage_Adminhtml_Block_Widget_Form_Container`类。
- en: 'In order to create the form container, let''s take the following steps:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 为了创建表单容器，让我们采取以下步骤：
- en: Navigate to the `Registries` folder.
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到`Registries`文件夹。
- en: Create a new class file named `Edit.php`.
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`Edit.php`的新类文件。
- en: 'Add the following code to the class file located at `app/code/local/Mdg/Giftregistry/Block/Adminhtml/Registries/Edit.php`:'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码添加到位于`app/code/local/Mdg/Giftregistry/Block/Adminhtml/Registries/Edit.php`的类文件中：
- en: '[PRE18]'
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Like the grid widget, the form container widget will automatically identify
    and load the matching form block.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 与网格小部件一样，表单容器小部件将自动识别并加载匹配的表单块。
- en: One additional protected attribute that is being declared in the form container
    is the `mode` attribute. This protected attribute is used by the container to
    specify the location of the form block.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 在表单容器中声明的另一个受保护的属性是`mode`属性。这个受保护的属性被容器用来指定表单块的位置。
- en: 'We can find the code responsible for the creation of the form block inside
    the `Mage_Adminhtml_Block_Widget_Form_Container` class:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在`Mage_Adminhtml_Block_Widget_Form_Container`类中找到负责创建表单块的代码：
- en: '[PRE19]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Now that we have created the form container block, we can proceed to create
    the matching form block:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经创建了表单容器块，我们可以继续创建匹配的表单块：
- en: Navigate to the `Registries` folder.
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到`Registries`文件夹。
- en: Create a new folder called `Edit`.
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`Edit`的新文件夹。
- en: Inside the `Edit` folder, create a new file called `Form.php`.
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Edit`文件夹中，创建一个名为`Form.php`的新文件。
- en: 'Add the following code to the file located at `app/code/local/Mdg/Giftregistry/Block/Adminhtml/Registries/Edit/Form.php`:'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码添加到位于`app/code/local/Mdg/Giftregistry/Block/Adminhtml/Registries/Edit/Form.php`的文件中：
- en: '[PRE20]'
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'We also need to modify our layout file and tell Magento to load our form container:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要修改我们的布局文件，并告诉Magento加载我们的表单容器：
- en: 'Copy the following code to the `giftregistry.xml` layout file located at `app/code/design/adminhtml/default/default/layout/giftregistry.xml`:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 将以下代码复制到位于`app/code/design/adminhtml/default/default/layout/giftregistry.xml`的`giftregistry.xml`布局文件中：
- en: '[PRE21]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'We can check our progress at this point by going into the Magento backend and
    clicking on one of our example registries. We should see the following form:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过进入Magento后端并点击我们的示例注册之一来检查我们的进度。我们应该看到以下表单：
- en: '![The form widget](img/4195OS_04_04.jpg)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![表单小部件](img/4195OS_04_04.jpg)'
- en: However, there seems to be an issue. None of the data is loaded; we just have
    an empty form. We have to modify our `editAction()` controller in order to load
    the data.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，似乎存在问题。没有任何数据被加载；我们只有一个空表单。我们必须修改我们的`editAction()`控制器以加载数据。
- en: Loading the data
  id: totrans-183
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 加载数据
- en: 'Let''s start by modifying the `editAction()` function inside our `GiftregistryController.php`
    file located at `app/code/local/Mdg/Giftregistry/controllers/Adminhtml/GiftregistryController.php`:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从修改位于`app/code/local/Mdg/Giftregistry/controllers/Adminhtml/GiftregistryController.php`的`GiftregistryController.php`文件中的`editAction()`函数开始：
- en: '[PRE22]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'What we are doing inside our `editAction()` controller is checking for a registry
    with the same ID, and if it exists, we load that registry entity and make it available
    to our form. Previously, when adding the form code to the `Form.php` file located
    at `app/code/local/Mdg/Giftregistry/Block/Adminhtml/Registries/Edit/Form.php`,
    we included the following code:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的`editAction()`控制器内部，我们所做的是检查是否存在具有相同ID的注册表，如果存在，则加载该注册表实体并将其提供给我们的表单。之前，当将表单代码添加到位于`app/code/local/Mdg/Giftregistry/Block/Adminhtml/Registries/Edit/Form.php`的`Form.php`文件中时，我们包含了以下代码：
- en: '[PRE23]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Now, we can test our changes by reloading the form:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以通过重新加载表单来测试我们的更改：
- en: '![Loading the data](img/4195OS_04_05.jpg)'
  id: totrans-189
  prefs: []
  type: TYPE_IMG
  zh: '![加载数据](img/4195OS_04_05.jpg)'
- en: Saving the data
  id: totrans-190
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 保存数据
- en: 'Now that we have created the form to edit a registry, we need to create the
    corresponding action to process and save the data posted by the form. We can use
    the `saveAction()` function to handle this. Perform the following steps:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经创建了用于编辑注册表的表单，我们需要创建相应的动作来处理和保存表单提交的数据。我们可以使用`saveAction()`函数来处理这个动作。执行以下步骤：
- en: Open the `GiftregistryController.php` class.
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`GiftregistryController.php`类。
- en: 'Replace the blank `saveAction()` function with the following code to the file
    located at `app/code/local/Mdg/Giftregistry/controllers/Adminhtml/GiftregistryController.php`:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将空白`saveAction()`函数替换为以下代码，并将其放置在位于`app/code/local/Mdg/Giftregistry/controllers/Adminhtml/GiftregistryController.php`的文件中：
- en: '[PRE24]'
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Let''s break down what this code does step by step:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们一步一步地分解这段代码的功能：
- en: It checks whether the request has valid post data.
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它检查请求是否有有效的POST数据。
- en: It checks that both the `$data` and the `$id` variables are set.
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它检查`$data`和`$id`变量是否都已设置。
- en: If both variables are set, we load a new `registry` entity and set the data.
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果两个变量都设置了，我们加载一个新的`registry`实体并设置数据。
- en: Finally, we try to save the `registry` entity.
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们尝试保存`registry`实体。
- en: The first thing we do is check that the data posted is not empty and that we
    are getting a registry ID as part of the parameters. We also check whether the
    registry ID is a valid instance of the registry entity.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先检查提交的数据不为空，并且我们正在获取作为参数的一部分的注册表ID。我们还检查注册表ID是否是注册表实体的有效实例。
- en: Summary
  id: totrans-201
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned how to modify and extend the Magento backend in
    accordance with our specific needs.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何根据我们的具体需求修改和扩展Magento后端。
- en: While extending, the frontend extends the functionality that the customers and
    users can use. Extending the backend allows us to control this custom functionality
    and how customers interact with it.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 在扩展时，前端扩展了客户和用户可以使用的功能。扩展后端允许我们控制这个自定义功能以及客户如何与之交互。
- en: Grids and forms are important parts of the Magento backend and, by using them
    properly, we can add a lot of functionality without having to write a lot of code
    or reinventing the wheel.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 网格和表单是Magento后端的重要组成部分，通过正确使用它们，我们可以添加很多功能，而无需编写大量代码或重新发明轮子。
- en: Finally, we learned how to use the permissions and Magento ACL to control and
    restrict the permissions of our custom extension and Magento in general.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们学习了如何使用权限和Magento ACL来控制和限制我们自定义扩展和Magento的一般权限。
- en: In the next chapter, we will dive deep into the Magento API and learn how to
    extend it to manipulate our registry data using several methods such as SOAP,
    XML-RPC, and REST.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将深入探讨Magento API，并学习如何通过几种方法（如SOAP、XML-RPC和REST）扩展它来操作我们的注册表数据。
