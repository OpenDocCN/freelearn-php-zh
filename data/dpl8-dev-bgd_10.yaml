- en: Chapter 10. Drupal Project Management and Collaboration
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第10章。Drupal项目管理与合作
- en: '*In this chapter, we will learn the process for promoting Sandbox modules to
    full project status. In doing so, you will learn more about the Drupal developer
    community, developer collaboration, and how you can become more involved. We will
    also look into how to manage incremental development on a production site using
    newly introduced Configuration Management as well as Features. Finally, we will
    create a rotating banner module for Drupal 8.*'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '*在本章中，我们将学习将沙盒模块提升为完整项目状态的过程。在这个过程中，你将了解更多关于Drupal开发者社区、开发者协作以及如何更深入地参与其中。我们还将探讨如何使用新引入的配置管理和功能来管理生产网站上的增量开发。最后，我们将为Drupal
    8创建一个旋转横幅模块。*'
- en: 'The following topics will be covered in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Release management in Drupal
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Drupal中的发布管理
- en: More advanced module development
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更高级的模块开发
- en: How to use the Features module
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用功能模块
- en: Rotating banners with the Views Slideshow module
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用视图幻灯片模块创建旋转横幅
- en: We will examine an approach that is based on a Views plugin and predominantly
    consisting of Views configuration. Customization of the Views plugin output will
    be handled with custom CSS.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将探讨一种基于视图插件的方法，其主要由视图配置组成。视图插件输出的自定义将使用自定义CSS来处理。
- en: The Views Slideshow module is an excellent example of a Views style plugin,
    and it provides much more functionality than just rotating banners. Basically,
    the Views Slideshow module wraps the jQuery Cycle plugin as a Views style plugin,
    but it does so with a submodule, which is the `views_slideshow_cycle` module.
    The `views_slideshow` module is more than a Views style plugin. It's a plugin
    framework that integrates different jQuery slideshow plugins with Views and also
    provides a default implementation based on the jQuery cycle plugin.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 视图幻灯片模块是一个视图样式插件的优秀示例，它提供了比仅旋转横幅更多的功能。基本上，视图幻灯片模块将jQuery Cycle插件作为视图样式插件进行包装，但它这样做是通过一个子模块，即`views_slideshow_cycle`模块。`views_slideshow`模块不仅仅是一个视图样式插件。它是一个插件框架，它将不同的jQuery幻灯片插件与视图集成，并提供基于jQuery
    cycle插件的默认实现。
- en: Time for action – installing the Views Slideshow module
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 - 安装视图幻灯片模块
- en: 'Before we build a rotating banner with Views, we need to install the Views
    Slideshow module:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们使用视图创建旋转横幅之前，我们需要安装视图幻灯片模块：
- en: Open the Terminal (Mac OS X) or Command Prompt (Windows) application, and change
    to the root directory of the d8dev site.
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端（Mac OS X）或命令提示符（Windows）应用程序，并切换到d8dev站点的根目录。
- en: 'Use Drush to download and enable the Views Slideshow module:'
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Drush下载并启用视图幻灯片模块：
- en: '[PRE0]'
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '*What just happened?*'
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: 'Views Slideshow consists of two modules: the base `views_slideshow` module
    and the `views_slideshow_cycle` module. We need to tell Drush to install the `views_slideshow_cycle`
    module and Drush will automatically install any dependencies belonging to the
    same parent module; in this case, the `views_slideshow` module will automatically
    be enabled by Drush. Also notice how Drush prompted us to download other unmet
    dependencies for `views_slideshow_cycle`; in this case, the external js libraries
    `jquery.cycle`, `jquery.hoverIntent`, `jquery.pause`, and `json2` are downloaded
    in the `libraries` folder.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 视图幻灯片模块由两个模块组成：基础`views_slideshow`模块和`views_slideshow_cycle`模块。我们需要告诉Drush安装`views_slideshow_cycle`模块，Drush将自动安装属于同一父模块的任何依赖项；在这种情况下，`views_slideshow`模块将由Drush自动启用。同时请注意，Drush提示我们下载`views_slideshow_cycle`的其他未满足的依赖项；在这种情况下，外部js库`jquery.cycle`、`jquery.hoverIntent`、`jquery.pause`和`json2`被下载到`libraries`文件夹中。
- en: Creating a rotating banner with Views Slideshow
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用视图幻灯片创建旋转横幅
- en: The Views Slideshow module is a Views style plugin. We are going to create a
    block-based view that will use this style plugin to convert our recipe images
    list into a rotating banner. After this, we will be able to display it on the
    front page of our d8dev site.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 视图幻灯片模块是一个视图样式插件。我们将创建一个基于块的视图，该视图将使用此样式插件将我们的食谱图片列表转换为旋转横幅。之后，我们就能在我们的d8dev网站首页上显示它。
- en: Time for action – creating a banner using the Views Slideshow module
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 - 使用视图幻灯片模块创建横幅
- en: 'Now that we have installed and set up the Views Slideshow module, it is time
    for us to build a Views-based rotating banner:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经安装并设置了视图幻灯片模块，是时候我们构建一个基于视图的旋转横幅了：
- en: Open the d8dev site in your browser, click on the **Structure** link in the
    **Admin** toolbar, and then click on the **Views** link.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在浏览器中打开d8dev网站，点击**管理**工具栏中的**结构**链接，然后点击**视图**链接。
- en: We are creating a new view. Click on the **Add new view** link at the top of
    the **Views List** page.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们正在创建一个新的视图。点击**视图列表**页面顶部的**添加新视图**链接。
- en: Enter `Front Banner` as the **View name** and select **Recipe** for the type.
    We are going to create our rotating banner as a block, so check the **Create a
    block** checkbox.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**视图名称**输入为`Front Banner`，并选择**食谱**作为类型。我们将创建我们的旋转横幅作为一个块，所以勾选**创建一个块**复选框。
- en: Next, select **Slideshow** of **fields** for the **BLOCK DISPLAY SETTINGS**.
    Verify that the Add new view form looks similar to the following screenshot, and
    click on the **Save and edit** button:![Time for action – creating a banner using
    the Views Slideshow module](img/4659_10_01.jpg)
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，选择**字段**的**幻灯片**用于**块显示设置**。验证添加新视图表单看起来与以下截图相似，然后点击**保存并编辑**按钮：![使用视图幻灯片模块创建横幅的行动时间](img/4659_10_01.jpg)
- en: Now, we need to decide what fields we want to display in the banner. The **Content:Title**
    field has been added by default. But we obviously want to display an image in
    the rotating banner.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们需要决定我们想在横幅中显示哪些字段。**内容：标题**字段已默认添加。但我们显然想在旋转横幅中显示一个图像。
- en: Click on the **Add** button for **FIELDS**, search for `Images` in the **Search**
    input, and select **Images**. Click on the **Apply (all displays)** button.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**字段**的**添加**按钮，在**搜索**输入中搜索`Images`，并选择**图像**。点击**应用（所有显示）**按钮。
- en: Next, in the **Configure field** form, select **Large** as the **Image style**
    and click on the **Apply (all displays)** button.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在**配置字段**表单中，选择**大**作为**图像样式**，然后点击**应用（所有显示）**按钮。
- en: Now, if you scroll down to the **Preview** area of the **Views** page, you will
    see a working slide show that looks something similar to the following screenshot:![Time
    for action – creating a banner using the Views Slideshow module](img/4659_10_02.jpg)
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，如果你滚动到**视图**页面的**预览**区域，你会看到一个类似以下截图的工作幻灯片：![使用视图幻灯片模块创建横幅的行动时间](img/4659_10_02.jpg)
- en: Click on the **Add** button for **FILTER CRITERIA**. Search for `images` in
    the search input textbox and select the **Any Images (field_images:title)** filter.
    Click on the **Apply (all displays)** button.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**过滤器条件**的**添加**按钮。在搜索输入框中搜索`images`，并选择**任何图像（field_images:title）**过滤器。点击**应用（所有显示）**按钮。
- en: On the next screen, select the **Is not empty (NOT NULL)** operator, and click
    on the **Apply (all displays)** button.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一屏幕上，选择**不是空的（NOT NULL）**运算符，然后点击**应用（所有显示）**按钮。
- en: Click on the dropdown for the **FIELDS Add** button and select **Rearrange**:![Time
    for action – creating a banner using the Views Slideshow module](img/4659_10_03.jpg)
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**字段添加**按钮的下拉菜单，并选择**重新排列**：![使用视图幻灯片模块创建横幅的行动时间](img/4659_10_03.jpg)
- en: Next, just drag the **Content:Title** field under the **Content:Images** field,
    and click on the **Apply (all displays)** button.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，只需将**内容：标题**字段拖到**内容：图像**字段下方，然后点击**应用（所有显示）**按钮。
- en: Now, we are ready to see how our new Views Slideshow banner looks on the front
    page.
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，我们准备好查看我们的新视图幻灯片横幅在首页上的样子。
- en: Click on the **Save** button for our new view. Then click on the **Structure**
    link in the **Admin** toolbar, and finally click on the **Block layout** link.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击我们新视图的**保存**按钮。然后点击**管理**工具栏中的**结构**链接，最后点击**块布局**链接。
- en: Scroll down towards the **Content Region** and click on the **Place block**
    link. In the popup, search for `Front banner` and click on the **Place block**
    button for the **Front Banner** block.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 滚动到**内容区域**，并点击**放置块**链接。在弹出窗口中，搜索`Front banner`，然后点击**放置块**按钮以放置**Front Banner**块。
- en: On the next screen, uncheck the **Override title** checkbox. Next, select **Content**
    as the region to display the block for our D8Dev. In the **Visibility** | **pages**
    section, select **Show for the listed pages**, and enter `<front>` as the only
    page to display it on:![Time for action – creating a banner using the Views Slideshow
    module](img/4659_10_04.jpg)
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一屏幕上，取消选中**覆盖标题**复选框。接下来，选择**内容**作为显示我们D8Dev块的区域。在**可见性** | **页面**部分，选择**显示在列出的页面**，并输入`<front>`作为唯一要显示的页面：![使用视图幻灯片模块创建横幅的行动时间](img/4659_10_04.jpg)
- en: Click on the **Save block** button. On the **Blocks** configuration page, drag
    the **Front Banner** block above the **Main page content** block in the **Content
    regions**, and click on the **Save blocks** button at the bottom of the screen.![Time
    for action – creating a banner using the Views Slideshow module](img/4659_10_05.jpg)
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存块**按钮。在**块**配置页面，将**前横幅**块拖到**内容区域**中的**主页内容**块上方，然后在屏幕底部点击**保存块**按钮。![执行时间
    – 使用视图幻灯片模块创建横幅](img/4659_10_05.jpg)
- en: When you are done, the Front Banner should look similar to the following screenshot:![Time
    for action – creating a banner using the Views Slideshow module](img/4659_10_06.jpg)
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你完成时，前横幅应该看起来类似于以下截图：![执行时间 – 使用视图幻灯片模块创建横幅](img/4659_10_06.jpg)
- en: '*What just happened?*'
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: We created a Front banner block with the Views Slideshow style plugin and assigned
    the block to the front page of our d8dev site.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用视图幻灯片插件创建了一个前横幅块，并将其分配到我们的d8dev网站的前页。
- en: We have created a slideshow, but it is displaying the images of size that we
    uploaded with the recipe. This might be of varying sizes. To make the image size
    uniform, we will have to create an image style that can be applied to this slide
    show as well as any other location where we want to display images of the same
    size.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们创建了一个幻灯片放映，但它正在显示我们与食谱一起上传的图片大小。这些大小可能各不相同。为了使图片大小统一，我们不得不创建一个可以应用于此幻灯片放映以及任何其他我们想要显示相同大小图片的位置的图像样式。
- en: Time for action – creating a new image style for images in our rotating recipe
    banner
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 执行时间 – 为我们的旋转食谱横幅中的图片创建新的图像样式
- en: 'In the last chapter, we learned how to add image styles for Drupal 8\. Let''s
    add a new image style named `front_banner` that will scale our recipe images to
    be no wider than 680 pixels and cropped to 410 pixels in height. We will apply
    the same to the image field of our Front Banner view. This will create a more
    consistent look for our rotating banner as it will not change the size from slide
    to slide:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们学习了如何为Drupal 8添加图像样式。让我们添加一个名为`front_banner`的新图像样式，该样式将我们的食谱图片缩放到宽度不超过680像素，高度裁剪到410像素。我们将将其应用于我们的前横幅视图的图像字段。这将使我们的旋转横幅看起来更一致，因为它不会从幻灯片到幻灯片改变大小：
- en: Open the d8dev site in your browser, click on the **Configuration** link in
    the **Admin** toolbar, and then click on **Image styles** under the **Media**
    link.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在浏览器中打开d8dev网站，点击**管理**工具栏中的**配置**链接，然后点击**媒体**链接下的**图像样式**。
- en: We are creating a new Image style. So, click on the **+Add Image styles** link
    at the top of the **Image styles** page.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们正在创建一个新的图像样式。因此，点击**图像样式**页面顶部的**+添加图像样式**链接。
- en: Enter **Front banner** as the image style name and click on the **Create new
    style** button.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将图像样式名称输入为**前横幅**，然后点击**创建新样式**按钮。
- en: Select **Crop** as the effect and click on the **Add** button at the bottom
    of the page:![Time for action – creating a new image style for images in our rotating
    recipe banner](img/4659_10_07.jpg)
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**裁剪**作为效果，然后点击页面底部的**添加**按钮：![执行时间 – 为我们的旋转食谱横幅中的图片创建新的图像样式](img/4659_10_07.jpg)
- en: Next, Enter `680` as **Width** and `410` as **Height**, and click on the **Add
    effect** button:![Time for action – creating a new image style for images in our
    rotating recipe banner](img/4659_10_08.jpg)
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，将`680`输入为**宽度**，将`410`输入为**高度**，然后点击**添加效果**按钮：![执行时间 – 为我们的旋转食谱横幅中的图片创建新的图像样式](img/4659_10_08.jpg)
- en: Now we have to update this image style for the Front banner view. Click on the
    **Configuration** link in the **Admin** toolbar, and then click on the **Views**
    link.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们需要更新这个图像样式以用于前横幅视图。点击**管理**工具栏中的**配置**链接，然后点击**视图**链接。
- en: 'Next, click on the **Edit** link for the Front banner view. In the next view
    editing page, click on the **Content: Images** link for **Fields** and select
    **Front banner** as the **Image style** field. Click on the **Apply (all displays)**
    button. Then save the view by clicking on the **Save** button at the bottom.'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，点击前横幅视图的**编辑**链接。在下一个视图编辑页面，点击**字段**下的**内容：图片**链接，并将**图像样式**字段选择为**前横幅**。点击**应用（所有显示）**按钮。然后点击屏幕底部的**保存**按钮保存视图。
- en: When you are done, the Front Banner should look similar to the following screenshot:![Time
    for action – creating a new image style for images in our rotating recipe banner](img/4659_10_09.jpg)
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你完成时，前横幅应该看起来类似于以下截图：![执行时间 – 为我们的旋转食谱横幅中的图片创建新的图像样式](img/4659_10_09.jpg)
- en: '*What just happened?*'
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: We just created a new image style for images in our rotating recipe banner.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚为旋转食谱横幅中的图片创建了一个新的图像样式。
- en: Enhancing the appearance of our front banner with a pager and CSS
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用翻页器和CSS增强前横幅的外观
- en: Our new front banner works fine, but we can easily improve its appearance and
    user experience by adding a few more configurations and CSS. We are going to add
    custom CSS to our d8dev module to tweak the appearance of the rotating banner,
    but first we are going to add a pager that will show how many slides there are
    and the current slide.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的新前横幅工作得很好，但我们可以通过添加更多配置和CSS轻松改善其外观和用户体验。我们打算向我们的d8dev模块添加自定义CSS来调整旋转横幅的外观，但首先我们要添加一个翻页器，它会显示有多少幻灯片以及当前幻灯片。
- en: Time for action – updating the front banner view to include a slide show pager
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 执行时间 – 更新前横幅视图以包含幻灯片翻页器
- en: 'We are going to enhance our Views rotating banner with a pager:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将增强我们的视图旋转横幅，添加一个翻页器：
- en: Open the d8dev site in your browser, hover the mouse over the new front banner,
    click on the contextual links widget, and then click on the **Edit view** link:![Time
    for action – updating the front banner view to include a slide show pager](img/4659_10_10.jpg)
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在浏览器中打开d8dev网站，将鼠标悬停在新的前横幅上，点击上下文链接小部件，然后点击**编辑视图**链接：![执行时间 – 更新前横幅视图以包含幻灯片翻页器](img/4659_10_10.jpg)
- en: Next, we need to add a pager to our view. Click on the **Settings** link for
    the slideshow formatter:![Time for action – updating the front banner view to
    include a slide show pager](img/4659_10_11.jpg)
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要向我们的视图添加一个翻页器。点击幻灯片格式化器的**设置**链接：![执行时间 – 更新前横幅视图以包含幻灯片翻页器](img/4659_10_11.jpg)
- en: 'In the **Block: Style options** form, scroll down to the **Bottom Widgets**
    section and check the **Pager** checkbox. After checking this, we can see other
    fields appear. Check **Content: Title** under the **Pager fields** section and
    click on the **Apply** button. See this screenshot:![Time for action – updating
    the front banner view to include a slide show pager](img/4659_10_12.jpg)'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**块：样式选项**表单中，滚动到**底部小部件**部分，并勾选**翻页器**复选框。勾选此复选框后，我们可以看到其他字段出现。在**翻页器字段**部分下勾选**内容：标题**，然后点击**应用**按钮。请看以下截图：![执行时间
    – 更新前横幅视图以包含幻灯片翻页器](img/4659_10_12.jpg)
- en: Now, click on the **Save** button for the view, and take a look at the updated
    front banner. See the following screenshot:![Time for action – updating the front
    banner view to include a slide show pager](img/4659_10_13.jpg)
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，点击视图的**保存**按钮，查看更新的前横幅。请看以下截图：![执行时间 – 更新前横幅视图以包含幻灯片翻页器](img/4659_10_13.jpg)
- en: Though it is not quite the visually striking pager we were looking for, if you
    click on any of the titles, you will notice that the slide will change to that
    paged item. So, although the pager works, it does not look all that great. Let's
    see what we can do about the way it looks by adding some custom CSS to our d8dev
    module.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 虽然这并不是我们想要的视觉效果鲜明的翻页器，但如果你点击任何标题，你会注意到幻灯片会切换到相应的页面项。所以，尽管翻页器工作正常，但外观并不那么出色。让我们看看我们能为它的外观做些什么，通过向我们的d8dev模块添加一些自定义CSS。
- en: Open the front page of the d8dev site in Chrome/Firefox, right-click on your
    rotating banner, and select **Inspect Element** from the contextual menu that
    pops up:![Time for action – updating the front banner view to include a slide
    show pager](img/4659_10_14.jpg)
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Chrome/Firefox中打开d8dev网站的前页，右键点击你的旋转横幅，并从弹出的上下文菜单中选择**Inspect Element**：![执行时间
    – 更新前横幅视图以包含幻灯片翻页器](img/4659_10_14.jpg)
- en: In the **Elements** inspector, find the `div` tag with the `views-slideshow-
    controls-bottom` class, and expand it:![Time for action – updating the front banner
    view to include a slide show pager](img/4659_10_15.jpg)
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**元素**检查器中，找到带有`views-slideshow- controls-bottom`类的`div`标签，并展开它：![执行时间 – 更新前横幅视图以包含幻灯片翻页器](img/4659_10_15.jpg)
- en: 'Select the `div` tag with the `views-slideshow-pager-field` class so that it
    is highlighted. Then click inside the `element.style` curly brackets in the Styles
    inspector, and type in `float: right;`. We can see changes in the page field titles
    that floated to the right.'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '选择带有`views-slideshow-pager-field`类的`div`标签，使其高亮。然后在样式检查器中的`element.style`花括号内点击，并输入`float:
    right;`。我们可以看到页面字段标题向右浮动时的变化。'
- en: Next, in the PhpStorm IDE, open the `d8dev.css` file located at `d8dev/modules/d8dev/styles/`.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在PhpStorm IDE中，打开位于`d8dev/modules/d8dev/styles/`的`d8dev.css`文件。
- en: 'Scroll to the bottom of the file, and add the following style:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 滚动到文件底部，添加以下样式：
- en: '[PRE1]'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Now, back in the browser, expand the `views-slideshow-pager-field` div, find
    the `div` tag with the `div.views_slideshow_pager_field_item` selector, and add
    the following styles to the `d8dev.css` file for the `div.views_slideshow_pager_field_item`
    selector:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，回到浏览器中，展开`views-slideshow-pager-field` div，找到带有`div.views_slideshow_pager_field_item`选择器的`div`标签，并在`d8dev.css`文件中为`div.views_slideshow_pager_field_item`选择器添加以下样式：
- en: '[PRE2]'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Clear the cache and refresh the front page. See this screenshot:![Time for action
    – updating the front banner view to include a slide show pager](img/4659_10_16.jpg)
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 清除缓存并在浏览器中刷新前页。请看以下截图：![行动时间 – 更新前页横幅视图以包含幻灯片翻页器](img/4659_10_16.jpg)
- en: 'Now add the CSS to hide the `views-content-title` div. Open the PhpStorm IDE
    and add the following CSS to `style.css`, at the end of the file:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在将CSS添加到隐藏`views-content-title` div。在PhpStorm IDE中打开`style.css`文件，在文件末尾添加以下CSS：
- en: '[PRE3]'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Note
  id: totrans-73
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Note: by excluding the content title from the views field settings will also
    hide the title, but make sure other CSS will be affected by this.'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意：通过从视图字段设置中排除内容标题，也会隐藏标题，但请确保其他CSS也会受到影响。
- en: Clear the cache and refresh the front page:![Time for action – updating the
    front banner view to include a slide show pager](img/4659_10_17.jpg)
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 清除缓存并在浏览器中刷新前页：![行动时间 – 更新前页横幅视图以包含幻灯片翻页器](img/4659_10_17.jpg)
- en: Now, we need to do some styling for the recipe title. We are going to increase
    the font size and position it above the pager. But text align in the center of
    the image and add a background color tomato, with text color white. Also we are
    updating with as 672 px since we are taking padding as 4 px.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们需要对菜谱标题进行一些样式设计。我们将增加字体大小，并将其定位在翻页器上方。但将文本对齐在图像中心，添加背景色番茄红，文字颜色白色。同时，我们将更新为672像素，因为我们取了4像素的填充。
- en: 'Add the following CSS to the `div.views-field-title` selector in the PhpStorm
    IDE:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在PhpStorm IDE中将以下CSS添加到`div.views-field-title`选择器：
- en: '[PRE4]'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Clear the cache and refresh the front page in the browser; you will see that
    the recipe titles are much easier to read.![Time for action – updating the front
    banner view to include a slide show pager](img/4659_10_18.jpg)
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 清除缓存并在浏览器中刷新前页；你会看到菜谱标题的阅读更加容易。![行动时间 – 更新前页横幅视图以包含幻灯片翻页器](img/4659_10_18.jpg)
- en: '*What just happened?*'
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: We added a pager and caption to our Front banner, and although we did not write
    much custom PHP code, we saw how a little bit of Views configuration with the
    right contrib module, Views Slideshow, and some creative CSS can be combined to
    great effect.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在我们的前页横幅中添加了一个翻页器和标题，尽管我们没有编写很多自定义PHP代码，但我们看到了如何通过适当的视图配置模块（视图幻灯片）和一点创意CSS，将一点点的视图配置结合起来产生很好的效果。
- en: Time for another recipe
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 是时候准备另一道菜谱了
- en: Here is a hearty and tasty soup for a cold winter's day. Just about anyone,
    with just about any dietary restrictions, should be able to enjoy this healthy
    and delicious soup.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一道适合寒冷冬日的美味又营养的汤。几乎任何有饮食限制的人都能享受这道健康美味的汤。
- en: '![Time for another recipe](img/4659_10_19.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![是时候准备另一道菜谱了](img/4659_10_19.jpg)'
- en: '**Name**: Potato Leek Soup (Vegan)'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**名称**：土豆韭菜汤（纯素）'
- en: '**cuisineType**: European'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**菜系类型**：欧洲'
- en: '**description**: This healthy yet still creamy soup will really stick to your
    ribs and warm you up on a cold day.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**描述**：这道健康且仍然浓稠的汤会真正地温暖你的胃，在寒冷的日子里让你感到温暖。'
- en: '**recipeYield**: Ten servings'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**菜谱产量**：十份'
- en: '**prepTime**: 30 minutes'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**准备时间**：30分钟'
- en: '**cookTime**: 45 minutes'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**烹饪时间**：45分钟'
- en: '**ingredients**:'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**原料**：'
- en: Five to six large russet potatoes, peeled and quartered
  id: totrans-92
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 五到六个大土豆，去皮并切成四份
- en: Four leeks, cleaned and thinly sliced
  id: totrans-93
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 四根韭菜，洗净并切成薄片
- en: One large sweet onion, diced
  id: totrans-94
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个大甜洋葱，切碎
- en: Four tablespoon vegan butter
  id: totrans-95
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 四汤匙纯素黄油
- en: One tablespoon olive oil
  id: totrans-96
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一汤匙橄榄油
- en: Six cups vegetable broth
  id: totrans-97
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 六杯蔬菜高汤
- en: One cup plain soy milk
  id: totrans-98
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一杯普通大豆奶
- en: Sea salt
  id: totrans-99
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 海盐
- en: Freshly ground black pepper
  id: totrans-100
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新磨的黑胡椒
- en: One tablespoon rice vinegar
  id: totrans-101
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一汤匙米醋
- en: Two teaspoon crushed red pepper
  id: totrans-102
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两茶匙磨碎的红辣椒
- en: One-fourth cup parsley, finely chopped
  id: totrans-103
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1/4杯切碎的香菜
- en: '**instructions**:'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**说明**：'
- en: Melt the vegan butter in a large Dutch oven over medium heat.
  id: totrans-105
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在中火上用大荷兰锅融化纯素黄油。
- en: Once the butter melts, add diced onion and sauté until it just starts to caramelize.
  id: totrans-106
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当黄油融化后，加入切碎的洋葱，炒至开始变焦糖色。
- en: Add the finely sliced leeks and sauté over medium heat for 10 minutes, stirring
    every minute or so.
  id: totrans-107
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在中火上加入细切的韭菜，炒至10分钟，大约每分钟搅拌一次。
- en: Add diced potatoes and sauté with leeks and onions for 10 minutes.
  id: totrans-108
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加入切碎的土豆，与韭菜和洋葱一起炒至10分钟，大约每分钟搅拌一次。
- en: Add the olive oil and stir to combine.
  id: totrans-109
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加入橄榄油并搅拌以混合。
- en: Add vegetable broth and plain soy milk. Stir to combine. Bring to a boil over
    medium-high heat, and reduce the heat to low.
  id: totrans-110
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加入蔬菜高汤和平常的豆浆。搅拌均匀。用中高火煮沸，然后降低火力至低。
- en: Simmer over low heat for 15 minutes.
  id: totrans-111
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文火煮 15 分钟。
- en: Using an emersion hand blender, blend the soup into a smooth puree.
  id: totrans-112
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用浸入式手持搅拌器将汤搅拌成光滑的泥状。
- en: Stir in vinegar and crushed red pepper.
  id: totrans-113
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加入醋和磨碎的红辣椒。
- en: Stir in sea salt and freshly ground black pepper to taste.
  id: totrans-114
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据口味加入海盐和新鲜磨碎的黑胡椒。
- en: Stir in fresh parsley and enjoy.
  id: totrans-115
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加入新鲜的香菜并享用。
- en: Promoting a sandbox project to a full project
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将沙盒项目提升为完整项目
- en: Although we committed our Views semantic tabs module changes to the sandbox
    Git repository—and in doing so made the code available to anyone who wants to
    use it—using Git is a barrier for many people who are not developers and just
    want to download a module, configure it, and use it. A sandboxed module will also
    deter people from trying your module, because they may not trust a module that
    is not a full project (and Drupal includes a big warning at the top of all sandboxed
    module pages). I will create a release that can be downloaded easily without Git.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们将我们的视图语义标签模块的更改提交到了沙盒 Git 仓库——这样做使得代码可供任何想要使用它的人使用——但对于许多不是开发者只想下载模块、配置并使用的人来说，使用
    Git 是一个障碍。沙盒模块也可能阻止人们尝试你的模块，因为他们可能不会信任不是一个完整项目的模块（Drupal 在所有沙盒模块页面的顶部都有一个很大的警告）。我将创建一个可以轻松下载的版本，无需
    Git。
- en: At this point, I will create only an alpha release until the community has had
    an opportunity to test it. Once there has been some feedback, I will create a
    full release. Before we begin, we will follow the Module Documentation Guidelines
    at [https://www.drupal.org/node/161085](https://www.drupal.org/node/161085). After
    reading this page, I have decided to add the `README.txt` file to our views semantic
    tabs module.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个阶段，我将只创建一个 alpha 版本，直到社区有机会对其进行测试。一旦收到一些反馈，我将创建一个完整版本。在我们开始之前，我们将遵循模块文档指南
    [https://www.drupal.org/node/161085](https://www.drupal.org/node/161085)。阅读完这个页面后，我决定将
    `README.txt` 文件添加到我们的视图语义标签模块中。
- en: Time for action – creating README.txt and pushing to the sandbox
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 Views 语义模块提升为完整项目的时间 - 创建 README.txt 并推送到沙盒
- en: 'Create the `README.txt` file under the `views_semantic_tabs` folder as follows
    :'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `views_semantic_tabs` 文件夹下创建 `README.txt` 文件，如下所示：
- en: '[PRE5]'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Next, we need to push it to the Git sandbox. Open the terminal, go to the `modules/views_semantic_tabs`
    folder, and run the following commands:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要将其推送到 Git 沙盒。打开终端，转到 `modules/views_semantic_tabs` 文件夹，并运行以下命令：
- en: '[PRE6]'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '*What just happened?*'
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: We learned a bit about the Drupal `README.txt` file in the Module Documentation
    Guidelines. We added it to the module and pushed it to the Drupal project Git
    repository.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在模块文档指南中了解了一些关于 Drupal 的 `README.txt` 文件的内容。我们将其添加到模块中，并将其推送到 Drupal 项目的 Git
    仓库。
- en: Time for action – promoting the Views semantic module to a full project on Drupal.org
  id: totrans-126
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 Views 语义模块提升为完整项目的时间 - 提升视图语义模块到完整项目
- en: Visit our sandbox project's page at [https://www.drupal.org/sandbox/krishnakanth17/2665888](https://www.drupal.org/sandbox/krishnakanth17/2665888).
    And click on the **Edit** tab:![Time for action – promoting the Views semantic
    module to a full project on Drupal.org](img/4659_10_20.jpg)
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问我们的沙盒项目页面 [https://www.drupal.org/sandbox/krishnakanth17/2665888](https://www.drupal.org/sandbox/krishnakanth17/2665888)。然后点击**编辑**标签：![将
    Views 语义模块提升为 Drupal.org 上的完整项目的时间 - 提升视图语义模块到完整项目](img/4659_10_20.jpg)
- en: Then the **Promote** subtab:![Time for action – promoting the Views semantic
    module to a full project on Drupal.org](img/4659_10_21.jpg)
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后是**提升**子标签：![将 Views 语义模块提升为 Drupal.org 上的完整项目的时间 - 提升视图语义模块到完整项目](img/4659_10_21.jpg)
- en: Fill out the form, making sure to enter a short project name:![Time for action
    – promoting the Views semantic module to a full project on Drupal.org](img/4659_10_22.jpg)
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写表格，确保输入一个简短的项目名称：![将 Views 语义模块提升为完整项目的时间 - 提升视图语义模块到完整项目](img/4659_10_22.jpg)
- en: The next page asks whether I am sure that I want to promote the module, and
    I am sure, so I will click on the **Promote** button:![Time for action – promoting
    the Views semantic module to a full project on Drupal.org](img/4659_10_23.jpg)
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一页询问我是否确定要提升模块，我确定，所以我将点击**提升**按钮：![将 Views 语义模块提升为完整项目的时间 - 提升视图语义模块到完整项目](img/4659_10_23.jpg)
- en: Now it is no longer a sandbox project, and Drupal provides some important instructions
    regarding the remote repository for the project. The Git command in the following
    screenshot needs to be executed before any new changes can be pushed to the remote
    repository, because Drupal has moved it to a new location for full projects and
    to match the new short project name:![Time for action – promoting the Views semantic
    module to a full project on Drupal.org](img/4659_10_24.jpg)
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在它不再是沙盒项目，Drupal 为项目提供了关于远程仓库的一些重要说明。以下截图中的 Git 命令需要在将任何新更改推送到远程仓库之前执行，因为 Drupal
    已经将其移动到新的位置，以适应完整项目和新的简短项目名称：![操作时间 – 将 Views 语义模块提升为 Drupal.org 上的完整项目](img/4659_10_24.jpg)
- en: After all these steps, our module is promoted to a full project and we can access
    it with the URL [https://www.drupal.org/project/views_semantic_tabs](https://www.drupal.org/project/views_semantic_tabs).
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 经过所有这些步骤，我们的模块已提升为完整项目，并且我们可以通过 URL [https://www.drupal.org/project/views_semantic_tabs](https://www.drupal.org/project/views_semantic_tabs)
    访问它。
- en: Now we need to create a dev release for the Views semantic tabs module so that
    it is easier to download and install. Drupal provides instructions on the version
    control page of a full project page for creating a branch for a dev release with
    Git (these instructions are only displayed for module maintainers).
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们需要为 Views 语义标签模块创建一个开发版本，以便更容易下载和安装。Drupal 在完整项目页面的版本控制页面上提供了有关使用 Git 创建开发分支的说明（这些说明仅对模块维护者显示）。
- en: 'Executing the following Git commands on our local Views semantic tabs repository
    will create a new dev branch:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我们的本地 Views 语义标签仓库上执行以下 Git 命令将创建一个新的开发分支：
- en: '[PRE7]'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Now that we have a new dev branch in the Views semantic tabs repository, we
    will be able to add a dev release to the project. On the **View** page of the
    Views semantic tabs module, there is an **Add new release** link below **Project
    information**. Clicking on that link will take us to the **Create Project release**
    page. See this screenshot:![Time for action – promoting the Views semantic module
    to a full project on Drupal.org](img/4659_10_25.jpg)
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们已经在 Views 语义标签仓库中有一个新的开发分支，我们将能够向项目中添加一个开发版本。在 Views 语义标签模块的 **视图** 页面上，有一个位于
    **项目信息** 下的 **添加新版本** 链接。点击该链接将带我们到 **创建项目版本** 页面。请看这个截图：![操作时间 – 将 Views 语义模块提升为
    Drupal.org 上的完整项目](img/4659_10_25.jpg)
- en: The **Create release** page lists two Git release branches to select from, the
    `8.x.1.x` and `8.x.2.x` branch we just created. So we just need to select **8.x-2.x
    (8.x-2.x-dev)** and click on the **Next** button:![Time for action – promoting
    the Views semantic module to a full project on Drupal.org](img/4659_10_26.jpg)
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**创建版本** 页面列出了两个 Git 发布分支以供选择，即我们刚刚创建的 `8.x.1.x` 和 `8.x.2.x` 分支。因此，我们只需选择 **8.x-2.x
    (8.x-2.x-dev)** 并点击 **下一步** 按钮：![操作时间 – 将 Views 语义模块提升为 Drupal.org 上的完整项目](img/4659_10_26.jpg)'
- en: On the next page, we will enter some **Release notes** and click on the **Save**
    button; the other fields will already be filled because this is the first dev
    release.![Time for action – promoting the Views semantic module to a full project
    on Drupal.org](img/4659_10_27.jpg)
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一页，我们将输入一些 **发布说明** 并点击 **保存** 按钮；其他字段已经填写，因为这是第一个开发版本。![操作时间 – 将 Views 语义模块提升为
    Drupal.org 上的完整项目](img/4659_10_27.jpg)
- en: We have successfully promoted the Views semantic tabs module to full project
    status, and have created an initial dev release.![Time for action – promoting
    the Views semantic module to a full project on Drupal.org](img/4659_10_28.jpg)
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们已成功将 Views 语义标签模块提升为完整项目状态，并创建了一个初始开发版本。![操作时间 – 将 Views 语义模块提升为 Drupal.org
    上的完整项目](img/4659_10_28.jpg)
- en: 'Drupal will automatically generate the `tar.gz` and `.zip` files and attach
    them to the project, but it may take as long as 1-2 hours for a dev release (official
    non-dev releases are published within 5 minutes). Until then, only an unpublished
    release node will appear on the Releases for Views semantic tabs page. Also we
    can use Drush to download and enable the module by using this command:'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Drupal 将自动生成 `tar.gz` 和 `.zip` 文件并将它们附加到项目中，但开发版本可能需要 1-2 个小时（官方非开发版本在 5 分钟内发布）。在此期间，在
    Views 语义标签的发布页面只会出现一个未发布的版本节点。此外，我们可以使用 Drush 通过以下命令下载并启用模块：
- en: '[PRE8]'
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '*What just happened?*'
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: We learned a bit about the Drupal `README.txt` file from the Module Documentation
    Guidelines. We also learned how a module can be promoted from a sandbox project
    to a full project and how to release a dev release to the project.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从模块文档指南中了解了一些关于 Drupal 的 `README.txt` 文件的内容。我们还学习了如何将一个模块从沙盒项目提升为完整项目，以及如何发布一个开发版本到项目中。
- en: Introducing the Features module
  id: totrans-144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍 Features 模块
- en: The Drupal 8 Features module enables us to capture and manage a feature, which
    is a set of Drupal entities. The Features module will take different site-building
    components from modules by providing a UI and an API with exportables and bundle
    them together in a single module. A feature in normal terms might be a blog, a
    page, or an image gallery. So in the next topic, we are going to learn how to
    use the Features module. We are going to export our Recipe content type and use
    it in another environment.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: Drupal 8 的 Features 模块使我们能够捕捉和管理一组 Drupal 实体，即功能。Features 模块将通过提供可导出和捆绑的 UI
    和 API，从模块中获取不同的网站构建组件，并将它们捆绑成一个单独的模块。在常规术语中，一个功能可能是一个博客、一个页面或一个图片库。因此，在下一个主题中，我们将学习如何使用
    Features 模块。我们将导出我们的 Recipe 内容类型并在另一个环境中使用它。
- en: Time for action – installing the Features module
  id: totrans-146
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间——安装 Features 模块
- en: 'We are going download and install the Features module using Drush. Also we
    will install `features_ui` module as its package:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 Drush 下载并安装 Features 模块。同时，我们还将安装 `features_ui` 模块作为其包的一部分：
- en: Open the Terminal (Mac OS X) or Command Prompt (Windows) application, and change
    to the root directory of our d8dev site.
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端（Mac OS X）或命令提示符（Windows）应用程序，并切换到我们的 d8dev 网站的根目录。
- en: 'Use Drush to download and enable the Features module:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Drush 下载并启用 Features 模块：
- en: '[PRE9]'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '*What just happened?*'
  id: totrans-151
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: 'We enabled the Features module. It consists of two modules: the base Features
    module and the `features_ui` module. The Features module depends on the `config_update`
    module, which is downloaded automatically after enabling the Features module.
    We also enabled the `features_ui` module, which gives an easy UI to create features.'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已启用 Features 模块。它由两个模块组成：基础 Features 模块和 `features_ui` 模块。Features 模块依赖于 `config_update`
    模块，该模块在启用 Features 模块后自动下载。我们还启用了 `features_ui` 模块，它提供了一个易于创建功能的用户界面。
- en: Recipe feature by the Features module
  id: totrans-153
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Features 模块中的 Recipe 功能
- en: We are going to learn how to use the Features module by exporting our Recipe
    content type and related configurations such as—Fields of Recipe content type,
    Form displays, Form view displays, Views – Front Banner, Random Top Rated Recipe,
    Top rated recipes And Blocks – Top Recipe, Front Banner. Then we will look into
    how we can use it in other environments.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过导出我们的 Recipe 内容类型和相关配置（如——Recipe 内容类型的字段、表单显示、表单视图显示、视图——前导横幅、随机最高评分的食谱、最高评分的食谱，以及块——顶级食谱、前导横幅）来学习如何使用
    Features 模块。然后我们将探讨如何在其他环境中使用它。
- en: Time for action – using the Features module to export the Recipe content type
    and related configurations
  id: totrans-155
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间——使用 Features 模块导出 Recipe 内容类型和相关配置
- en: 'We are going to export our Recipe content type as a feature module and also
    export its related configurations as part of the Feature exported module:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将导出我们的 Recipe 内容类型作为一个功能模块，并将其相关配置作为导出模块的一部分导出：
- en: Open the d8dev site in your browser, click on the **Configuration** link in
    the **Admin** toolbar, and click on the **Features** link under the **DEVELOPMENT**
    section. We can see the next page as shown in following screenshot:![Time for
    action – using the Features module to export the Recipe content type and related
    configurations](img/4659_10_29.jpg)
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在浏览器中打开 d8dev 网站，点击 **Admin** 工具栏中的 **Configuration** 链接，然后在 **DEVELOPMENT**
    部分下点击 **Features** 链接。我们可以看到如下截图所示的下一页：![使用 Features 模块导出 Recipe 内容类型和相关配置的行动时间](img/4659_10_29.jpg)
- en: Next click on the **Included configuration** link under the **DESCRIPTION**
    column for the Recipe feature.![Time for action – using the Features module to
    export the Recipe content type and related configurations](img/4659_10_30.jpg)
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，点击 **DESCRIPTION** 列下的 **Included configuration** 链接，以查看 Recipe 功能。![使用
    Features 模块导出 Recipe 内容类型和相关配置的行动时间](img/4659_10_30.jpg)
- en: Here we can understand what configurations are included for this feature. It
    has the two blocks (Top Recipe and Front Banner), three views, and other field-related
    configurations that we are looking for. But I have noticed that the **Recipes
    by Cuisine** block is missing, so we will add this missing component in the next
    step.
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这里，我们可以了解此功能包含哪些配置。它有两个块（顶部食谱和前导横幅），三个视图以及其他我们寻找的字段相关配置。但我注意到**食谱按菜系**块缺失，因此我们将在下一步添加这个缺失的组件。
- en: Now click on the **Recipe** link feature. In the next page, we can see a list
    components and general information about this feature:![Time for action – using
    the Features module to export the Recipe content type and related configurations](img/4659_10_31.jpg)
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在点击**食谱**链接功能。在下一页，我们可以看到该功能的组件列表和一般信息：![使用功能模块导出食谱内容类型和相关配置的时刻](img/4659_10_31.jpg)
- en: 'Next under the **COMPONENTS** section, search for `recipes`. We notice that
    **Recipes by Cuisine: Block 2 (views_block__recipes_by_cuisine_block_2)** is visible
    under the **Block** section and select that checkbox:![Time for action – using
    the Features module to export the Recipe content type and related configurations](img/4659_10_32.jpg)'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**组件**部分下面，搜索`recipes`。我们注意到在**块**部分下有**食谱按菜系：块2（views_block__recipes_by_cuisine_block_2）**可见，并勾选该复选框：![使用功能模块导出食谱内容类型和相关配置的时刻](img/4659_10_32.jpg)
- en: Also, select the **Recipes by Cuisine (recipes_by_cuisine)** checkbox under
    the **Views** section.
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，在**视图**部分下，勾选**食谱按菜系（recipes_by_cuisine）**复选框。
- en: Next in the **GENERAL INFORMATION** section, leave all values as default and
    enter `8.x-1.0` as the **Version** field. Click on the **Download Archive** button:![Time
    for action – using the Features module to export the Recipe content type and related
    configurations](img/4659_10_33.jpg)
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**一般信息**部分，保留所有值默认，并将`8.x-1.0`输入为**版本**字段。点击**下载存档**按钮：![使用功能模块导出食谱内容类型和相关配置的时刻](img/4659_10_33.jpg)
- en: We can see that `Recipe.tar.gz` is downloaded. Now we extract this file into
    our `d8dev/module` directory. Open PhpStorm and see the `.yml` files and a few
    directories as shown in the following screenshot:![Time for action – using the
    Features module to export the Recipe content type and related configurations](img/4659_10_34.jpg)
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以看到`Recipe.tar.gz`已经下载。现在我们将这个文件提取到我们的`d8dev/module`目录下。打开PhpStorm，查看以下截图所示的`.yml`文件和几个目录：![使用功能模块导出食谱内容类型和相关配置的时刻](img/4659_10_34.jpg)
- en: We can see that there are many YML files. All of these files are configuration
    files for views, fields, and the Recipe content type. Also there is an `info.yml`
    file, so we can use this as a module. We can use this module in any other environment
    where it has Drupal 8 installed, and modules `views_semantic` and other modules
    installed. Follow [Chapter 1](ch01.html "Chapter 1. Setting Up a Drupal Development
    Environment"), *Setting Up a Drupal Development Environment*, to install another
    d8dev site.
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以看到有许多YML文件。所有这些文件都是视图、字段和食谱内容类型的配置文件。还有一个`info.yml`文件，因此我们可以将其用作模块。我们可以在任何已安装Drupal
    8并安装了`views_semantic`和其他模块的其他环境中使用此模块。按照[第1章](ch01.html "第1章。设置Drupal开发环境")，*设置Drupal开发环境*，安装另一个d8dev站点。
- en: '*What just happened?*'
  id: totrans-166
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: We enabled the Features module and looked into how to export the Recipe content
    type and its fields. We also looked into how we can export views and blocks along
    with the Recipe feature.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 我们启用了功能模块，并了解了如何导出食谱内容类型及其字段。我们还了解了如何导出与食谱功能一起导出的视图和块。
- en: When to use core Configuration Management compared to Features
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 与功能相比何时使用核心配置管理
- en: 'In Drupal 7 core, there is no system to manage configurations and the Features
    module can export and import configuration data bundled as code in modules. Features
    was used for configuration management and deployments. Because of the following
    issues, the module was not really suitable:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 在Drupal 7核心中，没有管理系统配置的系统，功能模块可以将配置数据作为代码打包导出和导入。功能模块用于配置管理和部署。由于以下问题，该模块并不真正适合：
- en: There is no consistency in the structure of the exported configurations
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导出配置的结构没有一致性
- en: It overrides and reverts modifications of content managers
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它覆盖并撤销内容管理器的修改
- en: 'Drupal 8 has introduced Configuration Management that can deal with such issues,
    but that does not mean we do not need the Features module anymore. Configuration
    Management was not suitable to export the bundling functionality to other environments,
    websites, clients, or projects. That is why we still need the Features module.
    Drupal 8 Features will return its bundling functionality (like a blog or image
    gallery) rather than just managing configurations. Also, Features allows us to
    pick and choose what configuration data we want to add to bundle in a simplified
    manner. Additionally, it is much easier to update the configurations stored in
    the module during development. There are also some issues with configuration management:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: Drupal 8 引入了配置管理系统，可以处理此类问题，但这并不意味着我们不再需要 Features 模块。配置管理系统不适合将捆绑功能导出到其他环境、网站、客户或项目中。这就是我们仍然需要
    Features 模块的原因。Drupal 8 的 Features 将返回其捆绑功能（如博客或图片库），而不仅仅是管理配置。此外，Features 允许我们以简化的方式选择和添加我们想要捆绑到包中的配置数据。此外，在开发过程中更新模块中存储的配置要容易得多。配置管理也存在一些问题：
- en: Adding configurations to a module is a manual process, meaning copying/pasting
    of YML data.
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将配置添加到模块是一个手动过程，意味着复制/粘贴 YML 数据。
- en: Modules provide only initial configuration files. If we want to change the configuration
    files, we need to do that through writing update hooks.
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模块仅提供初始配置文件。如果我们想更改配置文件，我们需要通过编写更新钩子来完成。
- en: If we uninstall a module, it does not remove all the configurations. And Drupal
    8 core cannot enable a module if a configuration already exists.
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果我们卸载一个模块，它不会删除所有配置。并且 Drupal 8 核心无法启用已存在配置的模块。
- en: My conclusion is that the Features module is still very important in Drupal
    8\. The module can be tagged as a developer module that aims to help Drupal developers
    in their daily work environment to bundle functionalities and easily import changes
    during development.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 我的结论是，Features 模块在 Drupal 8 中仍然非常重要。该模块可以被标记为一个开发者模块，旨在帮助 Drupal 开发者在日常工作中打包功能，并在开发过程中轻松导入更改。
- en: Summary
  id: totrans-177
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned more about the Views module and saw how a good Views
    plugin, along with some custom CSS, enabled us to create a very appealing rotating
    banner component for our d8dev site.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们更深入地了解了 Views 模块，并看到了一个优秀的 Views 插件以及一些自定义 CSS 如何使我们能够为 d8dev 网站创建一个非常吸引人的旋转横幅组件。
- en: We also learned a bit about the Drupal `README.txt` file and how a module is
    promoted from a sandbox project to a full project.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还了解了一些关于 Drupal `README.txt` 文件的信息，以及一个模块是如何从沙盒项目提升为完整项目的。
- en: Finally, we learned about the Features module for exporting the Recipe content
    type and its fields, blocks, and views as modules to use them in other environments.
    We also compared the Configuration Management system with the features module
    by focusing on a comparative study and when to use either of the two modules.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们学习了如何使用 Features 模块导出 Recipe 内容类型及其字段、块和视图作为模块，以便在其他环境中使用。我们还通过比较研究和确定何时使用这两个模块之一，来比较了配置管理系统与
    Features 模块。
- en: In the next chapter, we will cover some advanced search concepts and walk you
    through the installation and Drupal integration of the Java-based Apache Solr
    search engine. We will then enhance our site with a customized faceted search
    built on top of the Search API module.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将介绍一些高级搜索概念，并指导您完成基于 Java 的 Apache Solr 搜索引擎的安装和 Drupal 集成。然后，我们将使用基于
    Search API 模块的自定义分面搜索来增强我们的网站。
