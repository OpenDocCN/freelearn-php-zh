- en: Creating a Simple Theme with WordPress
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 WordPress 创建简单主题
- en: Welcome to the WordPress Themes Project book! In this book, we will build 10
    WordPress themes from scratch. We will look at all of the fundamental knowledge
    that is needed to build great themes.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎来到 WordPress 主题项目书！在这本书中，我们将从头开始构建 10 个 WordPress 主题。我们将查看构建优秀主题所需的所有基本知识。
- en: In this first chapter, we will create a very simple project. We will not really
    focus on creating an awesome design; the chapter is more about explaining the
    files that we need to create for our theme, the syntax, the dynamic snippets,
    and related topics.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将创建一个非常简单的项目。我们不会真正专注于创建一个令人惊叹的设计；本章更多的是解释我们需要为我们的主题创建的文件，语法，动态片段以及相关主题。
- en: Installing and setting up WordPress
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装和设置 WordPress
- en: This project will be a little different from the rest because it's going to
    be sort of an introductory project. We will see how to install and set up WordPress,
    so that you can have a fresh installation to work with. We will create a theme,
    but we'll be focusing more on the code and the overall look and style. We'll create
    files and folders, add PHP code, and related things. First, I want to get you
    familiarized with PHP code, and then we can add some simple style.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这个项目将与其他项目略有不同，因为它将是一个入门级项目。我们将学习如何安装和设置 WordPress，以便您可以使用一个全新的安装进行工作。我们将创建一个主题，但我们将更多地关注代码以及整体的外观和风格。我们将创建文件和文件夹，添加
    PHP 代码以及相关内容。首先，我想让您熟悉 PHP 代码，然后我们可以添加一些简单的样式。
- en: With respect to an environment, there are a lot of different ways you can run
    WordPress. You may have your own server set up; if you don't, you can use something
    like AMPPS, which is what I'll be using. It gives you an Apache server, PHP, and
    MySQL all on your local machine. You could also use XAMPP, which is very similar,
    or WAMP; there's also MAMP for Mac. There are lot of different choices, but if
    you want to use AMPPS, you can go to [https://ampps.com/](https://ampps.com/)
    and download it. It's available for Windows, Mac, and Linux, and it is pretty
    easy to get set up.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 关于环境，有非常多不同的方式可以运行 WordPress。您可能已经设置了您自己的服务器；如果没有，您可以使用类似 AMPPS 的产品，这就是我将要使用的产品。它为您提供了本地机器上的
    Apache 服务器、PHP 和 MySQL。您也可以使用 XAMPP，它与 AMPPS 非常相似，或者 WAMP；还有适用于 Mac 的 MAMP。有非常多不同的选择，但如果您想使用
    AMPPS，您可以去 [https://ampps.com/](https://ampps.com/) 下载它。它适用于 Windows、Mac 和 Linux，并且设置起来相当简单。
- en: 'Now, let''s see how to install WordPress. Most of you probably already know
    how to do this:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看如何安装 WordPress。你们大多数人可能已经知道如何做这件事：
- en: 'Go to the link [https://wordpress.org/download/](https://wordpress.org/download/)
    and click on the Download WordPress button:'
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往链接 [https://wordpress.org/download/](https://wordpress.org/download/) 并点击下载
    WordPress 按钮：
- en: '![](img/b9cba11f-138b-40b2-93f5-d041e21fc302.png)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/b9cba11f-138b-40b2-93f5-d041e21fc302.png)'
- en: 'Download the package and go to your server root folder, as shown here:'
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载软件包并前往您的服务器根目录，如下所示：
- en: '![](img/b59ebf81-858b-4b25-be7f-6ddd305a9576.png)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/b59ebf81-858b-4b25-be7f-6ddd305a9576.png)'
- en: If you're using AMPPS, the package should be in your `C:\` drive or in your
    route drive. In the `Ampps` folder, you'll find a `www` folder; this is the hosting
    root, as shown in the preceding image. In most cases, the default folder will
    be `Program Files` in the `C:\` drive.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用 AMPPS，软件包应该在您的 `C:\` 驱动器或您的路径驱动器中。在 `Ampps` 文件夹中，您会找到一个 `www` 文件夹；这是托管根目录，如前图所示。在大多数情况下，默认文件夹将是
    `C:\` 驱动器中的 `Program Files`。
- en: Create a folder called `wpthemes`; this is where we will install WordPress.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为 `wpthemes` 的文件夹；这就是我们将安装 WordPress 的位置。
- en: Go to the `Downloads` folder and open the WordPress package. Next, extract all
    the files into the project folder, `wpthemes`. Before we proceed, we need a database,
    a MySQL database, and if you installed AMPPS or if you're using XAMPP or something
    similar, then you most likely have phpMyAdmin, as shown as follows; this is what
    we'll be using.
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往 `Downloads` 文件夹并打开 WordPress 软件包。接下来，将所有文件提取到项目文件夹 `wpthemes` 中。在我们继续之前，我们需要一个数据库，一个
    MySQL 数据库。如果您安装了 AMPPS 或者您正在使用 XAMPP 或类似的产品，那么您很可能已经有了 phpMyAdmin，如下所示；这就是我们将要使用的工具。
- en: 'Now, go to `http://localhost/phpmyadmin`:'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，前往 `http://localhost/phpmyadmin`：
- en: '![](img/9424ac66-4bd0-4ad8-9163-7eff871a6e82.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/9424ac66-4bd0-4ad8-9163-7eff871a6e82.png)'
- en: Next, go to the Databases tab to create a new database called `wpthemes` and
    click on Create. We will see an empty database.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，转到数据库标签页创建一个名为 `wpthemes` 的新数据库并点击创建。我们将看到一个空数据库。
- en: We'll go back to the files we created or brought over from the WordPress package.
    You will see the wp-config-sample.php file. We'll rename this to just `wp-config`,
    and get rid of the `-sample`.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将回到我们创建的或从WordPress包中带来的文件。你会看到wp-config-sample.php文件。我们将将其重命名为 `wp-config`，并去掉
    `-sample`。
- en: Open the `wp-config` file using Sublime Text as the editor. You can use whichever
    editor you feel comfortable with.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Sublime Text作为编辑器打开 `wp-config` 文件。你可以使用你感到舒适的任何编辑器。
- en: 'Now, in this editor, we will change or add some information:'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在这个编辑器中，我们将更改或添加一些信息：
- en: '[PRE0]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: We will add `DB_NAME`, as shown here, which in this case is `wpthemes`, then
    `DB_USER`, which in this case is `root`, and then `DB_PASSWORD`—you need to enter
    whatever the password is for your database. The rest can stay the same.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将添加 `DB_NAME`，如图所示，在这个例子中是 `wpthemes`，然后是 `DB_USER`，在这个例子中是 `root`，然后是 `DB_PASSWORD`——你需要输入你数据库的密码。其余的可以保持不变。
- en: 'We''ll go ahead and save the entered information, and then we should be able
    to go to `localhost/wpthemes`:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将保存输入的信息，然后我们应该能够访问 `localhost/wpthemes`：
- en: '![](img/de9f8930-e0ca-463f-a423-ce9a13bc041d.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/de9f8930-e0ca-463f-a423-ce9a13bc041d.png)'
- en: 'We can now go ahead and run the installation. As shown in the following screenshot,
    we will enter Site Title as `WordpressDEV` and Username as `admin`. Next, you
    need to enter the password; I''m using a very weak password here. After you enter
    the email address, click on Install WordPress:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在可以继续进行安装。如图所示，我们将输入网站标题为 `WordpressDEV` 和用户名为 `admin`。接下来，你需要输入密码；我在这里使用了一个非常弱的密码。输入电子邮件地址后，点击安装WordPress：
- en: '![](img/ae0b3009-c916-4c22-8522-1d3fa21e920d.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/ae0b3009-c916-4c22-8522-1d3fa21e920d.png)'
- en: You can see that WordPress has been installed.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到WordPress已经安装了。
- en: '![](img/32223c39-9589-4411-8c58-2dfbdbe143c2.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/32223c39-9589-4411-8c58-2dfbdbe143c2.png)'
- en: 'Now, click on Log In, and this will take us to the admin login. Go ahead and
    put your username and password in, and it''ll take you to your backend:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，点击登录，这将带我们到管理员登录页面。输入你的用户名和密码，然后它会带你到你的后端：
- en: '![](img/15de4176-41ed-4aaf-bfc1-57108a9b47d8.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/15de4176-41ed-4aaf-bfc1-57108a9b47d8.png)'
- en: 'Now we can click on Visit Site, as shown in the preceding image. Open this
    in a new tab, and you''ll see that we have a brand new WordPress site:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以点击“访问网站”，如图所示。在新标签页中打开，你会看到一个全新的WordPress网站：
- en: '![](img/be1ab351-5ed9-4a1a-99c4-09af801622aa.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/be1ab351-5ed9-4a1a-99c4-09af801622aa.png)'
- en: This is what we'll be working with.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们将会工作的内容。
- en: I'm sure a lot of you have experience with WordPress.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我相信你们中的很多人都有WordPress的经验。
- en: 'On the `localhost/wpthemes/wp-admin/` WordPress page, we have our Posts area,
    where we can create and manage posts:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `localhost/wpthemes/wp-admin/` WordPress页面上，我们有我们的帖子区域，我们可以在这里创建和管理帖子：
- en: '![](img/2891ef4d-db3b-4796-bcb1-70336319f438.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/2891ef4d-db3b-4796-bcb1-70336319f438.png)'
- en: 'We can have Categories, as shown in the following screenshot:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以有分类，如图所示：
- en: '![](img/e314d092-2c92-490e-acff-9547e3f6809b.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e314d092-2c92-490e-acff-9547e3f6809b.png)'
- en: 'We can also see Pages:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以看到页面：
- en: '![](img/cf72a7cd-db33-4b5d-af2d-39c0f104e087.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/cf72a7cd-db33-4b5d-af2d-39c0f104e087.png)'
- en: 'Website pages such as About Us, or Services, would go on Pages. If we go to
    Appearance, and click on Themes, it will show us the installed themes, as shown
    in the following screenshot:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 网站页面如“关于我们”或“服务”将放在页面中。如果我们转到外观，并点击主题，它将显示已安装的主题，如图所示：
- en: '![](img/a872f956-756a-410f-a406-9339bf067e5e.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/a872f956-756a-410f-a406-9339bf067e5e.png)'
- en: By default, we have Twenty Seventeen, Twenty Fifteen, and Twenty Sixteen, but
    we will be creating a new theme in the next section.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，我们有Twenty Seventeen、Twenty Fifteen和Twenty Sixteen，但我们将在本节中创建一个新的主题。
- en: Creating and enabling themes
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建和启用主题
- en: 'In this section, we''ll see how to create our theme files and enable a theme.
    We''ll use Sublime Text and add the project folder, so that we can access the
    files easily:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将看到如何创建我们的主题文件并启用一个主题。我们将使用Sublime Text并添加项目文件夹，这样我们就可以轻松访问文件：
- en: Go to `C:\Ampps\www\wpthemes`.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往 `C:\Ampps\www\wpthemes`。
- en: 'The folder in which you want to create your theme is going to be `themes`,
    which is within the `wp-content` folder:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你想要创建主题的文件夹将是 `themes`，它位于 `wp-content` 文件夹内：
- en: '![](img/b3d8e69f-e1df-4ee7-805a-c2907429a357.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/b3d8e69f-e1df-4ee7-805a-c2907429a357.png)'
- en: You can see here that we have the three themes that come with WordPress already
    installed, namely `twentyfifteen`, `twentyseventeen`, and `twentysixteen`.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到这里我们已经有WordPress已经安装的三个主题，分别是 `twentyfifteen`、`twentyseventeen` 和 `twentysixteen`。
- en: 'We''ll create a new folder and call it `simple`. This is going to be the name
    of our theme:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将创建一个新的文件夹，命名为`simple`。这将是我们的主题名称：
- en: '![](img/4fde87e4-2103-44ca-9c9f-4538b3795a86.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/4fde87e4-2103-44ca-9c9f-4538b3795a86.png)'
- en: 'There are two files that you absolutely need in order to enable your theme:
    one will be `style.css`, and the other will be `index.php`. Now, the reason we
    need `style.css` is because that''s where all of our declarations, such as theme
    name and the descriptions, go.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 你绝对需要两个文件来启用你的主题：一个将是`style.css`，另一个将是`index.php`。现在，我们需要`style.css`的原因是所有我们的声明，比如主题名称和描述，都放在那里。
- en: 'We''ll open up a comment block and enter the fields, shown as follows:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将打开一个注释块并输入字段，如下所示：
- en: You can refer to the documentation at [https://codex.wordpress.org/Theme_Development](https://codex.wordpress.org/Theme_Development),
    which shows all the different fields that you can use. We'll not use all of them
    as they're not required. `Theme Name` is all that's required, but it's good to
    have some other information as well.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以参考[https://codex.wordpress.org/Theme_Development](https://codex.wordpress.org/Theme_Development)上的文档，它显示了你可以使用的所有不同字段。我们不会使用它们的所有，因为它们不是必需的。"主题名称"是必需的，但最好还有一些其他信息。
- en: '![](img/dbfb9b7d-9f96-4a5f-a9a9-daceea28fc3f.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/dbfb9b7d-9f96-4a5f-a9a9-daceea28fc3f.png)'
- en: 'We will enter the `Theme Name` as `Simple`. We also need to have an `Author`;
    you can put your own name there if you''d like. We''ll also have `Author URI`.
    If you are creating themes for clients, you''d probably want to put your company''s
    website there. We can have a `Description`. We''ll enter `Very Simple Wordpress
    Theme`, and then enter `Version: 1.0`. Let''s save this. Now, just having this
    information will allow WordPress to see your theme.'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将输入`主题名称`为`Simple`。我们还需要有一个`作者`；如果你愿意，可以把自己的名字填在那里。我们还将有`作者URI`。如果你是为客户创建主题，你可能想在那里放你公司的网站。我们可以有一个`描述`。我们将输入`非常简单的Wordpress主题`，然后输入`版本：1.0`。让我们保存这个。现在，仅仅有这些信息就允许WordPress看到你的主题。
- en: 'Now let''s go back into our `localhost/wpthemes/wp-admin/themes.php` backend,
    and go to Appearance and then Themes; you can see the Simple theme, and we can
    actually activate it:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们回到我们的`localhost/wpthemes/wp-admin/themes.php`后端，然后转到外观和主题；你可以看到Simple主题，我们实际上可以激活它：
- en: '![](img/6767a557-05b8-4493-9865-d8604cc633ca.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/6767a557-05b8-4493-9865-d8604cc633ca.png)'
- en: 'Now, in order for a screenshot to show in the Simple theme, we need to put
    an image in the root of the theme folder and call it `screenshot.png`:'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，为了让截图在Simple主题中显示，我们需要在主题文件夹的根目录中放一个名为`screenshot.png`的图片：
- en: '![](img/ef7d13d1-5b20-4974-a437-4e4038d5dc63.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/ef7d13d1-5b20-4974-a437-4e4038d5dc63.png)'
- en: 'Let''s create a sample screenshot using Photoshop, which just says SimpleTheme,
    and place that in our `theme` folder, as shown in the preceding screenshot. Go
    to the server root, `www\wpthemes\wp-content\themes`, and then `simple`. We''ll
    just paste that screenshot in there. Now if we go back to the backend and reload,
    you can see that we have a screenshot, as shown here:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们使用Photoshop创建一个示例截图，上面写着SimpleTheme，并将其放置在我们的`theme`文件夹中，如前面的截图所示。转到服务器根目录，`www\wpthemes\wp-content\themes`，然后`simple`。我们只需将截图粘贴在那里。现在如果我们回到后端并重新加载，你可以看到我们有一个截图，如下所示：
- en: '![](img/ab65a2aa-f54e-46ce-8434-9cd66cae70ab.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/ab65a2aa-f54e-46ce-8434-9cd66cae70ab.png)'
- en: Well, it's not really a screenshot but it's an image.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 嗯，这其实不是一个截图，但它是一张图片。
- en: 'Now if we go ahead and activate our theme for this, and go to our frontend
    and reload—we get absolutely nothing because we haven''t added any code yet:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，如果我们继续激活这个主题，并转到我们的前端并重新加载——我们什么都没有，因为我们还没有添加任何代码：
- en: '![](img/78fccd00-c55f-4f9e-aa62-ac0bc1cf6abf.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/78fccd00-c55f-4f9e-aa62-ac0bc1cf6abf.png)'
- en: Our theme just contains nothing, it's completely blank.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的主题什么都没有，它是完全空白的。
- en: 'Now let''s open the `index.php` file and enter `TEST`, then save and reload;
    we can see that we get `TEST` on our frontend too:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们打开`index.php`文件并输入`TEST`，然后保存并重新加载；我们可以在前端看到`TEST`：
- en: '![](img/4e893e2b-086d-49b7-b968-f2cf1f5d38f8.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/4e893e2b-086d-49b7-b968-f2cf1f5d38f8.png)'
- en: Basically, it's reading our `index.php` file by default.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上，它默认读取我们的`index.php`文件。
- en: Creating an HTML structure
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建HTML结构
- en: 'Now let''s create our HTML structure. We will put in some core HTML tags, as
    shown here:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们创建我们的HTML结构。我们将放入一些核心HTML标签，如下所示：
- en: '[PRE1]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: As you can see, we have `DOCTYPE`, an `html`, `head`, `body`, and `title` tags.
    Now, if you consider starting at the top, we have our `<html>` tags; sometimes,
    you want to include a language here, and WordPress has a function that we can
    actually include in this file to make it dynamic. We can add `php language_attributes`,
    which is a function that will determine the language we want the theme to display.
    You probably want to make your title dynamic, or you want to add your site name;
    to do that, we can say `php` and use a function called `bloginfo`, as shown in
    the preceding code block. This is really useful because it has a bunch of things
    that you can get, such as the site name, the description, the character set, URLs,
    and the list goes on. You can actually look at the documentation to see exactly
    what it includes. However, what we'll use is `name`.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，我们有`DOCTYPE`、`html`、`head`、`body`和`title`标签。现在，如果您从顶部开始考虑，我们有我们的`<html>`标签；有时，您想在这里包含一个语言，WordPress有一个函数，我们可以将其包含在这个文件中使其动态。我们可以添加`php
    language_attributes`，这是一个将确定主题要显示的语言的函数。您可能希望使标题动态，或者想添加您的站点名称；为此，我们可以使用`php`并使用一个名为`bloginfo`的函数，如前一个代码块所示。这非常有用，因为它包含了许多您可以获取的东西，例如站点名称、描述、字符集、URLs等等。您实际上可以查看文档以了解它具体包含什么。然而，我们将使用`name`。
- en: 'Once you save this, you can go back and reload the page. You can see that the
    title says WordpressDEV, as shown here:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存后，您可以返回并重新加载页面。您可以看到标题显示为WordpressDEV，如这里所示：
- en: '![](img/5f851d2b-91ea-4f06-b91b-9e6b7fc89d48.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/5f851d2b-91ea-4f06-b91b-9e6b7fc89d48.png)'
- en: If you remember, this is what we named the site.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您还记得，这是我们给站点取的名字。
- en: 'Let''s go back to our `head` tag and continue. We''ll need a character set,
    so we''ll enter `meta charset`. Then, we can use `bloginfo` here as well, and
    just pass in `charset`:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们回到我们的`head`标签并继续。我们需要一个字符集，所以我们将输入`meta charset`。然后，我们也可以在这里使用`bloginfo`，只需传递`charset`：
- en: '[PRE2]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Let''s save this, and take a look at our source code. Using *Ctrl* + *U*, you
    can look at both the language attributes; it says that we''re using English US
    and the character set is UTF-8, as shown here:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们保存并查看我们的源代码。使用*Ctrl* + *U*，您可以查看语言属性；它说我们使用的是英语美国和字符集是UTF-8，如这里所示：
- en: '![](img/9792478d-f9f5-41ff-8c0b-0149a9e89d0f.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/9792478d-f9f5-41ff-8c0b-0149a9e89d0f.png)'
- en: These things can now be controlled from within WordPress.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这些东西现在可以从WordPress内部控制。
- en: Working with the style sheet
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 与样式表一起工作
- en: 'The next thing we will do is include our style sheet:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步我们将要做的是包含我们的样式表：
- en: 'Open the `style.css` file and enter the following code:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`style.css`文件并输入以下代码：
- en: '[PRE3]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Save this and reload; we''ll not get a black background as the style sheet
    is not being read:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存并重新加载；由于样式表没有被读取，我们将不会得到黑色背景：
- en: '![](img/9dff0604-b202-4dee-a82a-388a606b6fe0.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/9dff0604-b202-4dee-a82a-388a606b6fe0.png)'
- en: 'In order for that style sheet to be seen, we''ll enter the following code:'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了让这个样式表被看到，我们将输入以下代码：
- en: '[PRE4]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The preceding code will get the style sheet from the correct location.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码将从正确的位置获取样式表。
- en: 'Save this code and reload. We can now see a black background:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存此代码并重新加载。现在我们可以看到黑色背景：
- en: '![](img/0dc2bb58-567b-4108-b0ff-cec4f1f88ecb.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/0dc2bb58-567b-4108-b0ff-cec4f1f88ecb.png)'
- en: So whatever we put in our style sheet will now be registered.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们在样式表中放入的任何内容现在都将被注册。
- en: Adding a function in the head tag
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在`head`标签中添加一个函数
- en: 'We will next see how to enter a function called `wp_head()` in the `<head>`
    tag. This puts any additional information that is needed into the `head` tag.
    For example, when you install a plugin and, let''s say, it needs to include a
    style sheet, or it needs to do something in the head, to do this we need to enter
    the following code. So when you create plugins, you can have stuff pop out right
    in the head:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 我们接下来将看到如何在`<head>`标签中输入一个名为`wp_head()`的函数。这会将所需的所有附加信息放入`head`标签中。例如，当您安装一个插件并且，比如说，它需要包含一个样式表，或者需要在`head`中做些事情，为了这样做，我们需要输入以下代码。所以当您创建插件时，您可以让内容直接在`head`中弹出：
- en: '[PRE5]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'In the following source code, we have a bunch of other stuff now, and this
    is all coming from that `wp_head()` function:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的源代码中，我们现在有一堆其他的东西，这些都是从那个`wp_head()`函数来的：
- en: '![](img/0775d382-2c1e-4215-827d-d2529c813ed0.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/0775d382-2c1e-4215-827d-d2529c813ed0.png)'
- en: 'If I go ahead and take the `wp_head()` function out, and then go back and reload,
    it just gives us what we have in the `index.php` file. So we''re going to need
    the `wp_head()` function:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我继续移除`wp_head()`函数，然后返回并重新加载，它只会给我们`index.php`文件中的内容。所以我们需要`wp_head()`函数：
- en: '![](img/3c4d39d4-331f-4f82-9005-55a2d00bc9c3.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/3c4d39d4-331f-4f82-9005-55a2d00bc9c3.png)'
- en: In the next section, we'll start to build out the body. We will see how to grab
    posts, create menus, and so on.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将开始构建主体。我们将看到如何获取文章、创建菜单等。
- en: Building the HTML body
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建HTML主体
- en: 'We will now see how to add basic HTML tags in the body:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将看到如何在主体中添加基本的 HTML 标签：
- en: 'We''ll create a `<header>` tag, which is an HTML5 tag. We will enter an `<h1>`
    tag, and in this tag we will add the website name:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将创建一个 `<header>` 标签，这是一个 HTML5 标签。我们将输入一个 `<h1>` 标签，在这个标签中我们将添加网站名称：
- en: '[PRE6]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'We can actually take the dynamic code from the `<title>` tag, which we saw
    earlier, and put that in `<h1>` as well. Now if we save that and look at our frontend,
    we get WordpressDEV:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们实际上可以从之前看到的 `<title>` 标签中获取动态代码，并将其放入 `<h1>` 中。现在如果我们保存并查看我们的前端，我们得到“WordpressDEV”：
- en: '![](img/7cc898a9-faeb-4896-835f-eaec2e6cb0cb.png)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/7cc898a9-faeb-4896-835f-eaec2e6cb0cb.png)'
- en: 'Now, if we wanted to change the frontend output, we could go to Settings, and
    change Site Title to `My Website`:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，如果我们想更改前端输出，我们可以转到设置，并将网站标题更改为“我的网站”：
- en: '![](img/6ac3d240-cf17-4a63-81b9-c43789833751.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/6ac3d240-cf17-4a63-81b9-c43789833751.png)'
- en: Save the settings. Now, we can see the change.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存设置。现在，我们可以看到变化。
- en: 'In addition to the name, we can also include a Tagline. To do this, we will
    enter the `<small>` tags, but instead of using `name`, we will use `description`,
    as shown in the following code block:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 除了名称外，我们还可以包括一个标语。为此，我们将输入 `<small>` 标签，但我们将使用 `description` 而不是 `name`，如下面的代码块所示：
- en: '[PRE7]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'When you reload it, you can see that we get Just another WordPress site:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你重新加载时，你可以看到我们得到“这只是另一个 WordPress 网站”：
- en: '![](img/b4abc0b1-98bd-4788-b866-ffdbe4f9c686.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/b4abc0b1-98bd-4788-b866-ffdbe4f9c686.png)'
- en: 'We can make the changes in the settings. We''ll enter `The Best Website Ever`
    in the Tagline textbox:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以在设置中进行更改。我们在标语文本框中输入“史上最佳网站”：
- en: '![](img/a35d81a0-8d32-4223-b831-8da2cfca09b4.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/a35d81a0-8d32-4223-b831-8da2cfca09b4.png)'
- en: 'Save the changes and put `description` in the `span` tag, as shown in the following
    code block:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存更改，并在 `span` 标签中放入 `description`，如下面的代码块所示：
- en: '[PRE8]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'When we reload, we get this:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当我们重新加载时，我们得到这个：
- en: '![](img/42c40148-05c4-4c90-8831-64fcdf80b38b.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/42c40148-05c4-4c90-8831-64fcdf80b38b.png)'
- en: 'Now let''s add more HTML tags, as shown in the following code block:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们添加更多的 HTML 标签，如下面的代码块所示：
- en: '[PRE9]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Here, we go under the `<header>` tag and enter the `div` class as `main`. We''ll
    fetch our blog posts; WordPress uses something called the loop, or the main loop,
    which will fetch every blog post that you have, regardless of the category or
    whatever it may be. Without specifying any restrictions, it''s going to get every
    post. So, the first thing we''ll do is check to see whether there are any posts.
    We''ll use an `if` statement for that, and then use the shorthand. We will use
    the syntax that will help us go quickly in and out of `php`. We''ll then use `if(have_posts)`
    to see whether there are any posts in WordPress. We''ll also put an `else` statement
    here, so that if there are no posts, then we just want to let the user know that.
    Now, instead of just spitting out text, we''ll use a function. We''ll say echo
    `wpautop`; what this does is that it takes double line breaks and automatically
    makes them into paragraphs. It''s a good function to use when you just want to
    output text. We''ll say, `Sorry, No posts were found`. Then, inside `if(have_posts)`,
    we''ll use `post found`. Let''s go and reload, and you can see that we get post
    found:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们进入 `<header>` 标签并输入 `div` 类作为 `main`。我们将获取我们的博客文章；WordPress 使用一种称为循环或主循环的东西，它会获取你所有的博客文章，无论类别或任何其他内容。不指定任何限制，它将获取每一篇文章。所以，我们首先要做的是检查是否有文章。我们将使用一个
    `if` 语句来做这件事，然后使用简写。我们将使用帮助我们快速进入和退出 `php` 的语法。然后，我们将使用 `if(have_posts)` 来查看 WordPress
    中是否有文章。我们还会在这里放一个 `else` 语句，这样如果没有任何文章，我们只想让用户知道这一点。现在，我们不再只是输出文本，我们将使用一个函数。我们将说
    echo `wpautop`；这个函数的作用是将双行换行符自动转换为段落。当你只想输出文本时，这是一个很好的函数。我们将说，“抱歉，没有找到文章”。然后，在
    `if(have_posts)` 内部，我们将使用 `post found`。让我们去重新加载，你可以看到我们得到“文章找到”：
- en: '![](img/eea6a0fa-7094-4325-8450-509aabf6b82d.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/eea6a0fa-7094-4325-8450-509aabf6b82d.png)'
- en: 'Let''s go back to our backend and go to Posts; you can see that we have Hello
    world. We will move that to Trash, and if we now go back and reload, we get Sorry,
    No posts were found, as shown in the following screenshot:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们回到我们的后端，转到帖子；你可以看到我们有“Hello world”。我们将将其移动到回收站，如果我们现在返回并重新加载，我们将得到“抱歉，没有找到文章”，如下面的截图所示：
- en: '![](img/884a1265-bbed-433d-a6aa-37e515e6d086.png)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/884a1265-bbed-433d-a6aa-37e515e6d086.png)'
- en: 'Now let''s go to Trash and restore it. We will see that the post can be seen
    again. We will now see how to display these posts. We''ll delete `post found`
    within the `if` statement and we''ll use a while loop for this with a `php` tag.
    We''ll use `while(have_posts)`. Now, with WordPress, we have to use this thing
    called `the_post()`, so we''ll use `the_post()`, which is a little weird as far
    as a syntax is concerned. I''ve never really seen this anywhere else apart from
    WordPress, but just know that you need to have this as well. Then, we''ll use
    `endwhile`; again, this is just using shorthand syntax, so you could just use
    the curly braces. But what we''ll do here is when it finds a post, we want to
    get the title. So, in an `<h3>` tag, we''ll use `<?php the_title(); ?>`, which
    is a function:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在让我们转到回收站并恢复它。我们会看到帖子可以再次被看到。我们现在将看到如何显示这些帖子。我们将在 `if` 语句中的 `post found` 下删除，我们将使用一个带有
    `php` 标签的 while 循环来完成这个操作。我们将使用 `while(have_posts)`。现在，在 WordPress 中，我们必须使用一个叫做
    `the_post()` 的东西，所以我们将使用 `the_post()`，这在语法上有点奇怪。我从未在其他任何地方真正看到过这个，除了 WordPress，但只需知道你也需要这个。然后，我们将使用
    `endwhile`；这又是一个简写语法，所以你也可以只使用花括号。但在这里，当它找到一个帖子时，我们想要获取标题。所以，在一个 `<h3>` 标签中，我们将使用
    `<?php the_title(); ?>`，这是一个函数：
- en: '[PRE10]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Let''s go and reload, and now you can see that it''s getting the Hello world!
    title:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们去重新加载，现在你可以看到它正在获取“Hello world!”标题：
- en: '![](img/7ebeeb26-1ca2-4184-924b-de9b61b51c60.png)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7ebeeb26-1ca2-4184-924b-de9b61b51c60.png)'
- en: 'Now, let''s go ahead and create a post as an example. We will name it `My Blog
    Post`, and let''s just get some sample text. I have taken some text from the [www.lipsum.com](http://www.lipsum.com)
    website:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们继续创建一个帖子作为例子。我们将命名为“我的博客帖子”，让我们先获取一些示例文本。我从 [www.lipsum.com](http://www.lipsum.com)
    网站上取了一些文本：
- en: '![](img/47d8ad69-35c1-45db-910b-4e5dc128ec36.png)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![](img/47d8ad69-35c1-45db-910b-4e5dc128ec36.png)'
- en: We will add a couple of paragraphs and publish it.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将添加几个段落并发布它。
- en: 'Now let''s reload; you can see that it gives us My Blog Post:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在让我们重新加载；你可以看到它给出了“我的博客帖子”：
- en: '![](img/9298e74c-6c8f-4ac9-b791-66e67b094790.png)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9298e74c-6c8f-4ac9-b791-66e67b094790.png)'
- en: 'Now, to get the actual content, we''ll go right to the `<h3>` tag and enter
    `<?php the_content(); ?>`. As you can see, WordPress makes it really easy in terms
    of the names of the functions:'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，为了获取实际内容，我们将直接跳到 `<h3>` 标签并输入 `<?php the_content(); ?>`。正如你所见，WordPress 在函数名称方面确实非常简单：
- en: '[PRE11]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'So now, this gets us the content from each blog post and displays it:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，现在，这会从每个博客帖子中获取内容并显示出来：
- en: '![](img/1e3d625f-c0b1-4ca9-867a-f6697d1e6951.png)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1e3d625f-c0b1-4ca9-867a-f6697d1e6951.png)'
- en: 'There are different things that we can display with the posts: the date, author,
    categories, and so on. Let''s go right under the title and add the following code
    block:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以用不同的方式显示帖子：日期、作者、分类等等。让我们直接在标题下方添加以下代码块：
- en: '[PRE12]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Here, we added `Created By` along with the author's name.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们添加了“由”以及作者的名字。
- en: 'When we reload, we can see the following output:'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当我们重新加载时，我们可以看到以下输出：
- en: '![](img/02821f99-7456-49dc-84d2-841b93ab4b48.png)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![](img/02821f99-7456-49dc-84d2-841b93ab4b48.png)'
- en: In this case, admin is the username of the person who created the post.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个情况下，admin 是创建帖子的用户的用户名。
- en: 'Now, if you want the date, you can add this code:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，如果你想得到日期，你可以添加以下代码：
- en: '[PRE13]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'When we reload, we get Created By admin on December 12, 2017; basically, it
    gives us the date:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当我们重新加载时，我们得到“由 admin 创建于 2017 年 12 月 12 日”；基本上，它给我们日期：
- en: '![](img/dd886fd3-8e2d-484f-8bd9-7ebc25b0e325.png)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dd886fd3-8e2d-484f-8bd9-7ebc25b0e325.png)'
- en: We will now see how to format the date. You can format the date in a lot of
    different ways; if you know PHP and you've worked with the date function, you
    know that there's a lot of different formatting options.
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在将看到如何格式化日期。你可以用很多不同的方式来格式化日期；如果你知道 PHP 并且使用过日期函数，你知道有很多不同的格式化选项。
- en: 'We will take a look at one such example from `php.net/manual/en/function.date.php`:'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们将查看 `php.net/manual/en/function.date.php` 中的一个这样的例子：
- en: '[PRE14]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Let''s see what that gives us. You can see the format, shown in the following
    screenshot, with the day, date, time, and PM or AM:'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们看看这会给我们带来什么。你可以看到以下截图中的格式，包括日期、时间以及上午或下午：
- en: '![](img/1df3d68d-f74c-4cca-8df0-8292bc6bf39b.png)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1df3d68d-f74c-4cca-8df0-8292bc6bf39b.png)'
- en: 'One thing that I like to do is to use the time instead of the date:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 我喜欢做的一件事是使用时间而不是日期：
- en: '[PRE15]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'This will give you just the time; it doesn''t give you the date, but you can
    actually format it to give you the date:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 这只会给你时间；它不会给你日期，但你实际上可以格式化它以显示日期：
- en: '[PRE16]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'If we take a look at this, it gives us the date and the time:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们看一下，它会给我们日期和时间：
- en: '![](img/2acbeeec-d58f-4c12-8f2c-436ceec424ad.png)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2acbeeec-d58f-4c12-8f2c-436ceec424ad.png)'
- en: So it's all up to you, it all depends on your preferences.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 所以这完全取决于你，一切都取决于你的喜好。
- en: 'Now, let''s do a little bit of styling. We will see how to add a `<footer>`
    tag at the bottom, and a paragraph to make it dynamic. We can put a copyright
    symbol, and then for the year, instead of just typing in the year, we can use
    `the_date()`, and then just pass in as a parameter, `Y`, as shown in the following
    code:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们做一些样式调整。我们将看到如何添加底部的`<footer>`标签，并添加一个段落使其动态。我们可以放一个版权符号，然后对于年份，我们不仅可以直接输入年份，还可以使用`the_date()`，然后只需传入参数`Y`，如下所示：
- en: '[PRE17]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'So we get © 2017:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们得到© 2017：
- en: '![](img/273fae4a-8879-49e3-a52c-d353f6a5a97a.png)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![](img/273fae4a-8879-49e3-a52c-d353f6a5a97a.png)'
- en: 'Then, if we want the site name, we can just say `bloginfo` and pass in `name`:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，如果我们想获取网站名称，我们只需说`bloginfo`并传入`name`：
- en: '[PRE18]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: So now we have a dynamic footer.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 所以现在我们有一个动态的页脚。
- en: Base styling
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基础样式
- en: Now let's add some base styling. To do this, we will work with the style sheet.
    Now, the idea of this whole project actually is not to create some great-looking
    theme, I just want you to get familiar with the PHP code and how themes are set
    up.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们添加一些基础样式。为此，我们将与样式表一起工作。现在，这个项目的整体想法实际上并不是创建一个看起来很棒的主题，我只是想让你熟悉PHP代码以及主题是如何设置的。
- en: 'Let''s enter the following code:'
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们输入以下代码：
- en: '[PRE19]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Save the code and reload. You will get the following result:'
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存代码并重新加载。你会得到以下结果：
- en: '![](img/34a26c90-74f2-4597-bd8e-8b7b2b64ac86.png)'
  id: totrans-173
  prefs: []
  type: TYPE_IMG
  zh: '![](img/34a26c90-74f2-4597-bd8e-8b7b2b64ac86.png)'
- en: You can see the empty space at the top; this is because we're logged in as an
    admin, so even on the frontend it knows that, and it's trying to display the admin
    bar. Now, it's not displaying the admin bar because we don't have the special
    function to display it.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到顶部的空白区域；这是因为我们以管理员身份登录，所以即使在前端它也知道这一点，并且试图显示管理员栏。现在，它没有显示管理员栏，因为我们没有显示它的特殊功能。
- en: 'Let''s go to `index.php`, and before the ending body, we''ll add `<?php wp_footer();
    ?>`:'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们转到`index.php`，在结束`body`之前，我们将添加`<?php wp_footer(); ?>`：
- en: '[PRE20]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Save this and reload. You can see that we have the admin bar:'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存此代码并重新加载。你可以看到我们有了管理员栏：
- en: '![](img/4abe7ce5-4169-408b-b3f0-954f63868aa4.png)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4abe7ce5-4169-408b-b3f0-954f63868aa4.png)'
- en: 'We will add a little padding to `h1` at the bottom:'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将在底部的`h1`上添加一点填充：
- en: '[PRE21]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'We will also add a `container` div to the code, as shown here:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们还将向代码中添加一个`container` div，如图所示：
- en: '[PRE22]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: We have set `width` to `1020 px`, `margin` to `0 auto`, and `overflow` to `auto`.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已将`width`设置为`1020 px`，`margin`设置为`0 auto`，以及`overflow`设置为`auto`。
- en: 'We will now go to `index.php`, to the `<header>` tag, and enter this code:'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在将转到`index.php`，到`<header>`标签，并输入此代码：
- en: '[PRE23]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'We''ll add the same code to `main`:'
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将在`main`上添加相同的代码：
- en: '[PRE24]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Also, for `footer`, it would be the same:'
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于`footer`，也会一样：
- en: '[PRE25]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: When you reload, you can see that everything's moved to the middle.
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你重新加载时，你可以看到所有内容都移动到了中间。
- en: 'Let''s add a little bit of styling to `footer`. Just copy what we have in the
    header. We''ll also align the text to the center:'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们在`footer`上添加一些样式。只需复制我们在头部中有的样式。我们还将文本对齐到中心：
- en: '[PRE26]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Next, we will add `margin` to the `main` div:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将向`main` div添加`margin`：
- en: '[PRE27]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Let''s reload and this is what we get:'
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们重新加载，这就是我们得到的结果：
- en: '![](img/081348c6-53e4-409c-a46d-b9cdfd9f26bd.png)'
  id: totrans-196
  prefs: []
  type: TYPE_IMG
  zh: '![](img/081348c6-53e4-409c-a46d-b9cdfd9f26bd.png)'
- en: You can see that we have our header and main area, where we're looping through
    the posts and displaying them, and we have our footer area.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到我们有我们的头部和主要内容区域，我们在这里遍历帖子并显示它们，以及我们的页脚区域。
- en: Now, common practice in WordPress is to break the header and footer into their
    own files and then include them in the index.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，WordPress中的常见做法是将头部和页脚拆分成各自的文件，然后在索引中包含它们。
- en: To do this, we will now create a new file, call it `header.php`, and then create
    a new file called `footer.php`.
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要做到这一点，我们现在将创建一个新文件，命名为`header.php`，然后创建一个名为`footer.php`的新文件。
- en: 'Let''s go to the `index.php` file and cut the portion of code, as shown in
    the following code block:'
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们转到`index.php`文件，并剪切以下代码块中的部分，如下所示：
- en: '[PRE28]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'We''ll replace the highlighted portion with `php get_header`:'
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将用`php get_header`替换高亮显示的部分：
- en: '[PRE29]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Go into `header.php` and paste the previous code which was cut, and save it.
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入`header.php`，粘贴之前剪切的代码，并保存。
- en: 'We will now do the same thing with `footer`:'
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在将对`footer`做同样的事情：
- en: '[PRE30]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'We will cut the code shown in the preceding code block and replace it with
    `php get_footer()`, as shown in the following code block:'
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将剪切前面代码块中显示的代码，并用`php get_footer()`替换它，如下所示：
- en: '[PRE31]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Paste the `footer` code that was cut in *step 18* and place that in the `footer`
    file. The output will look the exact same.
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将在第18步中剪切的`footer`代码粘贴到`footer`文件中。输出将看起来完全一样。
- en: Next, we will see how just a click on these posts will take us to the actual
    individual post page.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将看到点击这些帖子是如何带我们到实际的单独帖子页面的。
- en: Single posts and thumbnails
  id: totrans-211
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 单个帖子和小缩略图
- en: 'Now we''ll take a look at the single post page. Right now, we have this roll
    of posts from our site, but that''s it; we can''t click on it and go to the individual
    post, where we would have our comments and things like that. So let''s go ahead
    and work on that:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将查看单篇帖子页面。目前，我们有来自我们网站的帖子滚动条，但仅此而已；我们无法点击它并进入单个帖子，在那里我们会看到评论等。所以让我们继续工作：
- en: 'Let''s go to the `index.php` file and make the title clickable. We''ll add
    a link to the title. To do this, let''s go to the `<h3>` tag, as shown in the
    following code; add the `<a>` tag, and wrap that around the `<title>` tag:'
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们转到`index.php`文件并使标题可点击。我们将给标题添加一个链接。为此，让我们转到以下代码中的`<h3>`标签；添加一个`<a>`标签，并将其包裹在`<title>`标签周围：
- en: '[PRE32]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Let''s save it and reload:'
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们保存并重新加载：
- en: '![](img/72e47068-3fb7-4504-8b92-1ad1e558d740.png)'
  id: totrans-216
  prefs: []
  type: TYPE_IMG
  zh: '![](img/72e47068-3fb7-4504-8b92-1ad1e558d740.png)'
- en: Now you'll see we have a link on the titles. For example, when we click on My
    Blog Post, it takes us to the post.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你将看到标题上有一个链接。例如，当我们点击我的博客帖子时，它会带我们到帖子。
- en: 'Let''s add a little bit of style to the links. I don''t like the color of the
    links; I also want to make the description bold so that it stands out. It is good
    to wrap each post in its own div. Where we have `while`, we''ll put it in `<article>`,
    as shown in the following code:'
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们给链接添加一点样式。我不喜欢链接的颜色；我还想使描述加粗，以便突出显示。将每个帖子包裹在其自己的`div`中是个好主意。在我们有`while`的地方，我们将它放在`<article>`中，如下面的代码所示：
- en: '[PRE33]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Then, in our style sheet, let''s add the color:'
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，在我们的样式表中，让我们添加颜色：
- en: '[PRE34]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: The color will be just the same as the text.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 颜色将和文本一样。
- en: 'Now we will just add a border at the bottom using this code:'
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将使用以下代码在底部添加一个边框：
- en: '[PRE35]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'When you reload you can see the border at the bottom:'
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你重新加载时，你可以看到底部的边框：
- en: '![](img/52e3fae7-a141-4a01-b2f7-a8f594eefed9.png)'
  id: totrans-226
  prefs: []
  type: TYPE_IMG
  zh: '![](img/52e3fae7-a141-4a01-b2f7-a8f594eefed9.png)'
- en: 'Now we have the title. The title has a link, but we''ll usually see some kind
    of Read More button as well, so let''s go ahead and add that. All we have to do
    is just add the code, shown in the following code block. We''ll say `Read More`
    and give it the class of a button:'
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们有了标题。标题有一个链接，但通常我们还会看到一个“阅读更多”按钮，所以让我们继续添加它。我们只需要添加以下代码块中的代码。我们将说“阅读更多”并给它一个按钮的类：
- en: '[PRE36]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Now, we should have a link for `Read More`. To do that, we will add the following
    code block:'
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们应该有一个指向`Read More`的链接。为了做到这一点，我们将添加以下代码块：
- en: '[PRE37]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'We can now go to the single page, as shown in the following screenshot:'
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在可以进入单页，如下面的截图所示：
- en: '![](img/e90f9596-4d91-4236-8939-a2d9ae9ebf03.png)'
  id: totrans-232
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e90f9596-4d91-4236-8939-a2d9ae9ebf03.png)'
- en: Now, in the single page, we don't want My Blog Post to be a link; that's kind
    of silly, so we want to change that. Also, there's going to be other things we
    want. We'll want a comment form as well, so we need to have a special page for
    single posts.
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在单页中，我们不希望我的博客帖子是一个链接；这有点愚蠢，所以我们要改变它。还有其他一些我们想要的东西。我们还想有一个评论表单，所以我们需要为单个帖子有一个特殊的页面。
- en: So we'll create a new file in our theme, and we'll just call it `single.php`,
    and let's just say `TEST`.
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 因此，我们将在我们的主题中创建一个新文件，我们将其称为`single.php`，让我们先叫它`TEST`。
- en: If we go back to the single page and reload, we get TEST. If we go back to our
    main website, which is our main post roll, it is the same as before, but if we
    go to a single page we get TEST only, because it's automatically looking at the
    `single.php` file. So what we can do is copy the code from `index.php`, and we
    can use this code as a starting point. If we paste that in `single.php` and save,
    it'll show us the same result. Now we can change whatever we want in the `single.php`
    file, and it will only take effect on the single page.
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们回到单页并重新加载，我们会得到TEST。如果我们回到我们的主网站，也就是我们的主要滚动条，它和之前一样，但如果我们进入一个单页，我们只会得到TEST，因为它是自动查看`single.php`文件的。所以我们可以做的是从`index.php`复制代码，并且我们可以将这段代码作为一个起点。如果我们把它粘贴到`single.php`并保存，它就会显示相同的结果。现在我们可以在`single.php`文件中更改我们想要的任何内容，并且它只会对单页生效。
- en: 'We can get rid of the link and `Read More` in the code; we''re obviously not
    going to want that. So now we have a single page:'
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以在代码中移除链接和`Read More`；显然，我们不会想要这些。所以现在我们有一个单页：
- en: '![](img/fdfd50c1-e9cc-4267-b20b-306d71553830.png)'
  id: totrans-237
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/fdfd50c1-e9cc-4267-b20b-306d71553830.png)'
- en: 'Let''s add a little bit of style to our single page. To do that, we will make
    `meta`, as shown here:'
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们在单页上添加一点样式。为此，我们将使`meta`，就像这里展示的那样：
- en: '[PRE38]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: As you can see here, I have also added some padding at the bottom of the post.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，我在帖子的底部也添加了一些填充。
- en: I'm not trying to go nuts with the styling, because like I said, I just want
    you to kind of learn the code rather than learn how to create a great design;
    we'll be getting into that later.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 我并不是想要在样式上大做文章，因为正如我所说的，我只是想让你学会编写代码，而不是学习如何创建一个出色的设计；我们会在稍后深入这个话题。
- en: Adding an image to the post
  id: totrans-242
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在帖子中添加图片
- en: 'Now, if we go to the form shown here to add a post, and you look on the right-hand
    side, you don''t see a Featured Image box, which you may have seen in other WordPress
    themes or on other WordPress websites. The reason for that is we didn''t include
    that functionality:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果我们转到这里显示的表单来添加一篇帖子，你会在右侧看到没有特色图片框，你可能在其他WordPress主题或网站上见过。原因是我们没有包含这个功能：
- en: '![](img/3e07c3f7-15ea-46e1-afb0-0d8c2b04391a.png)'
  id: totrans-244
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/3e07c3f7-15ea-46e1-afb0-0d8c2b04391a.png)'
- en: Let's go into our `themes` folder, and we'll create a file and save it as `functions.php`.
    Now, this is where we can put a custom function; this is where we can hook into
    certain parts of the code, register widgets, and do all that—basically, anything
    dynamic.
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们进入我们的`themes`文件夹，我们将创建一个文件并保存为`functions.php`。现在，这就是我们可以放置自定义函数的地方；这是我们可以钩入代码的某些部分、注册小工具和做所有这些的地方——基本上，任何事情都是动态的。
- en: 'Here, we''ll create a setup function. To do this, we will add the following
    code block:'
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这里，我们将创建一个设置函数。为此，我们将添加以下代码块：
- en: '[PRE39]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Here, we have added a comment, `Featured Image Support`, followed by a function
    called `add_theme_support`. Now this function isn't going to run if we leave it
    just like this. So, we have used `add_action` and certain hooks that we can hook
    into and run this function. The one that we want is called `after_setup_theme`.
    Then, the second parameter will be the name of the function. We will save it and
    then run it.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们添加了一个注释，`Featured Image Support`，然后是一个名为`add_theme_support`的函数。现在，如果我们就这样留下它，这个函数是不会运行的。因此，我们使用了`add_action`和某些钩子，我们可以将其钩入并运行这个函数。我们想要的钩子是`after_setup_theme`。然后，第二个参数将是函数的名称。我们将保存它并运行它。
- en: 'Let''s go back and reload this page:'
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们返回并重新加载这个页面：
- en: '![](img/9c09afd9-f090-4394-ba36-eca66e634034.png)'
  id: totrans-250
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/9c09afd9-f090-4394-ba36-eca66e634034.png)'
- en: 'Now you''ll see down at the bottom that we have the Featured Image box. If
    we click on that, we can go ahead and upload files, as shown here:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以看到底部有一个特色图片框。如果我们点击它，就可以上传文件，就像这里展示的那样：
- en: '![](img/4f96944d-fb56-443a-b1c5-9b137e5f38cb.png)'
  id: totrans-252
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/4f96944d-fb56-443a-b1c5-9b137e5f38cb.png)'
- en: 'Now, I''ll choose an image and save it so that you can see it''s inserted,
    and we can then click on Update:'
  id: totrans-253
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我会选择一个图片并保存它，这样你就可以看到它已经插入，然后我们可以点击更新：
- en: '![](img/393e1455-291b-4d5d-ab0e-a1652fcd512a.png)'
  id: totrans-254
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/393e1455-291b-4d5d-ab0e-a1652fcd512a.png)'
- en: Now, if we go to the frontend and reload, we'll not see it yet, because we didn't
    add it to our `index.php` file.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果我们去前端并重新加载，我们可能还看不到它，因为我们没有将它添加到我们的`index.php`文件中。
- en: 'Let''s go to the `index.php` file. You don''t have to show the image in the
    index. You can just show it in single page if you want, but usually you want it
    to be shown on both pages. So, in `index.php`, let''s just add the image right
    below `meta`, as shown here:'
  id: totrans-256
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们去`index.php`文件。你不必在索引中显示图片。如果你想的话，你可以在单页中显示它，但通常你希望它在两个页面上都显示。所以，在`index.php`中，我们只需在`meta`下面添加图片，就像这里展示的那样：
- en: '[PRE40]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: At first, it's not going to look too great, but we'll fix that later on. In
    the preceding code, we have first checked to see if there's an image using an
    `if` statement. If there's a thumbnail, then we'll create a `<div>` tag. We'll
    give it a class of `post-thumbnail` and then add `php the_post_thumbnail`, as
    shown in the preceding code block.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 起初，它可能看起来不太理想，但我们稍后会修复它。在先前的代码中，我们首先使用`if`语句检查是否有图片。如果有缩略图，我们将创建一个`<div>`标签。我们将给它一个`post-thumbnail`的类，然后添加`php
    the_post_thumbnail`，就像先前的代码块中展示的那样。
- en: 'Let''s save it, go back, and reload. You will get the following result:'
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们保存它，返回并重新加载。你会得到以下结果：
- en: '![](img/44dc5b16-5d09-42b8-a570-1fd8d2c74da6.png)'
  id: totrans-260
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/44dc5b16-5d09-42b8-a570-1fd8d2c74da6.png)'
- en: Now, it looks a little out of the way because it's not reaching 100% across
    the page, but we're actually going to put a sidebar in a little bit, when we get
    to the widgets, so that it looks a lot better. However, I am going to add a width
    of `100%` in the CSS, where we have this post, `this class="post-thumbnail"`.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，它看起来有点不协调，因为它没有覆盖整个页面，但我们实际上会在添加小工具时放一个侧边栏，这样看起来会好很多。然而，我打算在CSS中添加一个宽度为`100%`的样式，在这里我们有这个帖子，`class="post-thumbnail"`。
- en: 'Let''s go into our style sheet and add the following code block:'
  id: totrans-262
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们进入我们的样式表并添加以下代码块：
- en: '[PRE41]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: For the image, we want the width to be 100% and we can keep `height:auto`.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 对于图片，我们希望宽度为100%，并且可以保持`height:auto`。
- en: 'When we reload, we can see that it reaches across the whole page:'
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当我们重新加载时，我们可以看到它覆盖了整个页面：
- en: '![](img/15f68525-bb51-4a3f-b87b-723d2b9db2f6.png)'
  id: totrans-266
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/15f68525-bb51-4a3f-b87b-723d2b9db2f6.png)'
- en: I know that's really big, but like I said, we'll get a sidebar in there, and
    it'll shrink that a little bit.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 我知道这真的很宽，但就像我说的，我们会在里面放一个侧边栏，这样就会缩小一点。
- en: 'Now we also want the image on the single post page. So we''ll copy the code
    from `index.php` and paste it in the `single.php` file, right under `meta`:'
  id: totrans-268
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们还希望在单篇文章页面上显示图片。所以我们将从`index.php`复制代码并粘贴到`single.php`文件中，紧挨着`meta`标签下方：
- en: '[PRE42]'
  id: totrans-269
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Now we'll get the same image on the single page as well.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们也会在单篇文章页面上显示相同的图片。
- en: As you can see, in the posts on the index page, it shows the whole content,
    but we want just a piece of the content to show.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，在索引页面上的文章中，它显示了全部内容，但我们只想显示一部分内容。
- en: 'To do that, let''s go to the `index.php` file, and instead of saying `the_content`,
    we can actually say `the_excerpt`, as shown in the following code:'
  id: totrans-272
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要做到这一点，让我们去`index.php`文件，而不是说`the_content`，我们实际上可以说`the_excerpt`，如下面的代码所示：
- en: '[PRE43]'
  id: totrans-273
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: What this will do is, it will cut the content to around 55 words. You can actually
    customize that and make it as long or as short as you want, and that's actually
    really easy.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 这将做到的是，它会将内容截断到大约55个单词。你实际上可以自定义这个长度，让它更长或更短，而且这实际上非常简单。
- en: 'Go to the `functions.php` file and create a custom function, as shown here:'
  id: totrans-275
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往`functions.php`文件并创建一个自定义函数，如下所示：
- en: '[PRE44]'
  id: totrans-276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: We'll just say `set_excerpt_length`, and all we need to do here is just return
    a number, so let's say we wanted it to be `25`. Then, what we can do is, instead
    of `add_action`, we'll say `add_filter`, because `add_action` is usually used
    to add something or create something; `add_filter` is usually used to change something.
    The filter we want to hook into here is called `excerpt_length`. Then, we just
    want to put in the name of our function, which is `set_excerpt_length`.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 我们只需说`set_excerpt_length`，我们在这里需要做的只是返回一个数字，比如说我们希望它是`25`。然后，我们可以做的是，而不是`add_action`，我们说`add_filter`，因为`add_action`通常用于添加或创建某些内容；`add_filter`通常用于更改某些内容。我们想要钩入的过滤器称为`excerpt_length`。然后，我们只需输入我们函数的名称，即`set_excerpt_length`。
- en: If we go back and reload, we can see that it's only 25 words long. If you want
    it a little longer, let's say return 60\. I just wanted to show you that it's
    possible.
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们返回并重新加载，我们可以看到它只有25个单词长。如果你想让它更长，比如说返回60个单词。我只是想让你知道这是可能的。
- en: So we have our index page set up, and we have our single post page set up, apart
    from the comments, which we'll do a little later. However, in the next section,
    we will see how we can create a menu and start dealing with pages as well as posts.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们已经设置了索引页面，并且设置了单篇文章页面（除了稍后我们将处理的评论）。然而，在下一节中，我们将看到如何创建菜单，并开始处理页面以及文章。
- en: Pages and menus
  id: totrans-280
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 页面和菜单
- en: 'In this section, we''ll start looking at pages and menus. In addition to creating
    posts in WordPress, we can also create pages:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将开始查看页面和菜单。除了在WordPress中创建文章外，我们还可以创建页面：
- en: 'If we go to the backend and click on Pages, you''ll see we have a Sample Page:'
  id: totrans-282
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们进入后台点击“页面”，你会看到我们有一个示例页面：
- en: '![](img/97433255-8d05-4833-84f3-6bdb40a67560.png)'
  id: totrans-283
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/97433255-8d05-4833-84f3-6bdb40a67560.png)'
- en: 'Let''s create a new one, and we''ll just call it `About page`. Then we''ll
    just grab some content, say two paragraphs. Let''s just click on Publish:'
  id: totrans-284
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们创建一个新的页面，我们将其命名为“关于页面”。然后我们只需抓取一些内容，比如两段文字。让我们点击“发布”：
- en: '![](img/821258d4-2c25-428f-b0c3-fdce3904dc04.png)'
  id: totrans-285
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/821258d4-2c25-428f-b0c3-fdce3904dc04.png)'
- en: So we have an `About` page, and we have a `Sample Page`. Let's create one more
    and call it `Services`. Now we need some kind of navigation. Let's go ahead and
    do that.
  id: totrans-286
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 因此，我们有一个“关于”页面，还有一个“示例页面”。让我们再创建一个，命名为“服务”。现在我们需要某种导航。让我们继续做。
- en: 'In order to use the menu system, we need to edit the `functions.php` file,
    because right now, if we go to Appearance, there''s no Menus option. So let''s
    open up `functions.php` and enter the following code:'
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了使用菜单系统，我们需要编辑`functions.php`文件，因为现在如果我们转到外观，没有菜单选项。所以让我们打开`functions.php`并输入以下代码：
- en: '[PRE45]'
  id: totrans-288
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: In this `simple_theme_setup` function that we created, we will add `register_nav_menus`.
    Then we will pass in an array, and to do that, we will set the primary and then
    the readable version. We'll use the double underscore function; we don't need
    quotes here, though. It is a localization function, and it has to do with using
    multiple languages in your theme. So we'll enter `Primary Menu` and then save
    it.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们创建的`simple_theme_setup`函数中，我们将添加`register_nav_menus`。然后我们将传递一个数组，为此，我们将设置主版本和可读版本。我们将使用双下划线函数；虽然这里不需要引号。这是一个本地化函数，它与在主题中使用多种语言有关。所以我们将输入`Primary
    Menu`然后保存。
- en: 'Now, if we go to the backend, reload, and go to Appearance, you''ll see we
    have this Menus option:'
  id: totrans-290
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，如果我们去后台，重新加载，并转到外观，你会看到我们有这个菜单选项：
- en: '![](img/a8cad106-6304-4aa7-97d6-fd6fbed7404a.png)'
  id: totrans-291
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/a8cad106-6304-4aa7-97d6-fd6fbed7404a.png)'
- en: 'If we click on Create Menu, now you can see that by default it has all the
    pages on the site and you can remove some if you want:'
  id: totrans-292
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们点击创建菜单，现在你可以看到默认情况下它包含了网站上所有的页面，如果你想的话可以移除一些：
- en: '![](img/91931243-59cd-4fc7-b0e1-4132c605298f.png)'
  id: totrans-293
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/91931243-59cd-4fc7-b0e1-4132c605298f.png)'
- en: If you want to add pages, you can easily do it; click on Add to Menu. We'll
    just keep what we have here, and then we need to make sure to choose Primary Menu,
    where it says Theme locations. We'll save this.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想要添加页面，你可以轻松做到；点击添加到菜单。我们在这里保留我们已有的内容，然后我们需要确保选择主菜单，在它说主题位置的地方。我们将保存这个。
- en: Now, if we go to the frontend and reload, we'll not see anything yet because
    we haven't included it in our header file; this is where we want to add the menu,
    because we want it on every page.
  id: totrans-295
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，如果我们去前端并重新加载，我们什么也看不到，因为我们还没有在我们的头部文件中包含它；这就是我们想要添加菜单的地方，因为我们想要它在每个页面上。
- en: 'Let''s go right underneath the `<header>` tag and create a `<nav>` tag, as
    shown here:'
  id: totrans-296
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们在`<header>`标签的正下方创建一个`<nav>`标签，如下所示：
- en: '[PRE46]'
  id: totrans-297
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: We'll add a class of `main-nav`, then we'll wrap it in a container. Then, all
    we have to do is open up some `php` tags and create a variable called `args`.
    This is just going to hold an array of arguments; we only need one for now, and
    that'll be `theme_location`. We're basically specifying what menu we want to put
    here, and that'll be `primary`, which is the only one we have. Then, what we can
    do is, we can call a function called `wp_nav_menu` and just pass in that `args`
    variable. Let's save this.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将添加一个`main-nav`类，然后将其包裹在一个容器中。然后，我们只需要打开一些`php`标签并创建一个名为`args`的变量。这仅仅是一个将要持有参数数组的变量；我们现在只需要一个，那就是`theme_location`。我们基本上指定了我们想要放在这里的菜单，那将是`primary`，这是我们唯一拥有的一个。然后，我们可以调用一个名为`wp_nav_menu`的函数，并传入那个`args`变量。让我们保存这个。
- en: 'Go to the frontend, reload, and there''s our menu:'
  id: totrans-299
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往前端，重新加载，那里是我们的菜单：
- en: '![](img/6c50e098-3659-46ea-975c-1c945a99aef9.png)'
  id: totrans-300
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/6c50e098-3659-46ea-975c-1c945a99aef9.png)'
- en: The menu has all the pages that we created.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 菜单包含我们创建的所有页面。
- en: 'If we want to remove one, go to Menus, select `Sample Page` we want to remove,
    save, reload, and now that''s gone:'
  id: totrans-302
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们想删除一个，请转到菜单，选择我们想要删除的`Sample Page`，保存，重新加载，现在它就消失了：
- en: '![](img/e4e6c8e0-a51a-4e9a-91ca-b7d86fb62345.png)'
  id: totrans-303
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e4e6c8e0-a51a-4e9a-91ca-b7d86fb62345.png)'
- en: 'Just to style this a little bit, let''s go to `style.css` and add this code:'
  id: totrans-304
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了稍微样式化一下，让我们去`style.css`并添加以下代码：
- en: '[PRE47]'
  id: totrans-305
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'We''ll add `main-nav` and give it a background; we''ll add a black background
    and white color for text. To style the list items, we will add `main-nav li`;
    first we want to remove the bullet, so we''ll say `list-style: none`, and then
    we want to float these menu to the left. We will also add `padding-right:15px`,
    and then we will add the links; make sure that they are white, and remove the
    text decoration as well. Next we will add `ul`, and we will remove the default
    margin and padding. Then we''ll add some padding to `main-nav`, say `5px`.'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: '我们将添加`main-nav`并为其设置背景；我们将添加黑色背景和白色文本。为了样式化列表项，我们将添加`main-nav li`；首先我们想要移除项目符号，所以我们会说`list-style:
    none`，然后我们想要将这些菜单浮动到左边。我们还将添加`padding-right:15px`，然后添加链接；确保它们是白色的，并移除文本装饰。接下来我们将添加`ul`，我们将移除默认的外边距和填充。然后我们在`main-nav`上添加一些填充，比如`5px`。'
- en: 'When we reload, we have a little navigation menu:'
  id: totrans-307
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当我们重新加载时，我们有一个小的导航菜单：
- en: '![](img/645f6464-c241-490a-8363-794bcd0917cf.png)'
  id: totrans-308
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/645f6464-c241-490a-8363-794bcd0917cf.png)'
- en: 'If we click on About, it''ll take us to the About page, and it''s the same
    with Services. Now you will notice that when we go to About, it has been formatted
    the exact same way as the `index.php` page, as if it was a post—but it''s not,
    it''s a page:'
  id: totrans-309
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们点击“关于”，它将带我们到“关于”页面，服务也是一样。现在您会注意到，当我们去“关于”时，它已经按照 `index.php` 页面的方式格式化，就像它是一个帖子一样——但它不是，它是一个页面：
- en: '![](img/a0bb4c9d-156e-4c84-9df5-9945f9dc25bb.png)'
  id: totrans-310
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a0bb4c9d-156e-4c84-9df5-9945f9dc25bb.png)'
- en: We'll not need the metadata or the Read More link. So what we need to do is
    add another page to our theme.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将不需要元数据或“阅读更多”链接。所以我们需要做的是在我们的主题中添加另一个页面。
- en: Let's create a new file and save it as `page.php`.
  id: totrans-312
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们创建一个新文件，并将其保存为 `page.php`。
- en: Now if I go back and reload, it's blank because it's looking at the empty file.
    So what we can do is copy the code that's in `index.php` and use it in `page.php`.
  id: totrans-313
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我如果返回并重新加载，它会变成空白，因为它正在查看空文件。所以我们可以做的是复制 `index.php` 中的代码，并在 `page.php` 中使用它。
- en: 'Here are few changes that we will do in the code:'
  id: totrans-314
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将在代码中做以下几处更改：
- en: '[PRE48]'
  id: totrans-315
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'The first thing we''ll do is remove the link from the title, because we don''t
    want to go anywhere else. Also, we can get rid of `Read More` completely. It also
    has an excerpt, and we don''t want that; we want the whole thing, so we''ll change
    that to `the_content()`. Then, in `meta`, we can get rid of the whole div and
    save it; let''s take a look:'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先要做的是从标题中移除链接，因为我们不想去其他地方。此外，我们可以完全删除 `Read More`。它还有一个摘要，我们不需要；我们想要整个内容，所以我们将它改为
    `the_content()`。然后，在 `meta` 中，我们可以删除整个 div 并保存它；让我们看看：
- en: '![](img/3da40774-cd4b-4442-a09c-61da07886813.png)'
  id: totrans-317
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3da40774-cd4b-4442-a09c-61da07886813.png)'
- en: Now it looks more like a regular web page. We'll do the same thing with Services.
    This is how you can create pages and how you can target the markup for that page.
    You can also create custom pages and custom templates; you can kind of have different
    layouts for different pages, but we'll get into that in the next project. There's
    a lot more to building a theme. There's a lot more you can do that we're not going
    to get into in this project, but I just want to cover the basics in this project.
    We now have pages and a menu. In the next section, we'll get into widget locations,
    because now we want to be able to have a sidebar with widgets.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 现在它看起来更像是一个常规的网页。我们将对服务做同样的事情。这就是您如何创建页面以及如何为目标页面标记的方法。您还可以创建自定义页面和自定义模板；您可以为不同的页面设置不同的布局，但我们将在下一个项目中详细介绍。构建主题还有很多其他内容。还有很多您可以在本项目中做的事情，但我们不会在本项目中涉及，我只是想在本项目中介绍基础知识。我们现在有了页面和菜单。在下一节中，我们将讨论小部件位置，因为我们现在想要能够有一个带有小部件的侧边栏。
- en: Widget locations and comments
  id: totrans-319
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 小部件位置和评论
- en: Now I'll show you how to create a widget location in the theme. We'll have one
    widget location, and that'll be in the sidebar. Let's get started!
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我将向您展示如何在主题中创建小部件位置。我们将有一个小部件位置，它将在侧边栏中。让我们开始吧！
- en: Working with widgets
  id: totrans-321
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 与小部件一起工作
- en: 'Let''s take a look at `index.php`, where we have this `<div>` tag with the
    class of `main`. What we want to do is go right between `main` and the ending
    `</div>` tag. We''ll create a `<div>` tag with the class of `sidebar`, as shown
    in the following code:'
  id: totrans-322
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们看看 `index.php`，在那里我们有一个具有 `main` 类的 `<div>` 标签。我们想要做的是在 `main` 和结束的 `</div>`
    标签之间直接进入。我们将创建一个具有 `sidebar` 类的 `<div>` 标签，如下面的代码所示：
- en: '[PRE49]'
  id: totrans-323
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'We have also added `TEST` in the next line, which shows up as follows:'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还在下一行添加了 `TEST`，它显示如下：
- en: '![](img/576c6fee-da07-45b7-8e7b-8ea7ed28b20b.png)'
  id: totrans-325
  prefs: []
  type: TYPE_IMG
  zh: '![](img/576c6fee-da07-45b7-8e7b-8ea7ed28b20b.png)'
- en: Now we want to float the main `<div>` and set a width, and then have the sidebar
    float to the right.
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们想要浮动主 `<div>` 并设置宽度，然后让侧边栏向右浮动。
- en: 'Let''s go to the style sheet, where we have `main` with `margin:15px`, both
    at the top and bottom. Let''s go ahead and float this to the left, and let''s
    set a width of `68%`, as shown in the following code block:'
  id: totrans-327
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们去样式表，在那里我们有 `main` 并带有 `margin:15px`，在顶部和底部都有。让我们将其浮动到左边，并设置宽度为 `68%`，如下面的代码块所示：
- en: '[PRE50]'
  id: totrans-328
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Let''s see what that gives us:'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看这会给我们带来什么：
- en: '![](img/9ae820ed-c9fc-4af9-90b4-adf23d73ed57.png)'
  id: totrans-330
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9ae820ed-c9fc-4af9-90b4-adf23d73ed57.png)'
- en: The reason that this looks really weird is because we didn't clear the float.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 这个看起来真的很奇怪的原因是因为我们没有清除浮动。
- en: 'So what we''ll do is go under the `sidebar` div and enter `<div class="clr">`:'
  id: totrans-332
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所以我们将进入 `sidebar` div 并输入 `<div class="clr">`：
- en: '[PRE51]'
  id: totrans-333
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Now, we''ll go to our CSS, add a class called `clr`, and we''ll just say `clear:both;`:'
  id: totrans-334
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将进入我们的 CSS，添加一个名为 `clr` 的类，我们只需说 `clear:both;`：
- en: '[PRE52]'
  id: totrans-335
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'Then let''s add the `sidebar` class; that''s going to float to the right, and
    we''ll set a width of `28%`, as shown in the following code:'
  id: totrans-336
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后让我们添加`sidebar`类；这将向右浮动，我们将设置宽度为`28%`，如下面的代码所示：
- en: '[PRE53]'
  id: totrans-337
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'Now, we''ll want to put a container around both of the files—`index.php` and
    `style.css`, because right now, `main` has a container inside of it, but what
    we want is to remove that and put it above `main`, as shown in the following code:'
  id: totrans-338
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们想要在两个文件周围放一个容器——`index.php`和`style.css`，因为现在`main`内部有一个容器，但我们想要移除它，并将其放在`main`之上，如下面的代码所示：
- en: '[PRE54]'
  id: totrans-339
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'We will end it here:'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在这里结束：
- en: '[PRE55]'
  id: totrans-341
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'Now, let''s run this:'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们运行这个：
- en: '![](img/0e0305be-5010-4d23-9d35-2b2d2e01e271.png)'
  id: totrans-343
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/0e0305be-5010-4d23-9d35-2b2d2e01e271.png)'
- en: So now we have the main area and a sidebar.
  id: totrans-344
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 因此，现在我们有了主区域和一个侧边栏。
- en: 'Next, we will see how to add widgets, and to do that, we''ll go to `functions.php`.
    Here, we can actually use widgets and define what location we want the widgets
    to be allowed in. We''ll go down to the very bottom of the file and create a function,
    as shown in the following code block. We''ll call it `init_widgets`, and that''ll
    take in `id`, and we''ll call it `register_sidebar`. Now we will create a sidebar
    widget, but just know that no matter where you put it, `register_sidebar` is the
    function that we''ll use, even if it''s not a sidebar—if it''s down below, or
    in the header, or wherever it may be, this is what''s used to actually register
    widget locations. Now, that''s going to take in an array, and it''s going to take
    a `name`; let''s set that to `Sidebar`, and then the ID, which is usually the
    same, just lowercase and no spaces. You can use hyphens if there''s more than
    one word. Then, we can also use `before_widget`. We can also use `<div class="side-widget">`,
    and then we can add `after_widget`; that''s going to be the ending `</div>` tag.
    Then, we can also add `before_title` and `after_title` for the widget, as shown
    in the following code block. We want an `<h3>` tag before the title. Now, this
    code isn''t going to run yet. We need to perform `add_action`, and the hook we
    want is called `widgets_init`; we want to put in our function name, which is `init_widgets`:'
  id: totrans-345
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将看到如何添加小部件，为此，我们将进入`functions.php`。在这里，我们实际上可以使用小部件并定义我们希望小部件允许的位置。我们将文件拉到最底部并创建一个函数，如下面的代码块所示。我们将称之为`init_widgets`，它将接受`id`，我们将称之为`register_sidebar`。现在我们将创建一个侧边栏小部件，但要知道无论你把它放在哪里，`register_sidebar`都是我们将使用的函数，即使它不是一个侧边栏——如果它在下面，或者在页眉中，或者任何其他地方，这是实际注册小部件位置所使用的。现在，这将接受一个数组，它将接受一个`name`；让我们将其设置为`Sidebar`，然后是ID，通常是相同的，只是小写且没有空格。如果有多个单词，可以使用连字符。然后，我们还可以使用`before_widget`。我们还可以使用`<div
    class="side-widget">`，然后我们可以添加`after_widget`；这将是一个结束的`</div>`标签。然后，我们还可以为小部件添加`before_title`和`after_title`，如下面的代码块所示。我们想在标题之前有一个`<h3>`标签。现在，这段代码还没有运行。我们需要执行`add_action`，我们想要的钩子叫做`widgets_init`；我们想要输入我们的函数名，即`init_widgets`：
- en: '[PRE56]'
  id: totrans-346
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'Now we''ll save the code. If we go back and reload, we get this:'
  id: totrans-347
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们将保存代码。如果我们返回并重新加载，我们会得到以下内容：
- en: '![](img/c4299102-56e6-487b-a5f4-19615cfba565.png)'
  id: totrans-348
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/c4299102-56e6-487b-a5f4-19615cfba565.png)'
- en: We have a Widgets item at the side and a Sidebar location.
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在侧面有一个小部件项和一个侧边栏位置。
- en: 'Let''s drag the Categories widget and bring that over to the Sidebar. We will
    also bring Recent Posts:'
  id: totrans-350
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们把分类小部件拖动并带到侧边栏。我们还将把最近的文章也拖过来：
- en: '![](img/ffaa78ac-4201-4372-aa3c-7914bab9bc0d.png)'
  id: totrans-351
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/ffaa78ac-4201-4372-aa3c-7914bab9bc0d.png)'
- en: Save and go to the frontend; if we reload now, we'll not see anything because
    we need to add it to our template.
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 保存并转到前端；如果我们现在重新加载，我们什么也看不到，因为我们需要将其添加到我们的模板中。
- en: 'Let''s go down to where we have the sidebar in the `index.php` file, and we''ll
    first check for the widget using the following code:'
  id: totrans-353
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们下滑到`index.php`文件中侧边栏的位置，我们首先会使用以下代码检查小部件：
- en: '[PRE57]'
  id: totrans-354
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: We'll check whether it'll be a function called `is_active_sidebar()`, and like
    I said before, even if it's not a sidebar, this is still going to work. We will
    also add our location, which happens to be sidebar. We will also add a `dynamic_sidebar()`
    function, and then the ID of the widget again is sidebar.
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将检查它是否是一个名为`is_active_sidebar()`的函数，就像我之前说的，即使它不是一个侧边栏，这仍然会起作用。我们还将添加我们的位置，它恰好是侧边栏。我们还将添加一个`dynamic_sidebar()`函数，然后小部件的ID再次是侧边栏。
- en: 'Save it, reload, and take a look at it:'
  id: totrans-356
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存它，重新加载，然后看看它：
- en: '![](img/5f712735-d9e4-4894-b883-cd7882813b67.png)'
  id: totrans-357
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/5f712735-d9e4-4894-b883-cd7882813b67.png)'
- en: 'We get our two widgets: Categories and Recent Posts.'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到了两个小部件：分类和最近的文章。
- en: 'Now, remember that we put the `side-widget` class in the `function.php` file
    so that we can style widgets using the `style.css` file, as shown in the following
    code block:'
  id: totrans-359
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，记得我们在 `function.php` 文件中添加了 `side-widget` 类，这样我们就可以使用 `style.css` 文件来样式化小工具，如下面的代码块所示：
- en: '[PRE58]'
  id: totrans-360
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: We have added `side-widget` with a border and padding of `10px 10px`. We have
    added `margin-bottom`. Now if we reload, you can see that they have a border.
    Therefore, we will add `margin-top` too. We'll say `margin-top:20px`.
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 我们添加了带有 `10px 10px` 边框和填充的 `side-widget`。我们添加了 `margin-bottom`。现在如果我们重新加载，你可以看到它们有边框。因此，我们也会添加
    `margin-top`。我们说 `margin-top:20px`。
- en: 'To make this look a little better, we will use the following code:'
  id: totrans-362
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了使这个看起来更好，我们将使用以下代码：
- en: '[PRE59]'
  id: totrans-363
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: Here, we have taken away `text-decoration`.
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们已经移除了 `text-decoration`。
- en: 'When you save and reload, you get this:'
  id: totrans-365
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存并重新加载后，你会得到这个：
- en: '![](img/4c54490b-5f47-42c0-8e00-3fabfa892a0c.png)'
  id: totrans-366
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4c54490b-5f47-42c0-8e00-3fabfa892a0c.png)'
- en: So this looks good.
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 所以这个看起来不错。
- en: 'We can see that the pages will be messed up now:'
  id: totrans-368
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以看到现在页面会变得混乱：
- en: '![](img/f1c669f9-a08d-4440-833a-9394dc80b865.png)'
  id: totrans-369
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f1c669f9-a08d-4440-833a-9394dc80b865.png)'
- en: This is because in `page.php`, we still have the `container` class inside of
    `main`.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为在 `page.php` 中，我们仍然在 `main` 中有 `container` 类。
- en: 'What we want to do is just copy what we did in `index.php`:'
  id: totrans-371
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们要做的就是复制 `index.php` 中所做的操作：
- en: '[PRE60]'
  id: totrans-372
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: We need to add the sidebar after main ends, and then we actually want to take
    the container out and put that above `main`. We'll need to make sure to take the
    ending `</div>` tag and put that on the outside down.
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要在 `main` 结束后添加侧边栏，然后我们实际上想要将容器移出并放在 `main` 之上。我们需要确保将结束的 `</div>` 标签放在外面。
- en: 'Let''s go ahead and check that out:'
  id: totrans-374
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们继续检查一下：
- en: '![](img/680c9f2f-698d-4410-bcb2-0ccc74afea0d.png)'
  id: totrans-375
  prefs: []
  type: TYPE_IMG
  zh: '![](img/680c9f2f-698d-4410-bcb2-0ccc74afea0d.png)'
- en: So this looks good.
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 所以这个看起来不错。
- en: 'We will repeat the same thing with `Single.php`, and we will get the following
    result:'
  id: totrans-377
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将对 `Single.php` 重复同样的操作，并将得到以下结果：
- en: '![](img/a13745bd-d5a5-437c-8818-1439a36e898d.png)'
  id: totrans-378
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a13745bd-d5a5-437c-8818-1439a36e898d.png)'
- en: 'So all the different formats and all the different pages are all set; they
    have the sidebar implemented. And, of course, if you didn''t want the sidebar
    on one of those, you don''t have to have it. If we want to kind of minimize the
    code a little bit, we can put the following code inside the `footer.php`:'
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 所以所有不同的格式和所有不同的页面都已经设置好了；它们实现了侧边栏。当然，如果你不希望在其中一个页面上有侧边栏，你不必有它。如果我们想稍微减少一点代码，我们可以在
    `footer.php` 中放入以下代码：
- en: '[PRE61]'
  id: totrans-380
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'We can cut and save, and then add that code in `footer.php` at the top, as
    shown here:'
  id: totrans-381
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以剪切并保存，然后将该代码添加到 `footer.php` 的顶部，如下所示：
- en: '[PRE62]'
  id: totrans-382
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'Save, and then get rid of the following code from `page.php` and `index.php`,
    because it''s now in `footer.php`:'
  id: totrans-383
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存后，从 `page.php` 和 `index.php` 中删除以下代码，因为它现在已经在 `footer.php` 中了：
- en: '[PRE63]'
  id: totrans-384
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: Our frontend should look the exact same way. So that's good, that's widgets.
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的前端应该看起来完全一样。所以这是好的，这是小工具。
- en: Adding the comment functionality
  id: totrans-386
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加评论功能
- en: 'Now, the one thing that is left is comments—we want the comment functionality.
    This is actually really easy; all we have to do is go to our `single.php` file
    and see where we want the comment, which is right under the end `</div>` tag,
    as shown in the following code block:'
  id: totrans-387
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，剩下的一件事就是评论功能——我们想要添加评论功能。这实际上非常简单；我们只需要去我们的 `single.php` 文件，看看我们想在哪个位置添加评论，它就在结束的
    `</div>` 标签下面，如下面的代码块所示：
- en: '[PRE64]'
  id: totrans-388
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'We can save the code and reload. Here is the output:'
  id: totrans-389
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以保存代码并重新加载。以下是输出结果：
- en: '![](img/f4f91505-8057-4f7f-adef-29e3aa0c4867.png)'
  id: totrans-390
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f4f91505-8057-4f7f-adef-29e3aa0c4867.png)'
- en: We can now see the comment functionality. Let's add `Great Post!` and then click
    on Post Comment.
  id: totrans-391
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以看到评论功能。让我们添加 `Great Post!` 然后点击发表评论。
- en: 'Here is what we get:'
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是我们得到的结果：
- en: '![](img/f55e8675-fb74-4480-96ba-82d13566b980.png)'
  id: totrans-393
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f55e8675-fb74-4480-96ba-82d13566b980.png)'
- en: We can see that it has an avatar, the username, date, and also a reply link.
    Now you'll realize that this doesn't look like the best comments section you've
    ever seen, but that's just because it's the default design.
  id: totrans-394
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以看到它有一个头像、用户名、日期，还有一个回复链接。现在你会意识到这看起来并不是你见过的最好的评论区，但这只是因为它使用了默认设计。
- en: 'If we take a look at the markup, we can see that they separate everything so
    you can style:'
  id: totrans-395
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们查看标记，我们可以看到它们将每件事都分开，这样你就可以进行样式化：
- en: '![](img/d5418670-be66-46df-b7e8-ba7eadc483da.png)'
  id: totrans-396
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d5418670-be66-46df-b7e8-ba7eadc483da.png)'
- en: Here, we have `ol commentlist`; each `<li>` has a class of comments, and we
    have classes around the author, around `vcard`, and around the reply. You can
    style this however you like.
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们有`ol commentlist`；每个`<li>`都有一个`comments`类，我们还有作者、`vcard`和回复周围的类。你可以按你喜欢的方式设置样式。
- en: Now you can actually replace this whole template by creating a `comments.php`
    file; we'll get into that later on. I don't want to do it in this chapter because
    this is just a very basic introductory theme.
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你实际上可以通过创建一个`comments.php`文件来替换整个模板；我们稍后会讨论这个问题。我不想在这个章节中做这件事，因为这个只是一个非常基础的入门主题。
- en: Since the comments are working, we'll not go ahead and create a custom comment
    template or anything like that. I think that's pretty much it. Like I said, there's
    more we could do; we could create a separate template for archived posts.
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 由于评论功能已经正常工作，我们不会继续创建自定义评论模板或类似的东西。我认为这就足够了。就像我说的，我们还能做更多；我们可以为存档帖子创建一个单独的模板。
- en: Actually, what I want to do real quick is to make the author's name a link,
    so that you can click on it and see all of the author's posts.
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，我想要快速做的，是将作者的名字变成一个链接，这样你可以点击它，查看作者的所有帖子。
- en: 'Let''s go to `index.php` and go to where we have the author, and enter following
    highlighted code:'
  id: totrans-401
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们转到`index.php`，找到作者的位置，并输入以下高亮代码：
- en: '[PRE65]'
  id: totrans-402
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: As shown here, we'll just add a link around that.
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 如此所示，我们只需在那个地方添加一个链接。
- en: 'Let''s reload, and now admin is a link; I need to change its style because
    we can''t see it. Open `style.css`. Go to `meta` and add the following code:'
  id: totrans-404
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们重新加载，现在管理员已经是一个链接了；我需要改变它的样式，因为我们看不到它。打开`style.css`。进入`meta`并添加以下代码：
- en: '[PRE66]'
  id: totrans-405
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'We can see the author in white now:'
  id: totrans-406
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们可以看到作者的名字是白色的：
- en: '![](img/923dfa38-986a-4eea-b038-f83eab55504f.png)'
  id: totrans-407
  prefs: []
  type: TYPE_IMG
  zh: '![](img/923dfa38-986a-4eea-b038-f83eab55504f.png)'
- en: If I click on admin now, it shows us all the posts by admin, but if there were
    multiple users—multiple authors—this would allow us to see all the posts from
    that particular author.
  id: totrans-408
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我现在点击管理员，它会显示管理员的所有帖子，但如果有多位用户——多位作者——这将允许我们查看该特定作者的所有帖子。
- en: We'll wrap this up here. You may realize that this isn't the greatest design
    you've ever seen, but the point of this project was to get you familiar with not
    just the code but also the structure of the theme and what files are included.
    As we saw, there are certain names that we need for the files such as `page` and
    `single.php`.
  id: totrans-409
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们在这里结束。你可能意识到这并不是你见过的最好的设计，但这个项目的目的是让你熟悉代码，以及主题的结构和包含的文件。正如我们所看到的，我们需要某些文件名，比如`page`和`single.php`。
- en: Summary
  id: totrans-410
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Hopefully, you enjoyed this chapter.
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: 希望你喜欢这一章。
- en: In this chapter, we started off by installing and setting up WordPress. We moved
    on to create and enable themes. We also created an HTML structure and body, and
    applied some base styling to it. We dealt with single posts, thumbnails, pages,
    and menus. Later, we saw how we could add images and links to the post. In the
    end, we saw how to create a widget location in the theme and how to add the comments
    functionality to the widgets.
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们首先安装并设置了WordPress。然后我们继续创建并启用主题。我们还创建了一个HTML结构和主体，并对其应用了一些基本样式。我们处理了单篇文章、缩略图、页面和菜单。后来，我们看到了如何将图片和链接添加到文章中。最后，我们看到了如何在主题中创建小工具位置以及如何将评论功能添加到小工具中。
- en: We'll be using what you've learned in this project and applying it in the future
    projects. You'll also learn more as we go.
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在这个项目中使用你所学的知识，并将其应用于未来的项目中。随着我们的进行，你还将学到更多。
- en: In the next chapter, we will see how to build a WordPress theme.
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将看到如何构建WordPress主题。
