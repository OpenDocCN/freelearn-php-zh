- en: Customizing User Data
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自定义用户数据
- en: 'This chapter will show us how to augment the WordPress user editor and use
    the additional data associated with users through the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将向我们展示如何增强WordPress用户编辑器，并通过以下主题使用与用户关联的附加数据：
- en: Adding custom fields to the user editor
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向用户编辑器添加自定义字段
- en: Processing and storing user custom data
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理和存储用户自定义数据
- en: Displaying new user data in the user list page
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在用户列表页面显示新用户数据
- en: Using custom user data in containing shortcode
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在包含短代码中使用自定义用户数据
- en: Introduction
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: After learning how to customize the post editor and taxonomies with custom data
    fields, the next area that we will be making additions to is the user creation
    and edition tool. This type of addition can be used for many different purposes,
    including tracking when users have last visited a site or storing additional data
    on the types of services they are interested in. This chapter expands on the private
    content plugin that we started in Chapter 2, *Plugin Framework Basics* and [Chapter
    3](0346c3c6-27ee-45fb-bfd6-df398e04b2b4.xhtml), *User Settings and Administration
    Pages* in the recipes entitled *Creating a new enclosing shortcode* and *Storing
    stylesheet data in user settings,* by adding a second level of content protection
    that will restrict some posts or pages so that they are only available to paid
    users.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在学习了如何使用自定义数据字段自定义帖子编辑器和分类之后，我们将要添加的下一个区域是用户创建和编辑工具。这种添加可以用于许多不同的目的，包括跟踪用户最后一次访问网站的时间或存储他们对感兴趣的服务类型的额外数据。本章在第二章*插件框架基础*和[第3章](0346c3c6-27ee-45fb-bfd6-df398e04b2b4.xhtml)*用户设置和管理页面*中，通过添加一个二级内容保护层来扩展我们在第二章开始的私有内容插件，该保护层将限制一些帖子或页面，使其仅对付费用户可用。
- en: Adding custom fields to the user editor
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向用户编辑器添加自定义字段
- en: Similar to the taxonomy editor, the user editor allows developers to add extra
    fields through action hooks and facilitates this task by using the same HTML structure,
    whether a new user is being created or an existing one is modified. This recipe
    shows how to assign a callback function to add a new section to the user editor.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 与分类编辑器类似，用户编辑器允许开发者通过动作钩子添加额外字段，并通过使用相同的HTML结构来简化这一任务，无论是创建新用户还是修改现有用户。本配方展示了如何将回调函数分配给用户编辑器以添加新部分。
- en: Getting ready
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: To create a complete plugin with a stylesheet and administration panel, you
    should have already followed the *Storing stylesheet data in user settings* recipe
    in [Chapter 3](0346c3c6-27ee-45fb-bfd6-df398e04b2b4.xhtml), *User Settings and
    Administration Pages*, to have a starting point for this recipe. Alternatively,
    you can get the resulting code (`Chapter 3/ch2-private-item-text-edit-stylesheet/ch2-private-item-text.php`)
    from the downloaded code bundle and rename `ch2-private-item-text-edit-stylesheet`
    to `ch2-private-item-text`.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个包含样式表和管理面板的完整插件，您应该已经遵循了[第3章](0346c3c6-27ee-45fb-bfd6-df398e04b2b4.xhtml)中的*将样式表数据存储在用户设置*配方，以获得本配方的起点。或者，您可以从下载的代码包中获取结果代码（`Chapter
    3/ch2-private-item-text-edit-stylesheet/ch2-private-item-text.php`），并将`ch2-private-item-text-edit-stylesheet`重命名为`ch2-private-item-text`。
- en: It is also possible to just create a new empty plugin file and follow this chapter's
    recipes by making a folder called `ch2-private-item-text` in your plugin directory
    with a text file called `ch2-private-item-text.php`, and only adding a standard
    plugin header at the top.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 也可能只是创建一个新的空插件文件，通过在您的插件目录中创建一个名为`ch2-private-item-text`的文件夹，并在其中添加一个名为`ch2-private-item-text.php`的文本文件，只添加一个标准的插件头部来遵循本章的配方。
- en: How to do it...
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Navigate to the `ch2-private-item-text` folder of the WordPress plugin directory
    of your development installation.
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到您开发安装的WordPress插件目录中的`ch2-private-item-text`文件夹。
- en: Open the `ch2-private-item-text.php` file in a text editor.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文本编辑器中打开`ch2-private-item-text.php`文件。
- en: 'Add the following code snippet at the end of the file to declare a global variable
    and initialize the variable''s content:'
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文件末尾添加以下代码片段以声明一个全局变量并初始化变量的内容：
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Add the following lines of code to register a function to be called when new
    users are added to the site through the administration interface or when users
    are edited:'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码行添加到注册一个函数，当通过管理界面添加新用户或编辑用户时调用：
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Add the following block of code to provide an implementation for the `ch2pit_show_user_profile`
    function:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码块添加以提供`ch2pit_show_user_profile`函数的实现：
- en: '[PRE2]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Save and close the plugin file.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存并关闭插件文件。
- en: Go to the Plugins section of the administration interface and make sure that
    the `Chapter 2 - Private Item Text` plugin is activated.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往管理界面的插件部分，并确保已激活 `第 2 章 - 私人物品文本` 插件。
- en: 'Select the Add New User menu item under the Users section to view the user
    creation page and see the new Site membership level section at the bottom of the
    form:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在用户部分下选择“添加新用户”菜单项，查看用户创建页面，并查看表单底部的新的网站会员级别部分：
- en: '![](img/717c062c-5d9b-4a21-87da-0ff870e3a66c.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/717c062c-5d9b-4a21-87da-0ff870e3a66c.png)'
- en: Edit one of the existing users on the site to see that the additional section
    is also displayed. If you try to save the user in either situation, the newly
    added field will not be saved until you perform the steps in the next recipe.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑网站上的现有用户之一，以查看附加部分也会显示。如果您在任一情况下尝试保存用户，新添加的字段将不会保存，直到您执行下一个配方中的步骤。
- en: How it works...
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: The `user_new_form` and `edit_user_profile` action hooks allow developers to
    add content to the user editor when a new user is added to the site and when users
    are edited, respectively.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '`user_new_form` 和 `edit_user_profile` 动作钩子允许开发者在向网站添加新用户和编辑用户时向用户编辑器添加内容。'
- en: WordPress offers a third action hook called `show_user_profile`. Functions associated
    with that hook get called when users view their own profile. You should carefully
    consider whether or not it makes sense to register a function with this action
    hook, depending on the nature of your plugin and the additional information to
    be stored. That being said, if you do not register any function with this hook,
    as we are doing in this recipe, you will not see the additional fields created
    when viewing your own user profile on the site, even if you are the administrator.
    You will still be able to see paid content, since we will display it to users
    with administrator privileges.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: WordPress 提供了第三个动作钩子，称为 `show_user_profile`。与该钩子关联的函数在用户查看自己的个人资料时会被调用。您应仔细考虑是否根据您插件的本性和要存储的附加信息，注册一个与该动作钩子关联的函数。换句话说，如果您不注册任何函数与该钩子，就像我们在本配方中所做的那样，您将不会在查看网站上的个人资料时看到创建的附加字段，即使您是管理员。您仍然能够看到付费内容，因为我们将会向具有管理员权限的用户显示它。
- en: 'Our callback function first checks to see whether it received a valid user
    through the `$user` parameter or whether a new user is being created. Based on
    the result, it retrieves the associated user level data by calling the `get_user_meta`
    function or initializes a blank variable. The syntax of `get_user_meta` follows
    the same structure as the `get_post_meta` and `get_term_meta` functions, with
    the first parameter being used to specify the user ID and the remaining fields
    indicating the field name to be retrieved and whether data should be returned
    as a single variable or an array:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的回调函数首先检查是否通过 `$user` 参数接收到了有效的用户，或者是否正在创建新用户。根据结果，它通过调用 `get_user_meta` 函数检索相关的用户级别数据，或者初始化一个空变量。`get_user_meta`
    的语法与 `get_post_meta` 和 `get_term_meta` 函数的语法相同，第一个参数用于指定用户 ID，其余字段表示要检索的字段名称以及数据是否应作为单个变量或数组返回：
- en: '[PRE3]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The rest of our callback functions are responsible for rendering a basic HTML
    select list and selecting one of the items in the list based on the current user
    membership level.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的其他回调函数负责渲染一个基本的 HTML 选择列表，并根据当前用户的会员级别选择列表中的一个项目。
- en: The only additional element that we put in place in this recipe is the declaration
    of an array of user membership levels as a `global` variable that we will be referencing
    in multiple functions in this chapter.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在本配方中，我们唯一添加的额外元素是将用户会员级别数组声明为一个 `全局` 变量，我们将在本章的多个函数中引用它。
- en: See also
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参见
- en: The *Storing stylesheet data in user settings* recipe
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*将样式表数据存储在用户设置中* 的配方'
- en: Processing and storing user custom data
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理和存储用户自定义数据
- en: As user profiles are created or updated, WordPress offers an easy way to register
    a callback to save custom user data in the site's database. This recipe shows
    how to use this action hook.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户资料被创建或更新时，WordPress 提供了一种简单的方法来注册一个回调函数，以便在网站的数据库中保存自定义用户数据。本配方展示了如何使用这个动作钩子。
- en: Getting ready
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: You should have already followed the *Adding custom fields to the user editor*
    recipe to have a starting point for this recipe and the resulting plugin should
    still be active in your development site. Alternatively, you can get the resulting
    code (`Chapter 7/ch2-private-item-text/ch2-private-item-text-v3.php`) from the
    downloaded code bundle, renaming it as `ch2-private-item-text.php`.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该已经遵循了 *向用户编辑器添加自定义字段* 的配方，以便为本配方和结果插件提供一个起点，并且结果插件仍然在您的开发站点中处于活动状态。或者，您可以从下载的代码包中获取结果代码（`Chapter
    7/ch2-private-item-text/ch2-private-item-text-v3.php`），将其重命名为 `ch2-private-item-text.php`。
- en: How to do it...
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Navigate to the `ch2-private-item-text` folder of the WordPress plugin directory
    of your development installation.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到您开发安装的 WordPress 插件目录中的 `ch2-private-item-text` 文件夹。
- en: Open the `ch2-private-item-text.php` file in a text editor.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文本编辑器中打开 `ch2-private-item-text.php` 文件。
- en: 'Add the following lines of code at the end of the file to register functions
    to be called when user data is stored upon initial creation or when a user is
    updated:'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文件末尾添加以下代码行以注册在用户数据在初始创建时或用户更新时被调用的函数：
- en: '[PRE4]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Add the following block of code to provide an implementation for the `ch2pit_save_user_data`
    function:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码块添加到提供 `ch2pit_save_user_data` 函数实现的代码中：
- en: '[PRE5]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Save and close the plugin file.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存并关闭插件文件。
- en: Edit one of the existing users on the site or create a new one to see that the
    user level value is saved.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑网站上现有的用户或创建一个新用户，以查看用户级别值是否已保存。
- en: How it works...
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: 'Similarly to adding fields to the user editor, WordPress offers two different
    action hooks to register functions that will be called when a user is initially
    registered (`user_register`) and when a user profile is updated (`profile_update`).
    As you can see, we are registering the same callback function in both cases, where
    we check to see whether we received a value indicating the desired user level
    and use the `update_user_meta` function to save it. Similar to the post and term
    meta update functions, this function has three parameters to indicate the user
    ID that the information should be associated with, the name of the custom data
    field, and the value to be stored:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于向用户编辑器添加字段，WordPress 提供了两个不同的动作钩子来注册在用户最初注册时（`user_register`）和用户资料更新时（`profile_update`）被调用的函数。如您所见，我们在两种情况下都注册了相同的回调函数，其中我们检查是否收到了表示所需用户级别的值，并使用
    `update_user_meta` 函数来保存它。类似于文章和术语元更新函数，此函数有三个参数，用于指示应将信息关联到的用户 ID、自定义数据字段的名称以及要存储的值：
- en: '[PRE6]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: As an additional precaution, we check to see whether the value we received is
    present in our global array of user levels using the PHP `array_key_exists` function.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 作为额外的预防措施，我们使用 PHP 的 `array_key_exists` 函数检查我们收到的值是否存在于我们的全局用户级别数组中。
- en: The `else` branch of the `if` statement is put in place to set a default user
    level if the field is absent, which can happen if the site allows visitors to
    register for accounts by themselves.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '`if` 语句的 `else` 分支被放置在那里，以在字段不存在时设置默认用户级别，这可能发生在网站允许访客自行注册账户的情况下。'
- en: Of course, this current process of classifying users as regular users or paid
    users is very manual, requiring site administrators to log in to the site's dashboard
    and update their status individually. A more elaborate solution could be to set
    the value of this field based on receiving a payment to the site using an online
    payment service.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，将用户分类为普通用户或付费用户的当前过程非常手动，需要网站管理员登录到网站的仪表板并逐个更新他们的状态。一个更完善的解决方案可能是根据通过在线支付服务向网站支付的费用来设置此字段的值。
- en: See also
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参见
- en: The *Adding custom fields to the user editor* recipe
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*向用户编辑器添加自定义字段* 的配方'
- en: Displaying new user data in user list page
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在用户列表页面显示新用户数据
- en: As new fields are added to user profiles, it can be very useful for site administrators
    to see this data in the site user list and be able to filter users to see only
    the ones that were assigned certain values. This recipe shows how to add extra
    columns to the user listing of the WordPress administration area and how to add
    a filter function to reduce the number of records shown.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 随着新字段添加到用户资料中，对于网站管理员来说，在网站用户列表中查看这些数据并且能够过滤用户以仅显示被分配了特定值的用户非常有用。本配方展示了如何向 WordPress
    管理区域的用户列表添加额外列，以及如何添加一个筛选函数以减少显示的记录数。
- en: Getting ready
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: You should have already followed the *Processing and storing user custom data*
    recipe to have a starting point for this recipe and the resulting plugin should
    still be active in your development site. Alternatively, you can get the resulting
    code (`Chapter 7/ch2-private-item-text/ch2-private-item-text-v4.php`) from the
    downloaded code bundle, renaming it `ch2-private-item-text.php`.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该已经遵循了*处理和存储用户自定义数据*的配方，以便为这个配方提供一个起点，并且生成的插件仍然在你的开发网站上处于活动状态。或者，你可以从下载的代码包中获取生成的代码（`第7章/ch2-private-item-text/ch2-private-item-text-v4.php`），并将其重命名为`ch2-private-item-text.php`。
- en: How to do it...
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Navigate to the `ch2-private-item-text` folder of the WordPress plugin directory
    of your development installation.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到你的开发安装的WordPress插件目录中的`ch2-private-item-text`文件夹。
- en: Open the `ch2-private-item-text.php` file in a text editor.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文本编辑器中打开`ch2-private-item-text.php`文件。
- en: 'Add the following line of code to register a function to be called when WordPress
    is preparing the list of columns to be displayed in the user listing page:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下代码行以注册一个在WordPress准备在用户列表页面上显示的列列表时被调用的函数：
- en: '[PRE7]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Add an implementation for the `ch2pit_add_user_columns` function with the following
    block of code:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码块为`ch2pit_add_user_columns`函数添加一个实现：
- en: '[PRE8]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Add the following line of code to assign a function to be called when WordPress
    prepares the content of each column as it displays a list of all the users:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下代码行以分配一个在WordPress准备显示所有用户列表的每个列的内容时被调用的函数：
- en: '[PRE9]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Provide an implementation for the `ch2pit_display_user_columns_data` function
    by inserting the following code section:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过插入以下代码段为`ch2pit_display_user_columns_data`函数提供一个实现：
- en: '[PRE10]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Add the following code snippet to register a function to be called when WordPress
    prepares the list of quick actions that can be performed by administrators on
    the user listing page:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下代码片段以注册一个在WordPress准备管理员可以在用户列表页面上执行的操作列表时被调用的函数：
- en: '[PRE11]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Add this code section to provide a body for the `ch2pit_add_user_filter` function:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此代码段添加到为`ch2pit_add_user_filter`函数提供一个主体的代码：
- en: '[PRE12]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Add the following line of code to register a function to be called when WordPress
    is rendering the footer of the administration pages:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下代码行以注册一个在WordPress渲染管理页面页脚时被调用的函数：
- en: '[PRE13]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Provide an implementation for the `ch2pit_user_filter_js` function by adding
    the following code section:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过添加以下代码段为`ch2pit_user_filter_js`函数提供一个实现：
- en: '[PRE14]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Add this line of code to register a function that will be executed when WordPress
    is preparing the query to retrieve the list of users from the database:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加此代码行以注册一个在WordPress准备从数据库检索用户列表的查询时将被执行的函数：
- en: '[PRE15]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Insert the following block of code to define the `ch2pit_filter_users` function:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 插入以下代码块以定义`ch2pit_filter_users`函数：
- en: '[PRE16]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Save and close the plugin file.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存并关闭插件文件。
- en: Visit the Users section of the administration interface to see the new User
    Level column.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问管理界面的用户部分以查看新的用户级别列。
- en: '![](img/baf5e7bb-3131-475b-8b85-47bc8b1cc42a.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/baf5e7bb-3131-475b-8b85-47bc8b1cc42a.png)'
- en: Use the filter drop-down list and click on Filter to limit the number of records
    displayed.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用过滤器下拉列表并点击“过滤”以限制显示的记录数。
- en: How it works...
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The first code section in this recipe is a filter function that gets a list
    of all columns that the system intends on displaying in the users section of the
    administration interface. While we could have just added our new entry at the
    end of the array, similar to what we did in the *Displaying additional columns
    in the custom post list page* recipe in [Chapter 4](6298bc2b-19d5-4e3a-833c-3c4b667b22e5.xhtml),
    *The Power of Custom Post Types*, we take a more advanced approach in this recipe;
    we use the PHP `array_slice` function to split the columns array into two sections
    and insert our new column name between the existing items.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 本配方中的第一个代码段是一个过滤器函数，它获取系统打算在管理界面用户部分显示的所有列的列表。虽然我们可以在数组的末尾添加我们的新条目，就像我们在[第4章](6298bc2b-19d5-4e3a-833c-3c4b667b22e5.xhtml)的*在自定义帖子列表页面中显示额外列*配方中所做的那样，*自定义帖子类型的威力*，但我们在这个配方中采用了一种更高级的方法；我们使用PHP的`array_slice`函数将列数组分成两部分，并在现有项目之间插入我们的新列名。
- en: We continue this recipe by providing a function that displays the user level
    assigned to each user. This is done by simply retrieving the information based
    on the current user ID and returning the data to be displayed. It should be noted
    that the user management page takes an approach that is slightly different from
    the post and pages custom column content, since it uses a filter function where
    we return data instead of using an action hook that directly sends content to
    the browser.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过提供一个显示分配给每个用户的用户级别的函数来继续这个配方。这是通过简单地根据当前用户ID检索信息并将要显示的数据返回来完成的。需要注意的是，用户管理页面采取的方法与文章和页面自定义列内容略有不同，因为它使用了一个过滤器函数，我们在其中返回数据而不是使用直接将内容发送到浏览器的动作钩子。
- en: The next code section is responsible for rendering a drop-down list of user
    levels that can be used to filter the user list; this is done by using standard
    HTML and code to loop through the list of user levels and display them. Unfortunately,
    WordPress complicates things by calling our function twice, before and after listing
    users, resulting in two drop-down lists on the same page with no way to differentiate
    them. To avoid having issues with the two drop-down lists being set to different
    values and sending these conflicting values to our filtering code, the next function
    places Javascript code in the page footer of all the user listing pages. This
    allows us to synchronize either drop-down list with the other's value when the
    user interacts with them.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个代码段负责渲染一个用户级别的下拉列表，可以用来过滤用户列表；这是通过使用标准的HTML和代码遍历用户级别列表并显示它们来完成的。不幸的是，WordPress通过在列出用户之前和之后调用我们的函数两次来使事情复杂化，导致同一页面上出现两个下拉列表，无法区分它们。为了避免两个下拉列表设置不同的值并将这些冲突的值发送到我们的过滤代码中，下一个函数将JavaScript代码放置在所有用户列表页面的页面页脚中。这允许我们在用户与之交互时同步任一下拉列表的值。
- en: Our last step consists of modifying the user query if we find a filtering argument
    in the page URL when displaying the user listing. If an argument is found and
    the page is the correct one, we will check whether the value is part of our user
    levels array and then add it to the system's current query variables.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的最后一步是在显示用户列表时，如果我们在页面URL中找到一个过滤参数，就修改用户查询。如果找到参数并且页面是正确的，我们将检查该值是否是我们用户级别数组的一部分，然后将其添加到系统的当前查询变量中。
- en: See also
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参见
- en: The *Processing and storing user custom data* recipe
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*处理和存储用户自定义数据*配方'
- en: Using custom user data in containing shortcode
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在包含短代码中使用自定义用户数据
- en: Now that we have additional data stored in user profiles and have facilitated
    the viewing of this information in the administration pages, the only missing
    component to achieve our goal of restricting some site content to paid users is
    to introduce a new enclosing shortcode that will check a user's level before displaying
    content. The recipe will show how to create this new shortcode.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经在用户配置文件中存储了额外的数据，并简化了在管理页面中查看这些信息，要实现将一些网站内容限制为付费用户的目标，唯一缺少的组件是引入一个新的包围短代码，该短代码在显示内容之前将检查用户的级别。配方将展示如何创建这个新的短代码。
- en: Getting ready
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: You should have already followed the *Display new user data in user list page*
    recipe to have a starting point for this recipe and the resulting plugin should
    still be active in your development site. Alternatively, you can get the resulting
    code (`Chapter 7/ch2-private-item-text/ch2-private-item-text-v5.php`) from the
    [Chapter 7](3a74e0e8-c6b8-4641-a7d2-badf67c6f1f2.xhtml), *Customizing User Data*
    section of the downloaded code bundle, renaming it as `ch2-private-item-text.php`.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该已经遵循了*在用户列表页面显示新用户数据*的配方，以便为这个配方提供一个起点，并且生成的插件仍然在你的开发站点中处于活动状态。或者，你可以从[第7章](3a74e0e8-c6b8-4641-a7d2-badf67c6f1f2.xhtml)的下载代码包中获取生成的代码（`Chapter
    7/ch2-private-item-text/ch2-private-item-text-v5.php`），将其重命名为`ch2-private-item-text.php`。
- en: How to do it...
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: Navigate to the `ch2-private-item-text` folder of the WordPress plugin directory
    of your development installation.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到你的开发安装的WordPress插件目录中的`ch2-private-item-text`文件夹。
- en: Open the `ch2-private-item-text.php` file in a text editor.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文本编辑器中打开`ch2-private-item-text.php`文件。
- en: 'Add the following line of code to define a new shortcode and define the function
    to be called when it is used:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在定义一个新的短代码并定义当使用它时调用的函数时，添加以下代码行：
- en: '[PRE17]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Provide an implementation for `ch2pit_paid_shortcode` with the following code
    section:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提供以下代码段的`ch2pit_paid_shortcode`实现：
- en: '[PRE18]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Save and close the plugin file.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存并关闭插件文件。
- en: Create a new post and wrap some or all of the content with the `[paid]` and
    `[/paid]` tags. View the page as an administrator, a visitor who is not logged
    in, a registered regular user, and a registered paid user to validate that the
    content is only displayed in the first and last cases.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的帖子，并用 `[paid]` 和 `[/paid]` 标签包裹部分或全部内容。以管理员、未登录的访问者、注册的普通用户和注册的付费用户身份查看页面，以验证内容仅在第一种和最后一种情况下显示。
- en: '![](img/4cb4cf44-1383-4b87-a8eb-6a3a0851a413.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/4cb4cf44-1383-4b87-a8eb-6a3a0851a413.png)'
- en: How it works...
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Similar to the `[private]` shortcode that we created back in the *Creating a
    new enclosing shortcode* recipe in [Chapter 2](f7395811-9e4a-4913-8a02-cc68875d0071.xhtml),
    *Plugin Framework Basics*, the new `[paid]` shortcode that this recipe puts in
    place can be used by content creators to identify one or more sections of a post
    or page that can only be viewed by users whose user level is set as a paid member.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 与我们在[第2章](f7395811-9e4a-4913-8a02-cc68875d0071.xhtml)中创建的 *创建新的封装短代码* 菜单中的 `[private]`
    短代码类似，这个菜谱中设置的新的 `[paid]` 短代码可以让内容创建者识别一篇文章或页面中的一或多个只能由设置为付费会员的用户查看的部分。
- en: To do this, our shortcode implementation first checks whether the visitor is
    logged in. If that is the case, it further validates the user by asking WordPress
    to provide data on the current user, then uses the user ID to retrieve the `user_level`
    metadata that we stored in the previous recipes in this chapter. Alternatively,
    it checks if the user is a site administrator by using the `current_user_can`
    WordPress function and specifying `'activate_plugins'` as the argument, since
    only administrators can perform this action. If all of these conditions are met,
    the enclosed post content will be displayed. Otherwise, a message will be shown
    to indicate that users must be paid members to see this content.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 要做到这一点，我们的短代码实现首先检查访问者是否已登录。如果是这样，它将进一步通过请求WordPress提供当前用户的数据来验证用户，然后使用用户ID检索我们在本章前面的菜谱中存储的
    `user_level` 元数据。或者，它使用 `current_user_can` WordPress函数并指定 `'activate_plugins'`
    作为参数来检查用户是否是网站管理员，因为只有管理员才能执行此操作。如果所有这些条件都满足，则将显示封装的帖子内容。否则，将显示一条消息，表明用户必须是付费会员才能查看此内容。
- en: See also
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参见
- en: The *Display new user data in user list page* recipe
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在用户列表页面显示新用户数据* 菜单'
