- en: Feeding the Masses – RSS
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 满足大众需求 – RSS
- en: 'In this chapter, we will look at what a feed is and how to create one. In fact,
    we will create two! Here are the topics we will cover:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨什么是频道以及如何创建一个。实际上，我们将创建两个！以下是我们将涵盖的主题：
- en: Why you would want to provide a feed
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么您想提供频道？
- en: Deciding what content to include in a feed
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 决定要包含在频道中的内容
- en: Modifying content to enable feed selection
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修改内容以启用频道选择
- en: A brief overview of the Views module
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 视图模块的简要概述
- en: Using the Views module to create feeds
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用视图模块创建频道
- en: Creating a block of feed links
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一组频道链接
- en: Why feeds?
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么需要频道？
- en: What is a *feed*? **RSS** stands for **Rich Site Summary**. The word "feed"
    has many meanings. In our context, the meaning to consider is the one that you've
    probably heard in regards to broadcast television. For example, there could be
    an event happening outside London that is being covered by a local network. That
    network then allows other networks and stations to tap into their continuous broadcast,
    when desired. That continuous broadcast is referred to as a *feed*, in that it
    is "food" for another to consume. On the internet, a feed is much the same. A
    site provides its content in a stream that is pulled (requested) by a site that
    wants to use that content. That stream is a feed.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 什么是*频道*？**RSS**代表**丰富网站摘要**。单词“频道”有许多含义。在我们的上下文中，要考虑的含义是您可能已经在关于广播电视中听到的那个。例如，可能有一个事件正在伦敦外发生，并被当地网络报道。然后，该网络允许其他网络和电台在需要时接入他们的连续广播。这种连续广播被称为*频道*，因为它是对另一个消费的“食物”。在互联网上，频道与这非常相似。一个网站提供其内容流，该流被（请求）由想要使用该内容的网站拉取。这个流就是频道。
- en: Some feeds provide news content. Some are e-commerce feeds that provide products
    that any registered e-commerce site can sell for a commission. Some simply provide
    articles on topics of interest to the readers of sites that consume the feeds.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 一些频道提供新闻内容。一些是电子商务频道，提供任何注册电子商务网站都可以销售并获得佣金的商品。一些只是提供对订阅频道读者感兴趣的主题的文章。
- en: So, why would you want to provide a feed for your site?
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，为什么您想为您的网站提供频道呢？
- en: Exposure. Providing a feed makes it possible for other sites to consume it and
    expose your site's content to those who might otherwise never see it.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 曝光。提供频道使得其他网站能够消费它，并将您网站的内容展示给那些可能永远不会看到它的人。
- en: Selecting content for a feed
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 选择用于频道的文章
- en: What if some of your site content is secure, or available only to premium subscribers? No
    problem! We're going to look at a way to filter the content selected for the feed,
    or, conversely, filter out content that you do not want selected.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的一些网站内容是安全的，或者仅对高级订阅者可用怎么办？没问题！我们将探讨一种过滤为频道选择的内容的方法，或者相反，过滤掉您不希望被选择的内容。
- en: We're going to create three feeds. The first thing we need to decide upon is
    what content the feed will contain...which means determining the selection criteria.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将创建三个频道。首先，我们需要决定频道将包含什么内容……这意味着确定选择标准。
- en: One of our feeds is destined for the pet-loving community. It will contain any
    of our articles related to pets.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的一个频道是为宠物爱好者社区准备的。它将包含我们与宠物相关的任何文章。
- en: Our second feed is for travelers. It will contain any of our articles related
    to travel.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的第二个频道是为旅行者准备的。它将包含我们与旅行相关的任何文章。
- en: Finally, our third feed will contain any article that not included in the first
    two feeds.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们的第三个频道将包含前两个频道未包含的任何文章。
- en: Modifying content for feed selection
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 修改内容以进行频道选择
- en: So, we know what criteria we have for our feeds, but how will Drupal know which
    content meets that criteria? Let's discuss two possible methods.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们知道我们的频道有哪些标准，但Drupal将如何知道哪些内容符合这些标准呢？让我们讨论两种可能的方法。
- en: Pick-me flags
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 吸引注意的标志
- en: A *pick-me* flag is a content field that's purpose is to highlight the fact
    that the content applies to something specific, and so is the flag for selecting
    it. It is represented by a Boolean field, which contains `True (-1)` or `False
    (0)`, so that you can think of it as either on or off. It is typically represented
    by a checkbox.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '*吸引注意*标志是一个内容字段，其目的是突出内容适用于特定事物的事实，因此选择该标志的标志也是如此。它由一个布尔字段表示，包含`True (-1)`或`False
    (0)`，因此您可以将其视为开启或关闭。它通常由复选框表示。'
- en: So, for our use, we could add a field called Pets to our article content type,
    and check the box when creating an article if the article touches on pets, and
    the same with a Travel checkbox for travel content.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，为了我们的用途，我们可以在文章内容类型中添加一个名为宠物的字段，并在创建文章时如果文章涉及宠物，就勾选该框，同样对于旅行内容有一个旅行复选框。
- en: This makes sense, and is an easy way to determine what content to select, but
    there is one kink in that plan. Every time a new criterion arises, it would mean
    adding yet another field to the content type. Things could get messy quickly.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这是有意义的，并且是确定要选择的内容的简单方法，但这个计划中有一个小问题。每次出现新的标准时，就意味着需要在内容类型中添加另一个字段。事情可能会很快变得混乱。
- en: A pick-me flag works best for a standalone need, such as when an article is
    marked as Published. Fortunately, there is another method available to us.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 一个“让我来”标志最适合独立的需求，例如当一篇文章被标记为已发布时。幸运的是，我们还有另一种方法可用。
- en: Tags
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 标签
- en: Just as content is kept in an entity called a *node*, Drupal also has an entity
    type called *taxonomy*, which is a scientific word for classification. Just as
    nodes are represented by content, taxonomy is represented by vocabularies containing
    terms.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 正如内容被保存在一个称为 *节点* 的实体中一样，Drupal 也有一个称为 *分类* 的实体类型，这是一个用于分类的科学术语。正如节点由内容表示一样，分类由包含术语的词汇表表示。
- en: Drupal comes with a taxonomy vocabulary, called Tags. The intended use of tags
    is to categorize content. Additional vocabularies can also be created to hold
    tags for specific use, such as one for travel-related terms, or one for Spanish-language
    terms, but for the purpose of assigning categories applicable to the content,
    this is what the Tags vocabulary was designed for, and it will work for us.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Drupal 内置了一个分类词汇表，称为标签。标签的预期用途是对内容进行分类。也可以创建额外的词汇表来存储特定用途的标签，例如与旅行相关的术语或西班牙语术语的词汇表，但为了分配适用于内容的类别，这是标签词汇表被设计的目的，并且它将适用于我们。
- en: I'm going to go back and edit the article *A Moment in the Life of My Dog*,
    and in the *Tags* field, which currently contains `Sasha` and `donuts`, I'm going
    to add one more, `pets`, and save it again.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我将返回并编辑文章 *我的狗生活中的一个瞬间*，在当前包含 `Sasha` 和 `甜甜圈` 的 *标签* 字段中，我将添加一个额外的标签，`pets`，然后再次保存。
- en: 'Then, I will add two additional pieces of content, both related to travel,
    and will tag them with travel, as well as tags specific to the travel type and
    destination, as shown in the following screenshots. The following screenshot is
    related to Iceland:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我将添加两个额外的与旅行相关的内容，并将它们标记为旅行，以及特定于旅行类型和目的地的标签，如下面的截图所示。以下截图与冰岛相关：
- en: '![](img/0aec6292-af37-401d-be2e-ed4d08e357dc.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/0aec6292-af37-401d-be2e-ed4d08e357dc.png)'
- en: 'And the other is related to the Caribbean:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个与加勒比海相关：
- en: '![](img/7cddc26f-1db3-4b58-ba9a-e6177a1a5b76.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/7cddc26f-1db3-4b58-ba9a-e6177a1a5b76.png)'
- en: Now, we need one final piece of content for the third of our feeds. The tag
    for this content will be *leftovers*, since the feed is for any content not tagged
    as pets or travel.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们需要为我们的第三个内容源添加最后一块内容。这个内容的标签将是 *剩菜*，因为这个源是为任何未标记为宠物或旅行的内容。
- en: Having created some content for testing our feed, let's look at how we're going
    to do that.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在为测试我们的源创建了一些内容之后，让我们看看我们将如何进行。
- en: Views
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 视图
- en: Views is a very popular Drupal module. It used to be a contributed module, but
    is now part of Drupal's core code.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: Views 是一个非常受欢迎的 Drupal 模块。它曾经是一个贡献模块，但现在它是 Drupal 核心代码的一部分。
- en: Views provides many features, and so resists a single-sentence description.
    Rather than trying to describe what it is for, let me give you a simple description
    of how it works, from which you can infer many of its potential uses.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: Views 提供了许多功能，因此难以用一句话来描述。与其试图描述它是做什么的，不如让我给你一个简单的工作原理描述，从中你可以推断出许多潜在用途。
- en: Views retrieves data from Drupal based on selection criteria and data relationships,
    arranges it, and outputs it in any number of ways, whether as a component of a
    Drupal page, as an external file, or as a feed – which is meaningful for our purposes.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: Views 根据选择标准和数据关系从 Drupal 获取数据，对其进行排列，并以任何数量的方式输出，无论是作为 Drupal 页面的组件、外部文件还是作为源
    - 这对我们来说是有意义的。
- en: To get started, navigate to Extend (`/admin/modules`) and enable both Views
    and Views UI. The former is the module that provides the services for each view
    to run, while the latter provides a visual tool for creating views.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始，导航到扩展（`/admin/modules`）并启用 Views 和 Views UI。前者是提供每个视图运行服务的模块，而后者提供了一个用于创建视图的视觉工具。
- en: Creating the container view
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建容器视图
- en: 'Here, we are going to be creating three feeds. The output choices and displays
    of the Views module includes both feeds and blocks, and a single view can act
    as a container for multiple displays. Although we will be creating three view
    displays, they will all be contained in one view. Let''s create it, as follows:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将创建三个信息源。视图模块的输出选项和显示包括信息源和块，一个视图可以作为多个显示的容器。尽管我们将创建三个视图显示，但它们都将包含在一个视图中。让我们按照以下步骤创建它：
- en: Navigate to Structure | Views (`/admin/structure/views`) and click the +Add
    view button.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到结构 | 视图 (`/admin/structure/views`) 并点击 + 添加视图按钮。
- en: In the View name text box, we'll enter **Custom RSS Feeds**. I am naming it
    this way to differentiate it from the predefined RSS view included with the module.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在视图名称文本框中，我们将输入 **自定义 RSS 信息源**。我这样命名是为了区分模块中包含的预定义 RSS 视图。
- en: Below the name is a checkbox for Description. Let's check it, and in the text
    box that appears, enter `Tutorial examples`. This description will appear in the
    list of views at */admin/structure/views*.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在名称下方有一个描述复选框。让我们勾选它，并在出现的文本框中输入 `教程示例`。这个描述将出现在 */admin/structure/views* 的视图列表中。
- en: The remainder of the page allows us to provide information in an easy manner
    that will be carried forward to the Views UI, where we can still enter it but
    with a little more effort. However, we are focusing on creating feeds, and the
    feed display type is not offered here.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 页面的其余部分允许我们以易于理解的方式提供信息，这些信息将被传递到视图 UI，在那里我们仍然可以输入，但需要更多的努力。然而，我们专注于创建信息源，而信息源显示类型在这里没有提供。
- en: Click the Save and edit button to save your changes.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击保存并编辑按钮以保存您的更改。
- en: Creating the Pets feed
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建宠物信息源
- en: 'We are now on the Views UI form for our view. The following screen will look
    slightly different than what you will see, because I have opened the Advanced
    column on the right so that you can see the entire form:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在处于我们视图的视图 UI 表单。以下屏幕将看起来与您看到的不同，因为我已经打开了右侧的“高级”列，以便您可以看到整个表单：
- en: '![](img/7df0b34e-136f-4744-bb9b-3a1caf8f9ce0.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/7df0b34e-136f-4744-bb9b-3a1caf8f9ce0.png)'
- en: At this point, the only display that exists for our view is the Master display,
    which acts like a template. Settings made in it are carried forward to any displays
    added to the view. Since we will be creating more than one type of display, feeds,
    and a block, we won't enter the settings on the Master.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们视图中的唯一显示是主显示，它就像一个模板。在其中所做的设置会应用到视图添加的任何显示上。由于我们将创建多种类型的显示、信息源和块，我们不会进入主显示的设置。
- en: The first thing we need to do is select the type of display we want. Most often,
    this will be a page or a block, but we want to create a feed. Click the +Add button
    at the top and select Feed from the list. Now that a display has been added, the
    Master display will be hidden and replaced with Feed. The asterisk is present
    because the display has been modified but not yet saved.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要做的第一件事是选择我们想要的显示类型。通常情况下，这将是一个页面或一个块，但我们要创建一个信息源。点击顶部的 + 添加按钮，从列表中选择信息源。现在，已经添加了一个显示，主显示将被隐藏并替换为信息源。星号存在是因为显示已被修改但尚未保存。
- en: Let's work our way through the settings, one panel at a time.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们逐个面板地处理设置。
- en: Display name
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 显示名称
- en: The display name is currently Feed, which would be fine if we were to only have
    one in the view. Since we will be having three, we'll make the name more specific.
    Click the word Feed and enter `Pets Feed` in the popup, and then click Apply*.*
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 当前显示名称是“信息源”，如果我们只在一个视图中有一个，那将是完全可以的。由于我们将有三个，我们将使名称更加具体。点击“信息源”这个词，在弹出的窗口中输入“宠物信息源”，然后点击应用*.*
- en: Title
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 标题
- en: We want to add a title, so click None, and in the popup, enter `D8QuickStart
    Pets Feed`, and then click Apply*.*
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我们想添加一个标题，所以点击无，在弹出的窗口中输入 `D8QuickStart 宠物信息源`，然后点击应用*.*
- en: Format
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 格式
- en: We want the format to be an RSS feed, so that can be left as is. Click the Settings
    link and enter the same string that we used for the feed title, that is, D8QuickStart
    Pets Feed. We don't have to use the same one, but it provides a descriptive title
    that also works to describe the RSS content. Click the Apply button.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望格式是一个 RSS 信息源，所以可以保持不变。点击设置链接，并输入我们用于信息源标题的相同字符串，即 D8QuickStart 宠物信息源。我们不必使用相同的名称，但它提供了一个描述性的标题，同时也适用于描述
    RSS 内容。点击应用按钮。
- en: Feed settings
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 信息源设置
- en: I'm going out of order for a moment. The reason for this is that Views provides
    a live preview area that shows what the view output will be based on what settings
    have been entered. This preview is at the bottom of the page, but if you scroll
    down, you will just see an error telling you that the feed should have a path,
    but none has been supplied. As long as an error is present, no preview will be
    generated, so let's get rid of the error.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我暂时跳过顺序。这样做的原因是视图提供了实时预览区域，它显示了基于已输入的设置视图输出将是什么。这个预览在页面底部，但如果你向下滚动，你只会看到一个错误告诉你推送应该有一个路径，但没有提供。只要存在错误，就不会生成预览，所以让我们消除这个错误。
- en: We'll make our path `/pets/feed`. Click Path and enter that into the text box
    in the popup, click Apply, and click Save at the bottom of the page.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将路径设置为 `/pets/feed`。点击路径，在弹出窗口中的文本框中输入该路径，点击应用，然后在页面底部点击保存。
- en: Scrolling down to the Preview area, you will now see a preview of the feed.
    It might look a bit strange, but an RSS reader will know what to do with it. But
    all of our content is there...not just articles about pets. Let's address that
    next.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 向下滚动到预览区域，你现在将看到推送的预览。它可能看起来有点奇怪，但 RSS 阅读器将知道如何处理它。但所有我们的内容都在那里...不仅仅是关于宠物的文章。让我们接下来解决这个问题。
- en: Filtering the criteria
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 筛选标准
- en: We're skipping the Fields pane because we're not going to be specifying specific
    fields. We'll let Views parse our article content itself.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我们跳过了字段面板，因为我们不会指定特定的字段。我们将让视图本身解析我们的文章内容。
- en: Regarding Content Published, there may be circumstances where unpublished content
    should be included in the feed, but this isn't one of those times. Views has set
    this to **Yes** to show only published content.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 关于内容发布，可能存在某些情况下应该将未发布的内容包含在推送中，但这不是其中之一。视图已将其设置为 **是** 以显示仅发布的内容。
- en: The next filter we want to put in place will be to limit the select to Articles.
    Click the Add button and type **Content type** in the Search text box. The list
    of filter criteria will be filtered to just that one, and we'll check the box
    next to it.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们想要实施的下一个筛选标准是将选择限制为文章。点击添加按钮，在搜索文本框中输入 **内容类型**。筛选标准列表将仅过滤到那个，然后我们将在旁边勾选复选框。
- en: While we're at it, let's also enter the criterion that will allow us to select
    only articles about pets. Clear the Search text box and enter `Tax`. From the
    resulting list, check the box for Has taxonomy term, and then click the Add and
    configure filter criteria button.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在此期间，我们还可以输入允许我们仅选择关于宠物的标准的条件。清除搜索文本框，并输入 `Tax`。从结果列表中，勾选包含分类术语的复选框，然后点击添加和配置筛选条件按钮。
- en: The first popup is for specifying what content types we want included in our
    feed. Since we only want Articles, we'll check that box, then click Apply and
    continue.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个弹出窗口用于指定我们希望在推送中包含的内容类型。由于我们只想包含文章，我们将勾选该复选框，然后点击应用并继续。
- en: The next popup is used to select the taxonomy vocabulary that will contain the
    term(s) to which we will limit the content. Since Tags is the only vocabulary
    we have, it is already selected. Click Apply and continue. In the subsequent popup,
    enter `pets` into the text box and click Apply.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个弹出窗口用于选择将包含我们想要限制的内容的术语的分类词汇表。由于标签是我们拥有的唯一词汇表，它已经选中。点击应用并继续。在随后的弹出窗口中，在文本框中输入
    `pets` 并点击应用。
- en: Now, when we scroll down to the Preview area, the only content present is the
    *A Moment in the Life of My Dog* article.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当我们滚动到预览区域时，唯一存在的内容是 *A Moment in the Life of My Dog* 文章。
- en: Sort criteria
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 排序标准
- en: There is only one criterion present, but it is the one we want. The content
    will be ordered based on its creation date, with the most recent coming first.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 只有一个标准存在，但它正是我们想要的。内容将根据其创建日期排序，最新的排在前面。
- en: 'With that, we''ve completed our first feed. To test it, you will need to have
    a RSS feed reader installed in your browser. Given that, and entering `/pets/feed`,
    we can see that the feed works as it should:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这个，我们已经完成了第一次推送。为了测试它，你需要在浏览器中安装一个 RSS 推送阅读器。考虑到这一点，并输入 `/pets/feed`，我们可以看到推送正如预期那样工作：
- en: '![](img/6bd7296e-67a2-4cfa-ac1e-84fa27357873.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/6bd7296e-67a2-4cfa-ac1e-84fa27357873.png)'
- en: Let's click Save and move on to our next feed.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们点击保存，继续到下一个推送。
- en: Creating the Travel feed
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建旅行推送
- en: Our Travel feed will be much like the Pets feed. One thing we would like to
    do differently is have the feed include the image that is part of the content,
    because travel consuming sites are very visually focused.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的旅行源将与宠物源非常相似。我们想要做的一件事是让源包含内容的一部分图片，因为旅行消费网站非常注重视觉。
- en: Since we have already created a feed display, we can clone it and make the changes
    we need rather than starting from scratch. Find the drop-down that reads View
    Pets Feed and click the arrow, and then click *Duplicate Pets Feed*.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们已创建了一个源显示，我们可以克隆它并做出所需的更改，而不是从头开始。找到显示为“查看宠物源”的下拉菜单，点击箭头，然后点击 *复制宠物源*。
- en: You will note that we now have two Pets Feed listings in the Displays pane.
    The highlighted one is the new one. Let's quickly change its name before we get
    confused by both having the same name. Click the link for Pets Feed beside Display
    name and change the name to `Travel Feed` before clicking Apply.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到我们现在在显示面板中有两个宠物源列表。突出显示的是新的一个。在我们对两个都使用相同的名称而感到困惑之前，让我们快速更改其名称。点击显示名称旁边的宠物源链接，在点击应用之前将名称更改为
    `Travel Feed`。
- en: Title
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 标题
- en: 'We will make the same change to the Title, changing Pets to `Travel`, but before
    clicking Apply, ensure that you change the drop-down from *All displays* to *This
    feed (override)*, which will change the text of the *Apply* button to *Apply (this
    display)*, otherwise you will change both feeds:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将对标题进行相同的更改，将宠物更改为 `Travel`，但在点击应用之前，确保将下拉菜单从 *所有显示* 更改为 *此源（覆盖）*，这将更改 *应用*
    按钮的文本为 *应用（此显示）*，否则你将更改两个源：
- en: '![](img/eb9eb42c-d406-4499-8fd0-59c5f8a68e6d.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](img/eb9eb42c-d406-4499-8fd0-59c5f8a68e6d.png)'
- en: When working with more than one display, be careful when making settings changes
    to ensure that the change is configured properly, either for only the display
    you are currently editing, or for all displays, if that is your intention. Accidentally
    applying a change to all displays (the default) can result in a lot of extra work.
    The easiest way to remember this is to always note what the Apply button says.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 当处理多个显示时，在更改设置时要小心，确保更改已正确配置，无论是仅针对您当前正在编辑的显示，还是针对所有显示（如果这是您的意图）。意外地将更改应用于所有显示（默认）可能会导致大量额外工作。记住这一点最简单的方法是始终注意应用按钮上显示的内容。
- en: Feed settings
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 源设置
- en: I'm going out of order again. This time, we need to change the path, which has
    been copied from the Pets feed.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 我又乱了顺序。这次，我们需要更改路径，该路径是从宠物源复制的。
- en: We'll make our path `/travel/feed`. Click *Path* and enter that into the text
    box in the popup, and click *Apply*.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将路径设置为 `/travel/feed`。点击 *路径* 并将其输入到弹出窗口中的文本框中，然后点击 *应用*。
- en: Format
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 格式
- en: Make the same change under Settings in the Format section, by changing **Pets**
    to **Travel**. You will notice that this setting does not offer the choices that
    we just discussed. Some settings apply only to a single display.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在格式部分的设置中，通过将 **宠物** 更改为 **旅行** 来进行相同的更改。你会注意到此设置不提供我们刚才讨论的选项。某些设置仅适用于单个显示。
- en: We're going to change things up somewhat in order to accommodate our need for
    having the content image included in the feed. Let's tell Drupal that we want
    the feed to be in a different format than the default, the output of which you
    saw for the Pets feed.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将做一些改变，以便适应我们需要在源中包含内容图片的需求。让我们告诉Drupal我们希望源以不同于默认的格式显示，正如你在宠物源中看到的那样。
- en: Beside *Show*, click *Use site default RSS settings* and from the popup select
    *Teaser*. A content teaser typically contains text and an image—if the content
    contains one—and that is what we want. Click the *Apply* button.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *显示* 旁边点击 *使用站点默认RSS设置* 并从弹出菜单中选择 *摘要*。内容摘要通常包含文本和图片（如果内容包含的话），这正是我们想要的。点击
    *应用* 按钮。
- en: Filtering criteria
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 过滤条件
- en: We're skipping the Fields pane because we're not going to be specifying specific
    fields. We'll let Views parse our article content itself.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将跳过字段面板，因为我们不会指定特定字段。我们将让Views解析我们的文章内容本身。
- en: Only one setting from the Pets feed needs to be changed. Click the *Has taxonomy
    term (= pets)* link. In the subsequent popup, enter `travel` into the text box,
    select *This feed (override)* in the dropdown at the top, and click *Apply (this
    display)*.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 只需从宠物源中更改一个设置。点击 *包含分类术语（=宠物）* 链接。在随后的弹出窗口中，将 `travel` 输入到文本框中，在顶部的下拉菜单中选择 *此源（覆盖）*，然后点击
    *应用（此显示）*。
- en: 'Now, when we scroll down to the Preview area, we will be able to see our feed
    with teasers of our travel content:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当我们滚动到预览区域时，我们将能够看到我们的带有旅行内容摘要的源：
- en: '![](img/9f23274d-cd7f-4da6-9ca7-c58ab148830b.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/9f23274d-cd7f-4da6-9ca7-c58ab148830b.png)'
- en: Two down and one to go!
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 两个已经完成，还有一个待完成！
- en: Creating the Leftovers feed
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建剩菜源
- en: We will clone the Pets feed, since it doesn't include images and neither will this
    one. Click the Pets Feed button in Displays to switch to it from the Travel Feed.
    Find the drop-down that reads *View Pets Feed* and click the arrow, and then click
    *Duplicate Pets Feed*.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将克隆宠物源，因为它不包含图片，这个也不会。在显示中点击宠物源按钮，从旅行源切换到它。找到显示为*查看宠物源*的下拉菜单，点击箭头，然后点击*复制宠物源*。
- en: You will note that we now have two *Pets Feed* listings in the *Display**s*
    pane. The highlighted one is the new one. Let's quickly change its name before
    we get confused by both having the same name. Click the link for *Pets Feed* beside
    *Display name* and change the name to `Leftovers Feed` before clicking *Apply*.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到我们现在在*显示*面板中有两个*宠物源*列表。突出显示的是新的一个。在我们对两个具有相同名称的内容感到困惑之前，让我们快速更改其名称。点击*显示名称*旁边的*宠物源*链接，在点击*应用*之前将其名称更改为`剩菜源`。
- en: Title
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 标题
- en: We will make the same change to the *Title*, changing Pets to `Leftovers`, but before
    clicking *Apply*, ensure that you change the drop-down from *All displays* to
    *This feed (override)*, which will change the text of the *Apply* button to *Apply
    (this display)*, otherwise you will change all feeds.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将对*标题*进行相同的更改，将宠物更改为`剩菜`，但在点击*应用*之前，确保将下拉菜单从*所有显示*更改为*此源（覆盖）*，这将更改*应用*按钮的文本为*应用（此显示）*，否则您将更改所有源。
- en: Feed settings
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 源设置
- en: We'll make our path `/leftovers/feed`. Click *Path* and enter that into the
    text box in the popup, and then click *Apply*.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将路径设置为`/leftovers/feed`。点击*路径*，在弹出窗口中的文本框中输入该路径，然后点击*应用*。
- en: Format
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 格式
- en: Make the same change under Settings in the Format section, changing Pets to
    `Travel`.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在格式部分的设置下进行相同的更改，将宠物更改为`旅行`。
- en: Filtering criteria
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 过滤条件
- en: Click the *Has taxonomy term (= pets)* link. In the subsequent popup, change
    *Is one of* to *Is none of*. Enter **travel** into the text box after **pets**,
    separating them with a comma, select *This feed (override)* in the drop-down at
    the top, and click *Apply (this display)*.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 点击*具有分类术语（=宠物）*链接。在随后的弹出窗口中，将*是之一*更改为*不是之一*。在**宠物**之后，在文本框中输入**旅行**，用逗号分隔它们，在顶部的下拉菜单中选择*此源（覆盖）*，然后点击*应用（此显示）*。
- en: Now, when we scroll down to the Preview area, we will see our final feed containing
    all content other than the content that was used for the first two feeds.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当我们滚动到预览区域时，我们将看到我们的最终源，它包含除用于前两个源的内容之外的所有内容。
- en: Great! We've finished with our view. Let's create the menu block!
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 太好了！我们已经完成了视图。让我们创建菜单块！
- en: Creating the Feed Links block
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建源链接块
- en: 'Our feeds won''t be of much use if site visitors can''t find them, so we will
    create a means for them to do so. We''re not going to be using Views for this.
    You might wonder why, since Views can create a block display. Views is made to
    select items (rows of data) and create an output for each, whether that be feed
    items, pages of articles, or a bulleted list. Our links are going to be HTML text
    unrelated to rows. In other words, this is one block of text without any regard
    to a selection of article content or any other content. Because of that, the easiest
    approach is to create a custom block to act as a feed menu on the home page, like
    so:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 如果网站访客找不到我们的内容，那么我们的内容将没有太大用处，因此我们将为他们创建一种查找方式。我们不会使用视图来完成这个任务。你可能想知道为什么，因为视图可以创建块显示。视图是为了选择项目（数据行）并为每个项目创建输出而设计的，无论是内容源、文章页面还是项目符号列表。我们的链接将是与行无关的HTML文本。换句话说，这是一段没有考虑文章内容或其他内容选择的文本块。正因为如此，最简单的方法是创建一个自定义块，作为主页上的内容菜单，如下所示：
- en: Navigate to *Structure* | *Block layout* (`/admin/structure/block`) and click
    the tab for *Custom block library*. Then, click the *+Add custom block* button.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到*结构* | *块布局* (`/admin/structure/block`)，然后点击*自定义块库*选项卡。然后，点击*+添加自定义块*按钮。
- en: For the *Block description*, enter `RSS feeds`.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在*块描述*中输入`RSS源`。
- en: 'For the *Body*, click Source in the toolbar, and then enter the following:'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于*正文*，在工具栏中点击源，然后输入以下内容：
- en: '[PRE0]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Click Source again, then click Save.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次点击源，然后点击保存。
- en: Summary
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we have learned what RSS feeds are and how they are used, and
    how to create content meant for a feed. We have learned about the Views module
    and what views are, how to create a view with multiple feed displays, and how
    to create a block menu.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了RSS源是什么以及它们是如何被使用的，以及如何创建为源准备的内容。我们还了解了视图模块以及视图是什么，如何创建一个具有多个源显示的视图，以及如何创建一个块菜单。
- en: In our final chapter, we will put everything together in a home page, including
    making use of the block we created in this chapter.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的最后一章，我们将把所有内容整合到一个主页上，包括使用本章创建的块。
