- en: Chapter 1. Introduction and Shared Project Resources
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What is this chapter for? I hope to use this first chapter to act as a primer
    for all other chapters and projects in the book. I would like you to use the introduction
    as a common resource containing all of the resources shared by the projects in
    the book.
  prefs: []
  type: TYPE_NORMAL
- en: The introduction will cover the installation of third-party software, libraries,
    helpers, and so on, that are required by the projects in the later chapters. By
    keeping these resources in this chapter, the projects aren't swamped with repetitive
    code and the project code can be kept as clean and concise as possible.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: An overview of the book
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Downloading CodeIgniter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Downloading and installing Twitter Bootstrap
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating common header and footer files used for all projects
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing Sparks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Common language items
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Common resources
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The common resources used in this book are discussed in upcoming sections.
  prefs: []
  type: TYPE_NORMAL
- en: Twitter Bootstrap
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Every project in the chapters in this book uses Twitter Bootstrap. We will download
    Bootstrap and find a good place for it in our filesystem. We will then create
    the header and the footer files. All projects in the book will call these header
    and footer files (using the CodeIgniter function `$this->load->view()` to display
    views). However, these projects will not actually contain the code for the header
    and footer—only the *working* code between the header and footer (what you might
    think of as the stuff in between the `<body>` and `</body>` tags) will be detailed
    in each project.
  prefs: []
  type: TYPE_NORMAL
- en: Headers and footers
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The menus will be different for individual projects. In the header file, we
    will include the code to display the menu, but the actual HTML contents for the
    menu will be included in each project's chapter. The footer file contains the
    closing HTML markup for each page.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading CodeIgniter
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We'll need a copy of CodeIgniter to start with. This book isn't really aimed
    at the beginner, so the chances are reasonably high that you already have a copy
    of CodeIgniter installed or at least know your way around enough to skip this
    part; however, it does make sense to briefly go through the installation of CodeIgniter
    so that we have something to talk about in later chapters!
  prefs: []
  type: TYPE_NORMAL
- en: First things first, go to [https://ellislab.com/codeigniter/user-guide/installation/downloads.html](https://ellislab.com/codeigniter/user-guide/installation/downloads.html).
    You'll see something similar to what is shown in the following screenshot. This
    is the CodeIgniter download page. At the time of writing, the current CodeIgniter
    version is 2.2.0; this is why the screenshot says **Current version** next to
    version 2.2.0; however, whichever version is the latest when you're reading this
    book is the version you want to use.
  prefs: []
  type: TYPE_NORMAL
- en: Click on the **Current version** link, and CodeIgniter will begin to download.
  prefs: []
  type: TYPE_NORMAL
- en: '![Downloading CodeIgniter](img/7093OS_01_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Once it's downloaded, navigate to where you have saved the file; this will be
    a compressed archive. Unpack it and move the contents of that file to a folder
    within your web root.
  prefs: []
  type: TYPE_NORMAL
- en: Specific details of routing, configuration, and database use are in each chapter
    (these details are specific to that particular chapter).
  prefs: []
  type: TYPE_NORMAL
- en: CodeIgniter on newer versions of PHP
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You may experience errors if you run CodeIgniter on newer versions of PHP.
    There is a hack for this that is explained at [https://ellislab.com/forums/viewthread/244510/](https://ellislab.com/forums/viewthread/244510/).
    A poster called *milan.petrak* has described a work around. It can be summed up
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Open the `/path/to/codeigniter/system/core/common.php` file and find the line
    257.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Find the following line:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Save the `common.php` file.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This will likely be permanently fixed in later releases of CodeIgniter, but
    for now, this is the fix.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Twitter Bootstrap
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Twitter Bootstrap is a frontend HTML5 framework that allows anyone to easily
    construct reliable interfaces. At the time of writing, the version of Bootstrap
    used is version 3.1.1.
  prefs: []
  type: TYPE_NORMAL
- en: We will use Twitter Bootstrap throughout this book to provide the framework
    for all view files and templates. We will look at how to download Twitter Bootstrap
    and how to install it in the CodeIgniter filesystem.
  prefs: []
  type: TYPE_NORMAL
- en: 'Firstly, we will need to download the Twitter Bootstrap files. To do that,
    perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Open your web browser and go to the Bootstrap download link at [http://getbootstrap.com/getting-started](http://getbootstrap.com/getting-started).
    You'll see something similar to what is shown in the following screenshot:![Installing
    Twitter Bootstrap](img/7093OS_01_02.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Find the **Download Bootstrap** link and click on it (as indicated in the preceding
    screenshot); the download will start automatically.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the download is finished, go to its location on your machine and unpack
    the archived file. Inside the unpacked file, you should see something similar
    to what is shown in the following structure:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Move the `bootstrap` folder to your CodeIgniter installation so that the file
    hierarchy looks like the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: In the preceding tree structure, the `application` and `system` directories
    are to do with CodeIgniter, as are the `index.php` and `license.txt` files; however,
    the `bootstrap` directory contains the contents of your Bootstrap download.
  prefs: []
  type: TYPE_NORMAL
- en: I have also indicated the location of the common `header.php` and `footer.php`
    files. These files are used throughout the book and act as a wrapper for every
    other view file.
  prefs: []
  type: TYPE_NORMAL
- en: Removing index.php from the address bar
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'It is possible to remove `index.php` from the web browser address bar when
    CodeIgniter is running. This can be done by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Create or open a `.htaccess` file. If a `.htaccess` file does not already exist,
    you can create one using the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Linux/Mac**: Open a terminal window and type the following:'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
- en: '**Windows**: Create a text file in your CodeIgniter root, naming it `file.htaccess`.
    Hold down the Windows key and then press *R* to open the **Run** dialogue. Enter
    the following command and click on **OK**:'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
- en: 'Once your `.htaccess` file is opened, write the following lines at the top
    of the file:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Installing and using Sparks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For a long time, you had to search the Internet and download code from various
    places—blogs, code repositories, and so on—to find and use extensions, libraries,
    and other useful snippets of code for CodeIgniter. Useful installations for CodeIgniter
    were spread across the Internet; as such, they might have been hard to locate.
    Sparks acts as a single point of reference for extensions of CodeIgniter. It''s
    simple to install and use and contains thousands of useful add-ons for CodeIgniter:'
  prefs: []
  type: TYPE_NORMAL
- en: 'If you are using a Mac or Linux, then the command-line interface is open to
    you. Using the terminal application on your system, navigate to the root of your
    CodeIgniter application and enter the following line:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'If your installation was successful, you should see something similar to the
    following:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'If you are using Windows, then you will need to download Sparks and unpack
    it manually; to do that, follow these instructions or check out the instructions
    on the GetSparks website for the latest version:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Create a folder called `tools` in the top level (root) or in your CodeIgniter
    directory.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Go to [http://getsparks.org/install](http://getsparks.org/install).
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Go to the **Normal Installation** section and download the Sparks package.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Unpack the download into the `tools` folder you created in step 1.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Download the Loader class extension from [http://getsparks.org/static/install/MY_Loader.php.txt](http://getsparks.org/static/install/MY_Loader.php.txt).
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Rename the file `MY_Loader.php.txt` to `MY_Loader.php` and move it to the `application/core/MY_Loader.php`
    location in your CodeIgniter instance.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Now that Sparks is installed in your CodeIgniter instance, you can begin to
    install extensions and packages.
  prefs: []
  type: TYPE_NORMAL
- en: 'To install a package from Sparks, type the following in the command-line window:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Here, `Package Version` is the specific version of the Spark you wish to install.
    You are not required to state the version and, if you it out, Sparks will download
    the latest version by default. `Spark Name` is the name of the Spark you wish
    to install; for example, to install `example-spark` (version 1.0.0), which comes
    with the default installation, type the following in the command-line window:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'If the installation was successful, you should see something similar to the
    following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Creating a shared header and footer view
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Every project throughout this book will use the common header and footer files
    that we will create here; navigation menus will be different for each project
    and, as such, we will build these in the project''s chapter themselves. But for
    now, let''s look at the common header and footer files:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Create the `header.php` file at `/path/to/codeigniter/application/views/common/`
    and add the following code to it:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The preceding view file contains the HTML for the head of a document. This is
    to say that this HTML is used throughout the book for every project, and it contains
    the HTML markup for everything from the opening `html` tag, opening and closing
    `head` tags, and the opening `body` tag.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Create the `footer.php` file at `/path/to/codeigniter/application/views/common/`
    and add the following code to it:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The preceding block of code contains the HTML markup for the footer view file
    used for every project throughout this book.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Common language items
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In each project throughout the book, we will create a specific language file
    containing specific language items that are relevant to that particular project.
    However, there are also common language elements that we won't repeat in each
    project (as there's no need); thus, we can have them here instead.
  prefs: []
  type: TYPE_NORMAL
- en: The language items mostly cover screen elements such as general navigation,
    general error and success messages, and CRUD actions (edit, delete, and so on).
  prefs: []
  type: TYPE_NORMAL
- en: With that in mind, let's go ahead and create the base language file that will
    serve as a template for the chapters in this book.
  prefs: []
  type: TYPE_NORMAL
- en: 'Create the `en_admin_lang.php` file at `/path/to/codeigniter/application/language/english/`
    and add the following code to it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: The preceding language items are mostly for HTML forms and tables of data, such
    as the text for the Submit, Edit, Delete, and History buttons. Also included are
    general error or success messages. Feel free to add to them if you wish.
  prefs: []
  type: TYPE_NORMAL
- en: Creating the MY_Controller file
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: All projects in this book make use of the `MY_Controller` file; this is the
    same for all projects.
  prefs: []
  type: TYPE_NORMAL
- en: 'Create the `MY_Controller.php` file at `/path/to/codeigniter/application/core/`
    and add the following code to it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: As you can see, we load helpers that are common to all projects, such as the
    `form` helper and the `language` helper, among others. The language file is also
    loaded here.
  prefs: []
  type: TYPE_NORMAL
- en: All the controllers in the project extend from this `MY_Controller` file rather
    than the default `CI_Controller` file.
  prefs: []
  type: TYPE_NORMAL
- en: Autoloading common system resources
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We also are autoloading various resources such as support for database access
    and session management. We need to specify that we're using these resources.
  prefs: []
  type: TYPE_NORMAL
- en: 'Open the `autoload.php` file from `/path/to/codeigniter/application/config/`
    in your text editor and find the following line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'Replace this line with the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: This will ensure that the resources that are required in order to access the
    database and to manage sessions are always with us.
  prefs: []
  type: TYPE_NORMAL
- en: Security considerations
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Whatever you are programming, your two main priorities are security and maintainability;
    this is to say that your application should be as secure as is necessary and should
    be written in such a way that someone else can easily program and extend on what
    you're doing. I can't discuss maintainability—that's up to you—but I can give
    you guidance on CodeIgniter and security.
  prefs: []
  type: TYPE_NORMAL
- en: However, I should say that no security is 100 percent foolproof. Even banks
    and security agencies that spend hundreds of millions on systems still get hacked,
    so what chance do we have? Well, the best we can do is try to reduce the opportunity
    that someone might do something that could compromise our code or database.
  prefs: []
  type: TYPE_NORMAL
- en: Moving the system folder
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You should move your system folder out of your web root. This is to make it
    as hard as possible for anything other than the web server to access. Take a look
    at the line in the main `index.php` file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'Make sure that you amend the preceding line to this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: So, if we moved the `system` folder out of the web root one level higher, we
    would use the`../` convention, prepending it to `system`.
  prefs: []
  type: TYPE_NORMAL
- en: Error messages
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Obviously you don't want to actually display error messages to the outside world.
    Over time, everyone will gain an understanding of the architecture of your site
    and where its weaknesses are, especially if you allow SQL errors to be displayed
    in a production environment.
  prefs: []
  type: TYPE_NORMAL
- en: For this reason, you should change the environment variable in the main `index.php`
    file from `development` to `production`. This will suppress the reporting errors;
    404 and 500 errors will still be caught and displayed normally but SQL errors
    and other similar errors will be suppressed.
  prefs: []
  type: TYPE_NORMAL
- en: 'For this, look at the following code in the `index.php` file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 'Look at the line in bold (the first line). This line has set CodeIgniter to
    run in development mode; to change to anything else (specifically, a live mode),
    change the line in bold to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: All errors will now be suppressed.
  prefs: []
  type: TYPE_NORMAL
- en: Query binding
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Query binding is a good idea; it makes your queries easier to read; queries
    that use the CodeIgniter binding are automatically escaped, leading to more secure
    queries. The syntax is simple; for example, consider the following query:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: 'Look at the end of the query; you can see that we use a question mark where
    we would normally use a variable; this is something that would normally look like
    this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 'How does CodeIgniter know what the question mark means, and how does CodeIgniter
    put the correct value in the query? Take a look at this second line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: This is how it matches the value to the correct question mark. We use the `$this->db->query()`CodeIgniter
    function, passing to it two arguments. The first is the `$query` variable (containing
    the actual query), and the second is an array. Each position in the array matches
    the position of the question marks in the SQL string.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now, you will discover that we are ready to start the book and are all set to
    tackle each chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Remember that the code for each chapter is available at the Packt website, as
    is the SQL for each chapter; this will save you from having to type in all this
    stuff.
  prefs: []
  type: TYPE_NORMAL
