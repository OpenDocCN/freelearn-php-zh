- en: Chapter 6. Models
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章 模型
- en: This chapter covers the CI models, their role, and their usage with several
    code examples of web applications. The model is responsible for handling the database
    it stores and retrieves database objects used by the application from a database
    and contains the logic implemented by the application.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖了CI模型、它们的作用以及它们在多个Web应用程序代码示例中的使用。该模型负责处理它存储和检索的数据库对象，并包含应用程序实现的逻辑。
- en: Much of the data that is part of the persistent state of the application (whether
    that persistent state is stored in files or databases) should reside in the model
    objects after the data is loaded into the application. Because the model objects
    represent knowledge and expertise related to a specific topic, they can be reused
    in the application.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 大部分数据都是应用程序持久状态的一部分（无论这种持久状态是存储在文件中还是数据库中），在数据加载到应用程序后应位于模型对象中。因为模型对象代表与特定主题相关的知识和专业知识，它们可以在应用程序中重复使用。
- en: 'The model represents the application data services and can serve the application
    logic (commonly referred to as business logic), as well. Usually, the model is
    responsible for the following operations:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 模型代表应用程序数据服务，也可以服务于应用程序逻辑（通常称为业务逻辑）。通常，模型负责以下操作：
- en: '**Adding, modifying, deleting, and searching the application database objects**:
    Generally, this includes the database operations, but implementing the same operations
    and invoking external web services or APIs is not unusual at all.'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**添加、修改、删除和搜索应用程序数据库对象**：通常，这包括数据库操作，但实现相同的操作并调用外部Web服务或API并不罕见。'
- en: '**Encapsulating the application logic**: For example, the model can make data
    validations before storing a data object and can alert the calling application
    module about the problem.'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**封装应用程序逻辑**：例如，模型可以在存储数据对象之前进行数据验证，并可以向调用应用程序模块报告问题。'
- en: The most common misuse of the CI database class is using it directly from the
    controller, view, or helper. A good practice is to develop the model classes to
    handle all the application database services.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: CI数据库类的最常见误用是直接从控制器、视图或辅助程序中使用它。一个好的做法是开发模型类来处理所有应用程序的数据库服务。
- en: Hence, all the other application modules can benefit, and reuse those models.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，所有其他应用程序模块都可以从中受益，并重用这些模型。
- en: The CI models are special classes designed to handle databases or external information
    resources, such as Facebook (we will see an example of this in this chapter).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: CI模型是专门设计来处理数据库或外部信息资源（如Facebook）的特殊类（我们将在本章中看到一个示例）。
- en: The CI models are the PHP classes that are designed to work with information
    in the database.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: CI模型是为与数据库中的信息一起工作而设计的PHP类。
- en: 'This chapter will primarily focus on the following topics:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将主要关注以下主题：
- en: 'The CI model scope:'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CI模型的作用范围：
- en: The model resource path
  id: totrans-12
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模型资源路径
- en: Loading a model
  id: totrans-13
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加载模型
- en: Using model methods
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用模型方法
- en: Connecting to a database
  id: totrans-15
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接到数据库
- en: Business logic
  id: totrans-16
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 业务逻辑
- en: Object Relational Mapping (ORM)
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对象关系映射（ORM）
- en: 'Example 1: a CRUD example'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 示例1：CRUD示例
- en: 'Example 2: a business logic example'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 示例2：业务逻辑示例
- en: 'Example 3: retrieving data from Facebook'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 示例3：从Facebook检索数据
- en: We will begin by briefly reviewing the CI model scope and will proceed with
    several usage examples, covering different use cases that are combined in a real
    project.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先简要回顾CI模型的作用范围，然后通过几个使用示例继续，涵盖在真实项目中结合的不同用例。
- en: Scope of the CI model
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CI模型的作用范围
- en: The CI model provides services for all the application modules to access the
    application database(s) or external information resources in an OOP fashion. Typically,
    the model classes will contain functions that help us retrieve, insert, and update
    information in the database.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: CI模型为所有应用程序模块提供了一种面向对象的方式，以访问应用程序数据库（或外部信息资源）。通常，模型类将包含帮助我们检索、插入和更新数据库中的信息的函数。
- en: This section will focus on the CI model syntax and usage guidelines, as a preface
    to the following usage code examples.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将专注于CI模型语法和用法指南，作为以下使用代码示例的序言。
- en: The model resource path
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模型资源路径
- en: The model files are located in the folder `application/models/`, in the pattern
    `application/models/<MODEL_NAME>.php`.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 模型文件位于文件夹`application/models/`中，遵循模式`application/models/<MODEL_NAME>.php`。
- en: Loading a model
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 加载模型
- en: Loading a model can be done automatically or via the controller. More specifically,
    it can be done in a certain controller's constructor or any controller's method.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 加载模型可以是自动的，也可以通过控制器完成。更具体地说，可以在特定控制器的构造函数或任何控制器方法中完成。
- en: If the model is used in a few of the controller's methods, it's recommended
    that you load the model in those methods. The scope of the model in that case
    is only in those methods project and will refer to `application/models/mymodel.php`.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果模型只在少数控制器方法中使用，建议在这些方法中加载模型。在这种情况下，模型的范围仅限于那些方法的项目，并将引用`application/models/mymodel.php`。
- en: If the model is used in most of the controller's methods, it's recommended that
    you load the model in the controller's constructor. In that case the scope of
    the model is in all the controller's methods project and will refer to `application/models/mymodel.php`.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果模型在大多数控制器方法中使用，建议在控制器构造函数中加载模型。在这种情况下，模型的范围是所有控制器方法的项目，并将引用`application/models/mymodel.php`。
- en: '[PRE0]'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: It automatically loads a model `mymodel` for all the CI projects.
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 它自动为所有CI项目加载模型`mymodel`。
- en: If the model is used in most of CI's project controllers, it is recommended
    that you autoload it in `application/config/autoload.php`. In that case the scope
    of the model is in all the CI project and will refer to `application/models/mymodel.php`.
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果模型在CI项目的大部分控制器中使用，建议在`application/config/autoload.php`中自动加载它。在这种情况下，模型的范围是所有CI项目，并将引用`application/models/mymodel.php`。
- en: '`$autoload[''model''] = array(''users'', ''mymodel'');`'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`$autoload[''model''] = array(''users'', ''mymodel'');`'
- en: Using model methods
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用模型方法
- en: Once the CI model is loaded, we will access the model functions using an object
    with the model name as our class. The model's method is called for performing
    database operations, such as retrieving, inserting, and updating data from the
    database.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦CI模型被加载，我们将使用以模型名称作为类的对象来访问模型函数。模型的函数被调用以执行数据库操作，例如从数据库检索、插入和更新数据。
- en: '[PRE1]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: For example, let's load the model `users` and access its function `get_users`.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，让我们加载模型`users`并访问其函数`get_users`。
- en: '[PRE2]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Connecting to a database
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 连接到数据库
- en: For more information, refer to [Chapter 2](ch02.html "Chapter 2. Configurations
    and Naming Conventions"), *Configurations and Naming Conventions*.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 更多信息，请参阅[第2章](ch02.html "第2章。配置和命名约定")，*配置和命名约定*。
- en: 'In this example, we will connect manually to a database. The following settings
    are done in `application/config/database.php`:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，我们将手动连接到数据库。以下设置在`application/config/database.php`中完成：
- en: '[PRE3]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Business logic
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 业务逻辑
- en: Business logic is a set of validation rules and decision criteria defined for
    a certain information object topic or database object.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 业务逻辑是为特定信息对象主题或数据库对象定义的一组验证规则和决策标准。
- en: The model can apply business logic to the database and information objects that
    it handles.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 模型可以对它处理的数据库和信息对象应用业务逻辑。
- en: In the case of a social network, the model layer would take care of tasks, such
    as saving user data, saving friend associations, storing and retrieving user photos,
    finding new friends for suggestions, and so on.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在社交网络的情况下，模型层将负责诸如保存用户数据、保存朋友关联、存储和检索用户照片、寻找新朋友以供推荐等任务。
- en: Object Relational Mapping (ORM)
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 对象关系映射 (ORM)
- en: While CI provides the model class for the developer to expand for object-oriented
    database **CRUD** (**Create, Read, Update, and Delete**) validation, and business
    logic for the defined project database, there's another option that enables automatic
    model services. In this section, we will discuss **Object Relational Mapping**
    (**ORM**). ORM is a new concept of converting the database scheme definition into
    an object-oriented database class API. It provides database CRUD services on a
    given database, so that the minimal code is required, instead of the full model
    development. More than that, the customized validation on the CRUD operation is
    enabled as well. Using an ORM plugin may reduce the need to self-develop our own
    CI models so that only special business logic activities are left to be implemented.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 当CI为开发者提供模型类以扩展面向对象的数据库**CRUD**（**创建、读取、更新和删除**）验证，并为定义的项目数据库提供业务逻辑时，还有一个选项可以启用自动模型服务。在本节中，我们将讨论**对象关系映射**（**ORM**）。ORM是将数据库模式定义转换为面向对象数据库类API的新概念。它为给定数据库提供数据库CRUD服务，因此所需的代码量最小，而不是完整的模型开发。更重要的是，还启用了对CRUD操作的定制验证。使用ORM插件可以减少我们自行开发CI模型的需求，这样只剩下特殊业务逻辑活动需要实现。
- en: Today, ORM plugins provide predefined validation services, as well as user-defined
    services to enforce validations on CRUD requests from the application controllers,
    libraries, or helpers requesting the database CRUD services.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 今天，ORM插件提供了预定义的验证服务，以及用户定义的服务，以强制执行来自请求数据库CRUD服务的应用程序控制器、库或助手中的CRUD请求的验证。
- en: There are pros and cons of using ORM. On one hand, it simplifies a lot of the
    database model development for the database. On there other hand, it dictates
    various rules on the database scheme definition, such as defining user tables
    for an ORM object user, or defining the auto-increment primary key field name,
    such as ID, and so on.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 使用ORM既有优点也有缺点。一方面，它大大简化了数据库模型开发。另一方面，它对数据库模式定义施加了各种规则，例如为ORM对象用户定义用户表，或者定义自动递增主键字段名，如ID等。
- en: 'There are several ORM plugins for CI; the most well-known and well-documented
    ones, with a large network of community developers, are the following:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: CI有几个ORM插件；最著名和最完善的，拥有庞大的社区开发者网络，如下所示：
- en: '**Doctrine ORM** ([docs.doctrine-project.org](http://docs.doctrine-project.org)):
    This ORM plugin with the well-documented CI integration guidelines is available
    at [http://docs.doctrine-project.org/en/2.0.x/cookbook/integrating-with-codeigniter.html](http://docs.doctrine-project.org/en/2.0.x/cookbook/integrating-with-codeigniter.html).'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Doctrine ORM** ([docs.doctrine-project.org](http://docs.doctrine-project.org)):
    此ORM插件具有良好的CI集成指南文档，可在[http://docs.doctrine-project.org/en/2.0.x/cookbook/integrating-with-codeigniter.html](http://docs.doctrine-project.org/en/2.0.x/cookbook/integrating-with-codeigniter.html)找到。'
- en: '**DataMapper CodeIgniter ORM library** ([datamapper.wanwizard.eu](http://datamapper.wanwizard.eu)):
    It provides the CI library, such as user guide web navigator.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**DataMapper CodeIgniter ORM库** ([datamapper.wanwizard.eu](http://datamapper.wanwizard.eu))：它提供了CI库，例如用户指南网络导航器。'
- en: Both ORM libraries provide more than just the table-based CRUD services, but
    can be configured to handle the cross-table relationships of the foreign key fields.
    They can support one-to-many, many-to-one, and many-to-many relationships, or
    even more complex relationships between multiple database tables.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这两个ORM库不仅提供基于表的CRUD服务，还可以配置以处理外键字段之间的跨表关系。它们可以支持一对一、一对多和多对多关系，甚至多个数据库表之间的更复杂关系。
- en: The ORM plugins also provide validation and manipulation services on the handled
    database fields, such as performing trimming on a string field before it is saved
    to the database.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: ORM插件还提供了对处理数据库字段进行验证和操作的服务，例如在将字符串字段保存到数据库之前对其进行修剪。
- en: Validation services include built-in validations such as valid e-mail fields,
    or a field that must have the same value as another field, such as fields with
    an account creation password retype requirement. The full scope and usage of ORM
    is beyond the scope of this CI book. However, it is highly recommended that you
    learn more about ORM and try using the referred ORM plugins and consider using
    them in your CI projects.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 验证服务包括内置验证，如有效的电子邮件字段，或者必须与另一个字段具有相同值的字段，例如具有账户创建密码重输要求的字段。ORM的完整范围和用法超出了本CI书籍的范围。然而，强烈建议您了解更多关于ORM的信息，并尝试使用所提到的ORM插件，并考虑在CI项目中使用它们。
- en: 'Of course, we do provide a simple usage example of adding a record to the database,
    and retrieving the database records using ORM in the following section:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，我们在下一节中提供了一个简单的使用示例，演示如何使用ORM向数据库添加记录，以及如何使用ORM检索数据库记录：
- en: ORM simple operations example
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ORM简单操作示例
- en: 'For example, let''s say we have a user database table with the ID as the primary
    key auto-increment. User name, e-mail, and password are the other fields, and
    if we want to add a new user record to the database, we could do so with the help
    of the following code:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，假设我们有一个以ID作为主键自动递增的用户数据库表。用户名、电子邮件和密码是其他字段，如果我们想向数据库添加一个新的用户记录，我们可以使用以下代码来完成：
- en: '[PRE4]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This is only a very simple usage example, while ORM today provides a rich set
    of CRUD and validation services. Please refer to the provided links to the featured
    ORM plugins for more information.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这只是一个非常简单的使用示例，而ORM今天提供了丰富的CRUD和验证服务。请参阅提供的ORM插件链接以获取更多信息。
- en: Example 1 – a CRUD example
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 示例1 – CRUD示例
- en: 'In this example, we will see how to use a CI model. For this example, we will
    use a model that performs these operations on the database: `SELECT`, `INSERT`,
    and `UPDATE`.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我们将看到如何使用CI模型。对于这个示例，我们将使用一个在数据库上执行以下操作的模型：`SELECT`、`INSERT`和`UPDATE`。
- en: The example displays, all the products that are retrieved by the model `productmodel`
    at the main page in the database.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 示例显示，在数据库主页中由模型`productmodel`检索的所有产品。
- en: Let us assume the URI to the project root is `http://mydomain.com/myproject`
    and `http://mydomain.com/myproject/product`.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 假设项目根URI为`http://mydomain.com/myproject`和`http://mydomain.com/myproject/product`。
- en: Note
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The source code is provided with this book via URLs.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 源代码通过URL提供。
- en: The main page has links for adding and editing a product. These links generate
    a form for editing and adding a product.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 主页有添加和编辑产品的链接。这些链接会生成用于编辑和添加产品的表单。
- en: Let us assume the URI to the project root is `http://mydomain.com/myproject`
    and `http://mydomain.com/myproject/product/add`.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 假设项目根URI为`http://mydomain.com/myproject`和`http://mydomain.com/myproject/product/add`。
- en: 'Suppose we want to edit and update the product with `product_id 1`, the link
    will be `http://mydomain.com/myproject/product/edit/1`. This example will be constructed
    from the following controller, model, and views:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们想编辑并更新`product_id 1`的产品，链接将是`http://mydomain.com/myproject/product/edit/1`。此示例将由以下控制器、模型和视图构建：
- en: '`application/controllers/product.php`: This controller loads the model product.'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`application/controllers/product.php`：此控制器加载模型product。'
- en: '[PRE5]'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This controller renders the following views:'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此控制器渲染以下视图：
- en: '`productsview`: This view displays all the products with links to editing and
    adding a product'
  id: totrans-75
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`productsview`：此视图显示所有产品，并提供编辑和添加产品的链接'
- en: '`productform`: This view contains the form for adding and editing a product'
  id: totrans-76
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`productform`：此视图包含添加和编辑产品的表单'
- en: '`application/models/productmodel.php`: This model contains functions that perform
    these operations on the database: `SELECT`, `INSERT`, and `UPDATE`.'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`application/models/productmodel.php`：此模型包含执行以下数据库操作的函数：`SELECT`、`INSERT`和`UPDATE`。'
- en: '`application/views/productsview.php`: The view that displays the products.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`application/views/productsview.php`：显示产品的视图。'
- en: '`application/views/productform.php`: The view that contains the form.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`application/views/productform.php`：包含表单的视图。'
- en: The controller file
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 控制器文件
- en: The controller PHP file is located at `application/controllers/product.php`.
    The controller handles the product's operations, such as adding, editing, updating,
    and displaying the product's table.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 控制器PHP文件位于`application/controllers/product.php`。控制器处理产品的操作，如添加、编辑、更新和显示产品表。
- en: The controller creates a form for adding and editing a product.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 控制器创建用于添加和编辑产品的表单。
- en: For more information refer to [Chapter 7](ch07.html "Chapter 7. Views"), *Views*.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 更多信息请参阅[第7章](ch07.html "第7章。视图")，*视图*。
- en: 'The following are the code and inline explanations:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 以下为代码和内联说明：
- en: '[PRE6]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The model file
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模型文件
- en: The model PHP file is located at `application/models/productmodel.php`.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 模型PHP文件位于`application/models/productmodel.php`。
- en: In this example, the methods of the CI object `db` are called for generating
    and executing the SQL queries.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，调用CI对象`db`的方法来生成和执行SQL查询。
- en: Please refer to the CI database library at [http://ellislab.com/codeigniter/user-guide/database/index.html](http://ellislab.com/codeigniter/user-guide/database/index.html).
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅CI数据库库[http://ellislab.com/codeigniter/user-guide/database/index.html](http://ellislab.com/codeigniter/user-guide/database/index.html)。
- en: 'The following are the code and inline explanations:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 以下为代码和内联说明：
- en: '[PRE7]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The view file
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 视图文件
- en: The view PHP file is located at `application/views/productsview.php`.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 视图PHP文件位于`application/views/productsview.php`。
- en: 'This view file displays a table with the products list. The following are the
    code and inline explanations:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 此视图文件显示包含产品列表的表格。以下为代码和内联说明：
- en: '[PRE8]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Example 2 – a business logic example
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 示例2 - 业务逻辑示例
- en: In this example, we will demonstrate business logic. Ordering a product will
    trigger the model to update the product's quantity and check whether it's smaller
    than a certain amount.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，我们将演示业务逻辑。订购产品将触发模型更新产品的数量并检查是否小于某个数量。
- en: 'This example will be constructed from the following controllers, model, and
    view:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 此示例将由以下控制器、模型和视图构建：
- en: '`application/controllers/order.php`: This controller loads the model `productmodel`'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`application/controllers/order.php`：此控制器加载模型`productmodel`'
- en: '`$this->load->model('' productmodel'')`: This controller renders the view `orderview`,
    which displays all the products, and where each product has links to ordering
    a product'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`$this->load->model(''productmodel'')`：此控制器渲染视图`orderview`，显示所有产品，并且每个产品都有订购产品的链接'
- en: '`application/models/productmodel.php`: This model contains functions, which
    retrieve products, updates its quantity, and checks its quantity'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`application/models/productmodel.php`: 此模型包含检索产品、更新其数量和检查其数量的函数'
- en: '`application/views/ orderview.php`: The view displays all the products in a
    table, where each row has a link for ordering the product'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`application/views/orderview.php`: 视图以表格形式显示所有产品，其中每行都有一个订购产品的链接'
- en: Let us assume the URI to the project root is `http://mydomain.com/myproject`
    and `http://mydomain.com/myproject/order`.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 假设项目根目录的URI为 `http://mydomain.com/myproject` 和 `http://mydomain.com/myproject/order`。
- en: Note
  id: totrans-104
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The source code is provided with this book via URLs.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 代码源文件通过URL提供。
- en: The controller file
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 控制器文件
- en: The controller PHP file is located at `application/controllers/order.php`.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 控制器PHP文件位于 `application/controllers/order.php`。
- en: This controller is responsible for displaying the products and updates each
    product. If the product's quantity reaches a limit, it generates an error message.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 此控制器负责显示产品并更新每个产品。如果产品的数量达到限制，它将生成错误消息。
- en: 'The code and inline explanations are as follows:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 代码和内联说明如下：
- en: '[PRE9]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The model file
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模型文件
- en: The model PHP file is located at `application/models/productmodel.php`.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 模型PHP文件位于 `application/models/productmodel.php`。
- en: In this example, the methods of the CI object `db` are called for generating
    and executing the SQL queries.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，调用CI对象 `db` 的方法来生成和执行SQL查询。
- en: Please refer to the CI database's library available at [http://ellislab.com/codeigniter/user-guide/database/index.html](http://ellislab.com/codeigniter/user-guide/database/index.html).
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅CI数据库库，可在[http://ellislab.com/codeigniter/user-guide/database/index.html](http://ellislab.com/codeigniter/user-guide/database/index.html)找到。
- en: 'The code and inline explanations are as follows:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 代码和内联说明如下：
- en: '[PRE10]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The view file
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 视图文件
- en: The PHP view file is located at `application/views/orderview.php`. This view
    file displays a table with the products list.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: PHP视图文件位于 `application/views/orderview.php`。此视图文件显示一个包含产品列表的表格。
- en: 'The following are the code and inline explanations:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 以下为代码和内联说明：
- en: '[PRE11]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Example 3 – retrieving data from Facebook
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 示例 3 – 从Facebook获取数据
- en: In this example, we will use the CI built-in model to retrieve data from Facebook.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，我们将使用CI内置模型从Facebook获取数据。
- en: The example displays a Facebook user name and picture and displays the user's
    Facebook friends.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 此示例将显示Facebook用户名和图片，并显示用户的Facebook朋友。
- en: This example uses Facebook PHP SDK as a CI library. It can be downloaded from
    [https://github.com/facebook/php-sdk](https://github.com/facebook/php-sdk). For
    more information, refer to [Chapter 4](ch04.html "Chapter 4. Libraries"), *Libraries*.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 此示例使用Facebook PHP SDK作为CI库。可以从[https://github.com/facebook/php-sdk](https://github.com/facebook/php-sdk)下载。更多信息，请参阅[第4章](ch04.html
    "第4章。库")，*库*。
- en: 'This example will be constructed from the following controllers, model, and
    view:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 此示例将由以下控制器、模型和视图构建：
- en: '`application/controllers/fbpage.php`: This controller loads the model `fbmodel`'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`application/controllers/fbpage.php`: 此控制器加载模型 `fbmodel`'
- en: '`$this->load->model(''fbmodel'')`: This controller renders the view `fbview`,
    which displays the user''s Facebook picture and name, and table, which contains
    the user''s friends'' names and links to their profiles'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`$this->load->model(''fbmodel'')`: 此控制器渲染视图 `fbview`，显示用户的Facebook图片和姓名，以及包含用户朋友姓名和其个人资料链接的表格'
- en: '`application/models/fbmodel.php`: This model contains functions that retrieve
    data from Facebook'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`application/models/fbmodel.php`: 此模型包含从Facebook检索数据的函数'
- en: '`application/views/fbview.php`: This view displays Facebook data'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`application/views/fbview.php`: 此视图显示Facebook数据'
- en: Let us assume the URI to the project root is `http://mydomain.com/myproject`
    and `http://mydomain.com/myproject/fbpage`.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 假设项目根目录的URI为 `http://mydomain.com/myproject` 和 `http://mydomain.com/myproject/fbpage`。
- en: Note
  id: totrans-131
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The source code is provided with this book via URLs.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 代码源文件通过URL提供。
- en: The controller file
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 控制器文件
- en: The controller PHP file is located at `application/controllers/fbpage.php`.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 控制器PHP文件位于 `application/controllers/fbpage.php`。
- en: The controller is responsible for getting the access token from Facebook and
    redirecting the Facebook user to the Facebook login page to confirm the Facebook
    app's permission.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 控制器负责从Facebook获取访问令牌，并将Facebook用户重定向到Facebook登录页面以确认Facebook应用的权限。
- en: The controller is also responsible for getting the Facebook user's details and
    friends via the model and rendering the view page accordingly.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 控制器还负责通过模型获取Facebook用户的详细信息和朋友，并相应地渲染视图页面。
- en: For more information about Facebook API usage and development, please refer
    to the Facebook developer page available at [http://developers.facebook.com/](http://developers.facebook.com/).
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 如需了解更多关于Facebook API使用和开发的信息，请参阅位于[http://developers.facebook.com/](http://developers.facebook.com/)的Facebook开发者页面。
- en: 'The following are the code and inline explanations:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 以下为代码和内联解释：
- en: '[PRE12]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The model file
  id: totrans-140
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模型文件
- en: The model PHP file is located at `application/models/fbmodel.php`.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 模型PHP文件位于`application/models/fbmodel.php`。
- en: The model is responsible for interacting with the Facebook SDK and retrieving
    the Facebook user's details and friend lists. The model uses the Facebook FQL
    mechanism.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 模型负责与Facebook SDK交互，并检索Facebook用户的详细信息和朋友列表。该模型使用Facebook FQL机制。
- en: For more information about Facebook API usage and development, please refer
    to the Facebook developer page available at [http://developers.facebook.com/](http://developers.facebook.com/).
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 如需了解更多关于Facebook API使用和开发的信息，请参阅位于[http://developers.facebook.com/](http://developers.facebook.com/)的Facebook开发者页面。
- en: 'The code and inline explanations are as follows:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 代码和内联解释如下：
- en: '[PRE13]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The view file
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 视图文件
- en: The view PHP file is located at `application/views/fbview.php`.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 视图PHP文件位于`application/views/fbview.php`。
- en: This view file displays a Facebook user's details and a table with their friend
    details.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 此视图文件显示了一个Facebook用户的详细信息以及他们的朋友详情表格。
- en: 'The code and inline explanations are as follows:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 代码和内联解释如下：
- en: '[PRE14]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Summary
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: 'In this chapter, we have reviewed the CI model scope, business logic, and ORM.
    We have made the following examples in this chapter:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们回顾了CodeIgniter模型的作用域、业务逻辑和ORM。在本章中，我们制作了以下示例：
- en: 'Example 1: a CRUD example'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 示例1：一个CRUD示例
- en: 'Example 2: a business logic example'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 示例2：一个业务逻辑示例
- en: 'Example 3: retrieving data from Facebook'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 示例3：从Facebook检索数据
