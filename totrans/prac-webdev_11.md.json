["```php\nMongoDB shell version: 2.6.6\nconnecting to: test\n>\n\n```", "```php\n> prompt=\"mongoDB \"\nmongoDB\n\n```", "```php\nmongoDB   use california\n\n```", "```php\nmongoDB db.people.insert( {\n \"name\":\"Adams\",\n \"first\":\"Ansel\",\n \"profession\":\"photographer\",\n \"born\":\"San Francisco\"\n });\n\n```", "```php\nmongoDB db.people.find()\n\n{ \"_id\" : ObjectId(\"54ad4336227ad31227c3902d\"), \"name\" : \"Adams\", \"first\" : \"Ansel\", \"profession\" : \"photographer\", \"born\" : \"San Francisco\" }\n\n```", "```php\nmongoDB show dbs\n...\ncalifornia\n...\nmongoDB show collections\n...\npeople\n...\n\n```", "```php\nmongoDB db.people.findOne()\n{\n \"_id\" : ObjectId(\"54ad4336227ad31227c3902d\"),\n \"name\" : \"Adams\",\n \"first\" : \"Ansel\",\n \"profession\" : \"photographer\",\n \"born\" : \"San Francisco\"\n}\n\n```", "```php\nmongoDB db.people.findOne({\"first\" : \"Ansel\"})\n\n```", "```php\ndb.people.insert({\n    \"name\":\"Adams\",\n     \"first\":\"Ansel\",\n     \"profession\":\"photographer\",\n     \"born\":\"San Francisco\"\n\n  });\n\ndb.people.insert({  \"name\":\"Muir\",\n     \"first\":\"John\",\n     \"profession\":\"naturalist\",\n     \"born\":\"Scotland\"\n\n  });\ndb.people.insert(   {\n    \"name\":\"Schwarzenegger\",\n     \"first\":\"Arnold\",\n     \"profession\":\"governator\",\n     \"born\":\"Germany\"\n\n  });\ndb.people.insert( {\n    \"name\":\"Rowell\",\n     \"first\":\"Galen\",\n     \"profession\":\"photographer\",\n     \"born\":\"Oakland CA\"\n\n  });\ndb.people.insert(   {\n    \"name\":\"Wellens\",\n     \"first\":\"Paul\",\n     \"profession\":\"author\",\n     \"born\":\"Belgium\"\n\n  });\n```", "```php\nmongoDB      load(\"californiapeople.js\")\n\n```", "```php\nmongoDB db.people.find()\n\n```", "```php\n{ \"_id\" : ObjectId(\"54ad4336227ad31227c3902d\"), \"name\" : \"Adams\", \"first\" : \"Ansel\", \"profession\" : \"photographer\", \"born\" : \"San Francisco\" }\n{ \"_id\" : ObjectId(\"54ad46f6812ce43efb530a07\"), \"name\" : \"Adams\", \"first\" : \"Ansel\", \"profession\" : \"photographer\", \"born\" : \"San Francisco\" }\n{ \"_id\" : ObjectId(\"54ad46f6812ce43efb530a08\"), \"name\" : \"Muir\", \"first\" : \"John\", \"profession\" : \"naturalist\", \"born\" : \"Scotland\" }\n{ \"_id\" : ObjectId(\"54ad46f6812ce43efb530a09\"), \"name\" : \"Schwarzenegger\", \"first\" : \"Arnold\", \"profession\" : \"governator\", \"born\" : \"Germany\" }\n{ \"_id\" : ObjectId(\"54ad46f6812ce43efb530a0a\"), \"name\" : \"Rowell\", \"first\" : \"Galen\", \"profession\" : \"photographer\", \"born\" : \"Oakland CA\" }\n{ \"_id\" : ObjectId(\"54ad46f6812ce43efb530a0b\"), \"name\" : \"Wellens\", \"first\" : \"Paul\", \"profession\" : \"author\", \"born\" : \"Belgium\" }\n\n```", "```php\nmongoDB db.people.remove( { \"_id\" : ObjectId(\"54ad46f6812ce43efb530a07\" )} )\n\n```", "```php\ndb.people.update ({\"name\" : \"Rowell\"}, { \"$set\": {\"died\" : \"Bishop\"}})\n\n```", "```php\nmongoDB db.people.findOne({\"name\" : \"Rowell\"})\n{\n \"_id\" : ObjectId(\"54ad46f6812ce43efb530a0a\"),\n \"name\" : \"Rowell\",\n \"first\" : \"Galen\",\n \"profession\" : \"photographer\",\n \"born\" : \"Oakland CA\",\n \"died\" : \"Bishop\"\n}\n\n```", "```php\n{ \"today\" : new Date() }\n\n```", "```php\n\"today\" : ISODate(\"2015-01-14T08:37:17.086Z\")\n\n```", "```php\n{ \"key\" : { \"name\":\"Schwarzenegger\",\"first\":\"Arnold\",\n\"profession\":\"governator\" } }\n\n```", "```php\ndb.junelake.insert ({\n  \"photocollection\": {\n    \"title\": \"June Lake\",\n    \"overview\": \"The June Lake Loop begins  ...\",\n    \"photo\": [\n      {\n        \"scaption\": \"June Lake in the Fall\",\n        \"caption\": \"June Lake and Carson Peak in the fall\",\n        \"story\": \"Each time that unfortunate day  ...\",\n        \"smallimg\": \"imagessmall/junelakefall.jpg\",\n        \"largeimg\": \"imagespng/junelakeinthefall.png\"\n      },\n      {\n        \"scaption\": \"Aspen by Silver Lake\",\n        \"caption\": \"Aspen trees by Silver Lake\",\n        \"story\": \"In 1998, I hit the right week of the ...\",\n        \"smallimg\": \"imagessmall/silverlakeaspenfall98.jpg\",\n        \"largeimg\": \"imagespng/silverlakeaspenfall98.png\"\n      },\n      {\n        \"scaption\": \"Gull Lake in the Fall\",\n        \"caption\": \"Gull Lake in the Fall - Happy fishermen !\",\n        \"story\": \"If you take the north shore road around ...\",\n        \"smallimg\": \"imagessmall/gulllake648.jpg\",\n        \"largeimg\": \"imageslarge/gulllake648.jpg\"\n      },\n      {\n        \"scaption\": \"Silver Lake\",\n        \"caption\": \"Silver Lake - June Lake Loop\",\n        \"story\": \"Any time of the year, there ...\",\n        \"smallimg\": \"imagessmall/silver2.jpg\",\n        \"largeimg\": \"imagespng/silver2.png\"\n      }\n    ]\n  }\n});\n```", "```php\nvar json = db.junelake.findOne()\n\nprint (json.photocollection.title)\nJune Lake\n```", "```php\nfor (var i in json.photocollection.photo) {\nprint(json.photocollection.photo[i].scaption) }\nThis will produce the following output:\nJune Lake in the Fall\nAspen by Silver Lake\nGull Lake in the Fall\nSilver Lake\n```", "```php\n<?php\n $connection = new Mongo();\n $db = $connection->gallery;\n $junelake = $db->junelake;\n $gallery = $junelake->findone();\n $jsongallery =  json_encode($gallery);\n echo $jsongallery;\n?>\n```", "```php\n<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\" />\n<title>June Lake Gallery</title>\n<link href=\"styles/practical.css\" rel=\"stylesheet\" type=\"text/css\" media=\"screen\"/>\n</head>\n<script src=\"img/jquery-1.10.1.js\"></script>\n<body>\n<div id=\"mysite\">\n</div>\n</body>\n</html>\n<script src=\"img/practicalmongo.js\"></script>\n```", "```php\n$(document).ready (function () {\n$.post( \"mongogallery.php\", function( json ) {\n\nvar html = '<div id=\"overview\"><h1>' + json.photocollection.title + '</h1>';\nhtml += '<p>' + json.photocollection.overview + '</p></div>';\nhtml += '<div id=\"gallery\">';\n\nfor (var i in json.photocollection.photo)\n{\nhtml += '<div class=\"storybook\"><div class=\"smallmat\"><div class=\"simage\"><a href=\"';\nvar scaption = json.photocollection.photo[i].scaption;\nvar caption = json.photocollection.photo[i].caption;\nvar largeimg = json.photocollection.photo[i].largeimg;\nvar smallimg = json.photocollection.photo[i].smallimg;\nvar story = json.photocollection.photo[i].story;\nhtml += largeimg;\nhtml += '\"><img class=\"sphoto\" src=\"';\nhtml += smallimg;\nhtml += '\" title=\"';\nhtml +=  caption;\nhtml += '\"></img></a></div><div class=\"scaption\">';\nhtml +=  scaption;\nhtml += '</div></div><div class=\"story\">';\nhtml +=  story;\nhtml +=  '</div></div>';\n}\nhtml += '</div>';\n$('#mysite').html(html);\n}, \"json\");\n});\n```", "```php\n<?php\n $connection = new Mongo();\n $db = $connection->california;\n $people = $db->people;\n $californiadude = array(\n'first' => 'Harry', 'name' => 'Perry', 'address' => 'Boardwalk', 'city' => 'Venice', 'state' => 'CA','zip' => '90291', 'song' => 'Invaders from another Planet'\n);\n$people->insert($californiadude);\n?>\n```", "```php\n$people->update(array('name' => 'Perry'),\narray('$set' => array('vehicle' => 'rollerblades')));\n```", "```php\n$result = $people->findone(array('name' => 'Perry'));\nprint_r($result);  // in case we want to check our insert was succesful.\n```", "```php\n$result = $people->findone(array('first' => 'John' , 'age' => array ( '$gt' => 50)));\n// look for all people named John that are over 50\\. This is just an example. Nothing will\n// be returned.\n```", "```php\n<?php\n $connection = new Mongo();\n $db = $connection->california;\n $people = $db->people;\n$cursor = $people->find();\nforeach ($cursor as $document)\n{\n    echo $document['name'];  // we could do more of course\n}\n?>\n```", "```php\nSELECT first, last FROM people WHERE age > 50 LIMIT 10;\n\n```", "```php\n$cursor =          // the variable that will contain the cursor we can iterate through\n$people->find(  // our collection, equivalent to a table\narray('age' => array ('$gt '=> 50 ),  // criteria for our query\narray ('name' => 1, 'first' => 1, '_id' => 0 ))\n // MongoDB calls this a projection:  which fields we want\n)->limit(10);                         // cursor modifier\n```"]