- en: Chapter 9. Creating a Job Board
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9章。创建职位发布板
- en: There are some quite complex job boards out there and some that are woefully
    designed. There are some that I can think of that simply don't work as you would
    think they should and some that don't function properly at all. I'm sure they
    all have a heap of VC funding and probably turn some sort of profit, so it is
    beyond me why they don't manage to get it together and make something that actually
    works; the thing is that it's not actually that difficult a thing to do.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 现在有一些相当复杂的职位发布板，也有一些设计得非常糟糕。有些我想到的甚至根本不能像你想象的那样工作，有些则完全不能正常工作。我相信它们都有大量的风险投资资金，可能还赚了一些利润，所以我真不明白为什么它们不能齐心协力，做出真正能工作的事情；实际上，这并不是一件特别困难的事情。
- en: The job board in this project is small and concise, but there is scope to expand
    upon—if you skip ahead to the *Summary* section, you'll see some things you can
    add to make it more feature-rich, but I'm sure you have your own.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中的职位发布板虽然小而简洁，但仍有扩展的空间——如果你跳到*总结*部分，你会看到一些你可以添加的功能，使其更加丰富，但我相信你也有自己的想法。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Design and wireframes
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设计和线框图
- en: Creating the database
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建数据库
- en: Creating the model
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建模型
- en: Creating views
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建视图
- en: Creating the controller
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建控制器
- en: Putting it all together
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 整合一切
- en: Introduction
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: So what are we going to do for this project anyway? We'll create an application
    that allows users to create job adverts that will be displayed on a "board". Users
    can search for specific terms and some results will be returned.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 那么我们这个项目到底要做什么呢？我们将创建一个应用程序，允许用户创建将在“板”上显示的职位广告。用户可以搜索特定术语，并将返回一些结果。
- en: Other users can create adverts that will be displayed in these boards.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 其他用户可以创建将在这些板上显示的广告。
- en: To create this app, we will create one controller; this will handle the display
    of jobs, creation of new jobs, and applying for jobs.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 为了创建这个应用程序，我们将创建一个控制器；这将处理职位的显示、新职位的创建以及申请职位。
- en: We'll create a language file to store text, allowing you to have multiple language
    support should that be required.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将创建一个语言文件来存储文本，以便在需要时提供多语言支持。
- en: We'll create all the necessary view files and a model to interface with the
    database.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将创建所有必要的视图文件和一个与数据库交互的模型。
- en: However, this app along with all the others in this book relies on the basic
    setup we did in [Chapter 1](ch01.html "Chapter 1. Introduction and Shared Project
    Resources"), *Introduction and Shared Project Resources*; although you can take
    large sections of the code and drop it into pretty much any app you might already
    have, please keep in mind that the setup done in the first chapter acts as a foundation
    for this chapter.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这个应用程序以及本书中的其他应用程序都依赖于我们在[第1章](ch01.html "第1章。简介和共享项目资源")中完成的基本设置，*简介和共享项目资源*；尽管你可以将大量代码提取出来并放入你几乎已经拥有的任何应用程序中，但请记住，第一章中完成的基本设置是这个章节的基础。
- en: So without further ado, let's get on with it.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们不再拖延，让我们开始吧。
- en: Design and wireframes
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设计和线框图
- en: As always, before we start building, we should take a look at what we plan to
    build.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 和往常一样，在我们开始构建之前，我们应该看看我们打算构建什么。
- en: 'Firstly, a brief description of our intent: we plan to build an app that will
    allow people to browse job adverts in the form of a job board.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，简要描述我们的意图：我们计划构建一个应用程序，让人们能够以职位发布板的形式浏览职位广告。
- en: People will be able to create job adverts that will appear on search listings.
    Others will be allowed to apply for these advertised jobs, and applications are
    sent in an e-mail to the advertiser with details of the job and applicant.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 人们将能够创建将在搜索列表中出现的职位广告。其他人将被允许申请这些广告中的职位，申请将连同工作详情和申请者信息以电子邮件的形式发送给广告商。
- en: 'Anyway, to get a better idea of what''s happening, let''s take a look at the
    following site map:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，为了更好地了解正在发生的事情，让我们看一下以下网站地图：
- en: '![Design and wireframes](img/7093OS_09_04.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![设计和线框图](img/7093OS_09_04.jpg)'
- en: 'So that was the site map; the first thing to notice is how simple the site
    is. There are only three main areas to this project. Let''s go over each item
    and get a brief idea of what it does:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 所以这就是网站地图；首先要注意的是网站有多简单。这个项目只有三个主要区域。让我们逐一了解每个项目，并简要了解它们的功能：
- en: '**Jobs/Search**: Imagine this as the start point. The user is presented with
    a list of active jobs available on the site. The user is able to view the job
    details and apply (taking them to point **2** of the site map), or click on **Create**
    on the navigation bar and go to point **3** (the Create item) of the site map.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Jobs/Search**: 想象这是一个起点。用户将看到网站上可用的活跃职位的列表。用户可以查看职位详情并申请（带他们到网站地图的**2**点），或者点击导航栏上的**创建**并转到网站地图的**3**点（创建项）。'
- en: '**Detail/Apply**: The user is presented with the details of the job advertised,
    such as the start date, location and the job description, and advertiser''s contact
    details. There is also a form below the job details that allows a user to apply
    for the job. Details of the application are sent in an e-mail to the job advertiser
    (`jobs.job_advertiser_email`).'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Detail/Apply**: 用户将看到招聘广告的详细信息，例如开始日期、地点和工作描述，以及广告商的联系方式。在职位详情下方还有一个表单，允许用户申请该职位。申请的详细信息将通过电子邮件发送给招聘广告商（`jobs.job_advertiser_email`）。'
- en: '**Create**: This will display a form to the user, allowing them to create a
    job advert. Once that advert is created, it will be displayed in search listings.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Create**: 这将向用户显示一个表单，允许他们创建一个招聘广告。一旦广告创建，它将在搜索列表中显示。'
- en: Now that we have a fairly good idea of the structure and form of the site, let's
    take a look at some wireframes of each page.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们对网站的结构和形式有了相当好的了解，让我们来看看每个页面的线框图。
- en: Job/Search
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Job/Search
- en: The following screenshot shows you a wireframe from point **1** (the Create
    item) in the site map. Initially, the user is shown a list of current jobs. The
    job title and description are shown. The description is kept at a set length—that
    of the first 50 words of a job description. They are able to click on the job
    title or an **Apply** link to go to point **2** (the Detail/Apply item) of the
    site map.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了网站地图中**1**点（Create项）的线框图。最初，用户会看到一个当前职位的列表。显示职位标题和描述。描述保持固定长度——即职位描述的前50个单词。他们可以点击职位标题或**申请**链接，转到网站地图的**2**点（Detail/Apply项）。
- en: '![Job/Search](img/7093OS_09_01.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![Job/Search](img/7093OS_09_01.jpg)'
- en: Detail/Apply
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Detail/Apply
- en: The following screenshot shows you a wireframe from point **2** (the Detail/Apply
    item) in the site map. The user views the detailed description of the job advertised
    and a form that enables the user to enter their details and send off an application
    for the job—the details of this application are e-mailed to the job advertiser.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了网站地图中**2**点（Detail/Apply项）的线框图。用户可以看到招聘广告的详细描述和一个允许用户输入他们的详细信息并发送职位申请的表单——这个申请的详细信息将通过电子邮件发送给招聘广告商。
- en: '![Detail/Apply](img/7093OS_09_03.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![Detail/Apply](img/7093OS_09_03.jpg)'
- en: Create
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Create
- en: The following screenshot shows you a wireframe from point **3** (the Create
    item) of the site map. Any user can post a job advert. This displays a form to
    the user, allowing them to enter the details of their job advert and save it to
    the database.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了网站地图中**3**点（Create项）的线框图。任何用户都可以发布招聘广告。这向用户显示一个表单，允许他们输入他们的招聘广告详情并将其保存到数据库中。
- en: '![Create](img/7093OS_09_02.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![Create](img/7093OS_09_02.jpg)'
- en: File overview
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文件概述
- en: 'This is a relatively small project, and all-in-all, we''re only going to create
    seven files; these are as follows:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个相对较小的项目，总的来说，我们只需要创建七个文件；这些文件如下：
- en: '`/path/to/codeigniter/application/models/jobs_model.php`: This provides read/write
    access to the `jobs` database table.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/path/to/codeigniter/application/models/jobs_model.php`: 这提供了对`jobs`数据库表的读写访问。'
- en: '`/path/to/codeigniter/application/views/jobs/apply.php`: This provides us an
    interface that allows the user to view a job advert''s details and also a form
    that allows any user to apply for a job.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/path/to/codeigniter/application/views/jobs/apply.php`: 这为我们提供了一个界面，允许用户查看招聘广告的详细信息，以及一个允许任何用户申请职位的表单。'
- en: '`/path/to/codeigniter/application/views/jobs/create.php`: This displays a form
    to the user, allowing the user to create a job advert.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/path/to/codeigniter/application/views/jobs/create.php`: 这向用户显示一个表单，允许他们创建一个招聘广告。'
- en: '`/path/to/codeigniter/application/views/jobs/view.php`: This is the view for
    the `jobs` controller''s `index()` function. It displays the search form and lists
    any results.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/path/to/codeigniter/application/views/jobs/view.php`: 这是`jobs`控制器`index()`函数的视图。它显示搜索表单并列出任何结果。'
- en: '`/path/to/codeigniter/application/views/nav/top_nav.php`: This provides a navigation
    bar at the top of the page.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/path/to/codeigniter/application/views/nav/top_nav.php`: 这在页面顶部提供了一个导航栏。'
- en: '`/path/to/codeigniter/application/controllers/jobs.php`: This contains three
    main functions: `index()`, `apply()` and `create()`.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/path/to/codeigniter/application/controllers/jobs.php`：这包含三个主要函数：`index()`、`apply()`和`create()`。'
- en: '`/path/to/codeigniter/application/language/english/en_admin_lang.php`: This
    provides language support for the application.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/path/to/codeigniter/application/language/english/en_admin_lang.php`：这为应用程序提供语言支持。'
- en: 'The file structure of the preceding seven files is as follows:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 前面七个文件的结构如下：
- en: '[PRE0]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Creating the database
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建数据库
- en: Okay, you should have already set up CodeIgniter and Bootstrap as described
    in [Chapter 1](ch01.html "Chapter 1. Introduction and Shared Project Resources"),
    *Introduction and Shared Project Resources*; if not, then you should know that
    the code in this chapter is specifically built with the setup from [Chapter 1](ch01.html
    "Chapter 1. Introduction and Shared Project Resources"), *Introduction and Shared
    Project Resources*, in mind. However, it's not the end of the world if you haven't—the
    code can easily be applied to other situations.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，你应该已经按照[第1章](ch01.html "第1章。简介和共享项目资源")中描述的方式设置了CodeIgniter和Bootstrap；如果没有，那么你应该知道本章中的代码是专门针对[第1章](ch01.html
    "第1章。简介和共享项目资源")中的设置编写的。但是，如果你没有这样做，也没有关系——代码可以轻松地应用于其他情况。
- en: 'First, we''ll build the database. Copy the following MySQL code to your database:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将构建数据库。将以下MySQL代码复制到你的数据库中：
- en: '[PRE1]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Tip
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Now, take a look at that last bit of SQL code, it's quite big and fiddly. Don't
    panic, all SQL code is available online from this book's support page on the Packt
    website.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，看看最后那段SQL代码，它相当大且复杂。别慌，所有SQL代码都可以在Packt网站上的本书支持页面上找到。
- en: You'll see that the first table we create is `ci_sessions`. We need this to
    allow CodeIgniter to manage sessions, specifically, logged-in users. However,
    this is just the standard session table available from *CodeIgniter User Guide*,
    so I'll not include a description of that table as it's not technically specific
    to this application. However, if you're interested, there's a description at [http://ellislab.com/codeigniter/user-guide/libraries/sessions.html](http://ellislab.com/codeigniter/user-guide/libraries/sessions.html).
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 你会看到我们创建的第一个表是`ci_sessions`。我们需要这个表来允许CodeIgniter管理会话，特别是登录用户。然而，这只是从*CodeIgniter用户指南*中可用的标准会话表，因此我不会包括该表的描述，因为它不是技术特定于这个应用程序的。但是，如果你感兴趣，可以在[http://ellislab.com/codeigniter/user-guide/libraries/sessions.html](http://ellislab.com/codeigniter/user-guide/libraries/sessions.html)找到描述。
- en: 'Right, let''s take a look at each item in each table, and see what it means.
    First, we will take a look at the `categories` table:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，让我们逐个查看每个表中的每个条目，看看它们代表什么。首先，我们将查看`categories`表：
- en: '| Table: categories |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| 表：categories |'
- en: '| --- |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| --- |'
- en: '| **Element** | **Description** |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| **元素** | **描述** |'
- en: '| `cat_id` | This is the primary key. |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| `cat_id` | 这是主键。 |'
- en: '| `cat_name` | This stores the name of the category. |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| `cat_name` | 这存储类别的名称。 |'
- en: 'Next up, we will see the `types` table:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将查看`types`表：
- en: '| Table: types |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| 表：types |'
- en: '| --- |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| --- |'
- en: '| **Element** | **Description** |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| **元素** | **描述** |'
- en: '| `type_id` | This is the primary key. |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| `type_id` | 这是主键。 |'
- en: '| `type_name` | This stores the name of the type. |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| `type_name` | 这存储类型的名称。 |'
- en: 'Now, let''s see the `locations` table:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看`locations`表：
- en: '| Table: locations |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| 表：locations |'
- en: '| --- |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| --- |'
- en: '| **Element** | **Description** |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| **元素** | **描述** |'
- en: '| `loc_id` | This is the primary key. |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| `loc_id` | 这是主键。 |'
- en: '| `loc_name` | This stores the name of the location. |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| `loc_name` | 这存储位置的名称。 |'
- en: 'Finally, we will see the `jobs` table:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将查看`jobs`表：
- en: '| Table: jobs |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| 表：jobs |'
- en: '| --- |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| --- |'
- en: '| **Element** | **Description** |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| **元素** | **描述** |'
- en: '| `job_id` | This is the primary key. |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| `job_id` | 这是主键。 |'
- en: '| `job_title` | This is the title of the position advertised. |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| `job_title` | 这是广告中职位标题。 |'
- en: '| `job_desc` | This is the general job specification for the position advertised.
    |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| `job_desc` | 这是广告中职位的通用职位说明。 |'
- en: '| `cat_id` | This is foreign key from the `categories` table, indicating the
    category of the position—IT, Management, Manufacturing, Health Care, and so on
    |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| `cat_id` | 这是来自`categories`表的外键，表示职位的类别——IT、管理、制造、医疗保健等 |'
- en: '| `type_id` | This is the foreign key from the `types` table, indicating the
    type of the position—full time, part time, contract, and so on |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| `type_id` | 这是来自`types`表的外键，表示职位的类型——全职、兼职、合同等 |'
- en: '| `loc_id` | This is the foreign key from the `locations` table, indicating
    the location that the position is to be based in. |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| `loc_id` | 这是来自`locations`表的键，表示职位所在的地点。|'
- en: '| `job_start_date` | This is the starting date of the position advertised.
    |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| `job_start_date` | 这是发布职位的起始日期。|'
- en: '| `job_rate` | This is the money offered (remuneration)—salary, day rate, and
    so on. |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| `job_rate` | 这是提供的金钱（报酬）——薪水、日薪等。|'
- en: '| `job_advertiser_name` | This is the name of the person advertising the position
    so that the applicant knows who to contact to chase their application. |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| `job_advertiser_name` | 这是发布职位的人的名字，以便申请者知道联系谁以跟进他们的申请。|'
- en: '| `job_advertiser_email` | This is the contact e-mail of the person who is
    advertising the position. It is to this e-mail address that an application is
    sent. The application is sent when a user fills in and submits the form in `views/jobs/apply.php`.
    |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| `job_advertiser_email` | 这是发布职位的人的联系方式电子邮件。申请是通过用户在`views/jobs/apply.php`中填写并提交表单时发送到这个电子邮件地址的。|'
- en: '| `job_advertiser_phone` | This is the phone number of the person advertising
    the position. This is included if the applicant wishes to call the job advertiser.
    |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| `job_advertiser_phone` | 这是发布职位的人的电话号码。如果申请者希望联系发布职位的人，则包括此项。|'
- en: '| `job_sunset_date` | This is the date at which the job will no longer be displayed
    in searches. This is required as jobs will not be advertised forever and applying
    a date that limits the time jobs can be applied for prevents people from applying
    for jobs that have either been filled or no longer exist. |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| `job_sunset_date` | 这是职位将不再在搜索中显示的日期。这是必需的，因为职位不会永远被宣传，应用一个限制职位申请时间的日期可以防止人们申请已经填补或不再存在的职位。|'
- en: '| `job_created_at` | This is the MySQL timestamp that''s applied when a new
    record is added to the database. |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| `job_created_at` | 这是将新记录添加到数据库时应用的MySQL时间戳。|'
- en: We'll also need to make amends to the `config/database.php` file, namely setting
    the database access details, username password and so on.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要对`config/database.php`文件进行修改，即设置数据库访问详情、用户名、密码等。
- en: 'Open the `config/database.php` file and find the following lines:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 打开`config/database.php`文件并找到以下行：
- en: '[PRE2]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Edit the values in the preceding lines, ensuring you substitute these values
    with ones more specific to your setup and situation; so, enter your username,
    password, and so on.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑上一行中的值，确保用更具体于你的设置和情况的值替换这些值；因此，输入你的用户名、密码等。
- en: Adjusting the config.php file
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调整`config.php`文件
- en: There are a few things in this file that we'll need to configure to support
    sessions and encryption. So, open the `config/config.php` file and make the following
    changes.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个文件中有几件事情我们需要配置以支持会话和加密。因此，打开`config/config.php`文件并做出以下更改。
- en: 'We will need to set an encryption key; both sessions and CodeIgniter''s encryption
    functionality require an encryption key to be set in the `$config` array, so find
    the following line:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要设置一个加密密钥；会话和CodeIgniter的加密功能都需要在`$config`数组中设置一个加密密钥，所以找到以下行：
- en: '[PRE3]'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Change it to the following:'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更改为以下内容：
- en: '[PRE4]'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Tip
  id: totrans-101
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Now obviously, don't actually change this value to literally a-random-string-of-alphanum-characters
    but change it to, er, a random string of alphanum characters instead—if that makes
    sense? Yeah, you know what I mean.
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在显然，实际上不要将这个值直接改为一个随机的字母数字字符序列，而是改为，嗯，一个随机的字母数字字符序列——如果这样理解的话？是的，你知道我的意思。
- en: 'Find these lines:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找到这些行：
- en: '[PRE5]'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Change them to the following:'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将它们更改为以下内容：
- en: '[PRE6]'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Adjusting the routes.php file
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调整`routes.php`文件
- en: 'We want to redirect the user to the `jobs` controller rather than the default
    CodeIgniter `welcome` controller. To do this, we will need to amend the default
    controller setting in the `routes.php` file:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望将用户重定向到`jobs`控制器，而不是默认的CodeIgniter `welcome`控制器。为此，我们需要修改`routes.php`文件中的默认控制器设置：
- en: 'Open the `config/routes.php` file for editing and find the following lines
    (near the bottom of the file):'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`config/routes.php`文件进行编辑，并找到以下行（文件底部附近）：
- en: '[PRE7]'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'First, we need to change the default controller. Initially in a CodeIgniter
    application, the default controller is set to `welcome`; however, we don''t need
    this—instead, we want the default controller to be `jobs`. So, find the following
    line:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们需要更改默认控制器。最初在一个CodeIgniter应用程序中，默认控制器设置为`welcome`；然而，我们不需要这个——相反，我们希望默认控制器是`jobs`。所以，找到以下行：
- en: '[PRE8]'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Replace it with the following:'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 用以下内容替换：
- en: '[PRE9]'
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Creating the model
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建模型
- en: There is only one model in this project—`jobs_model.php`— that contains functions
    that are specific to searching and writing job adverts to the database.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在此项目中只有一个模型——`jobs_model.php`——它包含特定于搜索和将职位广告写入数据库的函数。
- en: This is our one and only model for this project, so let's create the model and
    discuss how it functions.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 这是此项目的唯一模型，因此让我们创建模型并讨论其功能。
- en: 'Create the `/path/to/codeigniter/application/models/jobs_model.php` file and
    add the following code to it:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 创建`/path/to/codeigniter/application/models/jobs_model.php`文件，并将其中的以下代码添加到该文件中：
- en: '[PRE10]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'There are six main functions in this model, which are as follows:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 此模型中有六个主要函数，具体如下：
- en: '`get_jobs()`: This serves two functions: firstly, displaying all jobs—for example,
    when a user first visits the site—and secondly, when a user enters a search term,
    the query is then changed to look for the specific search term in `job_title`
    and `job_desc`.'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_jobs()`: 此函数有两个作用：首先，显示所有职位——例如，当用户首次访问网站时——其次，当用户输入搜索词时，查询将更改以在`job_title`和`job_desc`中查找特定的搜索词。'
- en: '`get_job()`: This fetches the details of a specific job advert for point **2**
    (the Details/Apply item) of the site map.'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_job()`: 此函数获取特定职位广告的详细信息，用于网站地图的**2**（详情/申请）项。'
- en: '`save_job()`: This saves a job advert to the database when a user submits the
    form from point **3** (the Create item) of the site map.'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`save_job()`: 当用户从网站地图的**3**（创建项目）处提交表单时，此函数会将职位广告保存到数据库中。'
- en: '`get_categories()`: This fetches categories from the `categories` table. It
    is used to populate the categories dropdown for the create process.'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_categories()`: 此函数从`categories`表获取类别。它用于在创建过程中填充类别下拉菜单。'
- en: '`get_types()`: This fetches types from the `types` table. It is used to populate
    the types dropdown for the create process.'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_types()`: 此函数从`types`表获取类型。它用于在创建过程中填充类型下拉菜单。'
- en: '`get_locations()`: This fetches locations from the `locations` table. It is
    used to populate the locations dropdown for the create process.'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_locations()`: 此函数从`locations`表获取位置。它用于在创建过程中填充位置下拉菜单。'
- en: 'Taking the `get_jobs()` function first, as mentioned, this function has two
    purposes:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 首先考虑`get_jobs()`函数，如前所述，此函数有两个用途：
- en: To return all results, that is, to list all jobs
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要返回所有结果，即列出所有职位
- en: To return results (jobs) that match a user's search
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 返回与用户搜索匹配的结果
- en: When a user visits the site, they are routed to `jobs/index`. This will cause
    the `get_jobs()` model function to search the database. On this initial visit,
    the `$search_string` variable will be empty (as the user isn't searching for anything).
    This will cause the first part of the `if` statement to be run, basically returning
    every valid job.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户访问网站时，他们会被路由到`jobs/index`。这将导致`get_jobs()`模型函数搜索数据库。在这次初次访问中，`$search_string`变量将是空的（因为用户没有搜索任何内容）。这将导致`if`语句的第一部分执行，基本上返回所有有效的职位。
- en: However, if the user is searching for something, then the `$search_string` variable
    will not be empty; it will contain the search term the user entered in the `views/jobs/view.php`
    form.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果用户正在搜索某些内容，那么`$search_string`变量将不会为空；它将包含用户在`views/jobs/view.php`表单中输入的搜索词。
- en: 'This will cause the second part of the `if` statement to run, adding `$search_term`
    to the database query:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 这将导致`if`语句的第二部分执行，将`$search_term`添加到数据库查询中：
- en: '[PRE11]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Both queries will only return results whose sunset date has not passed. The
    `jobboarddb.job_sunset_date` field contains a date on which the job advert will
    stop being displayed in search terms.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个查询都只会返回日落日期尚未过去的查询结果。`jobboarddb.job_sunset_date`字段包含一个日期，即职位广告将停止在搜索词中显示。
- en: Next, we'll look at the `get_job()` function. This function is passed the `$job_id`
    value from the `jobs` controller. The `jobs` controller gets the ID of the job
    advert from `$this->uri->segment(3)` when the user clicks on the **Apply** link
    in `views/jobs/view.php`.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将查看`get_job()`函数。此函数接收来自`jobs`控制器的`$job_id`值。当用户在`views/jobs/view.php`中点击**申请**链接时，`jobs`控制器从`$this->uri->segment(3)`获取职位广告的ID。
- en: The `get_job()` function simply returns all the data for point **2** (the Details/Apply
    item) of the site map.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '`get_job()`函数简单地返回网站地图**2**（详情/申请）项的所有数据。'
- en: It joins the `categories`, `types`, and `locations` tables to the `jobs` table
    in order to ensure that the correct category, type, and location is displayed
    in the `views/jobs/apply.php` view along with the specific job advert details.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 它将`categories`、`types`和`locations`表连接到`jobs`表，以确保在`views/jobs/apply.php`视图中显示正确的类别、类型和位置，以及特定的职位广告详情。
- en: We then move down to the `save_job()` function. This accepts an array of data
    from the `jobs` controller. The `jobs` controller's `create()` function sends
    the `$save_data` array to the `save_job()` model function. The `$save_data` array
    contains the input from the form in the `views/jobs/create.php` view file.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们继续到 `save_job()` 函数。该函数接受来自 `jobs` 控制器的一个数据数组。`jobs` 控制器的 `create()` 函数将
    `$save_data` 数组发送到 `save_job()` 模型函数。`$save_data` 数组包含 `views/jobs/create.php`
    视图文件中的表单输入。
- en: On a successful save, the primary key of the insert is returned.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 在成功保存后，返回插入的主键。
- en: Now we will cover the three functions—`_categories()`, `get_types()` and `get_locations()`—at
    the same time (as they do pretty similar things). These three functions fetch
    all categories, types, and locations from their respective tables. These functions
    are called by the `jobs` controller's `create()` function to ensure that the dropdowns
    are populated with the correct data.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将同时介绍三个函数——`_categories()`、`get_types()` 和 `get_locations()`（因为它们执行的功能相当相似）。这三个函数从各自的表中获取所有类别、类型和位置。这些函数由
    `jobs` 控制器的 `create()` 函数调用，以确保下拉列表填充了正确的数据。
- en: Creating views
  id: totrans-141
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建视图
- en: 'There are four views in this project, and these are as follows:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在此项目中，有四种视图，具体如下：
- en: '`/path/to/codeigniter/application/views/jobs/view.php`: This displays a list
    of current jobs to the user.'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/path/to/codeigniter/application/views/jobs/view.php`：此视图向用户显示当前工作的列表。'
- en: '`/path/to/codeigniter/application/views/jobs/create.php`: This view allows
    the job advertiser to enter the job advert details. The form submits to the `jobs`
    controller''s `create()` function.'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/path/to/codeigniter/application/views/jobs/create.php`：此视图允许工作发布者输入工作广告详情。表单提交到
    `jobs` 控制器的 `create()` 函数。'
- en: '`/path/to/codeigniter/application/views/jobs/apply.php`: This displays a form
    to the user allowing them to enter information to apply for the job. It also displays
    validation errors.'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/path/to/codeigniter/application/views/jobs/apply.php`：此视图向用户显示一个表单，允许他们输入申请工作的信息。它还显示验证错误。'
- en: '`/path/to/codeigniter/application/views/nav/top_nav.php`: This displays the
    top-level menu. In this project, this is very simple as it contains a project
    name and link to go to the `jobs` controller.'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/path/to/codeigniter/application/views/nav/top_nav.php`：此视图显示顶级菜单。在此项目中，这非常简单，因为它包含项目名称和链接到
    `jobs` 控制器。'
- en: These are our four view files. Now, let's go over each one, build the code,
    and discuss how it functions.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是我们的四个视图文件。现在，让我们逐一过目，构建代码，并讨论其功能。
- en: 'Create the `/path/to/codeigniter/application/views/jobs/view.php` file and
    add the following code to it:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 `/path/to/codeigniter/application/views/jobs/view.php` 文件，并向其中添加以下代码：
- en: '[PRE12]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'This view serves two functions:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 此视图有两个功能：
- en: To display a simple search form at the top of the page. This is where a user
    can search for jobs that match a search term.
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在页面顶部显示一个简单的搜索表单。这是用户可以搜索匹配搜索词的工作的地方。
- en: To display a list of jobs in an HTML table. These are the current active jobs
    in the database. A job is considered active if the job's sunset date (`jobs.job_sunset_date`)
    has not passed.
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在网页顶部显示工作列表的 HTML 表格。这些是数据库中的当前活动工作。如果工作的日落日期（`jobs.job_sunset_date`）尚未过去，则认为该工作处于活动状态。
- en: The search form is submitted to the `jobs` controller's `index()` function—this
    controller function will pass the search term to the `get_jobs($search_term)`
    function of `Jobs_model`. It will be added to the database query; this query will
    look in `jobs.job_title` and `jobs.job_desc` for text that matches the term.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 搜索表单提交到 `jobs` 控制器的 `index()` 函数——此控制器函数将搜索词传递给 `Jobs_model` 的 `get_jobs($search_term)`
    函数。它将被添加到数据库查询中；此查询将在 `jobs.job_title` 和 `jobs.job_desc` 中查找匹配该词的文本。
- en: 'Create the `/path/to/codeigniter/application/views/jobs/create.php` file and
    add the following code to it:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 `/path/to/codeigniter/application/views/jobs/create.php` 文件，并向其中添加以下代码：
- en: '[PRE13]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The type dropdown is populated by the `get_types()` function in `Jobs_model`.
    It returns a result object that we loop over, allowing the user to select the
    type:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 类型下拉列表由 `Jobs_model` 中的 `get_types()` 函数填充。它返回一个结果对象，我们可以遍历它，使用户能够选择类型：
- en: '[PRE14]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The category dropdown is populated by the `get_categories()` function in `Jobs_model`.
    It returns a result object that we loop over, allowing the user to select the
    category:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 类别下拉列表由 `Jobs_model` 中的 `get_categories()` 函数填充。它返回一个结果对象，我们可以遍历它，使用户能够选择类别：
- en: '[PRE15]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The location dropdown is populated by the `get_locations()` function in `Jobs_model`.
    It returns a result object that we loop over, allowing the user to select the
    location:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 位置下拉菜单由`Jobs_model`中的`get_locations()`函数填充。它返回一个结果对象，我们遍历它，允许用户选择位置：
- en: '[PRE16]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Any error messages related to the validation process—such as a missing form
    field that's required—are also displayed in this view file next to the form field,
    triggering an error. To do this, we use the `form_error()` CodeIgniter validation
    function.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 与验证过程相关的任何错误消息——例如缺少的必填表单字段——也会在这个视图文件中显示在表单字段旁边，触发错误。为此，我们使用CodeIgniter的`form_error()`验证函数。
- en: 'Create the `/path/to/codeigniter/application/views/jobs/apply.php` file and
    add the following code to it:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 创建`/path/to/codeigniter/application/views/jobs/apply.php`文件，并将以下代码添加到其中：
- en: '[PRE17]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Take a look at the top of the view file, specifically, the code in the `foreach($query->result()
    as $row)` loop that displays the details of the job. It is arranged as an HTML
    table, clearly separating the main points of the job advert, such as the start
    date, job location, and contact details. The only thing that's not in the table
    is the job description.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 看一下视图文件顶部，特别是`foreach($query->result() as $row)`循环中的代码，该循环显示职位的详细信息。它被组织成一个HTML表格，清楚地分隔了职位广告的主要点，如开始日期、工作地点和联系详情。唯一不在表格中的是职位描述。
- en: Below the `foreach()` loop is an HTML form that allows the user to enter their
    contact details and a small cover note explaining their interest in the role.
    The form is submitted when the user clicks on **Go**.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 在`foreach()`循环下方有一个HTML表单，允许用户输入他们的联系详情和一小段说明他们对该职位兴趣的封面信。当用户点击**Go**时，表单将被提交。
- en: 'There is a hidden field element called `job_id`, and it looks like this:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个名为`job_id`的隐藏字段元素，其外观如下：
- en: '[PRE18]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: This hidden field that's populated with the ID of the job advert ensures that
    when the form is submitted, the `jobs/apply()` function can query the database
    with the correct ID and fetch the correct e-mail address (`jobs.job_advertiser_email`)
    associated with the job, and using PHP's `mail()` function, it will send an e-mail
    to the job advertiser with the applicants details.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 这个包含职位广告ID的隐藏字段确保当表单提交时，`jobs/apply()` 函数可以使用正确的ID查询数据库，并获取与职位关联的正确电子邮件地址（`jobs.job_advertiser_email`），然后使用PHP的`mail()`函数，将包含申请者详情的电子邮件发送给职位发布者。
- en: 'Create the `/path/to/codeigniter/application/views/nav/top_nav.php` file and
    add the following code to it:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 创建`/path/to/codeigniter/application/views/nav/top_nav.php`文件，并将以下代码添加到其中：
- en: '[PRE19]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: This view is quite basic but still serves an important role. It displays an
    option to return to the `jobs` controller's `index()` function.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 这个视图相当基础，但仍然发挥着重要作用。它显示了一个返回到`jobs`控制器`index()`函数的选项。
- en: Creating the controller
  id: totrans-173
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建控制器
- en: We're going to create only one controller in this project, which is `/path/to/codeigniter/application/controllers/jobs.php`.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，我们将只创建一个控制器，即`/path/to/codeigniter/application/controllers/jobs.php`。
- en: There is only one controller in this project, so let's go over it now. We will
    look at the code and discuss how it functions.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中只有一个控制器，现在让我们来看看它。我们将查看代码并讨论其功能。
- en: 'There are three main functions in this controller, and these are as follows:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个控制器中有三个主要功能，如下所示：
- en: '`index()`: This displays the initial list of job adverts to the user. It also
    displays the search box and displays any results that might be returned.'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`index()`: 这将向用户显示初始的职位广告列表。它还显示搜索框并显示可能返回的任何结果。'
- en: '`create()`: This displays a form to the any user, allowing the users create
    a job advert.'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`create()`: 这将向任何用户显示一个表单，允许用户创建一个职位广告。'
- en: '`apply()`: This is accessed if the user clicks on the **Apply** button or the
    job title.'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`apply()`: 如果用户点击**Apply**按钮或职位标题，则会访问此功能。'
- en: 'Create the `/path/to/codeigniter/application/controllers/jobs.php` file and
    add the following code to it:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 创建`/path/to/codeigniter/application/controllers/jobs.php`文件，并将以下代码添加到其中：
- en: '[PRE20]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Looking at `index()` first, you'll see that one of the first things this function
    does is call the `get_jobs()` function of `Jobs_model`, passing to it the search
    string. If no search string was entered by the user in the search box, then this
    post array item will be empty, but that's okay because we test for it in the model.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 首先查看`index()`，你会看到这个函数首先做的事情之一是调用`Jobs_model`的`get_jobs()`函数，并将搜索字符串传递给它。如果用户在搜索框中没有输入搜索字符串，那么这个POST数组项将是空的，但那没关系，因为我们已经在模型中测试了它。
- en: 'The result of this query is stored in `$page_data[''query'']`, which is ready
    to be passed to the `views/jobs/view.php` file, where a `foreach()` loop will
    display each job advert:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 此查询的结果存储在`$page_data['query']`中，准备好传递给`views/jobs/view.php`文件，其中`foreach()`循环将显示每个工作广告：
- en: '[PRE21]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'We set the validation rules for `search_string`. If this is the first time
    the page is viewed or if the validation fails, then `$this->form_validation()`
    will return a false value:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 我们为`search_string`设置验证规则。如果是第一次查看页面或验证失败，则`$this->form_validation()`将返回一个假值：
- en: '[PRE22]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'To display a list of jobs to the user, we call the `get_jobs()` function of
    `Jobs_model`, passing to it any search string entered by the user and storing
    the database result object in the `$page_data` array''s item query. We pass the
    `$page_data` array to the `views/jobs/view.php` file:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 为了向用户显示工作列表，我们调用`Jobs_model`的`get_jobs()`函数，将其传递给用户输入的任何搜索字符串，并将数据库结果对象存储在`$page_data`数组的项目查询中。我们将`$page_data`数组传递给`views/jobs/view.php`文件：
- en: '[PRE23]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'The `create()` function is a little more meaty; initially, we set out the form
    validation rules—nothing really interesting to see there—but just after, we call
    three model functions: `get_categories()`, `get_types()`, and `get_locations()`,
    the results of which are stored in their own `$save_data` array items, as follows:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: '`create()`函数稍微复杂一些；最初，我们设置表单验证规则——那里没有什么真正有趣的东西可以看——但紧接着，我们调用三个模型函数：`get_categories()`、`get_types()`和`get_locations()`，其结果存储在各自的`$save_data`数组项中，如下所示：'
- en: '[PRE24]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: We'll loop over these results in the `view/jobs/create.php` file and populate
    the HTML select dropdowns.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在`view/jobs/create.php`文件中遍历这些结果，并填充HTML选择下拉菜单。
- en: Anyway, after this, we check whether the form has been submitted and if so,
    whether it's submitted with errors. We build the form elements, specifying each
    element's settings and sending them in the `$page_data` array to the `views/jobs/create.php`
    view.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，在此之后，我们检查表单是否已提交，如果是的话，是否提交时存在错误。我们构建表单元素，指定每个元素的设置，并将它们发送到`$page_data`数组中，以供`views/jobs/create.php`视图使用。
- en: If there were no errors after the form was submitted, we package up all the
    post inputs and send them to the `save_job()` function of `Jobs_model`.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 如果表单提交后没有错误，我们将打包所有帖子输入并发送到`Jobs_model`的`save_job()`函数：
- en: 'If the save operation worked, we''ll set a success message flash data, indicating
    to the user that their job has been saved so that they know it will now appear
    in searches. However, if it hasn''t, we''ll return an error message:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 如果保存操作成功，我们将设置成功消息的闪存数据，向用户表明他们的工作已被保存，以便他们知道它现在将出现在搜索结果中。然而，如果它没有成功，我们将返回一个错误消息：
- en: '[PRE25]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'At this point, the data has passed validation and is stored in the `$save_data`
    array in preparation for saving it to the database:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，数据已经通过验证，并存储在`$save_data`数组中，准备将其保存到数据库中：
- en: '[PRE26]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'The `$save_data` array is then sent to the `save_job()` function of `Jobs_model`,
    which will use `set_flashdata()` to generate a confirmation message if the save
    operation was successful or an error message if it failed:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: '`$save_data`数组随后被发送到`Jobs_model`的`save_job()`函数，该函数将使用`set_flashdata()`生成确认消息，如果保存操作成功，或者错误消息，如果操作失败：'
- en: '[PRE27]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Finally, we arrive at the `apply()` function. This is a little simpler. Like
    `create()`, we start off by defining our form item validation rules, and then
    we check whether the form is being posted (submitted) or not. We do this because
    the job ID can be passed to it in two ways.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们到达`apply()`函数。这稍微简单一些。像`create()`一样，我们首先定义我们的表单项验证规则，然后检查表单是否被提交（提交）。我们这样做是因为工作ID可以通过两种方式传递。
- en: The first way is using `$this->uri->segment(3)`. The ID is passed to the `apply()`
    function via the third `uri` segment if a user clicks on the **Apply** link or
    the job title in the `views/jobs/view.php` file.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 第一种方式是使用`$this->uri->segment(3)`。如果用户点击`views/jobs/view.php`文件中的**申请**链接或工作标题，ID将通过第三个`uri`段传递给`apply()`函数。
- en: 'The second way is `$this->input->post(''job_id'')`. The ID is passed to the
    `apply()` function via the post array if the form has been submitted. There is
    a hidden form element in the `views/jobs/view.php` file named `job_id`, the value
    of which is populated with the actual ID of the job being viewed:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 第二种方式是`$this->input->post('job_id')`。如果表单已被提交，ID将通过POST数组传递给`apply()`函数。在`views/jobs/view.php`文件中有一个隐藏的表单元素，名为`job_id`，其值被填充为正在查看的工作的实际ID：
- en: '[PRE28]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'The ID is stored in the `$page_data` array''s `job_id` item and passed to the
    `get_job()` function of `Jobs_model`:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: ID 存储在`$page_data`数组中的`job_id`项中，并传递给`Jobs_model`的`get_job()`函数：
- en: '[PRE29]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: We then test to see whether anything is returned. We use the `num_rows()` CodeIgniter
    function to see whether there are any rows in the returned database object. If
    there aren't, then we just set a flash message saying that the job is no longer
    available.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 我们接着测试是否有任何返回。我们使用CodeIgniter的`num_rows()`函数来查看返回的数据库对象中是否有任何行。如果没有，我们就设置一个闪存消息，说明该工作已不再可用。
- en: 'It might be that in the time between the user clicking on the **Apply** link
    and the time when they actually submit their application, the job advert has become
    unavailable; that is, its `job_sunset_date` has passed, or someone might have
    manually typed a random ID and it just so happens that that ID doesn''t exist.
    Anyway, whatever the reason, if no results are returned, a flash message is shown
    to the user. If, however, it is been found, we pull out the data from the database
    and store it as local variables:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 可能是在用户点击**申请**链接和实际提交申请之间，工作广告已经变得不可用；也就是说，其`job_sunset_date`已经过去，或者有人可能手动输入了一个随机的ID，而这个ID恰好不存在。无论如何，无论是什么原因，如果没有返回结果，就会向用户显示一个闪存消息。然而，如果找到了，我们就从数据库中提取数据，并将其存储为局部变量：
- en: '[PRE30]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'We then move on to the form validation process. If this is the initial page
    view or if there were errors with the submit, then `$this->form_validation->run()`
    will have retuned `FALSE`; if so, then we build our form items, defining their
    settings:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们继续进行表单验证过程。如果是初始页面视图或者提交过程中有错误，那么`$this->form_validation->run()`将返回`FALSE`；如果是这样，我们就构建表单项，定义它们的设置：
- en: '[PRE31]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: If there was no error with the submit, then we will build an e-mail to be sent
    to the advertiser of the job; this e-mail will be sent to the e-mail address contained
    in `jobs.job_advertiser_email`.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 如果提交过程中没有错误，那么我们将构建一封要发送给工作广告发布者的电子邮件；这封电子邮件将发送到`jobs.job_advertiser_email`中包含的电子邮件地址。
- en: '[PRE32]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'We substitute the variables in the e-mail using the `str_replace();` PHP function,
    replacing the variables with the details pulled from the database or form submit,
    such as the applicant''s contact details and cover note:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用PHP函数`str_replace();`在电子邮件中替换变量，将变量替换为从数据库或表单提交中提取的详细信息，例如申请人的联系信息和求职信：
- en: '[PRE33]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'If the e-mail is sent successfully, we send a flash message to the applicant,
    informing them that their application has been sent as shown in the following
    code; this isn''t the same as a validation error. Validation errors have been
    handled earlier and we wouldn''t be this far into the processing of the form if
    validating had not been passed. Really, what we''re saying is if the e-mail had
    not been sent correctly—perhaps `mail()` failed for some reason—the application
    would not have been sent. This is what we are indicating:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 如果电子邮件成功发送，我们将向申请人发送一个闪存消息，通知他们他们的申请已经发送，如下面的代码所示；这并不等同于验证错误。验证错误已经在之前处理过，如果验证没有通过，我们不会进入表单处理的这一步。实际上，我们说的是如果电子邮件没有正确发送——可能是因为某些原因`mail()`失败了——那么申请就不会被发送。这就是我们想要表达的意思：
- en: '[PRE34]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Creating the language file
  id: totrans-217
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建语言文件
- en: As with all the projects in this book, we're making use of the language file
    to serve text to users. This way, you can enable multiple region/multiple language
    support. Let's create the language file.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 就像本书中的所有项目一样，我们正在使用语言文件来向用户提供文本。这样，你可以启用多区域/多语言支持。让我们创建语言文件。
- en: 'Create the `/path/to/codeigniter/application/language/english/en_admin_lang.php`
    file and add the following code to it:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 创建`/path/to/codeigniter/application/language/english/en_admin_lang.php`文件，并将其中的以下代码添加到该文件中：
- en: '[PRE35]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Putting it all together
  id: totrans-221
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将所有内容整合在一起
- en: Okay, here are a couple of examples that will help put everything together.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，以下是一些示例，将有助于将所有内容整合在一起。
- en: User creates a job advert
  id: totrans-223
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用户创建工作广告
- en: 'Let''s see how the process of creating a job advert exactly works:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看创建工作广告的过程是如何具体工作的：
- en: The user visits the site and is presented with a list of jobs, a search box,
    and a navigation bar.
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户访问网站，会看到一个工作列表、搜索框和导航栏。
- en: The user wishes to create a new job so they click on the **Create** link contained
    in the `views/nav/top_nav.php` file.
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果用户想要创建一个新的工作，他们就会点击`views/nav/top_nav.php`文件中包含的**创建**链接。
- en: CodeIgniter loads the `jobs` controller's `create()` function.
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: CodeIgniter加载`jobs`控制器的`create()`函数。
- en: The `create()` function displays the form in the `views/jobs/create.php` view
    file. There are three HTML dropdown form elements that allow the user to choose
    a job type, category, and location. These dropdowns are populated by the `get_types()`,
    `get_categories()` and `get_locations()` functions of `Jobs_model`, respectively.
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`create()`函数在`views/jobs/create.php`视图文件中显示表格。有三个HTML下拉表单元素允许用户选择工作类型、类别和位置。这些下拉列表分别由`Jobs_model`的`get_types()`、`get_categories()`和`get_locations()`函数填充。'
- en: The user fills in the form and clicks on **Go** to submit the form.
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户填写表格并点击**Go**按钮提交表格。
- en: The form is submitted to the `jobs` controller's `create()` function; it is
    validated and passed.
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 表单被提交到`jobs`控制器的`create()`函数；经过验证后通过。
- en: The `jobs` controller's `create()` function sends the validated form input to
    the `save_job()` function of `Jobs_model` where it is saved to the `jobs` database
    table.
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`jobs`控制器的`create()`函数将验证后的表单输入发送到`Jobs_model`的`save_job()`函数，其中它被保存到`jobs`数据库表中。'
- en: User looks at a job
  id: totrans-232
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用户查看工作
- en: 'Now we will see how does a user looks at a job:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将看到用户如何查看工作：
- en: The user visits the site and is presented with a list of jobs, a search box,
    and a navigation bar.
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户访问网站，并显示一份工作列表、搜索框和导航栏。
- en: The user clicks on the job title of the first job in the list.
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户点击列表中第一个工作的标题。
- en: CodeIgniter loads the `jobs` controller's `apply()` function.
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: CodeIgniter加载`jobs`控制器的`apply()`函数。
- en: The `apply()` function looks at the third segment in the URI (this is the `job_id`
    value passed in the URL of the job title in the previous step) and passes this
    to the `get_job()` function in `Jobs_model`.
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`apply()`函数查看URI中的第三个部分（这是在上一步骤中工作标题URL中传递的`job_id`值）并将其传递给`Jobs_model`中的`get_job()`函数。'
- en: The `get_job()` function pulls the details of the job from the database and
    returns a database result object to the `jobs` controller.
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`get_job()`函数从数据库中提取工作的详细信息，并将数据库结果对象返回给`jobs`控制器。'
- en: The `jobs` controller sends the database result object to the `views/jobs/apply.php`
    view file where a `foreach()` loop runs over the object, echoing out the details
    of the job.
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`jobs`控制器将数据库结果对象发送到`views/jobs/apply.php`视图文件，其中`foreach()`循环遍历对象，输出工作的详细信息。'
- en: User searches for a job
  id: totrans-240
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用户搜索工作
- en: 'The flow of steps followed when a user searches for a job is as follows:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 用户搜索工作时遵循的步骤流程如下：
- en: The user visits the site and is presented with a list of jobs, a search box,
    and a navigation bar.
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户访问网站，并显示一份工作列表、搜索框和导航栏。
- en: The user types the word `CodeIgniter` into the search box and hits the *Enter*
    key.
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户在搜索框中输入单词`CodeIgniter`并按下*Enter*键。
- en: The CodeIgniter framework then calls the `jobs` controller's `index()` function.
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: CodeIgniter框架随后调用`jobs`控制器的`index()`函数。
- en: 'The `index()` function calls the `get_jobs` function of `Jobs_model` and passes
    to it the `search_string` post item:'
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`index()`函数调用`Jobs_model`的`get_jobs()`函数，并传递`search_string`帖子项：'
- en: '[PRE36]'
  id: totrans-246
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: The `get_jobs()` function of `Jobs_model` recognizes that there is a search
    string as input and runs the correct database query, looking at `jobs.job_title`
    and `jobs.job_desc` to see whether a string of text matches the user's search
    string.
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Jobs_model`的`get_jobs()`函数识别到有搜索字符串作为输入，并运行正确的数据库查询，查看`jobs.job_title`和`jobs.job_desc`以查看是否有文本字符串与用户的搜索字符串匹配。'
- en: A job advert is found to match.
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找到与工作广告匹配的字符串。
- en: The result object is returned to the `views/jobs/view.php` file, where a `foreach()`
    loop runs over the result object, displaying the summary details of the job.
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 结果对象被返回到`views/jobs/view.php`文件，其中`foreach()`循环遍历结果对象，显示工作的摘要详情。
- en: The user is free to click on the **Apply** link to study the details further
    or apply for the job.
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户可以自由点击**申请**链接进一步了解详情或申请工作。
- en: User applies for a job
  id: totrans-251
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用户申请工作
- en: 'When a user wants to apply for a job, the following steps are performed:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户想要申请工作时，会执行以下步骤：
- en: The user visits the site and is presented with a list of jobs, a search box
    and navigating bar.
  id: totrans-253
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户访问网站，并显示一份工作列表、搜索框和导航栏。
- en: The user clicks on the job title of the first job in the list.
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户点击列表中第一个工作的标题。
- en: CodeIgniter loads the `jobs` controller's `apply()` function.
  id: totrans-255
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: CodeIgniter加载`jobs`控制器的`apply()`函数。
- en: The `apply()` function looks at the third segment in the URI (this is the `job_id`
    value passed in the URL of the job title in the previous step) and passes this
    to the `get_job()` function in `Jobs_model`.
  id: totrans-256
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`apply()` 函数查看 URI 的第三个部分（这是在上一步骤中工作标题的 URL 中传递的 `job_id` 值）并将其传递给 `Jobs_model`
    中的 `get_job()` 函数。'
- en: The `get_job()` function pulls the details of the job from the database and
    returns a database result object to the `jobs` controller.
  id: totrans-257
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`get_job()` 函数从数据库中提取工作详情，并将数据库结果对象返回给 `jobs` 控制器。'
- en: The `jobs` controller sends the database result object to the `views/jobs/apply.php`
    view file where a `foreach()` loop runs over the object, echoing out the details
    of the job.
  id: totrans-258
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`jobs` 控制器将数据库结果对象发送到 `views/jobs/apply.php` 视图文件，其中 `foreach()` 循环遍历对象，输出工作的详细信息。'
- en: The user enters their details in the form below the job description and clicks
    on **Go**.
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户在职位描述下方填写他们的详细信息，然后点击 **Go**。
- en: The form is submitted to the `jobs` controller's `apply()` function where it
    is validated; once passed, the `jobs` controller queries the `get_job()` function
    of `Jobs_model` to find the `jobs.job_advertiser_email` and `jobs.job_advertiser_name`
    values in order to e-mail the application to the advertiser.
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 表单提交到 `jobs` 控制器的 `apply()` 函数进行验证；一旦通过，`jobs` 控制器将查询 `Jobs_model` 的 `get_job()`
    函数以找到 `jobs.job_advertiser_email` 和 `jobs.job_advertiser_name` 值，以便将申请电子邮件发送给广告商。
- en: Summary
  id: totrans-261
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: 'So, here we have a basic job board application; it is capable of allowing people
    to create jobs, displaying those jobs, searching for jobs, and it also allows
    people to apply for these jobs. However, there are still areas of improvement
    and scope to add greater functionality; perhaps you could do the following:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们有一个基本的招聘板应用程序；它能够允许人们创建工作，显示这些工作，搜索工作，并且它还允许人们申请这些工作。然而，仍然有改进和扩展更多功能的空间；也许您可以做以下事情：
- en: Add e-mail confirmation for the applicant. You could add a functionality to
    the `jobs/apply()` function to send a confirmation e-mail to the applicant when
    they apply for a job.
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为申请人添加电子邮件确认。您可以在 `jobs/apply()` 函数中添加一个功能，当申请人申请工作时发送确认电子邮件。
- en: 'Limit the number of applications. You could add a functionality to limit the
    number of job applications per job; logic would be needed to calculate which came
    first: the sunset date or the application limit.'
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 限制申请数量。您可以为每个工作添加限制申请数量的功能；需要逻辑来计算哪个先到：日落日期或申请限制。
- en: You could paginate the results. Currently, all active jobs are displayed in
    the `jobs/index()` function. You might wish to add pagination to this, limiting
    the number of jobs per page to a set number—25 per page, for example.
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以对结果进行分页。目前，所有活跃的工作都在 `jobs/index()` 函数中显示。您可能希望添加分页功能，将每页的工作数量限制为一定的数量——例如每页
    25 个。
- en: You can have detailed search options. You could add a more complex search, perhaps
    a dropdown specifying locations or job types, and so on.
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以拥有详细的搜索选项。您可以添加更复杂的搜索，例如添加一个下拉菜单来指定位置或工作类型等。
- en: You can delete old job adverts. You could create a small Cron script, deleting
    jobs that are beyond their sunset date (`jobs.job_sunset_date`). This would reduce
    the database to a more reasonable size and ensure that only jobs that are active
    are kept there.
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以删除旧的工作广告。您可以创建一个小型的 Cron 脚本，删除那些超过其日落日期（`jobs.job_sunset_date`）的工作。这将使数据库的大小更加合理，并确保只有活跃的工作被保留。
- en: So there we are, then—we're at the end! What have we learned… erm, well, you
    should have a whole bunch of projects to be ready to work with—best of all, they're
    all really simple, so you can easily expand upon them and build more features
    and functions as you require; at the very least, you should have a *base* platform
    on which you can build any number of applications.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，我们就到这里——我们结束了！我们学到了什么……嗯，你应该有一系列的项目可以准备使用——最好的是，它们都非常简单，所以您可以很容易地在此基础上扩展并添加更多功能和功能；至少，您应该有一个
    *基础* 平台，您可以在其上构建任何数量的应用程序。
- en: Be sure to check out the CodeIgniter website ([http://www.codeigniter.com/](http://www.codeigniter.com/))
    for regular updates and new releases. Don't forget that the code in this book
    is available online from the Packt website, so you don't have to painfully copy
    from page to screen, and the SQL for each project is there too.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 一定要查看 CodeIgniter 网站 ([http://www.codeigniter.com/](http://www.codeigniter.com/))
    以获取常规更新和新版本。别忘了这本书中的代码可以从 Packt 网站在线获取，所以您不必痛苦地从页面复制到屏幕，每个项目的 SQL 语句也在那里。
- en: Right—that's it, the end!
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 对了——就是这样，结束了！
