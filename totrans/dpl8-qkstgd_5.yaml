- en: Making Drupal Even More Useful
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使Drupal更加有用
- en: In the previous chapter we learned how to create content, the mainstay of the
    Drupal website. Creating content can be accomplished using a simple build-in process. Drupal
    is fully usable out-of-the-box as a content management without the requirement
    of any customization. However, your site or business model can call for additional
    functionality. Perhaps you want to schedule events, or accept payments, or display
    a product catalog. For this reason, there is a galaxy of add-on features available
    that can be greatly increase its utility and flexibility.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们学习了如何创建内容，这是Drupal网站的主要组成部分。创建内容可以通过一个简单的内置过程来完成。Drupal作为一个内容管理系统，无需任何定制即可完全使用。然而，你的网站或商业模式可能需要额外的功能。也许你想安排活动，或者接受支付，或者显示产品目录。因此，有大量的附加功能可供选择，这些功能可以极大地增加其效用和灵活性。
- en: Perhaps you have added functionality to your browser by way of a browser plugin,
    or to your smartphone by way of an app. With Drupal, feature expansion is also
    accomplished by pieces of add-on code, called modules. A module is arranged in
    a folder that contains program code and other files that, when placed in the correct
    location within the Drupal folder, provide a feature or service above and beyond
    those included with Drupal. As is the case with Drupal itself, modules are open
    source and free of charge, though some serve the purpose of connecting Drupal
    to a paid, third-party service.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 可能你已经通过浏览器插件为你的浏览器添加了功能，或者通过应用为你的智能手机添加了功能。在Drupal中，功能扩展也是通过一些附加代码片段来实现的，这些代码片段被称为模块。模块被安排在一个文件夹中，包含程序代码和其他文件，当它们被放置在Drupal文件夹的正确位置时，会提供超出Drupal本身所包含的功能或服务。与Drupal本身一样，模块是开源的，且免费，尽管有些模块的作用是将Drupal连接到付费的第三方服务。
- en: 'Modules come from one of three sources:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 模块来自以下三个来源之一：
- en: '**Core**: Included with Drupal, sometimes being optional to use'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**核心**: 随Drupal一起提供，有时使用是可选的'
- en: '**Contributed**: Not part of the core Drupal package, but typically made available
    from Drupal''s module library at [https://drupal.org/project/project_module](https://drupal.org/project/project_module)'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**贡献**: 不属于核心Drupal包的一部分，但通常可以从Drupal的模块库[https://drupal.org/project/project_module](https://drupal.org/project/project_module)获得'
- en: '**Custom**: Typically developed specifically for the site on which the module
    is used'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自定义**: 通常专门为使用该模块的网站开发'
- en: 'The modules cover a cornucopia of categories, features, and services, from
    social media integration to image editing and appointment scheduling. This chapter
    explores a few of the more popular modules that extend Drupal''s usefulness for
    users focused on content. Custom modules are not within the scope of this book. The
    modules that we will use and look at in this chapter are as follows:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 模块涵盖了各种类别、功能和服务的宝库，从社交媒体集成到图像编辑和预约安排。本章探讨了几个更受欢迎的模块，这些模块扩展了Drupal对内容用户的实用性。本书的范围不包括自定义模块。本章我们将使用并查看的模块如下：
- en: '**Pathauto (contributed, but included with Drupal)**: Automatically generates
    URI/path aliases for content based on rules created by you'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Pathauto（贡献，但包含在Drupal中）**: 根据你创建的规则自动生成内容的URI/路径别名'
- en: '**Paragraphs (contributed)**: Provides an easy way to add pre-formatted pieces
    of content to your larger content'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**段落（贡献）**: 提供了一种简单的方法，可以将预格式化的内容片段添加到你的更大型内容中'
- en: '**Content moderation (core)**: Facilitates a process for approving content
    before it can be published'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**内容审核（核心）**: 促进在内容发布前进行审核的过程'
- en: Pathauto
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Pathauto
- en: There are many ways to install modules, and all require some administrative
    capability. The installation of the contributed module is outside the scope of
    this book. We'll start from the point of the module files being in the correct
    place.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 安装模块有许多方法，所有这些都需要一些管理权限。贡献模块的安装超出了本书的范围。我们将从模块文件位于正确位置这一点开始。
- en: 'Because the pathauto module is included with Drupal, the files certainly will
    be present. We can verify this by navigating to Extend on the admin menu, or `/admin/modules`. Once
    there, enter pathauto in the filter text box at the top of the page. You should
    see the following entry listed:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 因为pathauto模块包含在Drupal中，所以文件肯定存在。我们可以通过导航到管理菜单中的“扩展”或“/admin/modules”来验证这一点。一旦到达那里，在页面顶部的过滤文本框中输入pathauto。你应该会看到以下条目列在列表中：
- en: '![](img/d036bc19-3618-48ae-8883-2641df3b1b6c.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/d036bc19-3618-48ae-8883-2641df3b1b6c.png)'
- en: 'Let''s check the box beside it and click the Install button. Depending on what
    other modules have been enabled on your site, you might receive the following
    message:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们勾选它旁边的复选框并点击安装按钮。根据你网站上启用的其他模块，你可能会收到以下消息：
- en: '![](img/e115b72e-ca85-4b2b-b8b4-c75f97286781.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e115b72e-ca85-4b2b-b8b4-c75f97286781.png)'
- en: 'If you do receive this message, or a similar one when you are installing a
    module, it is because the module is dependent on other modules, and one or more
    of them isn''t enabled. If the necessary modules are present, Drupal will offer
    to enable them as well. Simply click Continue. In this case, if all goes well,
    you will receive a status message at the top of the reloaded page stating that
    three modules have been enabled: pathauto, Chaos tools, and Token.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你确实收到了这条消息，或者安装模块时收到类似的警告，那是因为该模块依赖于其他模块，而其中一个或多个模块没有被启用。如果存在必要的模块，Drupal将提供启用它们的选项。只需点击继续。在这种情况下，如果一切顺利，你将在重新加载页面的顶部收到一条状态消息，表明已启用三个模块：pathauto、Chaos
    tools和Token。
- en: At this point, we can configure Pathauto. Most modules have a configuration
    page, but not all. Scroll down to the Pathauto entry, or use the filter text box
    to find it, and click the arrow just to the left of the module description. An
    accordion control will open and reveal a configuration link, among other things.
    Click it, and you will be redirected to Pathauto's configuration page at `/admin/config/search/path/patterns`.
    The page will be sparse, because no pattern exists yet. Let's create one.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个阶段，我们可以配置Pathauto。大多数模块都有一个配置页面，但并非所有模块都有。滚动到Pathauto条目，或者使用筛选文本框来查找它，然后点击模块描述左侧的箭头。一个手风琴控制将打开，并显示配置链接等。点击它，你将被重定向到Pathauto的配置页面，网址为`/admin/config/search/path/patterns`。页面将很简洁，因为没有存在任何模式。让我们创建一个。
- en: Click the +Add Pathauto pattern button. The resulting page, with the same title
    as the button that you just clicked, contains a dropdown selection that offers
    various entity types that are suitable for path patterns. Initially, the option
    are Content, Taxonomy, Term, and User. For any of those, a path pattern can be
    specified for creating meaningful URLs. We are going to create a pattern for Content,
    and select the same.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 点击+添加Pathauto模式按钮。生成的页面，标题与刚刚点击的按钮相同，包含一个下拉选择，提供适合路径模式的多种实体类型。最初，选项是内容、分类法、术语和用户。对于任何这些，都可以指定路径模式以创建有意义的URL。我们将为内容创建一个模式，并选择相同的。
- en: Our selection causes the page to change a bit, as each content type is now listed.
    You can check the box for Article, as we are creating a pattern for it.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的选择会导致页面略有变化，因为现在每个内容类型都被列出。你可以勾选文章的复选框，因为我们正在为它创建一个模式。
- en: We need to define the pattern that we want to use. There are many possibilities.
    We will choose a simple pattern. We'll have article URLs containing the word "content"
    and the article title in the form `content/my-article-title`. How will we get
    the article title to be used too? Click the link to Browse available tokens.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要定义我们想要使用的模式。有许多可能性。我们将选择一个简单的模式。我们将有包含单词“content”和文章标题的URL，形式为`content/my-article-title`。我们如何让文章标题也被使用呢？点击浏览可用标记的链接。
- en: Tokens are placeholders that will make a specific type of value available at
    the proper time. A pop-up will appear that contains a number of token categories.
    We are interested in *Nodes*, so click the arrow beside it. An expanded list will
    appear, and in it you will find *Title*, referring to the title of the node, or
    in this case, the article title. To the right of that is a link containing the
    token for the node title, [node:title]. Click inside the pattern text box, and
    then click the link for the token. It will appear in the text box. Now, place
    your cursor to the left of the token and type `content/`.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 标记是占位符，它们将在适当的时候提供特定类型的值。将弹出一个包含多个标记类别的窗口。我们感兴趣的是*节点*，所以点击它旁边的箭头。一个扩展的列表将出现，在其中你可以找到*标题*，指的是节点的标题，或者在这个案例中，文章的标题。在其右侧有一个包含节点标题标记的链接，[node:title]。在模式文本框内点击，然后点击标记链接。它将出现在文本框中。现在，将光标移到标记的左侧并输入`content/`。
- en: 'Lastly, type *articles* in the Label text box to identify this pattern. The
    form should look similar to the following screenshot, though your content type
    list might vary:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在标签文本框中输入*文章*以标识此模式。表单应该看起来与以下截图相似，尽管你的内容类型列表可能不同：
- en: '![](img/986aaba5-3a59-4a6b-ac43-fd697565273a.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/986aaba5-3a59-4a6b-ac43-fd697565273a.png)'
- en: Click Save to save your pattern, and you will be returned to the pattern list,
    which will now have one entry. Let's test it by creating an article. Navigate
    to `/node/add/article`.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“保存”以保存您的模式，您将被返回到模式列表，其中现在将有一个条目。让我们通过创建一篇文章来测试它。导航到 `/node/add/article`。
- en: Add whatever title and body text you'd like. I'm naming my article *My New Article*.
    The magic comes when you save it. When I do, instead of having a URL like `*http://d8quickstart/node/5*`,
    I have `*http://d8quickstart/content/my-new-article*`. Note that the original
    URL will still exist and can still be used. The Pathauto list at /admin/config/search/path
    lists both the alias based on the pattern and the original URL for each node.
    In my case, the node I created has a node ID of 2, and so I could still enter
    `http://d8quickstart/node/2` as the URL if I so desired.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 添加您想要的任何标题和正文文本。我将我的文章命名为“我的新文章”。当您保存它时，魔法就会出现。当我这样做时，我的URL不是像`*http://d8quickstart/node/5*`这样的，而是`*http://d8quickstart/content/my-new-article*`。请注意，原始URL仍然存在并且仍然可以使用。/admin/config/search/path上的Pathauto列表列出了基于模式的别名和每个节点的原始URL。在我的情况下，我创建的节点有一个节点ID为2，因此如果我想的话，我仍然可以输入`http://d8quickstart/node/2`作为URL。
- en: 'Notice that Pathauto automatically converted the article title to a URL-friendly
    string by replacing spaces with hyphens and making the title lower case. The settings
    for this can be controlled under the Settings tab on the Pathauto config page.
    There is an addition tab there that is very important: Bulk generate. Let''s say
    that you create a pattern *after* a number of nodes have already been created.
    Rather than editing each and changing the URL to match your pattern, you can instruct
    Drupal to generate a patterned URL for every existing article.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，Pathauto会自动将文章标题转换为URL友好的字符串，通过用连字符替换空格并将标题转换为小写。这些设置的控件可以在Pathauto配置页面的“设置”选项卡下找到。那里有一个非常重要的附加选项卡：批量生成。假设你在创建了一些节点之后创建了一个模式。你不必编辑每个节点并更改URL以匹配你的模式，你可以指示Drupal为每个现有文章生成一个模式化的URL。
- en: Paragraphs
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 段落
- en: Paragraphs is a contributed module, which means that it was developed by someone
    in the Drupal community and was contributed back to Drupal.org. It provides a
    way to create pre-formatted content that can be easily reused.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 段落是一个贡献模块，这意味着它是Drupal社区中某个人开发的，并贡献给了Drupal.org。它提供了一种创建可以轻松重用的预格式化内容的方法。
- en: Once the files have been deposited in the correct folder, which is typically
    in `/modules/contrib`, we will enable it as we did Pathauto, via the Extend page
    at `/admin/modules`. You may receive a message indicating that the *Entry Reference
    Revisions* module must be enabled as well. Simply click Continue.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦文件被存放到正确的文件夹中，通常在`/modules/contrib`，我们将像Pathauto一样通过`/admin/modules`上的扩展页面启用它。你可能会收到一条消息，表明必须启用*Entry
    Reference Revisions*模块。只需点击继续。
- en: 'Navigate to Structure (`/admin/structure`) and you will see a new entry at
    the bottom of the list: Paragraph types. Click on it, which will bring you to
    the Paragraph types page at `/admin/structure/paragraphs_type`. You will see a
    message where a list would normally be indicating that there isn''t a Paragraph
    type yet. So, let''s create one.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 导航到结构（`/admin/structure`），你将在列表底部看到一个新条目：段落类型。点击它，这将带您到`/admin/structure/paragraphs_type`上的段落类型页面。你将看到一个消息，其中通常会有一个列表，表明还没有段落类型。所以，让我们创建一个。
- en: 'Click on the *+Add paragraph type* button. We''re going to create a paragraph
    type for an image and text, so in the *Label* text box let''s enter `Image and
    text`, and then click Save and manage fields. We will need to create two fields
    for our Paragraph type: one to contain the image, and another for the text.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“+添加段落类型”按钮。我们将为图像和文本创建一个段落类型，所以让我们在“标签”文本框中输入“图像和文本”，然后点击保存和管理字段。我们需要为我们的段落类型创建两个字段：一个用于包含图像，另一个用于文本。
- en: Click the +Add field button. From the select list, choose Image. You can enter
    `Image` as the label, or any value you would prefer. Click Save and continue.
    Leave the settings on the page that follows as is, and click Save field settings.
    On the next settings page, leave those as is too, and click the Save settings
    button.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“+添加字段”按钮。从选择列表中，选择图像。你可以将“图像”作为标签输入，或者输入你喜欢的任何值。点击保存并继续。保留页面上的设置，然后点击保存字段设置。在下一个设置页面上，也保留那些设置，然后点击保存设置按钮。
- en: Click the +Add field button once more. Choose Text (formatted, long) from the
    select list, and enter body text for the label. Click the Save and continue button,
    and the on the following page, click the Save field settings button. Finally,
    click the Save settings button. We now have our paragraph type defined.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 再次点击“+添加字段”按钮。从选择列表中选择文本（格式化，长），并输入标签的正文文本。点击“保存并继续”按钮，然后在下一页上，点击“保存字段设置”按钮。最后，点击“保存设置”按钮。我们现在已经定义了段落类型。
- en: 'The list page will look something like it does in the following screenshot:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 列表页面看起来会像以下截图所示：
- en: '![](img/d5155faa-10f7-430c-a64c-e91efbcc4d8e.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/d5155faa-10f7-430c-a64c-e91efbcc4d8e.png)'
- en: At this point, we have defined a paragraph type. Now, we need to add it to a
    content type so that users creating that type of content can use the paragraph
    type. Let's navigate to Structure | Content types (`/admin/structure/types`) and
    click Manage fields beside the Article content type.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经定义了一个段落类型。现在，我们需要将其添加到内容类型中，以便创建该类型内容的用户可以使用该段落类型。让我们导航到“结构”|“内容类型”（`/admin/structure/types`），并点击文章内容类型旁边的“管理字段”。
- en: Click +Add field and from the Add a new field select list, choose Paragraph.
    For the label, let's enter `Paragraph type`, and click Save and continue. Leave
    the settings on the following page as is, though make certain that the Type of
    item to reference field has Paragraph selected. Click Save field settings.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“+添加字段”，从“添加新字段”选择列表中选择列表，选择段落。对于标签，让我们输入`段落类型`，然后点击“保存并继续”。在下一页上，保持设置不变，尽管要确保“要引用的项目类型”字段已选择段落。点击“保存字段设置”。
- en: 'On the next page, Paragraph type settings, in the REFERENCE TYPE section, we
    identify which paragraph type(s) should be offered as choices to the content creator.
    By default, checking a box in the TYPE subsection will indicate the inclusion
    of that type. We also have the option of indicating that any checked box be a
    type that we want *excluded* from the choices provided to the user. We will use
    the default method of inclusion, and check the one box available to us, given
    that we created only a single paragraph type, that is, Image and text, as shown
    in the following screenshot:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一页，段落类型设置，在“引用类型”部分，我们确定哪些段落类型应该作为选项提供给内容创建者。默认情况下，在类型子部分中勾选复选框将表示包含该类型。我们还有选项表明任何勾选的复选框都是一个我们想要*排除*从提供给用户的选项中的类型。我们将使用默认的包含方法，并勾选可用的一个复选框，因为我们只创建了一个段落类型，即图片和文本，如以下截图所示：
- en: '![](img/def4b49f-3d50-466e-a5b4-627268542fb6.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/def4b49f-3d50-466e-a5b4-627268542fb6.png)'
- en: Click Save Settings. Now, let's create an article at Content| Create content|
    Article (`/node/add/article`). Give the article a title. Scroll down and you will
    see that a *PARAGRAPH TYPE* section has been added, containing the Image and text
    Paragraph type that we created. If we had created additional paragraph types,
    and marked them to be included as options, they would also be present. In that
    case, had we decided in creating this article that we wanted to use more than
    one of the paragraph types, the handle to the left of the type name could be used
    to drag the types into the order in which they should appear within the content.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“保存设置”。现在，让我们在“内容”|“创建内容”|“文章”（`/node/add/article`）处创建一篇文章。给文章起一个标题。向下滚动，你会看到已经添加了一个*段落类型*部分，其中包含我们创建的图片和文本段落类型。如果我们创建了额外的段落类型，并且标记为作为选项包含，它们也会出现。在这种情况下，如果我们决定在创建这篇文章时想要使用多个段落类型，可以使用类型名称左侧的句柄将类型拖动到内容中应该出现的顺序。
- en: Click the Choose file button for *Image* and browse to an image to include.
    Remember to provide alternative text for the image. Then, enter the text that
    will go with this image into the body text box. Note that this field has a WYSIWYG
    editor available for formatting.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“选择文件”按钮选择*图片*，并浏览到要包含的图片。请记住为图片提供替代文本。然后，将随图片一起的文字输入到正文文本框中。请注意，此字段有一个可用的WYSIWYG编辑器用于格式化。
- en: Below the image and text that we've entered is a button that we can use to add
    another paragraph. If we only wanted the user to be able to add one instance of
    a paragraph type within a piece of content, we could have changed Unlimited to
    1 instance in the field settings when creating the field.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们输入的图片和文本下方有一个按钮，我们可以使用它来添加另一个段落。如果我们只想让用户在内容中添加一个段落类型的实例，我们可以在创建字段时将“无限”更改为1个实例在字段设置中。
- en: Click the Save button. When we look at the rendered article, it doesn't look
    quite like what we had in mind when creating the paragraph type. My image is massive,
    and both fields have their titles showing. Let's do something about this.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 点击保存按钮。当我们查看渲染的文章时，它并不完全符合我们创建段落类型时的想法。我的图片很大，而且两个字段都显示了它们的标题。让我们来解决这个问题。
- en: Navigate to Structure|Paragraphs types (`/admin/structure/paragraphs_type`)
    and select Manage display from the select field. Click the settings gear on the
    right-hand side of the Image row. In the select field for Label, select Hidden,
    and select Medium (220x220) from the one for Image style.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 导航到结构 | 段落类型（`/admin/structure/paragraphs_type`），并从选择字段中选择管理显示。在图像行右侧点击设置齿轮。在标签选择字段中，选择隐藏，并从图像样式选择字段中选择中等（220x220）。
- en: You can create additional image styles at `admin/config/media/image-styles`.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在`admin/config/media/image-styles`创建额外的图像样式。
- en: Click the Update button to save your changes. Then, in the row for body text,
    selectHidden from the Label select field. Click the Save button.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 点击更新按钮保存你的更改。然后，在正文文本行中，从标签选择字段中选择隐藏。点击保存按钮。
- en: That takes care of the display settings for the fields *in* the paragraph, but
    we also want to change a setting for the Paragraph field, itself. It, too, displayed
    its field name, which isn't the behavior we want. So, navigate to Structure |
    Content types (`/admin/structure/types`) and select Manage display from the select
    field beside *Article*. For the *Paragraph type* field, change the Label setting
    to Hidden, and then click Save.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这解决了段落中*字段*的显示设置，但我们还想要更改段落字段本身的设置。它也显示了字段名称，这不是我们想要的行为。因此，导航到结构 | 内容类型（`/admin/structure/types`），并从*文章*旁边的选择字段中选择管理显示。对于*段落类型*字段，将标签设置更改为隐藏，然后点击保存。
- en: 'Now, when we look at the preview, it is what we had expected: an image on the
    left with text on the right:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当我们查看预览时，它正是我们预期的样子：左边是一张图片，右边是文字：
- en: '![](img/adaf81c3-0b2c-49f4-ae13-6832800fe85d.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/adaf81c3-0b2c-49f4-ae13-6832800fe85d.png)'
- en: Had we wanted it the other way around, we could edit the Paragraph type and
    swap the order of the image and text fields within it. There is virtually no limit
    to the number of fields that can be contained with a Paragraph type, nor the number
    of Paragraph types that can be created.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想要相反的方式，我们可以编辑段落类型并交换其中图片和文字字段的顺序。段落类型可以包含的字段数量几乎没有限制，可以创建的段落类型数量也是如此。
- en: When you enabled the Paragraphs module, another module listed just below it
    was Paragraphs library. Enabling that module will enable you to store your created
    paragraph types in a library of types so that it can be easily selected and reused
    for other content types.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 当你启用了段落模块时，它下面列出的另一个模块是段落库。启用该模块将允许你将创建的段落类型存储在类型库中，以便可以轻松选择并用于其他内容类型。
- en: Having successfully created, edited, and used our Paragraph type, let's move
    on to the final example in this chapter.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在成功创建、编辑和使用我们的段落类型之后，让我们继续本章的最后一个示例。
- en: Content moderation
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 内容审核
- en: Often, an organization requires the path to published content to be indirect.
    Rather than the author being able to publish the piece, it must first be moderated,
    whether by a supervisor, peer, or editor. The *Content Moderation* module introduces
    the ability to inject moderation into the process of publishing content.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，一个组织需要发布内容的路径是间接的。作者不能直接发布文章，它必须首先经过审核，无论是由主管、同行还是编辑进行。*内容审核*模块引入了将审核过程注入内容发布流程的能力。
- en: '*Content Moderation* is a module *in core*, meaning that it is included in
    the main programming code that defines Drupal. Navigate back to the Extend page
    (`/admin/modules`) and enable Content moderation. You will receive a message that
    states in order to do so, *Workflows* must also be enabled.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '*内容审核*是核心模块中的一个模块，这意味着它包含在定义Drupal的主编程代码中。返回到扩展页面（`/admin/modules`）并启用内容审核。你将收到一条消息，指出为了这样做，*工作流*也必须启用。'
- en: 'Let''s configure the module. Having enabled it, there is now a new section
    on the Configuration page (`/admin/config`): Workflows. Click that, or navigate
    directly to `/admin/config/workflow/workflows`. Here, you will see a content moderation
    workflow that was created when you enabled the module:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们配置该模块。启用后，配置页面（`/admin/config`）上现在有一个新的部分：工作流。点击它，或直接导航到`/admin/config/workflow/workflows`。在这里，你会看到一个当你启用模块时创建的内容审核工作流：
- en: '![](img/29beecaf-c36c-4f9e-ab73-ceb24db4c85d.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/29beecaf-c36c-4f9e-ab73-ceb24db4c85d.png)'
- en: Click Edit; here, we will take a detailed look at the sections of a workflow.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“编辑”；在这里，我们将详细查看工作流程的各个部分。
- en: States
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 状态
- en: 'The term *state* is lacking in context here and therefore can be somewhat ambiguous.
    For example, if I decide to walk to the store from my home, there are three states:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，“状态”一词缺乏上下文，因此可能有些模糊。例如，如果我决定从我家步行去商店，那么存在三种状态：
- en: Being at home
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在家
- en: Walking to the store
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 步行去商店
- en: Arriving at the store
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 到达商店
- en: 'However, state, in the context of workflows, isn''t necessarily the same. The
    default context is that state is synonymous with *static* state. Let''s take another
    look at my example, this time with the states described with further precision:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在流程的上下文中，状态不一定相同。默认情况下，状态与*静态*状态同义。让我们再次看看我的例子，这次用更精确的描述来描述状态：
- en: Being at home - static
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在家 - 静态
- en: Walking to the store - transitional
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 步行去商店 - 过渡性
- en: Arriving at the store - static
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 到达商店 - 静态
- en: States 1 and 3 represent static states – milestones and plateaus – that have
    been achieved and can remain as such. State 2 is transitional, in that it describes
    an activity that is occurring to lead from one static state to the next.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 状态1和3代表静态状态——里程碑和平台——已经实现并且可以保持这种状态。状态2是过渡性的，因为它描述了导致从一个静态状态过渡到下一个状态的活动。
- en: 'In looking at the states, as shown in the following screenshot, all three are
    static states:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在查看状态时，如以下截图所示，所有三个都是静态状态：
- en: '**Draft**: The content has been, or is in the process of being, created'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**草稿**：内容已被创建，或正在创建过程中。'
- en: '**Published**: The content is marked as published and is available to those
    user roles with permission to view published content of this type'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**已发布**：内容被标记为已发布，并且可供具有查看此类已发布内容权限的用户角色访问。'
- en: '**Archived**: The content has been published but is now removed from what is
    considered current material and may or may not be still available for viewing:'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**存档**：内容已被发布，但现在已从被认为是当前材料的内容中移除，可能仍然可供查看：'
- en: '![](img/b6331415-4999-4a2a-9404-562fe429854e.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/b6331415-4999-4a2a-9404-562fe429854e.png)'
- en: Notice that the Archived state has a select dropdown, while Draft and Published
    do not. That is because the former is an optional state, which can be deleted
    using the dropdown, but Draft and Published are not optional.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，存档状态有一个下拉选择框，而草稿和发布则没有。这是因为前者是一个可选状态，可以使用下拉菜单进行删除，但草稿和发布不是可选的。
- en: As you can see, the three states are static. That said, were a transitional
    state to be needed, it could be created by using the Add a new state link.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，三种状态都是静态的。尽管如此，在流程的上下文中，状态不一定相同。默认情况下，状态与*静态*状态同义。让我们再次看看我的例子，这次用更精确的描述来描述状态：
- en: 'Let''s take a closer look at what constitutes a state. Click on the Edit link
    for Published. The name, Published, can be changed if there is a more fitting
    term for your implementation. The two checkboxes that follow are important:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“编辑”链接查看“已发布”。名称“已发布”可以根据你的实现更改，如果有一个更合适的术语。接下来的两个复选框很重要：
- en: '**Published**: Whether this term is used for the state, or another if you were
    to change the State label, checking this box means that when this state is reached,
    the content is considered published, and the permissions given to each user role
    with regards to published content apply, typically and particularly in that the
    content will be available for viewing.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**已发布**：无论此术语用于状态，还是如果你更改了状态标签，勾选此框表示当达到此状态时，内容被视为已发布，并且针对每个用户角色授予的关于已发布内容的权限适用，通常尤其是内容将可供查看。'
- en: '**Default revision**: In Drupal, if the content type being used has been configured
    to allow revisions, each time the content is (re)saved, a new revision is created,
    and anyone with the proper permission can revert the content to an earlier version.
    If this box is checked, the current version when the state of the content reaches
    published will be considered the active version.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**默认修订版**：在Drupal中，如果正在使用的内容类型已被配置为允许修订，每次内容（重新）保存时，都会创建一个新的修订版，并且任何具有适当权限的人都可以将内容恢复到早期版本。如果勾选此框，当内容的状态达到发布时，当前版本将被视为活动版本。'
- en: Next come the transitions. Let's look at Create new draft, as its inclusion
    hear is probably not intuitive. Click on the Edit link for it. Again, the label
    is editable should you have one more suited for your process.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是过渡。让我们看看“创建新草稿”，因为它的包含在这里可能不太直观。点击它的“编辑”链接。再次，如果你有一个更适合你流程的标签，标签是可编辑的。
- en: Below the label, you see choices for the *From*, source, state and the *To*,
    target, state.  The target state for this transition is Draft and is not changeable,
    though were you to create your own transition, it would be. In either case, only
    one target state can be defined, since *the content can only be in one state at
    any time*.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: 'More than source state can be selected. The two source states selected might
    not seem to make sense, given that the target is Draft. However, what events these
    choices account for are as follows:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: Changing a draft and saving, with it remaining a draft, so Draft ⇒ Draft
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changing published content and saving it, but now as unpublished content needing
    moderation again, so Published ⇒ Draft
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A similar peculiarity is true for the transitions of the Publish transition,
    because you might be (re)publishing already published content, or publishing draft
    content.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
- en: A benefit to this architecture is that while an article is published, a new
    version of it can be created as a draft and passed through the moderation states
    until it gets published, becoming the new default—and viewable—version.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
- en: Transitions
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We have already seen the Edit page for a transition, but this section is still
    worth looking at. You will note that there are multiple transitions defined with
    the source state being Published, as well as for the source state being Archived.
    Were you to add a few states, and if each of them could interact with multiple
    other states, this list of permutations could become lengthy. Not that this is
    a reason to not define additional states, but simply a mention that more planning
    might be in order than you might have otherwise thought.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: Workflow application
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'A workflow such as this one needs to have something to act upon. At the moment,
    this does not apply to any of the content structures available for moderation:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/96ed7a44-9be1-443d-a419-53516b42b3b0.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
- en: For our purposes, this workflow should apply to all articles, so let's click
    the Select button for Content types. In the resulting pop-up, check the box beside
    Articles and click Save. Then, click Save for this workflow.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: 'If you create an article now, you might have the option to save it as Draft
    or Published, as select options at the bottom of the page. If so, this is because
    you are an administrator or have been given this permission. Otherwise, you will
    only be able to save the content as draft. Those given the permission to moderate
    this content or to view it, unpublished, will see the following screenshot when
    viewing it:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/23a23d71-0529-4ca0-8733-bd3508db86f4.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
- en: This form allows the moderator to change the state of the content and add a
    log comment about the transition.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we have learned what modules are and their utility, their sources,
    and how to enable them. We have looked at an example of using each of three popular
    modules to provide capabilities that are not present otherwise.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will look at expanding the audience for our content
    by making it and our site's UI available in more languages via some of the internationalization
    features of Drupal.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探讨通过使我们的内容和网站的用户界面支持更多语言，利用Drupal的一些国际化特性来扩大我们内容的受众范围。
- en: ¡Hasta la vista!
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: ¡Hasta la vista!
