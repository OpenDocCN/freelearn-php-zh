["```php\n<?php\n\nnamespace app\\controllers;\n\nuse yii\\rest\\ActiveController;\n\nclass UserController extends ActiveController\n{\n    public $modelClass = 'app\\models\\User';\n}\n```", "```php\nreturn [\n    // [...],\n    'components' => [\n        // [...],\n            'urlManager' => [\n                'enablePrettyUrl' => true,\n                'enableStrictParsing' => true,\n                'showScriptName' => false,\n                'rules' => [\n                    ['class' => 'yii\\rest\\UrlRule', 'controller' => 'user'],\n               ],\n        ],\n    ]\n];\n```", "```php\nreturn [\n    // [...],\n    'components' => [\n        // [...],\n        'request' => [\n            'parsers' => [\n                'application/json' => 'yii\\web\\JsonParser',\n            ]\n        ]\n    ]\n];\n```", "```php\n$ curl -i -X HEAD https://www.example.com/users\n\n```", "```php\nHTTP/1.1 200 OK\nContent-Type: application/json; charset=UTF-8\nTransfer-Encoding: chunked\nConnection: keep-alive\nVary: Accept-Encoding\nX-Pagination-Total-Count: 4\nX-Pagination-Page-Count: 1\nX-Pagination-Current-Page: 1\nX-Pagination-Per-Page: 20\nLink: <https://www.example.com/users?page=1>; rel=self\nAccess-Control-Allow-Origin: *\n```", "```php\n$ curl â€“I -H \"Accept:application/json\" https://www.example.com/users | jq .\n[\n  {\n    \"updated_at\": 1442602004,\n    \"created_at\": 1442602004,\n    \"role_id\": 1,\n    \"last_name\": \"Joe\",\n    \"first_name\": \"Jane\",\n    \"password\": \"$2y$13$pc0TEJged1BwmqpGL7dywupNzG6bCBWRjBbDMzBXhv7FewvUR/qqm\",\n    \"email\": \"jane.doe@example.com\",\n    \"id\": 1\n  },\n  {...}\n]\n```", "```php\n$ curl -H \"Accept:application/json\" /\nhttps://www.example.com/users/1?fields=id,first_name,last_name | jq .\n\n```", "```php\n{\n  \"last_name\": \"Joe\",\n  \"first_name\": \"Jane\",\n  \"id\": 1\n}\n```", "```php\nclass User extends \\yii\\db\\ActiveRecord implements \\yii\\web\\IdentityInterface\n{\n    /**\n     * API safe fields\n     */\n    public function fields()\n    {\n        return [\n            'id',\n            'email_address' => 'email',\n            'first_name',\n            'last_name',\n            'full_name' => function($model) {\n                return $model->getFullName();\n            },\n            'updated_at',\n            'created_at'\n        ];\n    }\n}\n```", "```php\n$ curl -H \"Accept:application/json\" https://www.example.com/users/1 /\n| jq .\n\n```", "```php\n{\n  \"created_at\": 1442602004,\n  \"updated_at\": 1442602004,\n  \"full_name\": \"Jane Joe\",\n  \"last_name\": \"Joe\",\n  \"first_name\": \"Jane\",\n  \"email_address\": \"jane.doe@example.com\",\n  \"id\": 1\n}\n```", "```php\npublic function extraFields()\n{\n    // Expose the 'role' relation\n    return ['role'];\n}\n```", "```php\n$ curl -H \"Accept:application/json\" /\nhttps://www.example.com/users/1?expand=role | jq .\n\n```", "```php\n{\n  \"role\": {\n \"name\": \"User\",\n \"id\": 1\n },\n  \"created_at\": 1442602004,\n  \"updated_at\": 1442602004,\n  \"full_name\": \"Jane Joe\",\n  \"last_name\": \"Joe\",\n  \"first_name\": \"Jane\",\n  \"email_address\": \"jane.doe@example.com\",\n  \"id\": 1\n}\n```", "```php\n<?php\n\nnamespace app\\controllers;\n\nuse yii\\rest\\ActiveController;\n\nclass UserController extends ActiveController\n{\n    public $modelClass = 'app\\models\\User';\n\n public $serializer = [\n 'class' => 'yii\\rest\\Serializer',\n 'collectionEnvelope' => 'users',\n ];\n}\n```", "```php\n$ curl -H \"Accept:application/json\" https://www.example.com /users /\n| jq .\n\n```", "```php\n{\n \"_meta\": {\n \"perPage\": 20,\n \"currentPage\": 1,\n \"pageCount\": 2,\n \"totalCount\": 21\n },\n \"_links\": {\n \"self\": {\n \"href\": \"https://www.example.com/users?page=1\"\n },\n \"next\": {\n \"href\": \"https://www.example.com/users?page=2\"\n }\n\n },\n  \"users\": [\n    {\n      \"created_at\": 1442602004,\n      \"updated_at\": 1442602004,\n      \"full_name\": \"Jane Joe\",\n      \"last_name\": \"Joe\",\n      \"first_name\": \"Jane\",\n      \"email_address\": \"jane.doe@example.com\",\n      \"id\": 1\n    },\n    {...},\n    {...}\n  ]\n}\n```", "```php\n<?php\n\nnamespace app\\controllers;\n\nuse yii\\rest\\ActiveController;\n\nclass UserController extends ActiveController\n{\n    public $modelClass = 'app\\models\\User';\n\n    public function actions()\n    {\n        $actions = parent::actions();\n\n        // disable the \"delete\" and \"create\" actions\n        unset($actions['delete'], $actions['create']);\n        return $actions;\n    }\n}\n```", "```php\n[\n    'class' => 'yii\\rest\\UrlRule',\n    'controller' => 'user',\n    // 'only' => [ 'index' ], // Only allow index \n    'except' => ['delete', 'create', 'update'], // Disabled\n]\n```", "```php\n<?php\n\nnamespace app\\controllers;\n\nuse yii\\rest\\ActiveController;\n\nclass UserController extends ActiveController\n{\n\n    public function actions()\n    {\n        $actions = parent::actions();\n\n        // Customize the data provider preparation with the \"prepareDataProvider()\" method\n        $actions['index']['prepareDataProvider'] = [$this, 'prepareDataProvider'];\n\n        return $actions;\n    }\n\n    private function prepareDataProvider()\n    {\n        // Prepare a new data provider\n    }\n}\n```", "```php\n<?php\n\nnamespace app\\controllers;\nuse yii\\filters\\auth\\HttpBasicAuth;\nuse yii\\rest\\ActiveController;\n\nclass UserController extends ActiveController\n{\n    public function behaviors()\n    {\n        $behaviors = parent::behaviors();\n        $behaviors['authenticator'] = [\n            'class' => HttpBasicAuth::className(),\n        ];\n        return $behaviors;\n    }\n}\n```", "```php\n{\n    \"name\": \"Unauthorized\",\n    \"message\": \"You are requesting with an invalid credential.\",\n    \"code\": 0,\n    \"status\": 401,\n    \"type\": \"yii\\\\web\\\\UnauthorizedHttpException\"\n}\n```", "```php\npublic function behaviors()\n{\n    $behaviors = parent::behaviors();\n    $behaviors['authenticator'] = [\n        'auth'  => ['app\\models\\User', 'httpBasicAuth' ],\n        'class' => HttpBasicAuth::className(),\n    ];\n    return $behaviors;\n}\n```", "```php\n/**\n* Handle HTTP basic auth\n* @param string $email\n* @param string $password\n* @return static self\n*/\npublic function httpBasicAuth($email, $password)\n{\n    $model = static::findOne(['email' => $email]);\n    if ($model == NULL)\n        return NULL;\n\n    if (password_verify($password, $model->password))\n        return $model;\n\n    return NULL;\n}\n```", "```php\n<?php\n\nnamespace app\\controllers;\nuse yii\\filters\\auth\\QueryParamAuth;\n\nuse yii\\rest\\ActiveController;\n\nclass UserController extends ActiveController\n{\n    public function behaviors()\n    {\n        $behaviors = parent::behaviors();\n        $behaviors['authenticator'] = [\n            'tokenParam'  => 'token',\n            'class' => QueryParamAuth::className(),\n        ];\n        return $behaviors;\n    }\n}\n```", "```php\n/** \n * @inheritdoc\n */\npublic static function findIdentityByAccessToken($token, $type=null)\n{\n    return static::findOne(['access_token' => $token]);\n}\n```", "```php\n<?php\n\nnamespace app\\controllers;\nuse yii\\filters\\auth\\HttpBearerAuth;\n\nuse yii\\rest\\ActiveController;\n\nclass UserController extends ActiveController\n{    \n    public function behaviors()\n    {\n        $behaviors = parent::behaviors();\n        $behaviors['authenticator'] = [\n            'class' => HttpBearerAuth::className(),\n        ];\n        return $behaviors;\n    }\n}\n```", "```php\nHeaders:\n    Authorization: Bearer <token>\n```", "```php\n<?php\n\nnamespace app\\controllers;\nuse yii\\filters\\auth\\CompositeAuth;\nuse yii\\filters\\auth\\HttpBasicAuth;\nuse yii\\filters\\auth\\QueryParamAuth;\n\nuse yii\\rest\\ActiveController;\n\nclass UserController extends ActiveController\n{\n    public function behaviors()\n    {\n        $behaviors = parent::behaviors();\n        $behaviors['authenticator'] = [\n            'class' => CompositeAuth::className(),\n 'authMethods' => [\n HttpBasicAuth::className(),\n QueryParamAuth::className(),\n ],\n        ];\n        return $behaviors;\n    }\n}\n```", "```php\n<?php\n\nnamespace app\\filters\\auth;\n\nuse yii\\filters\\auth\\AuthMethod;\nuse yii\\web\\UnauthorizedHttpException;\n/**\n * HeaderParamAuth is an action filter that supports the authentication based on the access token passed through a query parameter.\n */\nclass HeaderParamAuth extends AuthMethod\n{\n    /**\n     * @var string the parameter name for passing the access token\n     */\n    public $tokenParam = 'x-auth-token';\n\n    /**\n     * @inheritdoc\n     */\n    public function authenticate($user, $request, $response)\n    {\n        $accessToken = $request->getHeaders()[$this->tokenParam];\n\n        if (is_string($accessToken))\n        {\n            $identity = $user->loginByAccessToken($accessToken, get_class($this));\n\n            if ($identity !== null)\n                return $identity;\n        }\n\n        if ($accessToken !== null)\n            $this->handleFailure($response);\n\n        return null;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public function handleFailure($response)\n    {\n        throw new UnauthorizedHttpException('The token you are using has is either invalid, or has expired. Please re-authenticate to continue your session.');\n    }\n}\n```", "```php\n<?php\n\nnamespace app\\controllers;\nuse app\\filters\\auth\\HeaderParamAuth;\n\nuse yii\\rest\\ActiveController;\n\nclass UserController extends ActiveController\n{\n    public function behaviors()\n    {\n        $behaviors = parent::behaviors();\n        $behaviors['authenticator'] = [\n            'class' => HeaderParamAuth::className(),\n        ];\n        return $behaviors;\n    }\n}\n```", "```php\n<?php\n\nnamespace app\\controllers;\nuse app\\filters\\auth\\HeaderParamAuth;\n\nuse yii\\rest\\ActiveController;\n\nclass UserController extends ActiveController\n{\n    public function behaviors()\n    {\n        $behaviors = parent::behaviors();\n        $behaviors['authenticator'] = [\n            'class' => HeaderParamAuth::className(),\n            'only' => [ 'delete', 'update', 'create' ]\n        ];\n        return $behaviors;\n    }\n}\n```", "```php\n/**\n * Checks the privilege of the current user.\n *\n * This method should be overridden to check whether the current user has the privilege\n * to run the specified action against the specified data model.\n * If the user does not have access, a [[ForbiddenHttpException]] should be thrown.\n *\n * @param string $action the ID of the action to be executed\n * @param \\yii\\base\\Model $model the model to be accessed. If null, it means no specific model is being accessed.\n * @param array $params additional parameters\n * @throws ForbiddenHttpException if the user does not have access\n */\npublic function checkAccess($action, $model = null, $params = [])\n{\n    // check if the user can access $action or $model\n    // throw ForbiddenHttpException if access should be denied\n}\n```", "```php\npublic function behaviors()\n{\n    return [\n        'verbs' => [\n            'class' => \\yii\\filters\\VerbFilter::className(),\n            'actions' => [\n                'index'  => ['get'],\n                'view'   => ['get'],\n                'create' => ['get', 'post'],\n                'update' => ['get', 'put', 'post'],\n                'delete' => ['post', 'delete'],\n            ],\n        ],\n    ];\n}\n```", "```php\npublic function behaviors()\n{\n    return [\n        'corsFilter' => [\n            'class' => \\yii\\filters\\Cors::className(),\n        ],\n    ];\n}\n```", "```php\npublic function behaviors()\n{\n    return [\n        'corsFilter' => [\n            'class' => \\yii\\filters\\Cors::className(),\n            'cors' => [\n                // Only allow https://www.example.com to execute against your domain in AJAX\n                'Origin' => ['https://www.example.com'],\n                // Only allow POST and DELETE methods from the domain\n                'Access-Control-Request-Method' => ['POST', 'DELETE'],\n                // Set cache control headers\n                'Access-Control-Max-Age' => 3600,\n                // Allow the X-Pagination-Current-Page header to be exposed to the browser.\n                'Access-Control-Expose-Headers' => ['X-Pagination-Current-Page'],\n            ],\n\n        ],\n    ];\n}\n```", "```php\n<?php\n\nnamespace app\\controllers;\nuse yii\\filters\\auth\\HttpBasicAuth;\nuse yii\\filters\\RateLimiter;\nuse yii\\rest\\ActiveController;\n\nclass UserController extends ActiveController\n{\n    public function behaviors()\n    {\n        $behaviors = parent::behaviors();\n        $behaviors['authenticator'] = [\n            'class' => HttpBasicAuth::className(),\n            'auth' => [ 'app\\models\\User', 'httpBasicAuth'],\n            'only' => [ 'delete', 'update', 'create', 'index']\n        ];\n        $behaviors['rateLimiter'] = [\n 'class' => RateLimiter::className(),\n 'enableRateLimitHeaders' => true,\n ];\n\n        return $behaviors;\n    }\n}\n```", "```php\n/**\n * Returns the rate limit\n * @param yii\\web\\Request $request\n * @param yii\\base\\Action $action\n * @return array\n */\npublic function getRateLimit($request, $action)\n{\n  return [100, 600];    \n}\n```", "```php\n/**\n * Returns the rate limit allowance\n * @param yii\\web\\Request $request\n * @param yii\\base\\Action $action\n * @return array\n */\npublic function loadAllowance($request, $action)\n{ \n    $allowance = 100; // Fetch the allowance from a datasource\n    return [$allowance, time()];\n}\n\n/**\n * Saves the rate limit allowance\n * @param yii\\web\\Request $request\n * @param yii\\base\\Action $action\n * @param integer $allowance\n * @param Integer $timestamp\n * @return array\n */\npublic function saveAllowance($request, $action, $allowance, $timestamp)\n{\n    // Update a NoSQL solution or a cache\n    return true;\n}\n```", "```php\n<?php\n\nnamespace app\\models;\n\nuse Yii;\nclass User extends \\yii\\db\\ActiveRecord implements \\yii\\web\\IdentityInterface, \\yii\\filters\\RateLimitInterface\n{\n\n    public function getRateLimit( $request, $action )\n    {\n        return [100, 600];    \n    }\n\n    public function loadAllowance( $request, $action )\n    {\n        return [100, time();\n    }\n\n    public function saveAllowance( $request, $action, $allowance, $timestamp )\n    {\n        return true;\n    }\n}\n```", "```php\nx-rate-limit-remaining: <remaining_rate_limts>\nx-rate-limit-limit: <rate_limit_upper_bound>\nx-rate-limit-reset: <seconds_until_rate_limit_reset>\n```", "```php\n<?php return [\n    // [...],\n    'components' => [\n        // [...],\n        'errorHandler' => [\n            'errorAction' => 'user/error',\n        ],\n        // [...]\n    ],\n];\n```", "```php\n<?php\n\nnamespace app\\controllers;\nuse yii\\rest\\ActiveController;\n\nclass UserController extends ActiveController\n{\n    public function actionError()\n    {\n        $exception = Yii::$app->errorHandler->exception;\n\n        if ($exception !== null)\n            return ['exception' => $exception];\n\n    }\n}\n```", "```php\n<?php\n\nnamespace app\\controllers;\n\nuse Yii;\n\nclass SiteController extends \\yii\\rest\\Controller\n{\n    public function actionIndex()\n    {\n        return [ 'foo' => 'bar'];\n    }\n}\n```", "```php\n$ curl â€“I -H \"Accept:application/json\" /\nhttps://www.example.com/site/index | jq .\n\n```", "```php\n{\n    \"foo\": \"bar\"\n}\n```", "```php\n{\n    \"status\": <http_status_code>,\n    \"message\": <exceptions_or_messages>,\n    \"response\": <response_data_from_controllers>\n}\n```", "```php\n<?php return [\n    // [...],\n    'components' => [\n        // [...],\n        'response' => [\n            'format'  => yii\\web\\Response::FORMAT_JSON,\n            'charset' => 'UTF-8',\n               'on beforeSend'  => function ($event) {\n                $response = $event->sender;\n\n                if ($response->data !== null)\n                {\n                    $return = ($response->statusCode == 200 ? $response->data : $response->data['message']);\n\n                    $response->data = [\n                        'success'   => ($response->statusCode === 200),\n                        'status'    => $response->statusCode,\n                        'response'  => $return\n                    ];\n                }\n            }\n        ],\n        // [...],\n    ]\n];\n```", "```php\n$ curl â€“I -H \"Accept:application/json\" /\nhttps://www.example.com/site/index | jq .\n\n```", "```php\n{\n    \"success\": true,\n    \"status\": 200,\n    \"response\": {\n        \"foo\": \"bar\"\n    }\n}\n```", "```php\n$ curl â€“I -H \"Accept:application/json\" /\nhttps://www.example.com/users | jq .\n\n```", "```php\n{\n    \"success\": true,\n    \"status\": 200,\n    \"response\": {\n        \"users\": [\n            {\n                \"id\": 1,\n                \"email_address\": \"jane.doe@example.com\",\n                \"first_name\": \"Jane\",\n                \"last_name\": \"Joe\",\n                \"full_name\": \"Jane Joe\",\n                \"updated_at\": 1442602004,\n                \"created_at\": 1442602004\n            },\n          {...},\n        ],\n        \"_links\": {\n            \"self\": {\n                \"href\": \"https://www.example.com/users?page=1\"\n            }\n        },\n        \"_meta\": {\n            \"totalCount\": 4,\n            \"pageCount\": 1,\n            \"currentPage\": 1,\n            \"perPage\": 20\n        }\n    }\n}\n```"]