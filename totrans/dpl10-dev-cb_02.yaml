- en: '2'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '2'
- en: Content Building Experience
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 内容构建体验
- en: As you know, Drupal is a content management system that excels in its editorial
    capabilities and content modeling. In this chapter, we will cover how to set up
    your content editing experience and add an editorial review workflow.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所知，Drupal 是一个在编辑能力和内容建模方面表现卓越的内容管理系统。在本章中，我们将介绍如何设置您的编辑体验并添加编辑审查工作流程。
- en: This chapter dives into creating custom types and harnessing different fields
    to create advanced structured content. We will walk through customizing the forms
    used for creating content and learn how to customize the content’s display. The
    next thing we will learn is how to build custom landing pages using the `Layout
    Builder` module. We’ll also learn how to add and manage content and utilize menus
    for linking to content. At the end of this chapter, you will be able to create
    a custom authoring experience for your Drupal site.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将深入探讨创建自定义类型并利用不同字段创建高级结构化内容。我们将逐步了解用于创建内容的表单的自定义方法，并学习如何自定义内容的显示。接下来，我们将学习如何使用
    `Layout Builder` 模块构建自定义落地页面。我们还将学习如何添加和管理内容，并利用菜单链接到内容。在本章结束时，您将为您的 Drupal 网站创建一个自定义的创作体验。
- en: 'So, let’s take a look at what topics we will cover in this chapter:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，让我们看看本章将涵盖哪些主题：
- en: Configuring the WYSIWYG editor
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置 WYSIWYG 编辑器
- en: Creating an editorial workflow with content moderation
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用内容审查创建编辑工作流程
- en: Creating a custom content type with custom fields
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建具有自定义字段的自定义内容类型
- en: Customizing the form display for editing content
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自定义编辑内容的表单显示
- en: Customizing the display output of content
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自定义内容的显示输出
- en: Using layouts to build landing pages
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用布局构建落地页面
- en: Creating menus and linking content
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建菜单和链接内容
- en: Using Workspaces to create content staging areas
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用工作区创建内容预览区域
- en: Configuring the WYSIWYG editor
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置 WYSIWYG 编辑器
- en: Drupal is integrated with `Editor` module provides an API to integrate WYSIWYG
    editors, although CKEditor (the default editor) contributed modules can provide
    integrations with other WYSIWYG editors.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Drupal 集成了 `Editor` 模块，它提供了一个 API 以集成 WYSIWYG 编辑器，尽管 CKEditor（默认编辑器）的贡献模块可以提供与其他
    WYSIWYG 编辑器的集成。
- en: Text formats control the formatting of content and the WYSIWYG editor configuration
    for content authors. The standard Drupal installation profile provides a fully
    configured text format with the enabled CKEditor. We will walk through the steps
    of recreating this text format.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 文本格式控制内容的格式化和内容作者的 WYSIWYG 编辑器配置。标准的 Drupal 安装配置文件提供了一个完全配置的文本格式，其中启用了 CKEditor。我们将逐步介绍重新创建此文本格式的步骤。
- en: In this recipe, we will create a new text format with a custom CKEditor WYSIWYG
    configuration.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将使用自定义 CKEditor WYSIWYG 配置创建一个新的文本格式。
- en: Getting ready
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Before getting started, make sure the `CKEditor` module is installed. This module
    is automatically installed with Drupal’s standard installation.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始之前，请确保已安装 `CKEditor` 模块。此模块随 Drupal 的标准安装自动安装。
- en: How to do it…
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Let’s create a new text format with a custom CKEditor WYSIWYG configuration:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个具有自定义 CKEditor WYSIWYG 配置的新文本格式：
- en: Visit **Configuration** from the administrative toolbar and head to **Text formats
    and editors** under the **Content** **Authoring** heading.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从管理工具栏中的 **配置** 进入，然后在 **内容** **创作** 标题下找到 **文本格式和编辑器**。
- en: Click on **Add text format** to begin creating the next text format.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **添加文本格式** 开始创建下一个文本格式。
- en: Enter a name for the text format, such as the Editor format.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为文本格式输入一个名称，例如编辑器格式。
- en: Select which roles have access to this format – this allows you to have granular
    control over what users can use when authoring content.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择哪些角色可以访问此格式 – 这允许您对用户在创作内容时可以使用的内容进行细粒度控制。
- en: Select **CKEditor** from the **Text editor** select list. The configuration
    form for **CKEditor** will then be loaded.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 **文本编辑器** 选择列表中选择 **CKEditor**。然后，将加载 **CKEditor** 的配置表单。
- en: 'You may now use an in-place editor to drag buttons onto the provided toolbar
    to configure your **CKEditor** toolbar:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您现在可以使用内联编辑器将按钮拖放到提供的工具栏中，以配置您的 **CKEditor** 工具栏：
- en: '![Figure 2.1 – The text format edit form](img/Figure_2.01_B18548.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.1 – 文本格式编辑表单](img/Figure_2.01_B18548.jpg)'
- en: Figure 2.1 – The text format edit form
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.1 – 文本格式编辑表单
- en: 'Select any of the **Enabled filters** options, as shown in *Figure 2**.2*,
    except for **Display any HTML as plain text**. That would be counterintuitive
    to using a WYSIWYG editor:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择任何 **已启用过滤器** 选项，如图 *图 2**.2* 所示，除了 **显示任何 HTML 为纯文本**。这会与使用 WYSIWYG 编辑器的目的相悖：
- en: '![Figure 2.2 – The Enabled filters checkboxes](img/Figure_2.02_B18548.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.2 – 启用的过滤器复选框](img/Figure_2.02_B18548.jpg)'
- en: Figure 2.2 – The Enabled filters checkboxes
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.2 – 启用的过滤器复选框
- en: Once you’re satisfied, click on **Save configuration** to save your configuration
    and create the text filter. It will now be available to users when adding content
    to rich text fields.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您满意，请点击 **保存配置** 以保存您的配置并创建文本过滤器。现在，当用户向富文本字段添加内容时，它将可供用户使用。
- en: How it works…
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: The `Filter` modules provide text formats that control how rich text fields
    are presented to the user. Drupal will render rich text saved in a text area based
    on the defined text format for the field. Text fields with “*formatted*” in their
    title will respect text format settings; others will render in plain text.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`Filter` 模块提供控制如何向用户展示富文本字段的文本格式。Drupal 将根据字段定义的文本格式渲染保存在文本区域中的富文本。标题中包含“*格式化*”的文本字段将遵守文本格式设置；其他将以纯文本形式渲染。'
- en: Important note
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: The text formats and editor’s screen warns of a security risk due to improper
    configuration. This is because you could grant an anonymous user access to a text
    format that allows full HTML or allows image sources to be from remote URLs. This
    may leave your site open to **Cross-Site Scripting** (**XSS**) attacks. A cross-site
    scripting attack is when attackers can inject malicious client-side scripts into
    your site.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 文本格式和编辑器屏幕会警告由于配置不当而存在的安全风险。这是因为您可能授予匿名用户访问允许完整 HTML 或允许图像来源来自远程 URL 的文本格式的权限。这可能会使您的网站容易受到
    **跨站脚本攻击（XSS**） 的攻击。跨站脚本攻击是指攻击者可以将恶意客户端脚本注入到您的网站中。
- en: The `Editor` module provides a bridge to WYSIWYG editors and text formats. It
    alters the text format form and rendering to allow the integration of WYSIWYG
    editor libraries. This allows each text format to have a configuration for its
    WYSIWYG editor.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '`Editor` 模块提供了一个连接到 WYSIWYG 编辑器和文本格式的桥梁。它修改了文本格式表单和渲染，以允许集成 WYSIWYG 编辑器库。这使得每个文本格式都可以为其
    WYSIWYG 编辑器配置。'
- en: Out of the box, the `Editor` module alone does not provide an editor. The `CKEditor`
    module works with the Editor API to enable the usage of the WYSIWYG editor.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，`Editor` 模块本身不提供编辑器。`CKEditor` 模块与 Editor API 一起工作，以启用 WYSIWYG 编辑器的使用。
- en: Contributed modules can provide support for other WYSIWYG editors. For instance,
    the `TinyMCE` module ([https://www.drupal.org/project/tinymce](https://www.drupal.org/project/tinymce))
    integrates Drupal with the `TinyMCE` editor (https://www.tiny.cloud/tinymce).
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 贡献的模块可以为其他 WYSIWYG 编辑器提供支持。例如，`TinyMCE` 模块 ([https://www.drupal.org/project/tinymce](https://www.drupal.org/project/tinymce))
    将 Drupal 与 `TinyMCE` 编辑器（https://www.tiny.cloud/tinymce）集成。
- en: There’s more…
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: Drupal provides granular control of how rich text is rendered and in extensible
    ways, which we will discuss further.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: Drupal 以细粒度方式提供对富文本渲染的控制，并以可扩展的方式，我们将在后面进一步讨论。
- en: Filter module
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 过滤器模块
- en: When string data is added to a field that supports text formats, the data is
    saved and preserved as it was originally entered. Enabled filters for a text format
    will not be applied until the content is viewed. Drupal works in such a way that
    it saves the original content and only filters on display.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 当将字符串数据添加到支持文本格式的字段时，数据将被保存并保留为原始输入时的状态。对于文本格式的启用过滤器将在内容查看时才应用。Drupal 以这种方式工作，即保存原始内容，仅在显示时进行过滤。
- en: With the `Filter` module enabled, you can specify how text is rendered based
    on the roles of the user who created the text. It is important to understand the
    filters that are applied to a text format that uses a WYSIWYG editor. For example,
    if you selected the **Display any HTML as plain text** option, the formatting
    done by the WYSIWYG editor would be stripped out when viewed.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `Filter` 模块启用的情况下，您可以指定根据创建文本的用户角色如何渲染文本。了解使用 WYSIWYG 编辑器的文本格式所应用的过滤器非常重要。例如，如果您选择了
    **显示任何 HTML 为纯文本** 选项，则当查看时，WYSIWYG 编辑器所做的格式化将被删除。
- en: Improved links
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 改进的链接
- en: A major component of WYSIWYG editing is the ability to insert links into other
    pieces of content or external sites. The default link button integrated with CKEditor
    allows for basic link embedding. This means that your content editors must know
    their internal content URLs ahead of time to link to them. A solution to this
    issue is the `Linkit` module at https://www.drupal.org/project/linkit.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: WYSIWYG 编辑的一个主要组成部分是能够将链接插入到其他内容或外部网站上。与 CKEditor 集成的默认链接按钮允许进行基本的链接嵌入。这意味着内容编辑必须在事先知道他们的内部内容
    URL 才能链接到它们。解决此问题的方案是位于 https://www.drupal.org/project/linkit 的 `Linkit` 模块。
- en: 'The `LinkIt` module can be installed with the following Composer and Drush
    commands:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用以下 Composer 和 Drush 命令安装 `LinkIt` 模块：
- en: '[PRE0]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The `Linkit` module provides a drop-in replacement for the default link functionality.
    It adds an auto-complete search for internal content and adds additional options
    for displaying the field. `Linkit` works by creating different profiles that allow
    you to control what content can be referenced, what attributes can be managed,
    and which users and roles can use a Linkit profile.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '`Linkit` 模块提供了对默认链接功能的直接替换。它添加了自动完成搜索内部内容，并为显示字段添加了额外的选项。`Linkit` 通过创建不同的配置文件来实现，这些配置文件允许您控制可以引用的内容、可以管理的属性以及哪些用户和角色可以使用
    `Linkit` 配置文件。'
- en: CKEditor plugins
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: CKEditor 插件
- en: The `CKEditor` module provides a plugin type called **CKEditorPlugin**. Plugins
    are small pieces of swappable functionality within Drupal. Plugins and plugin
    development will be covered in [*Chapter 8*](B18548_08.xhtml#_idTextAnchor264),
    *Plug and Play With Plugins*. This type provides integration between CKEditor
    and Drupal.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '`CKEditor` 模块提供了一个名为 **CKEditorPlugin** 的插件类型。插件是 Drupal 中的可交换功能的小块。插件和插件开发将在第
    *8 章*，*使用插件即插即用* 中介绍。此类型提供了 CKEditor 和 Drupal 之间的集成。'
- en: The image and link capabilities are plugins defined within the `CKEditor` module.
    Additional plugins can be provided through contributed projects or custom development.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图片和链接功能是在 `CKEditor` 模块内部定义的插件。额外的插件可以通过贡献项目或自定义开发提供。
- en: Refer to the `\Drupal\ckeditor5\Annotation\CKEditor5Plugin` class ([https://git.drupalcode.org/project/drupal/-/blob/10.0.x/core/modules/ckeditor5/src/Annotation/CKEditor5Plugin.php](https://git.drupalcode.org/project/drupal/-/blob/10.0.x/core/modules/ckeditor5/src/Annotation/CKEditor5Plugin.php))
    for the plugin definition and the `\Drupal\ckeditor5\Plugin\CKEditor5Plugin\ImageUpload`
    class (https://git.drupalcode.org/project/drupal/-/blob/10.0.x/core/modules/ckeditor5/src/Plugin/CKEditor5Plugin/ImageUpload.php)
    as a working example.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 参考类 `\Drupal\ckeditor5\Annotation\CKEditor5Plugin` ([https://git.drupalcode.org/project/drupal/-/blob/10.0.x/core/modules/ckeditor5/src/Annotation/CKEditor5Plugin.php](https://git.drupalcode.org/project/drupal/-/blob/10.0.x/core/modules/ckeditor5/src/Annotation/CKEditor5Plugin.php))
    以获取插件定义，以及 `\Drupal\ckeditor5\Plugin\CKEditor5Plugin\ImageUpload` 类 (https://git.drupalcode.org/project/drupal/-/blob/10.0.x/core/modules/ckeditor5/src/Plugin/CKEditor5Plugin/ImageUpload.php)
    作为工作示例。
- en: See also
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参考以下内容
- en: Refer to [*Chapter 8*](B18548_08.xhtml#_idTextAnchor264), *Plug and Play With
    Plugins*, for the CKEditor 5 documentation (https://www.drupal.org/docs/core-modules-and-themes/core-modules/ckeditor-5-module).
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 参考第 *8 章*，*使用插件即插即用*，以获取 CKEditor 5 文档（https://www.drupal.org/docs/core-modules-and-themes/core-modules/ckeditor-5-module）。
- en: Creating an editorial workflow with content moderation
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建带有内容审查的编辑工作流程
- en: Many organizations have an editorial workflow that must be followed before content
    can be published on the website. The `Content Moderation` module allows content
    created in Drupal to go through an editorial process before it is published. In
    this recipe, we will create a content moderation workflow that puts content in
    a draft state and then reviews, approves, and publishes it. The content remains
    in a draft state and is hidden from site visitors until it is published.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 许多组织在内容可以在网站上发布之前必须遵循编辑工作流程。`Content Moderation` 模块允许在 Drupal 中创建的内容在发布之前经过编辑过程。在这个菜谱中，我们将创建一个内容审查工作流程，将内容置于草稿状态，然后进行审查、批准和发布。内容将保持草稿状态，直到发布之前对网站访客隐藏。
- en: Getting ready
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In this recipe, we will be using the standard installation, which provides the
    Article content type. Any content type will suffice.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将使用标准安装，它提供了文章内容类型。任何内容类型都足够使用。
- en: How to do it…
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'Begin by installing the `Content Moderation` module and its dependent module,
    `Workflows`:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先安装 `Content Moderation` 模块及其依赖模块 `Workflows`：
- en: '[PRE1]'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Visit **Configuration** and then **Workflows**. This page lists all configured
    content moderation workflows. Click **Add workflow** to create a new workflow.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问 **配置** 然后是 **工作流程**。此页面列出了所有配置的内容审查工作流程。点击 **添加工作流程** 创建一个新的工作流程。
- en: In the **Label** field, give it a label of **Approval workflow** and select
    **Content moderation** for **Workflow type**.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **标签** 字段中，给它一个标签为 **审批工作流程** 并选择 **内容审查** 作为 **工作流程类型**。
- en: The workflow has two default states of **Draft** and **Published**. We need
    to add **Review** and **Approval** states. For each of our new states, click the
    **Add a new state** link. Fill in the **State** label and press **Save**. Leave
    the **Published** and **Default revision** checkboxes unchecked. Those should
    only be used for a published state.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 工作流有两个默认状态：**草稿**和**已发布**。我们需要添加**审查**和**批准**状态。为我们的每个新状态，点击**添加新状态**链接。填写**状态**标签并按**保存**。不选中**已发布**和**默认修订**复选框。那些应该只用于发布状态。
- en: Rearrange the states’ ordering so that it is **Draft**, **Review**, **Approval**,
    **Published**. Press **Save** at the bottom of the form so that our ordering is
    saved.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调整状态的顺序，使其为**草稿**、**审查**、**批准**、**已发布**。在表单底部按**保存**，以便保存我们的顺序。
- en: Next, we need to create a transition to move a **Draft** to **Review**. Click
    **Add a new transition**. Set the **Transition** label to **Ready for review**.
    Select **Draft as a From state**. Then, select **Review as the To state** and
    press **Save**.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要创建一个将**草稿**移动到**审查**的转换。点击**添加新转换**。将**转换**标签设置为**准备审查**。选择**草稿**作为**起始状态**。然后，选择**审查**作为**目标状态**并按**保存**。
- en: Now, we will create the Review to Approval transition. Click **Add a new transition**.
    Set the **Transition** label to **Needs approval**. Select **Review as a From
    state**. Then, select **Approval as the To state** and press **Save**.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将创建从“审查”到“批准”的转换。点击**添加新转换**。将**转换**标签设置为**需要批准**。选择**审查**作为**起始状态**。然后，选择**批准**作为**目标状态**并按**保存**。
- en: We must edit the default Publish transition. Uncheck **Draft from the From checkboxes**
    and select **Approval**.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们必须编辑默认的发布转换。取消选中**从**复选框中的**草稿**，并选择**批准**。
- en: Finally, we must assign this workflow to content entities. Under **This workflow
    applies to**, look for **Content types**. Press **Select** and a dialog will open.
    Check **Article**, then press **Save** in the dialog.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们必须将此工作流分配给内容实体。在**此工作流适用于**下，查找**内容类型**。按**选择**，将打开一个对话框。选中**文章**，然后在对话框中按**保存**。
- en: Press **Save** at the bottom of the form. Our content moderation workflow is
    now complete!
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在表单底部按**保存**。我们的内容审查工作流现在已完成！
- en: How it works…
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'Without `Content Moderation`, publishable content entities only have two states:
    unpublished or published. There also are no permissions to control who can make
    an unpublished piece of content published or vice versa. `Content Moderation`
    solves this problem.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 没有使用`Content Moderation`，可发布的内容实体只有两种状态：未发布或已发布。也没有权限来控制谁可以将未发布的内容发布或反之亦然。`Content
    Moderation`解决了这个问题。
- en: The `Workflows` module provides an API for defining states and transitions.
    It is up to modules such as `Content Moderation` to provide Workflow Type plugins
    to bring meaningful functionality. The `Content Moderation` module integrates
    with the revision capabilities of Drupal content entities.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '`Workflows`模块提供了一个定义状态和转换的API。模块如`Content Moderation`负责提供工作流类型插件以实现有意义的函数。`Content
    Moderation`模块与Drupal内容实体的修订功能集成。'
- en: When editing a content entity that uses `Content Moderation`, there will be
    a **Moderation State** field. This field contains the states that a piece of content
    can transition to, based on the current user’s permissions.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 当编辑使用`Content Moderation`的内容实体时，将有一个**审查状态**字段。此字段包含基于当前用户权限，内容可以转换到的状态。
- en: See also
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参考信息
- en: 'Content Moderation module documentation on [Drupal.org](https://Drupal.org):
    https://www.drupal.org/docs/8/core/modules/content-moderation/overview'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Drupal.org](https://Drupal.org)上的`Content Moderation`模块文档：https://www.drupal.org/docs/8/core/modules/content-moderation/overview'
- en: 'Workflows module documentation on `Drupal.org`: [https://www.drupal.org/docs/8/core/modules/workflows/overview](https://www.drupal.org/docs/8/core/modules/workflows/overview)'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Drupal.org`上的Workflows模块文档：[https://www.drupal.org/docs/8/core/modules/workflows/overview](https://www.drupal.org/docs/8/core/modules/workflows/overview)'
- en: Creating a custom content type with custom fields
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建带有自定义字段的自定义内容类型
- en: Drupal excels in the realm of content management by allowing different types
    of content. In this recipe, we will walk you through creating a custom content
    type. We will create a Services type that has some basic fields and can be used
    in a scenario that brings attention to a company’s provided services.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: Drupal在内容管理领域表现出色，它允许不同类型的内容。在本教程中，我们将向您展示如何创建一个自定义内容类型。我们将创建一个包含一些基本字段并可用于强调公司提供服务的场景的“服务”类型。
- en: You will also learn how to add fields to a content type in this recipe, which
    generally goes hand in hand with making a new content type on a Drupal site.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 您还将学习如何在本食谱中将字段添加到内容类型中，这通常与在Drupal网站上创建新的内容类型相辅相成。
- en: How to do it…
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: Go to **Structure** and then **Content types**. Click on **Add content type**
    to begin creating a new content type.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往**结构**然后**内容类型**。点击**添加内容类型**以开始创建新的内容类型。
- en: Enter `Services` as the name, and an optional description.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入`服务`作为名称，以及可选的描述。
- en: Select **Display settings** and uncheck the **Display author and date information**
    checkbox. This will hide the author and submitted time from services pages.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**显示设置**，取消勾选**显示作者和日期信息**复选框。这将隐藏作者和提交时间从服务页面。
- en: Click on the **Save and manage fields** button to save the new content type
    and manage its fields.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存和管理字段**按钮以保存新的内容类型并管理其字段。
- en: By default, new content types have a **Body** field automatically added to them.
    We will keep this field in place.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 默认情况下，新内容类型会自动添加一个**正文**字段。我们将保留此字段。
- en: We will add a field that will provide a way to enter a marketing headline for
    the service. Click on **Add field**.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将添加一个字段，为服务提供输入营销标题的方式。点击**添加字段**。
- en: Select **Text (plain)** from the dropdown and enter **Marketing headline** as
    the label.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从下拉菜单中选择**文本（纯文本）**，并将标签设置为**营销标题**。
- en: Important note
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: The **Text (plain)** option is a regular text field. The **Text (formatted)**
    option will allow you to use text formats on the displayed text in the field.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '**文本（纯文本）**选项是一个常规文本字段。**文本（格式化）**选项将允许您在字段中显示的文本上使用文本格式。'
- en: Click on **Save field settings** on the next form. On the following form, click
    on **Save settings** to finish adding the field.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一个表单上点击**保存字段设置**。在随后的表单上，点击**保存设置**以完成字段的添加。
- en: The field has now been added, and content of this type can be created.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 字段已添加，现在可以创建此类内容。
- en: How it works…
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: In Drupal, content entities can have different bundles. A bundle refers to a
    different type of that entity type. The word *bundle* comes from it being a bundle
    of fields since each bundle of a content entity type can have different fields.
    When working with nodes, they are synonymous with content, and bundles for nodes
    are referred to as content types.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在Drupal中，内容实体可以有不同的包。包指的是该实体类型的不同类型。这个词“包”来源于它是一组字段，因为每个内容实体类型的包都可以有不同的字段。当处理节点时，它们与内容同义，节点的包被称为内容类型。
- en: When a content type is created, a default body field is created for it. This
    is performed by calling the `node_add_body_field()` function in the `node.module`
    file. It is a great reference point for those who wish to see the steps for programmatically
    defining a bundle field outside of the user interface.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 当创建内容类型时，会为其创建一个默认的正文字段。这是通过在`node.module`文件中调用`node_add_body_field()`函数来完成的。对于那些希望在用户界面之外程序定义包字段的人来说，这是一个很好的参考点。
- en: Fields can only be managed or added if the `Field UI` module is enabled. The
    `Field UI` module exposes the **Manage Fields**, **Manage Form Display**, and
    **Manage Display** options for entities, such as **Nodes**, **Blocks**, and **Taxonomy
    Terms**.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 只有启用`Field UI`模块，才能管理或添加字段。`Field UI`模块为实体，如**节点**、**块**和**分类术语**，公开了**管理字段**、**管理表单显示**和**管理显示**选项。
- en: Customizing the form display for editing content
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自定义编辑内容的表单显示
- en: Form modes allow a site administrator to customize the edit form when modifying
    a content entity. In the case of nodes, you can rearrange the order of fields
    and change the form elements used for a fields node edit form. There is also the
    `Field Group` module. The `Field Group` module allows you to group fields into
    fieldsets.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 表单模式允许网站管理员在修改内容实体时自定义编辑表单。在节点的情况下，您可以重新排列字段的顺序并更改用于字段节点编辑表单的表单元素。还有一个名为`Field
    Group`的模块。`Field Group`模块允许您将字段分组到字段集中。
- en: In this recipe, we will install `Field Group` and modify the form display to
    create an `Article` content type.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在本食谱中，我们将安装`Field Group`模块并修改表单显示以创建`文章`内容类型。
- en: How to do it…
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'First, we must add the `Field Group` module to the Drupal site using Composer
    and then install it with Drush:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们必须使用Composer将`Field Group`模块添加到Drupal站点，然后使用Drush安装它：
- en: '[PRE2]'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: To customize the form’s display mode, go to **Structure** and then **Content
    Types**.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要自定义表单的显示模式，请前往**结构**然后**内容类型**。
- en: We will modify the Article content type’s form. Click on and expand the **Operations**
    button and select **Manage** **form display**.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将修改文章内容类型的表单。点击并展开**操作**按钮，然后选择**管理****表单显示**。
- en: Click **Add field group** to begin adding a new field group.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**添加字段组**以开始添加新的字段组。
- en: Select **Details Sidebar** from **Add a new group**, give this a **Label** of
    **Metadata**, and click **Save** and continue.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**添加新组**中选择**详细信息侧边栏**，给这个一个**标签**为**元数据**，然后点击**保存**并继续。
- en: Press **Create group** on the next form and use the default values to finish
    creating the group.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一个表单上点击**创建组**，并使用默认值来完成创建组。
- en: Drag the newly created **Metata** group (as shown in *Figure 2**.3*) up from
    the **Disabled** section so that is it enabled. Directly above the **Disabled**
    label is fine.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将新创建的**元数据**组（如图*图2**.3*所示）从**禁用**部分拖动到**启用**。直接在**禁用**标签上方即可。
- en: 'Take the **Tags** field and drag it so that it is nested under the **Metadata**
    group – below it, and slightly to the right:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**标签**字段拖动，使其位于**元数据**组下面——在其下方，并且稍微向右：
- en: '![Figure 2.3 – The Manage Display form with the Tags widget moved underneath
    the Metadata field group component](img/Figure_2.03_B18548.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![图2.3 – 管理显示表单，将标签小部件移动到元数据字段组组件下面](img/Figure_2.03_B18548.jpg)'
- en: Figure 2.3 – The Manage Display form with the Tags widget moved underneath the
    Metadata field group component
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.3 – 管理显示表单，将标签小部件移动到元数据字段组组件下面
- en: Click on the **Save** button at the bottom of the page to save your changes.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击页面底部的**保存**按钮以保存您的更改。
- en: 'Go to **Create a New Article**; you will find the **Metadata** tab in the sidebar,
    which contains the **Tags** field:'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往**创建新文章**；您将在侧边栏中找到**元数据**标签，其中包含**标签**字段：
- en: '![Figure 2.4 – The Article edit form, with the Tags element in the sidebar](img/Figure_2.04_B18548.jpg)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![图2.4 – 文章编辑表单，标签元素在侧边栏中](img/Figure_2.04_B18548.jpg)'
- en: Figure 2.4 – The Article edit form, with the Tags element in the sidebar
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.4 – 文章编辑表单，标签元素在侧边栏中
- en: How it works…
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何工作...
- en: When a content entity form is built, the form is aware of the display mode to
    be used. Then, it invokes the display mode to build the components for each field
    using the specified field widgets.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 当构建内容实体表单时，表单会知道要使用的显示模式。然后，它调用显示模式，使用指定的字段小部件为每个字段构建组件。
- en: This allows you to customize specific parts of the form without having to replace
    the entire form. Developers can create new field widgets or leverage ones from
    contributed modules to enhance the functionality of forms.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 这允许您在不替换整个表单的情况下自定义表单的特定部分。开发者可以创建新的字段小部件或利用贡献模块中的小部件来增强表单的功能。
- en: '`Field Group` does not create field widgets, but a new structure inside of
    the form display. It will then arrange field widgets into groupings. This provides
    a more organized content editing experience.'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '`字段组`不会创建字段小部件，而是在表单显示内部创建一个新的结构。然后，它将字段小部件排列成组。这提供了更组织化的内容编辑体验。'
- en: There’s more…
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容...
- en: We will discuss more items for managing the form of a content entity in the
    following section.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将讨论更多关于管理内容实体表单的内容。
- en: Managing form display modes
  id: totrans-124
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 管理表单显示模式
- en: Additional form display modes can be added by visiting **Structure** and then
    **Display Modes** under **Form Modes**. Each content entity type has a hidden
    default form mode that always exists. Additional form display modes can be added
    and configured using the display management form.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 通过访问**结构**下的**显示模式**，可以在**表单模式**中添加额外的表单显示模式。每个内容实体类型都有一个隐藏的默认表单模式，它始终存在。可以通过显示管理表单添加和配置额外的表单显示模式。
- en: On their own, these forms and their configured field widgets are not directly
    integrated with Drupal. Using custom code, or even contributed projects, they
    can be used to embed for special uses.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 这些表单及其配置的字段小部件本身并不直接与Drupal集成。使用自定义代码，甚至贡献的项目，它们可以用于嵌入特殊用途。
- en: For instance, there is the Register form mode for users. The user registration
    form is built using this display mode and the configured widgets instead of what
    is normally available when editing an existing user.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，有用户注册表单模式。用户注册表单是使用此显示模式和配置的小部件构建的，而不是在编辑现有用户时通常可用的内容。
- en: Customizing the display output of content
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自定义内容显示输出
- en: Drupal provides display view modes that allow you to customize the fields and
    other properties attached to an entity. In this recipe, we will adjust the teaser
    display mode of an `Article` content type. Each field or property has controls
    for displaying the label, the format to display the information in, and additional
    settings for the format.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: Drupal提供了显示视图模式，允许您自定义附加到实体的字段和其他属性。在本教程中，我们将调整`文章`内容类型的摘要显示模式。每个字段或属性都有用于显示标签、显示信息的格式以及格式的额外设置的控件。
- en: Harnessing view displays allows you to have full control over how content is
    viewed on your Drupal site.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 利用视图显示可以让您完全控制内容在您的Drupal网站上如何被查看。
- en: How to do it…
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Now, it is time to customize the form display mode by navigating to **Structure**
    and then **Content Types**.
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，是时候通过导航到**结构**然后**内容类型**来定制表单显示模式了。
- en: We will modify the `Article` content type’s display. Click on the drop button
    arrow and select **Manage display**.
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将修改`文章`内容类型的显示。点击下拉按钮箭头并选择**管理显示**。
- en: Click on the **Teaser view mode** option to modify it. **Teaser view mode**
    is used in node listings, such as the default home page.
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**摘要视图模式**选项来修改它。**摘要视图模式**用于节点列表，例如默认主页。
- en: Drag the **Tags** field to the hidden section. The tags on an article will no
    longer be displayed when viewing a **Teaser** **view mode**.
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**标签**字段拖到隐藏部分。在查看**摘要** **视图模式**时，文章上的标签将不再显示。
- en: Click on the settings cog icon for the `600` to `300`.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击`600`到`300`的设置齿轮图标。
- en: Click on **Save** to save all the changes that you have made.
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存**以保存您所做的所有更改。
- en: View the home page and review the changes that have taken effect.
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看主页并审查已生效的更改。
- en: How it works…
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The default rendering system for an entity uses view displays. View display
    modes are configuration entities. Since view display modes are configuration entities,
    they can be exported using configuration management.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 实体的默认渲染系统使用视图显示。视图显示模式是配置实体。由于视图显示模式是配置实体，因此可以使用配置管理进行导出。
- en: When a content entity is rendered, the view display goes through each field
    formatter configured in the display. The field formatter is the option chosen
    from the **Format** property of the **Manage Display** form and identifies what
    code should be used to render the field value. The field value is retrieved from
    the entity and passed to the field formatter plugin that has been instantiated
    with the configuration provided to the view display. This collection of render
    data is then passed through the rest of Drupal’s render pipeline.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 当内容实体被渲染时，视图显示会遍历显示中配置的每个字段格式化器。字段格式化器是从**管理显示**表单的**格式**属性中选择的选项，它标识了用于渲染字段值的代码。字段值从实体中检索出来，并传递给已使用提供给视图显示的配置实例化的字段格式化器插件。然后，将此渲染数据集合传递给Drupal的其余渲染管道。
- en: There’s more…
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多...
- en: We will discuss more items for managing the form of a content entity in the
    following section.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将讨论更多关于管理内容实体形式的项目。
- en: Managing view display modes
  id: totrans-144
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 管理视图显示模式
- en: Additional form display modes can be added by visiting **Structure** and then
    **Display Modes** under **View Modes**. Each content entity type has a hidden
    default view mode that always exists. Additional view display modes can be added
    and configured using the display management form.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过访问**结构**下的**显示模式**来添加额外的表单显示模式。每个内容实体类型都有一个隐藏的默认视图模式，它始终存在。可以通过显示管理表单添加和配置额外的视图显示模式。
- en: These view modes can then be leveraged when displaying content with views, the
    Rendered entity field formatter for entity references, or when rendering entities
    with custom code.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 这些视图模式可以在使用视图显示内容、实体引用的渲染实体字段格式化器或使用自定义代码渲染实体时被利用。
- en: Using layouts to build landing pages
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用布局构建落地页
- en: The `Layout Builder` module allows content creators to use a drag-and-drop interface
    to customize how content is displayed on a page. Unlike using field formatters
    in view display modes, this does not require a developer and can be customized
    for individual pieces of content. With `Layout Builder`, content creators select
    from different layouts available in the system and place blocks in them to build
    the page’s content. In this recipe, we will walk through installing `Layout Builder`
    and setting up the layout for the `Article` content type.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '`布局构建器`模块允许内容创建者使用拖放界面来自定义页面上的内容显示方式。与在视图显示模式中使用字段格式化器不同，这不需要开发者，并且可以为单个内容项进行自定义。使用`布局构建器`，内容创建者从系统中可用的不同布局中选择，并在其中放置块以构建页面内容。在本教程中，我们将介绍安装`布局构建器`并设置`文章`内容类型的布局。'
- en: Getting ready
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In this recipe, we will be using the standard installation, which provides the
    `Article` content type. Any content type will suffice.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将使用标准安装，它提供了`文章`内容类型。任何内容类型都适用。
- en: How to do it…
  id: totrans-151
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Begin by installing the `Layout Builder` module and its dependent module, `Layout
    Discovery`:'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，安装`布局构建器`模块及其依赖模块`布局发现`：
- en: '[PRE4]'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: We must opt into using `Layout Builder` for the display mode of our content
    type. Visit **Structure** and then **Content Types** and use the drop button for
    **Article** to click **Manage Display**.
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们必须选择使用`布局构建器`来显示我们内容类型的显示模式。访问**结构**然后**内容类型**，使用**文章**的下拉按钮点击**管理显示**。
- en: Find the section labeled **Layout options** and check the **Use Layout** **Builder**
    checkbox.
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找到标记为**布局选项**的部分并勾选**使用布局构建器**复选框。
- en: Click **Save** to enable **Layout Builder**.
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存**以启用**布局构建器**。
- en: The **Manage Display** form should now show a **Manage** **layout** button.
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，**管理显示**表单应显示**管理布局**按钮。
- en: Click the `Layout Builder` user interface to customize the **Article** layout.
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击`布局构建器`用户界面来自定义**文章**布局。
- en: By default, the **Show content preview** checkbox is turned on. Uncheck this
    checkbox to turn off the generated sample preview content.
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 默认情况下，**显示内容预览**复选框是勾选的。取消勾选此复选框以关闭生成的示例预览内容。
- en: Click **Add section** to create a new section and select **Two** **column layout**.
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**添加部分**以创建新部分并选择**两列布局**。
- en: Select **33%/67%** for the **Column** width and click **Add section**, leaving
    the administrative label empty.
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**33%/67%**作为**列宽**并点击**添加部分**，保留管理标签为空。
- en: Now that we have added our two-column section, we can move fields into those
    layout parts. Drag the **Image** field to the left part and the **Body** field
    to the right part of the new section.
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们已经添加了两个列的部分，我们可以将字段移动到这些布局部分。将**图片**字段拖到新部分的左侧，将**正文**字段拖到新部分的右侧。
- en: Click **Save** layout to save the changes.
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存布局**以保存更改。
- en: Without using code, we have now created a layout for Articles that places the
    image in a sidebar next to the article content.
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不使用代码，我们现在已为文章创建了一个布局，将图片放置在文章内容的侧边栏中。
- en: How it works…
  id: totrans-165
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: The `Layout Builder` module provides an alternative render system for entity
    types. Using `Layout Builder` is an opt-in process for each display mode of a
    content entity type. If the entity type’s display mode is not managed by `Layout
    Builder`, it falls back to the regular render system using field formatters.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '`布局构建器`模块为实体类型提供了一种替代渲染系统。使用`布局构建器`是内容实体类型每个显示模式的可选过程。如果实体类型的显示模式不由`布局构建器`管理，则回退到使用字段格式化器的常规渲染系统。'
- en: Layouts are provided by layout plugins, which have matching Twig templates.
    Modules and themes can define new templates that can be used. `Layout Builder`
    leverages blocks to display content. The kinds of blocks available to be embedded
    in `Layout Builder` are based on blocks available to the system.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 布局由布局插件提供，这些插件具有匹配的Twig模板。模块和主题可以定义新的模板供使用。`布局构建器`利用块来显示内容。`布局构建器`中可以嵌入的块类型基于系统可用的块。
- en: '`Layout Builder` also exposes each field on the content entity as a block,
    allowing you to place each field in a different section.'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '`布局构建器`还将内容实体上的每个字段暴露为块，允许您将每个字段放置在不同的部分。'
- en: Like custom nodes or other entity templates, if you make changes to the layout
    plugin or nested elements without updating the corresponding Twig templates for
    the layout, you may see things render incorrectly. Be sure to review the Twig
    template accordingly when making such changes.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 如同自定义节点或其他实体模板，如果你在未更新布局对应的Twig模板的情况下修改布局插件或嵌套元素，你可能会看到渲染不正确的内容。在做出此类更改时，务必相应地审查Twig模板。
- en: There’s more…
  id: totrans-170
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容…
- en: '`Layout Builder` was an exciting addition to Drupal when it first arrived and
    has many more features and customizations far beyond what was covered in this
    recipe.'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 当`布局构建器`首次加入Drupal时，它是一个令人兴奋的补充，并且具有许多更多功能和定制，远超本指南所涵盖的内容。
- en: Accessible
  id: totrans-172
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 可访问性
- en: The `Layout Builder` user interface went through rigorous accessibility testing.
    The entire `Layout Builder` user interface can be navigated using a keyboard or
    other accessibility devices.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '`布局构建器`用户界面经过了严格的可访问性测试。整个`布局构建器`用户界面可以使用键盘或其他辅助设备进行导航。'
- en: Custom layouts for each piece of content
  id: totrans-174
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 为每块内容定制布局
- en: When configuring the layout options, the `Layout Builder` user interface.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 在配置布局选项时，使用`布局构建器`用户界面。
- en: The layout override is also stored in field data attached to the content entity,
    making it tracked with revisions! That means new drafts can be created for a piece
    of content with layout changes and they can be published through `Content` `Moderation`
    workflows.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '布局覆盖也存储在附加到内容实体的字段数据中，这使得它随着修订版进行跟踪！这意味着可以为布局更改的内容创建新的草稿，并且可以通过`内容``审核`工作流程进行发布。 '
- en: Additional modules to extend Layout Builder
  id: totrans-177
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 扩展布局构建器的附加模块
- en: There are a copious number of modules that extend `Layout Builder` to customize
    its experience and provide default layouts. For instance, if you use the Bootstrap
    front-end framework, the **Bootstrap Layout Builder** ([https://www.drupal.org/project/bootstrap_layout_builder](https://www.drupal.org/project/bootstrap_layout_builder))
    module provides a user interface for building layouts that use Bootstrap’s styling.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多模块可以扩展`布局构建器`，以定制其体验并提供默认布局。例如，如果你使用Bootstrap前端框架，**Bootstrap Layout Builder**
    ([https://www.drupal.org/project/bootstrap_layout_builder](https://www.drupal.org/project/bootstrap_layout_builder))模块提供了一个用于构建使用Bootstrap样式的布局的用户界面。
- en: 'A list of modules that extend `Layout Builder` can be found on `Drupal.org`:
    [https://www.drupal.org/docs/8/core/modules/layout-builder/additional-modules](https://www.drupal.org/docs/8/core/modules/layout-builder/additional-modules).'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 扩展`布局构建器`的模块列表可以在`Drupal.org`上找到：[https://www.drupal.org/docs/8/core/modules/layout-builder/additional-modules](https://www.drupal.org/docs/8/core/modules/layout-builder/additional-modules)。
- en: See also
  id: totrans-180
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 相关内容
- en: 'Layout Builder module documentation on `Drupal.org`: [https://www.drupal.org/docs/8/core/modules/layout-builder](https://www.drupal.org/docs/8/core/modules/layout-builder)'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Drupal.org`上的布局构建器模块文档：[https://www.drupal.org/docs/8/core/modules/layout-builder](https://www.drupal.org/docs/8/core/modules/layout-builder)'
- en: Creating menus and linking content
  id: totrans-182
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建菜单和链接内容
- en: Drupal allows you to link content being authored to a specified menu on the
    website, generally the main menu. You can, however, create a custom menu to provide
    links to content. In this recipe, we will show you how to create a custom menu
    and link content to it. We will then place the menu as a block on the page, in
    the sidebar.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: Drupal允许你将正在编写的链接内容链接到网站上的指定菜单，通常是主菜单。然而，你可以创建自定义菜单以提供内容的链接。在本指南中，我们将向你展示如何创建自定义菜单并将内容链接到它。然后，我们将菜单作为一个块放置在页面的侧边栏中。
- en: Getting ready
  id: totrans-184
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: This recipe assumes that you have installed the standard installation profile
    and have the default node content types available for use. You should have some
    content created to create a link.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 本指南假设你已经安装了标准安装配置文件，并且有默认的节点内容类型可供使用。你应该有一些内容创建以创建链接。
- en: How to do it…
  id: totrans-186
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: Visit **Structure** and click on **Menus**.
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问**结构**并点击**菜单**。
- en: Click on **Add menu**.
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**添加菜单**。
- en: Provide a title of **Sidebar menu** and an optional summary and then click on
    **Save**.
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提供一个**侧边栏菜单**的标题，以及可选的摘要，然后点击**保存**。
- en: Once the menu has been saved, click on the **Add** **link** button.
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存菜单后，点击**添加**链接按钮。
- en: Enter a link title and then type in the title for a piece of content. The form
    will provide autocomplete suggestions for linkable content.
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入链接标题，然后输入内容的标题。表单将提供可链接内容的自动完成建议。
- en: Click on **Save** to save the menu link.
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存**以保存菜单链接。
- en: With the menu link saved, go to **Structure**, and then **Block layout**.
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存菜单链接后，转到**结构**，然后**块布局**。
- en: Click on `Sidebar menu` and click on **Place block**.
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 `侧边栏菜单` 并点击 **放置块**。
- en: In the following form, click on **Save block**.
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在以下表单中，点击 **保存块**。
- en: View your Drupal site by clicking on **Home** in the administration menu.
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击管理菜单中的 **首页** 来查看您的 Drupal 网站。
- en: How it works…
  id: totrans-197
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: Menus and links are part of Drupal core. The ability to make custom menus and
    menu links is provided through the `Menu UI` module. This module is enabled on
    the standard installation but may not be in others.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 菜单和链接是 Drupal 核心的一部分。创建自定义菜单和菜单链接的能力是通过 `Menu UI` 模块提供的。此模块在标准安装中已启用，但在其他安装中可能未启用。
- en: The Link input of the menu link form allows you to begin typing content titles
    and easily link them to existing content. It will automatically convert the title
    into the internal path for you. Link input also accepts a regular path, such as
    `/node/1` or an external path. You may use `<front>` to link to the home page,
    `<nolink>` to render a non-linked anchor tag, and `<button>` for a keyboard-accessible
    text-only link.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 菜单链接表单的链接输入允许您开始键入内容标题，并轻松地将它们链接到现有内容。它将自动将标题转换为内部路径。链接输入还接受常规路径，例如 `/node/1`
    或外部路径。您可以使用 `<front>` 链接到主页，使用 `<nolink>` 渲染非链接的锚点标签，以及使用 `<button>` 创建键盘可访问的纯文本链接。
- en: There’s more…
  id: totrans-200
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容…
- en: Links can be managed through the content edit form itself, which will be covered
    next.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 链接可以通过内容编辑表单本身进行管理，这将在下一部分介绍。
- en: Managing a contents menu link from its form
  id: totrans-202
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从其表单管理内容菜单链接
- en: A piece of content can be added to a menu from the add or edit form. The menu
    settings section allows you to toggle the availability of a menu link. The menu
    link title will reflect the content’s title by default.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从添加或编辑表单将内容添加到菜单中。菜单设置部分允许您切换菜单链接的可用性。菜单链接标题将默认反映内容的标题。
- en: The parent item allows you to decide which menu and which item it will appear
    under. By default, content types only have the main menu allowed. Editing a content
    type can allow for multiple menus or only choosing a custom menu.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 父项目允许您决定它将出现在哪个菜单以及哪个项目下。默认情况下，内容类型仅允许主菜单。编辑内容类型可以允许使用多个菜单或仅选择自定义菜单。
- en: This allows you to populate the main menu or complimentary menu without having
    to visit the menu management screens.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 这允许您在不访问菜单管理屏幕的情况下填充主菜单或辅助菜单。
- en: Using Workspaces to create content staging areas
  id: totrans-206
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Workspaces 创建内容预览区域
- en: The `Workspaces` module provides a new way of working with content on your Drupal
    site. It allows you to have a live version of your site’s content and parallel
    draft versions. Normal content workflows involve multiple pieces of content that
    may be drafted and published at various times. The `Workspaces` module provides
    a way to create and prepare published drafts that release at the same time.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '`Workspaces` 模块提供了一种在 Drupal 网站上处理内容的新方法。它允许您拥有网站内容的实时版本和并行草稿版本。常规的内容工作流程涉及多个内容片段，这些内容可能在不同时间被草稿和发布。`Workspaces`
    模块提供了一种创建和准备同时发布的草稿的方法。'
- en: For example, during a big sporting event, articles are prepared based on whichever
    team wins. Once the winner is announced, that version of the site’s content can
    be published. In this recipe, we will install the `Workspaces` module and walk
    through using site versions.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在大型体育赛事期间，文章是根据获胜的队伍准备的。一旦宣布获胜者，该版本网站的内容就可以发布。在这个菜谱中，我们将安装 `Workspaces` 模块并介绍如何使用网站版本。
- en: Important note
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: 'At the time of writing, the `Workspaces` module is an `Experimental` module.
    Modules that are marked as experimental are under active development and not considered
    stable. Experimental modules provide a way of adding new functionality to Drupal
    core more easily. You can read more about the experimental module policy on `Drupal.org`:
    [https://www.drupal.org/about/core/policies/core-change-policies/experimental/policy-and-list](https://www.drupal.org/about/core/policies/core-change-policies/experimental/policy-and-list).'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，`Workspaces` 模块是一个 `实验性` 模块。标记为实验性的模块正在积极开发中，并不被认为是稳定的。实验性模块提供了一种更轻松地向
    Drupal 核心添加新功能的方法。您可以在 `Drupal.org` 上了解更多关于实验性模块政策的信息：[https://www.drupal.org/about/core/policies/core-change-policies/experimental/policy-and-list](https://www.drupal.org/about/core/policies/core-change-policies/experimental/policy-and-list)。
- en: Getting ready
  id: totrans-211
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In this recipe, we will be using the Standard installation, which provides the
    `Basic Page` content type. Any content type will suffice.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将使用标准安装，它提供了 `基本页面` 内容类型。任何内容类型都适用。
- en: How to do it…
  id: totrans-213
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Begin by installing the `Workspaces` module:'
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先安装 `Workspaces` 模块：
- en: '[PRE5]'
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Visit your Drupal site; you will notice the **Live** tab on the right of the
    toolbar; this is the current workspace identifier.
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问您的 Drupal 网站；您会在工具栏的右侧注意到**Live**标签；这是当前工作区的标识符。
- en: Click on **Live** to open the **Workspaces** menu.
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**Live**以打开**工作区**菜单。
- en: Click on the Stage workspace’s name and then click **Confirm** in the modal
    asking if we would like to activate and switch to the Stage workspace.
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“Stage”工作区的名称，然后在弹出的模态窗口中点击**确认**，询问我们是否想要激活并切换到“Stage”工作区。
- en: Create three or four new basic pages while using the Stage workspace and be
    sure to check **Promoted to front page** in the **Promotion** **options** group.
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在使用“Stage”工作区的同时创建三到四个新基本页面，并确保在**推广****选项**组中勾选**推广到首页**。
- en: When you visit the front page of your Drupal site, you should see the pages
    you created in the front page list.
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当您访问 Drupal 网站的首页时，您应该会看到您在首页列表中创建的页面。
- en: Now, open your Drupal site in another browser, or private mode, where you are
    not logged in. You will see that the home page shows **No front-page content has
    been created yet.** This shows that the content is only published in the Stage
    workspace, not the live site.
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在另一个浏览器或私密模式下打开您的 Drupal 网站，您将看到主页显示**尚未创建任何首页内容**。这表明内容仅发布在“Stage”工作区，而不是在实时网站上。
- en: Back in your Drupal site, click on the **Stage** tab in your toolbar to open
    the workspace menu.
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 回到您的 Drupal 网站，点击工具栏中的**Stage**标签以打开工作区菜单。
- en: Click **Publish content** to begin publishing your Stage content into the Live
    site.
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**发布内容**以开始将您的Stage内容发布到Live网站。
- en: A confirmation form will appear. Click **Publish items to Live** to finish the
    process.
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将会弹出一个确认表单。点击**将项目发布到Live**以完成此过程。
- en: If you test your site in another browser, or private mode, again, you will see
    the home page now lists all your new pages!
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您在其他浏览器或私密模式下再次测试您的网站，您将看到主页现在列出了您所有的新页面！
- en: How it works…
  id: totrans-226
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The `Workspace` module uses the existing revision capabilities of content entities.
    Revisions are then tracked against a workspace until they are published to the
    Live workspace. The `Workspace` module also adds safeguards. Forms that manipulate
    site configuration cannot be saved unless in the Live workspace; the module displays
    a warning and disables the `Workspace` module only allows a piece of content to
    be edited in one workspace.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '`Workspace`模块使用内容实体现有的修订功能。修订随后会跟踪到工作区，直到它们发布到Live工作区。`Workspace`模块还增加了安全措施。除非在Live工作区中，否则无法保存修改网站配置的表单；该模块显示警告并禁用`Workspace`模块，只允许在一个工作区中编辑一个内容项。'
- en: Workspaces also have a user account associated with them. This allows segmented
    workspaces for specific users. This allows content creators to create a new workspace,
    but not view or modify another content creator’s workspace.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 工作区还与用户账户相关联。这允许为特定用户创建分段工作区。这允许内容创建者创建新的工作区，但不能查看或修改其他内容创建者的工作区。
- en: There’s more…
  id: totrans-229
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: The `Workspaces` module provides other user interfaces not covered in this recipe,
    and there is another way to use a workspace beyond just content.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '`Workspaces`模块提供了本食谱中未涵盖的其他用户界面，并且还有另一种使用工作区的方法，而不仅仅是内容。'
- en: When will Workspaces become a stable module?
  id: totrans-231
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 工作区何时将成为一个稳定的模块？
- en: 'Effort is being made to make the `Workspaces` module stable. These issues are
    tagged in the Drupal core issue queue as **WI critical** (short for **Workflow
    Initiative Critical**). The list of issues can be found here: [https://www.drupal.org/project/issues/search/drupal?status%5B%5D=Open&issue_tags_op=%3D&issue_tags=WI+critical](https://www.drupal.org/project/issues/search/drupal?status%5B%5D=Open&issue_tags_op=%3D&issue_tags=WI+critical).'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 正在努力使`Workspaces`模块变得稳定。这些问题已在 Drupal 核心问题队列中标记为**WI critical**（即**工作流倡议关键**）。问题列表可在此处找到：[https://www.drupal.org/project/issues/search/drupal?status%5B%5D=Open&issue_tags_op=%3D&issue_tags=WI+critical](https://www.drupal.org/project/issues/search/drupal?status%5B%5D=Open&issue_tags_op=%3D&issue_tags=WI+critical)。
- en: Managing content changes in a workspace
  id: totrans-233
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在工作区中管理内容更改
- en: When the workspace menu is open in the toolbar, you can click the **Manage workspace**
    link to see all of the active changes in the workspace. This makes it easier for
    a content manager to review what content has been modified in a workspace. It
    also allows for deleting those changes to revert to the original content.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 当工作区菜单在工具栏中打开时，您可以点击**管理工作区**链接以查看工作区中的所有活动更改。这使得内容管理员更容易审查工作区中已修改的内容。它还允许删除这些更改以恢复到原始内容。
- en: This overview is useful for reviewing all the changes that may be published
    to the Live workspace.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 本概述有助于回顾可能发布到实时工作空间的所有更改。
- en: Creating child workspaces
  id: totrans-236
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建子工作空间
- en: A workspace may also have a parent workspace. This allows you to maintain a
    centralized Stage workspace but forces content creators to have their child workspace
    under Stage. All content modifications can then merge into Stage instead of each
    contributor’s workspace publishing to Live.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 工作空间也可能有一个父工作空间。这允许您维护一个集中的预演工作空间，但迫使内容创建者在预演下拥有他们的子工作空间。所有内容修改都可以合并到预演，而不是每个贡献者的工作空间发布到实时。
- en: Using a workspace to test a new site redesign
  id: totrans-238
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用工作空间测试新的站点重新设计
- en: Drupal has a mechanism for determining the active theme, which, by default,
    is the default theme. Code can be written to override the current theme based
    on specific conditions. The `Workspace Theme` module ([https://www.drupal.org/project/workspace_theme](https://www.drupal.org/project/workspace_theme))
    does just that.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: Drupal有一个确定活动主题的机制，默认情况下是默认主题。可以编写代码根据特定条件覆盖当前主题。`工作空间主题`模块([https://www.drupal.org/project/workspace_theme](https://www.drupal.org/project/workspace_theme))正是如此。
- en: It adds a new field to a workspace that allows you to specify a different theme
    to be used when that workspace is active. This allows you to preview a site’s
    redesign with a new theme without making it the default theme on the production
    site, or purely relying on a test server.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 它为工作空间添加了一个新字段，允许您指定在激活该工作空间时使用不同的主题。这允许您使用新主题预览站点的重新设计，而无需将其设置为生产站点的默认主题，或者仅仅依赖于测试服务器。
- en: See also
  id: totrans-241
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: 'The Workspaces module documentation on `Drupal.org`: [https://www.drupal.org/docs/8/core/modules/workspace/](https://www.drupal.org/docs/8/core/modules/workspace/)'
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Drupal.org`上的工作空间模块文档：[https://www.drupal.org/docs/8/core/modules/workspace/](https://www.drupal.org/docs/8/core/modules/workspace/)'
