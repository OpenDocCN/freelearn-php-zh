- en: '10'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '10'
- en: Theming and Frontend Development
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 主题化和前端开发
- en: '**Theming** is the process through which we can affect the output of entities
    (nodes, users, taxonomy terms, media, and so on) with CSS, JavaScript, Twig templates,
    and HTML. Drupal comes with a handful of out-of-the-box themes to provide a basic
    look and feel after you install it. Olivero is the default site theme in Drupal
    10 and Claro provides the administration theme.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**主题化** 是一个过程，通过这个过程我们可以使用 CSS、JavaScript、Twig 模板和 HTML 影响实体的输出（节点、用户、分类术语、媒体等）。Drupal
    随带了一些开箱即用的主题，在安装后提供基本的视觉和感觉。Olivero 是 Drupal 10 的默认网站主题，Claro 提供了管理主题。'
- en: There are numerous options available on [Drupal.org](http://Drupal.org) that
    either provide a starting point for your own theme (Bootstrap, ZURB Foundation,
    or Barrio, for example) or a full ready-to-use solution. It is also possible to
    create your own custom theme from scratch.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [Drupal.org](http://Drupal.org) 上有大量选项可供选择，这些选项要么为您自己的主题提供一个起点（例如 Bootstrap、ZURB
    Foundation 或 Barrio），要么提供一个完整的即用型解决方案。您还可以从头开始创建自己的自定义主题。
- en: Everything you see on the screen after a page has loaded in Drupal has gone
    through the theming and rendering pipeline. This means that you can customize
    the theme that you see and control its markup and styling. Understanding how Drupal
    theming works will make you a more effective developer and this chapter will help
    you do so.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Drupal 页面加载后，屏幕上显示的所有内容都经过了主题化和渲染管道。这意味着您可以自定义您看到的主题，并控制其标记和样式。了解 Drupal 主题化工作原理将使您成为一个更有效的开发者，本章将帮助您做到这一点。
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍以下食谱：
- en: Creating a custom theme to style your Drupal site
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个自定义主题以美化您的 Drupal 网站
- en: Adding CSS and JavaScript to your theme
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 CSS 和 JavaScript 添加到您的主题中
- en: Using Twig templates in your theme
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在您的主题中使用 Twig 模板
- en: Delivering responsive images
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 交付响应式图片
- en: Compiling CSS and JavaScript pre- and post-processors with Laravel Mix
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Laravel Mix 编译 CSS 和 JavaScript 预处理器和后处理器
- en: Using Laravel Mix to theme your Drupal site with live reloading
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Laravel Mix 通过实时重新加载为主题化 Drupal 网站提供
- en: Technical requirements
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'You can find the full code used in this chapter on GitHub: https://github.com/PacktPublishing/Drupal-10-Development-Cookbook/tree/main/chp10'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在 GitHub 上找到本章使用的完整代码：https://github.com/PacktPublishing/Drupal-10-Development-Cookbook/tree/main/chp10
- en: Creating a custom theme to style your Drupal site
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个自定义主题以美化您的 Drupal 网站
- en: Drupal provides a theme generator to create custom themes for Drupal sites based
    on the Starterkit theme. This provides all of the base CSS stylesheets, JavaScript
    files, and Twig templates to begin customizing the look and feel of your Drupal
    site. The theme generator is bundled with a developer command-line tool provided
    by Drupal core in `core/scripts/drupal`.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Drupal 提供了一个主题生成器，用于根据 Starterkit 主题创建 Drupal 网站的定制主题。这提供了所有基本的 CSS 样式表、JavaScript
    文件和 Twig 模板，以开始自定义 Drupal 网站的视觉和感觉。主题生成器包含在 Drupal 核心提供的开发者命令行工具中，位于 `core/scripts/drupal`。
- en: How to do it…
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点…
- en: 'The script for generating a theme needs to be executed in the `web` directory,
    so navigate there in your terminal:'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成主题的脚本需要在 `web` 目录中执行，因此请在您的终端中导航到那里：
- en: '[PRE0]'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Run the `generate-theme` command from the `core/scripts/drupal` script:'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 `core/scripts/drupal` 脚本运行 `generate-theme` 命令：
- en: '[PRE1]'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The `generate-theme` command accepts one argument – the machine name for the
    theme. You can also pass the `name` option to give it a human-readable name.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '`generate-theme` 命令接受一个参数 – 主题的机器名称。您还可以传递 `name` 选项来给它一个可读的名称。'
- en: 'After the theme has been generated, it will be available in the `web/themes`
    directory. The command will output something similar to the following:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 主题生成后，它将在 `web/themes` 目录中可用。命令将输出类似以下内容：
- en: '[PRE3]'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'You can now visit `/admin/appearance` and install your new theme:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您现在可以访问 `/admin/appearance` 并安装您的新主题：
- en: '![Figure 10.1 – Appearance management screen to install the new custom theme](img/Figure_10.01_B18548.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.1 – 安装新自定义主题的外观管理屏幕](img/Figure_10.01_B18548.jpg)'
- en: Figure 10.1 – Appearance management screen to install the new custom theme
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.1 – 安装新自定义主题的外观管理屏幕
- en: How it works…
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: The theme generator uses a *copy-and-forget* model, also known as *fork-and-forget*,
    with the Starterkit theme. This means your theme is a copy of the Starterkit theme
    as it was when you created your theme and cannot be broken if the Starterkit theme
    changes in later versions of Drupal.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 主题生成器使用 *复制并忘记* 模型，也称为 *分支并忘记*，与 Starterkit 主题一起。这意味着您的主题是您创建主题时 Starterkit
    主题的副本，如果 Starterkit 主题在 Drupal 的后续版本中发生变化，则您的主题不会损坏。
- en: This differs from other systems that need to be built upon child themes, such
    as WordPress, or built from scratch, such as *Laravel* and *Symfony*. This allows
    you to create a theme from a starting point and begin working without worrying
    about backward incompatibility due to changes to a base theme.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这与其他系统不同，这些系统需要建立在子主题之上，例如WordPress，或者从头开始构建，例如*Laravel*和*Symfony*。这允许你从一个起点创建主题并开始工作，无需担心由于基础主题的变化而导致的向后不兼容性。
- en: Other themes may act as a starterkit. They are contributed themes and can be
    specified using the `--``starterkit` option.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 其他主题可以作为起始套件。它们是贡献的主题，可以使用`--starterkit`选项指定。
- en: The next recipe will cover how to add new CSS stylesheets and JavaScript files
    to your Drupal site.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个配方将介绍如何向你的Drupal网站添加新的CSS样式表和JavaScript文件。
- en: There’s more
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容
- en: Next, we will dive into additional information on themes and the theme generator.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将深入了解主题和主题生成器的更多信息。
- en: Creating your starter kit theme
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建你的起始套件主题
- en: 'Very often, organizations have a shared starting base for their themes. You
    can define your own starterkit for creating new themes and leveraging existing
    setups. This is done by adding the `starterkit` key to your theme’s `info.yml`
    file:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 非常常见，组织机构在主题上有一个共享的起始基础。你可以定义自己的起始套件来创建新的主题并利用现有的设置。这是通过在你的主题的`info.yml`文件中添加`starterkit`键来完成的：
- en: '[PRE4]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: When this value is set to `true`, the theme generation command allows you to
    generate new themes using it. This flag is required since some themes are not
    intended to be starterkits with a generic base of features.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 当此值设置为`true`时，主题生成命令允许你使用它来生成新的主题。这个标志是必需的，因为有些主题并不打算以通用功能为基础的起始套件。
- en: Theme screenshots
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 主题截图
- en: Themes can provide a screenshot that shows up on the `screenshot.png` image
    file into the theme folder or a file specified in the `info.yml` file under the
    `screenshot` key.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 主题可以在主题文件夹中的`screenshot.png`图像文件或`info.yml`文件下的`screenshot`键中指定的文件中提供截图。
- en: Themes, logos, and favicons
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 主题、标志和favicon
- en: Drupal controls the site’s favicon and logo settings as a theme setting. These
    settings are active on a theme-by-theme basis and are not global. A `favicon.ico`
    placed in the theme’s directory will also be the default value of the `favicon`
    for the website. Themes can provide a default logo by providing `logo.svg` in
    the theme’s directory. An alternative logo file can be specified by using a `logo`
    key in the `info.yml` file with a path to the file.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: Drupal将网站的favicon和标志设置作为主题设置进行控制。这些设置基于主题，而不是全局的。主题目录中放置的`favicon.ico`也将是网站`favicon`的默认值。主题可以通过在主题目录中提供`logo.svg`来提供默认的标志。可以通过在`info.yml`文件中使用`logo`键并指定文件路径来指定替代的标志文件。
- en: 'You can change the site’s logo and favicon by navigating to **Appearance**
    and then clicking on **Settings** for your current theme. Unchecking the default
    checkboxes for the favicon and logo settings allows you to provide custom files:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过导航到**外观**然后点击当前主题的**设置**来更改网站的标志和favicon。取消选中favicon和标志设置的默认复选框允许你提供自定义文件：
- en: '![Figure 10.2 – Overview of the theme settings for logos and favicons](img/Figure_10.02_B18548.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![图10.2 – 标志和favicon主题设置概览](img/Figure_10.02_B18548.jpg)'
- en: Figure 10.2 – Overview of the theme settings for logos and favicons
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.2 – 标志和favicon主题设置概览
- en: See also
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 相关阅读
- en: 'Documentation for the Starterkit theme: [https://www.drupal.org/docs/core-modules-and-themes/core-themes](https://www.drupal.org/docs/core-modules-and-themes/core-themes)'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Starterkit主题的文档：[https://www.drupal.org/docs/core-modules-and-themes/core-themes](https://www.drupal.org/docs/core-modules-and-themes/core-themes)
- en: 'Documentation for theme generation: [https://www.drupal.org/docs/theming-drupal](https://www.drupal.org/docs/theming-drupal)'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主题生成的文档：[https://www.drupal.org/docs/theming-drupal](https://www.drupal.org/docs/theming-drupal)
- en: 'Documentation on the properties of a theme’s `info.yml` file: [https://www.drupal.org/node/2349827](https://www.drupal.org/node/2349827)'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于主题的`info.yml`文件属性的文档：[https://www.drupal.org/node/2349827](https://www.drupal.org/node/2349827)
- en: Adding CSS and JavaScript to your theme
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向你的主题添加CSS和JavaScript
- en: In Drupal, CSS stylesheets and JavaScript files are associated with libraries,
    and specific libraries are added to a page. This allows CSS style sheets and JavaScript
    files to be attached only when they are needed. Themes can be associated with
    libraries that must always be attached for global styling.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在Drupal中，CSS样式表和JavaScript文件与库相关联，并且特定的库被添加到页面中。这允许CSS样式表和JavaScript文件仅在需要时附加。主题可以与必须始终附加以进行全局样式的库相关联。
- en: In this recipe, we will update a theme’s `libraries.yml` file to register a
    CSS stylesheet and JavaScript file provided by the custom theme.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将更新主题的 `libraries.yml` 文件以注册由自定义主题提供的CSS样式表和JavaScript文件。
- en: Getting ready
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: This recipe uses a theme created by the theme generator as done in the *Creating
    a custom theme to style your Drupal* *site* recipe.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 此菜谱使用由主题生成器创建的主题，如 *创建自定义主题以美化你的Drupal* *站点* 菜谱中所述。
- en: How to do it…
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'First, create `css` and `js` directories in your theme’s directory that will
    contain the CSS stylesheets and JavaScript files, respectively:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，在你的主题目录中创建 `css` 和 `js` 目录，分别用于存放CSS样式表和JavaScript文件：
- en: '[PRE5]'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'In the `css` directory, add a `styles.css` file that will hold your theme’s
    CSS declarations. For the purpose of demonstration, add the following CSS declaration
    to `styles.css`:'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `css` 目录下，添加一个 `styles.css` 文件，该文件将包含你的主题CSS声明。为了演示目的，将以下CSS声明添加到 `styles.css`
    文件中：
- en: '[PRE6]'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'In the `js` directory, add a `scripts.js` file that will hold the theme’s JavaScript
    items. For the purpose of demonstration, add the following JavaScript code to
    `scripts.js`:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `js` 目录下，添加一个 `scripts.js` 文件，该文件将包含主题的JavaScript项。为了演示目的，将以下JavaScript代码添加到
    `scripts.js` 文件中：
- en: '[PRE9]'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: This script will print a message in the console when the script is loaded.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 此脚本将在脚本加载时在控制台打印一条消息。
- en: 'Modify the `mytheme.libraries.yml` file and add a `global-styling` library
    definition for your theme:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改 `mytheme.libraries.yml` 文件并添加一个 `global-styling` 库定义到你的主题中：
- en: '[PRE16]'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[PRE18]'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '[PRE19]'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[PRE20]'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '[PRE21]'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '[PRE22]'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[PRE23]'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '[PRE24]'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: The library’s name is `global-styling`. Libraries can define a `version` key
    and use `VERSION` as a default, which defaults to the most recent version of Drupal
    core. The `css/styles.css` file is added to the `theme` group for the `css` key.
    `js/script.js` is added to the `js` key.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 库的名称是 `global-styling`。库可以定义一个 `version` 键并使用 `VERSION` 作为默认值，它默认为Drupal核心的最新版本。`css/styles.css`
    文件被添加到 `theme` 组的 `css` 键。`js/script.js` 被添加到 `js` 键。
- en: The `dependencies` key specifies other libraries that must be present for JavaScript
    to work.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '`dependencies` 键指定了JavaScript运行必须存在的其他库。'
- en: 'Edit `mytheme.info.yml` to add the `global-styling` library to the `libraries`
    key:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑 `mytheme.info.yml` 以将 `global-styling` 库添加到 `libraries` 键：
- en: '[PRE25]'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '[PRE26]'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[PRE27]'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '[PRE28]'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '[PRE29]'
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '[PRE30]'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '[PRE31]'
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '[PRE32]'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Rebuild your Drupal site’s cache to rebuild the library definitions cache,
    triggering a rediscovery of the library definitions and theme information:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重建你的Drupal站点的缓存以重建库定义缓存，触发库定义和主题信息的重新发现：
- en: '[PRE33]'
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'View your Drupal site to verify that the background color has changed and that
    `Hello world!` has been printed to the browser’s console:'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看你的Drupal站点以验证背景颜色是否已更改，以及 `Hello world!` 是否已打印到浏览器的控制台：
- en: '![Figure 10.3 – Custom theme with a global library attached](img/Figure_10.03_B18548.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![图10.3 – 附加了全局库的自定义主题](img/Figure_10.03_B18548.jpg)'
- en: Figure 10.3 – Custom theme with a global library attached
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.3 – 附加了全局库的自定义主题
- en: How it works…
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: Drupal uses libraries to attach CSS stylesheets and JavaScript files to a page.
    This allows libraries to have dependencies on other libraries, such as base CSS
    stylesheets or JavaScript functionality. In this recipe, the `core/drupal` dependency
    ensures that `core/misc/drupal.js` is attached to the page. `core/misc/core.js`
    adds the global `Drupal` object, which allows you to define `behaviors`. Each
    entry in `Drupal.behaviors` has its `attach` function invoked whenever the page
    is loaded or AJAX events are triggered.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: Drupal使用库将CSS样式表和JavaScript文件附加到页面。这允许库依赖于其他库，例如基础CSS样式表或JavaScript功能。在这个菜谱中，`core/drupal`
    依赖项确保 `core/misc/drupal.js` 被附加到页面。`core/misc/core.js` 添加全局的 `Drupal` 对象，这使得你可以定义
    `behaviors`。每当页面加载或AJAX事件被触发时，`Drupal.behaviors` 中的每个条目都会调用其 `attach` 函数。
- en: Asset aggregation
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 资产聚合
- en: If Drupal is configured to aggregate assets, you will have to rebuild Drupal’s
    caches after each file time so that a new aggregate is created. This is done by
    visiting `/admin/config/development/performance` and unchecking the checkboxes
    for aggregation.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 如果Drupal配置为聚合资源，你将需要在每次文件更改后重建Drupal的缓存，以便创建一个新的聚合。这可以通过访问 `/admin/config/development/performance`
    并取消聚合的复选框来完成。
- en: '**Drupal’s CSS architecture** borrows concepts from the **Scalable and Modular
    Architecture for CSS** (**SMACSS**) system to organize CSS declarations. CSS styles
    are applied with cascading layers. Drupal libraries have different groups that
    a CSS stylesheet may be attached to, to control the ordering of when a stylesheet
    is loaded. The CSS groups are as follows:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '**Drupal的CSS架构**借鉴了**可伸缩和模块化CSS架构**（**SMACSS**）系统的概念来组织CSS声明。CSS样式通过级联层应用。Drupal库有不同的组，CSS样式表可以附加到这些组上，以控制样式表加载的顺序。CSS组如下：'
- en: '`base`: Intended for styles that target HTML elements'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`base`：用于针对HTML元素的样式'
- en: '`layout`: Intended for styles that lay out a page'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`layout`：用于布局页面的样式'
- en: '`component`: Intended for styles that apply to design components'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`component`：用于应用于设计组件的样式'
- en: '`state`: Intended for styles that apply states to components'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`state`：用于应用于组件的状态的样式'
- en: '`theme`: Intended for styles to customize components'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`theme`：用于自定义组件的样式'
- en: Themes may then specify libraries to be included on every page that the theme
    is used.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 主题可以指定在主题被使用的每个页面上包含的库。
- en: There’s more
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多
- en: We will explore more options with libraries in more detail in the next section.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在下一节中更详细地探讨使用库的更多选项。
- en: Library file options
  id: totrans-110
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 库文件选项
- en: '`{ }`) is used.'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '`{ }`)使用。'
- en: 'The following example, taken from `core.libraries.yml`, adds the `es6-promise`
    polyfill for the library:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例，取自`core.libraries.yml`，为库添加了`es6-promise` polyfill：
- en: '[PRE34]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: This library provides a compatibility layer for `weight` property allows you
    to control the priority of the library among other libraries. The `minified` property
    specifies that the file has already been minified and does not need to be processed
    by Drupal.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 该库提供了一个兼容层，允许您控制库在其它库中的优先级。`minified`属性指定文件已经过压缩，不需要由Drupal进行处理。
- en: 'The `preprocess` property supports a Boolean value. If a file has `preprocess:
    false`, it will not be aggregated with other files at the same time.'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '`preprocess`属性支持布尔值。如果一个文件有`preprocess: false`，它将不会与其他文件同时聚合。'
- en: Overriding and extending other libraries
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 覆盖和扩展其他库
- en: Themes can override libraries using the `libraries-override` and `libraries-extend`
    keys in their `info.yml` files. This allows themes to easily customize existing
    libraries without having to add the logic to conditionally remove or add their
    assets when a particular library is attached to a page.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 主题可以使用其`info.yml`文件中的`libraries-override`和`libraries-extend`键来覆盖库。这允许主题轻松地自定义现有库，而无需在特定库附加到页面时添加条件移除或添加其资产的逻辑。
- en: 'The `libraries-override` key can be used to replace an entire library, replace
    selected files in a library, remove an asset from a library, or disable an entire
    library. The following code will allow a theme to provide a custom jQuery UI theme:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '`libraries-override`键可以用来替换整个库，替换库中的选定文件，从库中移除资产，或禁用整个库。以下代码将允许主题提供自定义的jQuery
    UI主题：'
- en: '[PRE35]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: The `override` declaration mimics the original configuration. Specifying `false`
    will remove the asset; otherwise, a supplied path will replace that asset.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '`override`声明模仿了原始配置。指定`false`将移除资产；否则，提供的路径将替换该资产。'
- en: 'The `libraries-extend` key can be used to load additional libraries with an
    existing library. The following code will allow a theme to associate a CSS style
    sheet with selected jQuery UI declaration overrides without always including them
    in the rest of the theme’s assets:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '`libraries-extend`键可以用来加载与现有库一起使用的额外库。以下代码将允许主题将CSS样式表与选定的jQuery UI声明覆盖相关联，而无需始终将其包含在主题的其他资产中：'
- en: '[PRE36]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: The theme generated with the `starterkit` already has examples of `libraries-extend`.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`starterkit`生成的主题已经包含了`libraries-extend`的示例。
- en: Using a CDN or external resource as a library
  id: totrans-124
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用CDN或外部资源作为库
- en: Libraries also work with external resources, such as assets loaded over a CDN.
    This is done by providing a URL for the file location, along with selected file
    parameters.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 库还可以与外部资源一起工作，例如通过CDN加载的资产。这是通过提供文件位置的URL以及选定的文件参数来完成的。
- en: 'Here is an example of adding the Font Awesome font icon library from the `BootstrapCDN`
    provided by `jsDeliver`:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个从`BootstrapCDN`提供的`jsDeliver`中添加Font Awesome字体图标库的示例：
- en: '[PRE37]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '`remote` key describes the library as using external resources. While this
    key is not validated beyond its existence, it is best to define it with the external
    resource’s primary website:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '`remote`键描述了库使用外部资源。虽然此键的验证仅限于其存在，但最好使用外部资源的主要网站来定义它：'
- en: '[PRE38]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Like all libraries, `version` information is required. This should match the
    version of the external resource being added:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 与所有库一样，需要`version`信息。这应该与添加的外部资源的版本相匹配：
- en: '[PRE39]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'If a library defines the `remote` key, it also needs to define the `license`
    key. This defines the license name and the URL for the license, and checks whether
    it is GPL-compatible. If this key is not provided, `\Drupal\Core\Asset\Extension\LibraryDefinitionMissingLicenseException`
    will be thrown:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 如果库定义了`remote`键，它还需要定义`license`键。这定义了许可名称和许可的URL，并检查它是否与GPL兼容。如果没有提供此键，将抛出`\Drupal\Core\Asset\Extension\LibraryDefinitionMissingLicenseException`异常：
- en: '[PRE40]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Finally, specific external resources are added as normal. Instead of providing
    a relative file path, the external URL is provided.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，特定的外部资源以正常方式添加。而不是提供相对文件路径，提供外部URL。
- en: Manipulating libraries from hooks
  id: totrans-135
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 通过钩子操作库
- en: Modules can provide dynamic library definitions and alter libraries. A module
    can use the `hook_library_info()` hook to provide a library definition dynamically.
    This is not the recommended way to define a library, but it is provided for edge
    use cases.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 模块可以提供动态库定义和修改库。模块可以使用`hook_library_info()`钩子动态提供库定义。这不是定义库的推荐方式，但提供用于边缘用例。
- en: Modules cannot use `libraries-override` or `libraries-extend` and need to rely
    on the `hook_library_info_alter()` hook. You can read about this hook at `core/lib/Drupal/Core/Render/theme.api.php`
    or at [https://api.drupal.org/api/drupal/core!lib!Drupal!Core!Render!theme.api.php/function/hook_library_info_alter/10](https://api.drupal.org/api/drupal/core!lib!Drupal!Core!Render!theme.api.php/function/hook_library_info_alter/10).
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 模块不能使用`libraries-override`或`libraries-extend`，需要依赖于`hook_library_info_alter()`钩子。您可以在`core/lib/Drupal/Core/Render/theme.api.php`或[https://api.drupal.org/api/drupal/core!lib!Drupal!Core!Render!theme.api.php/function/hook_library_info_alter/10](https://api.drupal.org/api/drupal/core!lib!Drupal!Core!Render!theme.api.php/function/hook_library_info_alter/10)中了解此钩子。
- en: Placing JavaScript in the header
  id: totrans-138
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将JavaScript放在页眉
- en: By default, Drupal ensures that JavaScript is placed last on the page. This
    improves the page’s load performance by allowing the critical portions of the
    page to load first. Placing JavaScript in the header is now an opt-in option.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Drupal确保JavaScript放在页面最后。这通过首先加载页面的关键部分来提高页面加载性能。现在将JavaScript放在页眉是一个可选的选项。
- en: 'To render a library in the header, you will need to add the `header: true`
    key-value pair:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '要在页眉中渲染库，您需要添加`header: true`键值对：'
- en: '[PRE41]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: This will load a custom JavaScript library and its dependencies into the header
    of a page.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 这将在页面的页眉中加载一个自定义JavaScript库及其依赖项。
- en: See also
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: 'Refer to the CSS architecture for Drupal: Separate concerns at [https://www.drupal.org/node/1887918#separate-concerns](https://www.drupal.org/node/1887918#separate-concerns)'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 参考Drupal的CSS架构：在[https://www.drupal.org/node/1887918#separate-concerns](https://www.drupal.org/node/1887918#separate-concerns)中分离关注点
- en: 'SMACSS website: [http://smacss.com/](http://smacss.com/)'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SMACSS网站：[http://smacss.com/](http://smacss.com/)
- en: Using Twig templates in your theme
  id: totrans-146
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在您的主题中使用Twig模板
- en: Drupal’s theming layer uses the **Twig templating system**, a component from
    the Symfony project. **Twig** is a template language that uses a syntax similar
    to Django and Jinja templates.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: Drupal的主题层使用**Twig模板系统**，这是来自Symfony项目的一个组件。**Twig**是一种模板语言，其语法类似于Django和Jinja模板。
- en: In this recipe, we will override the default Twig template used for text inputs
    to provide customizations for the email form element. We will use the **Twig syntax**
    to add a new class to the input element and provide a placeholder attribute.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在此配方中，我们将覆盖用于文本输入的默认Twig模板，为电子邮件表单元素提供自定义。我们将使用**Twig语法**向输入元素添加一个新类并提供占位符属性。
- en: Getting ready
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: This recipe uses a theme created by the theme generator as done in the *Creating
    a custom theme to style your Drupal* *site* recipe.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 此配方使用由主题生成器创建的主题，正如在*创建自定义主题以美化您的Drupal* *网站*配方中所做的那样。
- en: How to do it…
  id: totrans-151
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'To begin, in the `template/form` directory, copy the `input.html.twig` file
    as `input--email.html.twig`. The template will look like the following:'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，在`template/form`目录中，将`input.html.twig`文件复制为`input--email.html.twig`。模板将如下所示：
- en: '[PRE42]'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: '[PRE43]'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '[PRE44]'
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: '[PRE45]'
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: '[PRE46]'
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: '[PRE47]'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '[PRE48]'
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: '[PRE49]'
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: '[PRE50]'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: '[PRE51]'
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
- en: '[PRE52]'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE52]'
- en: '[PRE53]'
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE53]'
- en: '[PRE54]'
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE54]'
- en: '[PRE55]'
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE55]'
- en: The attributes variable is an instance of `\Drupal\Core\Template\Attribute`,
    a value object for storing HTML element attributes.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 属性变量是`\Drupal\Core\Template\Attribute`的一个实例，这是一个用于存储HTML元素属性的值对象。
- en: 'The `Attribute` class has an `addClass` method for adding new `class` attribute
    values. We will use `addClass` to add a new class to the input element:'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Attribute` 类有一个用于添加新的 `class` 属性值的 `addClass` 方法。我们将使用 `addClass` 向输入元素添加一个新类：'
- en: '[PRE56]'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE56]'
- en: '[PRE57]'
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'Before the preceding line, we will create a Twig variable using ternary operators
    to provide a default placeholder using the `setAttribute` method:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在上一行之前，我们将使用三元运算符创建一个 Twig 变量，使用 `setAttribute` 方法提供一个默认占位符：
- en: '[PRE58]'
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE58]'
- en: '[PRE59]'
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE59]'
- en: '[PRE60]'
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE60]'
- en: '[PRE61]'
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE61]'
- en: '[PRE62]'
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE62]'
- en: '[PRE63]'
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE63]'
- en: '[PRE64]'
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE64]'
- en: This creates a new variable called `placeholder` using the `set` operator. The
    question mark (`?`) operator checks whether the placeholder property is empty
    in the `attributes` object. If it is not empty, it uses the existing value. If
    the value is empty, it provides a default value.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `set` 操作符创建一个名为 `placeholder` 的新变量。问号 (`?`) 操作符检查 `attributes` 对象中的占位符属性是否为空。如果不为空，则使用现有值。如果值为空，则提供一个默认值。
- en: 'Rebuild your Drupal site’s cache to rebuild your Drupal site’s Twig templates:'
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重建您的 Drupal 网站缓存以重建 Drupal 网站的 Twig 模板：
- en: '[PRE65]'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'Assuming that you have used the standard Drupal install, go to the `/contact/feedback`
    while logged out, and review the changes to the email field:'
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 假设您已使用标准 Drupal 安装，在未登录状态下访问 `/contact/feedback`，并查看电子邮件字段的更改：
- en: '![Figure 10.4 – HTML element source for email input](img/Figure_10.04_B18548.jpg)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.4 – 电子邮件输入的 HTML 元素源代码](img/Figure_10.04_B18548.jpg)'
- en: Figure 10.4 – HTML element source for email input
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.4 – 电子邮件输入的 HTML 元素源代码
- en: How it works…
  id: totrans-185
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Drupal’s theme system is built around theme hooks and theme hook suggestions.
    When a theme hook has double underscores (`__`), Drupal’s theme system understands
    this, and it can break apart the theme hook to find a more generic template.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: Drupal 的主题系统是围绕主题钩子和主题钩子建议构建的。当一个主题钩子有双下划线 (`__`) 时，Drupal 的主题系统会理解这一点，并且可以分解主题钩子以找到更通用的模板。
- en: The element definition of the email input element defines the `input__email`
    theme hook. If there is no `input__email` hook implemented through a Twig template
    or PHP function, it will step down to just the `input` theme hook and template.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 电子邮件输入元素的元素定义定义了 `input__email` 主题钩子。如果没有通过 Twig 模板或 PHP 函数实现 `input__email`
    钩子，它将降级到仅有的 `input` 主题钩子和模板。
- en: Note
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Drupal theme hooks are defined with underscores (`_`), but use hyphens (`-`)
    when used in Twig template files.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: Drupal 主题钩子使用下划线 (`_`) 定义，但在 Twig 模板文件中使用时使用连字符 (`-`)。
- en: 'Given the email element definition provides `input__email` as its theme hook,
    Drupal understands this as follows:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 给定的电子邮件元素定义提供了 `input__email` 作为其主题钩子，Drupal 理解如下：
- en: Look for a Twig template named `input--email.html.twig` provided by a theme
    or a theme hook in a module that defines `input__email`
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查找由主题或定义 `input__email` 的模块提供的名为 `input--email.html.twig` 的 Twig 模板。
- en: If the template is not found, look for a Twig template named `input.html.twig`
    or a theme hook in a module that defines the `input`
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果找不到模板，查找名为 `input.html.twig` 的 Twig 模板或定义 `input` 的模块中的主题钩子。
- en: Drupal utilizes theme hook suggestions for ways to allow output variations based
    on different conditions. It allows site themes to provide a more specific template
    for certain instances. Theme hook suggestions can be provided by the `hook_theme_suggestions()`
    hook in a `.module` or `.``theme` file.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: Drupal 利用主题钩子建议来提供基于不同条件输出变化的方式。它允许站点主题为某些实例提供更具体的模板。主题钩子建议可以通过 `.module` 或
    `.theme` 文件中的 `hook_theme_suggestions()` 钩子提供。
- en: A processor, such as Drupal’s theme layer, passes variables to Twig. Variables
    or properties of objects can be printed by wrapping the variable name in curly
    brackets. All of Drupal core’s default templates provide information in the file’s
    document block that details the available Twig variables.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 处理器，如 Drupal 的主题层，将变量传递给 Twig。可以通过将变量名括在花括号中来打印变量或对象属性。Drupal 核心所有默认模板都在文件的文档块中提供信息，详细说明了可用的
    Twig 变量。
- en: Twig has a simplistic syntax with basic logic and functions. The `addClass`
    method will take the `attributes` variable and add the class provided, in addition
    to the existing contents.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: Twig 语法简单，包含基本的逻辑和函数。`addClass` 方法将接受 `attributes` 变量并添加提供的类，同时保留现有内容。
- en: When providing a theme hook suggestion or altering an existing template, you
    will need to rebuild Drupal’s cache. The compiled Twig template, as with PHP,
    is cached by Drupal so that Twig does not need to be compiled every time the template
    is invoked.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 当提供主题钩子建议或修改现有模板时，您需要重建 Drupal 的缓存。与 PHP 一样，Drupal 会缓存编译后的 Twig 模板，这样在模板被调用时就不需要重新编译。
- en: There’s more
  id: totrans-197
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容
- en: We will discuss more on using Twig in the following sections.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将进一步讨论使用Twig。
- en: Debugging template file selection and hook suggestions
  id: totrans-199
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 调试模板文件选择和钩子建议
- en: Debugging can be enabled to inspect the various template files that make up
    a page and their theme hook suggestions, and check which are active. This can
    be accomplished by editing the `sites/default/services.yml` file. If a `services.yml`
    file does not exist, copy `default.services.yml` to create one.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 可以启用调试以检查构成页面的各种模板文件及其主题钩子建议，并检查哪些是活动的。这可以通过编辑`sites/default/services.yml`文件来完成。如果不存在`services.yml`文件，可以将`default.services.yml`复制以创建一个。
- en: 'You need to change `debug: false` to `debug: true` under the `twig.config`
    section of the file. This will cause the Drupal theming layer to print out the
    source code comments that contain the template information. When `debug` is on,
    Drupal will not cache the compiled versions of Twig templates and render them
    on the fly.'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '您需要在文件的`twig.config`部分下将`debug: false`更改为`debug: true`。这将导致Drupal主题层打印出包含模板信息的源代码注释。当`debug`开启时，Drupal不会缓存编译后的Twig模板，而是即时渲染它们。'
- en: There is another setting that prevents you from having to rebuild Drupal’s cache
    on each template file change without leaving `debug` enabled. The `twig.config.auto_reload`
    Boolean can be set to `true`. If this is set to `true`, the Twig templates will
    be recompiled if the source code changes.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 另有一个设置可以防止您在每次模板文件更改时无需启用`debug`就重建Drupal的缓存。可以将`twig.config.auto_reload`布尔值设置为`true`。如果设置为`true`，当源代码更改时，Twig模板将被重新编译。
- en: See also
  id: totrans-203
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: Refer to the Twig documentation at [https://twig.symfony.com/](https://twig.symfony.com/)
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请参阅[Twig文档](https://twig.symfony.com/)
- en: Refer to the API documentation for `hook_theme_suggestions` at [https://api.drupal.org/api/drupal/core%21lib%21Drupal%21Core%21Render%21theme.api.php/function/hook_theme_suggestions_HOOK/10](https://api.drupal.org/api/drupal/core%21lib%21Drupal%21Core%21Render%21theme.api.php/function/hook_theme_suggestions_HOOK/10)
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请参阅[hook_theme_suggestions](https://api.drupal.org/api/drupal/core%21lib%21Drupal%21Core%21Render%21theme.api.php/function/hook_theme_suggestions_HOOK/10)的API文档
- en: Delivering responsive images
  id: totrans-206
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 交付响应式图像
- en: The `HTML5` picture tag and source sets. Utilizing the **Breakpoint** module,
    mappings to breakpoints are made to denote an image style to be used at each breakpoint.
    The responsive image field formatter works by using a defined responsive image
    style. Responsive image styles are configurations that map image formats to specific
    breakpoints and modifiers. First, you will need to define a responsive image style,
    and then you can apply it to an image field.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '`HTML5`的`<picture>`标签和源集。利用**断点**模块，将映射到断点，以表示在每个断点使用的图像样式。响应式图像样式是通过将图像格式映射到特定断点和修饰符的配置。首先，您需要定义一个响应式图像样式，然后可以将其应用于图像字段。'
- en: In this recipe, we will create a responsive image style set called **Article
    image** and apply it to the **Article** content type’s image field.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将创建一个名为**文章图像**的响应式图像样式集，并将其应用于**文章**内容类型的图像字段。
- en: How to do it…
  id: totrans-209
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点…
- en: 'First, you need to install the `responsive_image` module:'
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，您需要安装`responsive_image`模块：
- en: '[PRE66]'
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE66]'
- en: From the administrative toolbar, go to **Configuration** and then to **Responsive
    image styles** under the **MEDIA** section. Click on **Add responsive image style**
    to create a new style set.
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从管理工具栏中，转到**配置**，然后在**媒体**部分下转到**响应式图像样式**。点击**添加响应式图像样式**以创建新的样式集。
- en: Select **Olivero** from the **Breakpoint group** select list to use the breakpoints
    defined by the Olivero theme.
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**断点组**选择列表中选择**Olivero**以使用Olivero主题定义的断点。
- en: 'Each breakpoint will be grouped by a fieldset. Expand the fieldset, choose
    **Select a single image style.**, and then pick an appropriate **Image** **style**
    option:'
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每个断点将按字段集分组。展开字段集，选择**选择单个图像样式**，然后选择合适的**图像样式**选项：
- en: '![Figure 10.5 – Responsive image style form](img/Figure_10.05_B18548.jpg)'
  id: totrans-215
  prefs: []
  type: TYPE_IMG
  zh: '![图10.5 – 响应式图像样式表单](img/Figure_10.05_B18548.jpg)'
- en: Figure 10.5 – Responsive image style form
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.5 – 响应式图像样式表单
- en: Additionally, choose a **Fallback image style** option in the event of a browser
    that doesn’t support source sets or an error occurring.
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，在浏览器不支持源集或发生错误的情况下，选择**备用图像样式**选项。
- en: Click on **Save** to save the configuration, and add the new style set.
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存**以保存配置，并添加新的样式集。
- en: Go to **Structure** and **Content types** and select **Manage Display** from
    the **Article** content type’s drop-down menu.
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往**结构**和**内容类型**，从**文章**内容类型的下拉菜单中选择**管理显示**。
- en: Change the **Image** field’s formatter to **Responsive image**.
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**图片**字段的格式化器更改为**响应式图片**。
- en: 'Click on the **Settings** cog of the field formatter to choose your new **Responsive**
    **image style** set. Select **Article image** from the **Responsive image** **style**
    dropdown:'
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击字段格式化器的**设置**齿轮图标，选择您的新**响应式****图片样式**集。从**响应式图片****样式**下拉菜单中选择**文章图片**：
- en: '![Figure 10.6 – Responsive image style configuration form](img/Figure_10.06_B18548.jpg)'
  id: totrans-222
  prefs: []
  type: TYPE_IMG
  zh: '![图10.6 – 响应式图片样式配置表](img/Figure_10.06_B18548.jpg)'
- en: Figure 10.6 – Responsive image style configuration form
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.6 – 响应式图片样式配置表
- en: Click on **Update** to save the field formatter settings, and then click on
    **Save** to save the field display settings.
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**更新**以保存字段格式化器设置，然后点击**保存**以保存字段显示设置。
- en: How it works…
  id: totrans-225
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: A benefit of using the responsive image formatter is its performance. Browsers
    will only download the resources defined in the `srcset` of the appropriate `source`
    tag. This not only allows you to deliver a more appropriate image size but also
    carries a smaller payload on smaller devices.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 使用响应式图片格式化器的优点是其性能。浏览器将只下载适当`source`标签中`srcset`定义的资源。这不仅允许您提供更合适的图片大小，而且在小型设备上也会携带更小的负载。
- en: 'The **Responsive image** style provides three components:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '**响应式图片**样式提供三个组件：'
- en: A responsive image element
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个响应式图片元素
- en: The responsive image style configuration entity
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 响应式图片样式配置实体
- en: The responsive image field formatter
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 响应式图片字段格式化器
- en: The configuration entity is consumed by the field formatter and displayed through
    the responsive image element.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 配置实体由字段格式化器消费并通过响应式图片元素显示。
- en: The responsive image style entity contains an array of breakpoints to image
    style mappings. The available breakpoints are defined by the selected breakpoint
    groups. Breakpoint groups can be changed anytime; however, the previous mappings
    will be lost.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 响应式图片样式实体包含一个断点到图片样式映射的数组。可用的断点由选定的断点组定义。断点组可以随时更改；然而，之前的映射将会丢失。
- en: The responsive image element prints a picture element with each breakpoint,
    defining a new source element. The breakpoint’s media query value is provided
    as the media attribute for the element.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 响应式图片元素在每个断点处打印一个图片元素，定义一个新的源元素。断点的媒体查询值作为元素的媒体属性提供。
- en: See also
  id: totrans-234
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 相关内容
- en: Refer to the picture element on the **Mozilla Developer Network** (**MDN**)
    at [https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture)
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请参考**Mozilla开发者网络**（**MDN**）上的图片元素[https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture)
- en: Compiling CSS and JavaScript pre- and post-processors with Laravel Mix
  id: totrans-236
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Laravel Mix编译CSS和JavaScript预处理器和后处理器
- en: '**Laravel Mix** is a project that streamlines configuring Webpack, a bundler
    for frontend development. Laravel Mix was originally built to be used with Laravel
    projects but can be used for any project that bundles JavaScript or CSS pre- and
    post-processing.'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: '**Laravel Mix**是一个简化Webpack配置的项目，Webpack是一个用于前端开发的打包器。Laravel Mix最初是为了与Laravel项目一起使用而构建的，但也可以用于任何需要打包JavaScript或CSS预处理器和后处理的项目。'
- en: In this recipe, we will add Laravel Mix to our theme for transpiling our ES6
    JavaScript and PostCSS to post-process our CSS based on the desired browser support.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 在本食谱中，我们将向主题添加Laravel Mix以转换我们的ES6 JavaScript和PostCSS，并根据所需的浏览器支持后处理我们的CSS。
- en: Getting ready
  id: totrans-239
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: The *Adding CSS and JavaScript to your theme* recipe from this chapter covers
    how to create asset libraries for your theme. This section will use information
    from that recipe.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的*将CSS和JavaScript添加到您的主题*食谱介绍了如何为您的主题创建资产库。本节将使用该食谱中的信息。
- en: How to do it…
  id: totrans-241
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'First, create a `src` directory in your theme to store source files for your
    CSS and JavaScript that will be processed by Webpack:'
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，在您的主题中创建一个`src`目录来存储将由Webpack处理的CSS和JavaScript源文件：
- en: '[PRE67]'
  id: totrans-243
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'Next, create a `styles.css` file in the `src` directory with the following:'
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在`src`目录中创建一个`styles.css`文件，内容如下：
- en: '[PRE68]'
  id: totrans-245
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE68]'
- en: '[PRE69]'
  id: totrans-246
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE69]'
- en: '[PRE70]'
  id: totrans-247
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE70]'
- en: '[PRE71]'
  id: totrans-248
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE71]'
- en: '[PRE72]'
  id: totrans-249
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE72]'
- en: '[PRE73]'
  id: totrans-250
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE73]'
- en: This CSS file uses CSS variables. While commonly supported now, `PostCSS` will
    ensure backward compatibility in the post-processed CSS stylesheet.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 此CSS文件使用CSS变量。虽然现在普遍支持，但`PostCSS`将确保在后处理CSS样式表中保持向后兼容性。
- en: 'Then, create a `scripts.js` file in the `src` directory with the following:'
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，在`src`目录中创建一个`scripts.js`文件，内容如下：
- en: '[PRE74]'
  id: totrans-253
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE74]'
- en: '[PRE75]'
  id: totrans-254
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE75]'
- en: '[PRE76]'
  id: totrans-255
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE76]'
- en: '[PRE77]'
  id: totrans-256
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE77]'
- en: '[PRE78]'
  id: totrans-257
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE78]'
- en: '[PRE79]'
  id: totrans-258
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE79]'
- en: '[PRE80]'
  id: totrans-259
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE80]'
- en: 'Now, we will get ready to install Laravel Mix. In your theme’s directory, use
    the `npm init` command to initialize a project:'
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将准备安装Laravel Mix。在您的主题目录中，使用`npm init`命令初始化项目：
- en: '[PRE81]'
  id: totrans-261
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE81]'
- en: This creates a `package.json` file, which stores dependency information for
    projects using npm.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 这创建了一个`package.json`文件，它存储了使用npm的项目依赖信息。
- en: 'Use `npm install` to install Laravel Mix:'
  id: totrans-263
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`npm install`来安装Laravel Mix：
- en: '[PRE82]'
  id: totrans-264
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE82]'
- en: 'We also need to install `postcss-present-env` to ensure our CSS is post-processed
    to be compatible with all browsers:'
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们还需要安装`postcss-present-env`以确保我们的CSS经过后处理以兼容所有浏览器：
- en: '[PRE83]'
  id: totrans-266
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE83]'
- en: Laravel Mix comes bundled with `@babel/preset-env`, which ensures browser compatibility
    with JavaScript.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: Laravel Mix捆绑了`@babel/preset-env`，这确保了JavaScript的浏览器兼容性。
- en: 'Now that we have Laravel Mix, we must configure it. Create a `webpack.mix.js`
    file in your theme’s directory with the following configuration:'
  id: totrans-268
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们有了Laravel Mix，我们必须进行配置。在您的主题目录中创建一个`webpack.mix.js`文件，并使用以下配置：
- en: '[PRE84]'
  id: totrans-269
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE84]'
- en: '[PRE85]'
  id: totrans-270
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE85]'
- en: '[PRE86]'
  id: totrans-271
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE86]'
- en: '[PRE87]'
  id: totrans-272
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE87]'
- en: '[PRE88]'
  id: totrans-273
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE88]'
- en: The `js` method on `mix` sets up JavaScript bundling and transpiling with Webpack.
    The first argument is the source file and the second argument is the destination.
    The `css` method on `mix` sets up PostCSS. The first argument is the source file
    and the second argument is the destination. The third argument passes additional
    plugins to PostCSS.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: '`mix`上的`js`方法设置Webpack的JavaScript捆绑和转译。第一个参数是源文件，第二个参数是目标。`mix`上的`css`方法设置PostCSS。第一个参数是源文件，第二个参数是目标。第三个参数将额外的插件传递给PostCSS。'
- en: 'To compile our CSS and JavaScript files, run `npx mix`. This will create `dist/styles.css`
    and `dist/scripts.js`:'
  id: totrans-275
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要编译我们的CSS和JavaScript文件，运行`npx mix`。这将创建`dist/styles.css`和`dist/scripts.js`：
- en: '[PRE89]'
  id: totrans-276
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE89]'
- en: 'Now, we need to create our theme’s library, which registers our CSS and JavaScript
    files from the `dist` directory:'
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们需要创建我们的主题库，它将注册来自`dist`目录的CSS和JavaScript文件：
- en: '[PRE90]'
  id: totrans-278
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE90]'
- en: '[PRE91]'
  id: totrans-279
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE91]'
- en: '[PRE92]'
  id: totrans-280
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE92]'
- en: '[PRE93]'
  id: totrans-281
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE93]'
- en: '[PRE94]'
  id: totrans-282
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE94]'
- en: '[PRE95]'
  id: totrans-283
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE95]'
- en: '[PRE96]'
  id: totrans-284
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE96]'
- en: '[PRE97]'
  id: totrans-285
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE97]'
- en: '[PRE98]'
  id: totrans-286
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE98]'
- en: 'Edit `mytheme.info.yml` to add the `theme-styling` library to the `libraries`
    key:'
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑`mytheme.info.yml`以将`theme-styling`库添加到`libraries`键：
- en: '[PRE99]'
  id: totrans-288
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE99]'
- en: '[PRE100]'
  id: totrans-289
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE100]'
- en: '[PRE101]'
  id: totrans-290
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE101]'
- en: '[PRE102]'
  id: totrans-291
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE102]'
- en: '[PRE103]'
  id: totrans-292
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE103]'
- en: '[PRE104]'
  id: totrans-293
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE104]'
- en: '[PRE105]'
  id: totrans-294
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE105]'
- en: '[PRE106]'
  id: totrans-295
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE106]'
- en: '[PRE107]'
  id: totrans-296
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE107]'
- en: 'Rebuild your Drupal site’s cache to rebuild the library definitions cache,
    triggering a rediscovery of the library definitions and theme information:'
  id: totrans-297
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重建您的Drupal网站的缓存以重建库定义缓存，触发库定义和主题信息的重新发现：
- en: '[PRE108]'
  id: totrans-298
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE108]'
- en: Your CSS and JavaScript files are now registered and will allow you to write
    the latest in CSS and JavaScript while preserving browser compatibility.
  id: totrans-299
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您的CSS和JavaScript文件现在已注册，将允许您编写最新的CSS和JavaScript，同时保持浏览器兼容性。
- en: How it works…
  id: totrans-300
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Laravel Mix is a package to simplify configuring Webpack. When running `npx
    mix`, this runs the scripts for Laravel Mix. Laravel Mix reads `webpack.mix.js`,
    builds a Webpack configuration, and executes Webpack on your behalf.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: Laravel Mix是一个简化Webpack配置的包。当运行`npx mix`时，这将运行Laravel Mix的脚本。Laravel Mix读取`webpack.mix.js`，构建Webpack配置，并代表您执行Webpack。
- en: See also
  id: totrans-302
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: 'Laravel Mix documentation: [https://laravel-mix.com/docs](https://laravel-mix.com/docs)'
  id: totrans-303
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Laravel Mix文档：[https://laravel-mix.com/docs](https://laravel-mix.com/docs)
- en: Using Laravel Mix to theme your Drupal site with live reloading
  id: totrans-304
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Laravel Mix为您的Drupal网站添加实时重新加载的主题
- en: In the previous recipe, *Compiling CSS and JavaScript pre and post processors
    with Laravel Mix*, we set up Laravel Mix for a theme. Laravel Mix supports `Browsersync`.
    `Browsersync` is a tool that monitors changes in your source files and injects
    the changes into the browser so that you do not need to refresh the page manually.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的配方*使用Laravel Mix编译CSS和JavaScript预和后处理器*中，我们为主题设置了Laravel Mix。Laravel Mix支持`Browsersync`。`Browsersync`是一个监控您的源文件更改并自动将更改注入浏览器的工具，因此您不需要手动刷新页面。
- en: In this recipe, we will leverage the `BrowserSync` functionality to speed up
    the development of building your Drupal theme.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个配方中，我们将利用`BrowserSync`功能来加速构建您的Drupal主题的开发。
- en: Getting started
  id: totrans-307
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 入门
- en: Make sure that aggregation of CSS and JavaScript files is disabled by visiting
    the `/admin/config/development/performance`.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 确保通过访问`/admin/config/development/performance`禁用了CSS和JavaScript文件的聚合。
- en: 'Alternatively, you can add the following configuration override to your `settings.php`
    to force-disable aggregation:'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，您可以将以下配置覆盖添加到您的`settings.php`中，以强制禁用聚合：
- en: '[PRE109]'
  id: totrans-310
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: This is also set up by default with `example.settings.local.php` in `sites/default`.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 这也是默认通过在`sites/default`中的`example.settings.local.php`来设置的。
- en: How to do it…
  id: totrans-312
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点…
- en: 'To configure Browsersync with Laravel Mix, we call the `browserSync` method
    on `mix`:'
  id: totrans-313
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要使用Laravel Mix配置Browsersync，我们在`mix`上调用`browserSync`方法：
- en: '[PRE110]'
  id: totrans-314
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE110]'
- en: '[PRE111]'
  id: totrans-315
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE111]'
- en: '[PRE112]'
  id: totrans-316
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE112]'
- en: '[PRE113]'
  id: totrans-317
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE113]'
- en: '[PRE114]'
  id: totrans-318
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE114]'
- en: '[PRE115]'
  id: totrans-319
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE115]'
- en: 'Before configuring Browsersync, we need Laravel Mix to download the additional
    Webpack dependencies for Browsersync. Laravel Mix does this automatically when
    run and first configured:'
  id: totrans-320
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在配置 Browsersync 之前，我们需要 Laravel Mix 下载 Browsersync 的额外 Webpack 依赖项。Laravel Mix
    在运行和首次配置时会自动执行此操作：
- en: '[PRE116]'
  id: totrans-321
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE116]'
- en: 'You will see a message similar to the following: *Additional dependencies must
    be installed. This will only take* *a moment.*'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 您将看到类似以下的消息：*必须安装额外的依赖项。这只需* *片刻时间* *即可*。
- en: 'We need to specify the URL of our Drupal site for `Browsersync` to proxy:'
  id: totrans-323
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要指定我们的 Drupal 网站的 URL 以供 `Browsersync` 代理：
- en: '[PRE117]'
  id: totrans-324
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE117]'
- en: '[PRE118]'
  id: totrans-325
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE118]'
- en: '[PRE119]'
  id: totrans-326
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE119]'
- en: '`localhost:3000` and will proxy content from the Drupal site at the URL provided.
    Replace `mysite.ddev.site` with the domain of your Drupal site.'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: '`localhost:3000` 并将从提供的 URL 的 Drupal 网站代理内容。将 `mysite.ddev.site` 替换为您的 Drupal
    网站的域名。'
- en: 'Next, we need to specify which files should be watched by Browsersync to inject
    updates into the browser by providing a `files` option:'
  id: totrans-328
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要指定 Browsersync 应该监视哪些文件以通过提供 `files` 选项将更新注入浏览器：
- en: '[PRE120]'
  id: totrans-329
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE120]'
- en: '[PRE121]'
  id: totrans-330
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE121]'
- en: '[PRE122]'
  id: totrans-331
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE122]'
- en: '[PRE123]'
  id: totrans-332
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE123]'
- en: '[PRE124]'
  id: totrans-333
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE124]'
- en: '[PRE125]'
  id: totrans-334
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE125]'
- en: '[PRE126]'
  id: totrans-335
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE126]'
- en: This tells Browsersync to react to changes to our compiled assets, which are
    the ones added to the page.
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 这告诉 Browsersync 对我们编译的资产进行响应，这些资产是添加到页面上的。
- en: 'Finally, we need to run Laravel Mix in development mode to watch for changes.
    This will open a browser that uses Browsersync and will update as files are changed:'
  id: totrans-337
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们需要以开发模式运行 Laravel Mix 来监视变化。这将打开一个使用 Browsersync 的浏览器，并在文件更改时更新：
- en: '[PRE127]'
  id: totrans-338
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE127]'
- en: With your browser now open, modify `src/styles.css` or `src/scripts.js` and
    watch your Drupal site’s theme update without having to refresh the page.
  id: totrans-339
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在您的浏览器已经打开，修改 `src/styles.css` 或 `src/scripts.js`，并监视您的 Drupal 网站的主题更新，而无需刷新页面。
- en: How it works…
  id: totrans-340
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: It can be cumbersome to configure and gather all of the necessary plugins for
    Webpack. Laravel Mix provides a way to configure Webpack easily across any project.
    Laravel Mix supports bundling JavaScript for Vue, React, and Preact. It also has
    built-in support for Sass and Less, along with PostCSS. All of these options can
    be found in the API documentation for Laravel Mix at [https://laravel-mix.com/docs/6.0/api](https://laravel-mix.com/docs/6.0/api).
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 配置并收集所有必要的 Webpack 插件可能会很麻烦。Laravel Mix 提供了一种方法，可以轻松地在任何项目中配置 Webpack。Laravel
    Mix 支持 Vue、React 和 Preact 的 JavaScript 打包。它还内置了对 Sass 和 Less 的支持，以及 PostCSS。所有这些选项都可以在
    Laravel Mix 的 API 文档中找到，网址为 [https://laravel-mix.com/docs/6.0/api](https://laravel-mix.com/docs/6.0/api)。
- en: There’s more
  id: totrans-342
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容
- en: Browsersync can be used for more than just watching changes to your CSS and
    JavaScript files.
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: Browsersync 可以用于监视不仅仅是 CSS 和 JavaScript 文件的变化。
- en: Watching changes to Twig templates
  id: totrans-344
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 监视 Twig 模板的变化
- en: 'Browsersync can also be configured to watch for changes in Twig files as well
    so that your browser updates when Twig templates are modified. To watch for changes
    to Twig templates, add `templates/**/*` to the `files` option:'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: Browsersync 也可以配置为监视 Twig 文件的变化，以便在 Twig 模板被修改时更新浏览器。要监视 Twig 模板的变化，请将 `templates/**/*`
    添加到 `files` 选项中：
- en: '[PRE128]'
  id: totrans-346
  prefs: []
  type: TYPE_PRE
  zh: '[PRE128]'
- en: Whenever you modify a Twig template for your theme, Browsersync will refresh
    the page for you.
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 每次您修改主题的 Twig 模板时，Browsersync 都会为您刷新页面。
- en: 'For the best results, you will want to turn on Twig debugging by ensuring you
    have a `sites/default/services.yml` file with the following:'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 为了获得最佳效果，您需要确保您有一个包含以下内容的 `sites/default/services.yml` 文件来启用 Twig 调试：
- en: '[PRE129]'
  id: totrans-349
  prefs: []
  type: TYPE_PRE
  zh: '[PRE129]'
- en: This will ensure your Twig templates are rebuilt whenever they are modified.
    This is covered in the *Using Twig templates in your theme* recipe and the *There’s
    more* section under *Debugging template file selection and* *hook suggestions*.
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 这将确保每次修改 Twig 模板时都会重新构建它们。这在本食谱的 *在主题中使用 Twig 模板* 和 *调试模板文件选择和* *钩子建议* 下的 *更多内容*
    部分中有所说明。
- en: 'You will also need to bypass Drupal’s `render` cache, which could cause stale
    output. Ensure `settings.php` has the following lines, which can also be found
    in `example.settings.local.php`:'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 您还需要绕过 Drupal 的 `render` 缓存，这可能会导致输出过时。请确保 `settings.php` 中有以下行，这些行也可以在 `example.settings.local.php`
    中找到：
- en: '[PRE130]'
  id: totrans-352
  prefs: []
  type: TYPE_PRE
  zh: '[PRE130]'
- en: This forces Drupal to use a cached backend that does not cache any data for
    its `render` output. Your Drupal site may operate slower, but it allows you to
    build your theme without rebuilding Drupal’s cache.
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 这将强制 Drupal 使用一个不缓存任何数据的缓存后端，您的 Drupal 网站可能会运行得更慢，但它允许您在不重建 Drupal 缓存的情况下构建您的主题。
- en: See also
  id: totrans-354
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: 'Browsersync documentation: [https://browsersync.io/docs/options/](https://browsersync.io/docs/options/)'
  id: totrans-355
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Browsersync 文档：[https://browsersync.io/docs/options/](https://browsersync.io/docs/options/)
- en: 'Laravel Mix documentation: [https://laravel-mix.com/docs](https://laravel-mix.com/docs)'
  id: totrans-356
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Laravel Mix 文档：[https://laravel-mix.com/docs](https://laravel-mix.com/docs)
