["```php\nphalconBlog/\n  app/\n    config/\n    controllers/\n    library/\n    logs/\n    models/\n    plugins/\n    views/\n      index/\n      layouts/\n  public/\n    css/\n    files/\n    img/\n    js/\n    temp/\n```", "```php\n<IfModule mod_rewrite.c>\n  RewriteEngine on\n  RewriteRule ^$ public/     [L]\n  RewriteRule (.*) public/$1 [L]\n</IfModule>\n```", "```php\n<IfModule mod_rewrite.c>\n  RewriteEngine On\n  RewriteCond %{REQUEST_FILENAME} !-d\n  RewriteCond %{REQUEST_FILENAME} !-f\n  RewriteRule ^(.*)$ index.php?_url=/$1 [QSA,L]\n</IfModule>\n```", "```php\n<?php\n  try {\n    //Our code\n  } catch(\\Phalcon\\Exception $e) {\n    echo \"PhalconException: \", $e->getMessage();\n  }\n?>\n```", "```php\n  try {\n    //Create a DI\n    $di = new Phalcon\\DI\\FactoryDefault();\n\n    //Set up our views\n    $di->set('view''view', function(){\n      $view = new \\Phalcon\\Mvc\\View();\n      $view->setViewsDir(__DIR__ . '../app/views/');\n      return $view;\n    });\n  } catch(\\Phalcon\\Exception $e) {\n    echo \"PhalconException: \", $e->getMessage();\n  }\n```", "```php\n  //Create a DI\n    $di = new Phalcon\\DI\\FactoryDefault();\n\n    //Set up our views\n    $di->set('view', function(){\n      $view = new \\Phalcon\\Mvc\\View();\n      $view->setViewsDir(__DIR__ . '../app/views/');\n      return $view;\n    });\n\n    //Our autoloaders\n    $loader = new \\Phalcon\\Loader();\n    $loader->registerDirs(array(\n      __DIR__ . '../app/controllers/',\n      __DIR__ . '../app/models/'\n    ))->register();\n```", "```php\n<?php\n  try {\n    //Create a DI\n    $di = new Phalcon\\DI\\FactoryDefault();\n\n    //Set up our views\n    $di->set('view', function(){\n      $view = new \\Phalcon\\Mvc\\View();\n      $view->setViewsDir(__DIR__ . '../app/views/');\n      return $view;\n    });\n\n    //Our autoloaders\n    $loader = new \\Phalcon\\Loader();\n    $loader->registerDirs(array(\n      __DIR__ . '../app/controllers/',\n      __DIR__ . '../app/models/'\n    ))->register();\n\n    //Initialize our application\n    $application = new \\Phalcon\\Mvc\\Application($di);\n    echo $application->handle()->getContent();\n  } catch(\\Phalcon\\Exception $e) {\n    echo \"PhalconException: \", $e->getMessage();\n  }\n?>\n```", "```php\n[phalcon]\ncontrollersDir = \"../app/controllers/\"\nmodelsDir = \"../app/models/\"\nviewsDir = \"../app/views/\"\n```", "```php\n//Create a DI\n$di = new Phalcon\\DI\\FactoryDefault();\n\n//Load ini file\n$config = new \\Phalcon\\Config\\Adapter\\Ini(__DIR__ . '../app/config/config.ini');\n$di->set('config', $config);\n```", "```php\n//Set up our views\n$di->set('view', function(){\n  $view = new \\Phalcon\\Mvc\\View();\n  $view->setViewsDir(__DIR__ . '../app/views/');\n  return $view;\n});\n\n//Our autoloaders\n$loader = new \\Phalcon\\Loader();\n$loader->registerDirs(array(\n  __DIR__ .'../app/controllers/',\n  __DIR__ .'../app/models/'\n))->register();\n```", "```php\n//Set up our views\n$di->set('view', function() use ($config) {\n  $view = new \\Phalcon\\Mvc\\View();\n  $view->setViewsDir($config->phalcon->viewsDir);\n  return $view;\n});\n\n//Our autoloaders\n$loader = new \\Phalcon\\Loader();\n$loader->registerDirs(array(\n  $config->phalcon->controllersDir,\n  $config->phalcon->modelsDir\n))->register();\n```", "```php\n{\n    \"require\": {\n        \"phalcon/devtools\": \"dev-master\"\n    }\n}\n```", "```php\ncurl -s http://getcomposer.org/installer | php\n\n```", "```php\nphp composer.phar install\n```", "```php\nphalcon project phalconBlog â€“-use-config-ini --enable-webtools\n\n```", "```php\n[database]\nadapter  = Mysql\nhost     = localhost\nusername = root\npassword = root\ndbname     = phalconblog\n\n[application]\ncontrollersDir = ../app/controllers/\nmodelsDir      = ../app/models/\nviewsDir       = ../app/views/\npluginsDir     = ../app/plugins/\nlibraryDir     = ../app/library/\nbaseUri        = /phalconBlog/\ncacheDir       = ../app/cache/\n\n[models]\nmetadata.adapter = \"Memory\"\n\n```", "```php\nbaseUri        = /\n```", "```php\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Phalcon PHP Framework</title>\n  </head>\n  <body>\n    {{ content() }}\n  </body>\n</html>\n```", "```php\n<h1>Congratulations!</h1>\n\n<p>You're now flying with Phalcon. Great things are about to happen!</p>\n```", "```php\n<?php\n\nerror_reporting(E_ALL);\n\ntry {\n\n  /**\n   * Read the configuration\n   */\n  $config = new \\Phalcon\\Config\\Adapter\\Ini(__DIR__ . \"/../app/config/config.ini\");\n\n  /**\n   * Read auto-loader\n   */\n  include __DIR__ . \"/../app/config/loader.php\";\n\n  /**\n   * Read services\n   */\n  include __DIR__ . \"/../app/config/services.php\";\n\n  /**\n   * Handle the request\n   */\n  $application = new \\Phalcon\\Mvc\\Application($di);\n\n  echo $application->handle()->getContent();\n\n} catch (\\Exception $e) {\n  echo $e->getMessage();\n}\n```", "```php\n<?php\n\n$loader = new \\Phalcon\\Loader();\n\n/**\n * We're a registering a set of directories taken from the configuration file\n */\n$loader->registerDirs(\n  array(\n    $config->application->controllersDir,\n    $config->application->modelsDir\n  )\n)->register();\n```", "```php\n<?php\nuse Phalcon\\DI\\FactoryDefault,\n  Phalcon\\Mvc\\View,\n  Phalcon\\Mvc\\Url as UrlResolver,\n  Phalcon\\Db\\Adapter\\Pdo\\Mysql as DbAdapter,\n  Phalcon\\Mvc\\View\\Engine\\Volt as VoltEngine,\n  Phalcon\\Mvc\\Model\\Metadata\\Memory as MetaDataAdapter,\n  Phalcon\\Session\\Adapter\\Files as SessionAdapter;\n/**\n * The FactoryDefault Dependency Injector automatically registers the right services providing a full stack framework\n */\n$di = new FactoryDefault();\n/**\n * The URL component is used to generate all kind of urls in the application\n */\n$di->set('url', function() use ($config) {\n  $url = new UrlResolver();\n  $url->setBaseUri($config->application->baseUri);\n  return $url;\n}, true);\n/**\n * Setting up the view component\n */\n$di->set('view', function() use ($config) {\n\n  $view = new View();\n\n  $view->setViewsDir($config->application->viewsDir);\n\n  $view->registerEngines(array(\n    '.volt' => function($view, $di) use ($config) {\n\n      $volt = new VoltEngine($view, $di);\n\n      $volt->setOptions(array(\n        'compiledPath' => $config->application->cacheDir,\n        'compiledSeparator' => '_'\n      ));\n\n      return $volt;\n    },\n    '.phtml' => 'Phalcon\\Mvc\\View\\Engine\\Php'\n  ));\n\n  return $view;\n}, true);\n/**\n * Database connection is created based in the parameters defined in the configuration file\n */\n$di->set('db', function() use ($config) {\n  return new DbAdapter(array(\n    'host' => $config->database->host,\n    'username' => $config->database->username,\n    'password' => $config->database->password,\n    'dbname' => $config->database->dbname\n  ));\n});\n/**\n * If the configuration specifies the use of a metadata adapter, use it or use memory otherwise\n */\n$di->set('modelsMetadata', function() {\n  return new MetaDataAdapter();\n});\n/**\n * Start the session the first time a component requests the session service\n */\n$di->set('session', function() {\n  $session = new SessionAdapter();\n  $session->start();\n  return $session;\n});\n```", "```php\n<?php\n\nerror_reporting(E_ALL);\n\n$debug = new \\Phalcon\\Debug();\n$debug->listen();\n\n/**\n * Read the configuration\n */\n$config = new \\Phalcon\\Config\\Adapter\\Ini(__DIR__ . \"/../app/config/config.ini\");\n```", "```php\nserver {\n\n    listen   80;\n    server_name localhost;\n\n    index index.php index.html index.htm;\n    set $root_path '/var/www/phalcon/public';\n    root $root_path;\n\n    try_files $uri $uri/ @rewrite;\n\n    location @rewrite {\n        rewrite ^/(.*)$ /index.php?_url=/$1;\n    }\n\n    location ~ \\.php {\n        fastcgi_pass unix:/run/php-fpm/php-fpm.sock;\n        fastcgi_index /index.php;\n\n        include /etc/nginx/fastcgi_params;\n\n        fastcgi_split_path_info       ^(.+\\.php)(/.+)$;\n        fastcgi_param PATH_INFO       $fastcgi_path_info;\n        fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;\n        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n    }\n\n    location ~* ^/(css|img|js|flv|swf|download)/(.+)$ {\n        root $root_path;\n    }\n\n    location ~ /\\.ht {\n        deny all;\n    }\n}\n```"]