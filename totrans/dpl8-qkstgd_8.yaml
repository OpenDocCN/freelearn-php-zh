- en: Welcome Home!
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'So far in this book, we''ve learned about many of the things that can be done
    to quickly get a Drupal site up: creating content types, fields, and content;
    managing users; adding modules; providing translations; and creating feeds for
    other sites to consume. With all of these topics, there are still a few left to
    cover, and that becomes evident when we look at our home page.'
  prefs: []
  type: TYPE_NORMAL
- en: BAD home page!
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'There are many things about our home page that are bad, as shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/440c78a0-d856-4332-b9b1-3dcda424ec6e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Some, the design-related ones, are out of the scope of this book, but there
    are others that we can address. Let''s make a list of what''s bad about our home
    page:'
  prefs: []
  type: TYPE_NORMAL
- en: Too much content!
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There is no access to the content that is not on the home page
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Our RSS feeds menu needs to be added
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The footer menu says Legal instead of Terms and Conditions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Legal link leads back to the home page
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Design improvements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Next, let's take our list and consider the deficiencies and what can be done
    to remedy them.
  prefs: []
  type: TYPE_NORMAL
- en: Too much content!
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Drupal is a content management system, of course, but that doesn't mean that
    all the content should be on the home page. It becomes too long and cluttered.
    It's better to show only one complete piece or a small number of teasers.
  prefs: []
  type: TYPE_NORMAL
- en: There is a view that provides the selection of content for the home page. Its
    default behavior is to include all content that has been promoted by checking
    its Promote to front page checkbox. So, we could limit the number of pieces displayed
    by limiting the number of those promoted. Let's be a little more creative.
  prefs: []
  type: TYPE_NORMAL
- en: We will limit the teaser to the most recent piece of promoted content and create
    a block that offers the others as a list of links.
  prefs: []
  type: TYPE_NORMAL
- en: No access to content
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This is the opposite problem of the first one. If we''re going to show the
    most recent piece of content, and a handful of others in a list, what about the
    content that is older than that? This is a dilemma suited for the same solution
    you often see with a blog: an archive. We''ll create one to show the older content.'
  prefs: []
  type: TYPE_NORMAL
- en: No RSS feeds menu
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This is an easy one to resolve. We have already created a custom block that
    provides a menu for our RSS feeds. All we will need to do is place this block
    on the home page.
  prefs: []
  type: TYPE_NORMAL
- en: We need a Terms and Conditions page
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The footer menu has a *Legal* link, which leads back to the home page. We'll
    change it to the heading we want, and create a page to link to it.
  prefs: []
  type: TYPE_NORMAL
- en: Making the changes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that we have a plan, let's get busy!
  prefs: []
  type: TYPE_NORMAL
- en: Improving the Frontpage view
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Navigate to *Structure* | *Views* (`/admin/structure/views`). Scroll down to
    the *Frontpage* view. This is one of the views that comes with Drupal. We could
    modify it, but it is a good practice to leave the original unchanged and, instead,
    make a duplicate to modify, which is what we''ll do here:'
  prefs: []
  type: TYPE_NORMAL
- en: From the drop-down in its row, select *Duplicate*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the View name text box that then appears, change the name to `Frontpage -
    Custom` and click *Duplicate*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the View configuration page, we will change the number of items that the
    view displays. It is currently configured to show 10 items and a pager, but we
    will change it to show only one. Click *Full* and select *This page (override)*
    from the drop-down. Select the setting for *Display a specified number of items*,
    and click *Apply (this display)*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the *Pager options* dialog, change the *Items per page* to `1`, click *Apply*,
    and then click *Save*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Return to the views list at `/admin/structure/views`. If you look at the list,
    you will see that the original *Frontpage* and our *Frontpage - Custom* both have
    the same path.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The path needs to be `/node` for technical reasons, but we cannot have two views
    responding to the same path. Therefore, in the row for the original Frontpage,
    select *Disable* from the drop-down.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This change will ensure that only the most recent piece of content. Let's edit
    our new view so that we can add an additional display to it. The current display
    is for the home page, but we also want a display that provides a block of title
    links for additional content.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On its configuration page, click the *+Add* button in the Displays panel, and
    select *Block*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Title
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Click on the link for *Title*, and select This block (override) from the drop-down.
    Then, in the pop-up, enter `Recent articles`, and click *Apply (this display)*.
  prefs: []
  type: TYPE_NORMAL
- en: Format
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Click the *Content* link and select *This block (override)* from the drop-down.
    Then, select *Fields* and click *Apply (this display)*. In the subsequent pop-up,
    click *Apply*.
  prefs: []
  type: TYPE_NORMAL
- en: Fields
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: At this point, we have told Views that we want our output to be a list, and
    that we want to be able to select the fields that will be in that list, but we
    have no fields selected. Views doesn't like that, and it doesn't help us, giving
    us an empty output. Let's let Views know that we want a list of titles that link
    back to the content.
  prefs: []
  type: TYPE_NORMAL
- en: Click the *Add* button. select *This block (override)* from the drop-down, scroll
    down and check the box for *Title*, and then click *Apply (this display)*. In
    the subsequent pop-up, click *Apply (this display)*.
  prefs: []
  type: TYPE_NORMAL
- en: Filtering criteria
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are number of filters in effect, but we want to also filter on the content
    type, limiting it to Article.
  prefs: []
  type: TYPE_NORMAL
- en: Click the Add button, select This block (override) from the drop-down, scroll
    down and check the box for Content type, and then click Apply (this display).
    In the subsequent pop-up, check the box for Article, and click Apply (this display).
  prefs: []
  type: TYPE_NORMAL
- en: Block settings
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Click *None* next to *Block name*, enter `Recent articles` in the text box,
    and click *Apply*.
  prefs: []
  type: TYPE_NORMAL
- en: Pager
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Click *10 items*, change `10` to `3`, set the offset to `1`, and click *Apply*.
    This tells Views that the three most recent articles after the most recent should
    be used. The reason we ignore the most recent is that it is the one that will
    appear as a teaser in the main content area, so we don't want to have its title
    appear in the block as well.
  prefs: []
  type: TYPE_NORMAL
- en: That completes our block. Don't forget to click *Save*.
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to *Structure* | *Block layout* (`/admin/structure/block`). In the
    *Sidebar first* section, click *Place block*. Then, in the row for *Recent articles,*
    click *Place block*, and then click *Save block*.
  prefs: []
  type: TYPE_NORMAL
- en: Adding an Archive
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Navigate to *Structure* | *Views* (`/admin/structure/views`), scroll down to
    the *Disabled* section, and enable the *Archive* view.
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to *Structure* | *Block layout* (`/admin/structure/views`), in the
    Sidebar first section. Then, click Place block, and scroll down in the row for
    Archive. Here, click Place block, and then click the Save block button.
  prefs: []
  type: TYPE_NORMAL
- en: Adding the RSS Feeds menu
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Earlier, we created a RSS feeds block display in a view. Let's add that block
    to our home page now.
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to *Structure* | *Block layout* (`/admin/structure/views`). In the
    *Sidebar first* section, click *Place block*. Then, scroll down the row for *RSS
    Feeds*, click *Place block*, and finally click the *Save block* button.
  prefs: []
  type: TYPE_NORMAL
- en: Fixing the Footer menu
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We want to fix the Legal link. One of the things we need to fix is that it is
    currently linking to the home page rather than a Terms and Conditions page. Drupal
    will not allow a path to be specified for the menu item unless the path already
    exists. Therefore, we need to create a Terms and Conditions page first.
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to Content | Create content (`/node/add`) and select Basic page as
    the content type. In the Title text box, enter `Terms & Conditions`. We're not
    going to enter the legalese at this point, but let's type `Placeholder` in the
    Body field for now. Click the vertical tab for URL Path Settings, enter `/termsandconditions`,
    and click Save.
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to Structure | Menus (`/admin/structure/menu`) and click the Edit menu
    button for the Footer menu.
  prefs: []
  type: TYPE_NORMAL
- en: Click the Edit button for the Legal link, and change the title from Legal to
    Terms & Conditions. For the Link, type Terms, and then when the autocomplete field
    offers the content title, click it. Enter `T's & C's` in the Description text
    box and click Save.
  prefs: []
  type: TYPE_NORMAL
- en: This completes our improvements.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/fc3dc44f-6295-4350-8954-43366a2b451f.png)'
  prefs: []
  type: TYPE_IMG
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we learned how to improve a weak home page by editing its view,
    providing an archive and recent content block, and change the footer menu.
  prefs: []
  type: TYPE_NORMAL
- en: This completes *Drupal 8 Quickstart*. I hope this book has helped you get your
    site up and running as well as helped your understanding of basic Drupal features.
    Thanks for reading!
  prefs: []
  type: TYPE_NORMAL
