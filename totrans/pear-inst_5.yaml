- en: 'Chapter 5. Releasing to the World: PEAR Channels'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 5 章。向世界发布：PEAR 渠道
- en: 'One of the premier features of PEAR version 1.4.0 and newer versions is the
    ability to publicly distribute your own applications for installation with the
    PEAR installer. Although this was feasible with PEAR 1.3.6 and earlier versions,
    it was far more difficult, and so was rarely attempted. PEAR version 1.4.0+ adds
    ease to distributing packages by the use of a new distribution medium called **channels**.
    Each PEAR channel provides a unique set of packages that can be installed quite
    easily using the PEAR installer. For instance, to install a package from the `pear.chiaraquartet.net`
    channel, one need only type:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: PEAR 版本 1.4.0 及更高版本的一个主要特性是能够公开分发自己的应用程序，以便使用 PEAR 安装程序进行安装。尽管在 PEAR 1.3.6 及更早版本中这是可行的，但难度很大，因此很少尝试。PEAR
    版本 1.4.0+ 通过使用一种新的分发介质称为 **渠道** 来简化包的分发。每个 PEAR 渠道提供一组独特的包，可以使用 PEAR 安装程序轻松安装。例如，要从
    `pear.chiaraquartet.net` 渠道安装一个包，只需输入：
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: In the past, this was simply not possible. A non-intuitive set of keystrokes
    would be needed to install a package from `pear.chiaraquartet.net:`
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去，这根本不可能实现。安装来自 `pear.chiaraquartet.net:` 的包需要一组非直观的按键操作。
- en: '[PRE1]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The complexity is confounded by cross-channel dependencies. The `pear.chiaraquartet.net/Chiara_PEAR_Server`
    package depends on `pear.php.net/HTML_QuickForm`, and so the sequence would in
    fact need to be:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 复杂性被跨渠道依赖所加剧。`pear.chiaraquartet.net/Chiara_PEAR_Server` 包依赖于 `pear.php.net/HTML_QuickForm`，因此实际上需要按照以下顺序：
- en: '[PRE2]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The same process would need to be repeated upon upgrading, introducing both
    painful memory requirements ("Where did I get this Chiara_PEAR_Server from again?")
    and the chance for error. What if `pear.chiaraquartet.net` happened to provide
    a package named `LogXML` and `pear.php.net` introduced one? If you were to accidentally
    type:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在升级时，需要重复相同的流程，这不仅带来了痛苦的回忆需求（“我上次是从哪里得到这个 Chiara_PEAR_Server 的？”），还增加了出错的机会。如果
    `pear.chiaraquartet.net` 恰好提供了一个名为 `LogXML` 的包，而 `pear.php.net` 也引入了一个包，那么如果你不小心输入了：
- en: '[PRE3]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Without the necessary:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有必要的：
- en: '[PRE4]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: You could unknowingly upgrade to the wrong package! Channels remove all of these
    troubles, and do so with rigorous security.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会无意中升级到错误的包！渠道消除了所有这些麻烦，并且以严格的安全措施来实现。
- en: So how do you set up your own channel? This chapter will investigate the steps
    needed to install Chiara_PEAR_Server, and the structure of a channel definition
    file used to document your channel's unique features.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，如何设置你自己的渠道？本章将探讨安装 Chiara_PEAR_Server 所需的步骤，以及用于记录渠道独特特征的渠道定义文件的架构。
- en: In addition, we will learn how to distribute customized PEAR applications per-user,
    even for pay-for-use applications. We'll discover the **Crtx_PEAR_Channel_Frontend**
    package used to provide a public front door for users browsing the web, and finally,
    we will talk about security issues.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们还将学习如何按用户分发定制的 PEAR 应用程序，即使是付费使用应用程序。我们将发现用于为用户浏览网页提供公共入口的 **Crtx_PEAR_Channel_Frontend**
    包，最后，我们将讨论安全问题。
- en: Distributing a package.xml-Based Package
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分发基于 package.xml 的包
- en: 'There are two ways of distributing packages (either of which can be used):'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 分发包有两种方式（任选其一）：
- en: Channel server
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 渠道服务器
- en: Static tarball
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 静态压缩包
- en: You will learn about both approaches in this section.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 你将在本节中了解这两种方法。
- en: 'Before the release of PEAR 1.4.0, the user typed:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在 PEAR 1.4.0 版本发布之前，用户需要输入：
- en: '[PRE5]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The PEAR installer would then use XML-RPC to send a request for the `package.listAll`
    method to [http://pear.php.net/xmlrpc.php](http://pear.php.net/xmlrpc.php). Meanwhile,
    at `pear.php.net`, the database of all packages, releases, and dependencies would
    be queried for data (or a server-side cache accessed), and then it would be dynamically
    encoded into an XML-RPC response, decoded at the user end, and converted into
    a PHP array containing a list of all packages and their releases. This would then
    be formatted into a pretty list of package names and spewed out on to the screen.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: PEAR 安装程序将使用 XML-RPC 发送请求，请求 `package.listAll` 方法到 [http://pear.php.net/xmlrpc.php](http://pear.php.net/xmlrpc.php)。同时，在
    `pear.php.net`，将查询所有包、发布和依赖关系的数据库以获取数据（或访问服务器端缓存），然后将其动态编码成 XML-RPC 响应，在用户端解码，并转换成一个包含所有包及其发布的
    PHP 数组。然后，这些信息将被格式化为一个漂亮的包名称列表，并显示在屏幕上。
- en: Tip
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**XML-RPC** stands for **XML Remote Procedure Call**, and is a protocol that
    allows a program to call a function on a remote server as if it were implemented
    on the local machine.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**XML-RPC** 代表 **XML 远程过程调用**，是一种协议，允许程序像在本地机器上实现一样在远程服务器上调用函数。'
- en: '**SOAP** (until recently it was **Simple Object Access Protocol**, but now
    just "SOAP", because the developers realized there was nothing simple about it
    and it was a confusing name as well) is a more complex implementation of the same
    idea.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**SOAP**（直到最近它被称为 **简单对象访问协议**，但现在只是 "SOAP"，因为开发者意识到它并不简单，而且这个名字也很容易引起混淆）是同一想法的更复杂实现。'
- en: 'From the end user''s perspective, there are two ways of installing a remote
    package using the PEAR installer. The first way is to install an abstraction,
    as in:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 从最终用户的角度来看，使用 PEAR 安装程序安装远程包有两种方式。第一种方式是安装一个抽象包，如下所示：
- en: '[PRE6]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Each of these examples takes the information passed in by the user and converts
    it into an actual, existing URL for retrieving a file from the channel server
    (`pear.php.net` in this case), and then downloads that package for installation.
    In fact, at the time of writing this chapter, each of these examples essentially
    converts into this:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这些示例中的每一个都将用户传入的信息转换为从频道服务器（在这种情况下为 `pear.php.net`）检索文件的实际、现有 URL，然后下载该包进行安装。实际上，在撰写本章时，这些示例本质上都转换为以下内容：
- en: '[PRE7]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The second way of installing a package is to directly specify a URL to install,
    as above.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 安装包的第二种方式是直接指定安装的 URL，如上所述。
- en: These two approaches appear to be the same to the end user. However, behind
    the scenes they differ significantly. When downloading and installing a package
    via an abstract package like `PEAR` or `PEAR-stable`, it is possible to validate
    all dependencies prior to downloading a single file, saving considerable time
    in the slowest part of installation — downloading. When installing a static URL
    ( [http://pear.php.net/get/PEAR-1.4.3.tgz](http://pear.php.net/get/PEAR-1.4.3.tgz)),
    it is necessary to download the entire package before any dependency validation
    can occur, possibly resulting in wasted bandwidth.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这两种方法对最终用户来说看起来是相同的。然而，在幕后，它们有显著的不同。通过通过像 `PEAR` 或 `PEAR-stable` 这样的抽象包下载和安装包时，可以在下载单个文件之前验证所有依赖关系，从而在安装过程中最慢的部分——下载——中节省大量时间。当通过静态
    URL（[http://pear.php.net/get/PEAR-1.4.3.tgz](http://pear.php.net/get/PEAR-1.4.3.tgz)）安装时，在执行任何依赖关系验证之前，必须下载整个包，这可能会导致带宽浪费。
- en: In order to convert abstract-package requests into actual physical URLs, a small
    amount of information is retrieved from the remote channel server. This information
    is used to validate dependencies prior to downloading a full package, and also
    to determine the correct version of a package to be downloaded based on the user's
    requirements.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将抽象包请求转换为实际的物理 URL，需要从远程频道服务器检索少量信息。这些信息用于在下载完整包之前验证依赖关系，并根据用户的需求确定要下载的包的正确版本。
- en: 'For example, the following call first retrieves a list of all releases of PEAR
    organized by version number and stability:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，以下调用首先检索按版本号和稳定性组织的所有 PEAR 版本列表：
- en: '[PRE8]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Assume the server returns a list like this:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 假设服务器返回如下列表：
- en: '| Version | Stability |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| 版本 | 稳定性 |'
- en: '| --- | --- |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| 1.5.0a1 | alpha |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| 1.5.0a1 | alpha |'
- en: '| 1.4.3 | stable |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| 1.4.3 | stable |'
- en: '| 1.4.2 | stable |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| 1.4.2 | stable |'
- en: '| 1.4.1 | stable |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| 1.4.1 | stable |'
- en: '| 1.4.0 | stable |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| 1.4.0 | stable |'
- en: '| 1.4.0RC1 | beta |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| 1.4.0RC1 | beta |'
- en: '| 1.4.0a14 | alpha |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| 1.4.0a14 | alpha |'
- en: 'The PEAR installer will examine version 1.5.0a1, the newest version available,
    and will determine it is not stable enough to install. Next, it will examine version
    1.4.3 and (assuming the installed version is 1.4.2 or older) determine that this
    is the version that should be downloaded. Next, it will query the server and retrieve
    the list of dependencies for version 1.4.3, which is something like this:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: PEAR 安装程序将检查版本 1.5.0a1，这是可用的最新版本，并确定它不够稳定以进行安装。接下来，它将检查版本 1.4.3，并且（假设已安装的版本是
    1.4.2 或更早版本）确定这是应该下载的版本。接下来，它将查询服务器并检索版本 1.4.3 的依赖关系列表，这类似于以下内容：
- en: '| Dependency type | Dependency name (if any) | Dependency version requirements
    |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| 依赖类型 | 依赖名称（如果有） | 依赖版本要求 |'
- en: '| --- | --- | --- |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| PHP |   | 4.2.0 or newer |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| PHP |   | 4.2.0 或更高版本 |'
- en: '| PEAR installer |   | 1.3.3 1.3.6, 1.4.0a12 or newer |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| PEAR 安装程序 |   | 1.3.3 1.3.6, 1.4.0a12 或更高版本 |'
- en: '| Package | Archive_Tar | 1.3.1 or newer (1.3.1 recommended) |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| 包 | Archive_Tar | 1.3.1 或更高版本（推荐 1.3.1）|'
- en: '| Package | Console_Getopt | 1.2 or newer (1.2 recommended) |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| 包 | Console_Getopt | 1.2 或更高版本（推荐使用 1.2）|'
- en: '| Package | XML_RPC | 1.4.3 or newer (1.4.3 recommended) |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| 包 | XML_RPC | 1.4.3 或更高版本（推荐使用 1.4.3）|'
- en: '| Conflicting package | PEAR_Frontend_Web | 0.4 or older |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| 冲突包 | PEAR_Frontend_Web | 0.4 或更早版本|'
- en: '| Conflicting package | PEAR_Frontend_Gtk | 0.3 or older |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| 冲突包 | PEAR_Frontend_Gtk | 0.3 或更早版本|'
- en: '| Remote installer group | PEAR_RemoteInstaller | 0.1.0 or newer |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| 远程安装程序组 | PEAR_RemoteInstaller | 0.1.0 或更高版本|'
- en: '| Web installer group | PEAR_Frontend_Web | 0.5.0 or newer |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| 网页安装程序组 | PEAR_Frontend_Web | 0.5.0 或更高版本|'
- en: '| Gtk installer group | PEAR_Frontend_Gtk | 0.4.0 or newer |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| Gtk 安装程序组 | PEAR_Frontend_Gtk | 0.4.0 或更高版本|'
- en: Before downloading PEAR 1.4.3 to install it, the PEAR installer will use this
    information to determine whether the package is compatible with existing installed
    packages, and the running version of PHP and the PEAR installer. Only if all checks
    pass, will the PEAR installer continue with the downloading/installation.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在下载 PEAR 1.4.3 以安装它之前，PEAR 安装程序将使用这些信息来确定该包是否与现有已安装的包兼容，以及 PHP 和 PEAR 安装程序的运行版本。只有当所有检查都通过时，PEAR
    安装程序才会继续下载/安装。
- en: In addition, because PEAR 1.4.3 has a `package.xml` version 2.0, when upgrading
    from PEAR 1.4.0 or newer, the list of required dependencies will also be automatically
    downloaded and installed.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，由于 PEAR 1.4.3 的 `package.xml` 版本为 2.0，当从 PEAR 1.4.0 或更高版本升级时，所需的依赖项列表也将自动下载并安装。
- en: How, you might be asking yourself, can I distribute my applications and libraries
    to take advantage of the power and elegance built into the PEAR installer? The
    answer turns out to be quite simple, as evidenced by the small explosion of channel
    servers since the release of PEAR version 1.4.0, like eZ components (http://www.ez.no),
    and the popular pearified channel ( [http://www.pearified.com](http://www.pearified.com)).
    The **Chiara_PEAR_Server** package is a fully functional PEAR channel server available
    for installation from the `pear.chiaraquartet.net` channel server.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能会问自己，我如何分发我的应用程序和库，以利用 PEAR 安装程序内置的强大功能和优雅性？答案出乎意料地简单，正如自 PEAR 版本 1.4.0 发布以来频道服务器数量的小幅激增所证明的那样，例如
    eZ components（http://www.ez.no），以及流行的 pearified 频道（[http://www.pearified.com](http://www.pearified.com)）。**Chiara_PEAR_Server**
    包是一个完全功能的 PEAR 频道服务器，可以从 `pear.chiaraquartet.net` 频道服务器安装。
- en: Tip
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Originally, Chiara_PEAR_Server was named PEAR_Server. The intention was to propose
    a package named "PEAR_Server" or "PEAR_Channel_Server" to the `pear.php.net` repository
    when the code is stable enough. Until that point, however, there are potential
    naming conflicts (PEAR is generally reserved for packages that originate from
    `pear.php.net)`, and the package will be named Chiara_PEAR_Server as long as it
    is distributed from `pear.chiaraquartet.net`
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 最初，Chiara_PEAR_Server 的名字是 PEAR_Server。意图是在代码足够稳定时，向 `pear.php.net` 仓库提出一个名为
    "PEAR_Server" 或 "PEAR_Channel_Server" 的包。然而，在此之前，存在潜在的命名冲突（通常 PEAR 保留用于源自 `pear.php.net`
    的包），因此只要它从 `pear.chiaraquartet.net` 分发，包将被命名为 Chiara_PEAR_Server。
- en: Once you have Chiara_PEAR_Server up and running (prerequisites include a working
    PEAR installation and a MySQL server, plus PHP 5.0.0 or newer with the mysql or
    mysqli extensions), you might also consider installing Davey Shafik's public front
    end, **Crtx_Channel_PEAR_Server_Frontend**, available from the `crtx.org` channel.
    This is discussed later on in this chapter, in the section entitled *Configuring
    the Server; Obtaining a Front End for End Users*.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦 Chiara_PEAR_Server 运行起来（前提条件包括一个有效的 PEAR 安装、MySQL 服务器以及 PHP 5.0.0 或更高版本，并带有
    mysql 或 mysqli 扩展），您也可以考虑安装 Davey Shafik 的公共前端 **Crtx_Channel_PEAR_Server_Frontend**，该前端可通过
    `crtx.org` 频道获取。这一点将在本章后面的 *配置服务器；为最终用户提供前端* 部分中讨论。
- en: Distributing Packages through a Channel Server
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过频道服务器分发包
- en: When distributing packages through a channel server, there are a few things
    that the PEAR installer needs in order to determine which packages to install.
    Most important is how to communicate with the channel server. Does the server
    expect an incoming XML-RPC request, or is REST supported? Which XML-RPC functions
    are implemented, and which REST information is provided? Are there any mirrors
    available? What, if any, are the custom-package validation requirements?
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 当通过频道服务器分发包时，PEAR 安装程序需要一些信息来确定要安装哪些包。最重要的是如何与频道服务器通信。服务器是否期望接收 XML-RPC 请求，或者支持
    REST？实现了哪些 XML-RPC 函数，提供了哪些 REST 信息？是否有可用的镜像？是否有任何自定义包验证要求？
- en: All of these questions are answered by the simple `channel.xml` structure. Before
    installing Chiara_PEAR_Server, it is important to understand the underpinnings
    of the package, as it will make it possible to get up and run very quickly.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些问题都通过简单的`channel.xml`结构得到解答。在安装Chiara_PEAR_Server之前，了解该包的基础非常重要，因为它将使快速启动和运行成为可能。
- en: The channel.xml File
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`channel.xml`文件'
- en: The first thing a channel needs in order to exist is a `channel.xml` file. The
    official definition of `channel.xml` in XSchema format is found at [http://pear.php.net/dtd/channel-1.0.xsd](http://pear.php.net/dtd/channel-1.0.xsd).
    The `channel.xml` file *must* be named `channel.xml` and must be located in the
    root directory of your channel; otherwise the PEAR installer's auto-discovery
    mechanism will not work. For instance, the channel definition file for `pear.php.net`
    is located at [http://pear.php.net/channel.xml](http://pear.php.net/channel.xml),
    and the channel definition file for `pear.chiaraquartet.net` is located at [http://pear.chiaraquartet.net/channel.xml](http://pear.chiaraquartet.net/channel.xml).
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 一个通道为了存在，首先需要的是一个`channel.xml`文件。在XSchema格式中，`channel.xml`的官方定义可以在[http://pear.php.net/dtd/channel-1.0.xsd](http://pear.php.net/dtd/channel-1.0.xsd)找到。`channel.xml`文件*必须*命名为`channel.xml`，并且必须位于通道的根目录中；否则，PEAR安装程序的自动发现机制将无法工作。例如，`pear.php.net`的通道定义文件位于[http://pear.php.net/channel.xml](http://pear.php.net/channel.xml)，而`pear.chiaraquartet.net`的通道定义文件位于[http://pear.chiaraquartet.net/channel.xml](http://pear.chiaraquartet.net/channel.xml)。
- en: This file allows the PEAR installer to quickly and efficiently determine the
    capabilities offered by a channel server without wasting any bandwidth. A `channel.xml`
    file must define the channel name (its server hostname and path), a brief summary
    of the channel's purpose, and then metadata used to retrieve package information
    for installation purposes. In addition, the `channel.xml` file allows explicit
    definition of channel mirrors, for the first time making it possible to mirror
    a channel repository.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 此文件允许PEAR安装程序快速有效地确定通道服务器提供的功能，而不会浪费任何带宽。一个`channel.xml`文件必须定义通道名称（其服务器主机名和路径）、通道目的的简要说明，以及用于检索安装目的的包信息的元数据。此外，`channel.xml`文件允许显式定义通道镜像，首次使镜像通道存储库成为可能。
- en: 'Here is an example `channel.xml` file containing every possible tag:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是一个包含每个可能标签的示例`channel.xml`文件：
- en: '[PRE9]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: A quick glance over the `channel.xml` file reveals a large amount of information
    contained in a very simple format. With this file, we tell the PEAR installer
    whether to use a secure connection or not, how to access the package metadata
    (with XML-RPC, SOAP, or REST), and how the user can access/use the channel (suggested
    alias, validation package).
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 快速浏览`channel.xml`文件可以揭示大量信息，这些信息以非常简单的格式呈现。通过此文件，我们告诉PEAR安装程序是否使用安全连接，如何访问包元数据（使用XML-RPC、SOAP或REST），以及用户如何访问/使用通道（建议别名、验证包）。
- en: Tip
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Does PEAR Installer Support SOAP?**'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '**PEAR安装程序支持SOAP吗？**'
- en: No. Sorry to burst your bubble, but SOAP is not necessary for the relatively
    simple remote communication needed by the PEAR installer; so no, SOAP is not implemented.
    However, should the need arise in the future, or should a channel wish to advertise
    custom SOAP methods implemented, the `channel.xml` spec supports SOAP.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 很抱歉打破你的幻想，但SOAP对于PEAR安装程序所需的相对简单的远程通信并不是必需的；所以，SOAP没有被实现。然而，如果将来有需要，或者通道希望宣传自定义的SOAP方法，`channel.xml`规范支持SOAP。
- en: However, this should only be used to inform the client that a **WSDL** (**Web
    Services Description Language**) file is present, as this format is much richer
    than `channel.xml`.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这仅应用于通知客户存在一个**WSDL（Web服务描述语言**）文件，因为这种格式比`channel.xml`丰富得多。
- en: 'A channel may be located at a hostname''s root directory (**pear.example.com**),
    or at a subdirectory (pear.example.com/subdirectory). Note that `pear.example.com`
    is a different channel from `pear.example.com/subdirectory`. Users would install
    packages from the `pear.example.com/subdirectory` channel as follows:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 一个通道可以位于主机名的根目录（**pear.example.com**）或子目录（pear.example.com/subdirectory）。请注意，`pear.example.com`与`pear.example.com/subdirectory`是不同的通道。用户将按照以下方式从`pear.example.com/subdirectory`通道安装包：
- en: '[PRE10]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Other packages would depend on packages from the `pear.example.com/subdirectory`
    channel with a `package.xml` tag like this:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 其他包将依赖于来自`pear.example.com/subdirectory`通道的包，其中包含一个类似于下面的`package.xml`标签：
- en: '[PRE11]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: channel.xml Tag Summary
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`channel.xml`标签摘要'
- en: A channel's`<summary>` should be a one-line description of the channel, such
    as "The PHP Extension and Application Repository".
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 通道的`<summary>`应该是对通道的单行描述，例如：“PHP扩展和应用仓库”。
- en: The`<suggestedalias>` of a channel is the short name that a user can use on
    the command line.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 通道的`<suggestedalias>`是用户可以在命令行中使用的简称。
- en: 'For instance, the `pear.php.net` channel''s suggested alias is `pear`, the
    `pecl.php.net` channel''s suggested alias is `pecl`, and the `pear.chiaraquartet.net`
    channel''s suggested alias is `chiara`. These aliases can be used to install packages
    quickly, such as:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，`pear.php.net`通道的建议别名是`pear`，`pecl.php.net`通道的建议别名是`pecl`，而`pear.chiaraquartet.net`通道的建议别名是`chiara`。这些别名可以用来快速安装包，例如：
- en: '[PRE12]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The alias is a suggested alias because the end user has the option to redefine
    the alias via the `channel-alias` command:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 别名是建议的别名，因为最终用户有通过`channel-alias`命令重新定义别名的选项：
- en: '[PRE13]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'This would allow the quick installation of packages with:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 这将允许快速安装包：
- en: '[PRE14]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Tip
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: You cannot use a channel's suggested alias in the dependencies section of a
    `package.xml` file. You must use the full name of channel.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 你不能在`package.xml`文件的依赖关系部分使用通道建议的别名。你必须使用通道的全名。
- en: A channel's validation package (controlled by the`<validatepackage>` tag) is
    used by the installer to perform customized validation specific to the channel.
    The default validation (found in the `PEAR/Validate.php` file of the PEAR package)
    is quite strict in terms of versioning and package naming, and attempts to implement
    coding standards that are specific to `pear.php.net-based` packages. These rules
    are stricter than the rules implemented by the `pecl.php.net` channel, and so
    `pecl.php.net` packages are validated using the custom channel validator found
    in the `PEAR/Validate/PECL.php` file of the PEAR package.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 通道的验证包（由`<validatepackage>`标签控制）由安装程序用于执行针对通道的特定定制验证。默认验证（在PEAR包的`PEAR/Validate.php`文件中找到）在版本和包命名方面非常严格，并试图实现针对`pear.php.net-based`包的特定编码标准。这些规则比`pecl.php.net`通道实施的规则更严格，因此`pecl.php.net`包使用PEAR包的`PEAR/Validate/PECL.php`文件中找到的定制通道验证器进行验证。
- en: Most channels external to `pear.php.net` will want to copy the `channel.xml`
    file for the `pecl.php.net` channel, and use the `PEAR_Validate_PECL` validation
    package.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数外部于`pear.php.net`的通道都希望复制`pecl.php.net`通道的`channel.xml`文件，并使用`PEAR_Validate_PECL`验证包。
- en: A custom channel validator must provide a class that matches the path (PEAR/Validate/PECL.php
    provides the `PEAR_Validate_PECL` class), and the package name must be identical
    to the class name. In addition, the class must extend `PEAR_Validate`, and implement
    validation with the `validate*()` methods (such as `validateVersion(), validatePackage(),
    validateSummary()`, and so on). In addition, the class *must* be a package distributed
    from the channel itself, unless the class is already loaded in memory.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 自定义通道验证器必须提供一个与路径匹配的类（`PEAR/Validate/PECL.php`提供了`PEAR_Validate_PECL`类），并且包名必须与类名相同。此外，该类必须扩展`PEAR_Validate`，并实现使用`validate*()`方法（如`validateVersion()`、`validatePackage()`、`validateSummary()`等）的验证。此外，该类*必须*是来自通道本身的包分发的，除非该类已经加载到内存中。
- en: Tip
  id: totrans-94
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: The default validation class `PEAR_Validate` and the PECL validation class `PEAR_Validate_PECL`
    will always be available for use by channels as custom validation packages.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 默认验证类`PEAR_Validate`和PECL验证类`PEAR_Validate_PECL`将始终可用，供通道作为自定义验证包使用。
- en: To use the `PEAR_Validate_PECL` class, simply add this line to `channel.xml:`
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用`PEAR_Validate_PECL`类，只需将此行添加到`channel.xml`中：
- en: '`<validatepackage version="1.0"> PEAR_Validate_PECL</validatepackage>`'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '`<validatepackage version="1.0"> PEAR_Validate_PECL</validatepackage>`'
- en: The most important part of the `channel.xml` channel definition file is the`<servers>`
    tag. This is where the PEAR installer determines how to connect to a channel (via
    REST or XML-RPC) and whether any mirrors are available.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '`channel.xml`通道定义文件最重要的部分是`<servers>`标签。这是PEAR安装程序确定如何连接到通道（通过REST或XML-RPC）以及是否有可用镜像的地方。'
- en: 'The protocols supported by the primary channel server (which must be the same
    as the channel name) are defined in the`<primary>` tag. Mirrors are (logically)
    defined by the`<mirror>` tag, which is described at the end of this section. The`<primary>`
    tag has a few optional attributes:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 主要通道服务器（必须与通道名称相同）支持的协议在`<primary>`标签中定义。镜像通过`<mirror>`标签（在本节末尾描述）逻辑上定义。`<primary>`标签有几个可选属性：
- en: '**ssl** — legal values are *yes* and *no*. By default, `ssl` is set to *no*.
    If set to *yes*, then the channel server will be contacted through a secure socket.'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ssl** — 合法值是 *yes* 和 *no*。默认情况下，`ssl` 设置为 *no*。如果设置为 *yes*，则将通过安全套接字联系通道服务器。'
- en: '**port** — legal values are any positive integer. By default, `port` is set
    to *80*, the default HTTP port for contacting a remote web server. All data from
    channels are transported via HTTP, and so this is a natural choice.'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**端口** — 合法值是任何正整数。默认情况下，`端口` 设置为 *80*，这是联系远程 Web 服务器的默认 HTTP 端口。所有来自通道的数据都通过
    HTTP 传输，因此这是一个自然的选择。'
- en: Tip
  id: totrans-102
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: REST, although very new, has several significant advantages over XML-RPC. First
    of all, REST content (as implemented in the PEAR channel standard) is all static
    files. This means that a lightweight server like thttpd can be used for high-volume
    sites to serve the content. In addition, channel aggregators like [http://www.pearified.com](http://www.pearified.com)
    and [http://www.pearadise.com](http://www.pearadise.com) can crawl through your
    channel and provide a searchable index of the packages.
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 虽然 REST 非常新，但它相对于 XML-RPC 有几个显著的优势。首先，REST 内容（如 PEAR 通道标准中实现的那样）都是静态文件。这意味着可以使用轻量级服务器如
    thttpd 来为高流量站点提供服务内容。此外，像 [http://www.pearified.com](http://www.pearified.com)
    和 [http://www.pearadise.com](http://www.pearadise.com) 这样的通道聚合器可以爬取您的通道并提供包的可搜索索引。
- en: Mirroring of REST-based channels is straightforward because of the same design
    principles, and can be done with a simple web crawler script.
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 由于遵循相同的设计原则，基于 REST 的通道镜像非常简单，可以使用一个简单的网络爬虫脚本来完成。
- en: In addition, as of PEAR 1.4.3, XML-RPC support is optional in the PEAR installer,
    so not all users will support XML-RPC on the client-side.
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此外，从 PEAR 1.4.3 版本开始，XML-RPC 支持在 PEAR 安装程序中是可选的，因此并非所有用户都会在客户端支持 XML-RPC。
- en: 'There are only a few protocols recognized by the PEAR Installer. For XML-RPC,
    the functions recognized are:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: PEAR 安装程序只识别少数几种协议。对于 XML-RPC，识别的函数有：
- en: '`logintest(1.0)` : This simply returns true'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`logintest(1.0)` : 这个函数简单地返回 true'
- en: '`package.listLatestReleases(1.0)` : This returns an array indexed by package
    name containing the file size, version, state, and dependencies of its latest
    release, if any.'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`package.listLatestReleases(1.0)` : 这个函数返回一个数组，按包名索引，包含其最新发布版本的文件大小、版本、状态和依赖项（如果有）。'
- en: '`package.listAll(1.0)` : This returns an array of packages with extreme details
    about their releases.'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`package.listAll(1.0)` : 这个函数返回一个包含其发布版本极端详细信息的包数组。'
- en: '`package.info(1.0)` : This returns an array of detailed information about a
    single package.'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`package.info(1.0)` : 这个函数返回关于单个包的详细信息的数组。'
- en: '`package.getDownloadURL(1.0)` : This returns an array with simple information
    about a release and a precise URL from which to download a specific release.'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`package.getDownloadURL(1.0)` : 这个函数返回一个包含关于发布版本简单信息和精确下载 URL 的数组。'
- en: '`package.getDownloadURL(1.1)` : Like version 1.0, this returns an array with
    simple information about a release and a precise URL. In addition, this accepts
    as a parameter the currently installed version of a package to narrow down the
    search.'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`package.getDownloadURL(1.1)` : 与版本 1.0 类似，这个函数返回一个包含关于发布版本简单信息和精确 URL 的数组。此外，这个函数接受作为参数的当前安装的包版本以缩小搜索范围。'
- en: '`package.getDepDownloadURL(1.0)` : Like `package.getDownloadURL`, this returns
    information about a release and a precise URL to download the release from. However,
    as input, it accepts a dependency as parsed from `package.xml`.'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`package.getDepDownloadURL(1.0)` : 与 `package.getDownloadURL` 类似，这个函数返回关于发布版本的信息和下载该发布版本的精确
    URL。然而，作为输入，它接受从 `package.xml` 解析出的依赖项。'
- en: '`package.getDepDownloadURL (1.1)`: Like `package.getDepDownloadURL`, this returns
    information about a release and a precise URL to download the release from. It
    also accepts the currently installed version of the dependency as a parameter.'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`package.getDepDownloadURL (1.1)`: 与 `package.getDepDownloadURL` 类似，这个函数返回关于一个发布版本和下载该发布版本的精确
    URL 的信息。它还接受作为参数的当前已安装的依赖版本。'
- en: '`package.search(1.0)`: Like `package.listAll`, this returns a list of packages
    with detailed information. However, this function limits the search of information
    based on input parameters.'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`package.search(1.0)`: 与 `package.listAll` 类似，这个函数返回包含详细信息的包列表。然而，这个函数根据输入参数限制信息搜索。'
- en: '`channel.listAll(1.0)`: This function returns a simple list of channels known
    by the current channel.'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`channel.listAll(1.0)`: 这个函数返回当前通道所知的通道的简单列表。'
- en: This detail is provided for informational purposes only, as XML-RPC support
    is deprecated for all channels.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 提供此详细信息仅用于信息目的，因为所有通道的 XML-RPC 支持都已弃用。
- en: Instead, your channel should support REST-based static files conveying information
    about the categories, maintainers, packages, and releases available through the
    channel. There are two protocols supported by the PEAR installer at the time of
    writing this chapter. The first is collectively known as **REST1.0**, and is defined
    by a set of path-related assumptions the installer makes and several XSchema files.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，您的通道应该支持基于 REST 的静态文件，这些文件传达了通过通道可用的类别、维护者、软件包和发布信息。在撰写本章时，PEAR 安装程序支持两种协议。第一种统称为
    **REST1.0**，它由安装程序做出的路径相关假设和几个 XSchema 文件定义。
- en: 'Inside `channel.xml`, REST is declared using a`<baseurl>` tag much like this
    one:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `channel.xml` 文件中，REST 使用 `<baseurl>` 标签声明，类似于以下内容：
- en: '[PRE15]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: This is in fact all that the installer needs in order to fully implement REST.
    From this information, the installer is able to build any necessary query to determine
    remote information. Astute readers may have noticed a familiar word from their
    work with databases — query — querying is exactly what the PEAR installer does;
    accessing data directly rather than through an API wrapper like SOAP or XML-RPC.
    Unlike the procedural protocol used by XML-RPC and by RPC-based SOAP, REST is
    based on the principle of providing hyperlinked data, or resources, with a unique
    URL for each resource.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '实际上，安装程序只需要这些信息来完全实现 REST。从这个信息中，安装程序能够构建任何必要的查询以确定远程信息。敏锐的读者可能已经注意到了他们与数据库工作中的一个熟悉词汇——查询——查询正是
    PEAR 安装程序所做的事情；直接访问数据而不是通过像 SOAP 或 XML-RPC 这样的 API 包装器。与 XML-RPC 和基于 RPC 的 SOAP
    所使用的程序性协议不同，REST 基于提供超链接数据或资源的原理，每个资源都有一个独特的 URL。 '
- en: PEAR is an unusual REST interface in that it is strictly read-only, but this
    is an even better reason to use REST. Not only can the installer grab any data
    it wants without relying upon an intrinsically limited API, we can also take advantage
    of some of the more powerful features of the HTTP protocol itself, and implement
    a client-side HTTP cache, saving a tremendous amount of bandwidth and time that
    would otherwise be spent downloading redundant information.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: PEAR 是一个不寻常的 REST 接口，因为它严格是只读的，但这更是使用 REST 的好理由。不仅安装程序可以抓取它想要的任何数据而不依赖于本质上有限的
    API，我们还可以利用 HTTP 协议的一些更强大的功能，并在客户端实现 HTTP 缓存，节省大量带宽和时间，否则这些带宽和时间将用于下载冗余信息。
- en: This also provides an inherent security benefit to both the client and the server.
    The client is simply working with static XML files, and the server is not required
    to accept any input from the client whatsoever. In short, REST is simply the best
    choice from all ends.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 这也为客户端和服务器提供了固有的安全优势。客户端只是与静态 XML 文件工作，服务器无需从客户端接受任何输入。简而言之，REST 简直是从所有方面来看都是最佳选择。
- en: 'The path structure expected by the PEAR installer when accessing REST1.0 is
    the following one:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 当访问 REST1.0 时，PEAR 安装程序期望的路径结构如下：
- en: '[PRE16]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Note that PackageName3 has no releases, and so has no REST entry.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，PackageName3 没有发布版本，因此没有 REST 条目。
- en: 'REST1.1 adds these files to the structure:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: REST1.1 将这些文件添加到结构中：
- en: '[PRE17]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: The primary purpose of REST1.1 is to enable spidering of a channel without requiring
    that old-fashioned directory crawling to be allowed, eliminating the potential
    security vulnerability intrinsic to all web servers.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: REST1.1 的主要目的是在不要求允许老式的目录爬行的情况下，允许对通道进行爬取，消除了所有 Web 服务器固有的潜在安全漏洞。
- en: A channel server mirror is defined by the`<mirror>` tag. This tag is identical
    to the`<primary>` tag except that it requires an additional attribute, `host`.
    The `host` attribute defines the URL that should be used to contact the mirror.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 通道服务器镜像由 `<mirror>` 标签定义。此标签与 `<primary>` 标签相同，但它需要一个额外的属性，即 `host`。`host` 属性定义了用于联系镜像的
    URL。
- en: Obtaining Chiara_PEAR_Server
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 获取 Chiara_PEAR_Server
- en: 'The Chiara_PEAR_Server package is easily obtained. First, you need to meet
    a few prerequisites. The Chiara_PEAR_Server package requires:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: Chiara_PEAR_Server 软件包很容易获取。首先，您需要满足一些先决条件。Chiara_PEAR_Server 软件包需要：
- en: PHP 5.0.0 or newer; PHP 5.1.0 or newer is recommended
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PHP 5.0.0 或更高版本；建议使用 PHP 5.1.0 或更高版本
- en: A MySQL database server
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MySQL 数据库服务器
- en: The mysql or mysqli PHP extension
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: mysql 或 mysqli PHP 扩展
- en: A working web server such as Apache
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个运行中的 Web 服务器，例如 Apache
- en: PEAR version 1.4.3 or newer
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PEAR 版本 1.4.3 或更高
- en: 'To obtain PEAR version 1.4.3 or newer, if you have PHP version 5.1.0, all you
    need to do on UNIX is:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取 PEAR 版本 1.4.3 或更高版本，如果您使用的是 PHP 版本 5.1.0，在 UNIX 系统上您需要做的只是：
- en: '[PRE18]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: This will install and configure PEAR automatically. Note that the `configure`
    command accepts a large number of options, and it is easy to learn about them
    through `./configure --help`.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 这将自动安装和配置 PEAR。请注意，`configure` 命令接受大量选项，您可以通过 `./configure --help` 来了解它们。
- en: Note that installing PHP in a web server is more complicated, and is necessary
    to install the Chiara_PEAR_Server package. If you are using Apache, all you need
    to do is pass in the `--with-apache` or `--with-apache2` directives to `configure`,
    and you will be up and running.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，在 Web 服务器上安装 PHP 更为复杂，并且是安装 Chiara_PEAR_Server 软件包所必需的。如果您使用 Apache，只需将 `--with-apache`
    或 `--with-apache2` 指令传递给 `configure` 即可，然后您就可以开始使用了。
- en: 'On Windows, for all PHP versions prior to version 5.2.0, you need to download
    the `.zip` version of PHP, *not* the `.msi` version. Then change to the directory
    you uncompressed PHP into and type:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 上，对于版本 5.2.0 之前的所有 PHP 版本，您需要下载 PHP 的 `.zip` 版本，*而不是* `.msi` 版本。然后切换到您解压缩
    PHP 的目录，并输入：
- en: '[PRE19]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Answer the prompts and choose installation locations. In both cases, after
    installing, be sure to upgrade:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 回答提示并选择安装位置。在两种情况下，安装后，请务必升级：
- en: '[PRE20]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: This will ensure that you have the latest stable version of PEAR.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 这将确保您拥有 PEAR 的最新稳定版本。
- en: Installing the mysql or mysqli PHP extensions is documented at [http://www.php.net/mysql](http://www.php.net/mysql).
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: mysql 或 mysqli PHP 扩展的安装文档位于 [http://www.php.net/mysql](http://www.php.net/mysql)。
- en: 'After everything is ready, you can obtain the Chiara_PEAR_Server package via
    these simple steps:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 一切准备就绪后，您可以通过以下简单步骤获取 Chiara_PEAR_Server 软件包：
- en: '[PRE21]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: That's it! Note that Chiara_PEAR_Server currently requires `pear.php.net` packages
    DB_DataObject and HTML_QuickForm, so be sure that you either have a working internet
    connection or have installed these packages prior to attempting to install Chiara_PEAR_Server.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 就这些了！请注意，Chiara_PEAR_Server 目前需要 `pear.php.net` 软件包 DB_DataObject 和 HTML_QuickForm，所以在尝试安装
    Chiara_PEAR_Server 之前，请确保您有一个正常工作的互联网连接或者已经安装了这些软件包。
- en: Configuring the server requires running a post-installation script, which we
    cover in the following section.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 配置服务器需要运行一个安装后脚本，我们将在下一节中介绍。
- en: Configuring the Server; Obtaining a Front End for End Users
  id: totrans-152
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置服务器；为最终用户提供前端
- en: Before we run the post-installation script, it is important to understand what
    it will need in order to function properly.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们运行安装后脚本之前，了解它正常运行所需的内容是很重要的。
- en: First, we need to create a MySQL user that will be used by the post-installation
    script to initialize the database and create tables. As such, this user needs
    to have `create` and `alter` permissions (use the `GRANT` command from within
    MySQL to do this). As this will be the database user used by public web scripts,
    for security reasons, it is best to remove `create/alter` permissions once the
    database has been properly initialized. The only permissions needed for everyday
    operations by the Chiara_PEAR_Server administrative back end are `insert/delete/update`.
    Note that, when upgrading Chiara_PEAR_Server, `create/alter` permissions should
    be re-granted again temporarily, just in case there are modifications or additions
    to the database.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要创建一个 MySQL 用户，该用户将由安装后脚本用于初始化数据库和创建表。因此，此用户需要具有 `create` 和 `alter` 权限（使用
    MySQL 内部的 `GRANT` 命令来完成此操作）。由于这将作为公共 Web 脚本使用的数据库用户，出于安全考虑，一旦数据库被正确初始化，最好移除 `create/alter`
    权限。Chiara_PEAR_Server 管理后端在日常工作操作中所需的唯一权限是 `insert/delete/update`。请注意，在升级 Chiara_PEAR_Server
    时，应暂时重新授予 `create/alter` 权限，以防对数据库进行修改或添加。
- en: 'Running the Chiara_PEAR_Server post-installation script is a simple task in
    PEAR, all you need to do is type:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 运行 Chiara_PEAR_Server 安装后脚本在 PEAR 中是一个简单的任务，您只需输入：
- en: '[PRE22]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: The PEAR installer will walk you through several questions. After you are finished
    with them, and if there are no errors, the channel server will be ready for operation.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: PEAR 安装程序将引导您完成几个问题。完成这些问题后，如果没有错误，通道服务器将准备就绪，可以运行。
- en: '![Configuring the Server; Obtaining a Front End for End Users](img/1904811191_5_01.jpg)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![配置服务器；为最终用户提供前端](img/1904811191_5_01.jpg)'
- en: The first set of questions will ask for database-connection information, and
    for the `Handle` of the primary-channel administrator (you) and the name of the
    channel. Your `Handle` is the same as your handle or username in a `package.xml`
    file, and should be a single lower-cased word. For examples of choices of handles,
    you might browse the list of maintainers at [http://pear.php.net/accounts.php](http://pear.php.net/accounts.php).
    Your channel name must be the same as the server. So, for instance, if you are
    setting up a test server at localhost, your channel must be named `localhost`.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 第一组问题将要求提供数据库连接信息，以及主通道管理员（您）的`Handle`和通道名称。您的`Handle`与`package.xml`文件中的handle或用户名相同，并且应该是一个单个小写单词。例如，您可以通过浏览[http://pear.php.net/accounts.php](http://pear.php.net/accounts.php)上的维护者列表来查看handle的选择示例。您的通道名称必须与服务器相同。例如，如果您在本地主机上设置测试服务器，您的通道名称必须是`localhost`。
- en: '![Configuring the Server; Obtaining a Front End for End Users](img/1904811191_5_02.jpg)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![配置服务器；为最终用户获取前端](img/1904811191_5_02.jpg)'
- en: The next set of questions you will need to answer relates to the basics of your
    channel. It is at this time that you should have a server name in mind. Generally
    speaking, it is easier for users to remember a channel name if there is a direct
    connection to the content it serves. For instance, if your channel serves financial
    software, perhaps a channel name like *software.companyname.com* would be good,
    with an alias like *companysoftware*.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的一组问题将涉及您通道的基本信息。此时，您应该已经想到了一个服务器名称。一般来说，如果通道名称与其提供的内容有直接关联，用户更容易记住。例如，如果您的通道提供财务软件，那么像`software.companyname.com`这样的通道名称可能很好，别名可以是`companysoftware`。
- en: After this, information will be requested about the primary-channel administrator.
    Finally, information will be asked about the document root of your web server.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 在此之后，将要求提供有关主通道管理员的信息。最后，将询问您的Web服务器的文档根信息。
- en: This section is the most important, as it will be used to create both the administrative
    front end used to maintain packages and upload releases, and the REST files used
    to support the REST protocols needed by the PEAR installer in order to function.
    In general, the default values provided in parentheses should be acceptable. However,
    it is helpful to understand the purpose of the different prompts.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 这一节非常重要，因为它将用于创建用于维护包和上传发布的行政前端，以及用于支持PEAR安装程序所需REST协议的REST文件。通常，括号中提供的默认值应该是可接受的。然而，了解不同提示的目的是有帮助的。
- en: '**PEAR Configuration File Location:** This specifies the location of the file
    that should be used to retrieve channel information. The Chiara_PEAR_Server channel
    simply will not function at all unless it can retrieve information about its own
    channel, so this value needs to be right.'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PEAR配置文件位置：** 这指定了用于检索通道信息的文件位置。Chiara_PEAR_Server通道如果不能检索其自身通道的信息，将根本无法正常工作，因此这个值必须正确。'
- en: '**Path to document root of web server for localhost:** This should be the full
    path on your local file system to the base of your web server. If your web server
    reads `/var/lib/web/htdocs/servername/index.php` when a user requests [http://servername/index.php](http://servername/index.php),
    then your document root is `/var/lib/web/htdocs/servername`.'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**本地主机的Web服务器文档根路径：** 这应该是您本地文件系统上Web服务器基目录的完整路径。如果您的Web服务器在用户请求[http://servername/index.php](http://servername/index.php)时读取`/var/lib/web/htdocs/servername/index.php`，那么您的文档根是`/var/lib/web/htdocs/servername`。'
- en: '**name of frontend.php HTML admin frontend file:** This is the filename of
    your administrative front-end file. Choosing a unique file name will help prevent
    annoying or prevent malicious people from unwanted attempts to access the channel
    administrative interface.'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**前端.php HTML管理前端文件的名称：** 这是您的管理前端文件的文件名。选择一个独特的文件名将有助于防止令人烦恼或恶意的人尝试未经授权访问通道管理界面。'
- en: '**temporary path to save release uploads in:** This should be a web server-writeable
    location in which you initially save uploaded releases.'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**保存发布上传的临时路径：** 这应该是一个可由Web服务器写入的位置，您最初将在此处保存上传的发布版本。'
- en: '**port clients should connect to (443 is SSI, 80 is regular HTTP):** Follow
    the instructions. If you have a typical configuration, 80 is normal for `http://`
    and 443 is typical for `https://`.'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**客户端应连接到的端口（443是SSI，80是常规HTTP）：** 按照说明操作。如果您有典型的配置，80是`http://`的正常端口，443是`https://`的典型端口。'
- en: '**protocol clients should use to connect (http or https):** Again, choose one
    of the two options.'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**协议客户端应使用的连接方式（http或https）：** 再次，选择两个选项之一。'
- en: Adding a Package and Releasing Packages
  id: totrans-170
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加软件包和发布软件包
- en: 'Once you have completed the post-installation script, navigate to the administrative
    front-end file, whose name you specified in the **name of frontend.php HTML admin
    frontend file** section. For instance, if your front-end file is named `foo.php`,
    and your channel is localhost, navigate to `http://localhost/foo.php`. You should
    see something like this:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 完成安装脚本后，导航到管理前端文件，其名称在**前端.php HTML管理前端文件名称**部分中指定。例如，如果您的前端文件名为`foo.php`，并且您的频道是localhost，请导航到`http://localhost/foo.php`。您应该会看到如下内容：
- en: '![Adding a Package and Releasing Packages](img/1904811191_5_03.jpg)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![添加软件包和发布软件包](img/1904811191_5_03.jpg)'
- en: To log in as the administrator, enter the handle and password that you specified
    for the administrator in the post-installation script. After logging in, prior
    to uploading a release, you first need to create the package on the server, and
    then add maintainers.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 要以管理员身份登录，请输入在安装脚本中为管理员指定的句柄和密码。登录后，在上传发布版本之前，您首先需要在服务器上创建软件包，然后添加维护者。
- en: 'When you log in, you will see a screen similar to this one:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 当您登录时，您将看到与此类似的屏幕：
- en: '![Adding a Package and Releasing Packages](img/1904811191_5_04.jpg)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![添加软件包和发布软件包](img/1904811191_5_04.jpg)'
- en: Links for configuring the channel are on the left side of the screen. To get
    started, you may also want to create some categories for the software you are
    releasing, such as "Database" or "XML Processing." For examples of categories,
    see [http://pear.php.net/packages.php](http://pear.php.net/packages.php).
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 配置频道的链接位于屏幕左侧。为了开始，您可能还想要为要发布的软件创建一些类别，例如“数据库”或“XML处理”。有关类别的示例，请参阅[http://pear.php.net/packages.php](http://pear.php.net/packages.php)。
- en: 'After you have created categories, you will want to add maintainers and create
    packages. Creating a package is straightforward. First, click **Create a Package**,
    and you will see a screen like the following:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 在您创建了类别后，您将想要添加维护者并创建软件包。创建软件包很简单。首先，点击**创建软件包**，您将看到如下屏幕：
- en: '![Adding a Package and Releasing Packages](img/1904811191_5_05.jpg)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![添加软件包和发布软件包](img/1904811191_5_05.jpg)'
- en: 'Fill in the required fields (marked by a red asterisk), and then click **Save
    Changes**. The next step is very important: before you can upload a release, you
    will need to create maintainers and add them as maintainers to the package. To
    do this, click on the **(Maintainers)** link next to your newly created package
    seen at the left side of the screen:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 填写必要的字段（由红色星号标记），然后点击**保存更改**。下一步非常重要：在您上传发布版本之前，您需要创建维护者并将他们添加为软件包的维护者。为此，请点击屏幕左侧您刚创建的软件包旁边的**（维护者）**链接：
- en: '![Adding a Package and Releasing Packages](img/1904811191_5_06.jpg)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![添加软件包和发布软件包](img/1904811191_5_06.jpg)'
- en: Once you have chosen the maintainer, and the role, and whether the maintainer
    is active, click **Add Maintainer**, and the maintainer will show up on the list
    of package maintainers.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 选择维护者、角色以及维护者是否活跃后，点击**添加维护者**，维护者将出现在软件包维护者列表中。
- en: Tip
  id: totrans-182
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Who can Upload Releases?**'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '**谁可以上传发布版本？**'
- en: The channel administrator can upload a release for any package on the channel,
    and also package maintainers who are listed as a lead at the channel can upload
    packages. Note that a maintainer listed as lead in the `package.xml` file but
    not at the channel's administrative front end will *not* be able to upload a release
    for security reasons.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 频道管理员可以为频道上的任何软件包上传发布版本，以及列在频道中作为主要维护者的软件包维护者。请注意，在`package.xml`文件中列为主要维护者但在频道管理前端未列出的人员将**无法**上传发布版本，出于安全原因。
- en: Installing a Public Channel Front End
  id: totrans-185
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装公共频道前端
- en: After Chiara_PEAR_Server is configured and running, you may wish to install
    Davey Shafik's **Crtx_PEAR_Channel_Frontend** package from channel `pear.crtx.org`.
    The Crtx_PEAR_Channel_Frontend package provides a browsable website that allows
    developers to look at the packages your channel offers and how to acquire them.
    In addition, it has a support for linking to a bug tracker, online revision control
    browser, and other features. Crtx_PEAR_Channel_Frontend is to Chiara_PEAR_Server
    as [http://pear.php.net](http://pear.php.net) is to the installer data provided
    at [http://pear.php.net/rest](http://pear.php.net/rest).
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 在配置并运行Chiara_PEAR_Server之后，你可能希望从channel `pear.crtx.org`安装Davey Shafik的**Crtx_PEAR_Channel_Frontend**包。Crtx_PEAR_Channel_Frontend包提供了一个可浏览的网站，允许开发者查看你的频道提供的包以及如何获取它们。此外，它还支持链接到错误跟踪器、在线修订控制浏览器和其他功能。Crtx_PEAR_Channel_Frontend对于Chiara_PEAR_Server来说，就像[http://pear.php.net](http://pear.php.net)对于在[http://pear.php.net/rest](http://pear.php.net/rest)提供的安装数据一样。
- en: 'Acquiring Crtx_PEAR_Channel_Frontend can be done via these steps:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 获取Crtx_PEAR_Channel_Frontend可以通过以下步骤完成：
- en: '[PRE23]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Once you have installed the package, there are some minor configurations to
    be performed (this may be automated by a post-installation script in future releases).
    First, you need to locate the `pear_frontend.css` file, which is installed into
    `data_dir/Crtx_PEAR_Channel_Frontend/data/pear_frontend.css`.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦安装了包，就需要进行一些小的配置（这可能在未来的版本中通过安装后的脚本自动化）。首先，你需要找到`pear_frontend.css`文件，它被安装到`data_dir/Crtx_PEAR_Channel_Frontend/data/pear_frontend.css`。
- en: '`data_dir` is the path to data (normally `/usr/local/lib/php/data` on UNIX,
    and `C:\php5\PEAR\data` or `C:\php4\PEAR\data` on Windows) as defined by the PEAR
    `data_dir` configuration variable. Once the file is located, copy this to the
    document root of your channel.'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: '`data_dir`是数据路径（在UNIX上通常是`/usr/local/lib/php/data`，在Windows上是`C:\php5\PEAR\data`或`C:\php4\PEAR\data`），由PEAR的`data_dir`配置变量定义。一旦找到文件，将其复制到你的频道文档根目录。'
- en: 'After copying the `pear_frontend.css` file, you need to create the public front-end
    PHP file. A sample front end follows:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 在复制`pear_frontend.css`文件后，你需要创建公共前端PHP文件。以下是一个示例前端：
- en: '[PRE24]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'This file, if saved as `index.php` in the document root of the `localhost`
    web server, will provide an attractive screen similar to the following:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 如果将此文件保存为`index.php`在`localhost`网络服务器的文档根目录中，将提供类似于以下的有吸引力的屏幕：
- en: '![Installing a Public Channel Front End](img/1904811191_5_07.jpg)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![安装公共频道前端](img/1904811191_5_07.jpg)'
- en: There are several nice features built into this package, including RSS feeds
    and the ability to email maintainers. In addition, customization of the look and
    feel is straightforward, accomplished through elementary modification of the `pear_frontend.css`
    file and the `index.php` front end. With very little work, a very attractive front
    end can be created. Examples of the diversity of possibilities include [http://pear.crtx.org](http://pear.crtx.org)
    and [http://pear.php-tools.net](http://pear.php-tools.net).
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 此包内置了几个很好的功能，包括RSS源和向维护者发送电子邮件的能力。此外，外观和感觉的定制非常简单，通过基本修改`pear_frontend.css`文件和`index.php`前端来实现。只需做很少的工作，就可以创建一个非常吸引人的前端。可能性的多样性示例包括[http://pear.crtx.org](http://pear.crtx.org)和[http://pear.php-tools.net](http://pear.php-tools.net)。
- en: Distributing Pay-For-Use PHP Applications through a Channel
  id: totrans-196
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过频道分发付费使用的PHP应用程序
- en: 'One of the more common questions posed about channels is: "Can my business
    distribute pay-for-use PHP applications through a channel, and restrict access?"
    The answer is a resounding yes.'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 关于频道的一些更常见的问题是：“我的业务能否通过频道分发付费使用的PHP应用程序并限制访问？”答案是响亮的肯定。
- en: 'The PEAR installer implements HTTP authentication through the use of the `pear
    login` command. To distribute your non-free applications, it is best to rely upon
    the strengths of web servers like Apache. For instance, by making "get" a file
    and using the `ForceType` directive in `httpd.conf` like the following:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: PEAR安装程序通过使用`pear login`命令实现HTTP身份验证。为了分发你的非免费应用程序，最好依靠像Apache这样的Web服务器的优势。例如，通过将“获取”文件和`httpd.conf`中的`ForceType`指令如下使用：
- en: '[PRE25]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: You can use a file named `get` that contains PHP code to process the login/password
    supplied by a user and direct them to a restricted package customized for their
    login. In fact, normal users could be directed to a trial version of the software,
    without any change to their installation process.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用一个名为`get`的文件，其中包含PHP代码来处理用户提供的登录/密码，并将他们引导到为他们的登录定制的受限制的包。实际上，普通用户可以被引导到软件的试用版本，而无需更改他们的安装过程。
- en: 'Note that the PEAR Installer only supports HTTP Basic authentication, and for
    a truly secure connection, SSL (HTTPS) should be used, otherwise anyone can glean
    the restricted passwords. Here is a sample script for the `get` file:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，PEAR 安装器仅支持 HTTP Basic 认证，并且为了实现真正的安全连接，应使用 SSL（HTTPS），否则任何人都可以获取受限制的密码。以下是一个用于
    `get` 文件的示例脚本：
- en: '[PRE26]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: The above example shows how easily even complex version validation can be accomplished.
    However, this approach does not scale very efficiently — every download is funneled
    through the PHP interpreter, which is considerably slower than fetching a static
    file. Another option, which will only work with PEAR versions 1.4.9 or newer,
    is to send a redirect header (402), and allow Apache to handle the actual file
    download. However, the savings are minimal enough over using `readfile()` that
    it may not be worth requiring users to upgrade.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 上述示例展示了即使是复杂的版本验证也可以非常容易地完成。然而，这种方法并不非常高效——每个下载都会通过 PHP 解释器，这比获取静态文件慢得多。另一个选项，仅适用于
    PEAR 版本 1.4.9 或更高版本，是发送重定向头（402），并允许 Apache 处理实际的文件下载。然而，与使用 `readfile()` 相比，节省的量非常小，可能不值得要求用户升级。
- en: Another option is to simply restrict access to files using HTTP Basic authentication
    in `.htaccess` files for individual tarballs. This is most likely to be scalable.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个选项是简单地通过 `.htaccess` 文件中的 HTTP Basic 认证限制对文件的访问，对于单个 tarballs 来说，这可能是可扩展的。
- en: 'Then, instruct users to take these steps when first setting their login/password:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，指导用户在首次设置登录名/密码时采取以下步骤：
- en: '[PRE27]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: The user/password will only be sent when the user requests a package from `your.channel.com`,
    taking advantage of per-channel configuration.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 只有当用户从 `your.channel.com` 请求包时，才会发送用户名/密码，利用了按频道配置的优势。
- en: It is highly recommended to use SSL for your channel, so that username/password
    pairs are never sent in plaintext.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 强烈建议为您的频道使用 SSL，这样用户名/密码对就不会以明文形式发送。
- en: That's all that is necessary!
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 那就是所有必要的了！
- en: Distributing Packages through Static tarballs for Single-Client Installations
  id: totrans-210
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过静态 tarballs 为单个客户端安装分发包
- en: In addition to distributing packages via a channel, it is also possible to distribute
    a single release and post it to the Web.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 除了通过频道分发包之外，还可以分发单个发布版本并将其发布到网络上。
- en: Tip
  id: totrans-212
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**PEAR 1.4.10 is needed to Install Static Releases with Dependencies**'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: '**安装带有依赖项的静态发布版本需要 PEAR 1.4.10**'
- en: A bug in the PEAR installer prevents installing static tarballs; use version
    1.4.10 or newer to get the fix for this problem.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: PEAR 安装器中的一个错误阻止了静态 tarballs 的安装；使用版本 1.4.10 或更高版本以获得此问题的修复。
- en: 'This basically involves packaging up a release via `pear package` and then
    uploading it to a website, where it can then be downloaded, or installed directly
    via:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 这基本上涉及通过 `pear package` 打包一个发布版本，然后将其上传到网站，然后可以下载或直接通过以下方式安装：
- en: '[PRE28]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'This is nothing new: the earliest versions of the PEAR installer supported
    this syntax. What is new is the ability to depend on these **static tarballs**
    in other package releases.'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 这不是什么新鲜事：最早的 PEAR 安装器支持这种语法。新的功能是能够在其他包发布中依赖这些 **静态 tarballs**。
- en: Who Needs this Feature?
  id: totrans-218
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 谁需要这个功能？
- en: In some cases, it is not necessary to set up a channel server. In general, it
    is better to set up a channel server and distribute packages in that manner. However,
    a common real-world situation is a PHP consultant who is providing services to
    multiple clients, and also maintaining their websites for them. Although every
    site is unique, it is very helpful to have a set of utility packages that can
    be used by each specific site. To provide a channel for these packages only introduces
    unneeded complexity.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，设置频道服务器并非必需。一般来说，设置频道服务器并以这种方式分发包会更好。然而，在现实世界中，一个常见的场景是一位为多个客户提供服务的 PHP
    顾问，同时也为他们维护网站。尽管每个网站都是独特的，但拥有一套每个特定网站都可以使用的实用包非常有帮助。只为这些包提供频道只会引入不必要的复杂性。
- en: By installing your client's website as a PEAR package, it becomes possible for
    you as the software consultant to easily maintain the site and regulate its content
    in a much stricter manner than channels allow.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将客户的网站安装为 PEAR 包，作为软件顾问的您就可以轻松地维护网站并以比频道允许的更严格的方式管理其内容。
- en: Differences in package.xml and Dependencies
  id: totrans-221
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: package.xml 和依赖项的差异
- en: 'In order to prevent name collisions between channels and static tarballs, a
    static tarball''s `package.xml` file cannot use the [<channel>](http://<channel>)
    tag, and must instead use the`<uri>` tag. In addition, the`<uri>` tag must contain
    the actual location of the tarball on the Internet. If the static tarball is located
    at [http://www.example.com/tarballs/Package-1.0.0.tgz](http://www.example.com/tarballs/Package-1.0.0.tgz),
    the `package.xml` file should begin with something like this:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 为了防止通道和静态tar包之间的名称冲突，静态tar包的`package.xml`文件不能使用`[<channel>](http://<channel>)`标签，而必须使用`<uri>`标签。此外，`<uri>`标签必须包含tar包在互联网上的实际位置。如果静态tar包位于[http://www.example.com/tarballs/Package-1.0.0.tgz](http://www.example.com/tarballs/Package-1.0.0.tgz)，则`package.xml`文件应该以类似以下内容开始：
- en: '[PRE29]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: It is very important to notice that the `uri` has the file extension, `.tgz`,
    removed. This is because when providing a static tarball, it is expected that
    you will also provide an uncompressed `.tar` for users who do not have the zlib
    extension enabled.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 非常重要的是要注意，`uri`已经去除了文件扩展名`.tgz`。这是因为当提供静态tar包时，预期您也会为没有启用zlib扩展的用户提供未压缩的`.tar`文件。
- en: 'To depend on this static tarball, a dependency tag like the following should
    be used:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 要依赖这个静态tar包，应使用如下依赖标签：
- en: '[PRE30]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Versioning has no meaning when working with static tarballs as dependencies,
    and so none of the normal versioning tags (`<min>,<max>, <recommended>`) are allowed.
    However, it is possible to upgrade static tarballs.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用静态tar包作为依赖项时，版本号没有意义，因此不允许使用任何正常的版本号标签（`<min>`, `<max>`, `<recommended>`）。然而，升级静态tar包是可能的。
- en: 'Each static tarball package has an implied`<channel>__uri</channel>` tag —
    all static tarballs are installed/upgraded/uninstalled as if in the pseudo-channel
    `__uri`. This channel is treated just like other channels except that it cannot
    be modified via the `channel-update` command, deleted via the `channel-delete`
    command, and it does not contain a server, and so will never attempt to contact
    the Internet to query a remote channel server. Running `pear channel-info __uri`
    results in:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 每个静态tar包软件包都有一个隐含的`<channel>__uri</channel>`标签——所有静态tar包都是作为伪通道`__uri`安装/升级/卸载的。这个通道被当作其他通道一样对待，只是它不能通过`channel-update`命令修改，也不能通过`channel-delete`命令删除，并且它不包含服务器，因此永远不会尝试联系远程通道服务器。运行`pear
    channel-info __uri`的结果是：
- en: '[PRE31]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: In addition to demonstrating the qualities of the `__uri` pseudo-channel, it
    tells us that static tarball packages are validated with the same strictness that
    `pear.php.net` channel packages are validated (using `PEAR_Validate`). If you
    need flexibility of validation, it is necessary to use a channel instead of distributing
    your software as a static tarball.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 除了展示`__uri`伪通道的品质外，它还告诉我们静态tar包软件包的验证与`pear.php.net`通道软件包的验证一样严格（使用`PEAR_Validate`）。如果您需要验证的灵活性，则有必要使用通道而不是将软件作为静态tar包分发。
- en: 'However, this also means that after installing our static package via:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这也意味着在通过以下方式安装我们的静态软件包之后：
- en: '[PRE32]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'It is possible to upgrade this package, should a new version be released, via:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有新版本发布，可以通过以下方式升级此软件包：
- en: '[PRE33]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'In addition, it is possible to uninstall the package via the simple:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还可以通过简单的以下方式卸载软件包：
- en: '[PRE34]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'If you wish to see a list of all static tarball packages installed, simply
    run the `list` command with the -c option:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想查看已安装的所有静态tar包软件包的列表，只需运行带有-c选项的`list`命令：
- en: '[PRE35]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Beware the simplicity of static tarballs! If there is any chance your end user
    will install static tarballs from any other source, you must distribute your packages
    from a channel. Otherwise, the user could run into a name collision between two
    different packages, as illustrated by these two hypothetical install commands:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 小心静态tar包的简单性！如果您的最终用户有可能从任何其他来源安装静态tar包，您必须通过通道分发您的软件包。否则，用户可能会遇到两个不同软件包之间的名称冲突，如下两个假设的安装命令所示：
- en: '[PRE36]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'In this case, the package named `Foo` distributed from `www.example.com/tarballs`
    is not the same code-base as the package named `Foo` distributed from `www.notexample.com`,
    but the PEAR installer treats them both as if you had typed:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，从`www.example.com/tarballs`分发的名为`Foo`的软件包与从`www.notexample.com`分发的名为`Foo`的软件包不是同一个代码库，但PEAR安装程序将它们都当作您输入了以下内容：
- en: '[PRE37]'
  id: totrans-242
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: In this situation, the chance of subtle to severe breakage is immediate and
    difficult to debug. Don't push your luck; use a channel if there is any chance
    that this situation could occur.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '在这种情况下，微妙到严重的破坏可能性立即存在，并且难以调试。不要冒险；如果有可能发生这种情况，请使用通道。 '
- en: Releasing Equals Uploading
  id: totrans-244
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发布等于上传
- en: 'As stated earlier, the biggest advantage to using a static tarball instead
    of a channel is that releasing a new package simply involves uploading both a
    `.tgz` and a `.tar` of the release as created by the commands:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，使用静态tarball而不是通道的最大优点是，发布一个新的软件包只需上传由以下命令创建的`.tgz`和`.tar`文件：
- en: '[PRE38]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: It doesn't get any easier than this!
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 没有什么比这更容易了！
- en: Security Issues Inherent in Remote Installation
  id: totrans-248
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 远程安装固有的安全问题
- en: As evidenced by the advent of internet worms taking advantage of vulnerabilities
    in phpBB, MySpace.com, and XML_RPC, security holes are no laughing matter, and
    it is critical that you are aware of the potential risks involved in installing
    software you have not written yourself.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 如phpBB、MySpace.com和XML_RPC中漏洞被互联网蠕虫利用的出现所证明的那样，安全漏洞可不是什么笑料，你必须意识到安装你自己没有编写的软件所涉及到的潜在风险。
- en: Fortunately, the PEAR-installer model provides both ease of upgrading to obtain
    needed security fixes and intrinsic security to ensure you won't become a victim
    of malicious hackers just by using the PEAR installer.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，PEAR安装器模型提供了升级以获取所需的安全修复的便利性，并提供了内在的安全性，以确保你不会仅仅因为使用PEAR安装程序而成为恶意黑客的受害者。
- en: Although the PEAR developers have taken every step to ensure the safety of your
    code without restricting its usefulness, it is still very important that you understand
    some basics of security, as PEAR will not be able to protect you from yourself,
    should you choose to use or write insecure code. There are several excellent references
    written recently on PHP security and on internet security in general. Both Ilia
    Alshanetsky's *php|architect's Guide to PHP Security* and Chris Shiflett's *Essential
    PHP Security* guide are a good place to start if you are unfamiliar with concepts
    such as escaping output, filtering input, or terms like XSS, arbitrary code execution,
    security through obscurity, and so on.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然PEAR开发者已经采取了所有步骤来确保你的代码的安全性而不限制其有用性，但了解一些安全性的基础知识仍然非常重要，因为PEAR无法保护你自己，如果你选择使用或编写不安全的代码。最近有几篇关于PHP安全和互联网安全的一般性的优秀参考资料。如果你不熟悉诸如输出转义、输入过滤或XSS、任意代码执行、隐蔽性安全等概念，Ilia
    Alshanetsky的*php|architect's Guide to PHP Security*和Chris Shiflett的*Essential
    PHP Security*指南都是很好的起点。
- en: Tip
  id: totrans-252
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: 'Many developers mistakenly develop and operate under the old golden rule: "Do
    unto others as you would have them do unto you." This approach is fatally flawed
    when you are developing code that has a component of internet connectivity. If
    it is possible for anyone other than you to access the PHP application you have
    written, then you need to assume that they have only the worst intentions.'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 许多开发者错误地遵循旧的金科玉律：“己所不欲，勿施于人。”当你开发具有互联网连接组件的代码时，这种方法是致命的。如果除了你之外的其他人可以访问你编写的PHP应用程序，那么你需要假设他们只有最恶劣的意图。
- en: 'As you design a feature, think to yourself: "How could I use this feature to
    modify the environment of the machine it is running on? Can I use it to perform
    unexpected actions?"'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 当你设计一个功能时，要自问：“我如何利用这个功能来修改它运行的环境？我能用它执行意外的操作吗？”
- en: If the answer is "yes" or even "maybe" then the feature is intrinsically insecure
    and must be restricted until the answer is "no" or "only in extreme circumstances
    that would render it useless by other safeguards that are in place".
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 如果答案是“是”或甚至“可能”，那么这个功能本质上是不安全的，必须限制它，直到答案是“否”或“只有在极端情况下，其他安全措施才能使其失效”。
- en: How do PEAR Installer and Chiara_PEAR_Server Provide Security?
  id: totrans-256
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PEAR安装程序和Chiara_PEAR_Server如何提供安全性？
- en: 'The PEAR installer has taken a number of important steps to provide security.
    However, at its essence, the PEAR installer is ultimately designed to install
    arbitrary PHP code — this is its raison d''être, so the first rule of security
    with PEAR must be:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: PEAR安装程序已经采取了许多重要步骤来提供安全性。然而，从根本上说，PEAR安装程序最终是为了安装任意PHP代码——这是它的存在理由，因此，使用PEAR的安全性第一条必须是：
- en: Tip
  id: totrans-258
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '*Never* install a package on a live, production site without first looking
    at the code it provides on a development server.'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: '*永远*不要在没有先查看在开发服务器上提供的代码之前，在一个正在运行的、生产性的网站上安装一个软件包。'
- en: Extra Security beyond what PEAR Provides
  id: totrans-260
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: PEAR提供的额外安全性
- en: Although most basic actions taken by the PEAR installer have a reasonable expectation
    of security, there are a few that should be avoided.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然PEAR安装程序所采取的大多数基本操作都有合理的预期安全性，但有一些应该避免。
- en: This means, for instance, that `upgrade-all` should be avoided at all costs
    on production servers. This command upgrades all existing packages to the latest
    version, which intrinsically removes your ability to control upgrades. This command
    is best used on a development server when testing newer versions of packages prior
    to upgrading them individually on the production server.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着，例如，在生产服务器上应该不惜一切代价避免使用 `upgrade-all` 命令。这个命令将所有现有包升级到最新版本，这本质上消除了你控制升级的能力。这个命令最好在开发服务器上使用，在升级生产服务器上的单个包之前测试包的新版本。
- en: 'In addition, if you are installing a package distributed by a channel other
    than those hosted at `php.net` (`pear.php.net` and `pecl.php.net` at the time
    of writing this chapter), first download the package and run two commands on the
    package to learn more about it:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果你正在安装由 `php.net`（在撰写本章时为 `pear.php.net` 和 `pecl.php.net`）以外的渠道分发的包，首先下载该包，并在包上运行两个命令来了解更多信息：
- en: '[PRE39]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: The first will tell you dependencies that the package has. If you don't recognize
    those dependencies, then you will need to perform the same steps on them.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个会告诉你包的依赖项。如果你不认识这些依赖项，那么你将需要对他们执行相同的步骤。
- en: The `list-files` command lists all files in the archive. Look for files installed
    into the `PEAR/` subdirectory. Unless the package is providing a custom file role,
    custom file task, or a custom command, a package generally has no business installing
    files into this location, as this is the directory used by the PEAR Installer.
    Any files installed into this directory could be attempting to maliciously affect
    the way the installer works.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '`list-files` 命令列出了存档中的所有文件。寻找安装到 `PEAR/` 子目录中的文件。除非包提供自定义文件角色、自定义文件任务或自定义命令，否则包通常没有理由将文件安装到这个位置，因为这个目录是由
    PEAR 安装器使用的。安装到这个目录中的任何文件都可能试图恶意影响安装器的工作方式。'
- en: The most obvious exceptions to this rule are packages whose names contain PEAR
    such as `PEAR_PackageFileManager`. If a package is installing files into locations
    that don't appear to have much to do with the stated purpose, you should immediately
    be suspicious. Contact the package maintainer, and ask why the package needs to
    install files there.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 这条规则的明显例外是名称中包含 PEAR 的包，例如 `PEAR_PackageFileManager`。如果一个包将文件安装到似乎与声明的目的没有太多关系的位置，你应该立即感到怀疑。联系包维护者，询问为什么包需要在那里安装文件。
- en: If you do not receive a satisfactory response, notify the PEAR developer's mailing
    list immediately at `<[pear-dev@lists.php.net](mailto:pear-dev@lists.php.net)>`.
    Any channel that attempts to provide malicious packages will be blacklisted by
    the PEAR installer.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有得到满意的答复，立即在 `<[pear-dev@lists.php.net](mailto:pear-dev@lists.php.net)>`
    上通知 PEAR 开发者的邮件列表。任何试图提供恶意软件包的渠道都将被 PEAR 安装器列入黑名单。
- en: 'Even more importantly, if there is only one thing that you remember from this
    book, let it be this one:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 更重要的是，如果你从这本书中只记住一件事，那就让它成为这件事：
- en: Tip
  id: totrans-270
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '*Never* run post-installation scripts without looking over the PHP source of
    the post-installation script.'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: '*永远*不要在没有查看安装后脚本的 PHP 源代码的情况下运行安装后脚本。'
- en: Post-installation scripts are by definition arbitrary PHP code. Anything that
    can be done in PHP can be done by a post-installation script. This includes actions
    like installing spyware, erasing your hard disk, and other things you probably
    don't intend when running the `pear run-scripts` command. It is never worth risking
    your entire system for the minor convenience of not looking at a script.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 安装后脚本按定义是任意 PHP 代码。任何可以在 PHP 中完成的事情都可以通过安装后脚本完成。这包括像安装间谍软件、擦除你的硬盘驱动器以及其他你可能在运行
    `pear run-scripts` 命令时不想做的事情。为了不查看脚本而冒整个系统风险是永远不值得的。
- en: Ultimately, the chance of a malicious package being distributed by a channel
    is extremely low, due to the extreme ease of tracing a malicious package to the
    source, as well as requiring explicit user installation of the package. Both of
    these factors will not be enough to discourage evildoers out there unless you
    also are vigilant about installing packages from unknown sources, so that they
    are caught before any significant damage is done.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，由于恶意软件包被追踪到源头的极端容易性，以及需要明确用户安装包的要求，通过渠道分发的恶意软件包被分发的可能性极低。除非你同时警惕地从未知来源安装包，以便在造成任何重大损害之前将其捕获，否则这两个因素将不足以阻止那些作恶者。
- en: In addition, it is crucial that you upgrade the PEAR installer to version 1.4.3
    or newer, and continually upgrade as new versions of the installer are released.
    Bugs, security issues, and minor fixes are sure to be addressed in newer versions.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您必须升级 PEAR 安装器到版本 1.4.3 或更高版本，并在安装器的新版本发布时持续升级。新版本中一定会解决错误、安全问题和小型修复。
- en: Specific Security Principles Applied in Designing the PEAR Installer and Chiara_PEAR_Server
  id: totrans-275
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在设计 PEAR 安装器和 Chiara_PEAR_Server 时应用的具体安全原则
- en: When designing and implementing the latest versions of the PEAR installer, one
    of the primary concerns was preventing unanticipated modifications of the user
    environment. By opening up the installer to take advantage of sources other than
    `pear.php.net/pecl.php.net` for packages, and adding features like post-installation
    scripts, custom file roles, and custom file tasks, there is an element of risk.
    Every new feature balances openness to legitimate activity with restriction of
    dangerous activity.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 在设计和实现最新版本的 PEAR 安装器时，主要关注的是防止对用户环境的意外修改。通过使安装器能够利用 `pear.php.net/pecl.php.net`
    之外的来源获取软件包，并添加如安装后脚本、自定义文件角色和自定义文件任务等功能，存在一定的风险。每个新功能都在对合法活动的开放性和对危险活动的限制之间取得平衡。
- en: 'For instance, channels are defined by their server name. This means that you
    cannot automatically and secretly change the source of packages distributed by
    `pear.php.net`. In addition, when a user runs:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，频道是通过其服务器名称定义的。这意味着您不能自动且秘密地更改由 `pear.php.net` 分发的软件包的来源。此外，当用户运行：
- en: '[PRE40]'
  id: totrans-278
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: The PEAR installer attempts to retrieve [http://mychannel.example.com/channel.xml](http://mychannel.example.com/channel.xml).
    A clever and evil channel administrator could in fact serve a `channel.xml` file
    that did not define `mychannel.example.com`. This kind of mischief is immediately
    detected by the installer, and is disallowed.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: PEAR 安装器试图检索 [http://mychannel.example.com/channel.xml](http://mychannel.example.com/channel.xml)。一个聪明而邪恶的频道管理员实际上可以提供一个没有定义
    `mychannel.example.com` 的 `channel.xml` 文件。这种恶作剧会被安装器立即检测到，并禁止。
- en: The addition of channel mirrors also introduces an element of risk. By defining
    these mirrors in `channel.xml`, it is not possible to subvert the installer into
    believing another channel is a legitimate mirror of a channel.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 添加频道镜像也引入了风险元素。通过在 `channel.xml` 中定义这些镜像，无法使安装器相信另一个频道是某个频道的合法镜像。
- en: When downloading a package from a channel, strict verification of the `package.xml`
    is performed. If a package is downloaded from channel `foo.example.com` and its
    `package.xml` claims to be from `pear.php.net`, the PEAR installer refuses to
    install or upgrade the package, as this would be a blatant security exploit.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 当从频道下载软件包时，会执行严格的 `package.xml` 验证。如果软件包是从 `foo.example.com` 频道下载的，而其 `package.xml`
    声称来自 `pear.php.net`，PEAR 安装器将拒绝安装或升级该软件包，因为这将是明显的安全漏洞。
- en: In addition, if the requested package name is not the same as the package name
    in `package.xml`, the PEAR installer will refuse to install or upgrade the package.
    Otherwise, it would be possible to distribute a package claiming to be `foo.example.com/Foo`
    and actually distributing `pear.php.net/PEAR`. The same mechanism prevents dependencies
    on malicious packages. A package downloaded from a channel/package must be that
    channel/package, period. The same is true for static tarballs. A package depended
    on using a static-tarball package dependency cannot distribute a channel-based
    package.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果请求的软件包名称与 `package.xml` 中的软件包名称不同，PEAR 安装器将拒绝安装或升级该软件包。否则，就有可能分发一个声称是 `foo.example.com/Foo`
    实际上分发 `pear.php.net/PEAR` 的软件包。相同的机制防止了对恶意软件包的依赖。从频道/软件包下载的软件包必须是那个频道/软件包，仅此而已。对于静态
    tarball 也是如此。一个依赖于使用静态 tarball 软件包依赖的软件包不能分发基于频道的软件包。
- en: 'The most potentially dangerous features implemented in the PEAR installer are
    post-installation scripts and custom file tasks. Both of these features automatically
    execute arbitrary code when invoked. PEAR provides a layer of security by making
    it extremely difficult to accidentally execute malicious code. A user must:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 在 PEAR 安装器中实现的最可能危险的功能是安装后脚本和自定义文件任务。这两个功能在调用时都会自动执行任意代码。PEAR 通过使意外执行恶意代码变得极其困难来提供一层安全防护。用户必须：
- en: Explicitly install a malicious file task
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 明确安装恶意文件任务
- en: Explicitly install a package that uses the malicious file task
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 明确安装使用恶意文件任务的软件包
- en: 'For post-installation scripts, the end user must:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 对于安装后脚本，最终用户必须：
- en: Explicitly install a package containing malicious post-installation scripts
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 明确安装包含恶意后安装脚本的包
- en: Explicitly type pear `run-scripts maliciouschannel/maliciouspackage` for the
    malicious package
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 明确输入 `pear run-scripts maliciouschannel/maliciouspackage` 以运行恶意包
- en: These extra steps allow the PEAR installer to make it very difficult to accidentally
    compromise a system, and also to provide extreme visibility to the fact that an
    unusual circumstance is being executed.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 这些额外步骤使得 PEAR 安装程序在无意中损害系统变得非常困难，同时也为执行不寻常情况提供了极高的可见性。
- en: It is important to note that until PEAR version 1.4.3, the PEAR installer had
    two security vulnerabilities. Both require a user to install a publicly distributed
    malicious package. Both were caused by improper implementation of the command
    pattern.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是要注意，直到 PEAR 版本 1.4.3，PEAR 安装程序有两个安全漏洞。两者都需要用户安装一个公开分发的恶意包。这两个漏洞都是由命令模式的不当实现引起的。
- en: 'The command pattern is a method of providing extensibility based on loading
    files in a special subdirectory. The PEAR installer has been using this pattern
    since version 1.0 to load the actual commands shown when you type:'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 命令模式是一种基于在特殊子目录中加载文件来提供扩展性的方法。PEAR 安装程序自 1.0 版本以来一直在使用这种模式来加载当你输入时显示的实际命令：
- en: '[PRE41]'
  id: totrans-292
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: The files implementing this pattern are located in `PEAR/Command/*.php` (PEAR/Command/Auth.php,
    `PEAR/Command/Install.php`, etc.), and in PEAR versions 1.4.2 and older, these
    files were loaded up every time the user used the `pear` command.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 实现这种模式的文件位于 `PEAR/Command/*.php`（包括 `PEAR/Command/Auth.php`、`PEAR/Command/Install.php`
    等），在 PEAR 版本 1.4.2 及更早版本中，这些文件在用户使用 `pear` 命令时会被加载。
- en: This ultimately provides a vector for a malicious package to execute arbitrary
    PHP code in an uncontrolled situation. PEAR 1.4.3 and newer versions fix this
    through the implementation of an XML format describing commands. No actual PHP
    code is loaded unless the user explicitly requests a command other than `help`.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 这最终为恶意包提供了一个在不受控制的情况下执行任意 PHP 代码的途径。PEAR 1.4.3 及更高版本通过实现描述命令的 XML 格式来修复这个问题。除非用户明确请求除
    `help` 之外的命令，否则不会加载任何实际的 PHP 代码。
- en: The command pattern is also used for custom file roles, first introduced in
    PEAR 1.4.x. All files `PEAR/Installer/Role/*.php` were loaded up every time the
    `pear` command was executed in order to construct the list of custom configuration
    variables. The same solution that fixed the arbitrary code execution vulnerability
    in commands is implemented to fix this vulnerability.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 命令模式也用于自定义文件角色，首次在 PEAR 1.4.x 版本中引入。每次执行 `pear` 命令时，都会加载所有 `PEAR/Installer/Role/*.php`
    文件，以构建自定义配置变量的列表。用于修复命令中任意代码执行漏洞的相同解决方案也被用来修复这个漏洞。
- en: Summary
  id: totrans-296
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: 'This chapter showed us that channels are designed to make it easy to install
    packages from any location, but difficult to compromise your system in the process,
    following a basic security principle: always make the easiest way to do things
    the most secure way.'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 本章向我们展示了频道的设计目的是为了使从任何位置安装包变得容易，但在过程中损害系统的难度很大，遵循一个基本的安全原则：总是让做事最容易的方式成为最安全的方式。
- en: Channels open up `pear.php.net's` monopoly over the PEAR installer to the entire
    Internet. Custom-built packages distributed through your channel can even be sold
    and made available to specific users while co-existing peacefully with publicly
    available open source-packages.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 频道打破了 `pear.php.net` 对 PEAR 安装程序的垄断，使其面向整个互联网。通过你的频道分发的自定义构建的包甚至可以出售并提供给特定用户，同时与公开可用的开源包和平共处。
