["```php\n    $ composer require --dev codeception/codeception\n    $ composer require --dev yiisoft/yii2-codeception\n    $ composer require --dev yiisoft/yii2-faker\n\n    ```", "```php\n    $ ./vendor/bin/codecept\n\n    ```", "```php\n    $ ./vendor/bin/codecept bootstrap\n\n    ```", "```php\n    actor: Tester\n    paths:\n        tests: tests\n        log: tests/_output\n        data: tests/_data\n        support: tests/_support\n        envs: tests/_envs\n    settings:\n        bootstrap: _bootstrap.php\n        colors: true\n        memory_limit: 1024M\n    extensions:\n        enabled:\n            - Codeception\\Extension\\RunFailed\n    ```", "```php\n    <?php\n\n    // Define our application_env variable as provided by nginx/apache\n    if (!defined('APPLICATION_ENV'))\n    {\n        if (getenv('APPLICATION_ENV') != false)\n            define('APPLICATION_ENV', getenv('APPLICATION_ENV'));\n        else \n           define('APPLICATION_ENV', 'prod');\n    }\n\n    $env = require(__DIR__ . '/../config/env.php');\n\n    // comment out the following two lines when deployed to production\n    defined('YII_DEBUG') or define('YII_DEBUG', $env['debug']);\n    defined('YII_ENV') or define('YII_ENV', APPLICATION_ENV);\n\n    require(__DIR__ . '/../vendor/autoload.php');\n    require(__DIR__ . '/../vendor/yiisoft/yii2/Yii.php');\n    $config = require(__DIR__ . '/../config/web.php');\n\n    (new yii\\web\\Application($config));\n    ```", "```php\n    $ ./vendor/bin/codecept run\n\n    ```", "```php\n$ ./vendor/bin/codecept generate:phpunit unit Example\n\n```", "```php\n$ ./vendor/bin/codecept generate:test unit Example\n\n```", "```php\n<?php\n\nclass ExampleTest extends \\Codeception\\TestCase\\Test\n{\n    /**\n     * @var \\UnitTester\n     */\n    protected $tester;\n\n    protected function _before()\n    {\n    }\n\n    protected function _after()\n    {\n    }\n\n    // tests\n    public function testMe()\n    {\n\n    }\n}\n```", "```php\npublic function testMe()\n{\n    // Assert that the boolean value \"true\" is indeed true\n    $this->assertTrue(true);\n}\n```", "```php\n$ ./vendor/bin/codecept run\n\n```", "```php\n$ ./vendor/bin/codecept run unit\n\n```", "```php\npublic function testMeToo()\n{\n    $this->assertFalse(false);\n}\n```", "```php\n    $ ./vendor/bin/codecept generate:test unit User\n\n    ```", "```php\n    <?php\n\n    namespace app\\tests\\unit\\UserTest;\n\n    use Codeception\\TestCase\\Test;\n    use app\\models\\User;\n    use Yii;\n\n    class UserTest extends Test {}\n    ```", "```php\n    public function testSetFullName()\n    {   \n        $user = new User;\n        $user->setFullName('John Doe');\n\n        // Asser the setFullName method works\n        $this->assertTrue($user->first_name == \"John\");\n        $this->assertTrue($user->last_name == \"Doe\");\n        $this->assertFalse($user->first_name == \"Jane\");\n        unset($user);\n\n        $user = new User;\n        $user->fullName = 'John Doe';\n\n        // Asser the full_name setter method works\n        $this->assertTrue($user->first_name == \"John\");\n        $this->assertTrue($user->last_name == \"Doe\");\n        $this->assertFalse($user->first_name == \"Jane\");\n\n        unset($user);\n    }\n    ```", "```php\n    $ ./yii migrate/up --interactive=0\n\n    ```", "```php\n    public function testValidatePassword()\n    {   \n        $user = User::find()->where(['id' => 1])->one();\n        $this->assertTrue($user->validatePassword('password1'));\n        $this->assertFalse($user->validatePassword('password2'));\n\n        $user = User::find()->where(['id' => 2])->one();\n        $this->assertTrue($user->validatePassword('password2'));\n        $this->assertFalse($user->validatePassword('password1'));\n\n        $user = User::find()->where(['id' => 3])->one();\n        $this->assertTrue($user->validatePassword('password3'));\n        $this->assertFalse($user->validatePassword('password4'));\n\n        $user = User::find()->where(['id' => 4])->one();\n        $this->assertTrue($user->validatePassword('admin'));\n        $this->assertFalse($user->validatePassword('notadmin'));\n    }\n    ```", "```php\n    $ composer require codeception/specify\n\n    ```", "```php\n    <?php\n\n    namespace app\\tests\\unit\\UserTest;\n\n    use Codeception\\TestCase\\Test;\n\n    use app\\models\\User;\n    use yii\\codeception\\TestCase;\n    use Yii;\n\n    class UserTest extends Test\n    {\n        use \\Codeception\\Specify;\n    }\n    ```", "```php\n    public function testValidate()\n    {\n        $this->specify('false is false', function() {\n            $this->assertFalse(false);\n        });\n    }\n    ```", "```php\n    Test validate (app\\tests\\unit\\UserTest\\UserTest::/\n    testValidate)            Ok\n\n    ```", "```php\n    public function testValidate()\n    {\n        $this->specify('email and password are required', function() {\n            $user = new User;\n            // Verify our validation fails as we didn't provide any attributes\n            $this->assertFalse($user->validate());\n\n            // Verify that the email and password properties are required\n            $this->assertTrue($user->hasErrors('email'));\n            $this->assertTrue($user->hasErrors('password'));\n            $user->email = 'user@example.com';\n            $user->password =  password_hash('example', PASSWORD_BCRYPT, ['cost' => 13]);\n            $this->assertTrue($user->validate());\n        });\n\n        $this->specify('email is unique', function() {\n            $user = new User;\n            // Verify email is unique\n            $user->email = 'jane.doe@example.com';\n            $user->password =  password_hash('example', PASSWORD_BCRYPT, ['cost' => 13]);\n            $this->assertFalse($user->validate());\n            $this->assertTrue($user->hasErrors('email'));\n        });\n\n        $this->specify('first and last name are strings', function() {\n            $user = new User;\n            $user->email = 'user@example.com';\n            $user->password =  password_hash('example', PASSWORD_BCRYPT, ['cost' => 13]);\n            // Verify first and last name has to be strings\n            $user->first_name = (int)7;\n            $user->last_name = (int)5;\n\n            $this->assertFalse($user->validate());\n            $this->assertTrue($user->hasErrors('first_name'));\n            $this->assertTrue($user->hasErrors('last_name'));\n\n            // Verify that strings work\n            $user->setFullName('Example User');\n            $this->assertTrue($user->validate());\n        });\n    }\n    ```", "```php\n        $ composer require --dev codeception/codeception\n        $ composer require --dev yiisoft/yii2-codeception\n        $ composer require --dev yiisoft/yii2-faker\n        $ composer require --dev codeception/specify\n\n        ```", "```php\n        $ ./vendor/bin/codecept bootstrap\n\n        ```", "```php\n        <?php\n        define('DS', DIRECTORY_SEPARATOR);\n\n        defined('YII_TEST_ENTRY_URL') or define('YII_TEST_ENTRY_URL', parse_url(\\Codeception\\Configuration::config()['config']['test_entry_url'], PHP_URL_PATH));\n        defined('YII_TEST_ENTRY_FILE') or define('YII_TEST_ENTRY_FILE', dirname(__DIR__) . '/web/index-test.php');\n\n        // Define our application_env variable as provided by nginx/apache\n        if (!defined('APPLICATION_ENV'))\n        {\n            if (getenv('APPLICATION_ENV') != false)\n                define('APPLICATION_ENV', getenv('APPLICATION_ENV'));\n            else \n               define('APPLICATION_ENV', 'prod');\n        }\n        $env = require(__DIR__ . '/../config/env.php');\n        // comment out the following two lines when deployed to production\n        defined('YII_DEBUG') or define('YII_DEBUG', $env['debug']);\n        defined('YII_ENV') or define('YII_ENV', APPLICATION_ENV);\n        require(__DIR__ . '/../vendor/autoload.php');\n        require(__DIR__ . '/../vendor/yiisoft/yii2/Yii.php');\n        $config = require(__DIR__ . '/../config/web.php');\n\n        $_SERVER['SCRIPT_FILENAME'] = YII_TEST_ENTRY_FILE;\n        $_SERVER['SCRIPT_NAME'] = YII_TEST_ENTRY_URL;\n        $_SERVER['SERVER_NAME'] = parse_url(\\Codeception\\Configuration::config()['config']['test_entry_url'], PHP_URL_HOST);\n        $_SERVER['SERVER_PORT'] =  parse_url(\\Codeception\\Configuration::config()['config']['test_entry_url'], PHP_URL_PORT) ?: '80';\n\n        Yii::setAlias('@tests', dirname(__DIR__));\n\n        (new yii\\web\\Application($config));\n        ```", "```php\n        $ ./vendor/bin/codecept bootstrap\n        ```", "```php\n    # Codeception Test Suite Configuration\n    #\n    # Suite for functional (integration) tests\n    # Emulate web requests and make application process them\n    # Include one of framework modules (Symfony2, Yii2, Laravel5) to use it\n\n    class_name: FunctionalTester\n    modules:\n        enabled:\n          - Filesystem\n          - Yii2\n        config:\n            Yii2:\n                configFile: 'tests/config/functional.php'\n    ```", "```php\n    <?php\n    $_SERVER['SCRIPT_FILENAME'] = YII_TEST_ENTRY_FILE;\n    $_SERVER['SCRIPT_NAME'] = YII_TEST_ENTRY_URL;\n    /**\n     * Application configuration for functional tests\n     */\n    return yii\\helpers\\ArrayHelper::merge(\n        require(__DIR__ . '/../../config/web.php'),\n        [\n            'components' => [\n                'request' => [\n                    'enableCsrfValidation' => false,\n                ],\n            ],\n        ]\n    );\n    ```", "```php\n    $ ./vendor/bin/codecept build\n\n    ```", "```php\n    $ ./vendor/bin/codecept run\n\n    ```", "```php\n$ ./vendor/bin/codecept generate:cept functional Page\n\n```", "```php\n<?php \n$I = new FunctionalTester($scenario);\n$I->wantTo('perform actions and see result');\n```", "```php\n    <?php \n    $I = new FunctionalTester($scenario);\n    $I->wantTo('Verify that homepage loads');\n    $I->amOnPage('/');\n    $I->amOnPage('site/index');\n    $I->amOnPage(['/site/index']);\n\n    ```", "```php\n    $I->see('Now you\\'re thinking with widgets!');\n    ```", "```php\n    $I->see('Home');\n    $I->see('Register');\n    $I->see('Login');\n    ```", "```php\n    $ ./vendor/bin/codecept run functional\n\n    ```", "```php\n    $ ./vendor/bin/codecept run functional –vv\n\n    ```", "```php\n    $ ./vendor/bin/codecept generate:cept functional Login\n\n    ```", "```php\n    <?php \n    $I = new FunctionalTester($scenario);\n    $I->wantTo('Verify login page');\n\n    // Verify homepage link works\n    $I->amOnPage('/');\n    $I->click('Login');\n    $I->amOnPage(['site/login']);\n    ```", "```php\n    // Verify form is present\n    $I->seeElement('input', ['id' => 'userform-email']);\n    $I->seeElement('input', ['id' => 'userform-password']);\n    ```", "```php\n    // Verify bad user/pass fails\n    $I->fillField(['id' => 'userform-email'], 'foo');\n    $I->fillField(['id' => 'userform-password'], 'bar');\n    $I->click(\"Submit\");\n\n    $I->SeeCurrentUrlEquals('/site/login');\n\n    // Verify bad user/pass fails\n    $I->fillField(['id' => 'userform-email'], 'admin@example.com');\n    $I->fillField(['id' => 'userform-password'], 'admin');\n    $I->click(\"Submit\");\n\n    $I->SeeCurrentUrlEquals('/site/index');\n    ```", "```php\n    $ ./vendor/bin/codecept functional LoginCept –vv\n\n    ```", "```php\n    --- \n    class_name: AcceptanceTester\n    modules: \n      enabled: \n        - \n          PhpBrowser: \n            url: \"http://localhost:8082\"\n        - \\Helper\\Acceptance\n        - Yii2\n      config:\n            Yii2:\n                configFile: 'tests/config/acceptance.php'\n    ```", "```php\n    - WebDriver:\n        url: http://localhost\n        browser: firefox\n        restart: true\n    ```", "```php\n    $ ./vendor/bin/codecept build\n\n    ```", "```php\n    <?php\n        define('DS', DIRECTORY_SEPARATOR);\n\n        defined('YII_TEST_ENTRY_URL') or define('YII_TEST_ENTRY_URL', parse_url(\\Codeception\\Configuration::config()['config']['test_entry_url'], PHP_URL_PATH));\n            defined('YII_TEST_ENTRY_FILE') or define('YII_TEST_ENTRY_FILE', dirname(dirname(__DIR__)) . '/web/index-test.php');\n\n        // Define our application_env variable as provided by nginx/apache\n        if (!defined('APPLICATION_ENV'))\n        {\n            if (getenv('APPLICATION_ENV') != false)\n                define('APPLICATION_ENV', getenv('APPLICATION_ENV'));\n            else \n            define('APPLICATION_ENV', 'prod');\n         }\n         $env = require(__DIR__ . '/../../config/env.php');\n\n        // comment out the following two lines when deployed to production\n        defined('YII_DEBUG') or define('YII_DEBUG', $env['debug']);\n        defined('YII_ENV') or define('YII_ENV', APPLICATION_ENV);\n        require(__DIR__ . '/../../vendor/autoload.php');\n        require(__DIR__ . '/../../vendor/yiisoft/yii2/Yii.php');\n        $config = require(__DIR__ . '/../../config/web.php');\n\n        Yii::setAlias('@tests', dirname(__DIR__));\n\n        (new yii\\web\\Application($config));\n    ```", "```php\n    <?php\n    $_SERVER['SCRIPT_FILENAME'] = YII_TEST_ENTRY_FILE;\n    $_SERVER['SCRIPT_NAME'] = YII_TEST_ENTRY_URL;\n\n    /**\n     * Application configuration for functional tests\n     */\n    return require(__DIR__ . '/../../config/web.php');\n    ```", "```php\n    $ ./vendor/bin/codecept generate:cept acceptance Page\n\n    ```", "```php\n    $ ./vendor/bin/codecept run acceptance\n\n    ```", "```php\n<?php \n$I = new AcceptanceTester($scenario);\n$I->wantTo('Verify that homepage loads');\n$I->amOnPage('/');\n$I->amOnPage('site/index');\n$I->see('Now you\\'re thinking with widgets!');\n$I->see('Home');\n$I->see('Login');\n$I->see('Register');\n```", "```php\n$ ./vendor/bin/codecept run acceptance –vv\n\n```", "```php\n    $ composer require --dev yii2-faker\n\n    ```", "```php\n    \"yiisoft/yii2-faker\": \"*\",\n    ```", "```php\n    <?php\n\n    Yii::setAlias('@tests', dirname(__DIR__) . '/tests');\n\n    return [\n        // [...],\n        'controllerMap' => [\n     'fixture' => [\n     'class' => 'yii\\faker\\FixtureController',\n     ],\n     ],\n        'controllerNamespace' => 'app\\commands',\n        // [...]\n    ];\n    ```", "```php\n    <?php\n    /**\n     * Application configuration for functional tests\n     */\n    return require(__DIR__ . '/../../config/web.php');\n    ```", "```php\n./yii help fixture\n\n```", "```php\n<?php\nnamespace app\\tests\\fixtures;\n\nuse yii\\test\\ActiveFixture;\n\nclass UserFixture extends ActiveFixture\n{\n    public $modelClass = 'app\\models\\User';\n}\n```", "```php\n<?php return [\n    'user1' => [\n        'id'       => 1,\n        'email'        => 'jane.doe@example.com',\n        'password' => '$2y$13$iqINH3RvfW29zPupoz2Zeu9cTXUPosjn1V\n.yhihP0iZEWFkEPSl6.',\n        'first_name'  => 'Jane',\n        'last_name'  => 'Doe',\n        'role_id'     => 1,\n        'created_at'  => 1448926013,\n        'updated_at'  => 1448926013\n    ],\n    'admin' => [ \n        'id'       => 4,\n        'email'     => 'admin@example.com',\n        'password'     => '$2y$13$uHCvsJWJr.M0vRcDlhWhVO9tTPLh8qD9.ngnhwThzzwGNC62.Ugl6',\n        'first_name' \t=> 'Site',\n        'last_name' \t=> 'Administrator',\n        'role_id' \t\t=> 2,\n        'created_at' \t=> 1448926013,\n        'updated_at' \t=> 1448926013\n    ]\n];\n```", "```php\n$ ./yii fixture/load User --namespace=app/tests/fixtures\n\n```", "```php\n$ ./yii fixture/unload User --namespace=app/tests/fixtures\n\n```", "```php\n<?php\n\nYii::setAlias('@tests', dirname(__DIR__) . '/tests');\n\nreturn [\n    // [...],\n    'controllerMap' => [\n        'fixture' => [\n            'class' => 'yii\\faker\\FixtureController',\n            'namespace' => 'tests\\fixtures',\n        ],\n    ],\n    // [...]\n];\n```", "```php\n$ ./vendor/bin/codecept generate:test un it UserFixture\n\n```", "```php\n    <?php\n\n    namespace app\\tests\\unit\\UserFixtureTest;\n\n    use app\\tests\\fixtures\\UserFixture;\n    use app\\models\\User;\n    use Yii;\n    ```", "```php\n    class UserFixtureTest extends \\yii\\codeception\\DbTestCase\n    {\n        /**\n         * @var \\UnitTester\n         */\n        protected $tester;\n\n        public $appConfig = \"@app/tests/config/unit.php\";\n    }\n    ```", "```php\n    public function fixtures()\n    {\n        return [\n            'users' => UserFixture::className(),\n        ];\n    }\n    ```", "```php\npublic function testValidatePassword()\n{\n    $user = User::find()->where(['id' => 1])->one();\n    $this->assertTrue($user->validatePassword('password1'));\n    $this->assertFalse($user->validatePassword('password2'));\n    unset($user);\n\n    $user = User::find()->where(['id' => 4])->one();\n    $this->assertTrue($user->validatePassword('admin'));\n    $this->assertFalse($user->validatePassword('notadmin'));\n    unset($user);\n}\n```", "```php\n$ ./vendor/bin/codecept run unit\n\n```", "```php\n    sudo: false\n\n    env:\n      - \"APPLICATION_ENV=dev\"\n\n    language: php\n\n    cache:\n      directories:\n        - vendor\n\n    php:\n      - 5.6\n      - 7\n\n    install:\n      - composer selfupdate\n      - composer global require \"fxp/composer-asset-plugin:~1.0\"\n      - composer install -o -n\n\n    before_script:\n      - ./yii migrate/up --interactive=0\n\n    script: \n      - ./vendor/bin/codecept run\n    ```"]