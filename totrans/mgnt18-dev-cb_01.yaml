- en: Chapter 1. Getting Started with Magento
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Preparing the development environment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing Magento with sample data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adding version control to the source code
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring the development tools
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You have probably heard of Magento. It is an out-of-the-box e-commerce platform
    with many features, such as catalog navigation, promotion rules, RSS feeds, product
    search, product tags, product reviews, tax rules, reports, and order management.
  prefs: []
  type: TYPE_NORMAL
- en: The company behind Magento is Varien. In 2007, they started thinking about an
    open source e-commerce platform that would be designed for a large number of uses.
    After one year of developing, the first stable release Magento 1.0 came out in
    2008\. When Magento became more popular in the later years, eBay showed interest
    in it and now owns 100 percent of Magento.
  prefs: []
  type: TYPE_NORMAL
- en: If you install Magento and configure it, then you can start selling products
    online. But when you want a custom theme, extra shipping methods, and other features,
    you have to extend the software as per the rules of Magento. If you know something
    about PHP programming, follow the steps described in the recipes, and you can
    start editing your Magento store.
  prefs: []
  type: TYPE_NORMAL
- en: We will create a development environment where you can start working. We will
    install sample data so that the shop is not empty and is ready to go. If you are
    new, you can start here. If you are a pro, you can still start here, because we
    follow the best practices of Magento development. Let's get started. Good luck!
  prefs: []
  type: TYPE_NORMAL
- en: Preparing the development environment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We will set up a development environment with Magento. For this, we need to
    set up a **LAMP** (**Linux, Apache, MySQL, PHP**) environment. In that LAMP environment,
    we will create a **Fully Qualified Domain Name** (**FQDN**) and a virtual host.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We have to set up a development server that we will use to run Magento. When
    we have a Ubuntu desktop environment, we have to install the latest versions of
    the following software:'
  prefs: []
  type: TYPE_NORMAL
- en: Apache2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: PHP
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MySQL server
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Extra PHP libraries
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'We can install these software by running the following commands on a CLI interface.
    These commands are based on a Ubuntu-based Linux distribution. To run the commands
    on a desktop with Ubuntu OS, launch the **Terminal** program:'
  prefs: []
  type: TYPE_NORMAL
- en: 'To install the web server Apache2, run the following command:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To install PHP, run the following command:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To install the MySQl server, run the following command:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To install the required PHP extensions that Magento uses, such as the MySQL
    bridge, run the following command:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When everything is installed, we will create a virtual host with an FQDN. We
    want our development environment to be available at `http://magento-dev.local/`.
    To do this, we have to create a virtual host with this domain name. This domain
    points to the IP of our previously created web server.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following steps describe how you can create a virtual host with an FQDN:'
  prefs: []
  type: TYPE_NORMAL
- en: Create a `magento-dev.local` file in the `/etc/apache2/sites-available/` directory.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'To create and edit the file, run the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Paste the following content in that file:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Run the following commands in the terminal to create the `www` root folder:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'To create the site folder (document root), run the following command:'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
- en: 'To enable the site, run the following command:'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
- en: 'To reload the Apache server, run the following command:'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
- en: 'To test the site, we have to add the following line in our host''s file (`/etc/hosts`):'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
- en: This will point the domain `magento-dev.local` to the IP address 127.0.0.1\.
    This is the IP address of the local web server (localhost), so a request to this
    URL doesn't go to the Internet but goes to the local web server.
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This recipe describes how to install a web server from a CLI interface. If you
    already have a web server with a specific domain, you can skip this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: The Magento files will be installed in the public directory. When a request
    is made to the domain, the `www-data` user will execute the request. So, it is
    best that all files and folders have the `www-data` user and group to avoid permission
    problems.
  prefs: []
  type: TYPE_NORMAL
- en: 'On a Linux server, every file and folder has three types of permissions. These
    permissions are **read**, **write**, **and execute** (**rwx**). You can set these
    permissions in three scopes: for owners, groups, and others. On every file request,
    Linux decides, based on the permissions, whether a user can read, write, or execute
    a certain file.'
  prefs: []
  type: TYPE_NORMAL
- en: For an HTTP request, the `www-data` user will be used to execute a request.
    So, it is important to ensure that the `www-data` user has enough file permissions
    to run the application. To change file permissions, you can use the `chmod` command.
    To change the owner and group, you can use the `chown` command.
  prefs: []
  type: TYPE_NORMAL
- en: There's more…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: It is also possible to run Magento and the web server on other operating systems.
    To run a web server, we need Apache, MySQL, and PHP. It is possible to install
    these software on a Windows or Mac device.
  prefs: []
  type: TYPE_NORMAL
- en: The variant for Windows operating systems is **WAMP** (**Windows, Apache, MySQL,
    and PHP**). You can find more information about this variant on the WAMP website
    at [http://www.wampserver.com](http://www.wampserver.com).
  prefs: []
  type: TYPE_NORMAL
- en: For Mac OS, the alternative is MAMP. More information on MAMP is available at
    [http://www.mamp.info](http://www.mamp.info).
  prefs: []
  type: TYPE_NORMAL
- en: A cross-platform web server is XAMP. You can download the installer for Linux,
    Windows, or Mac from their website at [http://www.apachefriends.org/en/xampp.html](http://www.apachefriends.org/en/xampp.html).
  prefs: []
  type: TYPE_NORMAL
- en: Installing Magento with sample data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When you install Magento, you can start with an empty database or a database
    with some sample products and configurations. For our development environment,
    the best approach is to start with the sample data because we can start using
    Magento directly after installation.
  prefs: []
  type: TYPE_NORMAL
- en: 'For a new webshop, it is recommended to start with an empty database and do
    the configuration yourself. To install Magento, we need the following data:'
  prefs: []
  type: TYPE_NORMAL
- en: The Magento code
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The sample data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can download Magento and the sample data from Magento's website ([http://www.magentocommerce.com/download](http://www.magentocommerce.com/download)).
    Download the latest **Full release** and the **Sample data**. The recipes of this
    book are based on the Magento Version 1.8.1.0\. For the sample data, you can use
    the 1.6.1.0 Version.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following steps show you how to install a clean Magento webshop with sample
    data:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Extract the code in the appropriate folder of our web server. In our case,
    this is `/var/www/magento-dev.local/public`. Take a look at the folder structure
    by running the `ls -la` command in the site''s root folder. We have to take care
    that the hidden files are included in the folder:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Tip
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: In Linux, hidden files or folders start wit a dot (.), such as the `.htaccess`
    file. The `-a` option of the `ls` command that we used shows all the files and
    folders, including the hidden ones. It is important to see that the `.htaccess`
    file is in the directory because this file contains the configuration for URL
    rewrites and other server configurations.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: When you extract the sample data archive, you see a media folder and a SQL file.
    The SQL file contains the database, the media folder, and the images. To install
    the media folder, merge this folder with the site's root media folder.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: It is important to install the sample data before running the Magento install
    wizard. If Magento doesn't find the sample data in the database, the wizard continues
    with an empty database without the sample data.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'To install the database, you have to run the following commands:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'To create the database, run the following commands:'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
- en: 'To import the SQL file, run the following commands:'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
- en: Tip
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: To avoid permission problems, ensure that all files and folders have the right
    permissions. For security reasons, it is recommended that all files have just
    enough permissions so that only the right users can access the right files. When
    you give all the rights (777), you don't have permission problems; but, every
    user on the server can read, write, and execute every file of your application.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The next step is to run the Magento installation wizard. Go to the site's URL
    and the installer will be displayed as shown in the following screenshot:![How
    to do it...](img/3329OS_01_01.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Continue with the installation process by accepting the terms and conditions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the next screen, choose the correct language, locale, and currency for your
    store.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'On the **Configuration** page, fill the form with the right data:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Database Type**: Enter `MySQL` in this field.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Host**: Enter `localhost` in this field.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Database Name**: Enter `magento_dev` (your Magento database name) in this
    field.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**User Name**: Enter `root` (your Magento database username) in this field.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**User Password**: Enter `root` (your database user password) in this field.
    It is possible to leave this empty.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Tables Prefix**: Leave this field empty (if filled, all tables will have
    the prefix that is entered here).'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Base URL**: Enter `http://magento-dev.local/` (the URL of your webshop) in
    this field.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Admin Path**: Enter `admin` (the path to the backend) in this field.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Enable Charts**: This check box must be checked.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Skip Base URL Validation Before the Next Step**: This check box must be unchecked
    (if checked, the wizard will check for a valid URL when processing this form).'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Use Web Server (Apache) Rewrites**: This check box must be unchecked.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Use Secure URLs (SSL)**: This check box must be unchecked.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Submit the form and continue to the next step. In this step, you can configure
    the admin account. Fill in the right data and remember the login and password,
    because this is required to manage the store. Leave the encryption key empty.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After submitting this form, the installation wizard terminates. The setup is
    complete. You can now visit your store and enter the backend with the username
    that you have created in the installation wizard.![How to do it...](img/3329OS_01_02.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We just created a fully functional Magento store. Technically, you can start
    selling products.
  prefs: []
  type: TYPE_NORMAL
- en: We have started with the sample data. The SQL file that we inserted in the database
    contains all the data for the sample webshop. When you want to create an empty
    shop, you can start with an empty database.
  prefs: []
  type: TYPE_NORMAL
- en: When installing a new shop, always follow the installer. The installer creates
    the `app/etc/local.xml` file and installs the values that you have set in the
    installer. These values are currency, timezone, backend user, and so on. The installer
    will show up when there is no `local.xml` file in the `app/etc/` folder. In all
    other cases, the webshop will show up.
  prefs: []
  type: TYPE_NORMAL
- en: With a complete `local.xml` file in the `app/etc` folder, you can install Magento.
    However, this is not recommended because you don't have a backend user and the
    other configurations.
  prefs: []
  type: TYPE_NORMAL
- en: Adding version control to the source code
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With version control, you can manage the changes that are made in the computer
    files. When you add this to a programming code, you can track all the changes
    you have made to the code from the time you initialized it. There are some very
    popular version control systems on the market, such as Subversion (SVN), Mercurial
    SCM, CVS, and Git SCM.
  prefs: []
  type: TYPE_NORMAL
- en: In this recipe, we will use Git SCM to add version control to our previously
    created Magento code. We will initialize an empty repository. After that, we will
    do several commits to add all the Magento code to the repository.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Go to your command line, and install Git on your local server by running the
    following command in the terminal:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following steps show you how you can add the Magento code to the version
    control system Git:'
  prefs: []
  type: TYPE_NORMAL
- en: 'We have to initialize the Git repository. To do this, navigate to the source
    folder and enter the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Run the following command and you will see that all the files are marked as
    untracked:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: In the next steps, we will add the other folders to the repository.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Add the `app/` folder to the repository by running the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: This will add all the files in the `app/` directory. When you run the `git status`
    command, you will see a list of all the files.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Run the following command to remove the `local.xml` file from the repository
    but not from the drive:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Run the following command to create the first commit:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Run the following command to track the file''s status:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Create a `.gitignore` file in the root, and add the following content in it:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Run the `git status` command again, and you will see that `local.xml` is ignored.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Commit the `.gitignore` file by running the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Add the other application files and folders to the repository by running the
    command `git add` <`folder or filename`>. Run this command for the following folders:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`downloader` (for installing plugins)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`errors` (configuration about error handling)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`js` (the JS library folder)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`lib` (contains PHP libraries)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pkginfo` (information about upgrades)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`shell/` (contains PHP CLI scripts)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`skin/` (the CSS and images folder)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`api.php`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`cron.php`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`cron.sh`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`favicon.ico`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`get.php`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`index.php`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`index.php.sample`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`install.php`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`LICENCE_AFL.txt`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`LICENCE.html`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`LICENCE.txt`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`mage`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`php.ini.sample`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`RELEASE_NOTES.txt`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Run a new `git commit` command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Ignore the other nonstatic Magento files and folders. Add the following content
    in the `.gitignore` file:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Add the `media/` and `var/` folders to the repository with the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: We only need the `.htaccess` files, the other files are ignored because they
    are dynamic.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When working with a version control system, you have to keep in mind that another
    person who clones the project can set up the environment with a database and the
    code in the Git. That environment has to be the same as the one you have committed.
  prefs: []
  type: TYPE_NORMAL
- en: It is very important that every Magento core file and your customized files
    are in the Git repository. You don't have to add configuration files, such as
    `app/etc/local.xml` and `errors/local.xml`, in version control. When running your
    code on another server, the settings in the configuration files are mostly different
    from the settings on the server.
  prefs: []
  type: TYPE_NORMAL
- en: Dynamically generated files such as cache files and user images are stored in
    the `media` and `var` folder, so we don't need the content of these folders.
  prefs: []
  type: TYPE_NORMAL
- en: The only important file in these folders is the `.htaccess` file, which has
    the configuration to restrict the `var` folder and the `media` folder.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring the development tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'When you start customizing your Magento store, a good development environment
    with the following components saves time:'
  prefs: []
  type: TYPE_NORMAL
- en: A code editor (IDE)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A MySQL client (phpMyAdmin or MySQL Workbench)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A command-line tool
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: NetBeans is an open source IDE that can be used for a lot of programming languages.
    The PHP support is well maintained and there are a lot of integrations with other
    systems (Git, SVN, and MySQL).
  prefs: []
  type: TYPE_NORMAL
- en: To install NetBeans, you have to download it from their site at [http://netbeans.org](http://netbeans.org)
    and run the installer. Make sure that when you download it, you select the PHP
    version or the full version.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following steps show you how to create a NetBeans project with the Magento
    files as the document root:'
  prefs: []
  type: TYPE_NORMAL
- en: To create the project, open NetBeans and navigate to **File** | **New Project**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the dialog window, click on **PHP Application with Existing Sources** as
    shown in the following screenshot:![How to do it...](img/3329OS_01_03.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on **Next** and configure the following settings:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Source Folder**: This field is set to the location of your Magento code'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Project Name**: The NetBeans project name is entered in this field'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**PHP Version**: This field is set to **PHP 5.3** or higher'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Default Encoding**: This field is set to **UTF-8**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following screenshot gives the sample values for these settings:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![How to do it...](img/3329OS_01_04.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Tip
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: When you are working with a version control system (SVN, Git, or something else),
    it is recommended to check the option **Put NetBeans metadata into a separate
    directory**. If not checked, a `.nbproject` folder is created in your Magento
    root, which you will not have in your version control system. Another possibility
    is to add the `.nbproject` folder in the `.gitignore` file.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click on **Next**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Configure the following settings:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Run as:** In our case, this field is set to a local web server'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Project URL**: In this field, enter `http://magento-dev.local`, the URL that
    we have configured for Magento'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Index File**: This field is set to `index.php`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following screenshot gives the sample values for these settings:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![How to do it...](img/3329OS_01_05.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Click on **Finish** and your NetBeans project is ready.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When the project is started, you see the document root in the left-hand side
    column of the window. When you double click on a file, the file will open in the
    main window. In this window, you can view the file's history, format the code,
    refactor variable names, and a lot more.
  prefs: []
  type: TYPE_NORMAL
- en: There's more…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Behind the development environment in the IDE, a database client and a command-line
    tool are very useful when developing in Magento.
  prefs: []
  type: TYPE_NORMAL
- en: MySQL client phpMyAdmin
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: phpMyAdmin is a MySQL client that runs as a web application. It is an easy-to-use
    tool for direct SQL input in a database.
  prefs: []
  type: TYPE_NORMAL
- en: 'To install phpMyAdmin, open your terminal and run the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Follow the installer's instructions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Edit the `/etc/apache2/apache.conf` file, and add the following code at the
    end of the file:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Reload the Apache server with the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Go to `http://magento-dev.local/phpmyadmin`, and you will see the login screen.
    You can log in with the credentials of the database user for your Magento database.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Command-line tool Wiz
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Magento has a lot of system tasks that you have to execute in your development
    process. All these actions could be triggered in the backend. However, because
    this is a time consuming job, a shell interface can save you a lot of time.
  prefs: []
  type: TYPE_NORMAL
- en: Wiz is a command-line tool that you can download from [https://github.com/classyllama/Wiz](https://github.com/classyllama/Wiz).
  prefs: []
  type: TYPE_NORMAL
- en: Follow the installation instructions on their website. When installed, you have
    to change the directory of your shell to your Magento root. If you are in the
    Magento root, all the commands you run are executed for that Magento installation.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are some useful commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '`wiz admin-resetpass`: This command can be used when you forget your admin
    password'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`wiz admin-createadmin`: This command creates a new administrative user from
    scratch'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`wiz cache-clear`: This command clears all cache or specific cache'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`wiz devel-showhints`: This command enables or disables frontend hints'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`wiz module-list`: This command gives a list of all the installed modules'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`wiz sql-cli`: This command opens the MySQL command line'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
