- en: Chapter 1. CodeIgniter Basics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover:'
  prefs: []
  type: TYPE_NORMAL
- en: Downloading and installing CodeIgniter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Basic configuration options
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Managing CodeIgniter on different environments
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Managing database settings in different environments
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Securing system files
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removing index.php from the address bar using .htaccess
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing and using Sparks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: CodeIgniter is an easy to use, easy to set up PHP-based framework which you
    can use to build pretty much any web-based application you can think of. There
    is a little bit of configuration needed before we can start to use CodeIgniter;
    however, this chapter will walk you through downloading, installing, and understanding
    the basic configuration of CodeIgniter to help you quickly get up and running.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading and installing CodeIgniter
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'First things first, you will need a copy of CodeIgniter to be getting on with.
    There are several choices: you can download a nightly build, an older version,
    or the current stable release. However, it''s recommended that you go for the
    latest stable version.'
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You can get your hands on the latest stable version of CodeIgniter through
    the following link:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://codeigniter.com/downloads/](http://codeigniter.com/downloads/)'
  prefs: []
  type: TYPE_NORMAL
- en: CodeIgniter will be offered as a compressed archive file. Once CodeIgniter has
    been downloaded, copy the package to your web folder, and unpack it as you would
    normally unpack an archive on your system. Once you've done this, you'll need
    to set some configuration options, which we'll look at next.
  prefs: []
  type: TYPE_NORMAL
- en: Basic configuration options
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Configuring CodeIgniter is a lot easier than many other web frameworks available
    and does not require you to resort to using the command line. All you need to
    quickly get up and running is access to several files in the `application/config/`
    folder. These are a few of the suggested settings which will get your CodeIgniter
    installation ready without too much fuss.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Open the file in your localhost of development environment: `/path/to/codeigniter/application/config/config.php`
    and find the following lines:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'The value should be the full web address (the address that is written in your
    browser address bar) to the CodeIgniter installation. So if you are working in
    your localhost, the value should be: `http://localhost/path/to/codeigniter/`.'
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Remember to begin with a `http://` and always put the trailing `/` slash.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you''ve amended your host''s file to use a domain name rather than localhost,
    then be sure to replace localhost with that domain name:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'If you wish to use either the `Session` or `Encryption` classes in your application,
    the encryption key must be set. The encryption key is simply a string of characters
    used by CodeIgniter to encrypt various types of communication:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'The preceding code line specifies whether cross-site script filtering should
    be applied to the `Get`, `Post`, or `Cookie` variables. For the sake of security,
    this should be set to `TRUE`, especially in a live environment:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'The preceding code line specifies whether a cookie token is set, which if `TRUE`
    will be checked every time a form is submitted from the client side. In a live
    environment, it should be set to `TRUE`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'The preceding code line specifies whether you want to write to logs, and if
    so, the type of information you wish to write to those logs. For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '`0`: No errors are written to logs as logging is deactivated'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`1`: Error messages only (this will include PHP errors also)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`2`: Debugging messages only'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`3`: Informational messages only'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`4`: All types of messages'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following code line is the path to the folder in which you wish to save
    log files:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: CodeIgniter will now respond and function according to the settings provided.
  prefs: []
  type: TYPE_NORMAL
- en: Managing CodeIgniter on different environments
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In some cases, it may be useful to adapt your configuration files so that they
    can function on several servers or environments without having to edit or maintain
    each time they are moved. For example, the configuration settings you may have
    on your localhost are very likely to be different than those on a live or production
    server. Setting the configuration files correctly will save you a lot of time
    rather than manually switching between the two.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Open the `/path/to/codeigniter/application/config/config.php` file and replace
    the `$config["base_url"]` line with the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This is simply a case/switch statement with a `SERVER_NAME` check. The `base_url`
    value is set according to the server that the CodeIgniter application or project
    is running on.
  prefs: []
  type: TYPE_NORMAL
- en: Managing database settings on different environments
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you plan to use a database for your CodeIgniter application, then you'll
    need to maintain the correct connection settings. CodeIgniter keeps these settings
    in the `database.php` config file.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Open the `/path/to/codeigniter/application/config/database.php` file. Chances
    are that the only values that need to change are the standard hostname, username,
    password of your database server, and the database name.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Find the line that defines `$active_group`, which specifies the specific database
    settings to use for a particular hosting environment. You can switch between settings
    by a `case`/`switch` test similar to that used previously, for example, the following
    code tests for a particular server and loads the appropriate settings:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'All we''re doing is defining the environment that the site is running on. In
    the preceding example, we specify two environments: either `default` or `testing`,
    and apply specific settings for them. So, let''s look at some variable definitions.'
  prefs: []
  type: TYPE_NORMAL
- en: Common values
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'The standard database access options are shown in the following table:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Option name | Valid options | Description |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| $db["default"]["hostname"] | Usually localhost | This is the server that
    the database sits on |'
  prefs: []
  type: TYPE_TB
- en: '| $db["default"]["username"] |   | The database access username |'
  prefs: []
  type: TYPE_TB
- en: '| $db["default"]["password"] |   | The password for the database |'
  prefs: []
  type: TYPE_TB
- en: '| $db["default"]["database"] |   | The name of the database |'
  prefs: []
  type: TYPE_TB
- en: Other values
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'The following table shows the options that normally remain unchanged from the
    default setting but are here just incase you wish to change them:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Option name | Valid options | Description |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| $db["default"]["dbdriver"] | mysql | This is the type of DBMS you''re using—the
    recipes in this book use MySQL. The value must be all lowercase. |'
  prefs: []
  type: TYPE_TB
- en: '| $db["default"]["dbprefix"] | Default: mysql, but may also be postgre, odbc,
    and so on | Sometimes you may wish to add a prefix to a database table name, for
    example, a blogging application might prefix its tables with the word "blog" so
    the posts table would become blog_posts. |'
  prefs: []
  type: TYPE_TB
- en: '| $db["default"]["pconnect"] | TRUE/FALSE | Specifies whether you wish to maintain
    a persistent connection to the database. |'
  prefs: []
  type: TYPE_TB
- en: '| $db["default"]["db_debug"] | TRUE/FALSE | Specifies whether you wish to display
    database errors on the screen. It is blank by default, but for security purposes
    should be set to `FALSE` on a live environment and `TRUE` while in development.
    |'
  prefs: []
  type: TYPE_TB
- en: '| $db["default"]["cache_on"] | TRUE/FALSE | Specifies whether you want database
    query caching enabled. |'
  prefs: []
  type: TYPE_TB
- en: '| $db["default"]["cachedir"] |   | Specifies the absolute file path to your
    database query cache. |'
  prefs: []
  type: TYPE_TB
- en: '| $db["default"]["char_set"] | utf8 | Specifies the character set that CodeIgniter
    will use with the database. |'
  prefs: []
  type: TYPE_TB
- en: '| $db["default"]["dbcollat"] | utf8_general_ci | Specifies the character collation
    that CodeIgniter will use with the database. |'
  prefs: []
  type: TYPE_TB
- en: '| $db["default"]["port"] | 3306 | Default MySQL port. This option is not included
    by default, and if you wish to use a specific port for your database connection,
    you''ll need to manually write in this line and set the value. |'
  prefs: []
  type: TYPE_TB
- en: We will look at accessing data from a database in more detail in [Chapter 6](ch06.html
    "Chapter 6. Working with Databases"), *Working with Databases*.
  prefs: []
  type: TYPE_NORMAL
- en: Securing the system files
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: On live environments, it is strongly recommended that you move your system folder
    out of the web root to prevent malicious access.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Move the system folder either by the command line or using your computer's GUI
    to a folder outside the publicly accessible web folder. The method to do this
    will be different depending on which system you are using, but I'm sure you know
    how to move a folder, so we will not discuss that here.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'After you have moved the system folder, you will need to update the `$system_path`
    variable in the `path/to/codeigniter/index.php` file. Look for and find the following
    line:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Amend the line to reflect the new location of the system folder. So if, for
    example, you moved the system folder up one level out of the web root, you should
    write the following line:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: By moving the system folder out of the web root, you are protecting it against
    access via the Internet (as much as possible). The system folder is much more
    unlikely to be accessed in a location outside of the web root than inside.
  prefs: []
  type: TYPE_NORMAL
- en: Removing index.php from the address bar using .htaccess
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: It is possible to remove the `index.php` file from the web browser address bar
    when CodeIgniter is running.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Create or open a `.htaccess` file. If a `.htaccess` file does not already exist,
    you can create one as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Linux/Mac**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Open a terminal window and type: `touch/path/to/CodeIgniter/.htaccess`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Windows**'
  prefs: []
  type: TYPE_NORMAL
- en: Create a text file in your CodeIgniter root, naming it `file.htaccess`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Press *Windows* + *R* to open the run dialogue.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Enter the following command and click on **OK**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Once your `.htaccess` file is opened, write the following lines at the top
    of the file:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This rule in the `.htaccess` file will remove the `index.php` file from the
    browser's address bar. CodeIgniter's `index.php` file is still called but it is
    not shown to the user in the address bar of the browser.
  prefs: []
  type: TYPE_NORMAL
- en: Installing and using Sparks
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: It has been the case for a long time now that to find and use extensions, libraries,
    and other useful snippets of code for CodeIgniter, you have to search the Internet
    and download code from various places such as blogs, code repositories, and so
    on. Useful installations for CodeIgniter were spread across the Internet and as
    such, may have been hard to locate. Sparks acts as a single point of reference
    for extensions for CodeIgniter. It's simple to install and use, and contains thousands
    of useful add-ons for CodeIgniter.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you are using a MAC or Linux, then the command line interface is open to
    you.
  prefs: []
  type: TYPE_NORMAL
- en: 'Using the terminal application on your system, navigate to the root of your
    CodeIgniter application and enter the following line:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'If your installation was successful, you should see something similar to:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'If you are using Windows, then you will need to download Sparks and unpack
    it manually. To do that, perform the following instructions or check out the instructions
    on the GetSparks website for the latest version:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Create a folder named `tools` in the top level (root) of your CodeIgniter directory.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Visit the following URL: [http://getsparks.org/install](http://getsparks.org/install).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Go to the **Normal Installation** section and download the Sparks package.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Unpack the download into the `tools` folder you created in step 1.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Download the `Loader` class extension from: [http://getsparks.org/static/install/MY_Loader.php.txt](http://getsparks.org/static/install/MY_Loader.php.txt).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Rename the `MY_Loader.php.txt` file to `MY_Loader.php` and move it to the `application/core/MY_Loader.php`
    directory in your CodeIgniter instance.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now that Sparks is installed in your CodeIgniter instance, you can begin to
    install extensions and packages.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'To install a package from Sparks, type the following in the command line:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Here, `Package Version` is the specific version of the Spark you wish to install.
    You are not required to state the version, and by leaving it out, Sparks will
    download the latest version by default. `Spark Name` is the name of the Spark
    you wish to install, so for example, to install the `example-spark` (Version 1.0.0)
    that comes with the default installation, type in the command line:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'If the installation was successful, you should see something similar to:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You should now be ready to begin making use of your Spark. Be sure to read the
    `Readme` file or documentation that is included with your Spark for its correct
    usage.
  prefs: []
  type: TYPE_NORMAL
