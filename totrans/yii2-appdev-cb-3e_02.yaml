- en: Chapter 2. Routing, Controllers, and Views
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2章 路由、控制器和视图
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍以下主题：
- en: Configuring URL rules
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置URL规则
- en: Generating URLs
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成URL
- en: Using regular expressions in URL rules
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在URL规则中使用正则表达式
- en: Using a base controller
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用基本控制器
- en: Using standalone actions
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用独立动作
- en: Creating a custom filter
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建自定义过滤器
- en: Displaying static pages
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 显示静态页面
- en: Using flash messages
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用闪存消息
- en: Using the controller context in a view
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在视图中使用控制器上下文
- en: Reusing views with partials
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用部分重用视图
- en: Using blocks
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用块
- en: Using decorators
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用装饰器
- en: Defining multiple layouts
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义多个布局
- en: Pagination and sorting data
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分页和排序数据
- en: Introduction
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: This chapter will help you to learn some handy things about the Yii URL router,
    controllers, and views. You will be able to make your controllers and views more
    flexible.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将帮助你了解一些关于Yii URL路由器、控制器和视图的实用技巧。你将能够使你的控制器和视图更加灵活。
- en: Configuring URL rules
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置URL规则
- en: In this recipe, we will learn how to configure URL rules. Before we begin lets
    set up an application.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将学习如何配置URL规则。在我们开始之前，让我们设置一个应用程序。
- en: Getting ready
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Create a new application using the Composer package manager, as described in
    the official guide at [http://www.yiiframework.com/doc-2.0/guide-start-installation.html](http://www.yiiframework.com/doc-2.0/guide-start-installation.html).
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Composer包管理器创建一个新的应用程序，如官方指南[http://www.yiiframework.com/doc-2.0/guide-start-installation.html](http://www.yiiframework.com/doc-2.0/guide-start-installation.html)中所述。
- en: 'Create the `@app/controllers/TestController.php` controller with the following
    code inside:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建包含以下代码的`@app/controllers/TestController.php`控制器：
- en: '[PRE0]'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This is the application controller that we are going to customize URLs for.
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是我们要自定义URL的应用程序控制器。
- en: 'Configure your application server to use clean URLs. If you are using Apache
    with `mod_rewrite` and `AllowOverride` turned on, then you should add the following
    lines to the `.htaccess` file under your `@web` directory:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置你的应用程序服务器以使用干净的URL。如果你使用Apache并开启了`mod_rewrite`和`AllowOverride`，那么你应该在你的`@web`目录下的`.htaccess`文件中添加以下行：
- en: '[PRE1]'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: How to do it…
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点…
- en: 'Our website should display the index page at `/home` and all other pages at
    `/page/<alias_ here>`. Additionally, `/about` should lead to a page with the alias
    about:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的网站应该在`/home`显示首页，在其他所有页面显示为`/page/<alias_ here>`。此外，`/about`应指向一个带有别名about的页面：
- en: 'Add the following config of the `urlManager` component in `@app/config/web.php`:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`@app/config/web.php`中添加以下`urlManager`组件的配置：
- en: '[PRE2]'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'After saving your changes, you should be able to browse the following URLs:'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 保存你的更改后，你应该能够浏览以下URL：
- en: '[PRE3]'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Try running the `/home` URL and you will get the following:![How to do it…](img/image00382.jpeg)
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尝试运行`/home` URL，你将得到以下结果：![如何做到这一点…](img/image00382.jpeg)
- en: Then try running the `/about` page:![How to do it…](img/image00396.jpeg)
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后尝试运行`/about`页面：![如何做到这一点…](img/image00396.jpeg)
- en: How it works…
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: 'Let''s review what was done and why it works. We''ll start with the right-most
    part of the first rule:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾一下已经做了什么以及为什么它有效。我们将从第一条规则的最右边开始：
- en: '[PRE4]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: What is `test/index` exactly? In the Yii application, each controller and its
    actions have corresponding internal routes. A format for an internal route is
    `moduleID/controllerID/actionID`. For example, the `actionPage` method of `TestController`
    corresponds to the `test/page` route. So, in order to get the controller ID, you
    should take its name without the Controller postfix and make its first letter
    lowercase. To get an action ID, you should take the action method name without
    the action prefix, and again, make its first letter lowercase.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '`test/index`究竟是什么？在Yii应用中，每个控制器及其动作都有对应的内部路由。内部路由的格式为`moduleID/controllerID/actionID`。例如，`TestController`的`actionPage`方法对应于`test/page`路由。因此，为了获取控制器ID，你应该去掉Controller后缀，并将首字母小写。为了获取动作ID，你应该去掉动作方法名的前缀，同样，首字母也要小写。'
- en: Now, what is home? To understand it in a better way, we need to know, at least
    superficially, what's happening when we access our application using different
    URLs.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，什么是首页？为了更好地理解它，我们需要至少表面地了解当我们使用不同的URL访问我们的应用程序时发生了什么。
- en: When we use `/home`, the URL router checks our rules one by one starting from
    the top, trying to match the URL entered with the rule. If a match is found, then
    the router gets the controller and its action from an internal route assigned
    to the rule and executes it. So, `/home` is the URL pattern that defines which
    URLs will be processed by the rule it belongs to.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们使用`/home`时，URL路由器会从顶部开始逐个检查我们的规则，尝试将输入的URL与规则匹配。如果找到匹配项，则路由器从分配给该规则的内部分配中获取控制器及其动作并执行它。因此，`/home`是定义哪些URL将由其所属规则处理的URL模式。
- en: There's more…
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'You can also create parameterized rules using a special syntax. Let''s review
    the third rule:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用特殊语法创建参数化规则。让我们回顾第三条规则：
- en: '[PRE5]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Here, we are defining an alias parameter that should be specified in the URL
    after `/page/`. It can be virtually anything and it will be passed as the `$alias`
    parameter to the following:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们定义了一个别名参数，该参数应在`/page/`之后指定在URL中。它可以几乎是任何东西，并且将作为`$alias`参数传递给以下：
- en: '[PRE6]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'You can define a pattern for such a parameter. We did it for the second rule,
    as follows:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以为这样的参数定义一个模式。我们为第二个规则做了如下操作：
- en: '[PRE7]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The alias here should match `about`, otherwise, the rule will not be applied.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 此处的别名应匹配`about`，否则规则将不会应用。
- en: See also
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: 'Refer to the following links for further reading:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 参考以下链接以获取更多阅读材料：
- en: '[http://www.yiiframework.com/doc-2.0/guide-runtime-routing.html](http://www.yiiframework.com/doc-2.0/guide-runtime-routing.html)'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.yiiframework.com/doc-2.0/guide-runtime-routing.html](http://www.yiiframework.com/doc-2.0/guide-runtime-routing.html)'
- en: '[http://www.yiiframework.com/doc-2.0/guide-runtime-url-handling.html](http://www.yiiframework.com/doc-2.0/guide-runtime-url-handling.html)'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.yiiframework.com/doc-2.0/guide-runtime-url-handling.html](http://www.yiiframework.com/doc-2.0/guide-runtime-url-handling.html)'
- en: '[http://www.yiiframework.com/doc-2.0/yii-web-urlmanager.html](http://www.yiiframework.com/doc-2.0/yii-web-urlmanager.html)'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.yiiframework.com/doc-2.0/yii-web-urlmanager.html](http://www.yiiframework.com/doc-2.0/yii-web-urlmanager.html)'
- en: The *Using regular expressions in URL rules* recipe
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在URL规则中使用正则表达式*的配方'
- en: Generating URLs
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 生成URL
- en: Yii allows you to not only route your URLs to different controller actions,
    but also to generate a URL by specifying a proper internal route and its parameters.
    This is really useful because you can focus on internal routes while developing
    your application, and only worry about real URLs before going live. Never specify
    URLs directly and make sure that you use the Yii URL toolset. It will allow you
    to change URLs without rewriting a lot of application code.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: Yii不仅允许您将URL路由到不同的控制器动作，还可以通过指定适当的内部路由及其参数来生成URL。这非常有用，因为在开发应用程序时，您可以专注于内部路由，而在上线前只需关注真实URL。永远不要直接指定URL，并确保您使用Yii
    URL工具集。它将允许您在不重写大量应用程序代码的情况下更改URL。
- en: Getting ready
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Create a new application using the Composer package manager, as described in
    the official guide at [http://www.yiiframework.com/doc-2.0/guide-start-installation.html](http://www.yiiframework.com/doc-2.0/guide-start-installation.html).
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照官方指南中的说明，使用Composer包管理器创建一个新的应用程序：[http://www.yiiframework.com/doc-2.0/guide-start-installation.html](http://www.yiiframework.com/doc-2.0/guide-start-installation.html)。
- en: 'Find your `@app/config/web.php` file and replace the rules array as follows:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找到您的`@app/config/web.php`文件，并按以下方式替换规则数组：
- en: '[PRE8]'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Configure your application server to use clean URLs. If you are using Apache
    with `mod_rewrite` and `AllowOverride` turned on, then you should add the following
    lines to the `.htaccess` file under your `@app/web` folder:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置您的应用程序服务器以使用干净的URL。如果您正在使用启用了`mod_rewrite`和`AllowOverride`的Apache，那么您应该在`@app/web`文件夹下的`.htaccess`文件中添加以下行：
- en: '[PRE9]'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: How to do it…
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'In your `@app/controllers` directory, create `BlogController` with the following
    code inside:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的`@app/controllers`目录下，创建`BlogController`，并在其中放置以下代码：
- en: '[PRE10]'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This is our blog controller that we are going to generate custom URLs for.
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是我们将要为它生成自定义URL的博客控制器。
- en: 'In your `@app/controllers` directory, create `TestController` with the following
    code inside:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的`@app/controllers`目录下，创建`TestController`，并在其中放置以下代码：
- en: '[PRE11]'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'In the `@app/views` directory, create the `test` directory and the `urls.php`
    view file, and place the following code inside:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`@app/views`目录下，创建`test`目录和`urls.php`视图文件，并在其中放置以下代码：
- en: '[PRE12]'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Go to the URL `http://yii-book.app/test/urls` and you will see the output. (Refer
    to the full list of methods in the preceding code.):![How to do it…](img/image00487.jpeg)
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往URL `http://yii-book.app/test/urls`，您将看到输出。（参考前面代码中的完整方法列表。）![如何做到这一点…](img/image00487.jpeg)
- en: How it works...
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: We need to generate URLs pointing to the controller actions (RssFeed, Article,
    List, HiTech) of `BlogController`.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要生成指向 `BlogController` 控制器动作（RssFeed、Article、List、HiTech）的URL。
- en: Depending on where we need it, there are different ways of doing it, but the
    basics are the same. Let's list some methods that generate URLs.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我们的需求，有不同的实现方式，但基本原理是相同的。让我们列出一些生成URL的方法。
- en: What is an internal route? Each controller and its actions have corresponding
    routes. A format for a route is `moduleID/controllerID/actionID`. For example,
    the `actionHiTech` method of `BlogController` corresponds to the `blog/hi-tech`
    route.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 内部路由是什么？每个控制器及其动作都有相应的路由。路由的格式是 `moduleID/controllerID/actionID`。例如，`BlogController`
    的 `actionHiTech` 方法对应于 `blog/hi-tech` 路由。
- en: To get a controller ID, you should take its name without the Controller postfix
    and make its first letter lowercase. To get an action ID, you should take the
    action method name without the action prefix and make the first letter in each
    word lowercase, and separate them with a dash (-) sign (for example, `actionHiTech`
    will be `hi-tech`).
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取控制器ID，你应该去掉Controller后缀，并将首字母转换为小写。要获取动作ID，你应该去掉动作前缀，并将每个单词的首字母转换为小写，并用连字符（-）分隔（例如，`actionHiTech`
    将是 `hi-tech`）。
- en: 'The `$_GET` variables are the parameters that will be passed to an action with
    an internal route specified. For example, if we want to create a URL to a `BlogController::action`
    article that passes the `$_GET[''name'']` parameter to it, it can be done as follows:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '`$_GET` 变量是将传递给指定内部路由的动作的参数。例如，如果我们想创建一个指向 `BlogController::action` 文章的URL，并将
    `$_GET[''name'']` 参数传递给它，可以这样做：'
- en: '[PRE13]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Relative URLs can be used inside your application, while absolute ones should
    be used for pointing to locations outside your website (such as other websites)
    or for linking to resources meant to be accessed from outside (RSS feeds, e-mails,
    and so on).
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 相对URL可以在你的应用程序中使用，而绝对URL应该用于指向网站外部的位置（例如其他网站）或用于链接到外部可访问的资源（如RSS源、电子邮件等）。
- en: You can do it easily with the URL manager. The URL manager is a built-in application
    component named `urlManager`. You have to use this component, which is accessible
    from both web and console applications via `Yii::$app->urlManager`.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用URL管理器轻松实现。URL管理器是一个名为 `urlManager` 的内置应用程序组件。你必须使用这个组件，它可以通过 `Yii::$app->urlManager`
    从Web和控制台应用程序访问。
- en: 'When you cannot get a controller instance, for example, when you implement
    a console application, you can use the two following `urlManager` creation methods:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 当你无法获取控制器实例时，例如，当你实现控制台应用程序时，你可以使用以下两种 `urlManager` 创建方法：
- en: '[PRE14]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: There's more...
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'For further information, refer to the following URLs:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 有关更多信息，请参阅以下URL：
- en: '[https://en.wikipedia.org/wiki/Canonical_link_element](https://en.wikipedia.org/wiki/Canonical_link_element)'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://en.wikipedia.org/wiki/Canonical_link_element](https://en.wikipedia.org/wiki/Canonical_link_element)'
- en: '[http://www.yiiframework.com/doc-2.0/guide-structure-controllers.html](http://www.yiiframework.com/doc-2.0/guide-structure-controllers.html)'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.yiiframework.com/doc-2.0/guide-structure-controllers.html](http://www.yiiframework.com/doc-2.0/guide-structure-controllers.html)'
- en: '[http://www.yiiframework.com/doc-2.0/guide-runtime-routing.html](http://www.yiiframework.com/doc-2.0/guide-runtime-routing.html)'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.yiiframework.com/doc-2.0/guide-runtime-routing.html](http://www.yiiframework.com/doc-2.0/guide-runtime-routing.html)'
- en: '[http://www.yiiframework.com/doc-2.0/guide-helper-url.html](http://www.yiiframework.com/doc-2.0/guide-helper-url.html)'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.yiiframework.com/doc-2.0/guide-helper-url.html](http://www.yiiframework.com/doc-2.0/guide-helper-url.html)'
- en: '[http://www.yiiframework.com/doc-2.0/yii-web-urlmanager.html](http://www.yiiframework.com/doc-2.0/yii-web-urlmanager.html)'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.yiiframework.com/doc-2.0/yii-web-urlmanager.html](http://www.yiiframework.com/doc-2.0/yii-web-urlmanager.html)'
- en: See also
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 相关内容
- en: The *Configuring URL rules* recipe
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*配置URL规则* 菜谱'
- en: Using regular expressions in URL rules
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在URL规则中使用正则表达式
- en: One of the hidden features of the Yii URL router is that you can use regular
    expressions that are pretty powerful for handling strings.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: Yii URL路由器的隐藏特性之一是你可以使用相当强大的正则表达式来处理字符串。
- en: Getting ready
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Create a new application using the Composer package manager, as described in
    the official guide at [http://www.yiiframework.com/doc-2.0/guide-start-installation.html](http://www.yiiframework.com/doc-2.0/guide-start-installation.html).
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Composer包管理器创建新应用程序，如官方指南中所述，请参阅 [http://www.yiiframework.com/doc-2.0/guide-start-installation.html](http://www.yiiframework.com/doc-2.0/guide-start-installation.html)。
- en: 'In your `@app/controllers` directory, create `PostController.php` using the
    following:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的 `@app/controllers` 目录中，使用以下内容创建 `PostController.php`：
- en: '[PRE15]'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: This is our application controller that we are going to access using our custom
    URLs.
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是我们的应用程序控制器，我们将通过自定义URL来访问它。
- en: 'Configure your application server to use clean URLs. If you are using Apache
    with `mod_rewrite` and `AllowOverride` turned on, then you should add the following
    lines to the `.htaccess` file under your `@web` folder:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置您的应用程序服务器以使用干净的URL。如果您使用Apache并开启了`mod_rewrite`和`AllowOverride`，那么您应该在`@web`文件夹下的`.htaccess`文件中添加以下行：
- en: '[PRE16]'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: How to do it…
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: We want our `PostController` action to accept parameters according to some specified
    rules and give the `404 not found` HTTP response for all parameters that do not
    match. In addition, post/index should have an alias URL archive.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望我们的`PostController`操作能够根据某些指定的规则接受参数，并为所有不匹配的参数给出`404 not found` HTTP响应。此外，`post/index`应该有一个别名URL为archive。
- en: 'Add the following config of the `urlManager` component to `@app/config/web.php`:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 将以下`urlManager`组件的配置添加到`@app/config/web.php`：
- en: '[PRE17]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The following URLs will be successful:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 以下URL将成功：
- en: '`http://yii-book.app/post/test`'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`http://yii-book.app/post/test`'
- en: '`http://yii-book.app/posts`'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`http://yii-book.app/posts`'
- en: '`http://yii-book.app/archive`'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`http://yii-book.app/archive`'
- en: '`http://yii-book.app/posts/ASC`'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`http://yii-book.app/posts/ASC`'
- en: '`http://yii-book.app/sayhello`'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`http://yii-book.app/sayhello`'
- en: 'The following URLs will fail:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 以下URL将失败：
- en: '`http://yii-book.app/archive/test`'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`http://yii-book.app/archive/test`'
- en: '`http://yii-book.app/post/another_post`'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`http://yii-book.app/post/another_post`'
- en: 'The following screenshot shows that the URL `http://yii-book.app/post/test`
    has run successfully:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示，URL `http://yii-book.app/post/test` 已成功运行：
- en: '![How to do it…](img/image00489.jpeg)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作…](img/image00489.jpeg)'
- en: 'The following screenshot shows that the URL `http://yii-book.app/archive` has
    run successfully too:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示，URL `http://yii-book.app/archive` 也已成功运行：
- en: '![How to do it…](img/image00490.jpeg)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作…](img/image00490.jpeg)'
- en: 'The following screenshot shows that the URL `http://yii-book.app/archive/test`
    did not run successfully and encountered an error:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示，URL `http://yii-book.app/archive/test` 没有成功运行并遇到了错误：
- en: '![How to do it…](img/image00493.jpeg)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作…](img/image00493.jpeg)'
- en: How it works…
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: 'You can use regular expressions in both the parameter definition and the rest
    of the rule. Let''s read our rules one by one:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在参数定义和规则的其他部分使用正则表达式。让我们逐条阅读我们的规则：
- en: '[PRE18]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: The alias parameter should contain one or more English letters or a dash. No
    other symbols are allowed.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 别名参数应包含一个或多个英文字母或破折号。不允许使用其他符号。
- en: '[PRE19]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Both `posts` and `archive` lead to `post/index`. The `order` parameter can
    only accept two values—`DESC` and `ASC`:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '`posts`和`archive`都指向`post/index`。`order`参数只能接受两个值——`DESC`和`ASC`：'
- en: '[PRE20]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: You should specify the name part but there are no restrictions on what characters
    are allowed. Note that regardless of the rule used, the developer should never
    assume that the input data is safe.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该指定名称部分，但对允许使用的字符没有限制。请注意，无论使用哪种规则，开发者都不应假设输入数据是安全的。
- en: '![How it works…](img/image00497.jpeg)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的…](img/image00497.jpeg)'
- en: There's more…
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: 'To learn more about regular expressions, you can use the following sources:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于正则表达式的信息，您可以使用以下资源：
- en: '[http://www.php.net/manual/en/reference.pcre.pattern.syntax.php](http://www.php.net/manual/en/reference.pcre.pattern.syntax.php)'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.php.net/manual/en/reference.pcre.pattern.syntax.php](http://www.php.net/manual/en/reference.pcre.pattern.syntax.php)'
- en: '*Mastering Regular Expressions*, *Jeffrey Friedl* available at [http://regex.info/](http://regex.info/).'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*精通正则表达式*，*Jeffrey Friedl* 可在 [http://regex.info/](http://regex.info/) 获取。'
- en: See also
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The *Configuring URL rules* recipe
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*配置URL规则*配方'
- en: Using a base controller
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用基控制器
- en: In many frameworks, the concept of a base controller that is being extended
    by other ones is described right in the guide. In Yii, it is not in the guide,
    as you can achieve flexibility in many other ways. Still, using a base controller
    is possible and can be useful.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多框架中，被其他控制器扩展的基控制器的概念在指南中就有描述。在Yii中，指南中没有提及，因为您可以通过许多其他方式实现灵活性。尽管如此，使用基控制器是可能的，并且可能是有用的。
- en: Let's say we want to add some controllers that will be accessible only when
    the user is logged in. We can certainly set this constraint for each controller
    separately, but we will do it in a better way.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们想要添加一些只有当用户登录时才能访问的控制器。我们当然可以为每个控制器单独设置这个约束，但我们会以更好的方式来做。
- en: Getting ready
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Create a new application using the Composer package manager, as described in
    the official guide at [http://www.yiiframework.com/doc-2.0/guide-startinstallation.html](http://www.yiiframework.com/doc-2.0/guide-startinstallation.html).
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Composer包管理器创建一个新的应用程序，具体操作请参考官方指南中的[http://www.yiiframework.com/doc-2.0/guide-startinstallation.html](http://www.yiiframework.com/doc-2.0/guide-startinstallation.html)。
- en: How to do it…
  id: totrans-140
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'First, we will need a base controller that our user-only controllers will use.
    Let''s create `@app/components/BaseController.php` with the following code:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们需要一个基础控制器，我们的用户控制器将使用它。让我们创建`@app/components/BaseController.php`，代码如下：
- en: '[PRE21]'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: This controller has an action map with an error action also.
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此控制器有一个包含错误操作的action映射。
- en: Now, create `TestController` by Gii, but set the value of the base class field
    as `app/components/BaseController`:![How to do it…](img/image00500.jpeg)
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在通过Gii创建`TestController`，但将基类字段的值设置为`app/components/BaseController`：![如何操作…](img/image00500.jpeg)
- en: 'You will get something similar to the following:'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您将得到以下类似的结果：
- en: '[PRE22]'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Now, your `TestController` will be only accessible if the user is logged in,
    even though we have not declared it explicitly in the `TestController` class.
    You can check it by visiting `http://yii-book.app/index.php?r=test/index` while
    logged out.
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，您的`TestController`只有在用户登录时才能访问，尽管我们没有在`TestController`类中明确声明。您可以通过在注销状态下访问`http://yii-book.app/index.php?r=test/index`来检查它。
- en: How it works…
  id: totrans-148
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: The trick is nothing more than a basic class inheritance. If filters or access
    control rules are not found in `TestController`, then they will be called from
    `SecureController`.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 这个技巧不过是一个基本的类继承。如果`TestController`中没有找到过滤器或访问控制规则，那么它们将从`SecureController`中调用。
- en: There's more…
  id: totrans-150
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: 'If you need to extend the base controller''s method, keep in the mind that
    it must not be overridden. For example, we need to add a page action to the controller''s
    action map:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要扩展基础控制器的方法，请记住它不能被覆盖。例如，我们需要向控制器动作映射中添加一个页面操作：
- en: '[PRE23]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: For further information, refer to [http://www.yiiframework.com/doc-2.0/yii-base-controller.html](http://www.yiiframework.com/doc-2.0/yii-base-controller.html).
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 如需更多信息，请参阅[http://www.yiiframework.com/doc-2.0/yii-base-controller.html](http://www.yiiframework.com/doc-2.0/yii-base-controller.html)。
- en: Using standalone actions
  id: totrans-154
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用独立操作
- en: In Yii, you can define controller actions as separate classes and then connect
    them to your controllers. This will help you to reuse some common functionality.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 在Yii中，您可以定义控制器操作为单独的类，然后将它们连接到您的控制器。这将帮助您重用一些常用功能。
- en: For example, you can move the backend for autocomplete fields to an action and
    save some time by not having to write it over and over again.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，您可以将自动完成字段的后端移动到操作中，并通过不必重复编写来节省时间。
- en: Another example is that we can create all CRUD operations as separate standalone
    actions. We will write, create, view, and delete operations of the model and view
    the list operation of models.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个例子是，我们可以创建所有CRUD操作作为独立的独立操作。我们将编写、创建、查看和删除模型操作，以及查看模型列表操作。
- en: Getting ready
  id: totrans-158
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Create a new application using the Composer package manager, as described in
    the official guide at [http://www.yiiframework.com/doc-2.0/guide-start-installation.html](http://www.yiiframework.com/doc-2.0/guide-start-installation.html).
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Composer包管理器创建一个新的应用程序，具体操作请参考官方指南中的[http://www.yiiframework.com/doc-2.0/guide-start-installation.html](http://www.yiiframework.com/doc-2.0/guide-start-installation.html)。
- en: 'Let''s create `post` table. Create migration for this using the following command:'
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们创建`post`表。使用以下命令创建迁移：
- en: '[PRE24]'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Update the just-created migration''s methods and list of imported classes as
    follows:'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照以下方式更新刚刚创建的迁移的方法和导入的类列表：
- en: '[PRE25]'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Install all migrations using the following command:'
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令安装所有迁移：
- en: '[PRE26]'
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Create the `Post` model using Gii.
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Gii创建`Post`模型。
- en: How to do it…
  id: totrans-167
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Create the standalone action `@app/actions/CreateAction.php` as follows:'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建独立的操作`@app/actions/CreateAction.php`，代码如下：
- en: '[PRE27]'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Create the standalone action `@app/actions/DeleteAction.php` as follows:'
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建独立的操作`@app/actions/DeleteAction.php`，代码如下：
- en: '[PRE28]'
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Create the standalone action `@app/actions/IndexAction.php` as follows:'
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建独立的操作`@app/actions/IndexAction.php`，代码如下：
- en: '[PRE29]'
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Create the standalone action `@app/actions/ViewAction.php` as follows:'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建独立的操作`@app/actions/ViewAction.php`，代码如下：
- en: '[PRE30]'
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Create the view file `@app/views/crud/create.php` as follows:'
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建视图文件`@app/views/crud/create.php`，代码如下：
- en: '[PRE31]'
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Create the view file `@app/views/crud/index.php` as follows:'
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建视图文件`@app/views/crud/index.php`，代码如下：
- en: '[PRE32]'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Create the view file `@app/views/crud/view.php` as follows:'
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建视图文件`@app/views/crud/view.php`，代码如下：
- en: '[PRE33]'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: To use standalone actions, we declared it in the action map by overriding the
    actions method.
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要使用独立动作，我们在动作映射中通过重写`actions`方法来声明它。
- en: Run `post`/`index`:![How to do it…](img/image00501.jpeg)
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`post`/`index`：![如何做…](img/image00501.jpeg)
- en: How it works…
  id: totrans-184
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Every controller can be built from standalone actions, like a puzzle from pieces.
    The difference is that you can make standalone actions very flexible and reuse
    them in many places.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 每个控制器都可以由独立动作构建，就像拼图一样。不同之处在于你可以使独立动作非常灵活，并在许多地方重用它们。
- en: In our actions, we defined the `modelClass` public property, which helps to
    set up a specific Model class in the `acti` `ons` method of `PostController`.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的动作中，我们定义了`modelClass`公共属性，这有助于在`PostController`的`actions`方法中设置特定的模型类。
- en: See also
  id: totrans-187
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: For further information, refer to [http://www.yiiframework.com/doc-2.0/guide-structure-controllers.html#standalone-actions](http://www.yiiframework.com/doc-2.0/guide-structure-controllers.html#standalone-actions).
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 对于更多信息，请参阅[http://www.yiiframework.com/doc-2.0/guide-structure-controllers.html#standalone-actions](http://www.yiiframework.com/doc-2.0/guide-structure-controllers.html#standalone-actions)。
- en: Creating a custom filter
  id: totrans-189
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建自定义过滤器
- en: Filters are objects that run before and/or after controller actions. For example,
    an access control filter may run before actions to ensure that they are allowed
    to be accessed by particular end users; a content compression filter may run after
    actions to compress the response content before sending them out to end users.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 过滤器是在控制器动作之前和/或之后运行的对象。例如，一个访问控制过滤器可能在动作之前运行，以确保特定的最终用户可以访问它们；一个内容压缩过滤器可能在动作之后运行，在将响应内容发送给最终用户之前压缩它们。
- en: A filter may consist of a prefilter (filtering logic applied before actions)
    and/or a postfilter (logic applied after actions). Filters are essentially a special
    kind of behavior. Therefore, using filters is the same as using behaviors.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 过滤器可能由一个预过滤器（在动作之前应用的过滤逻辑）和一个/或后过滤器（在动作之后应用的逻辑）组成。过滤器本质上是一种特殊的行为。因此，使用过滤器与使用行为相同。
- en: Let's assume that we have a web application, which provides a user interface
    for working only at specified hours, for example, from 10 AM to 6 PM.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们有一个网络应用程序，它只为指定的小时提供用户界面，例如，从上午10点到下午6点。
- en: Getting ready
  id: totrans-193
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Create a new application using the Composer package manager, as described in
    the official guide at [http://www.yiiframework.com/doc-2.0/guide-start-installation.html](http://www.yiiframework.com/doc-2.0/guide-start-installation.html).
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Composer包管理器创建一个新的应用程序，如官方指南中所述，[http://www.yiiframework.com/doc-2.0/guide-start-installation.html](http://www.yiiframework.com/doc-2.0/guide-start-installation.html)。
- en: How to do it…
  id: totrans-195
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'Create a controller, `@app/controllers/TestController.php`, as follows:'
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个控制器，`@app/controllers/TestController.php`，如下所示：
- en: '[PRE34]'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Create a new filter, `@app/components/CustomFilter.php`, as follows:'
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的过滤器，`@app/components/CustomFilter.php`，如下所示：
- en: '[PRE35]'
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: If you've visited this page outside of the specified time period, you'll get
    the following:![How to do it…](img/image00504.jpeg)
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你在这个指定的时间段外访问了这个页面，你会得到以下内容：![如何做…](img/image00504.jpeg)
- en: How it works…
  id: totrans-201
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: 'At first, we added a piece of code to our controller, which implements our
    custom filter:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们在控制器中添加了一段代码，实现了我们的自定义过滤器：
- en: '[PRE36]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: By default, the filter applies to all actions of the controller, but we can
    specify actions for which it will be applied, or even exclude actions from our
    filter.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，过滤器应用于控制器的所有动作，但我们可以指定要应用过滤器的动作，甚至可以排除过滤器中的动作。
- en: You have two actions inside it—`beforeAction` and `afterActions`. The first
    one runs before the controller's actions and the next one after.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 在其中有两个动作——`beforeAction`和`afterActions`。第一个在控制器动作之前运行，下一个在之后运行。
- en: In our simple example, we defined a condition which doesn't allow access to
    website if the time is earlier than 10 AM, and in the after method we just run
    a trace method if the current path is `test/index`.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的简单示例中，我们定义了一个条件，如果时间早于上午10点，则不允许访问网站，在`after`方法中，如果当前路径是`test/index`，我们只是运行一个跟踪方法。
- en: 'You can see the result in the debugger, in the `log` section:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在调试器的`log`部分看到结果：
- en: '![How it works…](img/image00506.jpeg)'
  id: totrans-208
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的…](img/image00506.jpeg)'
- en: In real applications, filters are more complex and also, Yii2 provides a lot
    of built-in filters, such as core, authentication, content negotiator, HTTP cache
    end, and so on.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 在实际应用中，过滤器更复杂，而且Yii2提供了许多内置过滤器，例如核心、认证、内容协商、HTTP缓存端等。
- en: See also
  id: totrans-210
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: For further information, refer to [http://www.yiiframework.com/doc-2.0/guidestructure-filters.html](http://www.yiiframework.com/doc-2.0/guidestructure-filters.html).
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 对于更多信息，请参阅[http://www.yiiframework.com/doc-2.0/guidestructure-filters.html](http://www.yiiframework.com/doc-2.0/guidestructure-filters.html)。
- en: Displaying static pages
  id: totrans-212
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 显示静态页面
- en: If you have a few static pages and aren't going to change them very frequently,
    then it's not worth querying the database and implementing page management for
    them.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你只有几个静态页面，并且不太经常更改它们，那么查询数据库和为它们实现页面管理就没什么必要了。
- en: Getting ready
  id: totrans-214
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Create a new application using the Composer package manager, as described in
    the official guide at [http://www.yiiframework.com/doc-2.0/guide-startinstallation.html](http://www.yiiframework.com/doc-2.0/guide-startinstallation.html).
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Composer包管理器创建一个新的应用程序，如官方指南中所述[http://www.yiiframework.com/doc-2.0/guide-startinstallation.html](http://www.yiiframework.com/doc-2.0/guide-startinstallation.html)。
- en: How to do it…
  id: totrans-216
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Create the test controller file, `@app/controllers/TestController.php`, as
    follows:'
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建测试控制器文件，`@app/controllers/TestController.php`，如下所示：
- en: '[PRE37]'
  id: totrans-218
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Now, put your pages into `views/test/pages`, and name them `index.php` and
    `contact.php`. The content of `index.php` is as follows:'
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，将你的页面放入`views/test/pages`，并命名为`index.php`和`contact.php`。`index.php`的内容如下：
- en: '[PRE38]'
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Now you can check your pages by typing in the URL,
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你可以通过输入URL来检查你的页面，
- en: '`http://yii-book.app/index.php?r=test/page&view=contact`:![How to do it…](img/image00509.jpeg)'
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`http://yii-book.app/index.php?r=test/page&view=contact`:![如何操作…](img/image00509.jpeg)'
- en: Alternatively, you can type in the URL `http://yii-book.app/test/page/view/about`,
    if you have configured clean URLs with a path format.
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 或者，如果你已经配置了路径格式的干净URL，你可以输入URL `http://yii-book.app/test/page/view/about`。
- en: How it works…
  id: totrans-224
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: We connect the external action named `\yii\web\ViewAction`, which simply tries
    to find a view named the same as the `$_GET` parameter supplied. If it is there,
    it displays it. If not, then it will give you a `404 not found` page. In case
    `viewParam` is not set, the `defaultView` value will be used.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 我们连接名为`\yii\web\ViewAction`的外部操作，它只是尝试找到与提供的`$_GET`参数相同的视图名称。如果存在，则显示它。如果不存在，则将显示一个`404
    not found`页面。如果未设置`viewParam`，则使用`defaultView`值。
- en: There's more…
  id: totrans-226
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: About ViewAction
  id: totrans-227
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 关于ViewAction
- en: 'There are some useful `\yii\web\ViewAction` parameters we can use. These are
    listed in the following table:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些有用的`\yii\web\ViewAction`参数我们可以使用。这些列在下表中：
- en: '| Parameter name | Description |'
  id: totrans-229
  prefs: []
  type: TYPE_TB
  zh: '| 参数名称 | 描述 |'
- en: '| --- | --- |'
  id: totrans-230
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `defaultView` | The name of the default view when the `yii\web\ViewAction::$viewParam`
    GET parameter is not provided by the user. Defaults to `''index''`. This should
    be in the format of `path/to/view`, similar to that given in the `GET` parameter.
    |'
  id: totrans-231
  prefs: []
  type: TYPE_TB
  zh: '| `defaultView` | 当用户未提供`yii\web\ViewAction::$viewParam` GET参数时使用的默认视图名称。默认为`''index''`。这应该采用与`GET`参数中给出的类似的`path/to/view`格式。|'
- en: '| `layout` | The name of the layout to be applied to the requested view. This
    will be assigned to `yii\base\Controller::$layout` before the view is rendered.
    Defaults to null, meaning the controller''s layout will be used. If false, no
    layout will be applied. |'
  id: totrans-232
  prefs: []
  type: TYPE_TB
  zh: '| `layout` | 要应用于请求视图的布局名称。在渲染视图之前，这将分配给`yii\base\Controller::$layout`。默认为null，表示将使用控制器的布局。如果为false，则不应用布局。|'
- en: '| `viewParam` | The name of the `GET` parameter that contains the requested
    view name. |'
  id: totrans-233
  prefs: []
  type: TYPE_TB
  zh: '| `viewParam` | 包含请求视图名称的`GET`参数的名称。|'
- en: '| `viewPrefix` | A string to be prefixed to the user-specified view name to
    form a complete view name. For example, if a user requests `tutorial/chap1`, the
    corresponding view name will be `pages/tutorial/chap1`, assuming that the prefix
    is pages. The actual view file is determined by `yii\base\View::findViewFile()`.
    |'
  id: totrans-234
  prefs: []
  type: TYPE_TB
  zh: '| `viewPrefix` | 一个字符串，用于添加到用户指定的视图名称之前，以形成一个完整的视图名称。例如，如果用户请求`tutorial/chap1`，相应的视图名称将是`pages/tutorial/chap1`，假设前缀是pages。实际的视图文件由`yii\base\View::findViewFile()`确定。|'
- en: Configuring URL rules
  id: totrans-235
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置URL规则
- en: 'The `ViewAction` action provides you a way to minify your controller, but the
    URLs look like `http://yii-book.app/index.php?r=test/page&page=about`. To make
    URLs short and more readable, add a URL rule to `urlManager` component:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: '`ViewAction`操作提供了一个最小化你的控制器的方法，但URL看起来像`http://yii-book.app/index.php?r=test/page&page=about`。为了使URL更短、更易读，请向`urlManager`组件添加URL规则：'
- en: '[PRE39]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'If the `urlManager` component configures properly you will get the following:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`urlManager`组件配置正确，你将得到以下结果：
- en: '![Configuring URL rules](img/image00511.jpeg)'
  id: totrans-239
  prefs: []
  type: TYPE_IMG
  zh: '![配置URL规则](img/image00511.jpeg)'
- en: To configure the `urlManager` component, refer to the *Configuring URL rules*
    recipe.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 要配置`urlManager`组件，请参考*配置URL规则*配方。
- en: See also
  id: totrans-241
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 相关内容
- en: 'For further information, refer to the following URLs:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 更多信息，请参考以下URL：
- en: '[http://www.yiiframework.com/doc-2.0/yii-web-viewaction.html](http://www.yiiframework.com/doc-2.0/yii-web-viewaction.html)'
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.yiiframework.com/doc-2.0/yii-web-viewaction.html](http://www.yiiframework.com/doc-2.0/yii-web-viewaction.html)'
- en: '[http://www.yiiframework.com/doc-2.0/guide-structure-views.html#rendering-static-pages](http://www.yiiframework.com/doc-2.0/guide-structure-views.html#rendering-static-pages)'
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.yiiframework.com/doc-2.0/guide-structure-views.html#rendering-static-pages](http://www.yiiframework.com/doc-2.0/guide-structure-views.html#rendering-static-pages)'
- en: The *Configuring URL rules* recipe
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*配置URL规则* 菜谱'
- en: Using flash messages
  id: totrans-246
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用闪存消息
- en: When you are editing a model with a form, deleting a model, or doing any other
    operation, it is good to tell users if it went well or if there was an error.
    Typically, after some kind of action, such as editing a form, a redirect will
    happen and we need to display a message on the page we want to go to. However,
    how do we pass it from the current page to the redirect target and clean up afterwards?
    Flash messages will help us do this.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 当你正在使用表单编辑模型、删除模型或执行任何其他操作时，告诉用户操作是否成功或出现错误是很好的。通常，在编辑表单等某种操作之后，将发生重定向，我们需要在想要跳转的页面上显示一条消息。然而，我们如何从当前页面传递到重定向目标并之后清理它？Flash
    消息将帮助我们完成这项任务。
- en: Getting ready
  id: totrans-248
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Create a new application using the Composer package manager, as described in
    the official guide at [http://www.yiiframework.com/doc-2.0/guide-start-installation.html](http://www.yiiframework.com/doc-2.0/guide-start-installation.html).
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Composer包管理器创建一个新的应用程序，如官方指南中所述，[http://www.yiiframework.com/doc-2.0/guide-start-installation.html](http://www.yiiframework.com/doc-2.0/guide-start-installation.html)。
- en: How to do it…
  id: totrans-250
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Let''s create a `@app/controllers/TestController.php` controller as follows:'
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们创建一个 `@app/controllers/TestController.php` 控制器，如下所示：
- en: '[PRE40]'
  id: totrans-252
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Additionally, create the `@app/views/common/alert.php` view as follows:'
  id: totrans-253
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，创建 `@app/views/common/alert.php` 视图，如下所示：
- en: '[PRE41]'
  id: totrans-254
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Create the `@app/views/test/index.php` file view as follows:'
  id: totrans-255
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建 `@app/views/test/index.php` 文件视图，如下所示：
- en: '[PRE42]'
  id: totrans-256
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Create the `@app/views/test/user.php` file view as follows:'
  id: totrans-257
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建 `@app/views/test/user.php` 文件视图，如下所示：
- en: '[PRE43]'
  id: totrans-258
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Now, if you go to `http://yii-book.app/index.php?r=test/success`, you will be
    redirected to `http://yii-book.app/index.php?r=test/index` and a success message
    will be displayed as follows:![How to do it…](img/image00513.jpeg)
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，如果你访问 `http://yii-book.app/index.php?r=test/success`，你将被重定向到 `http://yii-book.app/index.php?r=test/index`，并显示一条成功消息如下：![如何操作…](img/image00513.jpeg)
- en: Moreover, if you go to `http://yii-book.app/index.php?r=test/error`, you will
    be redirected to the same page, but with an error message. Refreshing the `index`
    page will hide the message:![How to do it…](img/image00515.jpeg)
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，如果你访问 `http://yii-book.app/index.php?r=test/error`，你将被重定向到相同的页面，但会显示一个错误消息。刷新
    `index` 页面将隐藏该消息：![如何操作…](img/image00515.jpeg)
- en: Then try running `http://yii-book.app/index.php?r=test/user`. You will be redirected
    to `http://yii-book.app/index.php?r=test/index` and an error message will be displayed
    that executed in the `denyCallback` function:![How to do it…](img/image00518.jpeg)
  id: totrans-261
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后尝试运行 `http://yii-book.app/index.php?r=test/user`。你将被重定向到 `http://yii-book.app/index.php?r=test/index`，并在
    `denyCallback` 函数中显示一个错误信息：![如何操作…](img/image00518.jpeg)
- en: How it works…
  id: totrans-262
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: We set a flash message with `Yii::$app->session->('success', 'Everything went
    fine!')`. Internally, it saves a message into a session state, so at the lowest
    level, our message is being kept in `$_SESSION` until `Yii::$app->session->getFlash('success')`
    is called and the `$_SESSION` key is deleted.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用 `Yii::$app->session->('success', 'Everything went fine!')` 设置闪存消息。内部，它将消息保存到会话状态中，因此在最底层，我们的消息被保存在
    `$_SESSION` 中，直到调用 `Yii::$app->session->getFlash('success')` 并删除 `$_SESSION` 键。
- en: The flash message will be automatically deleted after it is accessed in a request.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 闪存消息在请求访问后将被自动删除。
- en: There's more…
  id: totrans-265
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容…
- en: The getAllFlashes() method
  id: totrans-266
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`getAllFlashes()` 方法'
- en: 'Sometimes you need to handle all flashes. You can do it in a simple manner,
    as follows:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 有时你需要处理所有闪存。你可以简单地这样做，如下所示：
- en: '[PRE44]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: The removeAllFlashes() method
  id: totrans-269
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`removeAllFlashes()` 方法'
- en: 'When you need to flush all your flashes, use the following:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 当你需要清除所有闪存时，使用以下方法：
- en: '[PRE45]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: The removeFlash() method
  id: totrans-272
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '`removeFlash()` 方法'
- en: 'When you need to remove the `flash` method with a specified key, use the following:'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 当你需要使用指定键移除 `flash` 方法时，使用以下方法：
- en: '[PRE46]'
  id: totrans-274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: In this example, we added a very useful callback function, which sets up an
    error message and does a redirect to the `test/ind` `ex` page.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们添加了一个非常有用的回调函数，它设置了一个错误消息并将重定向到 `test/ind` `ex` 页面。
- en: See also
  id: totrans-276
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 相关内容
- en: 'For further information, refer to:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 更多信息，请参考：
- en: '[http://www.yiiframework.com/doc-2.0/yii-web-session.html](http://www.yiiframework.com/doc-2.0/yii-web-session.html)'
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[http://www.yiiframework.com/doc-2.0/yii-bootstrap-alert.html](http://www.yiiframework.com/doc-2.0/yii-bootstrap-alert.html)'
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using the controller context in a view
  id: totrans-280
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Yii views are pretty powerful and have many features. One of them is that you
    can use the controller context in a view. So, let's try it.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  id: totrans-282
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Create a new application using the Composer package manager, as described in
    the official guide at [http://www.yiiframework.com/doc-2.0/guide-start-installation.html](http://www.yiiframework.com/doc-2.0/guide-start-installation.html).
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  id: totrans-284
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Create a `controllers/ViewController.php` as follows:'
  id: totrans-285
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE47]'
  id: totrans-286
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Now, we will create a `views/view.php` showing what we can do:'
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE48]'
  id: totrans-288
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: In order to test it, you can follow `/index.php?r=view/index&name=Alex`:![How
    to do it…](img/image00520.jpeg)
  id: totrans-289
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works…
  id: totrans-290
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We are using `$this` in a view to refer to a currently running controller. When
    doing this, we can call a controller method and access its properties. The most
    useful property is `pageTitle`, which refers to the current page title. There
    are many built-in methods that are extremely useful in views such as `renderPartials`
    and widget.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
- en: There's more…
  id: totrans-292
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The [http://www.yiiframework.com/doc-2.0/guide-structure-views.html#accessing-data-in-views](http://www.yiiframework.com/doc-2.0/guide-structure-views.html#accessing-data-in-views)
    URL contains the API documentation for `CController`, where you can get a good
    list of methods you can use in your view.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
- en: Reusing views with partials
  id: totrans-294
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Yii supports partials, so if you have a block without much logic that you want
    to reuse or want to implement e-mail templates, partials are the right way to
    go about this.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
- en: Imagine that we have two Twitter accounts, one for our blog and another for
    company activity, and our goal is to output Twitter timelines on specified pages.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  id: totrans-297
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Create a new application using the Composer package manager, as described in
    the official guide at [http://www.yiiframework.com/doc-2.0/guide-start-installation.html](http://www.yiiframework.com/doc-2.0/guide-start-installation.html).
  id: totrans-298
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create Twitter widgets at [https://twitter.com/settings/widgets/](https://twitter.com/settings/widgets/)
    for `php_net` and `yiiframework` users, and find a `data-widget-id` value for
    each widget created.
  id: totrans-299
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How to do it…
  id: totrans-300
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Create a controller, `@app/controllers/BlogController.php`, as follows:'
  id: totrans-301
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE49]'
  id: totrans-302
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Create a view file named `@app/views/common/twitter.php` and paste an embed
    code from Twitter. You will get something like the following:'
  id: totrans-303
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE50]'
  id: totrans-304
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Create a view `@app/views/blog/index.php` file as follows:'
  id: totrans-305
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE51]'
  id: totrans-306
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Replace the `@app/views/site/about.php` file''s content with the following:'
  id: totrans-307
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE52]'
  id: totrans-308
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE52]'
- en: Try to run `index.php?r=blog/index`:![How to do it…](img/image00523.jpeg)
  id: totrans-309
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Try to run `index.php?r=site/about`:![How to do it…](img/image00525.jpeg)
  id: totrans-310
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works…
  id: totrans-311
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In the current example, two views render `@app/views/common/twitter.php` with
    additional parameters for forming Twitter widgets inside themselves. Note that
    views can be rendered in controllers, widgets, or any other place, by calling
    the view rendering methods. For example, `\yii\base\Controller::render` does the
    same template processing as `\yii\base\View::render`, except the former does not
    use layout.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
- en: In each view file, we can access two instances of the View class using $this,
    so any view file can be rendered in an other view by calling the `render` method.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
- en: There's more…
  id: totrans-314
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For further information, refer to [http://www.yiiframework.com/doc-2.0/guidestructure-views.html#rendering-views](http://www.yiiframework.com/doc-2.0/guidestructure-views.html#rendering-views).
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
- en: Using blocks
  id: totrans-316
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: One of the Yii features you can use in your views is blocks. The basic idea
    is that you can record some output and then reuse it later in a view. A good example
    would be to define additional content regions for your layout and filling them
    elsewhere.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
- en: In the previous version, Yii 1.1, blocks were called clips.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  id: totrans-319
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Create a new application using the Composer package manager, as described in
    the official guide at [http://www.yiiframework.com/doc-2.0/guide-start-installation.html](http://www.yiiframework.com/doc-2.0/guide-start-installation.html).
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  id: totrans-321
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For our example, we need to define two regions in our layout—`beforeContent`
    and `footer`.
  id: totrans-322
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Open `@app/views/layouts/main.php` and insert the following code line just
    before the content output:'
  id: totrans-323
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE53]'
  id: totrans-324
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'Then, replace the footer code with the following code:'
  id: totrans-325
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE54]'
  id: totrans-326
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'That is it! Then, add a new action to `controllers/SiteController.php`, named
    `blocks`:'
  id: totrans-327
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE55]'
  id: totrans-328
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'Now, create a view file, `views/site/blocks.php`, with the following content:'
  id: totrans-329
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE56]'
  id: totrans-330
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE56]'
- en: Now, when you open your `/index.php?r=site/blocks` page, you should get your
    IP just before the page content and a built-with note in the footer:![How to do
    it…](img/image00527.jpeg)
  id: totrans-331
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works…
  id: totrans-332
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We mark regions with the code that just checks for the existence of a specific
    block, and if the block exists, the code outputs it. Then, we record content for
    blocks we defined using the special controller methods named `beginBlock` and
    `endBlock`.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
- en: From controller, you can easily access our block's variables via `$this->view->blocks['blockID']`.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
- en: There's more…
  id: totrans-335
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The *Using the controller context in a view* recipe
  id: totrans-336
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[http://www.yiiframework.com/doc-2.0/guide-structure-views.html#using-blocks](http://www.yiiframework.com/doc-2.0/guide-structure-views.html#using-blocks)'
  id: totrans-337
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using decorators
  id: totrans-338
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In Yii, we can enclose content into a decorator. The common usage of decorators
    is layout. When you are rendering a view using the render method of your controller,
    Yii automatically decorates it with the main layout. Let's create a simple decorator
    that will properly format quotes.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  id: totrans-340
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Create a new application using the Composer package manager, as described in
    the official guide at [http://www.yiiframework.com/doc-2.0/guide-start-installation.html](http://www.yiiframework.com/doc-2.0/guide-start-installation.html).
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  id: totrans-342
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'First, we will create a decorator file, `@app/views/decorators/quote.php`:'
  id: totrans-343
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE57]'
  id: totrans-344
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'Now, replace the content of `@app/views/site/index.php` with the following
    code:'
  id: totrans-345
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE58]'
  id: totrans-346
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE58]'
- en: Now, your **Home** page should look like the following:![How to do it…](img/image00528.jpeg)
  id: totrans-347
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works…
  id: totrans-348
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Decorators are pretty simple. Everything between `ContentDecorator::begin()`
    and `ContentDecorator::end()` is rendered into a `$content` variable and passed
    into a decorator template. Then, the decorator template is rendered and inserted
    in the place where `ContentDecorator::end()` was called.
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
- en: We can pass additional variables into the decorator template using a second
    parameter of `ContentDecorator::begin()`, such as the one we did for the author.
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
- en: Note that we have used `@app/views/decorators/quot` `e.php` as the view path.
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
- en: See also
  id: totrans-352
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The [http://www.yiiframework.com/doc-2.0/yii-widgets-contentdecorator.html](http://www.yiiframework.com/doc-2.0/yii-widgets-contentdecorator.html)
    URL provides more details about decorators:'
  id: totrans-353
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Using the controller context in a view* recipe
  id: totrans-354
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Defining multiple layouts
  id: totrans-355
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Most applications use a single layout for all their views. However, there are
    situations when multiple layouts are needed. For example, an application can use
    different layouts on different pages: two additional columns for blogs, one additional
    column for articles, and no additional columns for portfolios.'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  id: totrans-357
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Create a new application using the Composer package manager, as described in
    the official guide at [http://www.yiiframework.com/doc-2.0/guide-startinstallation.html](http://www.yiiframework.com/doc-2.0/guide-startinstallation.html).
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  id: totrans-359
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Create two layouts in views/layouts: `blog` and `articles`. Blog will contain
    the following code:'
  id: totrans-360
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE59]'
  id: totrans-361
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'Articles will contain the following code:'
  id: totrans-362
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE60]'
  id: totrans-363
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'Create a view file, `views/site/content.php`, as follows:'
  id: totrans-364
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE61]'
  id: totrans-365
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'Create three controllers named `BlogController`, `ArticleController`, and `PortfolioController`,
    with index actions in all three. The content of the `controllers/BlogController.php`
    file is as follows:'
  id: totrans-366
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE62]'
  id: totrans-367
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'The content of the `controllers/ArticleController.php` file is as follows:'
  id: totrans-368
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE63]'
  id: totrans-369
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'The content of the `controllers/PortfolioController.php` file is as follows:'
  id: totrans-370
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE64]'
  id: totrans-371
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE64]'
- en: Now try running `http://yii-book.app/?r=blog/index`:![How to do it…](img/image00529.jpeg)
  id: totrans-372
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Then try running `http://yii-book.app/?r=article/index`:![How to do it…](img/image00531.jpeg)
  id: totrans-373
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Finally, try running `http://yii-book.app/?r=portfolio/index`:![How to do it…](img/image00535.jpeg)
  id: totrans-374
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works…
  id: totrans-375
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We defined two additional layouts for the blog and articles. As we don't want
    to copy and paste common parts from the main layout, we apply additional layout
    decorators using `$this->beginContent and $this->endContent.`
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
- en: So, we use a view rendered inside the articles layout as the main layout's `$content`.
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
- en: See also
  id: totrans-378
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The [http://www.yiiframework.com/doc-2.0/guide-structure-views.html#nested-layouts](http://www.yiiframework.com/doc-2.0/guide-structure-views.html#nested-layouts)
    URL provides more details about layouts.
  id: totrans-379
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Using the controller context in a view* recipe
  id: totrans-380
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *Using decorators* recipe
  id: totrans-381
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pagination and sorting data
  id: totrans-382
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the latest Yii releases, the focus was moved from using Active Record directly,
    to grids, lists, and data providers. Still, sometimes it is better to use Active
    Record directly. Let's see how to list paginated AR records with the ability to
    sort them. In this section, we would like to create a list of films and sort them
    by some attributes from a database. In our example, we will sort our films by
    film title and rental rate attributes.
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  id: totrans-384
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Create a new application using the Composer package manager, as described in
    the official guide at [http://www.yiiframework.com/doc-2.0/guide-start-installation.html](http://www.yiiframework.com/doc-2.0/guide-start-installation.html).
  id: totrans-385
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Download the Sakila database from [http://dev.mysql.com/doc/index-other.html](http://dev.mysql.com/doc/index-other.html).
  id: totrans-386
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Execute the downloaded SQLs; first schema, then data.
  id: totrans-387
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Configure the DB connection in `config/main.php` to use the Sakila database.
  id: totrans-388
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Use Gii to create the `Film` model.
  id: totrans-389
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How to do it…
  id: totrans-390
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'First, you need to create `@app/controllers/FilmController.php`:'
  id: totrans-391
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE65]'
  id: totrans-392
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'Now, let''s implement `@app/views/film/index.php`, as follows:'
  id: totrans-393
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE66]'
  id: totrans-394
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE66]'
- en: Try to load `http://yii-book.app/index.php?r=film/index`. You should get a working
    pagination and links that allow sorting of list by the film's title or by rental
    rate:![How to do it…](img/image00371.jpeg)
  id: totrans-395
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  id: totrans-396
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: First, we got the total models count and initialized the new pagination component
    instance with it by passing the `totalCount` variable to our `Pagination` instance.
    Then, we used the `$pages->pageSize` field to set up the page size for our pagination.
    After that, we created a sorter instance for the model, specifying model attributes
    we wanted to sort by and applying order conditions to the query by calling `orderBy`
    and passing `$sort->orders` as a parameter. Then, we called `all()` to get records
    from the DB.
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
- en: At this point, we have the models list, pages, and data used for the link pager,
    and the sorter that we use to generate sorting links.
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
- en: In a view, we use the data we have gathered. First, we generate links with the
    `Sort::link` method. Then, we list the models. Finally, using the *LinkPager*
    widgets, we render the pagination control.
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
- en: See also
  id: totrans-400
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Visit the following links to get more information about pagination and sorting:'
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
- en: '[http://www.yiiframework.com/doc-2.0/yii-data-pagination.html](http://www.yiiframework.com/doc-2.0/yii-data-pagination.html)'
  id: totrans-402
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[http://www.yiiframework.com/doc-2.0/yii-data-sort.html](http://www.yiiframework.com/doc-2.0/yii-data-sort.html)'
  id: totrans-403
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[http://www.yiiframework.com/doc-2.0/guide-output-pagination.html](http://www.yiiframework.com/doc-2.0/guide-output-pagination.html)'
  id: totrans-404
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.yiiframework.com/doc-2.0/guide-output-pagination.html](http://www.yiiframework.com/doc-2.0/guide-output-pagination.html)'
- en: '[http://www.yiiframework.com/doc-2.0/guide-output-sorting.html](http://www.yiiframework.com/doc-2.0/guide-output-sorting.html)'
  id: totrans-405
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.yiiframework.com/doc-2.0/guide-output-sorting.html](http://www.yiiframework.com/doc-2.0/guide-output-sorting.html)'
