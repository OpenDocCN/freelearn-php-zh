["```php\nif (true) {\n    echo \"I love programming.\";\n} else {\n    echo \"I hate programming.\";\n}\n```", "```php\nif (false) {\n    echo \"I hate programming.\";\n} else {\n    echo \"I love programming.\";\n}\n```", "```php\n!$a\n```", "```php\n$a and $b\n$a && $b\n```", "```php\n$a or $b\n$a || $b\n```", "```php\n$a xor $b\n```", "```php\nfunction foo() {\n    return true; \n}\n$a = (false && foo());\n$b = (false and foo());\n```", "```php\nfunction foo() {\n    return false;\n}\n$a = (true  || foo());\n$b = (true  or  foo());\n```", "```php\nif ($todayIsSunday && $isNotRaining) {\n    echo \"Let's play UNO at my place.\";\n}\n```", "```php\n$a = false || true; //outputs true\n```", "```php\n$a = false or true; //outputs false!\n```", "```php\n$a = true && false; //outputs false\n```", "```php\n$a = true and false; //outputs true!\n```", "```php\n$hasUsername = true;\n$hasPassword = false;\n$access = $hasUsername and $hasPassword; //true\n```", "```php\nif (expression)\n    statement;\n```", "```php\nif (expression) {\n    statement1;\n        .\n        .\n     statementN;\n}\n```", "```php\n$number1 = 5;\n$number2 = 3;\nif ($number1 > $number2) {\n    print(\"$number1 is greater than $number2\"); //prints 5 is greater than 3\n}\n```", "```php\nif (expression)\n    statement;\nelse\n    statement;\n```", "```php\n$number1 = 3;\n$number2 = 5;\nif ($number1 > $number2) {\n    print(\"$number1 is greater than $ number2\");\n} else {\n    print(\"$number1 is less than $number2\"); //prints 3 is less than 5\n}\n```", "```php\n    <?php\n    if (\"Sunday\" === date(\"l\")) {\n            echo \"Get rest\";\n    } else {\n            echo \"Get ready and go to the office\";\n    }\n    ```", "```php\n    php test-sunday.php\n    ```", "```php\n    <?php\n    $a = 5;\n    $b = 3;\n    ```", "```php\n    <?php\n    $a = 5;\n    $b = 3;\n    if($a - $b) {\n        //placeholder for inner if...else\n    } else {\n        print(\"The numbers are equal\");\n    }\n    ```", "```php\n    <?php\n    $a = 5;\n    $b = 3;\n    if($a - $b) {\n        if ($a > $b) {\n            $difference = $a - $b;\n    } else {\n            $difference = $b - $a;\n    }\n    print(\"The difference is $difference\");\n    } else {\n        print(\"The numbers are equal\");\n    }\n    ```", "```php\n    php test-difference.php\n    ```", "```php\n(expression1)? (expression2): (expression3)\n```", "```php\n$msg = (\"Sunday\" === date(\"l\"))? \"Get rest\" : \"Get ready and go to the office\";\necho $msg;\n```", "```php\necho ($msg) ? :\"Get ready and go to the office\";\n//equivalent to\necho ($msg) ? $msg : \"Get ready and go to the office\";\n```", "```php\nif (expression1)\n    statement;\nelseif (expression2)\n    statement;\nelse\n    statement;\n```", "```php\nif (expression1)\n    statement;\nelse\n    if (expression2)\n        statement;\n    else\n        statement;\n```", "```php\nif ($n > 0) {\n    print(\"$n is a positive number.\");\n} elseif ($n) {\n    print(\"$n is a negative number.\");\n} else {\n    print(\"$n is zero.\");\n}\n```", "```php\n    <?php\n    $age = 12;\n    ```", "```php\n    <?php\n    $age = 12;\n    if ($age >= 18) {\n            print(\"Young\");\n    } elseif ($age > 10) {\n            print(\"Teenager\");\n    } else {\n            print(\"Child\");\n    }\n    ```", "```php\n    php test-age.php\n    ```", "```php\n    <?php\n    $age = 12;\n    if ($age > 25) {\n            print(\"Adult\");\n    } elseif ($age >= 18) {\n            print(\"Young\");\n    } elseif ($age > 10) {\n            print(\"Teenager\");\n    } else {\n            print(\"Child\");\n    }\n    ```", "```php\nswitch(expression) { \n    case value-1: \n        statement-1 \n        statement-2 \n        ... \n        break; \n    case value-2: \n        statement-3 \n        statement-4 \n        ... \n        break;     \n        ...   \n    default:\n        default-statement \n} \n```", "```php\n<?php\nswitch ($fruit) {\n    case \"cherry\":\n        echo \"The fruit is cherry.\";\n        break;\n    case \"banana\":\n        echo \"The fruit is banana.\";\n        break;\n    case \"avocado\":\n        echo \"The fruit is avocado.\";\n        break;\n    default:\n        echo \"The fruit cannot be identified.\";\n        break;\n}\n```", "```php\n<?php\nswitch ($n) {\n    case 0:\n        echo \"the number is 0 \";\n    case 1:\n        echo \"the number is 1 \";\n    case 2:\n        echo \"the number is 2 \";\n}\n?>\n```", "```php\n<?php\nswitch ($n) {\n    case 0: \n    case 1: \n    case 2:\n        echo \"the number is less than 3.\";\n        break;\n    case 3: \n        echo \"the number is 3.\";\n        break;\n}\n?>\n```", "```php\n<?php\nswitch ($n) {\n    case 0: \n    case 1: \n    case 2:\n        echo \"the number is less then 3.\";\n        break;\n     case 3: \n        echo \"the number equals to 3.\";\n        break;\n     default:\n        echo \"the number is not within 0 to 3.\";\n}\n?>\n```", "```php\n    <?php\n    $data = 2.50;\n    ```", "```php\n    <?php\n    $data = 2.50;\n    switch (gettype($data)) {\n            case 'integer':\n            case 'double':\n                    echo \"The data type is Number.\";\n                    break;\n            case 'boolean':\n                    echo \"The data type is Boolean.\";\n                    break;\n            case 'string':\n                    echo \"The data type is String.\";\n                    break;\n            case 'array':\n                    echo \"The data type is Array.\";\n                    break;\n            default:\n                    echo \"The data type unknown.\";\n                    break;\n    }\n    ```", "```php\n    php test-datatype.php\n    ```", "```php\nwhile (expression)\n    statement\n// to accommodate multiple statements, \n// enclose them by the curly braces\nwhile (expression) {\n    statement 1\n    statement 2\n    …    \n}\n```", "```php\nwhile (false)\n    echo \"This will never be printed.\";\n```", "```php\nwhile (true)\n    echo \"This will be printed. \" . PHP_EOL;\n```", "```php\n$count = 1;\nwhile ($count <= 7) {\n    echo \"This will be printed. \" . PHP_EOL;\n    $count++;\n}\n```", "```php\n    <?php\n    $number = 1;\n    while ($number <= 10) {\n            echo $number . \" \";\n            $number++;\n    }\n    ```", "```php\n    php print-numbers-while.php\n    ```", "```php\ndo statement\n    while (expression);\n// to accommodate multiple statements, \n// enclose them by the curly braces\ndo {\n    statement 1\n    statement 2\n    …     \n} while (expression);\n```", "```php\ndo \n    echo \"This will be printed once. \" . PHP_EOL;\nwhile (false);\n```", "```php\n$count = 1;\ndo {\n    echo \"This will be printed. \" . PHP_EOL;\n    $count++;\n} while ($count <= 7);\n```", "```php\n    <?php\n    $number = 1;\n    do {\n        echo $number . \" \";\n        $number++;\n    } while ($number <= 10);\n    ```", "```php\n    php print-numbers-do-while.php\n    ```", "```php\nfor (expression1; expression2; expression3)\n    statement\n// to accommodate multiple statements, \n// enclose them by the curly braces\nfor (expression1; expression2; expression3) {\n    statement1;\n    statement2;\n    …\n}\n```", "```php\nfor ($index = 1; $index <= 10; $index++) {\n    echo \"$index \\n\";\n}\n```", "```php\n$index = 1;\nfor (;;) {\n    if($index > 10) {\n        break;\n    }\n    echo \"$index \\n\";\n    $index++;\n}\n```", "```php\nfor (;;) \n    statement\n```", "```php\nwhile (true)\n    statement\n```", "```php\n    <?php\n    $days = [\"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\",   \"Thursday\", \"Friday\"];\n    ```", "```php\n    <?php\n    $days = [\"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\",   \"Thursday\", \"Friday\"];\n    $totalDays = count($days);\n    for ($i = 0; $i < $totalDays; $i++) {\n        echo $days[$i] . \" \";\n    }\n    //outputs\n    //Saturday Sunday Monday Tuesday Wednesday Thursday Friday\n    ```", "```php\n    php print-days-for.php\n    ```", "```php\nforeach (array_expression as $value)\n    statement \n```", "```php\nforeach (array_expression as $key => $value)\n    statement\n```", "```php\n    <?php\n    $days = [\"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\",   \"Thursday\", \"Friday\"];\n    foreach ($days as $day) {\n        echo $day . \" \";\n    }\n    //outputs\n    //Saturday Sunday Monday Tuesday Wednesday Thursday Friday\n    ```", "```php\n    php print-days-foreach.php\n    ```", "```php\n$basket = [\n                [\"Mango\", \"Apple\", \"Banana\", \"Orange\"],\n                [\"Burger\", \"Fries\", \"Sandwich\", \"Brownie\", \"Soda\"]\n        ];\nfor ($i = 0; $i < count($basket); $i++) {\n        for ($j = 0; $j < count($basket [$i]); $j++) {\n                echo $basket[$i][$j]  . PHP_EOL;\n        }\n}\n```", "```php\nMango\nApple\nBanana\nOrange\nBurger\nFries\nSandwich\nBrownie\nSoda\n```", "```php\n$basketItems = [\n               [\"Mango\", \"Apple\", \"Banana\", \"Orange\"],\n               [\"Burger\", \"Fries\", \"Sandwich\", \"Brownie\", \"Soda\"]\n               ];\nforeach ($basketItems as $foodItems) {\n        foreach ($foodItems as $food) {\n                echo $food . PHP_EOL;\n        }\n}\n```", "```php\nMango\nApple\nBanana\nOrange\nBurger\nFries\nSandwich\nBrownie\nSoda\n```", "```php\n    <?php\n    $professions = [\"Doctor\", \"Teacher\", \"Programmer\", \"Lawyer\", \"Athlete\"];\n    ```", "```php\n    <?php\n    $professions = [\"Doctor\", \"Teacher\", \"Programmer\", \"Lawyer\", \"Athlete\"];\n    $subjects =  [\"Mathematics\", \"Computer Programming\", \"Business English\",   \"Graph Theory\"];\n    ```", "```php\n    <?php\n    $professions = [\"Doctor\", \"Teacher\", \"Programmer\", \"Lawyer\", \"Athlete\"];\n    $subjects =  [\"Mathematics\", \"Computer Programming\", \"Business English\",   \"Graph Theory\"];\n    foreach ($professions as $profession) {\n            echo \"The Profession is $profession. \" . PHP_EOL;\n    }\n    ```", "```php\n    The Profession is Doctor.\n    The Profession is Teacher.\n    The Profession is Programmer.\n    The Profession is Lawyer.\n    The Profession is Athlete.\n    ```", "```php\n    <?php\n    $professions = [\"Doctor\", \"Teacher\", \"Programmer\", \"Lawyer\", \"Athlete\"];\n    $subjects =  [\"Mathematics\", \"Computer Programming\", \"Business English\",   \"Graph Theory\"];\n    foreach ($professions as $profession) {\n            echo \"The Profession is $profession. \" . PHP_EOL;\n            if ($profession === 'Teacher') {\n                    foreach ($subjects as $name) {\n                            echo \" $name \" . PHP_EOL;\n                    }\n            }\n    }\n    ```", "```php\n    The Profession is Doctor.\n    The Profession is Teacher.\n     Mathematics\n     Computer Programming\n     Business English\n     Graph Theory\n    The Profession is Programmer.\n    The Profession is Lawyer.\n    The Profession is Athlete.\n    ```", "```php\n    php print-professions-subjects.php\n    ```", "```php\n    <?php\n    $professions = [\"Doctor\", \"Teacher\", \"Programmer\", \"Lawyer\", \"Athlete\"];\n    $subjects =  [\"Mathematics\", \"Computer Programming\", \"Business English\",   \"Graph Theory\"];\n    $totalSubjects = sizeof($subjects);\n    foreach ($professions as $profession) {\n            echo \"The Profession is $profession. \" . PHP_EOL;\n            for ($i = 0; $profession === 'Teacher' && $i < $totalSubjects;   $i++) {\n                    echo \" \". $subjects[$i] . PHP_EOL;\n            }\n    }\n    ```", "```php\n    The Profession is Doctor.\n    The Profession is Teacher.\n     Mathematics\n     Computer Programming\n     Business English\n     Graph Theory\n    The Profession is Programmer.\n    The Profession is Lawyer.\n    The Profession is Athlete.\n    ```", "```php\n    php print-professions-subjects.php\n    ```", "```php\nbreak;\n//or\nbreak n;\n```", "```php\nfor(;;){\n     for(;;){\n           break 2;\n     }\n}\n```", "```php\n    <?php\n    $number = 1;\n    while ($number <= 10) {\n            echo $number . \" \";\n            if ($number === 8) {\n                    echo \"ends the execution of loop.\";\n                    break;\n            }\n            $number++;\n    }\n    //outputs\n    // 1 2 3 4 5 6 7 8 ends the execution of loop.\n    ```", "```php\n    php print-numbers-break.php\n    ```", "```php\n    <?php\n    for ($i = 1; $i <= 10; ++$i) {\n        print \"$i \";\n    }\n    //outputs\n    //1 2 3 4 5 6 7 8 9 10\n    ```", "```php\n    <?php\n    for ($i = 1; $i <= 10; ++$i) {\n        if ($i == 8) {\n            continue;\n        }\n        print \"$i \";\n    }\n    //outputs\n    //1 2 3 4 5 6 7 9 10\n    ```", "```php\n    php print-numbers-continue.php\n    ```", "```php\nif (expression):\n     statement1\n     statement2\n     …\nendif;\n```", "```php\nif (expression1):\n     statement1\n     statement2\n     …\nelseif (expression2):\n     statement3\n     …\nelse:\n     statement4\n     …\nendif;\n```", "```php\nwhile (expression): \n     statement \nendwhile; \n```", "```php\nfor (expr1; expr2; expr3):\n     statement1\n     statement2\n     …\nendfor;\n```", "```php\n<?php\n$varA = $argv[1] ?? 5;\n$varB = $argv[2] ?? 5;\n```", "```php\n    Steven Spielberg's movies:\n      > The Post\n      > Bridge of Spies\n    Christopher Nolan's movies:\n      > Dunkirk\n      > Quay\n    Martin Scorsese's movies:\n      > The Wolf of Wall Street\n      > Hugo\n    ```"]