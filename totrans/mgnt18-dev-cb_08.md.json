["```php\n    public function dispatchEvent($eventName, $args)\n    {\n     Mage::log($eventName);\n      foreach ($this->_events as $area=>$events) {\n        if (!isset($events[$eventName])) {\n          $eventConfig = $this->getConfig()-\n          >getEventConfig($area, $eventName);\n          if (!$eventConfig) {\n            $this->_events[$area][$eventName] = false;\n            continue;\n          }\n          $observers = array();\n          foreach ($eventConfig->observers->children() as \n          $obsName=>$obsConfig) {\n                ...\n    ```", "```php\n    tail -f var/log/system.log\n\n    ```", "```php\n    public function helloAction()\n    {\n      $this->loadLayout();\n      Mage::dispatchEvent('helloworld_register_visit');\n\n      $this->renderLayout();\n    }\n    ```", "```php\n    public function helloAction()\n    {\n      $this->loadLayout();\n\n      $parameters = array(\n        'product' => Mage::getModel('catalog/product')-\n        >load(166),\n        'category' => Mage::getModel('catalog/category')-\n        >load(10),\n      );\n\n      Mage::dispatchEvent('helloworld_register_visit', \n      $parameters);\n\n      $this->renderLayout();\n    }\n    ```", "```php\n    <events>\n      <helloworld_register_visit>\n        <observers>\n          <register_visit>\n            <type>singleton</type>\n            <class>helloworld/observer</class>\n            <method>registerVisit</method>\n          </register_visit>\n        </observers>\n      </helloworld_register_visit>\n    </events>\n    ```", "```php\n    <?php\n    class Packt_Helloworld_Model_Observer\n    {\n      public function registerVisit (Varien_Event_Observer\n      $observer)\n      {\n        Mage::log('Registered');\n      }\n    }\n    ```", "```php\n    public function registerVisit ($observer)\n    {\n      $product = $observer->getProduct();\n      $category = $observer->getCategory();\n\n      Mage::log($product->debug());\n      Mage::log($category->debug());\n    }\n    ```", "```php\n    <checkout_cart_product_add_after>\n      <observers>\n        <check_cart_qty>\n          <type>singleton</type>\n          <class>helloworld/observer</class>\n          <method>checkCartQty</method>\n        </check_cart_qty>\n      </observers>\n    </checkout_cart_product_add_after>\n    ```", "```php\n    public function checkCartQty ($observer)\n    {\n      Mage::getSingleton('checkout/session')-\n      >addNotice('Product add event fired');\n    }\n    ```", "```php\n    public function checkCartQty ($observer)\n    {\n      if ($observer->getProduct()->getQty() % 2 == 0) {\n        //Even\n      } else {\n        //Odd\n      }\n    }\n    ```", "```php\n    public function checkCartQty (Varien_Event_Object $observer)\n    {\n      if ($observer->getProduct()->getQty() % 2 == 0) {\n        //Even\n        Mage::getSingleton('checkout/session')->addNotice('Even\n        quantity added');\n      } else {\n        //Odd\n        Mage::throwException('Quantity is odd. It needs to be\n        even');\n      }\n    }\n    ```", "```php\n<events>\n  <helloworld_register_visit>\n    <observers>\n      <register_visit>\n        <type>singleton</type>\n        <class>helloworld/observer</class>\n        <method>registerVisit</method>\n      </register_visit>\n    </observers>\n  </helloworld_register_visit>\n</events>\n```", "```php\n    /bin/sh /var/www/packt/magento-dev/cron.sh\n\n    ```", "```php\n    SELECT * from CRON_SCHEDULE;\n\n    ```", "```php\n    sudo su www-data\n\n    ```", "```php\n    <crontab>\n      <jobs>\n        <helloworld_check_subscriptions>\n          <schedule>\n            <cron_expr>* 10 * * *</cron_expr>\n          </schedule>\n          <run>\n            <model>helloworld/observer::checkSubscriptions\n            </model>\n          </run>\n        </helloworld_check_subscriptions>\n      </jobs>\n    </crontab>\n    ```", "```php\n    wiz config-get crontab/jobs\n\n    ```", "```php\n    public function checkSubscriptions()\n    {\n      $subscription = Mage::getModel('helloworld/subscription');\n      $subscription->setFirstname('Cron');\n      $subscription->setLastname('Job');\n      $subscription->setEmail('cron.job@example.com');\n      $subscription->setMessage('Created by cronjob');\n\n      $subscription->save();\n    }\n    ```", "```php\n    php shell/scheduler.php -action runNow -code cronjob_code\n\n    ```", "```php\n    php shell/scheduler.php -action scheduleNow -code cronjob_code\n\n    ```"]