["```php\n\"require\": {\n  \"php\": \">=5.4.0\",\n  \"illuminate/container\": \"5.1.*\",\n  \"illuminate/contracts\": \"5.1.*\",\n  \"illuminate/support\": \"5.1.*\",\n  \"nesbot/carbon\": \"~1.0\"\n},\n```", "```php\n\"require\": {\n\n  \"illuminate/database\": \"5.0.*\",\n\n},\n```", "```php\ncomposer require illuminate/database\n```", "```php\nuse Illuminate\\Database\\Capsule\\Manager as Capsule;\n\n$capsule = new Capsule;\n\n$capsule->addConnection([\n  'driver'    => 'mysql',\n  'host'      => 'localhost',\n  'database'  => 'database',\n  'username'  => 'root',\n  'password'  => 'password',\n  'charset'   => 'utf8',\n  'collation' => 'utf8_unicode_ci',\n  'prefix'    => '',\n]);\n\n// Set the event dispatcher used by Eloquent models... (optional)\nuse Illuminate\\Events\\Dispatcher;\nuse Illuminate\\Container\\Container;\n$capsule->setEventDispatcher(new Dispatcher(new Container));\n```", "```php\n// Make this Capsule instance available globally via static methods... (optional)\n$capsule->setAsGlobal();\n\n// Setup the Eloquent ORM... (optional; unless you've used setEventDispatcher())\n$capsule->bootEloquent();\n```", "```php\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Book extends Model {\n\n  ...\n\n  // some attributes hereâ€¦\n  protected $table = 'my_books_table';\n\n  // some scopes here...\n  public function scopeNewest()\n  {\n    // query here...\n  }\n\n  ...\n\n}\n```", "```php\n$books = Book::newest()->take(5)->get();\n```", "```php\n$books = Capsule::table('books')\n             ->where('title', '=', \"Michael Strogoff\")\n             ->first();\n```", "```php\n$book = Capsule::select('select title, pages_count from books where id = ?', array(12));\n```", "```php\nCapsule::schema()->create('books', function($table)\n{ \n    $table->increments(''id'); \n    $table->string(''title'', 30); \n    $table->integer(''pages_count''); \n    $table->decimal(''price'', 5, 2);.\n    $table->text(''description''); \n    $table->timestamps(); \n});\n```", "```php\nCapsule::schema()->table('books', function($table)\n{\n    $table->string('title', 50)->change();\n    $table->decimal('special_price', 5, 2);\n});\n```"]