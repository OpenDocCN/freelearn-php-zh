["```php\nCREATE TABLE IF NOT EXISTS `articles` ( \n  `article_id` int(11) NOT NULL AUTO_INCREMENT, \n  `article_title` varchar(255) NOT NULL, \n  `article_body` text NOT NULL, \n  `is_main` varchar(3) NOT NULL, \n  PRIMARY KEY (`article_id`) \n\n); \n\nINSERT INTO `articles` (`article_id`, `article_title`, `article_body`, `is_main`) VALUES \n(1, 'Article One', 'Article One Body', 'yes'), \n(2, 'Article Two', 'Article Two Body', 'no'), \n(3, 'Article Three', 'Article Three Body', 'no'), \n(4, 'Article Four', 'Article Four Body', 'no'), \n(5, 'Article Five', 'Article Five Body', 'no'), \n(6, 'Article Six', 'Article Six Body', 'no'); \n```", "```php\n    <?php if (!defined('BASEPATH')) exit('No direct script access allowed'); \n    class Articles extends CI_Controller { \n      function __construct() { \n        parent::__construct(); \n        $this->load->helper('url'); \n      } \n\n      public function index() { \n        // Load content model \n        $this->load->model('content_model'); \n\n        // Fetch stuff from database and store in specific arrays \n        $left_data['main_article'] = $this->content_model->get_main_article();   \n        $right_data['article_list'] = $this->content_model->get_article_list();        \n\n        // Load views and pass data to them \n        $this->load->view('articles/left', $left_data); \n        $this->load->view('articles/right', $right_data); \n      } \n    } \n    ```", "```php\n    class Content_model extends CI_Model { \n      function get_main_article() { \n        $this->db->where('is_main', 'yes'); \n        return $this->db->get('articles'); \n      } \n\n      function get_article_list() { \n        return $this->db->get('articles');        \n      }    \n    } \n    ```", "```php\n    <?php foreach ($main_article->result() as $main_row) : ?> \n        <h2><?php echo $main_row->article_title ; ?></h2> \n        <p><?php echo $main_row->article_body ; ?></p> \n    <?php endforeach ; ?> \n    ```", "```php\n    <?php foreach ($article_list->result() as $list_row) : ?> \n        <?php echo anchor('#', $list_row->article_title) ; ?><br /> \n    <?php endforeach ; ?> \n    ```", "```php\n// Fetch stuff from database and store in $data \n$left_data['main_article'] = $this->content_model->get_main_article();   \n$right_data['article_list'] = $this->content_model->get_article_list();        \n```", "```php\n// Load views and pass $data variable to them \n$this->load->view('articles/left', $left_data); \n$this->load->view('articles/right', $right_data); \n```", "```php\n$this->form_validation->set_rules('item1', 'Item1', ''); \n$this->form_validation->set_rules('item2', 'Item2', 'matches[Item1]'); \n```", "```php\n$this->form_validation->set_rules('item1','Item1', 'matches[users.username]'); \n```", "```php\n$this->form_validation->set_rules('item1', 'Item1', 'min_length[12]'); \n```", "```php\n$this->form_validation->set_rules('item1', 'Item1', 'max_length[12]'); \n```", "```php\n$this->form_validation->set_rules('item1', 'Item1', 'exact_length [12]'); \n```", "```php\n$this->form_validation->set_rules('item1', 'Item1', 'greater_than[12]'); \n```", "```php\n$this->form_validation->set_rules('item1', 'Item1', 'less_than[12]');\n```", "```php\n    <?php if (!defined('BASEPATH')) exit('No direct script access allowed'); \n\n    class Form extends CI_Controller { \n      function __construct() { \n        parent::__construct(); \n        $this->load->helper('form'); \n        $this->load->helper('url'); \n        $this->load->helper('security'); \n        $this->load->library('form_validation'); \n      } \n\n      public function index() { \n        redirect('form/submit_form'); \n      } \n\n      public function submit_form() { \n        $this->form_validation->set_error_delimiters('', '<br />'); \n\n        $this->form_validation->set_rules('first_name', 'First Name', 'required|min_length[1]|max_length[125]'); \n        $this->form_validation->set_rules('last_name', 'Last Name', 'required|min_length[1]|max_length[125]'); \n        $this->form_validation->set_rules('email', 'Email', 'required|min_length[1]|max_length[255]|valid_email'); \n        $this->form_validation->set_rules('contact', 'Contact','required|min_length[1]|max_length[1]|integer|is_natural'); \n        $this->form_validation->set_rules('answer', 'Question','required|min_length[1]|max_length[2]|integer|is_natural'); \n\n        // Begin validation \n        if ($this->form_validation->run() == FALSE) { // First load, or problem with form \n          $this->load->view('new_record'); \n        } \n        else { \n          // Validation passed, now escape the data \n          $data = array( \n            'first_name'    => $this->input->post('first_name'), \n            'last_name'     => $this->input->post('last_name'), \n            'email'         => $this->input->post('email'), \n            'contact'       => $this->input->post('contact'), \n            'answer'        => $this->input->post('answer') \n          ); \n\n          echo '<pre>'; \n          var_dump($data); \n          echo '</pre>'; \n        }        \n      } \n    } \n    ```", "```php\n    <?php echo form_open('form/submit_form') ; ?> \n        <?php if (validation_errors()) : ?> \n            <h3>Whoops! There was an error:</h3> \n            <p><?php echo validation_errors(); ?></p> \n        <?php endif; ?> \n        <table border=\"0\" > \n            <tr> \n                <td>First Name</td> \n                <td><?php echo form_input(array('name' => 'first_name', 'id' => 'first_name', 'value' => '', 'maxlength' => '100', 'size' => '50', 'style' => 'width:100%')); ?></td> \n            </tr>   \n            <tr> \n                <td>Last Name</td> \n                <td><?php echo form_input(array('name' => 'last_name', 'id' => 'last_name', 'value' => '', 'maxlength' => '100', 'size' => '50', 'style' => 'width:100%')); ?></td> \n            </tr> \n            <tr> \n                <td>User Email</td> \n                <td><?php echo form_input(array('name' => 'email', 'id' => 'email', 'value' => '', 'maxlength' => '100', 'size' => '50', 'style' => 'width:100%')); ?></td> \n            </tr> \n            <tr> \n                <td>Do you want to be contacted in the future?</td> \n                <td><?php echo 'Yes'.form_checkbox('contact', '1', TRUE).'No'.form_checkbox('contact', '0', FALSE); ?></td> \n            </tr> \n            <tr> \n                <td>What is 10 + 5?</td> \n                <td><?php echo form_input(array('name' => 'answer', \n    'id' => 'answer', 'value' => '', 'maxlength' => '100', 'size' => '50', 'style' => 'width:100%')); ?></td> \n            </tr> \n        </table> \n        <?php echo form_submit('submit', 'Submit'); ?> \n        or <?php echo anchor('form', 'cancel'); ?> \n    <?php echo form_close(); ?> \n    ```", "```php\n  $this->form_validation->set_rules('first_name', 'First Name', 'required|min_length[1]|max_length[125]'); \n  $this->form_validation->set_rules('last_name', 'Last Name', 'required|min_length[1]|max_length[125]'); \n  $this->form_validation->set_rules('email', 'Email', 'required|min_length[1]|max_length[255]|valid_email'); \n  $this->form_validation->set_rules('contact', 'Contact', 'required|min_length[1]|max_length[1]|integer|is_natural'); \n  $this->form_validation->set_rules('answer', 'Question', 'required|min_length[1]|max_length[2]|integer|is_natural'); \n```", "```php\n    <?php if (validation_errors()) : ?> \n        <h3>Whoops! There was an error:</h3> \n        <p><?php echo validation_errors(); ?></p> \n    <?php endif; ?> \n```", "```php\n$this->form_validation->set_rules('input_name', 'Input Name', 'trim|md5'); \n```", "```php\n    <?php echo form_open('form/submit_form') ; ?> \n        <?php if (validation_errors()) : ?> \n            <h3>Whoops! There was an error:</h3> \n            <p><?php echo validation_errors(); ?></p> \n        <?php endif; ?> \n        <table border=\"0\" > \n            <tr> \n                <td>First Name</td> \n                <td><?php echo form_input(array('name' => 'first_name', 'id' => 'first_name', 'value' => set_value('first_name', ''), 'maxlength' => '100', 'size' => '50', 'style' => 'width:100%')); ?></td> \n            </tr>   \n            <tr> \n                <td>Last Name</td> \n                <td><?php echo form_input(array('name' => 'last_name', 'id' => 'last_name', 'value' => set_value('last_name', ''), 'maxlength' => '100', 'size' => '50', 'style' => 'width:100%')); ?></td> \n            </tr> \n            <tr> \n                <td>User Email</td> \n                <td><?php echo form_input(array('name' => 'email', 'id' => 'email', 'value' => set_value('email', ''), 'maxlength' => '100', 'size' => '50', 'style' => 'width:100%')); ?></td> \n            </tr> \n            <tr> \n                <td>Do you want to be contacted in the future?</td> \n                <td><?php echo 'Yes'.form_checkbox('contact', '1', TRUE).'No'.form_checkbox('contact', '0', FALSE); ?></td> \n            </tr> \n            <tr> \n                <td>What is 10 + 5?</td> \n                <td><?php echo form_input(array('name' => 'answer', 'id' => 'answer', 'value' => set_value('answer', ''), 'maxlength' => '100', 'size' => '50', 'style' => 'width:100%')); ?></td> \n            </tr> \n        </table> \n        <?php echo form_submit('submit', 'Submit'); ?> \n        or <?php echo anchor('form', 'cancel'); ?> \n    <?php echo form_close(); ?> \n    ```", "```php\n    <?php echo form_open('form/submit_form') ; ?> \n        <?php if (validation_errors()) : ?> \n            <h3>Whoops! There was an error:</h3> \n        <?php endif; ?> \n        <table border=\"0\" > \n            <tr> \n                <td>First Name</td> \n          <?php if (form_error('first_name')) : ?> \n            <?php echo form_error('first_name') ; ?> \n          <?php endif ; ?> \n                <td><?php echo form_input(array('name' => 'first_name', 'id' => 'first_name', 'value' => set_value('first_name', ''), 'maxlength' => '100', 'size' => '50', 'style' => 'width:100%')); ?></td> \n            </tr>   \n            <tr> \n                <td>Last Name</td> \n          <?php if (form_error('last_name')) : ?> \n            <?php echo form_error('last_name') ; ?> \n          <?php endif ; ?>       \n                <td><?php echo form_input(array('name' => 'last_name', 'id' => 'last_name', 'value' => set_value('last_name', ''), 'maxlength' => '100', 'size' => '50', 'style' => 'width:100%')); ?></td> \n            </tr> \n            <tr> \n                <td>User Email</td> \n          <?php if (form_error('email')) : ?> \n            <?php echo form_error('email') ; ?> \n          <?php endif ; ?>       \n                <td><?php echo form_input(array('name' => 'email', 'id' => 'email', 'value' => set_value('email', ''), 'maxlength' => '100', 'size' => '50', 'style' => 'width:100%')); ?></td> \n            </tr> \n            <tr> \n          <?php if (form_error('contact')) : ?> \n            <?php echo form_error('contact') ; ?> \n          <?php endif ; ?>     \n                <td>Do you want to be contacted in the future?</td> \n                <td><?php echo 'Yes'.form_checkbox('contact', '1', TRUE).'No'.form_checkbox('contact', '0', FALSE); ?></td> \n            </tr> \n            <tr> \n                <td>What is 10 + 5?</td> \n                <td><?php echo form_input(array('name' => 'answer', 'id' => 'answer', 'value' => set_value('answer', ''), 'maxlength' => '100', 'size' => '50', 'style' => 'width:100%')); ?></td> \n            </tr> \n        </table> \n        <?php echo form_submit('submit', 'Submit'); ?> \n        or <?php echo anchor('form', 'cancel'); ?> \n    <?php echo form_close(); ?>\n    ```", "```php\n    function __construct() { \n        parent::__construct(); \n        $this->load->helper('url'); \n        $this->load->helper('file'); \n    } \n```", "```php\n    <?php if (!defined('BASEPATH')) exit('No direct script access allowed'); \n\n    class File extends CI_Controller { \n        function __construct() { \n            parent::__construct(); \n            $this->load->helper('url'); \n            $this->load->helper('file'); \n        } \n\n        public function index() { \n            redirect('file/view_all_files'); \n        } \n\n        public function view_all_files() { \n            $data['dir'] = '/full/path/to/read';        \n            $data['files'] = get_dir_file_info($data['dir']); \n            $this->load->view('files/view_file', $data); \n        } \n    } \n    ```", "```php\n    <html> \n        <head> \n            <title>Viewing Files</title> \n        </head> \n        <body> \n            <?php echo anchor('file/create_file', 'Create File'); ?> \n            <?php echo anchor('file/read_file', 'Read File'); ?> \n            <?php echo anchor('file/view_all_files', 'View Files'); ?> \n            <table border=\"1\"> \n                <tr> \n                    <td><b>Filename</b></td> \n                    <td><b>Size</b></td> \n                    <td><b>Created</b></td> \n                    <td colspan=\"3\">Actions</td> \n                </tr> \n                <?php foreach ($files as $file) : ?> \n                    <tr> \n                        <td> \n                            <?php if (is_dir($file['server_path'])) : ?> \n                                <b><?php echo $file['name']; ?></b> \n                            <?php else : ?> \n                                <?php echo $file['name']; ?> \n                            <?php endif; ?> \n                        </td> \n                        <td> \n                            <?php echo $file['size']; ?> \n                        </td> \n                        <td> \n                            <?php echo date(\"d/m/Y H:i:s\", $file['date']); ?> \n                        </td> \n                        <td> \n                            <?php echo anchor('file/edit_file/' . $file['name'], 'Edit'); ?>&nbsp; \n                            <?php echo anchor('file/delete_file/' . $file['name'], 'Delete'); ?>&nbsp; \n                            <?php echo anchor('file/view_file/' . $file['name'], 'View'); ?> \n                        </td> \n                    </tr> \n                <?php endforeach; ?> \n            </table>\n    </body> \n    </html> \n    ```", "```php\n  public function write() { \n    // Set data \n    $data_to_write = 'This is text which will be written to the file'; \n    // Define path for file \n    $path = \"/path/to/write/to/with/filename.extension\"; \n\n    if (!write_file($path, $data_to_write)) { // Error \n      echo 'Error writing to file: ' . $path; \n    } else { // Everything worked \n    echo 'Data written to '. $path; \n  } \n} \n```", "```php\n<?php if (!defined('BASEPATH')) exit('No direct script access allowed'); \nclass Zip extends CI_Controller { \n  function __construct() { \n    parent::__construct(); \n    $this->load->helper('form'); \n    $this->load->helper('url'); \n    $this->load->library('zip'); \n  } \n\n  public function index() { \n    redirect('zip/zipme'); \n  } \n\n  public function zipme() {        \n\n  $file_name = '/path/to/zip/tozip.txt'; \n\n  // Create some data for the file \n  $data = 'This is a string of text which we will use to write to the file in the variable $file_name'; \n\n  // Set the time (to be used as ZIP filename) \n  $date = date(\"d-m-Y\", time()); \n\n  // Save some data to the ZIP archive \n  $this->zip->add_data($file_name, $data); \n\n  // Create the ZIP archive on your server - make sure this path is \n  // outside of your web root \n  $this->zip->archive('/path/in/zip/'.$date.'.zip'); \n\n  // Download the ZIP archive \n  $this->zip->download($date.'.zip'); \n\n  // Clear the cached ZIP archive \n  $this->zip->clear_data(); \n  } \n} \n```", "```php\n$data = ''; \n\nforeach ($database_result->result() as $row) { \n  $data .= $row->item_1; \n  $data .= $row->item_2; \n  $data .= $row->item_3; \n} \n```", "```php\n$this->load->library('upload'); \n```", "```php\n$config['allowed_types'] =\"jpg&#124;gif&#124;bmp&#124;png\"; \n```", "```php\n    <?php if ( ! defined('BASEPATH')) exit('No direct script access allowed'); \n    class Fileupload extends CI_Controller { \n        function __construct() { \n            parent::__construct(); \n            $this->load->helper('form'); \n            $this->load->helper('url'); \n        } \n\n        function index() { \n            $this->load->view('upload/upload_form'); \n        } \n\n        function upload() { \n            $config['upload_path'] = '/path/to/upload/dir/'; \n            $config['allowed_types'] = 'gif|jpg|png'; \n            $config['max_size'] = '100'; \n\n            $this->load->library('upload', $config); \n\n            if (!$this->upload->do_upload()) { // Upload error, display form & errors \n                $data['error'] = $this->upload->display_errors(); \n                $this->load->view('upload/upload_form', $data); \n            } else { // Success, display success message \n                $data['upload_data'] = $this->upload->data(); \n                $data['success'] = TRUE; \n                $this->load->view('upload/upload_success', $data); \n            } \n        } \n    } \n    ```", "```php\n    <html> \n    <body> \n        <?php if (isset($error)) : ?> \n            <?php echo $error;?> \n        <?php endif ; ?> \n        <?php echo form_open_multipart('fileupload/upload');?> \n            <input type=\"file\" name=\"userfile\" size=\"20\" /><br /> \n            <input type=\"submit\" value=\"Upload File!\" /> \n        </form> \n    <?php if (isset($success)) : ?> \n            <h2>Success</h2> \n            <p>The file was successfully uploaded, here's some information about the file:</p> \n            <ul> \n                <?php foreach ($upload_data as $key => $value):?> \n                    <li><?php echo $key . \" : \" . $value ;?></li> \n                <?php endforeach; ?> \n            </ul> \n    <?php endif ; ?> \n    </body> \n    </html> \n    ```", "```php\n        $this->form_validation->set_rules('first_name', 'First Name', 'required|min_length[1]|max_length[125]'); \n        $this->form_validation->set_rules('last_name', 'Last Name', 'required|min_length[1]|max_length[125]'); \n        $this->form_validation->set_rules('email', 'Email', 'required|min_length[1]|max_length[255]|valid_email|callback_email_check'); \n        $this->form_validation->set_rules('contact', 'Contact', 'required|min_length[1]|max_length[1]|integer|is_natural'); \n        $this->form_validation->set_rules('answer', 'Question', 'required|min_length[1]|max_length[2]|integer|\n            is_natural'); \n\npublic function email_check($email) { \n  if ($email_is_unique == false) { \n    $this->form_validation->set_message('email_check', 'The value entered in %s already exists in the database.'); \n    return false; \n  } else { \n    return true; \n  } \n} \n```", "```php\n    <?php if (!defined('BASEPATH')) exit('No direct script access allowed'); \n    class Lang extends CI_Controller { \n      function __construct() { \n        parent::__construct(); \n        $this->load->helper('form'); \n        $this->load->helper('url'); \n        $this->load->helper('language'); \n        $this->lang->load('en', 'english'); \n      } \n\n      public function index() { \n        redirect('lang/submit'); \n      } \n\n      public function submit() {  \n        $this->load->library('form_validation'); \n        $this->form_validation->set_error_delimiters('', '<br />'); \n\n        // Set validation rules \n        $this->form_validation->set_rules('email', $this->lang->line('form_email'), 'required|min_length[1]|max_length[50]|valid_email'); \n\n        // Begin validation \n        if ($this->form_validation->run() == FALSE) {\t \n          $this->load->view('lang/form'); \n        } else { \n          echo $this->lang->line('form_confirm_email') . $this->input->post('email');\n        } \n      } \n    } \n    ```", "```php\n    <html> \n    <body> \n\n    <h2><?php echo $this->lang->line('form_title') ; ?></h2> \n    <?php echo validation_errors() ; ?>\n    <?php echo form_open('lang/submit') ; ?> \n    <?php echo $this->lang->line('form_email') ; ?> \n    <?php echo form_input(array('name' => 'email','id' => 'email','value' => '','maxlength' => '100','size' => '50','style' => 'width:10%')) ; ?> \n\n    <?php echo form_submit('', $this->lang->line('form_submit_button')) ; ?> \n    <?php echo form_close() ; ?> \n\n    </body> \n    </html> \n    ```", "```php\n    <?php \n    $lang['form_title'] = \"Form title in English\"; \n    $lang['form_email'] = \"Email\"; \n    $lang['form_submit_button'] = \"Submit\"; \n    $lang['form_confirm_email'] = \"Your email is: \"; \n    ?>\n    ```", "```php\n$this->load->helper('language'); \n$this->lang->load('en', 'english'); \n```", "```php\n$this->lang->load('filename','language');\n```", "```php\n    <?php if (!defined(‘BASEPATH’)) exit(‘No direct script access allowed’); \n\n    class Cookie_conf extends CI_Controller { \n      function __construct() { \n        parent::__construct(); \n        $this->load->helper(‘url’); \n        $this->load->helper(‘cookie’); \n      } \n\n      public function index() { \n        // If the cookie doesn’t exist, make it \n        if ( ! $this->input->cookie(‘cookie_conf’)) { \n        $cookie = array( \n          ‘name’   => ‘cookie_conf’, \n          ‘value’  => ‘cookie-conf-unconfirmed’, \n          ‘expire’ => 7200, \n          ‘domain’ => ‘’, \n          ‘path’   => ‘/’, \n          ‘prefix’ => ‘’, \n          ‘secure’ => FALSE \n        ); \n\n        $this->input->set_cookie($cookie); \n      } \n\n      if ( $this->input->cookie(‘cookie_conf’)) { // If cookie exists \n      // Is the cookie unconfirmed? \n      if ($this->input->cookie(‘cookie_conf’, FALSE) == ‘cookie-conf-unconfirmed’) { \n      $data[‘display_cookie_conf’] = TRUE; \n      } else { \n      $data[‘display_cookie_conf’] = FALSE; \n      } \n      } else { // If cookie doesn’t exist yet \n    $data[‘display_cookie_conf’] = TRUE; \n            } \n\n            $this->load->view(‘cookie_conf/cookie_conf’, $data); \n      } \n\n      public function agree() { \n        $cookie = array( \n          ‘name’   => ‘cookie_conf’, \n          ‘value’  => ‘confirmed’, \n          ‘expire’ => 7200, \n          ‘domain’ => ‘’, \n          ‘path’   => ‘/’, \n          ‘prefix’ => ‘’, \n          ‘secure’ => FALSE \n        ); \n\n        // Set the cookie to confirmed \n        $this->input->set_cookie($cookie); \n        echo ‘You agree to the cookie’; \n      } \n\n      public function disagree() { \n      echo ‘You don\\’t agree to the cookie’; \n      } \n    } \n    ```", "```php\n    <html> \n        <head> \n            <script type=”text/javascript” src=”http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js”></script> \n            <?php if (isset($display_cookie_conf) && ($display_cookie_conf == TRUE)) : ?> \n                <script type=”text/javascript”> \n                    $(document).ready(function() { \n                        // User has agreed \n                        $(‘#agree’).click(function(answer){ \n                            $.ajax({ \n                                type: “POST”, \n                                url: “cookie_conf/agree”, \n                                success: function(data) { \n                                    // If they have agreed then remove the cookie-conf-container from their browser \n                                    $(‘#cookie-conf-container’).slideUp(500); \n                                }, \n                                error: function(){alert(‘error in agree response’);} \n                            }); \n                        }); \n\n                        // User has disagreed \n                        $(‘#disagree’).click(function(answer) { \n                            $.ajax({ \n                                type: “POST”, \n                                url: “cookie_conf/disagree”, \n                                success: function(data){ \n                                    // They’ve not approved - we can display an error if we want \n                                    $(‘#response’).html(data); \n                                }, \n                                error: function(){alert(‘error in disagree response’);} \n                            }); \n                        }); \n                    }); \n\n                </script> \n            <?php endif; ?> \n        </head> \n        <body> \n            <?php if (isset($display_cookie_conf) && ($display_cookie_conf == TRUE)) : ?> \n                <span id=”cookie-conf-container”> \n                    <p>This is a message to the user regarding cookies - obviously replace it with the text appropriate to your site. </p> \n                    <span id=’agree’>Agree</span> \n                    <span id=’disagree’>Disagree</span> \n                    <div id=’response’></div> \n                </span> \n            <?php endif; ?> \n\n        </body> \n    </html>\n    ```", "```php\nif ( ! $this->input->cookie(‘cookie_conf’)) { \n  $cookie = array( \n    ‘name’   => ‘cookie_conf’, \n    ‘value’  => ‘cookie-conf-unconfirmed’, \n    ‘expire’ => 7200, \n    ‘domain’ => ‘’, \n    ‘path’   => ‘/’,\n    ‘prefix’ => ‘’, \n    ‘secure’ => FALSE \n  ); \n\n  $this->input->set_cookie($cookie); \n} \n```", "```php\nif ( $this->input->cookie(‘cookie_conf’)) { // If cookie exists \n  // Is the cookie unconfirmed? \n  if ($this->input->cookie(‘cookie_conf’, FALSE) == ‘cookie-conf-unconfirmed’) { \n  $data[‘display_cookie_conf’] = TRUE; \n  } else { \n    $data[‘display_cookie_conf’] = FALSE; \n  } \n} else { // If cookie doesn’t exist yet \n  $data[‘display_cookie_conf’] = TRUE; \n} \n```", "```php\npublic function agree() { \n  $cookie = array( \n    ‘name’   => ‘cookie_conf’, \n    ‘value’  => ‘confirmed’, \n    ‘expire’ => 7200, \n    ‘domain’ => ‘’, \n    ‘path’   => ‘/’, \n    ‘prefix’ => ‘’, \n    ‘secure’ => FALSE \n  ); \n\n  // Set the cookie to confirmed \n  $this->input->set_cookie($cookie); \n  echo ‘You agree to the cookie’; \n} \n```"]