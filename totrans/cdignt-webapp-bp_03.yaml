- en: Chapter 3. Discussion Forum
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3章。讨论论坛
- en: A discussion forum can be quite a useful resource to have on internal company
    projects or to allow clients to interact on projects, for example.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 讨论论坛可以是一个非常有用的内部公司项目资源，或者允许客户在项目上进行互动，例如。
- en: Discussion forums are a great way to create a community around a particular
    subject or topic, acting as a type of wiki. They are a store of knowledge of something
    or a record of a discussion, containing a history of changes of ideas and concepts
    and recording the evolution of thinking around a topic or subject. They can also
    be used to talk about cats.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 讨论论坛是围绕特定主题或话题创建社区的一种极好方式，它充当一种维基。它们是关于某物或讨论的记录，包含观点和概念的变化历史，并记录围绕主题或主题的思考演变。它们也可以用来谈论猫。
- en: 'To create this app, we''ll create three controllers: one to handle discussions,
    one to handle comments, and one to handle any admin functionality that we might
    need, such as moderating comments and discussions.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 为了创建这个应用程序，我们将创建三个控制器：一个用于处理讨论，一个用于处理评论，以及一个用于处理我们可能需要的任何管理功能，例如管理评论和讨论。
- en: We'll create a language file to store text, allowing you to have multiple language
    support, should that be required.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将创建一个语言文件来存储文本，以便在需要时提供多语言支持。
- en: We will make amendments to the `config.php` file to allow for encryption support,
    which is necessary for sessions and password support.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将对`config.php`文件进行修改，以允许加密支持，这对于会话和密码支持是必要的。
- en: We'll create all the necessary view files and even a `.css` file to help Bootstrap
    with some of the views.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将创建所有必要的视图文件，甚至一个`.css`文件来帮助Bootstrap处理一些视图。
- en: This app, along with all the others in this book, relies on the basic setup
    we did in [Chapter 1](ch01.html "Chapter 1. Introduction and Shared Project Resources"),
    *Introduction and Shared Project Resources*, although you can take large sections
    of the code and drop it into pretty much any app you might already have; please
    keep in mind that the setup done in the first chapter acts as the foundation for
    this chapter.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 这个应用程序，以及这本书中的所有其他应用程序，都依赖于我们在[第1章](ch01.html "第1章。简介和共享项目资源")中完成的基本设置，*简介和共享项目资源*，尽管你可以将大量代码段放入你可能已经拥有的任何应用程序中；请记住，第一章中完成设置是本章的基础。
- en: It is worth mentioning the limits of the application. This application contains
    the most basic discussion forum functionality. We create users on our way; however,
    there is no user management—to include that would be a large extension of the
    application code and slightly out of scope of a discussion forum.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是应用程序的限制。这个应用程序包含最基本的讨论论坛功能。我们在创建用户的过程中创建用户；然而，没有用户管理——包括这一点将是对应用程序代码的大量扩展，并且稍微超出了讨论论坛的范围。
- en: Users are created when someone creates a comment or discussion using an e-mail
    address that is not currently stored in the `users` table. A password is generated
    for them and a hash is created based on that password.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 当有人使用不在`users`表中存储的电子邮件地址创建评论或讨论时，将创建用户。为他们生成一个密码，并基于该密码创建一个哈希值。
- en: As this application creates a password for them automatically, you might wish
    to tell them what that password is—perhaps by sending them an e-mail. However,
    you might not wish them to be able to log in at all. It's up to you—the functionality
    is there should you wish to expand upon it.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这个应用程序会自动为它们创建密码，你可能希望告诉他们密码是什么——也许通过发送电子邮件。然而，你可能不希望他们能够登录。这取决于你——如果你愿意，功能都在那里。
- en: 'In this chapter, we will cover:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖：
- en: Design and wireframes
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设计和线框图
- en: Creating the database
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建数据库
- en: Creating the models
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建模型
- en: Creating the views
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建视图
- en: Creating the controllers
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建控制器
- en: Putting it all together
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将所有内容整合在一起
- en: So, without further ado, let's get on with it.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，无需多言，让我们开始吧。
- en: Design and wireframes
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设计和线框图
- en: As always, before we start building, we should take a look at what we plan to
    build.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 和往常一样，在我们开始构建之前，我们应该看看我们计划构建的内容。
- en: Firstly, we need to give a brief description of our intent; we plan to build
    an app that will let a user view any pre-existing discussion pages and then allow
    that user to comment on a page if they wish. The user can also create new discussions
    and other users can comment on them.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要简要描述我们的意图；我们计划开发一个应用程序，让用户可以查看任何现有的讨论页面，并且如果他们愿意，可以对该页面进行评论。用户还可以创建新的讨论，其他用户也可以对它们进行评论。
- en: 'Let''s take a look at a site map:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看一个网站地图：
- en: '![Design and wireframes](img/7093OS_03_01.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![设计和线框图](img/7093OS_03_01.jpg)'
- en: 'Now, let''s go over each item and get a brief idea of what it does:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们逐一查看每个项目，并简要了解它们的功能：
- en: '**Home**: Imagine this as the index—the routing start point. The user will
    visit the Home page and will be redirected to point **2** (the View All Discussions
    page).'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**首页**：想象一下这是一个索引——路由的起点。用户将访问首页，然后被重定向到第2点（查看所有讨论页面）。'
- en: '**View All Discussions**: This will display all discussions in a list format.
    We''ll have some filtering going on as well (the most recent first, most popular
    next, and so on). The user will be able to click on a discussion title and be
    redirected to the View Discussion page.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**查看所有讨论**：这将以列表形式显示所有讨论。我们还将进行一些筛选（例如，最新的首先，最受欢迎的其次，等等）。用户可以点击讨论标题，然后被重定向到查看讨论页面。'
- en: '**View Discussion/Add Comment**: This page displays the initial comment (written
    by the person who created the discussion) and all subsequent comments and contributions
    added by other users. A user is able to join in a discussion by filling in a form
    at the bottom of the View Discussion page.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**查看讨论/添加评论**：此页面显示初始评论（由创建讨论的人撰写）以及所有其他用户添加的后续评论和贡献。用户可以通过在查看讨论页面底部填写表格来加入讨论。'
- en: '**New Discussion**: A user can create a new discussion. This discussion will
    then appear on the View All Discussions page as a new discussion.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**新建讨论**：用户可以创建新的讨论。然后，这个讨论将作为新的讨论出现在查看所有讨论页面。'
- en: 'We now begin to look at the admin-only functions (largely, discussion and comment
    moderation), which are as follows:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在开始查看仅管理员可用的功能（主要是讨论和评论审核），具体如下：
- en: '**Admin Login**: This is just a simple login script. It is separate from the
    one used in [Chapter 6](ch06.html "Chapter 6. Creating an Authentication System"),
    *Creating an Authentication System*.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**管理员登录**：这是一个简单的登录脚本。它与[第6章](ch06.html "第6章。创建认证系统")中使用的登录脚本不同，*创建认证系统*。'
- en: '**Moderator Dashboard**: This displays all discussions and comments awaiting
    moderation and options in a list format, in order to allow or reject them.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**版主仪表板**：此页面以列表形式显示所有待审阅的讨论和评论以及选项，以便允许或拒绝它们。'
- en: Now that we have a fairly good idea of the structure and form of the site, let's
    take a look at some wireframes of each page.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们对网站的结构和形式有了相当好的了解，让我们看看每个页面的线框图。
- en: The View All Discussions page
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 查看所有讨论页面
- en: The following screenshot shows a wireframe of point **2** (the View All Discussions
    page) in the preceding diagram. The user is able to see all current discussions,
    the initial text written by the discussion creator (this acts as a brief introduction
    to the discussion subject), the total number of comments so far, the methods to
    sort the discussions into newest/oldest, and so on.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了前一个图中第2点（查看所有讨论页面）的线框图。用户可以看到所有当前讨论，讨论创建者撰写的初始文本（这作为讨论主题的简要介绍），迄今为止的总评论数，以及将讨论排序为最新/最旧的排序方法等。
- en: '![The View All Discussions page](img/7093OS_03_02.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![查看所有讨论页面](img/7093OS_03_02.jpg)'
- en: The View Discussion/Add Comment page
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 查看讨论/添加评论页面
- en: The following screenshot shows a wireframe from point **3** (the View Discussion/Add
    Comment page). You can see that this page displays the initial discussion text
    and all the replies. At the bottom of the list of replies, there is a form that
    allows the user to join the discussion. There is also a New Discussion link at
    the top; this will take the user to point **4** (the New Discussion page).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了第3点（查看讨论/添加评论页面）的线框图。您可以看到，此页面显示初始讨论文本和所有回复。在回复列表底部有一个表格，允许用户加入讨论。顶部还有一个新建讨论链接；这将用户带到第4点（新建讨论页面）。
- en: Notice the flag link next to each comment title. If a user clicks this, then
    the comment is immediately flagged for review by the admin. For example, let's
    say someone wrote something about a famous Hollywood actor or, something loony
    such as spaceships that might be considered potentially libelous; this comment
    can be flagged for review. If it is considered safe, it can be set as such; however,
    if it is not considered safe, it can be removed to prevent the writer of the comment
    from being followed everywhere by people in vans, turning up at their work, talking
    to their neighbors, and so on—a purely hypothetical, non-real-world, and completely
    made up example of something that has never happened ever, not even once.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 注意每个评论标题旁边的标记链接。如果用户点击此链接，则评论将被立即标记供管理员审查。例如，假设有人写了一些关于著名好莱坞演员的内容，或者是一些可能被认为是诽谤性的疯狂内容，比如宇宙飞船；这样的评论可以被标记供审查。如果被认为安全，可以将其设置为安全；然而，如果不安全，可以将其删除，以防止评论者被跟随到任何地方，出现在他们的工作场所，与邻居交谈等等——这是一个纯粹假设的、非现实世界、完全虚构的例子，这种情况从未发生过，甚至一次都没有。
- en: '![The View Discussion/Add Comment page](img/7093OS_03_03.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![查看讨论/添加评论页面](img/7093OS_03_03.jpg)'
- en: The New Discussion page
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 新讨论页面
- en: The following screenshot shows a wireframe from point **4** (the New Discussion
    page). You can see the form where the user can create a new discussion. The user
    is invited to enter the discussion title, their name, and the initial discussion
    text. Once the user has entered all relevant information into the form, they press
    the **Go** button, and the form is validated by the `create()` discussion controller
    function.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了从第 **4** 点（新讨论页面）的线框图。您可以看到用户可以创建新讨论的表单。用户被邀请输入讨论标题、他们的名字和初始讨论文本。一旦用户已将所有相关信息输入到表单中，他们点击
    **Go** 按钮，表单将通过 `create()` 讨论控制器函数进行验证。
- en: '![The New Discussion page](img/7093OS_03_04.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![新讨论页面](img/7093OS_03_04.jpg)'
- en: The admin Dashboard page
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 管理员仪表板页面
- en: The following screenshot shows you the admin dashboard from point **6** (the
    Moderator Dashboard page). From this area, the admin can view any discussions
    and comments that have been flagged and moderate them, approving them or agreeing
    with the flag and deleting them.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了从第 **6** 点（管理员仪表板页面）的仪表板截图。从该区域，管理员可以查看任何被标记的讨论和评论，并对它们进行管理，批准或删除。
- en: '![The admin Dashboard page](img/7093OS_03_05.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![管理员仪表板页面](img/7093OS_03_05.jpg)'
- en: File overview
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文件概览
- en: 'We''re going to create 15 files for this application; these files are as follows:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将为这个应用程序创建 15 个文件；这些文件如下：
- en: '`/path/to/codeigniter/application/models/discussions_model.php`: This file
    provides read/write access to the database table `discussions`.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/path/to/codeigniter/application/models/discussions_model.php`: 此文件提供对数据库表
    `discussions` 的读写访问。'
- en: '`/path/to/codeigniter/application/models/comments_model.php`: This file provides
    read/write access to the database table `comments`.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/path/to/codeigniter/application/models/comments_model.php`: 此文件提供对数据库表 `comments`
    的读写访问。'
- en: '`/path/to/codeigniter/application/models/admin_model.php`: This file provides
    read/write access to the database, enabling an admin to moderate discussions and
    comments.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/path/to/codeigniter/application/models/admin_model.php`: 此文件提供对数据库的读写访问，使管理员能够管理讨论和评论。'
- en: '`/path/to/codeigniter/application/views/discussions/new.php`: This file provides
    an interface to display a form, allowing the user to create a new discussion;
    it also displays any error or success messages to the user.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/path/to/codeigniter/application/views/discussions/new.php`: 此文件提供了一个界面，允许用户创建新的讨论；它还向用户显示任何错误或成功消息。'
- en: '`/path/to/codeigniter/application/views/discussions/view.php`: This file provides
    us with an interface, allowing the user to view all active discussions. It also
    provides filtering interface options (for example, sorting).'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/path/to/codeigniter/application/views/discussions/view.php`: 此文件为我们提供了一个界面，允许用户查看所有活跃的讨论。它还提供了过滤界面选项（例如，排序）。'
- en: '`/path/to/codeigniter/application/views/comments/view.php`: This file provides
    us with an interface to display an individual discussion with all the comments
    other users have written to the user. There is also a form at the bottom of this
    view file that allows the user to join the discussion by creating a comment. Any
    validation or success messages related to adding a comment will be displayed in
    this view file as well.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/path/to/codeigniter/application/views/comments/view.php`: 此文件为我们提供了一个界面，用于显示与用户相关的所有其他用户所写的单个讨论的所有评论。在此视图文件的底部还有一个表单，允许用户通过创建评论来加入讨论。与添加评论相关的任何验证或成功消息也将在此视图文件中显示。'
- en: '`/path/to/codeigniter/application/views/admin/dashboard.php`: This file displays
    a list of comments and/or discussions that require moderating.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/path/to/codeigniter/application/views/admin/dashboard.php`: 此文件显示需要审核的评论和/或讨论列表。'
- en: '`/path/to/codeigniter/application/views/admin/login.php`: This file provides
    a login form for admins.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/path/to/codeigniter/application/views/admin/login.php`: 此文件为管理员提供了一个登录表单。'
- en: '`/path/to/codeigniter/application/views/nav/top_nav.php`: This file provides
    a navigation bar at the top of the page.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/path/to/codeigniter/application/views/nav/top_nav.php`: 此文件在页面顶部提供了一个导航栏。'
- en: '`/path/to/codeigniter/application/controllers/discussions.php`: The `discussions`
    controller manages the creation of new discussions and displays a list of discussions
    to normal users.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/path/to/codeigniter/application/controllers/discussions.php`: `discussions`
    控制器管理新讨论的创建并向普通用户显示讨论列表。'
- en: '`/path/to/codeigniter/application/controllers/comments.php`: The `comments`
    controller manages the creation of new comments and links them to discussions.
    It also displays a list of comments to normal users.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/path/to/codeigniter/application/controllers/comments.php`: `comments` 控制器管理新评论的创建并将它们链接到讨论中。它还向普通用户显示评论列表。'
- en: '`/path/to/codeigniter/application/controllers/admin.php`: The `admin` controller
    handles the logging in of admins, the display of discussions and comments awaiting
    moderation, and the moderation of those discussions and comments.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/path/to/codeigniter/application/controllers/admin.php`: `admin` 控制器处理管理员的登录、显示待审核的讨论和评论以及审核这些讨论和评论。'
- en: '`/path/to/codeigniter/application/language/english/en_admin_lang.php`: This
    file provides language support for the application.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/path/to/codeigniter/application/language/english/en_admin_lang.php`: 此文件为应用程序提供语言支持。'
- en: '`/path/to/codeigniter/application/views/common/login_header.php`: This file
    contains specific HTML markup to display the login form correctly.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/path/to/codeigniter/application/views/common/login_header.php`: 此文件包含特定的HTML标记，用于正确显示登录表单。'
- en: '`/path/to/codeigniter/bootstrap/css/signin.css`: This is a css script containing
    specific css code to display the login form correctly.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/path/to/codeigniter/bootstrap/css/signin.css`: 这是一个包含特定CSS代码的CSS脚本，用于正确显示登录表单。'
- en: 'The file structure of the preceding 15 files is as follows:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 前述15个文件的文件结构如下：
- en: '[PRE0]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Note the last item in the list: `signin.css`. This sits in the `bootstrap/css/`
    folder, which is at the same level as CodeIgniter''s `application` folder. We
    installed Twitter Bootstrap in [Chapter 1](ch01.html "Chapter 1. Introduction
    and Shared Project Resources"), *Introduction and Shared Project Resources*. In
    this chapter, we will go through placing the `bootstrap` folder at this folder
    level and location.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 注意列表中的最后一项：“`signin.css`”。它位于`bootstrap/css/`文件夹中，与CodeIgniter的`application`文件夹处于同一级别。我们在[第1章](ch01.html
    "第1章。简介和共享项目资源")，*简介和共享项目资源*中安装了Twitter Bootstrap。在本章中，我们将介绍将`bootstrap`文件夹放置在此文件夹级别和位置的方法。
- en: Creating the database
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建数据库
- en: Okay, you should have already set up CodeIgniter and Bootstrap as described
    in [Chapter 1](ch01.html "Chapter 1. Introduction and Shared Project Resources"),
    *Introduction and Shared Project Resources*. If not, then you should know that
    the code in this chapter is specifically built with the setup from the first chapter
    in mind. However, it's not the end of the world if you haven't—the code can easily
    be applied to other situations.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，你应该已经按照[第1章](ch01.html "第1章。简介和共享项目资源")，*简介和共享项目资源*中描述的方式设置了CodeIgniter和Bootstrap。如果没有，那么你应该知道，本章中的代码是专门针对第一章的设置编写的。然而，如果你没有这样做，也没有关系——代码可以轻松地应用于其他情况。
- en: 'Firstly, we''ll build the database. Copy the following MySQL code to your database:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将构建数据库。将以下MySQL代码复制到您的数据库中：
- en: '[PRE1]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Tip
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: You don't have to call the database `discuss_forum` if you don't want to. Feel
    free to rename it to something else if you wish; just be sure to update `config/database.php`
    accordingly.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您不想调用数据库`discuss_forum`，也可以不这样做。如果您愿意，可以将其重命名为其他名称；只需确保相应地更新`config/database.php`文件。
- en: You'll see that the first table that we create is `ci_sessions`; we need this
    in order to allow CodeIgniter to manage sessions, specifically, logged-in users.
    However, this is just the standard session table that is available from *CodeIgniter
    User Guide*, so I'll not include a description of the table as it's not technically
    specific to this application. However if you're interested, there's a description
    at [http://ellislab.com/codeigniter/user-guide/libraries/sessions.html](http://ellislab.com/codeigniter/user-guide/libraries/sessions.html).
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 您会看到我们创建的第一个表是`ci_sessions`；我们需要这个表来允许CodeIgniter管理会话，特别是登录用户。然而，这只是从*CodeIgniter用户指南*中可用的标准会话表，因此我不会包括表的描述，因为它不是技术特定于这个应用程序的。但是，如果您感兴趣，可以在[http://ellislab.com/codeigniter/user-guide/libraries/sessions.html](http://ellislab.com/codeigniter/user-guide/libraries/sessions.html)找到描述。
- en: 'Right, let''s take a look at each item in each table and see what it means.
    The following table describes the `comments` table:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，让我们逐个查看每个表中的每个条目，看看它的含义。下表描述了`comments`表：
- en: '| Table: comments |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| 表：comments |'
- en: '| --- |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| --- |'
- en: '| **Element** | **Description** |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| **元素** | **描述** |'
- en: '| `cm_id` | This is the primary key. |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| `cm_id` | 这是主键。|'
- en: '| `ds_id` | This is the foreign key from the `discussions` table; it links
    the `comments` table to the `discussions` table. The link is `discussions.ds_id
    = comments.cm_id`. |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| `ds_id` | 这是来自`discussions`表的外键；它将`comments`表链接到`discussions`表。链接为`discussions.ds_id
    = comments.cm_id`。|'
- en: '| `cm_body` | This is the body text of a comment. |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| `cm_body` | 这是评论的正文。|'
- en: '| `cm_created_at` | This is the MySQL timestamp that is created when the record
    is created. |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| `cm_created_at` | 这是记录创建时创建的MySQL时间戳。|'
- en: '| `usr_id` | This is the foreign Key from the `users` table. A user is created
    when someone enters an e-mail address (when creating a discussion or comment)
    that doesn''t already exist in the `users` table. |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| `usr_id` | 这是来自`users`表的外键。当有人输入一个电子邮件地址（在创建讨论或评论时）且该电子邮件地址在`users`表中不存在时，会创建一个用户。|'
- en: '| `cm_is_active` | This indicates whether the comment is active (`1`) or inactive
    (`0`); inactive means that a comment is not displayed in a forum but is displayed
    to an admin in the admin dashboard for moderation. |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| `cm_is_active` | 这表示评论是否活跃（`1`）或非活跃（`0`）；非活跃表示评论不会在论坛中显示，但会在管理员仪表板中显示给管理员进行审核。|'
- en: 'The following table describes the `discussions` table:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 下表描述了`discussions`表：
- en: '| Table: discussions |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| 表：discussions |'
- en: '| --- |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| --- |'
- en: '| **Element** | **Description** |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| **元素** | **描述** |'
- en: '| `ds_id` | This is the primary key. |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| `ds_id` | 这是主键。|'
- en: '| `usr_id` | This is the foreign key from the `users` table. A user is created
    when someone enters an e-mail address (when creating a discussion or comment)
    that doesn''t already exist in the users table. |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| `usr_id` | 这是来自`users`表的外键。当有人输入一个电子邮件地址（在创建讨论或评论时）且该电子邮件地址在用户表中不存在时，会创建一个用户。|'
- en: '| `ds_title` | This is the title of a discussion forum. |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| `ds_title` | 这是讨论论坛的标题。|'
- en: '| `ds_body` | This is the body element of a discussion forum; it is the initial
    text—usually a question—that the creator of a discussion writes to entice people
    to comment. |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| `ds_body` | 这是讨论论坛的主体元素；它是创建讨论的人为了吸引人们评论而写的初始文本——通常是一个问题。|'
- en: '| `ds_created_at` | This is the MySQL timestamp that is created when the record
    is created. |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| `ds_created_at` | 这是记录创建时创建的MySQL时间戳。|'
- en: '| `ds_is_active` | This indicates whether the discussion forum is active (`1`)
    or inactive (`0`); inactive means that a discussion is not displayed on the page
    but is displayed to an admin in the admin dashboard for moderation. |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| `ds_is_active` | 这表示讨论论坛是否活跃（`1`）或非活跃（`0`）；非活跃表示讨论不会在页面上显示，但会在管理员仪表板中显示给管理员进行审核。|'
- en: 'The following table describes the `users` table:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 下表描述了`users`表：
- en: '| Table: users |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| 表：users |'
- en: '| --- |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| --- |'
- en: '| **Element** | **Description** |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| **元素** | **描述** |'
- en: '| `usr_id` | This is the primary key. |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| `usr_id` | 这是主键。|'
- en: '| `usr_name` | This is the username of an individual once they''re in the database.
    |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| `usr_name` | 这是在数据库中个人的用户名。|'
- en: '| `usr_hash` | This is the hashed value of their password. The password is
    generated in the `new_comment()` function of `comments_model` and the `create()`
    function of `discussions_model` and is passed to the `$this->encrypt->sha1()`CodeIgniter
    function to create a hash. The hash is stored in the database in `users.usr_hash`;
    however, the password is not stored (as you would expect). |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| `usr_hash` | 这是他们的密码的哈希值。密码在 `comments_model` 的 `new_comment()` 函数和 `discussions_model`
    的 `create()` 函数中生成，并通过 `$this->encrypt->sha1()` CodeIgniter 函数创建哈希值。哈希值存储在数据库的
    `users.usr_hash` 中；然而，密码并未存储（正如您所期望的）。 |'
- en: '| `usr_email` | This is the e-mail of the person writing a comment or creating
    a discussion forum. The application will look in the `users` table to see whether
    the e-mail already exists. If it does, the primary key (`usr_id`) for that record
    is assigned to a comment or discussion forum. If the e-mail does not already exist,
    then a row is created in the `users` table and the primary key is then assigned
    to the comment or discussion. |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| `usr_email` | 这是撰写评论或创建讨论论坛的人的电子邮件。应用程序将在 `users` 表中查找该电子邮件是否已存在。如果已存在，则将该记录的主键（`usr_id`）分配给评论或讨论论坛。如果电子邮件不存在，则在
    `users` 表中创建一行，然后将主键分配给评论或讨论。 |'
- en: '| `usr_created_at` | This is the MySQL timestamp that is created when the recordis
    created. |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| `usr_created_at` | 这是记录创建时创建的 MySQL 时间戳。 |'
- en: '| `usr_is_active` | This indicates whether the user is active (`1`) or inactive
    (`0`). Currently, there is no functionality to handle active or inactive users;
    this is something you can implement yourself should you wish. |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| `usr_is_active` | 这表示用户是否活跃（`1`）或非活跃（`0`）。目前，没有处理活跃或非活跃用户的功能；如果您愿意，可以自行实现这一功能。
    |'
- en: '| `usr_level` | This indicates the permission level of the user. Standard users
    are given the integer value 1, and admins (that is, those who can log in) are
    given the integer value 2\. There is no functionality to use this `usr_level`
    element; however, it is there should you wish to expand upon it. |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| `usr_level` | 这表示用户的权限级别。标准用户被赋予整数值 1，管理员（即可以登录的人）被赋予整数值 2。没有使用此 `usr_level`
    元素的功能；然而，如果您愿意扩展它，它就在那里。 |'
- en: At this early stage, it's important to discuss the concept of users in this
    application. We're not really going to employ any detailed user management, and
    users will only be created when someone enters their e-mail address when they
    add a comment or create a discussion. We're creating users here because it'll
    be easy for you to extend this functionality in your own time to manage users,
    should you wish.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个早期阶段，讨论这个应用程序中用户的概念非常重要。我们不会真正使用任何详细的用户管理，用户只有在添加评论或创建讨论时输入他们的电子邮件地址时才会被创建。我们在这里创建用户是因为这将使您在您自己的时间里扩展此功能以管理用户变得容易，如果您愿意的话。
- en: 'We''ll also need to make amendments to the `config/database.php` file—namely
    setting the database access details, username password, and so on. The steps are
    as follows:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要对 `config/database.php` 文件进行修改——即设置数据库访问详情、用户名和密码等。步骤如下：
- en: 'Open the `config/database.php` file and find the following lines:'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 `config/database.php` 文件，找到以下行：
- en: '[PRE2]'
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Edit the values in the preceding lines, ensuring you replace these values with
    values that are more specific to your setup and situation. Enter your username,
    password, and so on.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑前述行中的值，确保用更具体于您的设置和情况的值替换这些值。输入您的用户名、密码等。
- en: Adjusting the config.php file
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调整 `config.php` 文件
- en: There are a few things in this file that we'll need to configure to support
    sessions and encryption. So, open the `config/config.php` file and make the changes
    described in this section.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在此文件中，我们需要配置一些内容以支持会话和加密。因此，打开 `config/config.php` 文件，并根据本节描述进行更改。
- en: 'We will need to set an encryption key. Both sessions as well as CodeIgniter''s
    encryption functionality require an encryption key to be set in the `$config`
    array, so perform the following steps:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要设置一个加密密钥。会话以及 CodeIgniter 的加密功能都需要在 `$config` 数组中设置一个加密密钥，因此请执行以下步骤：
- en: 'Find the following line:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找到以下行：
- en: '[PRE3]'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Change it to the following:'
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更改为以下内容：
- en: '[PRE4]'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Tip
  id: totrans-116
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Now, don't actually change this value to literally a-random-string-of-alphanum-characters
    obviously, but change it to, er, a random string of alphanum characters—if that
    makes sense. Yeah, you know what I mean.
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，实际上不要将此值更改为一个随机的字母数字字符序列，而是改为，嗯，一个随机的字母数字字符序列——如果这说得通。是的，你知道我的意思。
- en: 'Find the following lines:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找到以下行：
- en: '[PRE5]'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Change them to the following:'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将它们更改为以下内容：
- en: '[PRE6]'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Adjusting the routes.php file
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调整`routes.php`文件
- en: 'We want to redirect the user to the `discussions` controller rather than the
    default CodeIgniter `welcome` controller. To do this, we will need to amend the
    default controller setting in the `routes.php` file to reflect this, which can
    be done as follows:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望将用户重定向到`discussions`控制器而不是默认的CodeIgniter `welcome`控制器。为此，我们需要修改`routes.php`文件中的默认控制器设置以反映这一点，可以按照以下方式操作：
- en: 'Open the `config/routes.php` file for editing and find the following lines
    (near the bottom of the file):'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`config/routes.php`文件进行编辑，并找到以下行（文件底部附近）：
- en: '[PRE7]'
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Firstly, we need to change the default controller. Initially in a CodeIgniter
    application, the default controller is set to `welcome`; however, we don''t need
    this. We want the default controller to be `discussions` instead. So, find the
    following line:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们需要更改默认控制器。最初在一个CodeIgniter应用程序中，默认控制器设置为`welcome`；然而，我们不需要这个。我们希望默认控制器是`discussions`。所以，找到以下行：
- en: '[PRE8]'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Change it to the following:'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将其更改为以下内容：
- en: '[PRE9]'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Creating the models
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建模型
- en: 'We''re going to create three models for this application; these are as follows:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将为这个应用程序创建三个模型；具体如下：
- en: '`discussions_model.php`: This helps in managing interactions with the `discussions`
    table'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`discussions_model.php`：这有助于管理与`discussions`表的交互'
- en: '`comments_model.php`: This helps in managing interactions with the `comments`
    table'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`comments_model.php`：这有助于管理与`comments`表的交互'
- en: '`admin_model.php`: This helps in managing interactions with the `users` table'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`admin_model.php`：这有助于管理与`users`表的交互'
- en: Creating the model file – models/discussions_model.php
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建模型文件 - models/discussions_model.php
- en: The `discussions_model.php` model file has three functions; these are `fetch_discussions()`,
    `fetch_discussion()`, and `flag()`. The `fetch_discussions()` function fetches
    many discussions, the `fetch_discussion()` function fetches a single discussion,
    and the `flag()` function sets a discussion as one that requires moderation by
    an admin.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '`discussions_model.php`模型文件有三个函数；这些是`fetch_discussions()`、`fetch_discussion()`和`flag()`。`fetch_discussions()`函数获取多个讨论，`fetch_discussion()`函数获取单个讨论，而`flag()`函数将讨论设置为需要管理员审核的讨论。'
- en: 'The steps to create this model file are as follows:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 创建此模型文件的步骤如下：
- en: 'Create the `/path/to/codeigniter/application.models/discussion_model.php` file
    and add the following code to it:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 创建`/path/to/codeigniter/application.models/discussion_model.php`文件，并将以下代码添加到其中：
- en: '[PRE10]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Let's first look at the `fetch_discussions()` function. The `fetch_discussions()`
    function will return the result of a database query to the `discussions` controller's
    `index()` function. It takes two arguments that are set to `null` by default.
    These are `$filter` and `$direction`, and they are used to add filtering and sorting
    to the query string.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先看看`fetch_discussions()`函数。`fetch_discussions()`函数将返回对`discussions`控制器`index()`函数的数据库查询结果。它接受两个默认设置为`null`的参数。这些是`$filter`和`$direction`，它们用于向查询字符串添加过滤和排序。
- en: 'The following query will only return active discussions—that is, any discussions
    whose `ds_is_active` value is not set to `0`. The `flag()` function of `discussions_model`
    (discussed later) sets a discussion to inactive:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 以下查询将仅返回活跃的讨论——也就是说，任何`ds_is_active`值未设置为`0`的讨论。`discussions_model`（稍后讨论）的`flag()`函数将一个讨论设置为非活动状态：
- en: '[PRE11]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'If the `filter` variable is initially null, then we will need to order the
    results to ascending. In the following code, we test whether `$filter` equals
    `null`; if not, `$dir = ''ASC''` sets the direction to ascending. If, however,
    `$filter` is not `null`, then we go into the PHP `if` statement and look at the
    value of `$direction`. We perform a PHP `switch case` procedure to quickly ascertain
    whether the value of `$direction` is `ASC` or `DESC`, writing the value of `$dir`
    to `ASC` or `DESC` accordingly:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`filter`变量最初为`null`，那么我们需要将结果排序为升序。在以下代码中，我们测试`$filter`是否等于`null`；如果不等于，则`$dir
    = 'ASC'`将方向设置为升序。如果`$filter`不是`null`，那么我们将进入PHP `if`语句并查看`$direction`的值。我们执行PHP
    `switch case`过程以快速确定`$direction`的值是`ASC`还是`DESC`，并相应地将`$dir`的值写入`ASC`或`DESC`：
- en: '[PRE12]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Next, the query is executed and its return value is analyzed. If the query
    was successful, then `$result` is returned to the `index()` function of the `discussions`
    controller. The `index()` function of the `discussions` controller then stores
    this query result in the `$page_data[''query'']` array item and passes it to the
    `discussions/view.php` view file. This is shown here:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，执行查询并分析其返回值。如果查询成功，则`$result`返回到`discussions`控制器的`index()`函数。`discussions`控制器的`index()`函数然后将此查询结果存储在`$page_data['query']`数组项中，并将其传递给`discussions/view.php`视图文件。这在这里显示：
- en: '[PRE13]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Now, let''s look at the `create($data)` function. The function takes an array
    (named `$data`) as its only argument. The `$data` array contains the following
    items:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看`create($data)`函数。该函数接受一个数组（命名为`$data`）作为其唯一参数。`$data`数组包含以下项：
- en: '`usr_email`: This is populated from the form in `views/discussions/new.php`'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`usr_email`：这是从`views/discussions/new.php`中的表单中填充的'
- en: '`usr_id`: This is populated by the model itself by looking in the database'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`usr_id`：这是由模型本身通过在数据库中查找来填充的'
- en: '`usr_name`: This is populated from the form in `views/discussions/new.php`'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`usr_name`：这是从`views/discussions/new.php`中的表单中填充的'
- en: '`ds_title`: This is populated from the form in `views/discussions/new.php`'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ds_title`：这是从`views/discussions/new.php`中的表单中填充的'
- en: '`ds_body`: This is populated from the form in `views/discussions/new.php`'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ds_body`：这是从`views/discussions/new.php`中的表单中填充的'
- en: We want to associate this discussion forum with a user. Although we don't really
    manage users in this application, we still want to do this as it might be useful
    for us in the future. To associate a discussion with a user, we'll need to find
    an existing user ID (`users.usr_id`) or create a new user and assign that ID instead.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望将这个讨论论坛与一个用户关联起来。尽管在这个应用程序中我们并不真正管理用户，但我们仍然想这样做，因为这可能在将来对我们有用。要将讨论与用户关联起来，我们需要找到一个现有的用户ID（`users.usr_id`）或者创建一个新的用户并分配该ID。
- en: 'This function begins by looking at the `users` table to see whether the e-mail
    address in `$data[''usr_email'']` already exists in the database. If it does,
    then `usr_id` is pulled out of the `users` table and written to `$data[''usr_id'']`;
    this will be stored until we update to the `discussions` table:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 这个函数首先查看`users`表，看看`$data['usr_email']`中的电子邮件地址是否已经在数据库中存在。如果存在，则从`users`表中提取`usr_id`并写入到`$data['usr_id']`；这将一直存储到我们更新到`discussions`表：
- en: '[PRE14]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'If the e-mail address doesn''t exist in the `users` table, then a record is
    created. A password is generated using the `random_string()` CodeIgniter function.
    The password is stored in the `$password` variable and is passed to the `sha1`
    CodeIgniter function to generate a hash string:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 如果电子邮件地址在`users`表中不存在，则创建一个记录。使用`random_string()` CodeIgniter函数生成密码。密码存储在`$password`变量中，并传递给`sha1`
    CodeIgniter函数以生成哈希字符串：
- en: '[PRE15]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: The `$hash` value along with `usr_email` and `usr_name`, submitted by the user,
    is added to the `$user_data` array. Also added to the `$user_data` array are some
    admin flags such as `usr_is_active` and `usr_level`.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 用户提交的`$hash`值以及`usr_email`和`usr_name`被添加到`$user_data`数组中。还添加到`$user_data`数组中的一些管理员标志，如`usr_is_active`和`usr_level`。
- en: 'The `usr_is_active` flag is set to `1` by default; this can be set to any other
    value you wish should you want to add user management functions. The `usr_level`
    flag is set to `1` by default; this can be set to any other value you wish should
    you want to add user management functions:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，`usr_is_active`标志设置为`1`；如果您想添加用户管理功能，可以将其设置为任何其他您希望的价值。默认情况下，`usr_level`标志设置为`1`；如果您想添加用户管理功能，可以将其设置为任何其他您希望的价值：
- en: '[PRE16]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The `$user_data` array is inserted to the database. Should you wish, you could
    send the user an e-mail containing their password; this will only be because you
    want to add user management functionality. The newly created user ID is returned
    by `$this->db->insert_id()` and stored in `$data[''usr_id'']`. This is shown here:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '`$user_data`数组被插入到数据库中。如果您愿意，您可以发送一封包含用户密码的电子邮件；这仅因为您想添加用户管理功能。新创建的用户ID通过`$this->db->insert_id()`返回并存储在`$data[''usr_id'']`中。这在这里显示：'
- en: '[PRE17]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Once the user ID is stored in the `$data` array, we create a new array, `$discussion_data`.
    The `$discussion_data` array contains all the data required for the creation of
    a discussion, as follows:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦用户ID存储在`$data`数组中，我们创建一个新的数组`$discussion_data`。`$discussion_data`数组包含创建讨论所需的所有数据，如下所示：
- en: '`ds_title`: This is populated from the form in `views/discussions/new.php`'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ds_title`：这是从`views/discussions/new.php`中的表单中填充的'
- en: '`ds_body`: This is populated from the form in `views/discussions/new.php`'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ds_body`：这是从`views/discussions/new.php`中的表单中填充的'
- en: '`usr_id`: This is populated by a database lookup'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`usr_id`：这是通过数据库查找填充的'
- en: '`ds_is_active`: This is set when we create the `$discussion_data` array'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ds_is_active`：这是在创建`$discussion_data`数组时设置的'
- en: 'Once the `$discussion_data` array is created, we write the record to the discussion
    table:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦创建`$discussion_data`数组，我们就将其记录写入讨论表：
- en: '[PRE18]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: If the insertion was successful, we return `TRUE`; if it wasn't successful,
    we return `FALSE`.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 如果插入成功，我们返回`TRUE`；如果未成功，我们返回`FALSE`。
- en: 'This model also contains the `flag()` function. The `flag()` function uses
    an `UPDATE` command to set the `ds_is_active` column to `0`. This means that the
    discussion will not be displayed to users, as the `fetch_discussions()` function
    of `discussions_model` will only return discussions that have `ds_is_active` set
    to `1`. This is shown here:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 此模型还包含`flag()`函数。`flag()`函数使用`UPDATE`命令将`ds_is_active`列设置为`0`。这意味着讨论将不会显示给用户，因为`discussions_model`的`fetch_discussions()`函数只会返回`ds_is_active`设置为`1`的讨论。如下所示：
- en: '[PRE19]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: The `flag()` function accepts one argument—that is, the primary key of the discussion
    passed by the `discussions` controller. When the user clicks on the **flag** link
    next to a discussion title in the `views/discussions/view.php` file, the `flag()`
    function of the `discussions` controller is called. The third `uri` segment in
    the **flag** link is the primary key of the discussion.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '`flag()`函数接受一个参数——即由`discussions`控制器传递的讨论的主键。当用户点击`views/discussions/view.php`文件中讨论标题旁边的**flag**链接时，会调用`discussions`控制器的`flag()`函数。**flag**链接的第三个`uri`段是讨论的主键。'
- en: 'We use CodeIgniter''s Active Record functionality to update the discussions
    record in the database, setting `ds_is_active` to `0`. Setting `ds_is_active`
    to `0` will immediately prevent the discussion from being viewed in `views/discussions/view.php`
    and make it appear in the admin section for moderation:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用CodeIgniter的Active Record功能来更新数据库中的讨论记录，将`ds_is_active`设置为`0`。将`ds_is_active`设置为`0`将立即阻止讨论在`views/discussions/view.php`中显示，并使其出现在管理员部分以供审核：
- en: '[PRE20]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Creating the model file – comments_model.php
  id: totrans-176
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建模型文件——comments_model.php
- en: The `comments_model.php` model file contains three functions; these are `fetch_comments()`,
    `new_comment()`, and `flag()`. The `fetch_comments()` function fetches all comments
    that belong to a discussion forum and are active. The `new_comment()` function
    adds a comment to the database associated with a discussion forum by means of
    a foreign key. Finally, the `flag()` function will set a comment as one that requires
    moderation.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '`comments_model.php`模型文件包含三个函数；这些是`fetch_comments()`、`new_comment()`和`flag()`。`fetch_comments()`函数获取属于讨论论坛的所有活动评论。`new_comment()`函数通过外键将评论添加到与讨论论坛关联的数据库中。最后，`flag()`函数将评论设置为需要审核的评论。'
- en: 'Create the `/path/to/codeigniter/application/models/comments_model.php` file
    and add the following code to it:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 创建`/path/to/codeigniter/application/models/comments_model.php`文件，并将以下代码添加到其中：
- en: '[PRE21]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'There are three functions in this model. These are as follows:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 此模型中有三个函数。具体如下：
- en: '`fetch_comments()`: This fetches all active comments that are associated with
    the current discussion from the `comments` table .'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`fetch_comments()`: 这将从`comments`表中获取与当前讨论相关联的所有活动评论。'
- en: '`new_comments()`: This creates a new record in the `comments` table. The comment
    is associated with `users.usr_id` and `discussions.ds_id`.'
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`new_comments()`: 这将在`comments`表中创建一个新的记录。评论与`users.usr_id`和`discussions.ds_id`相关联。'
- en: '`flag()`: This sets a comment as being flagged for moderation by setting `comments.cm_is_active`
    to `0`.'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`flag()`：这通过将`comments.cm_is_active`设置为`0`来设置一个评论为需要审核的评论。'
- en: 'The `fetch_comments()` function accepts one argument—`$ds_id`—that is the primary
    key of the discussion in the database. We take this primary key and look in the
    database for comments belonging to that discussion, and users belonging to the
    comments, as shown here:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '`fetch_comments()`函数接受一个参数——`$ds_id`——这是数据库中讨论的主键。我们取这个主键，在数据库中查找属于该讨论的评论和属于评论的用户，如下所示：'
- en: '[PRE22]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'These comments are then returned as an Active Record database result object.
    Or, the Boolean value `false` is returned if an error occurred, as shown here:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 这些评论随后作为Active Record数据库结果对象返回。或者，如果发生错误，则返回布尔值`false`，如下所示：
- en: '[PRE23]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'The `new_comment()` function takes one argument, the `$data` array. This is
    populated in the `comments` controller, as shown here:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '`new_comment()`函数接受一个参数，即`$data`数组。这个数组在`comments`控制器中填充，如下所示：'
- en: '[PRE24]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'First off, we check whether the e-mail address used by the person who is commenting
    already exists in the database; we do this as we might want to add functionality
    to ban particular users later, delete posts from specific users, or even develop
    functionality to allow users to log in and view their previous posts:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们检查评论者使用的电子邮件地址是否已经在数据库中存在；我们这样做是因为我们可能想要以后添加禁止特定用户的功能，删除特定用户的帖子，或者甚至开发允许用户登录并查看他们以前帖子的功能：
- en: '[PRE25]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'If we arrive here in the code, then the e-mail address is obviously already
    in the database, so we grab the users'' primary key and store it in `$data[''usr_id'']`;
    later, we will save it to the comment:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们在代码中到达这里，那么显然电子邮件地址已经在数据库中，所以我们抓取用户的主键并将其存储在 `$data['usr_id']` 中；稍后，我们将将其保存到评论中：
- en: '[PRE26]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'If we get here, then the user doesn''t exist, so we create them in the `users`
    table, returning the primary key using the `$this->d->insert_id()`CodeIgniter
    function:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们到达这里，那么该用户不存在，所以我们将在 `users` 表中创建他们，并使用 `$this->d->insert_id()` CodeIgniter
    函数返回主键：
- en: '[PRE27]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Now we save the comment to the `comments` table using the CodeIgniter Active
    Record function `$this->db->insert()`. This is shown here:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们使用 CodeIgniter Active Record 函数 `$this->db->insert()` 将评论保存到 `comments`
    表中。如下所示：
- en: '[PRE28]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Creating the model file – admin_model.php
  id: totrans-198
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建模型文件 – admin_model.php
- en: 'There are four functions in the `admin_model.php` model, and these are as follows:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '`admin_model.php` 模型中有四个函数，具体如下：'
- en: '`dashboard_fetch_comments()`: This fetches comments from the databases that
    have been flagged for moderation.'
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dashboard_fetch_comments()`：从数据库中检索已标记为待审核的评论。'
- en: '`dashboard_fetch_discussions()`: This fetches discussions from the databases
    that have been flagged for moderation.'
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dashboard_fetch_discussions()`：从数据库中检索已标记为待审核的讨论。'
- en: '`update_comments()`: This updates a comment based on the decision of the moderator,
    changing the value of `cm_is_active` to `1` if the comment is approved or deleting
    it if is unapproved.'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`update_comments()`：根据版主的决策更新评论，如果评论被批准则将 `cm_is_active` 的值更改为 `1`，如果不批准则删除它。'
- en: '`update_discussions()`: This updates a discussion based on the decision of
    the moderator, changing the value of `cm_is_active` to `1` if approved or deleting
    it if is unapproved. If a discussion is deleted, then all comments associated
    with that discussion will also be deleted.'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`update_discussions()`：根据版主的决策更新讨论，如果批准则将 `cm_is_active` 的值更改为 `1`，如果不批准则删除它。如果删除讨论，则与该讨论关联的所有评论也将被删除。'
- en: 'Create the `/path/to/codeigniter/application/models/admin_model.php` file and
    add the following code to it:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 `/path/to/codeigniter/application/models/admin_model.php` 文件，并将以下代码添加到其中：
- en: '[PRE29]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'The following function will fetch all comments for moderation from the database.
    Comments are for moderation if `comments.cm_is_active` is set to `0`. The database
    is queried and all comments for moderation are returned to the `admin` controller.
    This result will eventually be looped over in the `views/admin/dashboard.php`
    file:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 以下函数将从数据库中检索所有待审核的评论。如果 `comments.cm_is_active` 设置为 `0`，则评论需要审核。数据库被查询，所有待审核的评论将返回给
    `admin` 控制器。这个结果最终将在 `views/admin/dashboard.php` 文件中循环遍历：
- en: '[PRE30]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'The following function will fetch all discussions for moderation from the database.
    Discussions are for moderation if `discussions.ds_is_active` is set to `0`. The
    database is queried and all discussions for moderation are returned to the `admin`
    controller. This result will eventually be looped over in the `views/admin/dashboard.php`
    file:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 以下函数将从数据库中检索所有待审核的讨论。如果 `discussions.ds_is_active` 设置为 `0`，则讨论需要审核。数据库被查询，所有待审核的讨论将返回给
    `admin` 控制器。这个结果最终将在 `views/admin/dashboard.php` 文件中循环遍历：
- en: '[PRE31]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'The following function is called by the `admin` controller function when an
    admin is moderating comments. If a comment is deemed to be fine, then `comments.cm_is_active`
    is updated and set to `1`. However, if it is not fine, then the comment is deleted
    from the `comments` table:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 当管理员审核评论时，由 `admin` 控制器函数调用的以下函数。如果评论被认为是可以的，则更新 `comments.cm_is_active` 并将其设置为
    `1`。然而，如果它不可行，则从 `comments` 表中删除该评论：
- en: '[PRE32]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'The following function is called by the `admin` controller function when an
    admin is moderating discussions. If a discussion is deemed to be fine, then `discussions.ds_is_active`
    is updated and set to `1`. However, if it is not fine, then the discussion is
    deleted from the `discussions` table. Any comments belonging to that discussion
    are also deleted from the `comments` table:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 当管理员正在管理讨论时，以下函数会被`admin`控制器函数调用。如果讨论被认为是可以的，那么`discussions.ds_is_active`会被更新并设置为`1`。然而，如果它不可行，那么讨论将从`discussions`表中删除。属于该讨论的所有评论也将从`comments`表中删除：
- en: '[PRE33]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Creating views
  id: totrans-214
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建视图
- en: 'There are six view files in this application, and these are as follows:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 这个应用程序中有六个视图文件，具体如下：
- en: '`discussions/view.php`: This displays all active discussions'
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`discussions/view.php`：这个文件显示所有活跃的讨论'
- en: '`discussions/new.php`: This displays a form to the user, allowing them to create
    a discussion'
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`discussions/new.php`：这个文件向用户显示一个表单，允许他们创建一个讨论'
- en: '`comments/view.php`: This displays all active comments within a discussion'
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`comments/view.php`：这个文件显示讨论中的所有活跃评论'
- en: '`nav/top_nav.php`: This contains the top navigation links'
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nav/top_nav.php`：这个文件包含顶部导航链接'
- en: '`admin/login.php`: This displays a login form for the user; don''t forget to
    add the `signin.css` script, which you can find later in this chapter'
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`admin/login.php`：这个文件显示用户的登录表单；别忘了添加`signin.css`脚本，你可以在本章后面找到它'
- en: '`common/login_header.php`: The `views/admin/login.php` view requires different
    resources from the rest of the application, which is supported by this header'
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`common/login_header.php`：`views/admin/login.php`视图需要与应用程序其余部分不同的资源，这由这个头部支持'
- en: Discussions
  id: totrans-222
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 讨论区
- en: The `discussions/view.php` view file displays a list of all active discussions
    as well as sorting options.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: '`discussions/view.php`视图文件显示所有活跃讨论的列表以及排序选项。'
- en: 'Create the `/path/to/codeigniter/views/discussions/view.php` file and add the
    following code to it:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 创建`/path/to/codeigniter/views/discussions/view.php`文件，并向其中添加以下代码：
- en: '[PRE34]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Take a look at the first few lines. We open with a CodeIgniter `anchor()` statement.
    Let''s take a closer look at the code for the link:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 看看前几行。我们以CodeIgniter的`anchor()`语句开始。让我们更仔细地看看链接的代码：
- en: '[PRE35]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Let''s break this down into smaller sections:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将这个内容分解成更小的部分：
- en: '`anchor(''discussions/index/age/sort/'' .`: This sets the link for the `discussions`
    controller, `index()` function, and sorting by age (the created date—`discussions.ds_created_at`),
    but what is the direction? Well…'
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`anchor(''discussions/index/age/sort/'' .`：这设置了`discussions`控制器`index()`函数的链接，并按年龄（创建日期——`discussions.ds_created_at`）进行排序，但方向是什么？嗯…'
- en: '`(($dir == ''ASC'') ? ''DESC'' : ''ASC''),`: The value of `$dir` comes from
    the `index()` function of the `discussions` controller. It is the current direction
    of the sort. We then use a PHP ternary operator to switch between the directions.
    It''s a bit like an if/else statement but is more compact. It works like this:
    *if a variable is equal (or not equal) to a variable, then execute A, otherwise
    execute B*. For example, as an if/else statement, the code would be as follows:'
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`(($dir == ''ASC'') ? ''DESC'' : ''ASC''),`：`$dir`的值来自`discussions`控制器的`index()`函数。它是当前排序的方向。然后我们使用PHP三元运算符在方向之间切换。它有点像if/else语句，但更紧凑。它的工作方式是这样的：*如果变量等于（或不等于）另一个变量，则执行A，否则执行B*。例如，作为一个if/else语句，代码将是如下所示：'
- en: '[PRE36]'
  id: totrans-231
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: So, the second part of the link will flip-flop between `ASC` and `DESC` depending
    on the value held in `$dir`. Now, let's look at the rest.
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 因此，链接的第二部分将根据`$dir`中保存的值在`ASC`和`DESC`之间切换。现在，让我们看看其余的部分。
- en: '`''Newest '' . (($dir == ''ASC'') ? ''DESC'' : ''ASC''));?>`: This is the text
    that users will see as their link. You can see that we again make use of the ternary
    operator to display the text, flipping between `Newest ASC` and `Newest DESC`.'
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`''Newest '' . (($dir == ''ASC'') ? ''DESC'' : ''ASC''));?>`：这是用户将看到的链接文本。您可以看到我们再次使用了三元运算符来显示文本，在`Newest
    ASC`和`Newest DESC`之间切换。'
- en: The rest of the view is fairly undramatic; all we do is loop over the database
    result from the discussions' `index()` function, displaying all active discussions
    as we go.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 视图的其余部分相当简单；我们只是遍历来自讨论`index()`函数的数据库结果，在遍历过程中显示所有活跃的讨论。
- en: Comments
  id: totrans-235
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 评论
- en: The comments view displays a list of all valid comments to the user for a selected
    discussion.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 评论视图向用户显示所选讨论的所有有效评论列表。
- en: 'Create the `/path/to/codeigniter/application/views/comments/view.php` file
    and add the following code to it:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 创建`/path/to/codeigniter/application/views/comments/view.php`文件，并向其中添加以下代码：
- en: '[PRE37]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Note the following line in the form:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 注意表单中的以下行：
- en: '[PRE38]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: You will see that we use a line from the `lang` file that is not in the code
    example; this is because the `common_form_elements_go` line is to be found in
    [Chapter 1](ch01.html "Chapter 1. Introduction and Shared Project Resources"),
    *Introduction and Shared Project Resources*.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到我们使用了一个不在代码示例中的`lang`文件中的行；这是因为`common_form_elements_go`行可以在[第1章](ch01.html
    "第1章。引言和共享项目资源")中找到，*引言和共享项目资源*。
- en: New discussion
  id: totrans-242
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 新讨论
- en: The New Discussion view displays a form to the user and any validation error
    messages that might need to be conveyed.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 新讨论视图向用户显示一个表单以及可能需要传达的任何验证错误信息。
- en: 'Create the `/path/to/codeigniter/application/views/discussions/new.php` file
    and add the following code to it:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 创建`/path/to/codeigniter/application/views/discussions/new.php`文件，并向其中添加以下代码：
- en: '[PRE39]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Note the following line in the form:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 注意表单中的以下行：
- en: '[PRE40]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: You will see that we use a line from the `lang` file that is not in the code
    example; this is because the `common_form_elements_go` line is to be found in
    [Chapter 1](ch01.html "Chapter 1. Introduction and Shared Project Resources"),
    *Introduction and Shared Project Resources*.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到我们使用了一个不在代码示例中的`lang`文件中的行；这是因为`common_form_elements_go`行可以在[第1章](ch01.html
    "第1章。引言和共享项目资源")中找到，*引言和共享项目资源*。
- en: We provide options to the user to create a new discussion. We display form elements
    for them to enter their username, e-mail, discussion title, and the text of their
    discussion.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 我们向用户提供创建新讨论的选项。我们显示表单元素，让他们输入用户名、电子邮件、讨论标题以及他们的讨论文本。
- en: The form is submitted to the `create()` function of the `discussion` controller,
    where is it validated with any validation errors being displayed.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 表单提交给`discussion`控制器的`create()`函数，在那里它将进行验证，并显示任何验证错误。
- en: The top_nav file
  id: totrans-251
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`top_nav`文件'
- en: Every project in this book has its own navigation file, and this is no exception.
    The `top_nav` file is standard Bootstrap navigation code; however, there are a
    few Codeigniter `anchor()` functions that provide the URL links and text.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的每个项目都有自己的导航文件，这也不例外。`top_nav`文件是标准的Bootstrap导航代码；然而，有几个Codeigniter的`anchor()`函数提供了URL链接和文本。
- en: 'Create the `/path/to/codeigniter/application/views/common/top_nav.php` file
    and add the following code to it:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 创建`/path/to/codeigniter/application/views/common/top_nav.php`文件，并向其中添加以下代码：
- en: '[PRE41]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: The login view
  id: totrans-255
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 登录视图
- en: The login view displays the form and any errors to the admin user when he/she
    wants to log in.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 登录视图在管理员想要登录时向其显示表单和任何错误信息。
- en: 'Create the `/path/to/codeigniter/application/views/admin/login.php` file and
    add the following code to it:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 创建`/path/to/codeigniter/application/views/admin/login.php`文件，并向其中添加以下代码：
- en: '[PRE42]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: There's not too much to get into here—everything is as you would expect. We
    display a form to the user, giving them text fields to enter their e-mail address
    and password, and errors are displayed above the form.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 这里没有太多要说的——一切如你所预期。我们向用户显示一个表单，让他们输入他们的电子邮件地址和密码，错误信息显示在表单上方。
- en: The form is submitted to the `login()` function of the `admin` controller, which
    will handle the technical process of logging the user in. If the login is successful,
    the user is directed to the `dashboard()` function of the `admin` controller.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 表单提交给`admin`控制器的`login()`函数，该函数将处理用户的登录技术过程。如果登录成功，用户将被重定向到`admin`控制器的`dashboard()`函数。
- en: The login_header file
  id: totrans-261
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 登录头文件
- en: The `admin/login.php` file requires different files and resources from the rest
    of the discussion forum application. For this reason, we're going to create a
    header file that's specific to the login page.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: '`admin/login.php`文件需要与讨论论坛应用的其他部分不同的文件和资源。因此，我们将创建一个特定于登录页面的头文件。'
- en: 'Create the `/path/to/codeigniter/application/common/login_header.php` file
    and add the following code to it:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 创建`/path/to/codeigniter/application/common/login_header.php`文件，并向其中添加以下代码：
- en: '[PRE43]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Dashboard
  id: totrans-265
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 仪表板
- en: 'The dashboard view is able to display to the admin user (in this case, a moderator)
    all discussion forums and comments that are awaiting moderation. These are displayed
    in a table in a list format, each item having two options for the moderator: Allow
    and Disallow.'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 仪表板视图能够向管理员用户（在这种情况下，是一个版主）显示所有等待审核的讨论论坛和评论。这些内容以列表形式显示在表格中，每个项目都为版主提供两个选项：允许和禁止。
- en: Clicking on Allow will set the active status of the discussion (`discussions.ds_is_active`)
    or comment (`comments.cm_is_active`) to `1`, making them appear once more for
    general users to see. However, Disallow will delete them from the database. If
    it is a discussion forum being disallowed, then all comments associated with that
    discussion will also be deleted.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 点击允许将设置讨论（`discussions.ds_is_active`）或评论（`comments.cm_is_active`）的活跃状态为 `1`，使它们再次对普通用户可见。但是，禁止将它们从数据库中删除。如果禁止的是讨论论坛，则与该讨论相关联的所有评论也将被删除。
- en: 'Create the `/path/to/codeigniter/application/views/admin/dashboard.php` file
    and add the following code to it:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 `/path/to/codeigniter/application/views/admin/dashboard.php` 文件，并将以下代码添加到其中：
- en: '[PRE44]'
  id: totrans-269
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: The signin.css file
  id: totrans-270
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`signin.css` 文件'
- en: The `signin.css` file is required to display the login form correctly; this
    is the same `signin.css` file as the one that is available from the Twitter Bootstrap
    resource.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: '`signin.css` 文件是正确显示登录表单所必需的；这是与从 Twitter Bootstrap 资源中可用的 `signin.css` 文件相同的文件。'
- en: 'Create the `/path/to/codeigniter/bootstrap/css/signin.css` file and add the
    following code to it:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 `/path/to/codeigniter/bootstrap/css/signin.css` 文件，并将以下代码添加到其中：
- en: '[PRE45]'
  id: totrans-273
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Creating the controllers
  id: totrans-274
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建控制器
- en: 'We''re going to create three controllers for this application. These are as
    follows:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将为这个应用程序创建三个控制器。这些是：
- en: '`discussions.php`: This fetches discussions from the `discussions` table in
    the database and allows the user to create a new discussion'
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`discussions.php`: 这从数据库中的 `discussions` 表中获取讨论，并允许用户创建新的讨论'
- en: '`comments.php`: This fetches comments from the `comments` table in the database
    and allows the user to join a discussion by adding a comment to a discussion forum'
  id: totrans-277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`comments.php`: 这从数据库中的 `comments` 表中获取评论，并允许用户通过在讨论论坛中添加评论来加入讨论'
- en: '`admin.php`: This contains basic admin functions, login functionalities, and
    moderation options'
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`admin.php`: 这包含基本的行政功能、登录功能和审核选项'
- en: The discussions controller
  id: totrans-279
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 讨论控制器
- en: 'The `discussions.php` controller is responsible for the display of all valid
    discussions, processing the creation of new discussions and flagging any discussion
    for moderation. The `discussions` controller contains three functions, and these
    are as follows:'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: '`discussions.php` 控制器负责显示所有有效的讨论，处理新讨论的创建，并对任何讨论进行标记以供审核。`discussions` 控制器包含三个函数，如下所示：'
- en: '`index()`: This displays all valid discussions'
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`index()`: 这显示所有有效的讨论'
- en: '`create()`: This creates a new discussion, handling any form validation'
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`create()`: 这将创建一个新的讨论，并处理任何表单验证'
- en: '`flag()`: This processes a discussion for moderation by calling the `flag()`
    function of `discussions_model.php`, setting `discussions.ds_is_active` to `0`'
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`flag()`: 这通过调用 `discussions_model.php` 中的 `flag()` 函数，将 `discussions.ds_is_active`
    设置为 `0` 来处理讨论的审核'
- en: 'Create the `/path/to/codeigniter/application/controllers/discussions.php` file
    and add the following code to it:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 `/path/to/codeigniter/application/controllers/discussions.php` 文件，并将以下代码添加到其中：
- en: '[PRE46]'
  id: totrans-285
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: Taking each function one by one, we'll begin with `index()`. The `index()` function
    is responsible for displaying all active discussions to the user.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 逐个函数进行考虑，我们首先从 `index()` 函数开始。`index()` 函数负责向用户显示所有活跃的讨论。
- en: The code begins by checking to see whether there is a value in the third `uri`
    segment or not.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 代码首先检查第三个 `uri` 段中是否有值。
- en: If there is a value present, then this indicates that the user has pressed the
    sort's ascending or descending link; we'll discusses this in a moment but, for
    now, we'll assume that there is no value in the third segment.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 如果存在值，则表示用户已点击排序的升序或降序链接；我们将在稍后讨论这一点，但在此期间，我们假设第三部分没有值。
- en: As there is no value present, we set `$filter` and `$direction` to `NULL`, but
    we set `$page_data['dir']` to `ASC` (short for ascending). This is set because,
    initially, the discussion forums are displayed in descending order of their created
    date; however, the sorting link needs to be written in the opposite direction
    from what is currently being displayed. Setting `$page_data['dir']` to `ASC` (ascending)
    will enable the URL in the sort link to be ready for us should we need to click
    it.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 由于没有值，我们将 `$filter` 和 `$direction` 设置为 `NULL`，但将 `$page_data['dir']` 设置为 `ASC`（代表升序）。这是因为在最初，讨论论坛按创建日期的降序显示；然而，排序链接需要写成与当前显示相反的方向。将
    `$page_data['dir']` 设置为 `ASC`（升序）将使排序链接中的 URL 准备就绪，以便我们可能需要点击它。
- en: 'We then ask the `fetch_discussions()` function of `discussions_model.php` to
    get all active discussions, passing to it two variables as arguments: `$filter`
    and `$direction`. These are set to `null` by default. The `fetch_discussions()`
    function will know not to apply these filters.'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们要求 `discussions_model.php` 中的 `fetch_discussions()` 函数获取所有活跃讨论，并将两个变量作为参数传递给它：`$filter`
    和 `$direction`。这两个变量默认设置为 `null`。`fetch_discussions()` 函数将知道不要应用这些过滤器。
- en: The direction of the sort link will flip-flop between ascending and descending—always
    being the opposite of what is currently displayed. This flip-flopping is done
    in the view file (this might not be the best place for it if you're being strict,
    but I thought that this was a location that you would find obvious, so there you
    go).
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 排序链接的方向将在升序和降序之间翻转——始终与当前显示的相反。这种翻转是在视图文件中完成的（如果你非常严格，这可能不是最佳位置，但我认为这是一个你会觉得明显的地方，所以就这样吧）。
- en: Tip
  id: totrans-292
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Check out the code and explanation for the `discussions/view.php` view file
    earlier in this chapter for a full explanation of how the flip-flopping functions.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 查看本章前面关于 `discussions/view.php` 视图文件的代码和解释，以全面了解翻转功能。
- en: 'Let''s now look at the `create()` function; we initially set the validation
    rules and check to see whether the form has been submitted (or has been submitted
    with errors). Assuming that it has been submitted without errors, we save the
    post data in the `$data` array:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看 `create()` 函数；我们最初设置验证规则并检查表单是否已提交（或已提交带有错误）。假设它已无错误地提交，我们将帖子数据保存到
    `$data` 数组中：
- en: '[PRE47]'
  id: totrans-295
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: Once all the form elements are packaged into the `$data` array, we send it off
    to the `create()` function of `discussions_model` to write to the database.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦所有表单元素都打包到 `$data` 数组中，我们就将其发送到 `discussions_model` 的 `create()` 函数以写入数据库。
- en: If the insert operation was successful, the model will return the primary key
    of the new discussion but will return `false` if there was an error.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 如果插入操作成功，模型将返回新讨论的主键，如果出现错误，则返回 `false`。
- en: 'We test the return value of the insert operation. If the insert was successful,
    we redirect the user to the `index()` function of the `comments` controller, passing
    to it the `$ds_id` value that was returned by the model. The user can then see
    their discussion, which is ready to be commented on:'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 我们测试插入操作返回值。如果插入成功，我们将用户重定向到 `comments` 控制器的 `index()` 函数，并传递模型返回的 `$ds_id`
    值。用户然后可以看到他们的讨论，这已经准备好供评论：
- en: '[PRE48]'
  id: totrans-299
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: If there was an error, then we have no new primary key, so we can't redirect
    the user. This has been left blank in this project; you can implement your own
    policy for this behavior; perhaps you can send them an e-mail informing them about
    this or write an error to the screen.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 如果出现错误，则我们没有新的主键，因此无法重定向用户。在这个项目中，这已被留空；你可以实现自己的策略来处理这种行为；也许你可以通过电子邮件通知他们，或者将错误写入屏幕。
- en: The comments controller
  id: totrans-301
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`comments` 控制器'
- en: 'The `comments` controller manages all matters related to the flagging (for
    moderation) and creation of comments on discussions from users. The `comments`
    controller has two functions, and these are as follows:'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: '`comments` 控制器管理所有与标记（用于审核）和创建用户讨论评论相关的事项。`comments` 控制器有两个功能，具体如下：'
- en: '`index()`: This displays all comments for a specific discussion forum and handles
    the submission—that is, the validation of a user''s comment.'
  id: totrans-303
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`index()`: 这将显示特定讨论论坛的所有评论，并处理提交——即验证用户的评论。'
- en: '`flag()`: This allows a user to flag a comment for moderation by the admin.
    The `comments.cm_is_active` value in the database is set to `0` for the specific
    comment.'
  id: totrans-304
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`flag()`: 这允许用户标记一条评论供管理员审核。数据库中的 `comments.cm_is_active` 值对该特定评论设置为 `0`。'
- en: 'Create the `/path/to/codeigniter/application/controllers/comments.php` file
    and add the following code to it:'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 `/path/to/codeigniter/application/controllers/comments.php` 文件，并向其中添加以下代码：
- en: '[PRE49]'
  id: totrans-306
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: Let's start with the `index()` function. The `index()` function will begin by
    displaying all comments for a specific discussion. To do this, it needs to know
    what discussion to look at. So, let's go a step back. The `discussions` controller
    will display a list of active discussions.
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从 `index()` 函数开始。`index()` 函数将首先显示特定讨论的所有评论。为此，它需要知道要查看哪个讨论。所以，让我们回顾一下。`discussions`
    控制器将显示活跃讨论的列表。
- en: The following is a section of code from `discussions/view.php` that we looked
    at in greater detail earlier. This code will loop through a set of database results,
    displaying each active discussion in table rows.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是从我们之前更详细地查看的 `discussions/view.php` 文件中的代码段。此代码将遍历一组数据库结果，以表格行显示每个活跃的讨论。
- en: 'Check out the line highlighted in bold:'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 查看以下用粗体突出显示的行：
- en: '[PRE50]'
  id: totrans-310
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'This line displays the URL that enables the user to view the discussion and
    any comments associated with it by clicking on a discussion title link, which
    looks like the following:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 这行显示了用户可以通过点击讨论标题链接查看讨论及其相关评论的 URL，该链接看起来如下：
- en: '[PRE51]'
  id: totrans-312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: We can pass `id-of-discussion` as the third parameter of the link to the `index()`
    function of the `comments` controller. This is where we pick up the story. The
    `index()` function of the `comments` controller checks whether there is a third
    `uri` segment (if not, then it is possible that the form to create a comment has
    been submitted and would not exist in the `uri` segment).
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将 `id-of-discussion` 作为链接的第三个参数传递给 `comments` 控制器的 `index()` 函数。这就是我们接手故事的地方。`comments`
    控制器的 `index()` 函数检查是否存在第三个 `uri` 段（如果没有，则可能是创建评论的表单已被提交，而不会存在于 `uri` 段中）。
- en: 'It will grab the ID of the discussion and store it as the `$ds_id` variable:'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 它将获取讨论的 ID 并将其存储为 `$ds_id` 变量：
- en: '[PRE52]'
  id: totrans-315
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: We then define some validation rules for CodeIgniter to apply to the Add A Comment
    form at the bottom of the `comments/view.php` file.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们为 `comments/view.php` 文件底部的“添加评论”表单定义了一些验证规则，以便 CodeIgniter 应用。
- en: The `comments/view.php` file contains not only a `foreach()` loop to display
    the current comments on the selected discussion, but also a form with a name and
    e-mail text field and a body text area. This is where the user can enter their
    name, e-mail, and comment text and then submit the comment.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: '`comments/view.php` 文件不仅包含一个用于显示选定讨论当前评论的 `foreach()` 循环，还包含一个带有姓名和电子邮件文本字段以及正文文本区域的表单。这是用户可以输入他们的姓名、电子邮件和评论文本，然后提交评论的地方。'
- en: There is also a hidden field, named `ds_id`, that contains the primary key of
    the selected discussion. We need it in the form as a hidden element as, when the
    form is submitted, the third `uri` segment will disappear. Having the discussion
    ID as a hidden form element will allow `index()` to maintain a relationship between
    the comment and the discussion when the new comment form is submitted.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还有一个名为 `ds_id` 的隐藏字段，其中包含选定讨论的主键。我们需要在表单中将其作为隐藏元素，因为当表单提交时，第三个 `uri` 段将消失。将讨论
    ID 作为隐藏表单元素将允许 `index()` 在提交新评论表单时保持评论与讨论之间的关系。
- en: Assuming that there were no errors with the form and it is submitted without
    the need to report anything requiring the user's attention, the `index()` function
    attempts to write the comment to the `comments` table in the database.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 假设表单没有错误，并且无需报告需要用户注意的事项即可提交，`index()` 函数将尝试将评论写入数据库中的 `comments` 表。
- en: 'Before we do that, however, we need to package all our data into an array that
    will be passed to `Comments_model`. Take a look at the following code:'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 在此之前，我们需要将所有数据打包成一个数组，该数组将被传递给 `Comments_model`。请看以下代码：
- en: '[PRE53]'
  id: totrans-321
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'Here, you can see that we''ve got all the post elements including `ds_id` (highlighted
    in bold). This is now ready to be sent to the `new_comment()`model function for
    insertion into the database:'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你可以看到我们已经包含了所有帖子元素，包括 `ds_id`（用粗体突出显示）。现在它已准备好发送到 `new_comment()` 模型函数以将其插入数据库：
- en: '[PRE54]'
  id: totrans-323
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: The `new_comment()`model function will return `true` on a successful insertion
    and `false` otherwise. If it was successful, then we redirect the user to the
    `comments` controller's `index()` function and pass `$ds_id` as the third parameter
    where the `index()` function will begin, displaying all active comments associated
    with the selected discussion.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: '`new_comment()` 模型函数在成功插入时将返回 `true`，否则返回 `false`。如果成功，则将用户重定向到 `comments`
    控制器的 `index()` 函数，并将 `$ds_id` 作为第三个参数传递，`index()` 函数将从那里开始，显示与选定讨论相关的所有活跃评论。'
- en: Now, let's move on to the `flag()` function. The `flag()` function will enable
    the user to indicate that a comment requires moderation by an admin.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们继续到 `flag()` 函数。`flag()` 函数将使用户能够表明评论需要管理员进行审核。
- en: Stepping back to the `discussions` controller, the `discussions` controller
    will display a list of active discussions.
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 回到 `discussions` 控制器，`discussions` 控制器将显示活跃讨论的列表。
- en: 'The following is a section of code from `comments/view.php` that we looked
    at in greater detail earlier. This code will loop through a set of database results,
    displaying each active comment in a table of rows:'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是从`comments/view.php`中提取的代码片段，我们之前已经详细查看过。这段代码将遍历一组数据库结果，以表格形式显示每条活跃的评论：
- en: '[PRE55]'
  id: totrans-328
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'Take a look at the line highlighted in bold:'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 看一下加粗的行：
- en: '[PRE56]'
  id: totrans-330
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: This line contains a CodeIgniter `anchor()` statement with the `comments/flag/id-of-comment`
    URL. It is this line of code that creates the **flag** link next to each comment.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 这一行包含一个CodeIgniter的`anchor()`语句，带有`comments/flag/id-of-comment` URL。正是这一行代码在每条评论旁边创建了**标记**链接。
- en: 'Look at the third and fourth parameters. The third parameter is the discussion
    ID (`discussions.ds_id`) and the fourth is the comment ID (`comments.cm_id`);
    both are used in the `flag()` function of `comments_model`. The code for this
    looks as follows:'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 看看第三个和第四个参数。第三个参数是讨论ID（`discussions.ds_id`），第四个是评论ID（`comments.cm_id`）；这两个都在`comments_model`的`flag()`函数中使用。这段代码看起来如下：
- en: '[PRE57]'
  id: totrans-333
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: If the insert operation returns `true`, then we redirect the user to the `comments`
    controller's `index()` function along with the discussion forum ID.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 如果插入操作返回`true`，则我们将用户重定向到`comments`控制器的`index()`函数，并附带讨论论坛ID。
- en: The admin controller
  id: totrans-335
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 管理控制器
- en: 'The `admin` controller contains all the functions required to run the moderation
    of comments and discussions and to log users in. It contains the following functions:'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: '`admin`控制器包含运行评论和讨论审核以及登录用户所需的所有函数。它包含以下函数：'
- en: '`index()`: Every controller needs an index function and this is it. The `index()`
    function will check whether a user is logged in and redirect them elsewhere if
    not.'
  id: totrans-337
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`index()`：每个控制器都需要一个索引函数，这就是它。`index()`函数将检查用户是否已登录，如果没有，则将其重定向到其他地方。'
- en: '`login()`: The `login()` function handles the process of logging a user into
    the system.'
  id: totrans-338
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`login()`：`login()`函数处理用户登录系统的过程。'
- en: '`dashboard()`: This is responsible for displaying all comments and discussions
    that require moderation.'
  id: totrans-339
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dashboard()`：这个函数负责显示所有需要审核的评论和讨论。'
- en: '`update_item()`: This is responsible for applying the decision of the moderator,
    whether to approve or delete a comment or discussion.'
  id: totrans-340
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`update_item()`：这个函数负责应用管理员的决策，即是否批准或删除评论或讨论。'
- en: 'Create the `/path/to/codeigniter/application/controllers/admin.php` file and
    add the following code to it:'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 创建`/path/to/codeigniter/application/controllers/admin.php`文件，并向其中添加以下代码：
- en: '[PRE58]'
  id: totrans-342
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: Let's tackle this by first looking at the `index()` function. As the `admin`
    controller is only to be used by those logged in, the `index()` function will
    check to see whether an item called `logged_in` exists in the session. If `logged_in`
    is equal to `FALSE`, then it means that the user is not logged in, so they are
    redirected to the `login()` function.
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先从`index()`函数开始解决这个问题。由于`admin`控制器仅供已登录用户使用，`index()`函数将检查会话中是否存在名为`logged_in`的项目。如果`logged_in`等于`FALSE`，则表示用户未登录，因此他们将被重定向到`login()`函数。
- en: This is very simple and we won't spend more time on it; however, a more complicated
    function is `login()`. The `login()` function is responsible for—as the name suggests—managing
    the login process for the admin moderator.
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 这非常简单，我们不会在上面花费更多时间；然而，更复杂的函数是`login()`。正如其名称所示，`login()`函数负责管理管理员管理员的登录过程。
- en: The first thing `login()` does is define form validation rules for the `usr_email`
    and `usr_pwd` form elements. These will govern how the data submitted by the user
    in the `admin/login.php` view file is validated.
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: '`login()`函数的第一步是定义`usr_email`和`usr_pwd`表单元素的验证规则。这些规则将决定在`admin/login.php`视图文件中用户提交的数据如何进行验证。'
- en: 'We immediately test to see whether the form has been submitted:'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 我们立即测试以查看表单是否已提交：
- en: '[PRE59]'
  id: totrans-347
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: If the form hasn't been submitted, we'll load the view files to display the
    login form and wait for a response from the user.
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 如果表单未提交，我们将加载视图文件以显示登录表单，并等待用户的响应。
- en: 'However, if it has been submitted, then the form is validated against the validation
    criteria; if it passes validation, we try to work out whether the user exists
    in the database currently:'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果已经提交，则表单将根据验证标准进行验证；如果验证通过，我们尝试确定用户是否目前在数据库中存在：
- en: '[PRE60]'
  id: totrans-350
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'If exactly one matching e-mail address has been found, then we will try to
    work out whether the users'' password is correct. We load the CodeIgniter library
    using `$this->load->library(''encrypt'')` and generate a hash from the password
    that the user supplied in the login form:'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 如果恰好找到一个匹配的电子邮件地址，那么我们将尝试确定用户的密码是否正确。我们使用 `$this->load->library('encrypt')`
    加载 CodeIgniter 库，并从用户在登录表单中提供的密码生成一个哈希值：
- en: '[PRE61]'
  id: totrans-352
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'We then compare that hash with the hash stored in the database belonging to
    the user:'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 我们然后将该哈希值与数据库中属于用户的哈希值进行比较：
- en: '[PRE62]'
  id: totrans-354
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'If it does not match, then we load the login form and display an error message.
    However, if it does match, then the user must have typed the correct password;
    so we log them in by creating a CodeIgniter session for them:'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 如果不匹配，则我们加载登录表单并显示错误消息。然而，如果匹配，则用户必须已经输入了正确的密码；因此，我们通过为他们创建一个 CodeIgniter 会话来登录他们：
- en: '[PRE63]'
  id: totrans-356
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: The user is then redirected to the dashboard. The dashboard will display any
    comments and discussions that are required for moderation.
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 用户随后被重定向到仪表板。仪表板将显示任何需要审核的评论和讨论。
- en: Creating the language file
  id: totrans-358
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建语言文件
- en: As with all the projects in this book, we're making use of the language file
    to serve text to users. This way, you can enable multiple region/multiple language
    support.
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 与本书中的所有项目一样，我们正在使用语言文件来向用户提供服务。这样，你可以启用多区域/多语言支持。
- en: 'Create the `/path/to/codeigniter/application/language/english/en_admin_lang.php`
    file and add the following code to it:'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 `/path/to/codeigniter/application/language/english/en_admin_lang.php` 文件，并将其中的以下代码添加到该文件中：
- en: '[PRE64]'
  id: totrans-361
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: Putting it all together
  id: totrans-362
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将所有这些放在一起
- en: Now that we've created each file and resource necessary for the app, let's run
    through a few scenarios so that we can get a good idea of how it all works together.
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经创建了应用所需的所有文件和资源，让我们通过几个场景来运行，以便我们可以很好地了解它们是如何一起工作的。
- en: A user creates a discussion forum
  id: totrans-364
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用户创建一个讨论论坛
- en: 'Let''s consider an example where David visits the discussion forum in his browser.
    The following is the sequence of steps:'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑一个例子，David 在他的浏览器中访问讨论论坛。以下是一系列步骤：
- en: David clicks on the **New Discussion** link in the top navigation bar.
  id: totrans-366
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: David 点击顶部导航栏中的 **New Discussion** 链接。
- en: CodeIgniter loads the `create()` function in the `discussions` controller.
  id: totrans-367
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: CodeIgniter 在 `discussions` 控制器中加载了 `create()` 函数。
- en: The `create()` function displays the `discussions/new.php` view file, which
    displays a form to users, enabling them to enter their name, e-mail, discussion
    title, and discussion body text.
  id: totrans-368
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`create()` 函数显示 `discussions/new.php` 视图文件，该文件向用户显示一个表单，使他们能够输入他们的姓名、电子邮件、讨论标题和讨论正文文本。'
- en: David presses the **Go** button to submit the form. The form is submitted to
    the `discussion` controller's `create()` function.
  id: totrans-369
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: David 点击 **Go** 按钮提交表单。表单被提交到 `discussion` 控制器的 `create()` 函数。
- en: The `discussion` controller's `create()` function validates the form. Assuming
    there were no errors, the `create()` function packages the post data into an array
    and sends it to the `create()` function of `discussions_model`.
  id: totrans-370
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`discussion` 控制的 `create()` 函数验证表单。假设没有错误，`create()` 函数将帖子数据打包成一个数组，并将其发送到
    `discussions_model` 的 `create()` 函数。'
- en: The `create()` model function looks in the `users` database table to see whether
    the e-mail address already exists. If it does, the primary key of the user is
    returned and added to the Active Record insertion for the discussion. However,
    if the e-mail address doesn't exist, then the model function creates it. Instead,
    the primary key of this insertion is returned.
  id: totrans-371
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`create()` 模型函数会在 `users` 数据库表中查找电子邮件地址是否已存在。如果已存在，则返回用户的主键并将其添加到讨论的 Active
    Record 插入中。然而，如果电子邮件地址不存在，则模型函数会创建它。相反，返回这个插入的主键。'
- en: A password is created and a hash is generated from it. However, the password
    is not stored and David is not told what it is; this is perhaps a functionality
    you might not wish for, but you can easily add code to send David his password
    in an e-mail, should you wish.
  id: totrans-372
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个密码并从它生成一个哈希值。然而，密码不会被存储，David 也不会被告知密码是什么；这可能是一个你可能不希望的功能，但你可以轻松添加代码通过电子邮件发送
    David 他的密码，如果你希望的话。
- en: A user comments on a discussion forum
  id: totrans-373
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用户在讨论论坛上发表评论
- en: 'Let''s consider an example where Ed visits the discussion forum in his browser.
    The following is the sequence of events:'
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑一个例子，Ed 在他的浏览器中访问讨论论坛。以下是一系列事件：
- en: CodeIgniter loads the default controller—in this case, the `discussion` controller.
  id: totrans-375
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: CodeIgniter 加载默认控制器——在这种情况下，是 `discussion` 控制器。
- en: The `discussion` controller uses the `fetch_discussions()` function of `discussions_model`
    to get the latest discussions from the `discussions` database table and passes
    them to the `discussions/view.php` view file where they are displayed.
  id: totrans-376
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`discussion`控制器使用`discussions_model`的`fetch_discussions()`函数从`discussions`数据库表获取最新的讨论，并将它们传递到`discussions/view.php`视图文件中显示。'
- en: Ed likes the sound of one of the discussion forums and clicks on the name of
    the forum.
  id: totrans-377
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Ed喜欢其中一个讨论论坛的声音，点击了论坛的名称。
- en: CodeIgniter loads the `comments` controller's `index()` function. The `index()`
    function takes the third `uri` segment (the discussion forum ID—`discussions.ds_id`)
    and passes it to the `fetch_comments()` function of `comments_model`.
  id: totrans-378
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: CodeIgniter加载了`comments`控制器的`index()`函数。`index()`函数获取第三个`uri`段（讨论论坛ID—`discussions.ds_id`），并将其传递给`comments_model`的`fetch_comments()`函数。
- en: The comments are displayed in the `comments/view.php` view file.
  id: totrans-379
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 评论在`comments/view.php`视图文件中显示。
- en: Ed reads the comment history and decides that the world would benefit from his
    opinion.
  id: totrans-380
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Ed阅读了评论历史，并认为世界会从他的观点中受益。
- en: Ed scrolls to the bottom of the page where the form to add a comment is present.
    Ed enters his name, e-mail, and comment and clicks on **Go**.
  id: totrans-381
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Ed滚动到页面底部，那里有添加评论的表单。Ed输入了他的名字、电子邮件和评论，然后点击了**Go**。
- en: The form is submitted to the `create()` function of `comments`. The `create()`
    function will validate the form. Assuming there were no errors, the `create()`
    function packages the post data into an array and sends it to the `create()` function
    of `comments_model`.
  id: totrans-382
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 表单提交到`comments`的`create()`函数。`create()`函数将验证表单。假设没有错误，`create()`函数将把表单数据打包成一个数组，并将其发送到`comments_model`的`create()`函数。
- en: The `create()` model function looks in the `users` database table to see whether
    the e-mail address already exists. If it does, the primary key of the user is
    returned and added to the Active Record insertion for the comment. However, if
    the e-mail address doesn't exist, then the model function creates it. Instead,
    the primary key of this insertion is returned.
  id: totrans-383
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`create()`模型函数检查`users`数据库表，看电子邮件地址是否已经存在。如果存在，则返回用户的主键并将其添加到评论的Active Record插入中。然而，如果电子邮件地址不存在，则模型函数会创建它。在这种情况下，返回插入的主键。'
- en: A password is created and a hash is generated from it. However, the password
    is not stored and Ed is not told what it is; this is perhaps a functionality you
    might not wish for, but you can easily add code to send Ed his password in an
    e-mail, should you wish.
  id: totrans-384
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建了一个密码，并从它生成了一个哈希值。但是，密码不会被存储，Ed也不会被告知密码是什么；这可能是一个你可能不希望的功能，但如果你希望，你可以轻松地添加代码通过电子邮件发送Ed他的密码。
- en: Ed is redirected to the discussion forum where he can see his comment.
  id: totrans-385
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Ed被重定向到讨论论坛，在那里他可以看到他的评论。
- en: A user dislikes a comment and flags it for moderation
  id: totrans-386
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一个用户不喜欢一条评论并将其标记为需要审核
- en: 'Let''s consider an example where Nigel is looking through a discussion and
    sees a comment that he feels is necessary for moderation. The sequence of steps
    is as follows:'
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑一个例子，其中Nigel正在查看一个讨论，并看到一条他认为有必要进行审核的评论。步骤如下：
- en: Outraged, he presses the **flag** link next to the comment.
  id: totrans-388
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 他非常愤怒，按下了评论旁边的**flag**链接。
- en: CodeIgniter loads the `flag()` function of `comments`. The URL that is used
    to access this is `comments/flag/id-of-discussion/id-of-comment`.
  id: totrans-389
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: CodeIgniter加载了`comments`的`flag()`函数。用于访问此函数的URL是`comments/flag/id-of-discussion/id-of-comment`。
- en: CodeIgniter passes `id-of-comment` to the `flag()` function of `comments_model`,
    which will set `comments.cm_is_active` to `0`. This removes the comment from the
    discussion and places it in the moderation dashboard.
  id: totrans-390
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: CodeIgniter将`id-of-comment`传递给`comments_model`的`flag()`函数，这将把`comments.cm_is_active`设置为`0`。这将从讨论中移除评论并将其放入审核仪表板。
- en: If the update of the comment was successful, CodeIgniter will redirect Nigel
    to the discussion he was looking at.
  id: totrans-391
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果评论更新成功，CodeIgniter将重定向Nigel到他所查看的讨论。
- en: A moderator reviews comments awaiting moderation
  id: totrans-392
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一个审核员审查等待审核的评论
- en: 'Let''s consider an example where Nick logs in to his admin account. The sequence
    of steps is as follows:'
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑一个例子，其中Nick登录到他的管理员账户。步骤如下：
- en: The `admin` controller loads the `dashboard()` function.
  id: totrans-394
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`admin`控制器加载了`dashboard()`函数。'
- en: The `dashboard()` function loads a list of comments and discussions waiting
    for moderation.
  id: totrans-395
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`dashboard()`函数加载了等待审核的评论和讨论列表。'
- en: 'Nick sees the full text of comments and discussions along with two options:
    **Allow** and **Disallow**.'
  id: totrans-396
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Nick看到了评论和讨论的全文，以及两个选项：**允许**和**禁止**。
- en: Nick sees that there are two comments that require moderation.
  id: totrans-397
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尼克看到有两个评论需要审核。
- en: Nick reads the first comment and decides that it is fine; he clicks on the **Allow**
    link. The structure of the link is `admin/update_item/cm/allow/id-or-comment`.
  id: totrans-398
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尼克阅读了第一条评论并决定它是可以接受的；他点击了**允许**链接。链接的结构是 `admin/update_item/cm/allow/id-or-comment`。
- en: CodeIgniter loads the `update_item()` function of `admin`.
  id: totrans-399
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: CodeIgniter 加载了 `admin` 的 `update_item()` 函数。
- en: 'The `update_item()` function gets the type of thing that needs to be updated
    (comment: `cm` and discussion: `ds`); in this case, Nick is updating a comment
    to the first segment in `uri`, which is `cm`. The second `uri` segment is `allow`
    and the third `uri` segment is the ID of the comment (`comments.cm_id`).'
  id: totrans-400
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`update_item()` 函数获取需要更新的项目类型（评论：`cm` 和讨论：`ds`）；在这种情况下，尼克正在更新 `uri` 中的第一个段落的评论，即
    `cm`。第二个 `uri` 段落是 `allow`，第三个 `uri` 段落是评论的 ID (`comments.cm_id`)。'
- en: The `update_comments()` function of `admin_model` is called, setting `comments.cm_is_active`
    to `1`. This allows the comment to be displayed once more.
  id: totrans-401
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`admin_model` 的 `update_comments()` 函数被调用，将 `comments.cm_is_active` 设置为 `1`。这允许评论再次显示。'
- en: Nick also notices the one remaining comment waiting for moderation. He reads
    the comment and decides that it's probably not the best comment and he wishes
    to remove it.
  id: totrans-402
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尼克还注意到还有一条待审核的评论。他阅读了评论并认为这或许不是最好的评论，他希望将其删除。
- en: He clicks on the **Disallow** link. The structure of the link is `admin/update_item/cm/disallow/id-or-comment`.
  id: totrans-403
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 他点击了**拒绝**链接。链接的结构是 `admin/update_item/cm/disallow/id-or-comment`。
- en: CodeIgniter loads the `update_item()` function of `admin`.
  id: totrans-404
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: CodeIgniter 加载了 `admin` 的 `update_item()` 函数。
- en: 'The `update_item()` function gets the type of thing that needs to be updated
    (comment: `cm` and discussion: `ds`); in this case, Nick is updating a comment
    to the first segment in `uri`, which is `cm`. The second `uri` segment is `disallow`
    and the third `uri` segment is the ID of the comment (`comments.cm_id`).'
  id: totrans-405
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`update_item()` 函数获取需要更新的项目类型（评论：`cm` 和讨论：`ds`）；在这种情况下，尼克正在更新 `uri` 中的第一个段落的评论，即
    `cm`。第二个 `uri` 段落是 `disallow`，第三个 `uri` 段落是评论的 ID (`comments.cm_id`)。'
- en: The `update_comments()` function of `admin_model` is called. As `$is_active`
    is set to `0`, we will not allow the comment to be displayed but will delete it.
    A PHP if/else statement works out the value of `$is_active`, the else section
    is executed, and a MySQL `DELETE` command is called, deleting the comment from
    the database permanently.
  id: totrans-406
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`admin_model` 的 `update_comments()` 函数被调用。由于 `$is_active` 被设置为 `0`，我们不会允许评论显示，而是将其删除。PHP
    的 if/else 语句计算出 `$is_active` 的值，执行 else 部分，并调用 MySQL 的 `DELETE` 命令，永久地从数据库中删除评论。'
- en: Summary
  id: totrans-407
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: We have done a lot in this chapter; we've created many files and there's a lot
    to take in. However, this project gives you the base system for a discussion forum.
    You might wish to add user management (particularly when it comes to sending the
    user their password), assuming you want people to log in? What would they do once
    they are logged in? These are for you to define, but you now have the base system;
    this allows you to build more.
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在本章中做了很多工作；我们创建了多个文件，有很多内容需要吸收。然而，这个项目为你提供了一个讨论论坛的基础系统。你可能希望添加用户管理（尤其是当涉及到发送用户密码时），假设你希望人们登录？一旦他们登录后，他们会做什么？这些都是由你来定义的，但现在你已经有了基础系统；这允许你构建更多。
