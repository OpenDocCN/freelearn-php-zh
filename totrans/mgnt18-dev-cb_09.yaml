- en: Chapter 9. Creating a Shipping Module
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9章。创建配送模块
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Initializing module configurations
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 初始化模块配置
- en: Writing an adapter model
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编写适配器模型
- en: Extending the shipping method features
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扩展配送方法功能
- en: Adding the module in the frontend
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在前端添加模块
- en: Introduction
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: Shipping ordered products to customers is one of the key parts of the e-commerce
    flow. In most cases, a shop owner has a contract with a shipping handler where
    everyone has their own business rules.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 将订购的产品配送给客户是电子商务流程中的关键部分。在大多数情况下，店主与配送处理商有合同，每个人都有自己的业务规则。
- en: 'In a standard Magento, the following shipping handlers are supported:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在标准 Magento 中，以下配送处理程序得到支持：
- en: DHL
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DHL
- en: FedEx
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: FedEx
- en: UPS
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: UPS
- en: USPS
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: USPS
- en: If your handler is not on the list, have a look if there is a module available
    at Magento Connect. If not, you can configure a standard shipping method or you
    can create your own, which we will do in this chapter.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的处理程序不在列表中，请查看 Magento Connect 上是否有可用的模块。如果没有，您可以配置标准配送方法，或者您可以创建自己的，我们将在本章中这样做。
- en: Initializing module configurations
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 初始化模块配置
- en: In [Chapter 4](ch04.html "Chapter 4. Creating a Module"), *Creating a Module*,
    we learned how we can create a custom module. In this recipe, we will create the
    necessary files for a shipping module, which we will extend with more features
    using the recipes of this chapter.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第4章](ch04.html "第4章。创建模块")“创建模块”中，我们学习了如何创建自定义模块。在本食谱中，我们将创建一个配送模块所需的文件，我们将使用本章的食谱扩展更多功能。
- en: Getting ready
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Open your code editor with the Magento project. Also, get access to the backend
    where we will check some things.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Magento 项目打开您的代码编辑器。同时，获取后端访问权限，我们将检查一些内容。
- en: How to do it...
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'The following steps describe how we can create the configuration for a shipping
    module:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤描述了我们可以如何为配送模块创建配置：
- en: 'Create the following folders:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建以下文件夹：
- en: '`app/code/local/Packt/`'
  id: totrans-21
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`app/code/local/Packt/`'
- en: '`app/code/local/Packt/Shipme/`'
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`app/code/local/Packt/Shipme/`'
- en: '`app/code/local/Packt/Shipme/etc/`'
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`app/code/local/Packt/Shipme/etc/`'
- en: '`app/code/local/Packt/Shipme/Model/`'
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`app/code/local/Packt/Shipme/Model/`'
- en: '`app/code/local/Packt/Shipme/Model/Carrier`'
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`app/code/local/Packt/Shipme/Model/Carrier`'
- en: 'Create the module file named `Packt_Shipme.xml` in the folder `app/etc/modules`
    with the following content:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`app/etc/modules`文件夹中创建一个名为`Packt_Shipme.xml`的模块文件，内容如下：
- en: '[PRE0]'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Create a `config.xml` file in the folder `app/code/local/Packt/Shipme/etc/`
    with the following content:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`app/code/local/Packt/Shipme/etc/`文件夹中创建一个名为`config.xml`的文件，内容如下：
- en: '[PRE1]'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Clear the cache and navigate in the backend to **System** | **Configuration**
    | **Advanced** | **Disable Modules Output**. Observe that the `Packt_Shipme` module
    is on the list.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 清除缓存，并在后端导航到**系统** | **配置** | **高级** | **禁用模块输出**。观察`Packt_Shipme`模块是否在列表中。
- en: At this point, the module is initialized and working. Now, we have to create
    a `system.xml` file where we will put the configuration parameters for our shipping
    module. Create the file `app/code/local/Packt/Shipme/etc/system.xml`.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 到目前为止，模块已初始化并开始工作。现在，我们必须创建一个`system.xml`文件，我们将在此文件中放置配送模块的配置参数。创建文件`app/code/local/Packt/Shipme/etc/system.xml`。
- en: 'In this file, we will create the configuration parameters for our shipping
    module. When you paste the following code in the file, you will create an extra
    group in the shipping method''s configuration. In this group, we can set the settings
    for the new shipping method:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在此文件中，我们将为我们的配送模块创建配置参数。当您将以下代码粘贴到文件中时，您将在配送方法的配置中创建一个额外的组。在这个组中，我们可以为新配送方法设置设置：
- en: '[PRE2]'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Clear the cache and navigate in the backend to the shipping method configuration
    page. To do that, navigate to **System** | **Configuration** | **Sales** | **Shipping
    methods**. You will see that an extra group is added as shown in the following
    screenshot:![How to do it...](img/3329OS_09_01.jpg)
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 清除缓存，并在后端导航到配送方法配置页面。为此，导航到**系统** | **配置** | **销售** | **配送方法**。您将看到添加了一个额外的组，如下面的截图所示：![如何操作...](img/3329OS_09_01.jpg)
- en: 'You will see that there is a new shipping method called **Shipme**. We will
    extend this configuration with some values. Add the following code under the `<fields>`
    tag of the module:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将看到有一个名为**Shipme**的新配送方法。我们将为此配置添加一些值。在模块的`<fields>`标签下添加以下代码：
- en: '[PRE3]'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Clear the cache and reload the backend. You will now see the other configurations
    under the **Shipme – Express** shipping method as shown in the following screenshot:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 清除缓存并重新加载后端。你现在将看到以下截图所示的**Shipme – 快递**运输方法下的其他配置：
- en: '![How to do it...](img/3329OS_09_02.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作...](img/3329OS_09_02.jpg)'
- en: How it works...
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: 'The first thing we have done is to create the necessary files to initialize
    the module. The following files are required to initialize a module:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先做的事情是创建初始化模块所需的必要文件。以下是需要初始化模块的文件：
- en: '`app/etc/modules/Packt_Shipme.xml`'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`app/etc/modules/Packt_Shipme.xml`'
- en: '`app/code/local/Packt/Shipme/etc/config.xml`'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`app/code/local/Packt/Shipme/etc/config.xml`'
- en: In the first file, we will activate the module with the `<active>` tag. The
    `<codePool>` tag describes that the module is located in the local code pool,
    which represents the folder `app/code/local/`.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一个文件中，我们将使用`<active>`标签激活模块。`<codePool>`标签描述了该模块位于本地代码库中，代表`app/code/local/`文件夹。
- en: In this file, there is also the `<depends>` tag. First this will check if the
    `Mage_Shipping` module is installed or not. If not, Magento will throw an exception.
    If the module is available, the dependency will load this module after the `Mage_Shipping`
    module. This makes it possible to rewrite some values from the `Mage_Shipping`
    module.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在此文件中，还有一个`<depends>`标签。首先，这将检查`Mage_Shipping`模块是否已安装。如果没有安装，Magento将抛出异常。如果模块可用，依赖关系将在`Mage_Shipping`模块之后加载此模块。这使得重写`Mage_Shipping`模块中的一些值成为可能。
- en: 'In the second file, `config.xml`, we configured all the stuff that we will
    need in this module. These are the following things:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在第二个文件`config.xml`中，我们配置了在这个模块中所需的所有内容。以下是需要配置的以下事项：
- en: The version number (`0.0.1`)
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 版本号（`0.0.1`）
- en: The models
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模型
- en: Some default values for the configuration values
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置值的默认值
- en: The last thing we did was create a `system.xml` file so that we can create a
    custom configuration for the shipping module.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 我们最后做的事情是创建一个`system.xml`文件，以便我们可以为运输模块创建自定义配置。
- en: The configuration in the `system.xml` file adds some extra values to the shipping
    method configuration, which is available in the backend under the menu **System**
    | **Configuration** | **Sales** | **Shipping methods**.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '`system.xml`文件中的配置向运输方法配置中添加了一些额外的值，这些值在**系统** | **配置** | **销售** | **运输方法**菜单下的后端中可用。'
- en: 'In this module, we created a new shipping handler called `Shipme`. Within this
    handler, you can configure two shipping options: **express** and **business**.
    In the `system.xml` file, we created the fields to configure the visibility, name,
    and price of the options.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个模块中，我们创建了一个新的运输处理器，称为`Shipme`。在这个处理器中，你可以配置两个运输选项：**快递**和**商务**。在`system.xml`文件中，我们创建了配置选项可见性、名称和价格的字段。
- en: See also
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参考信息
- en: In this recipe, we used the `system.xml` file of the module to create the configuration
    values. You can find information about this in the *Extending the system configuration*
    recipe from [Chapter 7](ch07.html "Chapter 7. Magento Backend"), *Magento Backend*.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个配方中，我们使用了模块的`system.xml`文件来创建配置值。你可以在*扩展系统配置*配方中找到有关信息，该配方来自第7章，*Magento后端*。
- en: Writing an adapter model
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在前端设置运输方法的标题
- en: A new shipping module is initialized in the previous recipe. What we did in
    the previous recipe was a preparation to continue with the business part we will
    see in this recipe. We will add a model with the business logic for the shipping
    method. The model is called an **adapter** class because Magento requires an adapter
    class for each shipping method. This class will extend the `Mage_Shipping_Model_Carrier_Abstract`
    class.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一个配方中初始化了一个新的运输模块。在上一个配方中我们所做的是为继续本配方中将要看到的业务部分做准备。我们将添加一个具有运输方法业务逻辑的模型。这个模型被称为**适配器**类，因为Magento要求为每个运输方法提供一个适配器类。这个类将扩展`Mage_Shipping_Model_Carrier_Abstract`类。
- en: 'This class will be used for the following things:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这个类将用于以下事项：
- en: Make the shipping method available
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使运输方法可用
- en: Calculate the shipping costs
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计算运输费用
- en: Set the title in the frontend of the shipping methods
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在前端设置运输方法的标题
- en: How to do it...
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Perform the following steps to create the adapter class for the shipping method:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤以创建用于运输方法的适配器类：
- en: Create the folder `app/code/local/Packt/Shipme/Model/Carrier` if it doesn't
    already exist.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果不存在，创建`app/code/local/Packt/Shipme/Model/Carrier`文件夹。
- en: 'In this folder, create a file named `Shipme.php` and add the following content
    to it:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这个文件夹中，创建一个名为`Shipme.php`的文件，并将以下内容添加到其中：
- en: '[PRE4]'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Save the file and clear the cache; your adapter model has now created.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件并清除缓存；现在你的适配器模型已经创建。
- en: How it works...
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The previously created class handles all the business logic that is needed for
    the shipping method. Because this adapter class is an extension of the `Mage_Shipping_Model_Carrier_Abstract`
    class, we can overwrite some methods to customize the business logic of the standard.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 之前创建的类处理了所有需要的运输方法业务逻辑。因为这个适配器类是`Mage_Shipping_Model_Carrier_Abstract`类的扩展，我们可以覆盖一些方法来自定义标准业务逻辑。
- en: The first method we overwrite is the `isAvailable()` function. In this function,
    we have to return `true` or `false` to say that the module is active. In our code,
    we will activate the module based on the system configuration field `active`.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 我们覆盖的第一个方法是`isAvailable()`函数。在这个函数中，我们必须返回`true`或`false`来说明该模块是激活的。在我们的代码中，我们将根据系统配置字段`active`激活模块。
- en: The second method is the `collectRates()` function. This function is used to
    set the right parameters for every shipping method. For every shipping method,
    we can set the title and price.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个方法是`collectRates()`函数。这个函数用于为每个运输方法设置正确的参数。对于每个运输方法，我们可以设置标题和价格。
- en: 'The class implements the interface `Mage_Shipping_Model_Carrier_Interface`.
    In this interface, two functions are declared: the `isTrackingAvailable()` and
    `getAllowedMethods()` functions.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 该类实现了`Mage_Shipping_Model_Carrier_Interface`接口。在这个接口中，声明了两个函数：`isTrackingAvailable()`和`getAllowedMethods()`函数。
- en: We created the function `getAllowedMethods()` in the adapter class. The `isTrackingAvailable()`
    function is declared in the parent class `Mage_Shipping_Model_Carrier_Abstract`.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在适配器类中创建了`getAllowedMethods()`函数。`isTrackingAvailable()`函数在父类`Mage_Shipping_Model_Carrier_Abstract`中声明。
- en: We configured two options under the **Shipme** shipping method. These options
    are called **Express delivery** and **Business delivery**. We will check if they
    are enabled in the configuration and set the configured title and price for each
    option.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在**Shipme**运输方法下配置了两个选项。这些选项被称为**Express delivery**和**Business delivery**。我们将检查它们是否在配置中启用，并为每个选项设置配置的标题和价格。
- en: The last thing to do is return the right values. We have to return an instance
    of the class `Mage_Shipping_Model_Rate_Result`. We created an empty instance of
    the class, where we will append the methods to when they are available.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 最后要做的事情是返回正确的值。我们必须返回一个`Mage_Shipping_Model_Rate_Result`类的实例。我们创建了一个空的实例，当方法可用时，我们将附加方法。
- en: To add a method, we have to use the function `append($method)`. This function
    requires an instance of the class `Mage_Shipping_Model_Rate_Result_Method` that
    we created in the two `if` statements.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 要添加一个方法，我们必须使用`append($method)`函数。这个函数需要一个`Mage_Shipping_Model_Rate_Result_Method`类的实例，我们在两个`if`语句中创建了它。
- en: Extending the shipping method features
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 扩展运输方法功能
- en: When all the files are installed, we can add more features to the shipping method.
    In this recipe, we will add a country configuration and we will enable tracking
    codes for the shipping method.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 当所有文件安装完成后，我们可以为运输方法添加更多功能。在这个菜谱中，我们将添加国家配置，并启用运输方法的跟踪代码。
- en: How to do it...
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Perform the following steps to tracking codes and country-specific shipping:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤以跟踪代码和特定国家运输：
- en: Open the adapter file `app/code/local/Packt/Shipme/Model/Carrier/Shipme.php`.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开适配器文件`app/code/local/Packt/Shipme/Model/Carrier/Shipme.php`。
- en: 'Add the following function in this file to enable tracking codes:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在此文件中添加以下函数以启用跟踪代码：
- en: '[PRE5]'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Tracking codes are now enabled for the `Shipme` shipping methods.
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在已为`Shipme`运输方法启用了跟踪代码。
- en: 'To enable country-specific shipping, we have to add some configuration fields
    in the `system.xml` file of the module. Add the following code as the child of
    the `<fields>` tag:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要启用特定国家的运输，我们必须在模块的`system.xml`文件中添加一些配置字段。将以下代码作为`<fields>`标签的子标签添加：
- en: '[PRE6]'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Clear the cache and open the configuration page of the shipping method. You
    will see that there are two new configuration options. When you change **Ship
    to Applicable Countries** to **Specific Countries**, you can select multiple countries
    as seen in the following screenshot:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 清除缓存并打开运输方法的配置页面。你会看到有两个新的配置选项。当你将**Ship to Applicable Countries**改为**Specific
    Countries**时，你可以选择多个国家，如以下截图所示：
- en: '![How to do it...](img/3329OS_09_03.jpg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作...](img/3329OS_09_03.jpg)'
- en: How it works...
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The first thing we did was enable the possibility to create tracking codes for
    the `Shipme` shipping method. We overwrote the `isTrackingAvailable()` function,
    which returns the standard `false`. By returning `true`, we enable the tracking
    codes.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先做的事情是启用为`Shipme`发货方式创建跟踪号码的可能性。我们覆盖了`isTrackingAvailable()`函数，它返回标准的`false`。通过返回`true`，我们启用了跟踪号码。
- en: The second thing we did was enable country-specific shipping. We configured
    two fields with a standard naming convention. When we enable the configuration
    in the backend, we can only use the shipping method when the shipping address
    is in one of the selected countries.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 我们做的第二件事是启用特定国家的发货。我们配置了两个具有标准命名约定的字段。当我们在后端启用配置时，我们只能在发货地址位于所选国家之一时使用发货方式。
- en: Adding the module in the frontend
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在前端添加模块
- en: In this recipe, we will test that the shipping method appears in the frontend.
    We prepared the code and configuration in the previous recipes to make this possible.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将测试发货方式在前端是否出现。我们在之前的菜谱中准备了代码和配置，以便实现这一点。
- en: How to do it...
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'In this recipe, we will check the configuration and place a test order with
    the new shipping method:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将检查配置并使用新的发货方式下订单：
- en: Log in to the admin panel.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到管理面板。
- en: Navigate to the shipping methods page by going to **System** | **Configuration**
    | **Sales** | **Shipping methods**.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过访问**系统** | **配置** | **销售** | **发货方式**导航到发货方式页面。
- en: Check that all the values are correct for the **Shipme – Express** method. Also
    make sure it is enabled.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查**Shipme – 快递**方式的所有值是否正确。同时确保它已启用。
- en: Save the configuration.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存配置。
- en: Go to the frontend, add a product to the shopping cart, and checkout.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往前端，将产品添加到购物车，并结账。
- en: Fill in the right data for the billing and shipping steps.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写账单和发货步骤的正确数据。
- en: In the shipping method step, new methods will appear as shown in the following
    screenshot:![How to do it...](img/3329OS_09_04.jpg)
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在发货方式步骤中，将出现新的方法，如下截图所示：![如何操作...](img/3329OS_09_04.jpg)
- en: Select a method from the list and click on the **Continue** button.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从列表中选择一个方法并点击**继续**按钮。
- en: In the payment method step, choose the **Check Money Order** method.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在支付方式步骤中，选择**支票汇款**方法。
- en: Tip
  id: totrans-103
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: If you don't see the **Check Money Order** payment method, you have to enable
    it in the system configuration.
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你看不到**支票汇款**支付方式，你必须在其系统配置中启用它。
- en: Click **Continue** and place the order. You will see the success page.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**继续**并下订单。你将看到成功页面。
- en: In the backend, go to **Sales** | **Orders** and click on the latest order.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在后端，前往**销售** | **订单**并点击最新的订单。
- en: To complete the order, we have to create an invoice for it to confirm that the
    order is paid. When you click on the **Invoice** button, you will be redirected
    to the invoice form where you can submit your invoice.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了完成订单，我们必须为它创建一个发票以确认订单已付款。当你点击**发票**按钮时，你将被重定向到发票表单，你可以提交你的发票。
- en: When the invoice is saved, you will see that the status of the order has changed
    to **Processing**. When the status is **Processing**, you can click on the **Ship**
    button to create the shipment. You will see the following screen:![How to do it...](img/3329OS_09_05.jpg)
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当发票保存时，你会看到订单状态已变为**处理中**。当状态为**处理中**时，你可以点击**发货**按钮来创建发货。你将看到以下屏幕：![如何操作...](img/3329OS_09_05.jpg)
- en: When you click on the **Add Tracking Number** button, choose the **Shipme shipping**
    option from the drop-down and add a tracking code such as `1234567890`:![How to
    do it...](img/3329OS_09_06.jpg)
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你点击**添加跟踪号码**按钮时，从下拉菜单中选择**Shipme 发货**选项，并添加一个跟踪号码，例如`1234567890`：![如何操作...](img/3329OS_09_06.jpg)
- en: When you click on the **Submit Shipment** button, your shipment is processed
    and the status of the order will change to **Complete**.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你点击**提交发货**按钮时，你的发货将被处理，订单状态将变为**完成**。
- en: How it works...
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In this recipe, we tested the shipping method that we created in this chapter.
    We placed an order with the new shipping method to check that everything works
    the way we wanted it to.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们测试了本章中创建的发货方式。我们使用新的发货方式下订单，以检查一切是否按预期工作。
