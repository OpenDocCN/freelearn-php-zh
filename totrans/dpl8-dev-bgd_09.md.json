["```php\n    $ drush dl views_field_vies\n    Project views_field_view (8.x-1.0-beta2) downloaded to /var/www/html/d8dev/modules/views_field_view.  [success] \n    $ drush en views_field_view \n    The following extensions will be enabled: views_field_view \n    Do you really want to continue? (y/n): y \n    views_field_view was enabled successfully. [ok]\n\n    ```", "```php\n<div id=\"tabs\">\n  <ul>\n    <li><a href=\"#tabs-1\">Tab1 title</a></li>\n    <li><a href=\"#tabs-2\">Tab2 title</a></li>\n    <li><a href=\"#tabs-3\">Tab3 title</a></li>\n  </ul>\n  <div id=\"tabs-1\">\n    <p>Tab1 content</p>\n  </div>\n  <div id=\"tabs-2\">\n    <p>Tab2 content</p>\n  </div>\n  <div id=\"tabs-3\">\n    <p>Tab3 content</p>\n  </div>\n</div>\n```", "```php\n<div>\n  <ul>\n    <li>content 1</li>\n    <li>content 2</li>\n  </ul>\n</div>\n```", "```php\n      name: Views semantic tabs\n      type: module\n      description: Provides a views style plugin to display views results in jQuery UI Tabs.\n      core: 8.x\n      package: Views\n      dependencies:\n        - views\n    ```", "```php\n    <?php\n\n    /**\n     * @file\n     * Contains \\Drupal\\views\\Plugin\\views\\style\\HtmlList.\n     */\n\n    namespace Drupal\\views_semantic_tabs\\Plugin\\views\\style;\n\n    use Drupal\\Core\\Form\\FormStateInterface;\n    use Drupal\\views\\Plugin\\views\\style\\StylePluginBase;\n\n    /**\n     * Style plugin to render each item in an ordered or unordered list.\n     *\n     * @ViewsStyle(\n     *   id = \"views_semantic_tabs\",\n     *   title = @Translation(\"Semantic tabs\"),\n     *   help = @Translation(\"Configurable semantic tabs for views fields.\"),\n     *   theme = \"views_semantic_tabs_format\",\n     *   display_types = {\"normal\"}\n     * )\n     */\n    class ViewsSemanticTabs extends StylePluginBase {\n\n      /**\n       * Does the style plugin allows to use style plugins.\n       *\n       * @var bool\n       */\n      protected $usesRowPlugin = TRUE;\n\n      /**\n       * Does the style plugin support custom css class for the rows.\n       *\n       * @var bool\n       */\n      protected $usesRowClass = TRUE;\n\n        /**\n         * Does the style plugin support grouping of rows.\n         *\n         * @var bool\n         */\n        protected $usesGrouping = FALSE;\n\n      /**\n       * Set default options\n       */\n      protected function defineOptions() {\n        $options = parent::defineOptions();\n        $options['group'] = array('default' => array());\n        return $options;}\n\n      /**\n       * Render the given style.\n       */\n      public function buildOptionsForm(&$form, FormStateInterface $form_state) {\n          parent::buildOptionsForm($form, $form_state);\n          $options = array('' => $this->t('- None -'));\n          $field_labels = $this->displayHandler->getFieldLabels(TRUE);\n          $options += $field_labels;\n          $grouping = $this->options['group'];\n          $form['group'] = array(\n              '#type' => 'select',\n              '#title' => $this->t('Grouping field'),\n              '#options' => $options,\n              '#default_value' => $grouping,\n              '#description' => $this->t('You should specify a field by which to group the records.'),\n              '#required' => TRUE,\n          );\n      }\n    }\n    ```", "```php\n    <div class=\"views-semantic-tabs\">\n        <ul>\n            {% set i = 1 %}\n            {% for row in rows.group %}\n              <li><a href=\"#tabs-{{ i }}\">{{ row }}</a></li>\n            {% set i = i + 1 %}\n            {% endfor %}\n        </ul>\n        {% set j = 1 %}\n        {% for row in rows %}\n                <div id=\"tabs-{{ j }}\">{{ row.content }}</div>\n            {% set j = j + 1 %}\n        {% endfor %}\n    </div>\n    ```", "```php\n    <?php\n\n    /**\n     * @file\n     * Contains views_semantic_tabs.module..\n     */\n\n    use Drupal\\Core\\Routing\\RouteMatchInterface;\n    use Drupal\\Core\\Template\\Attribute;\n\n    /**\n     * Implements hook_help().\n     */\n    function views_semantic_tabs_help($route_name, RouteMatchInterface $route_match) {\n      switch ($route_name) {\n        // Main module help for the views_semantic_tabs module.\n        case 'help.page.views_semantic_tabs':\n          $output = '';\n          $output .= '<h3>' . t('About') . '</h3>';\n          $output .= '<p>' . t('Provides a views style plugin to display views results in jQuery UI Tabs.') . '</p>';\n          return $output;\n\n        default:\n      }\n    }\n\n    /**\n     * Prepares variables for Views HTML list templates.\n     *\n     * @param array $variables\n     *   An associative array containing:\n     *   - view: A View object.\n     */\n    function template_preprocess_views_semantic_tabs_format(&$variables) {\n        $handler  = $variables['view']->style_plugin;\n        $view = $variables['view'];\n        $rows = $variables['rows'];\n        $style = $view->style_plugin;\n        $fields = &$view->field;\n        $options = $style->options;\n        $variables['fields'] = $fields;\n\n        // add jquery & jquery ui\n        $variables['view']->element['#attached']['library'][] = 'core/jquery.ui.tabs';\n        $variables['view']->element['#attached']['library'][] = 'core/jquery';\n        $variables['view']->element['#attached']['library'][] = 'views_semantic_tabs/views-semantic-tabs';\n\n        // Get first group field selected\n        if($options){\n            $first_group_field = $options['group'];\n        }\n\n        // Add tabs id to main div\n        $variables['attributes'] = new Attribute(array('id' => 'tabs'));\n        $fields = &$view->field;\n\n        $variables['default_row_class'] = !empty($options['default_row_class']);\n        foreach ($rows as $id => $row) {\n            // todo : group field value should be plain text\n            $field_output = $handler->getField($id, $first_group_field);\n            $variables['rows']['group'][] = $field_output;\n            $variables['rows'][$id] = array();\n            $variables['rows'][$id]['content'] = $row;\n            $variables['rows'][$id]['attributes'] = new Attribute();\n            if ($row_class = $view->style_plugin->getRowClass($id)) {\n              $variables['rows'][$id]['attributes']->addClass($row_class);\n            }\n        }\n\n    }\n    ```", "```php\n    views-semantic-tabs:\n      version: VERSION\n      js:\n        js/views-semantic-tabs.js: {}\n      dependencies:\n        - core/jquery\n        - core/drupal\n    ```", "```php\n      (function ($) {\n        $(function() {\n            $( \".views-semantic-tabs\" ).tabs();\n        });\n    })(jQuery);\n    ```", "```php\n    $ mkdir views_semantic_tabs\n    $ cd views_semantic_tabs\n    $ git init\n    $ git checkout -b 8.x-1.x\n    $ echo \"name = Views semantic tabs\" > views_semantic_tabs.info.yml\n    $ git add views_semantic_tabs.info\n    $ git commit -m \"Initial commit.\"\n    $ git remote add origin krishnakanth17@git.drupal.org:sandbox/krishnakanth17/2665888.git\n    $ git push origin 8.x-1.x\n\n    ```", "```php\n    $ git add -A\n    $ git commit -m \"Pushing all files of module\"\n    $ git push -u origin 8.x-1.x\n\n    ```"]