["```php\n$name = 'Dave';\necho 'Hello $name';\n```", "```php\n<?php\n$name = \"Dave\";\necho \"Hello $name\";\n```", "```php\n     echo 'Your code isn\\'t bad, but it could be better'; \n// will print: Your code isn't bad, but it could be better.\n```", "```php\n/*\nThis is a multi line comment\nIt can use as many lines as needed\nto end a multiline comment use\n*/\n```", "```php\n  $number = 123;\n  echo \"The number is: $number\";\n  // will print: The number is: 123\n```", "```php\n<?php\n  $number = 123;\n  echo \"The number is: $number\";\n  // will print: The number is: 123\n  echo '<br>';\n  echo \"Your code isn't bad, but it could be better\";\n  // Your code isn't bad, but it could be better\n```", "```php\n$number = 100;\n$longString = <<<STRING\nThis string is spanned across multiple lines.\nWe can use \"double quotes\" also.\nWe have declared number $number before it.\nSTRING;\n```", "```php\nThis string is spanned across multiple lines. We can use \"double quotes\" also. We have declared number 100 before it.\n```", "```php\n$preferedHost = 'Linux';\n$preferedLanguage = 'PHP';\n$storeString = <<<STRING\nThis string is spanned across multiple lines.\nThe preferred host in this example is $preferedHost.\nThe preferred language in this example is $preferedLanguage\nSTRING;\n```", "```php\n$name = 'Dave';\n$str = <<<EOT\nAn example string \nThat spans multiple lines.\n```", "```php\n$number = 100;\n$longString = <<<'STRING'\nThis string is spanned across multiple lines. We can use \"double quotes\" also. We have declared number $number before it.\nSTRING;\necho $longString;\n```", "```php\nThis string is spanned across multiple lines. We can use \"double quotes\" also. We have declared number $number before it.\n```", "```php\n$w = 13.3333;\n$x = -0.888;\n$y = 17e+2;\n$z = 8e-2;\n```", "```php\n$isAdmin = true;\n$isAdmin = false;\n```", "```php\n    <?php\n    $str = 'Your order total is: ';\n    $order = 20;\n    $additional = 5;\n    $orderTotal = 0;\n    $complete = false;\n    ```", "```php\n    //add additional items to order\n    $orderTotal = $order + $additional;\n    ```", "```php\n    //if order is equal to 25\n    if ($orderTotal >= 25) {\n    ```", "```php\n    //change $complete to true to indicate the order is complete\n     $complete = true;\n    //display the $str and add the orderTotal\n    echo $str . $orderTotal;\n    ```", "```php\n    <?php\n    $str = 'Your order total is: ';\n    $order = 20;\n    $additional = 5;\n    $orderTotal = 0;\n    $complete = false;\n    //add additional items to order\n    $orderTotal = $order + $additional;\n    //if order is equal to 25\n    if ($orderTotal >= 25) {\n        //change $complete to true to indicate the order is complete\n        $complete = true;\n        //display the $str and add the orderTotal\n        echo $str . $orderTotal;\n    }\n    ```", "```php\n    php -S localhost:8085\n    ```", "```php\n<?php \n$names = ['Dave','Kerry','Dan','Jack','James','Ruby','Sam','Teresa','Tony'];\nprint_r($names);\n?>\n```", "```php\nArray\n(\n    [0] => Dave\n    [1] => Kerry\n    [2] => Dan\n    [3] => Jack\n    [4] => James\n    [5] => Ruby\n    [6] => Sam\n    [7] => Teresa\n    [8] => Tony\n)\n```", "```php\n<?php echo $names[3];?>\n```", "```php\n<?php \n$arrDays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday',  'Sunday'];\nprint_r($arrDays);\n?>\n```", "```php\nArray\n(\n    [0] => Monday\n    [1] => Tuesday\n    [2] => Wednesday\n    [3] => Thursday\n    [4] => Friday\n    [5] => Saturday\n    [6] => Sunday\n)\n```", "```php\n<?php \n$arrDays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday',  'Sunday'];\necho 'Element at index 0 is ' . $arrDays[0];\necho '<br>';\necho 'Element at index 4 is ' . $arrDays[4];\n```", "```php\nElement at index 0 is Monday\nElement at index 4 is Friday\n```", "```php\n<?php  \n$arrDays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday',  'Sunday'];\necho 'Length of the array is: ' . count($arrDays);\n// output: Length of the array is: 7\n```", "```php\n<?php \n$heroInfo = array(\n    'name' => 'Peter Parker',\n    'superheroName' => 'Spiderman',\n    'city' => 'New York',\n    'creator' => 'Stan Lee'\n);\nprint_r($heroInfo);\n?>\n```", "```php\nArray\n(\n    [name] => Peter Parker\n    [superheroName] => Spiderman\n    [city] => New York\n    [creator] => Stan Lee\n)\n```", "```php\n<?php \n$heroInfo = array(\n    'name' => 'Peter Parker',\n    'superHeroName' => 'Spiderman',\n    'city' => 'New York',\n    'creator' => 'Stan Lee'\n);\necho $heroInfo['name'];\necho '<br>';\necho $heroInfo['superHeroName'];\n?>\n```", "```php\nPeter Parker\nSpiderman\n```", "```php\n<?php\n$people = [];\n$people[] = 'David Carr';\n$people[] = 'Dan Sherwood';\n$people[] = 'Jack Batty';\n$people[] = 'James Powell';\n$people[] = 'Kerry Owston';\n$people[] = 'Ruby Keable';\n//display the contents of $people\nprint_r($people);\n```", "```php\n<?php\n$people = [];\n$people['Rose'] = 'Principal Software Architect';\n$people['Laura'] = 'Senior Software Architect';\n$people['Jane'] = 'Project Manager';\n$people['Mary'] = 'Software Architect;\n//display the contents of $people\nprint_r($people);\n```", "```php\n<?php \n$animals = ['Lion', 'Cat', 'Dog'];\n$animals[] = 'Wolf';\nprint_r($animals);\n```", "```php\nArray ( [0] => Lion [1] => Cat [2] => Dog [3] => Wolf )\n```", "```php\n<?php\n$heroInfo = array(\n    'name' => 'Peter Parker',\n    'superheroName' => 'Spiderman',\n    'city' => 'New York',\n    'creator' => 'Stan Lee'\n);\n$heroInfo['publisher'] = 'Marvel Comics';\nprint_r($heroInfo);\n```", "```php\nArray ( [name] => Peter Parker [superheroName] => Spiderman [city] => New York [creator] => Stan Lee [publisher] => Marvel Comics )\n```", "```php\n<?php  \n$animals = ['Lion', 'Cat', 'Dog']     ;\narray_push($animals, 'Wolf');\nprint_r($animals);\n```", "```php\nArray\n(\n    [0] => Lion\n    [1] => Cat\n    [2] => Dog\n    [3] => Wolf\n)\n```", "```php\n<?php\n$stack = array(\"black\", \"red\", \"green\", \"purple\");\n$fruit = array_pop($stack);\nprint_r($stack);\n```", "```php\nArray\n(\n    [0] => black\n    [1] => red\n    [2] => green\n)\n```", "```php\n<?php\n$stack = array(\"black\", \"red\", \"green\", \"purple\");\nunset($stack[1]);//remove red as this is the key matching 1\n```", "```php\nArray\n(\n    [0] => black\n    [2] => green\n    [3] => purple\n)\n```", "```php\n    array.php\n    1  <?php\n    2       $heroInfo = [\n    3      [\n    4          'heroName' => 'Spiderman',\n    5          'weapon' => 'Spider web'\n    6      ],\n    7      [\n    8          'heroName' => 'Iron Man',\n    9          'weapon' => 'Mark L'\n    10     ],\n    11     [\n    12         'heroName' => 'Thor',\n    13         'weapon' => 'Mjolnir'\n    14     ],\n    https://packt.live/2VqAHto\n    ```", "```php\n    echo '<pre>';\n    print_r($heroInfo);\n    echo '<pre>';\n    ```", "```php\n    php -S localhost:85\n    ```", "```php\n    echo 'The weapon of choice for ' . $heroInfo[3]['heroName'] . ' is ' .  $heroInfo[3]['weapon'];\n    echo '<br>';\n    echo $heroInfo[2]['heroName'] . ' wields ' . $heroInfo[2]['weapon'];\n    ```", "```php\n<?php\nfunction number(int $int)\n{\n    echo \"the number is: $int\";\n}\nnumber('1');\n```", "```php\ndeclare(strict_types=1);\n```", "```php\n<?php\ndeclare(strict_types=1);\nfunction number(int $int)\n{\n    echo \"the number is: $int\";\n}\nnumber('1');\n```", "```php\nFatal error: Uncaught TypeError: Argument 1 passed to number() must be of the type int, string given\n```", "```php\n$x = \"13.3333\";\nvar_dump($x);\necho \"<br>\";\n$y = (float) $x;\nvar_dump($y); \n```", "```php\nstring(7) \"13.3333\" \nfloat(13.3333)\n```", "```php\n    <?php\n    echo '<h3>Boolean to Int</h3>';\n    $trueValueBool = true;\n    $falseValueBool = false;\n    ```", "```php\n    echo '<h3>Before type conversion:</h3>';\n    var_dump($trueValueBool);\n    echo '<br>';\n    var_dump($falseValueBool);\n    ```", "```php\n    echo '<h3>After type conversion:</h3>';\n    $trueValueInt = (int) ($trueValueBool);\n    $falseValueInt = (int) ($falseValueBool);\n    var_dump($trueValueInt);\n    echo '<br>';\n    var_dump($falseValueInt);\n    ```", "```php\n    Boolean to Int\n    Before type conversion:\n    bool(true) \n    bool(false)\n    After type conversion:\n    int(1) \n    int(0)\n    ```", "```php\n    <?php \n    echo '<h3>int to string:</h3>';\n    $number = 1234;\n    ```", "```php\n    echo '<h3>Before type conversion:</h3>';\n    var_dump($number);\n    ```", "```php\n    echo '<h3>After type conversion:</h3>';\n    $stringValue = (string) ($number);\n    var_dump($stringValue);\n    ```", "```php\n    int to string:\n    Before type conversion:\n    int(1234)\n    After type conversion:\n    string(4) \"1234\"\n    ```", "```php\nis_array($variable);\n```", "```php\n    <?php \n        // get all arguments\n        $name = $argv[1];\n        $heightMeters = (int) $argv[2];\n        $heightCentiMeters = (int) $argv[3];\n    ```", "```php\n    // convert centimeters to meters\n    $cmToMeter = (float)($heightCentiMeters/100);\n    ```", "```php\n    $finalHeightInMeters = $heightMeters + $cmToMeter;\n    ```", "```php\n    // display the output\n          echo $name . ': ' . $finalHeightInMeters . 'm';\n    ```", "```php\n    php activity-height.php Alex 1 75\n    ```", "```php\n<?php echo 24 + 2; ?>\n```", "```php\n<?php echo 24 - 2; ?>\n```", "```php\n<?php echo 24 * 2; ?>\n```", "```php\n<?php echo 24 / 2; ?>\n```", "```php\n<?php echo 24 % 5; ?>\n```", "```php\n<?php \n$first = 'Hello';\n$second = 'World!';\n```", "```php\n<?php echo $first . ' ' . $second; ?>\n```", "```php\n<?php\n$str = ' second part'; \n$result = 'first part';\n$result .= $str;\necho $result;\n```", "```php\n<?php\n$a = 1;//0001 in binary\n$b = 3;//0011 in binary\n//Bits that are set in both $a and $b are set.\necho $a && $b;\necho '<br>';\n//Bits that are set in either $a or $b are set.\necho $a || $b;\necho '<br>';\n//Bits that are set in $a or $b but not both are set.\necho $a ^ $b;\n```", "```php\n1\n1\n2\n```", "```php\n<?php \n$year = 2019; \n```", "```php\n<?php \n$cost = 200;\n$money = 150;\nif ($cost == $money) {\n    echo 'cost matches money';\n}\n\nif ($cost != $money) {\n    echo 'cost does not match money';\n}\n```", "```php\n<?php \n$cost = 200;\n$cost++;\necho $cost; //this will give 201\n```", "```php\n<?php \n$cost = 200;\n$cost--;\necho $cost; //this will give 199\n```", "```php\n<?php\n$isAdmin = true;\nIf (! $isAdmin) {\n//will only run if $isAdmin == false\n}\n```", "```php\n    $num1==$num2\n    ```", "```php\n    ($num1 === $num2);\n    ```", "```php\n    ($num1 !== $num2);\n    ```"]