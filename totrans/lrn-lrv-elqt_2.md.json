["```php\nSchema::create('users', function(Blueprint $table)\n{\n$table->increments('id');\n});\n```", "```php\nSchema::rename($previousName, $newName);\n```", "```php\n  Schema::drop($tableName);\n```", "```php\n  Schema::dropIfExists($tableName);\n```", "```php\n  if (Schema::hasTable('books')) \n  { \n    // the table \"books\" exists...\n  }\n```", "```php\n  Schema::create('books', function(Blueprint $table)\n  {\n      $table->increments('id');\n\n      $table->string('title');\n\n      $table->integer('pages_count');\n      $table->decimal('price', 5, 2);\n\n      $table->text('description');\n\n      $table->timestamps();\n  });\n```", "```php\n  // remember this \"use\" directive!\n  use Illuminate\\Database\\Schema\\Blueprint;\n\n  Route::get('create_books_table', function(){\n\n    Schema::create('books', function(Blueprint $table)\n    {\n        $table->increments('id');\n\n        $table->string('title', 30);\n\n        $table->integer('pages_count');\n        $table->decimal('price', 5, 2);\n\n        $table->text('description');\n\n        $table->timestamps();\n    });\n\n  });\n```", "```php\n  if (Schema::hasColumn('books', 'title')) \n  { \n    // the column \"title\" in the \"books\" table exists...\n  }\n```", "```php\n  $table->timestamps();\n```", "```php\n  $table->softDeletes();\n```", "```php\n  $table->rememberToken();\n```", "```php\n  $table->integer('my_column')->unsigned();\n```", "```php\n  $table->string('my_column')->nullable();\n```", "```php\n  $table->string('my_column')->default('my_default_value');\n```", "```php\n  Schema::table('table_name', function(Blueprint $table)\n  {\n    // update operations here...\n  });\n```", "```php\n  Route::get('update_books_table', function(){\n\n      Schema::table('books', function(Blueprint $table)\n      {\n          $table->string('title', 250)->change();\n      });\n\n  });\n```", "```php\n  $table->string('title', 250);\n```", "```php\n  $table->primary('id');\n```", "```php\n  $table->primary(['first_name', 'last_name', 'document_number']);\n```", "```php\n  $table->unique('email');\n```", "```php\n  $table->index('title');\n```", "```php\n  $table->foreign('author_id')->references('id')->on('authors');\n```", "```php\n  $table->foreign('author_id')\n      ->references('id')\n      ->on('authors')\n      ->onDelete('cascade');\n```", "```php\n  $table->dropPrimary('authors_id_primary');\n  $table->dropUnique('authors_email_unique');\n  $table->dropIndex('books_title_index');\n  $table->dropForeign('books_author_id_foreign');\n```", "```php\n  Route::get('update_books_table_2', function(){\n\n      // creating the authors table...\n      Schema::create('authors', function(Blueprint $table)\n      {\n          $table->increments('id');\n\n          $table->string('first_name');\n          $table->string('last_name');\n\n          $table->timestamps();\n      });\n\n      Schema::table('books', function(Blueprint $table)\n      {\n          // creating the index on the title column...\n          $table->index('title');\n\n          // creating the foreign key...\n          $table->integer('author_id')->unsigned();\n          $table->foreign('author_id')->references('id')->on('authors');\n      });\n\n  });\n```", "```php\n  php artisan make:migration publishers_update\n```", "```php\n  2015_03_06_105131_publishers_update.php\n```", "```php\n  <?php\n\n    use Illuminate\\Database\\Schema\\Blueprint;\n    use Illuminate\\Database\\Migrations\\Migration;\n\n    class PublishersUpdate extends Migration {\n\n      public function up()\n      {\n      //\n    }\n\n      public function down()\n      {\n        //\n      }\n\n    }\n```", "```php\n  <?php\n\n    use Illuminate\\Database\\Schema\\Blueprint;\n    use Illuminate\\Database\\Migrations\\Migration;\n\n    class PublishersUpdate extends Migration {\n\n      public function up()\n      {\n        Schema::create('publishers', function(Blueprint $table)\n        {\n          $table->increments('id');\n\n          $table->string('name');\n\n          $table->timestamps();\n        });\n\n        Schema::table('books', function(Blueprint $table)\n        {\n          $table->integer('publisher_id')->unsigned();\n          $table->foreign('publisher_id')->references('id')->on('publishers');\n        });\n      }\n\n      public function down()\n      {\n        Schema::table('books', function(Blueprint $table)\n        {\n          $table->dropForeign('books_publisher_id_foreign');\n          $table->dropColumn('publisher_id');\n        });\n\n        Schema::drop('publishers');\n      }\n\n    }â€©\n```", "```php\n  php artisan migrate\n```", "```php\n  Migration table created successfully.\n  Migrated: 2015_03_06_105131_publishers_update\n```", "```php\n  php artisan migrate:rollback\n```", "```php\n  php artisan migrate\n```", "```php\n  php artisan make:migration tags_update\n```", "```php\n  <?php\n\n    use Illuminate\\Database\\Schema\\Blueprint;\n    use Illuminate\\Database\\Migrations\\Migration;\n\n    class TagsUpdate extends Migration {\n\n      /**\n       * Run the migrations.\n       *\n       * @return void\n       */\n      public function up()\n      {\n        Schema::create('tags', function(Blueprint $table)\n        {\n          $table->increments('id');\n\n          $table->string('name');\n\n          $table->timestamps();\n        });\n\n        Schema::create('book_tag', function(Blueprint $table)\n        {\n          $table->increments('id');\n\n          $table->integer('book_id')->unsigned();\n          $table->integer('tag_id')->unsigned();\n\n          $table->foreign('book_id')->references('id')->on('books');\n          $table->foreign('tag_id')->references('id')->on('tags');\n        });\n      }\n\n      /**\n       * Reverse the migrations.\n       *\n       * @return void\n       */\n      public function down()\n      {\n        Schema::drop('book_tag');\n        Schema::drop('tags');\n      }\n\n    }\n```", "```php\n  php artisan migrate\n```", "```php\n  php artisan migrate:reset\n```", "```php\n  php artisan migrate:refresh\n```", "```php\n  php artisan migrate:status\n```"]