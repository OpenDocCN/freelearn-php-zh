- en: Chapter 7. Adding Media to Our Site
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*A text-only site is not going to hold the interest of visitors; a site needs
    some pizzazz and some spice! One way to add some pizzazz to your site is by adding
    some multimedia content, such as images, video, audio, and so on. But, we don''t
    just want to add a few images here and there; in fact, we want an immersive and
    compelling multimedia experience that is easy to manage, configure, and extend.
    The File entity ([https://drupal.org/project/file_entity](https://drupal.org/project/file_entity))
    module for Drupal 8 will enable us to manage files very easily. In this chapter,
    we will discover how to integrate the File entity module to add images to our
    d8dev site, and will explore compelling ways to present images to users. This
    will include taking a look at the integration of a lightbox-type UI element for
    displaying the File-entity-module-managed images, and learning how we can create
    custom image styles through UI and code.*'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following topics will be covered in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: The File entity module for Drupal 8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adding a Recipe image field to your content types
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Code example—image styles for Drupal 8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Displaying recipe images in a lightbox popup
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Working with Drupal issue queues
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction to the File entity module
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'As per the module page at [https://www.drupal.org/project/file_entity](https://www.drupal.org/project/file_entity):'
  prefs: []
  type: TYPE_NORMAL
- en: '*File entity provides interfaces for managing files. It also extends the core
    file entity, allowing files to be fieldable, grouped into types, viewed (using
    display modes) and formatted using field formatters. File entity integrates with
    a number of modules, exposing files to Views, Entity API, Token and more.*'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: In our case, we need this module to easily edit image properties such as Title
    text and Alt text. So these properties will be used in the colorbox popup to display
    them as captions.
  prefs: []
  type: TYPE_NORMAL
- en: Working with dev versions of modules
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are times when you come across a module that introduces some major new
    features and is fairly stable, but not quite ready for use on a live/production
    website, and is therefore available only as a dev version. This is a perfect opportunity
    to provide a valuable contribution to the Drupal community. Just by installing
    and using a dev version of a module (in your local development environment, of
    course), you are providing valuable testing for the module maintainers. Of course,
    you should enter an issue in the project's issue queue if you discover any bugs
    or would like to request any additional features. Also, using a dev version of
    a module presents you with the opportunity to take on some custom Drupal development.
    However, it is important that you remember that a module is released as a dev
    version for a reason, and it is most likely not stable enough to be deployed on
    a public-facing site.
  prefs: []
  type: TYPE_NORMAL
- en: 'Our use of the File entity module in this chapter is a good example of working
    with the dev version of a module. One thing to note: Drush will download official
    and dev module releases. But at this point in time, there is no official port
    for the File entity module in Drupal, so we will use the unofficial one, which
    lives on GitHub ([https://github.com/drupal-media/file_entity](https://github.com/drupal-media/file_entity)).
    In the next step, we will be downloading the dev release with GitHub.'
  prefs: []
  type: TYPE_NORMAL
- en: Time for action – installing a dev version of the File entity module
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In Drupal, we use Drush to download and enable any module/theme, but there
    is no official port yet for the file entity module in Drupal, so we can use the
    unofficial one, which lives on GitHub at [https://github.com/drupal-media/file_entity](https://github.com/drupal-media/file_entity):'
  prefs: []
  type: TYPE_NORMAL
- en: Open the Terminal (Mac OS X) or Command Prompt (Windows) application, and go
    to the root directory of your d8dev site.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Go inside the `modules` folder and download the File entity module from GitHub.
    We use the `git` command to download this module: `$ git clone https://github.com/drupal-media/file_entity`.
    Another way is to download a `.zip` file from [https://github.com/drupal-media/file_entity](https://github.com/drupal-media/file_entity)
    and extract it in the modules folder:![Time for action – installing a dev version
    of the File entity module](img/4659_07_01.jpg)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, on the **Extend** page (`admin/modules`), enable the File entity module.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*What just happened?*'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We enabled the File entity module, and learned how to download and install with
    GitHub.
  prefs: []
  type: TYPE_NORMAL
- en: A new recipe for our site
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we are going to create a new recipe: Thai Basil Chicken. If
    you would like to have more real content to use as an example, and feel free to
    try the recipe out!'
  prefs: []
  type: TYPE_NORMAL
- en: '![A new recipe for our site](img/4659_07_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**Name**: Thai Basil Chicken'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Description**: A spicy, flavorful version of one of my favorite Thai dishes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**RecipeYield** : Four servings'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**PrepTime**: 25 minutes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**CookTime**: 20 minutes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Ingredients** :'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: One pound boneless chicken breasts
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Two tablespoons of olive oil
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Four garlic cloves, minced
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Three tablespoons of soy sauce
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Two tablespoons of fish sauce
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Two large sweet onions, sliced
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Five cloves of garlic
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: One yellow bell pepper
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: One green bell pepper
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Four to eight Thai peppers (depending on the level of hotness you want)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: One-third cup of dark brown sugar dissolved in one cup of hot water
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: One cup of fresh basil leaves
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Two cups of Jasmin rice
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Instructions**:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prepare the Jasmine rice according to the directions.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Heat the olive oil in a large frying pan over medium heat for two minutes.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Add the chicken to the pan and then pour on soy sauce.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Cook the chicken until there is no visible pinkness—approximately 8 to 10 minutes.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Reduce heat to medium low.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Add the garlic and fish sauce, and simmer for 3 minutes.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Next, add the Thai chilies, onion, and bell pepper and stir to combine.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Simmer for 2 minutes.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Add the brown sugar and water mixture. Stir to mix, and then cover.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Simmer for 5 minutes.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Uncover, add basil, and stir to combine.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Serve over rice.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Time for action – adding a Recipe images field to our Recipe content type
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We will use the manage fields administrative page to add a Media field to our
    d8dev Recipe content type:'
  prefs: []
  type: TYPE_NORMAL
- en: Open up the d8dev site in your favorite browser, click on the **Structure**
    link in the **Admin** toolbar, and then click on the **Content types** link.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, on the **Content types** administrative page, click on the **Manage fields**
    link for your Recipe content type:![Time for action – adding a Recipe images field
    to our Recipe content type](img/4659_07_03.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, on the **Manage fields** administrative page, click on the **Add field**
    link. On the next screen, select **Image** from the **Add a new field** dropdown
    and **Label** as **Recipe images**. Click on the **Save field settings** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, on the **Field settings** page, select **Unlimited** as the allowed number
    of values. Click on the **Save field settings** button. On the next screen, leave
    all settings as they are and click on the **Save settings** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, on the **Manage form display** page, select widget **Editable file** for
    the **Recipe images** field and click on the **Save** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, on the **Manage display** page, for the **Recipe images** field, select
    **Hidden** as the label. Click on the settings icon. Then select **Medium (220*220)**
    as the image style, and click on the **Update** button. At the bottom, click on
    the **Save** button:![Time for action – adding a Recipe images field to our Recipe
    content type](img/4659_07_04.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Let's add some Recipe images to a recipe. Click on the **Content** link in the
    menu bar, and then click on **Add content and Recipe**. On the next screen, fill
    in the title as `Thai Basil Chicken` and other fields respectively as mentioned
    in the preceding recipe details.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, scroll down to the new **Recipe images** field that you have added. Click
    on the **Add a new file** button or drag and drop images that you want to upload.
    Then click on the **Save and Publish** button:![Time for action – adding a Recipe
    images field to our Recipe content type](img/4659_07_05.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Reload your **Thai Basil Chicken** recipe page, and you should see something
    similar to the following:![Time for action – adding a Recipe images field to our
    Recipe content type](img/4659_07_06.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'All the images are stacked on top of each other. So, we will add the following
    CSS just under the style for `field--name-field-recipe-images` and `field--type-recipe-images`
    in the `/modules/d8dev/styles/d8dev.css` file, to lay out the Recipe images in
    more of a grid:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Now we will load this `d8dev.css` file to affect this grid style. In Drupal
    8, loading a CSS file has a process:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Save the CSS to a file.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Define a library, which can contain the CSS file.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Attach the library to a render array in a hook.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 'So, we have already saved a CSS file called `d8dev.css` under the `styles`
    folder; now we will define a library. To define one or more (asset) libraries,
    add a `*.libraries.yml` file to your `theme` folder. Our module is named `d8dev`,
    and then the filename should be `d8dev.libraries.yml`. Each library in the file
    is an entry detailing CSS, like this:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Now, we define the `hook_page_attachments()` function to load the CSS file.
    Add the following code inside the `d8dev.module` file. Use this hook when you
    want to conditionally add attachments to a page:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Now, we will need to clear the cache for our d8dev site by going to **Configuration**,
    clicking on the **Performance** link, and then clicking on the **Clear all caches**
    button. Reload your **Thai Basil Chicken** recipe page, and you should see something
    similar to the following:![Time for action – adding a Recipe images field to our
    Recipe content type](img/4659_07_07.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*What just happened?*'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We added and configured a media-based field for our Recipe content type. We
    updated the d8dev module with custom CSS code to lay out the Recipe images in
    more of a grid format. And also we looked at how to attach a CSS file through
    a module.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a custom image style
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Before we configure a colorbox feature, we are going to create a custom image
    style to use when we add them in colorbox content preview settings. Image styles
    for Drupal 8 are part of the core Image module. The core image module provides
    three default image styles—thumbnail, medium, and large—as seen in the following
    Image style configuration page:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating a custom image style](img/4659_07_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Now, we are going to add a fifth custom image style, an image style that will
    resize our images somewhere between the 100 x 75 thumbnail style and the 220 x
    165 medium style. We will walkthrough the process of creating an image style through
    the Image style administrative page, and also walkthrough the process of programmatically
    creating an image style.
  prefs: []
  type: TYPE_NORMAL
- en: Time for action – adding a custom image style through the image style administrative
    page
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'First, we will use the Image style administrative page (`admin/config/media/image-styles`)
    to create a custom image style:'
  prefs: []
  type: TYPE_NORMAL
- en: Open the d8dev site in your favorite browser, click on the **Configuration**
    link in the **Admin** toolbar, and click on the **Image** styles link under the
    **Media** section.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once the Image styles administrative page has loaded, click on the **Add style**
    link.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, enter `small` for the **Image style name** of your custom image style,
    and click on the **Create new style** button:![Time for action – adding a custom
    image style through the image style administrative page](img/4659_07_09.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, we will add the one and only effect for our custom image style by selecting
    **Scale** from the **EFFECT** options and then clicking on the **Add** button.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: On the **Add Scale effect** page, enter `160` for the width and `120` for the
    height. Leave the **Allow Upscaling** checkbox unchecked, and click on the **Add
    effect** button:![Time for action – adding a custom image style through the image
    style administrative page](img/4659_07_10.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Finally, just click on the **Update style** button on the **Edit small style**
    administrative page, and we are done. We now have a new custom small image style
    that we will be able to use to resize images for our site:![Time for action –
    adding a custom image style through the image style administrative page](img/4659_07_11.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*What just happened?*'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We learned how easy it is to add a custom image style with the administrative
    UI. Now, we are going to see how to add a custom image style by writing some code.
    The advantage of having code-based custom image styles is that it will allow us
    to utilize a source code repository, such as Git, to manage and deploy our custom
    image styles between different environments. For example, it would allow us to
    use Git to promote image styles from our development environment to a live production
    website. Otherwise, the manual configuration that we just did would have to be
    repeated for every environment.
  prefs: []
  type: TYPE_NORMAL
- en: Time for action – creating a programmatic custom image style
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now, we will see how we can add a custom image style with code:'
  prefs: []
  type: TYPE_NORMAL
- en: The first thing we need to do is delete the small image style that we just created.
    So, open your d8dev site in your favorite browser, click on the **Configuration**
    link in the **Admin** toolbar, and then click on the **Image styles** link under
    the **Media** section.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once the **Image styles** administrative page has loaded, click on the **delete**
    link for the small image style that we just added.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, on the **Optionally select a style before deleting small** page, leave
    the default value for the **Replacement style** select list as **No replacement,
    just delete**, and click on the **Delete** button:![Time for action – creating
    a programmatic custom image style](img/4659_07_12.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In Drupal 8, image styles have been converted from an array to an object that
    extends ConfigEntity. All image styles provided by modules need to be defined
    as YAML configuration files in the `config/install` folder of each module.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Suppose our module is located at `modules/d8dev`. Create a file called `modules/d8dev/config/install/image.style.small.yml`
    with the following content:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: We need to use a UUID generator to assign unique IDs to image style effects.
    *Do not copy/paste UUIDs* from other pieces of code or from other image styles!
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The name of our custom style is "small". Here, the name and the label are same.
    For each effect that we want to add to our image style, we will specify the effect
    itself in the place of key followed by the value, which acts as the settings for
    the effect. In the case of the **image_scale** effect that we are using here,
    we pass in the **width**, **height**, and **upscale** settings. Finally, the value
    for the **weight** key allows us to specify the order the effects should be processed
    in, and although it is not very useful when there is only one effect, it becomes
    important when there are multiple effects.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, we will need to uninstall and install our d8dev module by going to the
    **Extend** page. On the next screen click on the **Uninstall** tab, check the
    **d8dev** checkbox and click on the **Uninstall** button. Now, click on the **List**
    tab, check **d8dev**, and click on the **Install** button. Then, go back to the
    **Image styles** administrative page and you will see our programmatically created
    small image style.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*What just happened?*'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We created a custom image style with some custom code. We then configured our
    Recipe content type to use our custom image style for images added to the Recipe
    images field.
  prefs: []
  type: TYPE_NORMAL
- en: Integrating the Colorbox and File entity modules
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The File entity module provides interfaces for managing files. For images, we
    will be able to edit Title text, Alt text, and Filenames easily. However, the
    images are taking up quite a bit of room. Let's create a pop-up lightbox gallery
    and show images in a popup. When someone clicks on an image, a lightbox will pop
    up and allow the user to cycle through larger versions of all associated images.
  prefs: []
  type: TYPE_NORMAL
- en: Time for action – installing the Colorbox module
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Before we can display Recipe images in a Colorbox, we need to download and
    enable the module:'
  prefs: []
  type: TYPE_NORMAL
- en: Open the Mac OS X Terminal or Windows Command Prompt, and change to the `d8dev`
    directory.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, use Drush to download and enable the current dev release of the Colorbox
    module ([http://drupal.org/project/colorbox](http://drupal.org/project/colorbox)):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The Colorbox module depends on the Colorbox jQuery plugin available at [https://github.com/jackmoore/colorbox](https://github.com/jackmoore/colorbox).
    The Colorbox module includes a Drush task that will download the required jQuery
    plugin at the `/libraries` directory:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Next, we will look into the Colorbox display formatter. Click on the **Structure**
    link in the **Admin** toolbar, then click on the **Content** types link, and finally
    click on the **manage** display link for your Recipe content type under the **Operations**
    dropdown:![Time for action – installing the Colorbox module](img/4659_07_13.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, click on the **FORMAT** select list for the **Recipe images** field, and
    you will see an option for Colorbox, Select as **Colorbox** then you will see
    the settings change. Then, click on the settings icon:![Time for action – installing
    the Colorbox module](img/4659_07_14.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, you will see the settings for Colorbox. Select **Content image style**
    as **small** and **Content image style for first image** as **small** in the dropdown,
    and use the default settings for other options. Click on the **Update** button
    and next on the **Save** button at the bottom:![Time for action – installing the
    Colorbox module](img/4659_07_15.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Reload our **Thai Basil Chicken** recipe page, and you should see something
    similar to the following (with the new image style, small):![Time for action –
    installing the Colorbox module](img/4659_07_16.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, click on any image and then you will see the image loaded in the colorbox
    popup:![Time for action – installing the Colorbox module](img/4659_07_17.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We have learned more about images for colorbox, but colorbox also supports videos.
    Another way to add some spice to our site is by adding videos. So there are several
    modules available to work with colorbox for videos. The Video Embed Field module
    creates a simple field type that allows you to embed videos from YouTube and Vimeo
    and show their thumbnail previews simply by entering the video's URL. So you can
    try this module to add some pizzazz to your site!
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*What just happened?*'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We installed the Colorbox module and enabled it for the Recipe images field
    on our custom Recipe content type. Now, we can easily add images to our d8dev
    content with the Colorbox pop-up feature.
  prefs: []
  type: TYPE_NORMAL
- en: Working with Drupal issue queues
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Drupal has its own issue queue for working with a team of developers around
    the world. If you need help for a specific project, core, module, or a theme related,
    you should go to the issue queue, where the maintainers, users, and followers
    of the module/theme communicate.
  prefs: []
  type: TYPE_NORMAL
- en: The issue page provides a filter option, where you can search for specific issues
    based on Project, Assigned, Submitted by, Followers, Status, Priority, Category,
    and so on.
  prefs: []
  type: TYPE_NORMAL
- en: We can find issues at [https://www.drupal.org/project/issues/colorbox](https://www.drupal.org/project/issues/colorbox).
    Here, replace colorbox with the specific module name. For more information, see
    [https://www.drupal.org/issue-queue](https://www.drupal.org/issue-queue).
  prefs: []
  type: TYPE_NORMAL
- en: In our case, we have one issue with the colorbox module. Captions are working
    for the **Automatic** and **Content title** properties, but are not working for
    the **Alt text** and **Title text** properties. To check this issue, go to **Structure**
    | **Content types** and click on **Manage display**. On the next screen, click
    on the settings icon for the Recipe images field. Now select the **Caption** option
    as **Title text** or **Alt text** and click on the **Update** button. Finally,
    click on the **Save** button. Reload the **Thai Basil Chicken** recipe page, and
    click on any image. Then it opens in popup, but we cannot see captions for this.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Make sure you have the Title text and Alt text properties updated for Recipe
    images field for the Thai Basil Chicken recipe.
  prefs: []
  type: TYPE_NORMAL
- en: Time for action – creating an issue for the Colorbox module
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now, before we go and try to figure out how to fix this functionality for the
    Colorbox module, let''s create an issue:'
  prefs: []
  type: TYPE_NORMAL
- en: On [https://www.drupal.org/project/issues/colorbox](https://www.drupal.org/project/issues/colorbox),
    click on the **Create a new issue** link:![Time for action – creating an issue
    for the Colorbox module](img/4659_07_18.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'On the next screen we will see a form. We will fill in all the required fields:
    **Title**, **Category** as `Bug report`, **Version** as `8.x-1.x-dev`, **Component**
    as `Code`, and the **Issue summary** field. Once I submitted my form, an issue
    was created at [https://www.drupal.org/node/2645160](https://www.drupal.org/node/2645160).
    You should see an issue on Drupal ([https://www.drupal.org/](https://www.drupal.org/))
    like this:![Time for action – creating an issue for the Colorbox module](img/4659_07_19.jpg)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, the Maintainers of the colorbox module will look into this issue and reply
    accordingly. Actually, `@frjo` replied saying "I have never used that module but
    if someone who does sends in a patch I will take a look at it." He is a contributor
    to this module, so we will wait for some time and will see if someone can fix
    this issue by giving a patch or replying with useful comments. In case someone
    gives the patch, then we have to apply that to the colorbox module. This information
    is available on Drupal at [https://www.drupal.org/patch/apply](https://www.drupal.org/patch/apply)
    .
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*What just happened?*'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We understood and created an issue in the Colorbox module's issue queue list.
    We also looked into what the required fields are and how to fill them to create
    an issue in the Drupal module queue list form.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we looked at a way to use our d8dev site with multimedia, creating
    image styles using some custom code, and learned some new ways of interacting
    with the Drupal developer community. We also worked with the Colorbox module to
    add images to our d8dev content with the Colorbox pop-up feature. Lastly, we looked
    into the custom module to work with custom CSS files.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will revisit the Colorbox module with some enhancements,
    and add some features to our d8dev site that will enable visitors to our site
    to provide feedback and interact with our site's content.
  prefs: []
  type: TYPE_NORMAL
