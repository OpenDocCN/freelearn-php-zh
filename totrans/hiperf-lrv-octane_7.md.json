["```php\nlocation ~* \\.(jpg|jpeg|gif|css|png|js|ico|html)$ {\n  access_log off;\n  expires max;\n  log_not_found off;\n  add_header X-Debug-Config STATICASSET;\n}\n```", "```php\nlocation ~ \\.php$ {\n  include snippets/fastcgi-php.conf;\n  add_header X-Debug-Config2 FASTCGI;\n  fastcgi_pass unix:/run/php/php8.1-fpm.sock;\n}\n```", "```php\nlocation /index.php {\n    try_files /not_exists @octane;\n}\nlocation / {\n    try_files $uri $uri/ @octane;\n}\nlocation @octane {\n        add_header X-Debug-Config2 POWEREDBYOCTANE;\n        set $suffix \"\";\n        if ($uri = /index.php) {\n            set $suffix ?$query_string;\n        }\n        proxy_http_version 1.1;\n        proxy_set_header Host $http_host;\n        proxy_set_header Scheme $scheme;\n        proxy_set_header SERVER_PORT $server_port;\n        proxy_set_header REMOTE_ADDR $remote_addr;\n        proxy_set_header X-Forwarded-For\n                         $proxy_add_x_forwarded_for;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_pass http://127.0.0.1:8000$suffix;\n}\n```", "```php\n# nginx -t\nnginx: the configuration file /etc/nginx/nginx.conf syntax is ok\nnginx: configuration file /etc/nginx/nginx.conf test is successful\n```", "```php\nservice nginx restart\n```", "```php\nsudo systemctl restart nginx\n```", "```php\nphp artisan octane:start --server=swoole\n```", "```php\nphp artisan octane:start –host=0.0.0.0 –server=swoole\n```", "```php\napt-get install supervisor\n```", "```php\n[program:laravel-octane]\nprocess_name=%(program_name)s_%(process_num)02d\ncommand=php /var/www/mydomain/htdocs/artisan octane:sta– --server=swoo– --max-requests=10– --workers– --task-workers=– --port=8000\nautostart=true\nautorestart=true\nuser=deploy\nredirect_stderr=true\nstdout_logfile=/var/www/mydomain/htdocs/storage/logs/laravel-octane-worker.log\n```", "```php\nsupervisorctl update\n```", "```php\nsupervisorctl restart all\n```", "```php\nsupervisorctl restart laravel-octane:laravel-octane_00\n```", "```php\nphp artisan octane:reload\n```", "```php\nphp artisan octane:status\n```", "```php\nphp artisan make:listener RequestReceivedNotification --event=RequestReceived\n```", "```php\n<?php\nnamespace App\\Listeners;\nuse Illuminate\\Support\\Facades\\Log;\nuse Laravel\\Octane\\Events\\RequestReceived;\nclass RequestReceivedNotification\n{\n    /**\n     * Create the event listener.\n     *\n     * @return void\n     */\n    public function __construct()\n    {\n        //\n    }\n    /**\n     * Handle the event.\n     *\n     * @param  \\Laravel\\Octane\\Events\\RequestReceived;\n        $event\n     * @return void\n     */\n    public function handle(RequestReceived $event)\n    {\n        Log::info('Request Received by\n                  '.$event->request->ip());\n    }\n}\n```", "```php\n        RequestReceived::class => [\n            ...Octane::prepareApplicationForNextOperation(),\n            ...Octane::prepareApplicationForNextRequest(),\n// Add the RequestReceivedNotification class\n            RequestReceivedNotification::class\n            //\n        ],\n```", "```php\ncomposer install --optimize-autoloader --no-dev\n```", "```php\nphp artisan config:cache\nphp artisan route:cache\nphp artisan view:cache\n```", "```php\nAPP_DEBUG=true\n```", "```php\nphp artisan about\n```", "```php\nAPP_DEBUG=false\n```", "```php\nphp artisan config:clear\n```", "```php\nLOG_LEVEL=debug\n```", "```php\nSSH_ALIAS=some.vm\nSSH_USER=deploy\nWEB_DIR=/var/www/mydomain/htdocs\nWEB_USER=www-data\nWEB_GROUP=www-data\n# DRY_RUN=--dry-run\nDRY_RUN=\n```", "```php\n.PHONY: help all remotedu rsynca copyenvprod fixgroupuser newdeploy migratestatus migrate migrateseed migraterefresh buildfrontend optimize composerinstallnodev restartworkers octanestatus installdevdeps deploy\ninclude Makefile.param.prod\nall: help\nhelp:\n    @grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) |\n    sort | awk 'BEGIN {FS = \":.*?## \"};\n    {printf \"\\033[36m%-30s\\033[0m %s\\n\", $$1, $$2}'\nremotedu: ## Execute DU command in htdocs dir, just for diagnostic purpose\n    ssh ${SSH_ALIAS} \"cd ${WEB_DIR}; du -h\"\nrsynca: ## execute Rsync from current dir and remote htdocs ${WEB_DIR}\n    rsync ${DRY_RUN} -rlcgoDvzi -e \"ssh\" --delete .\n      ${SSH_ALIAS}:${WEB_DIR}  --exclude-from\n      'exclude-list.txt'\ncopyenvprod:\n    scp .env.prod ${SSH_ALIAS}:${WEB_DIR}/.env\nfixgroupuser: ## Add the right group(www) to the deploy user (ssh user)\n    ssh -t ${SSH_ALIAS} \"sudo usermod -a -G ${WEB_GROUP}\n    ${SSH_USER}\"\nfixownership: ## fix the ownership for user ${WEB_USER} into ${WEB_DIR}/storage\n    ssh -t ${SSH_ALIAS} \"sudo chown -R\n    ${WEB_USER}:${WEB_GROUP} ${WEB_DIR}/storage; ls -lao\n    ${WEB_DIR}/storage\"\nnewdeploy: buildfrontend rsynca copyenvprod fixgroupuser fixownership migrate ##first deploy\nmigratestatus: ## list the migration status\n    ssh ${SSH_ALIAS} \"cd ${WEB_DIR}; php artisan\n    migrate:status --env=prod\"\nmigrate: ## Execute migrate command for DB schema\n    ssh ${SSH_ALIAS} \"cd ${WEB_DIR}; php artisan migrate\n    --env=prod\"\nmigrateseed: ## Execute migrate command for DB schema\n    ssh ${SSH_ALIAS} \"cd ${WEB_DIR}; php artisan\n    migrate:refresh --seed --env=prod\"\nmigraterefresh: ## Execute migrate command for DB schema\n    ssh ${SSH_ALIAS} \"cd ${WEB_DIR}; php artisan\n    migrate:refresh\"\nbuildfrontend: ## execute npm task to compile frontend assets (js and css...)\n    npm run build\noptimize: ## Optimize application in production\n    ssh ${SSH_ALIAS} \"cd ${WEB_DIR}; php artisan\n    config:cache; php artisan route:cache; php artisan\n    view:cache\"\ncomposerinstallnodev:\n    composer install --optimize-autoloader  --no-dev\nrestartworkers:\n    ssh ${SSH_ALIAS} \"cd ${WEB_DIR}; php artisan octane:reload\"\noctanestatus:\n    ssh ${SSH_ALIAS} \"cd ${WEB_DIR}; php artisan octane:status\"\ninstalldevdeps:\n    composer install\n    npm run dev\n    php artisan config:clear\ndeploy: buildfrontend composerinstallnodev rsynca copyenvprod migrate restartworkers installdevdeps\n```", "```php\ncomposer install --optimize-autoloader  --no-dev\n```", "```php\nrsync ${DRY_RUN} -rlcgovzi -e \"ssh\" --delete . ${SSH_ALIAS}:${WEB_DIR}  --exclude-from 'exclude-list.txt'\n```", "```php\ninclude Makefile.param.prod\n```", "```php\n.git\n.sass-cache/\nMakefile*\nexclude-list.txt\nnohup.out\ncomposer.phar\nnode_modules\n.env*\n.idea\n.editorconfig\n.babelrc\n.gitattributes\nlogs\n*.log\nnpm-debug.log*\nnode_modules\nstorage/framework/cache/*\nstorage/framework/sessions/*\nstorage/framework/views/*\nstorage/logs/*\nstorage/app/*\nstorage/testing/*\nexports/*\napp/config/prod/*\napp/config/stage/*\nresources/assets\npublic/files\npublic/chunks\npublic/storage\nbootstrap/cache/config.php\n.phpunit.result.cache\n```", "```php\nscp .env.prod ${SSH_ALIAS}:${WEB_DIR}/.env\n```", "```php\nssh ${SSH_ALIAS} \"cd ${WEB_DIR}; php artisan migrate --env=prod\"\n```", "```php\nssh ${SSH_ALIAS} \"cd ${WEB_DIR}; php artisan config:cache; php artisan route:cache; php artisan view:cache\"\n```", "```php\nssh ${SSH_ALIAS} \"cd ${WEB_DIR}; php artisan octane:reload\"\n```", "```php\ncomposer install\nphp artisan config:clear\n```", "```php\nmake -f Makefile.deploy deploy\n```"]