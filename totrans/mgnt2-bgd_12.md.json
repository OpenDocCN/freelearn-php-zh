["```php\nphp bin/magento dev:tests:run â€“help\n\n```", "```php\nUsage:\n dev:tests:run [type]\nArguments:\n type Type of test to run. Available types: all, unit, integration, integration-all, static, static-all, integrity, legacy, default (default: \"default\")\n\n```", "```php\n$this->commands = [\n    'unit'                   => ['../tests/unit', ''],\n    'unit-performance'       => ['../tests/performance/ framework/tests/unit', ''],\n    'unit-static'            => ['../tests/static/ framework/tests/unit', ''],\n    'unit-integration'       => ['../tests/integration/ framework/tests/unit', ''],\n    'integration'            => ['../tests/integration', ''],\n    'integration-integrity'  => ['../tests/integration', ' testsuite/Magento/ Test/Integrity'],\n    'static-default'         => ['../tests/static', ''],\n    'static-legacy'          => ['../tests/static', ' testsuite/Magento/Test/Legacy'],\n    'static-integration-js'  => ['../tests/static', ' testsuite/Magento/Test/ Js/Exemplar'],\n];\n```", "```php\n$this->types = [\n    'all'             => array_keys($this->commands),\n    'unit'            => ['unit', 'unit-performance', 'unit- static', 'unit-integration'],\n    'integration'     => ['integration'],\n    'integration-all' => ['integration', 'integration-integrity'],\n    'static'          => ['static-default'],\n    'static-all'      => ['static-default', 'static-legacy', 'static-integration-js'],\n    'integrity'       => ['static-default', 'static-legacy', 'integration-integrity'],\n    'legacy'          => ['static-legacy'],\n    'default'         => [\n        'unit',\n        'unit-performance',\n        'unit-static',\n        'unit-integration',\n        'integration',\n        'static-default',\n    ],\n];\n```", "```php\nphp bin/magento dev:tests:run unit\n\n```", "```php\nphp /www/magento2/./vendor/phpunit/phpunit/phpunit\n\n```", "```php\n../../../app/code/*/*/Test/Unit\n../../../dev/tools/*/*/Test/Unit\n../../../dev/tools/*/*/*/Test/Unit\n../../../lib/internal/*/*/Test/Unit\n../../../lib/internal/*/*/*/Test/Unit\n../../../setup/src/*/*/Test/Unit\n../../../update/app/code/*/*/Test/Unit\n../../../vendor/*/module-*/Test/Unit\n../../../vendor/*/framework/Test/Unit\n../../../vendor/*/framework/*/Test/Unit\n```", "```php\nphp bin/magento dev:tests:run integration\n\n```", "```php\nphp /Users/branko/www/magento2/./vendor/phpunit/phpunit/phpunit\n\n```", "```php\nphp bin/magento dev:tests:run static\n\n```", "```php\nphp /Users/branko/www/magento2/./vendor/phpunit/phpunit/phpunit\n\n```", "```php\nphp bin/magento dev:tests:run integrity\n\n```", "```php\nphp /Users/branko/www/magento2/./vendor/phpunit/phpunit/phpunit\nphp /Users/branko/www/magento2/./vendor/phpunit/phpunit/phpunit testsuite/Magento/Test/Legacy\n\n```", "```php\nphp /Users/branko/www/magento2/./vendor/phpunit/phpunit/phpunit testsuite/Magento/Test/Integrity\n\n```", "```php\nphp bin/magento dev:tests:run legacy\n\n```", "```php\nphp /Users/branko/www/magento2/./vendor/phpunit/phpunit/phpunit testsuite/Magento/Test/Legacy\n\n```", "```php\njmeter -n \\\n-t /Users/branko/www/magento2/setup/performance-toolkit/benchmark.jmx \\\n-l /Users/branko/Desktop/jmeter-tmp/results.jtl \\\n-Jhost=\"magento2.ce\" \\\n-Jbase_path=\"/\" \\\n-Jreport_save_path=\"/Users/branko/report\" \\\n-Jloops=2 \\\n-Jurl_suffix=\".html\" \\\n-Jcustomer_email=\"john.doe@email.loc\" \\\n-Jcustomer_password=\"abc123\" \\\n-Jadmin_path=\"/admin_nwb0bx\" \\\n-Jadmin-user=\"john\" \\\n-Jadmin-password=\"abc123\" \\\n-Jresponse_time_file_name=\"/Users/branko/report/AggregateGraph.csv\" \\\n-Jsimple_product_url_key=\"simple-product-1\" \\\n-Jsimple_product_name=\"Simple Product 1\" \\\n-Jconfigurable_product_url_key=\"configurable-product-1\" \\\n-Jconfigurable_product_name=\"Configurable Product 1\" \\\n-Jcategory_url_key=\"category-1\" \\\n-Jcategory_name=\"Category 1\" \\\n-Jsleep_between_steps=50\n\n```", "```php\n    || Item               || Count || Time ||\n    || Page Classes       || 152   || 0    ||\n    || Fixture Classes    || 46    || 0    ||\n    || Repository Classes || 67    || 0    ||\n    || Block              || 475   || 0    ||\n    || Fixture            || 100   || 0    ||\n    || Handler            || 3     || 0    ||\n    || Page               || 165   || 0    ||\n    || Repository         || 67    || 0    ||\n    ```", "```php\nphpunit tests/app/Magento/Customer/Test/TestCase /RegisterCustomerFrontendEntityTest.php\n\n```", "```php\nphpunit --filter RegisterCustomerFrontendEntityTest\n\n```", "```php\nphp bin/magento module:enable Foggyline_Unitly\nphp bin/magento setup:upgrade\n\n```", "```php\n<directory suffix=\"Test.php\">\n    ../../../app/code/*/*/Test/Unit\n</directory>\n```", "```php\nnamespace Foggyline\\Unitly\\Test\\Unit\\Controller\\Hello;\n\nclass ShoutTest extends \\PHPUnit_Framework_TestCase\n{\n    protected $resultPageFactory;\n    protected $controller;\n\n    public function setUp()\n    {\n        /* setUp() code here */\n    }\n\n    public function testExecute()\n    {\n        /* testExecute() code here */\n    }\n}\n```", "```php\n$request = $this->getMock(\n    'Magento\\Framework\\App\\Request\\Http',\n    [],\n    [],\n    '',\n    false\n);\n\n$context = $this->getMock(\n    '\\Magento\\Framework\\App\\Action\\Context',\n    ['getRequest'],\n    [],\n    '',\n    false\n);\n\n$context->expects($this->once())\n    ->method('getRequest')\n    ->willReturn($request);\n\n$this->resultPageFactory = $this-> getMockBuilder ('Magento\\Framework\\View\\Result\\PageFactory')\n    ->disableOriginalConstructor()\n    ->setMethods(['create'])\n    ->getMock();\n\n$this->controller = new \\Foggyline\\Unitly\\Controller\\Hello\\Shout(\n    $context,\n    $this->resultPageFactory\n);\n```", "```php\n$title = $this-> getMockBuilder('Magento\\Framework\\View\\Page\\Title')\n    ->disableOriginalConstructor()\n    ->getMock();\n$title->expects($this->once())\n    ->method('set')\n    ->with('Unitly');\n\n$config = $this-> getMockBuilder('Magento\\Framework\\View\\Page\\Config')\n    ->disableOriginalConstructor()\n    ->getMock();\n$config->expects($this->once())\n    ->method('getTitle')\n    ->willReturn($title);\n\n$page = $this-> getMockBuilder('Magento\\Framework\\View\\Result\\Page')\n    ->disableOriginalConstructor()\n    ->getMock();\n$page->expects($this->once())\n    ->method('getConfig')\n    ->willReturn($config);\n\n$this->resultPageFactory->expects($this->once())\n    ->method('create')\n    ->willReturn($page);\n\n$result = $this->controller->execute();\n\n$this->assertInstanceOf('Magento\\Framework\\View\\Result\\Page', $result);\n```", "```php\nnamespace Foggyline\\Unitly\\Test\\Unit\\Block\\Hello;\n\nclass ShoutTest extends \\PHPUnit_Framework_TestCase\n{\n    /**\n     * @var \\Foggyline\\Unitly\\Block\\Hello\\Shout\n     */\n    protected $block;\n\n    protected function setUp()\n    {\n        $objectManager = new \\Magento\\Framework\\TestFramework\\Unit \\Helper\\ObjectManager($this);\n        $this->block = $objectManager-> getObject('Foggyline\\Unitly\\Block\\Hello\\Shout');\n    }\n\n    public function testGreeting()\n    {\n        $name = 'Foggyline';\n\n        $this->assertEquals(\n            'Hello '.$this->block->escapeHtml($name),\n            $this->block->greeting($name)\n        );\n    }\n}\n```", "```php\n<phpunit  xsi:noNamespaceSchemaLocation=\"http://schema.phpunit.de /4.1/phpunit.xsd\"\n         colors=\"true\"\n         bootstrap=\"./framework/bootstrap.php\"\n        >\n    <testsuite name=\"Foggyline_Unitly - Unit Tests\">\n        <directory suffix=\"Test.php\">\n            ../../../app/code/Foggyline/Unitly/Test/Unit\n        </directory>\n    </testsuite>\n    <php>\n        <ini name=\"date.timezone\" value=\"Europe/Zagreb\"/>\n        <ini name=\"xdebug.max_nesting_level\" value=\"200\"/>\n    </php>\n    <filter>\n        <whitelist addUncoveredFilesFromWhiteList=\"true\">\n            <directory suffix=\".php\">\n                ../../../app/code/Foggyline/Unitly/*\n            </directory>\n        </whitelist>\n    </filter>\n    <logging>\n        <log type=\"coverage-html\" target=\"coverage_dir/Foggyline_Unitly/test- reports/coverage\" charset=\"UTF-8\" yui=\"true\" highlight=\"true\"/>\n    </logging>\n</phpunit>\n```"]