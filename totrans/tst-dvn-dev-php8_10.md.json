["```php\ncurl -Lo phptdd.zip \"https://github.com/PacktPublishing/Test-Driven-Development-with-PHP-8/raw/main/Chapter%2010/complete.zip\" && unzip -o phptdd.zip && cd complete && ./demoSetup.sh\n```", "```php\ndocker ps\n```", "```php\ndocker-compose build && docker-compose up -d\ndocker exec -it docker_server-web_1 /bin/bash\n```", "```php\n/var/www/html/symfony# ./setup.sh\n```", "```php\n/var/www/html/symfony# ./runCoverage.sh\n```", "```php\n    {\n    ```", "```php\n        “Version”: “2012-10-17”,\n    ```", "```php\n        “Statement”: [\n    ```", "```php\n            {\n    ```", "```php\n                “Effect”: “Allow”,\n    ```", "```php\n                “Principal”: {\n    ```", "```php\n                    “Service”: [\n    ```", "```php\n                        “ec2.amazonaws.com”,\n    ```", "```php\n                        “codedeploy.ap-southeast-2.\n    ```", "```php\n                            amazonaws.com”\n    ```", "```php\n                    ]\n    ```", "```php\n                },\n    ```", "```php\n                “Action”: “sts:AssumeRole”\n    ```", "```php\n            }\n    ```", "```php\n        ]\n    ```", "```php\n    }\n    ```", "```php\n    sudo yum update -y\n    ```", "```php\n    sudo yum install -y ruby\n    ```", "```php\n    sudo yum install -y wget\n    ```", "```php\n    wget https://aws-codedeploy-ap-southeast-2.s3.ap-\n    ```", "```php\n     southeast-2.amazonaws.com/latest/install\n    ```", "```php\n    chmod +x ./install\n    ```", "```php\n    sudo ./install auto\n    ```", "```php\n    sudo service codedeploy-agent status\n    ```", "```php\n    sudo amazon-linux-extras install -y docker\n    ```", "```php\n    sudo service docker start\n    ```", "```php\n    sudo usermod -aG docker ec2-user\n    ```", "```php\n    sudo chkconfig docker on\n    ```", "```php\n    docker --version\n    ```", "```php\n    sudo reboot\n    ```", "```php\n    sudo curl -L “https://github.com/docker/compose/releases/download/v2.11.2/docker-compose-$(uname -s)-$(uname -m)” -o /usr/local/bin/docker-compose\n    ```", "```php\n    sudo chmod +x /usr/local/bin/docker-compose\n    ```", "```php\n    docker-compose --version\n    ```", "```php\n- step:\n    name: Package and Upload\n    script:\n      - apk add zip\n      - zip -r phptddapp.zip .\n      - pipe: atlassian/aws-code-deploy:0.2.10\n        variables:\n          AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION\n          AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID\n          AWS_SECRET_ACCESS_KEY: \n              $AWS_SECRET_ACCESS_KEY\n          COMMAND: ‘upload’\n          APPLICATION_NAME: ‘mycodedeployapp’\n          ZIP_FILE: ‘phptddapp.zip’\n          S3_BUCKET: $S3_BUCKET\n          VERSION_LABEL: ‘phptdd-app-1.0.0’\n- step:\n    name: Deploy to AWS\n    script:\n      - pipe: atlassian/aws-code-deploy:0.2.5\n        variables:\n          AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION\n          AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID\n          AWS_SECRET_ACCESS_KEY: \n              $AWS_SECRET_ACCESS_KEY\n          APPLICATION_NAME: $APPLICATION_NAME\n          DEPLOYMENT_GROUP: $DEPLOYMENT_GROUP\n          S3_BUCKET: $S3_BUCKET\n          COMMAND: ‘deploy’\n          VERSION_LABEL: ‘phptdd-app-1.0.0’\n          IGNORE_APPLICATION_STOP_FAILURES: ‘true’\n          FILE_EXISTS_BEHAVIOR: ‘OVERWRITE’\n          WAIT: ‘true’\n```", "```php\nversion: 0.0\nos: linux\nfiles:\n  - source: /\n    destination: /home/ec2-user/phptdd\nhooks:\n  AfterInstall:\n    - location: aws/codedeploy/containers_setup_php.sh\n      timeout: 3600\n      runas: ec2-user\n```", "```php\n#!/bin/bash\n# Build and run containers (PHP, MySQL)\ndocker-compose -f ~/phptdd/docker/docker-compose-production.yml down\ndocker-compose -f ~/phptdd/docker/docker-compose-production.yml build\ndocker-compose -f ~/phptdd/docker/docker-compose-production.yml up -d\n# Setup the PHP Applications inside the containers (install composer packages, setup db, etc).\ndocker-compose -f ~/phptdd/docker/docker-compose-production.yml exec server-web php --version\ndocker-compose -f ~/phptdd/docker/docker-compose-production.yml exec server-web /var/www/html/symfony/setup.sh\ndocker-compose -f ~/phptdd/docker/docker-compose-production.yml exec server-web /var/www/html/behat/setup.sh\n```", "```php\ndocker ps\n```", "```php\ndocker-compose -f -/phptdd/docker/docker-compose-production.yml\n```"]