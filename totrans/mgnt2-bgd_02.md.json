["```php\nA 'Vagrantfile' has been placed in this directory. You are now ready to 'vagrant up' your first virtual environment! Please read the comments in the Vagrantfile as well as documentation on 'vagrantup.com' for more information on using Vagrant.\n```", "```php\n# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\nVagrant.configure(2) do |config|\n  config.vm.box = \"base\"\nend\n```", "```php\nip: 192.168.10.10\ns3:\n  access_key: \"AKIAIPRNHSWEQNWHLCDQ\"\n  secret_key: \"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\"\n  bucket: \"foggy-project-dhj6\"\nsynced_folder:\n  host_path: \"/Users/branko/www/B05032-Magento-Box/\"\n  guest_path: \"/vagrant-B05032-Magento-Box/\"\nmysql:\n  host: \"127.0.0.1\"\n  username: root\n  password: user123\nhttp_basic:\n  repo_magento_com:\n    username: a8adc3ac98245f519ua0d2v2c8770ec8\n    password: a38488dc908c6d6923754c268vc41bc4\ngithub_oauth:\n  github_com: \"d79fb920d4m4c2fb9d8798b6ce3a043f0b7c2af6\"\nmagento:\n  db_name: \"magento\"\n  admin_firstname: \"John\"\n  admin_lastname: \"Doe\"\n  admin_password: \"admin123\"\n  admin_user: \"admin\"\n  admin_email: \"email@change.me\"\n  backend_frontname: \"admin\"\n  language: \"en_US\"\n  currency: \"USD\"\n  timezone: \"Europe/London\"\n  base_url: \"http://magento.box\"\n  fixture: \"small\"\n```", "```php\n# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\nrequire 'yaml'\n\nvagrantConfig = YAML.load_file 'Vagrantfile.config.yml'\n\nVagrant.configure(2) do |config|\n\n  config.vm.box = \"ubuntu/vivid64\"\n\n  config.vm.network \"private_network\", ip: vagrantConfig['ip']\n\n  # Mount local \"~/www/B05032-Magento-Box/\" path into box's \"/vagrant-B05032-Magento-Box/\" path\n  config.vm.synced_folder vagrantConfig['synced_folder']['host_path'], vagrantConfig['synced_folder']['guest_path'], owner:\"vagrant\", group: \"www-data\", mount_options:[\"dmode=775, fmode=664\"]\n\n  # VirtualBox specific settings\n  config.vm.provider \"virtualbox\" do |vb|\n    vb.gui = false\n    vb.memory = \"2048\"\n    vb.cpus = 2\n  end\n\n  # <provisioner here>\n\nend\n```", "```php\n192.168.10.10 magento.box\n```", "```php\nconfig.vm.provision \"file\", source: \"~/.gitconfig\", destination: \".gitconfig\"\nconfig.vm.provision \"shell\", inline: \"sudo apt-get update\"\n```", "```php\nconfig.vm.provision \"shell\", inline: \"sudo apt-get -y install php5 php5-dev php5-curl php5-imagick php5-gd php5-mcrypt php5-mhash php5-mysql php5-xdebug php5-intl php5-xsl\"\nconfig.vm.provision \"shell\", inline: \"sudo php5enmod mcrypt\"\nconfig.vm.provision \"shell\", inline: \"echo \\\"xdebug.max_nesting_level=200\\\" >> /etc/php5/apache2/php.ini\"\nconfig.vm.provision \"shell\", inline: \"sudo apt-get -y install phpunit\"\n```", "```php\nconfig.vm.provision \"shell\", inline: \"sudo debconf-set-selections <<< 'mysql-server mysql-server/root_password password #{vagrantConfig['mysql']['password']}'\"\nconfig.vm.provision \"shell\", inline: \"sudo debconf-set-selections <<< 'mysql-server mysql-server/root_password_again password #{vagrantConfig['mysql']['password']}'\"\nconfig.vm.provision \"shell\", inline: \"sudo apt-get -y install mysql-server\"\nconfig.vm.provision \"shell\", inline: \"sudo service mysql start\"\nconfig.vm.provision \"shell\", inline: \"sudo update-rc.d mysql defaults\"\n```", "```php\nconfig.vm.provision \"shell\", inline: \"sudo apt-get -y install apache2\"\nconfig.vm.provision \"shell\", inline: \"sudo update-rc.d apache2 defaults\"\nconfig.vm.provision \"shell\", inline: \"sudo service apache2 start\"\nconfig.vm.provision \"shell\", inline: \"sudo a2enmod rewrite\"\nconfig.vm.provision \"shell\", inline: \"sudo awk '/<Directory \\\\/>/,/AllowOverride None/{sub(\\\"None\\\", \\\"All\\\",$0)}{print}' /etc/apache2/apache2.conf > /tmp/tmp.apache2.conf\"\nconfig.vm.provision \"shell\", inline: \"sudo mv /tmp/tmp.apache2.conf /etc/apache2/apache2.conf\"\nconfig.vm.provision \"shell\", inline: \"sudo awk '/<Directory \\\\/var\\\\/www\\\\/>/,/AllowOverride None/{sub(\\\"None\\\", \\\"All\\\",$0)}{print}' /etc/apache2/apache2.conf > /tmp/tmp.apache2.conf\"\nconfig.vm.provision \"shell\", inline: \"sudo mv /tmp/tmp.apache2.conf /etc/apache2/apache2.conf\"\nconfig.vm.provision \"shell\", inline: \"sudo service apache2 stop\"\n```", "```php\nconfig.vm.provision \"shell\", inline: \"sudo rm -Rf /var/www/html\"\nconfig.vm.provision \"shell\", inline: \"sudo ln -s #{vagrantConfig['synced_folder']['guest_path']} /var/www/html\"\n```", "```php\nconfig.vm.provision \"shell\", inline: \"curl -sS https://getcomposer.org/installer | php\"\nconfig.vm.provision \"shell\", inline: \"mv composer.phar /usr/local/bin/composer\"\nconfig.vm.provision \"shell\", inline: \"composer clearcache\"\nconfig.vm.provision \"shell\", inline: \"echo '{\\\"http-basic\\\": {\\\"repo.magento.com\\\": {\\\"username\\\": \\\"#{vagrantConfig ['http_basic']['repo_magento_com']['username']}\\\",\\\"password\\\": \\\"#{vagrantConfig['http_basic']['repo_magento_com']['password']} \\\"}}, \\\"github-oauth\\\": {\\\"github.com\\\": \\\"#{vagrantConfig['github_oauth']['github_com']}\\\"}}' >> /root/.composer/auth.json\"\nconfig.vm.provision \"shell\", inline: \"composer create-project -- repository-url=https://repo.magento.com/ magento/project- community-edition /var/www/html/\"\n```", "```php\nconfig.vm.provision \"shell\", inline: \"sudo mysql -- user=#{vagrantConfig['mysql']['username']} -- password=#{vagrantConfig['mysql']['password']} -e \\\"CREATE DATABASE #{vagrantConfig['magento']['db_name']};\\\"\"\n```", "```php\nconfig.vm.provision \"shell\", inline: \"sudo php /var/www/html/bin/magento setup:install --base- url=\\\"#{vagrantConfig['magento']['base_url']}\\\" --db- host=\\\"#{vagrantConfig['mysql']['host']}\\\" --db- user=\\\"#{vagrantConfig['mysql']['username']}\\\" --db- password=\\\"#{vagrantConfig['mysql']['password']}\\\" --db- name=\\\"#{vagrantConfig['magento']['db_name']}\\\" --admin- firstname=\\\"#{vagrantConfig['magento']['admin_firstname']}\\\" -- admin-lastname=\\\"#{vagrantConfig['magento']['admin_lastname']}\\\" --admin-email=\\\"#{vagrantConfig['magento']['admin_email']}\\\" -- admin-user=\\\"#{vagrantConfig['magento']['admin_user']}\\\" -- admin-password=\\\"#{vagrantConfig['magento']['admin_password']}\\\" --backend- frontname=\\\"#{vagrantConfig['magento']['backend_frontname']}\\\" - -language=\\\"#{vagrantConfig['magento']['language']}\\\" -- currency=\\\"#{vagrantConfig['magento']['currency']}\\\" -- timezone=\\\"#{vagrantConfig['magento']['timezone']}\\\"\"\nconfig.vm.provision \"shell\", inline: \"sudo php /var/www/html/bin/magento deploy:mode:set developer\"\nconfig.vm.provision \"shell\", inline: \"sudo php /var/www/html/bin/magento cache:disable\"\nconfig.vm.provision \"shell\", inline: \"sudo php /var/www/html/bin/magento cache:flush\"\nconfig.vm.provision \"shell\", inline: \"sudo php /var/www/html/bin/magento setup:performance:generate-fixtures /var/www/html/setup/performance-toolkit/profiles/ce/small.xml\"\n```", "```php\nSQLSTATE[28000] [1045] Access denied for user 'root'@'localhost' (using password: NO)\nUser Name is a required field.\nFirst Name is a required field.\nLast Name is a required field.\n'magento.box' is not a valid hostname for email address 'john.doe@magento.box'\n'magento.box' appears to be a DNS hostname but cannot match TLD against known list\n'magento.box' appears to be a local network name but local network names are not allowed\nPassword is required field.\nYour password must be at least 7 characters.\nYour password must include both numeric and alphabetic characters.\n```", "```php\n#!/bin/bash\napt-get update\napt-get -y install s3cmd\n\n```", "```php\nsudo debconf-set-selections <<< \"postfix postfix/mailname string magentize.me\"\nsudo debconf-set-selections <<< \"postfix postfix/main_mailer_type string 'Internet Site'\"\nsudo apt-get install -y postfix\nsudo /etc/init.d/postfix reload\n\n```", "```php\napt-get -y install php5 php5-dev php5-curl php5-imagick php5-gd php5- mcrypt php5-mhash php5-mysql php5-xdebug php5-intl php5-xsl\nphp5enmod mcrypt\nphp5dismod xdebug\nservice php5-fpm restart\napt-get -y install phpunit\necho \"Starting Composer stuff\" >> /var/tmp/box-progress.txt\ncurl -sS https://getcomposer.org/installer | php\nmv composer.phar /usr/local/bin/composer\n\n```", "```php\ndebconf-set-selections <<< 'mysql-server mysql-server/root_password password RrkSBi6VDg6C'\ndebconf-set-selections <<< 'mysql-server mysql-server/root_password_again password RrkSBi6VDg6C'\napt-get -y install mysql-server\nservice mysql start\nupdate-rc.d mysql defaults\n\n```", "```php\napt-get -y install apache2\nupdate-rc.d apache2 defaults\nservice apache2 start\na2enmod rewrite\nawk '/<Directory \\/>/,/AllowOverride None/{sub(\"None\", \"All\",$0)}{print}' /etc/apache2/apache2.conf > /tmp/tmp.apache2.conf\nmv /tmp/tmp.apache2.conf /etc/apache2/apache2.conf\nawk '/<Directory \\/var\\/www\\/>/,/AllowOverride None/{sub(\"None\", \"All\",$0)}{print}' /etc/apache2/apache2.conf > /tmp/tmp.apache2.conf\nmv /tmp/tmp.apache2.conf /etc/apache2/apache2.conf\nservice apache2 restart\n\n```", "```php\nsudo rm -Rf /var/www/html/*\ngit clone https://github.com/magento/magento2.git /var/www/html/.\nsudo composer config --global github-oauth.github.com 7d6da6bld50dub454edc27db70db78b1f8997e6\nsudo composer install --working-dir=\"/var/www/html/\"\nmysql -uroot -pRrkSBi6VDg6C -e \"CREATE DATABASE magento;\"\nPUBLIC_HOSTNAME=\"'wget -q -O - http://instance-data/latest/meta- data/public-hostname'\"\n\n```", "```php\nphp /var/www/html/bin/magento setup:install --base- url=\"http://$PUBLIC_HOSTNAME\" --db-host=\"127.0.0.1\" --db- user=\"root\" --db-password=\"RrkSBi6VDg6C\" --db-name=\"magento\" -- admin-firstname=\"John\" --admin-lastname=\"Doe\" --admin- email=\"john.doe@change.me\" --admin-user=\"admin\" --admin- password=\"pass123\" --backend-frontname=\"admin\" -- language=\"en_US\" --currency=\"USD\" --timezone=\"Europe/London\"\n```", "```php\nphp /var/www/html/bin/magento deploy:mode:set production\nphp /var/www/html/bin/magento cache:enable\nphp /var/www/html/bin/magento cache:flush\n\n```", "```php\nchown -R ubuntu:www-data /var/www/html\nfind /var/www/html -type f -print0 | xargs -r0 chmod 640\nfind /var/www/html -type d -print0 | xargs -r0 chmod 750\nchmod -R g+w /var/www/html/pub\nchmod -R g+w /var/www/html/var\nchmod -R g+w /var/www/html/app\nchmod -R g+w /var/www/html/vendor\n\n```", "```php\nCRON_CMD=\"mysql --user=root --password=RrkSBi6VDg6C magento | gzip -9 > ~/database.sql.gz\" CRON_JOB=\"30 2 * * * $CRON_CMD\"\n( crontab -l | grep -v \"$CRON_CMD\" ; echo \"$CRON_JOB\" ) | crontab -\n\nCRON_CMD=\"s3cmd  --access_key=\"AKIAINLIM7M6WGJKMMCQ\" -- secret_key=\"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\" put ~/database.sql.gz s3://foggy-project-ghj7/database/database_'date +\"%Y-%m-%d_%H-%M\"'.sql.gz\"\nCRON_JOB=\"30 3 * * * $CRON_CMD\"\n( crontab -l | grep -v \"$CRON_CMD\" ; echo \"$CRON_JOB\" ) | crontab -\n\n```", "```php\nCRON_CMD=\"tar -cvvzf ~/media.tar.gz /var/www/html/pub/media/\"\nCRON_JOB=\"30 2 * * * $CRON_CMD\"\n( crontab -l | grep -v \"$CRON_CMD\" ; echo \"$CRON_JOB\" ) | crontab -\n\nCRON_CMD=\"s3cmd --access_key=\"AKIAINLIM7M6WGJKMMCQ\" -- secret_key=\"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\" put ~/media.tar.gz s3://foggy-project-ghj7/media/media_'date +\"%Y-%m- %d_%H-%M\"'.tar.gz\"\nCRON_JOB=\"30 3 * * * $CRON_CMD\"\n( crontab -l | grep -v \"$CRON_CMD\" ; echo \"$CRON_JOB\" ) | crontab -\n\n```", "```php\nssh -i /path/to/magento-box.pem ubuntu@ec2-52-29-35-49.eu-central-1.compute.amazonaws.com\n\nssh -i /path/to/magento-box.pem ubuntu@52.29.35.49\n\n```", "```php\nsudo tail -f /var/tmp/box-progress.txt\n\n```", "```php\nmysql -uroot -pRrkSBi6VDg6C -e \"USE magento; UPDATE core_config_data SET value = 'http://our-domain.something/' WHERE path LIKE \"%web/unsecure/base_url%\";\"\nphp /var/www/html/bin/magento cache:flush\n\n```"]