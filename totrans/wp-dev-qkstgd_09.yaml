- en: Enhancing Security, Performance, and Maintenance
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提升安全性、性能和维护
- en: Up to this point, we looked at the development of WordPress sites using existing
    features as well as custom features. As developers, we can use the latest trending
    technologies, modern development techniques, and build sites with amazing interfaces.
    However, reasons such as exploitable code, poor performance, limitations in maintenance,
    and difficulty in migration can destroy sites with all the features and technologies.
    The non-functional aspects such as security, performance, code quality, and maintenance
    play a major role behind the scenes. So, it’s important to have the knowledge
    of using existing tools and services to address these areas in development.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们探讨了使用现有功能以及自定义功能开发WordPress站点。作为开发者，我们可以使用最新的趋势技术、现代开发技术，并构建具有惊人界面的站点。然而，如可利用的代码、性能不佳、维护限制和迁移困难等原因可能会破坏具有所有功能和技术的站点。非功能性方面，如安全性、性能、代码质量和维护，在幕后起着重要作用。因此，了解使用现有工具和服务来处理这些开发领域是非常重要的。
- en: We begin the chapter by understanding the importance of testing. We will be
    discussing different types of testing including unit testing, code quality and
    performance, and using the necessary tools. Then, we will be looking at the techniques
    of securing your WordPress site. Next, we look at the process of migrating sites
    from test server to live server using the necessary tools. Finally, we learn the
    necessary aspects of maintaining a site.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从理解测试的重要性开始本章。我们将讨论不同类型的测试，包括单元测试、代码质量和性能，以及使用必要的工具。然后，我们将探讨保护您的WordPress站点的技术。接下来，我们将查看使用必要工具将站点从测试服务器迁移到实时服务器的流程。最后，我们将学习维护站点所需的各个方面。
- en: 'In this chapter, we will be covering the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Introduction to testing
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试简介
- en: Unit and integration testing
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单元和集成测试
- en: Code quality and performance testing
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码质量和性能测试
- en: Securing WordPress sites
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保护WordPress站点
- en: Migrating WordPress sites
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 迁移WordPress站点
- en: Maintaining WordPress sites
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 维护WordPress站点
- en: By the end of this chapter, you should be able to build secure and maintainable
    sites, while optimizing the performance of features.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，您应该能够构建安全且易于维护的站点，同时优化功能性能。
- en: Introduction to testing
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试简介
- en: The process of testing the features of the site and code is critical for building
    successful sites or applications. This process allows us to detect any defects
    in the site before releasing to a live environment. There are several types of
    testing used in web development, where some of them play a very important role
    compared to others. We can test both functional and non-functional aspects of
    WordPress sites using these testing types. In this section, we are going to have
    a brief introduction to the most important functional and non-functional testing
    types.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 测试网站和代码的功能过程对于构建成功的网站或应用程序至关重要。这个过程使我们能够在将网站发布到实时环境之前检测到任何缺陷。在Web开发中使用了多种类型的测试，其中一些测试与其他测试相比起着非常重要的作用。我们可以使用这些测试类型测试WordPress站点的功能和非功能性方面。在本节中，我们将简要介绍最重要的功能性和非功能性测试类型。
- en: Unit and integration testing
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 单元和集成测试
- en: Unit testing is used to test each small component independent from others, while
    integration testing is used to test the application in combination with all the
    modules. These two tests fall into the functional category, as we are checking
    the functionality and logic of our code. Compared to other popular frameworks,
    WordPress code is not the easiest to test. However, we can use **PHPUnit** for
    testing themes as well as plugins in WordPress. Installing and implementing test
    cases with PHPUnit is beyond the scope of this chapter. You can find a guide for
    working with PHPUnit at [http://make.wordpress.org/core/handbook/automated-testing/](http://make.wordpress.org/core/handbook/automated-testing/).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 单元测试用于测试每个小组件，使其独立于其他组件，而集成测试用于测试应用程序与所有模块的组合。这两个测试都属于功能性类别，因为我们正在检查代码的功能和逻辑。与其他流行的框架相比，WordPress代码不是最容易测试的。然而，我们可以使用**PHPUnit**对WordPress中的主题以及插件进行测试。安装和实现PHPUnit测试用例超出了本章的范围。您可以在[http://make.wordpress.org/core/handbook/automated-testing/](http://make.wordpress.org/core/handbook/automated-testing/)找到使用PHPUnit的指南。
- en: WordPress provides a set of test cases for testing major features. Many developers
    have a limited knowledge about existing test cases as it's not available inside
    the core. You can access a complete list of test cases at [http://unit-tests.svn.wordpress.org/trunk/tests/](http://unit-tests.svn.wordpress.org/trunk/tests/).
    Make sure that you gain knowledge about testing WordPress by going through the
    existing test cases. Then, you can write test cases for your own plugins and themes
    for unit testing purposes.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: WordPress提供了一套用于测试主要功能的测试用例。许多开发者对现有的测试用例了解有限，因为它们不在核心中可用。你可以在[http://unit-tests.svn.wordpress.org/trunk/tests/](http://unit-tests.svn.wordpress.org/trunk/tests/)访问完整的测试用例列表。确保通过查看现有的测试用例来获取有关测试WordPress的知识。然后，你可以为你的插件和主题编写测试用例，用于单元测试目的。
- en: Code quality testing
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码质量测试
- en: Code quality testing falls into the non-functional category. This is one of
    the most important aspects of testing as the end user is not aware of the quality
    of code. Therefore, you can easily build sites by using plugins with low-quality
    code. However, it will be problematic in later stages when you work with different
    versions of WordPress, or use plugins that conflict with your code.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 代码质量测试属于非功能性类别。这是测试最重要的方面之一，因为最终用户并不知道代码的质量。因此，你可以很容易地使用低质量代码的插件来构建网站。然而，在后期阶段，当你使用不同版本的WordPress或使用与你的代码冲突的插件时，这将会成为问题。
- en: In WordPress sites, we can build our own plugins as well as use existing plugins.
    We can test our solutions by going through the code and fixing the code quality
    issues. However, it may not be practical when using existing plugins with thousands
    of lines of code. So, we need a solution that allows us to automatically test
    the code and provide a report with possible issues. Unfortunately, there are no
    up-to-date plugins in the directory that allow us to check the code of other plugins.
    So, the only way of automating the code testing process is by using a third-party
    service that checks the code and provides a report.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在WordPress网站上，我们可以构建自己的插件，也可以使用现有的插件。我们可以通过审查代码并修复代码质量问题来测试我们的解决方案。然而，当使用具有数千行代码的现有插件时，这可能并不实用。因此，我们需要一个允许我们自动测试代码并提供包含可能问题的报告的解决方案。不幸的是，目录中没有更新插件允许我们检查其他插件的代码。所以，自动化代码测试过程的唯一方法是通过使用第三方服务来检查代码并提供报告。
- en: Unfortunately, there are not many services either for testing plugin code. There
    is a service called **PluginTests** at [https://plugintests.com](https://plugintests.com) for
    testing the coding errors of WordPress plugins. However, it's limited to the plugins
    in the WordPress plugin directory. So, you won’t be able to test your custom plugins
    or premium plugins with this service. In development, we use many plugins from
    the WordPress plugin repository. Also, we can add our custom plugins to the repository
    as long as the source code is open. Therefore, we are going to look at the use
    of this service to quickly test plugins from the repository and find the errors,
    before deciding to use them.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，用于测试插件代码的服务也不多。有一个名为**PluginTests**的服务，位于[https://plugintests.com](https://plugintests.com)，用于测试WordPress插件的编码错误。然而，它仅限于WordPress插件目录中的插件。因此，你将无法使用此服务测试自定义插件或付费插件。在开发过程中，我们使用来自WordPress插件存储库的许多插件。此外，只要源代码是开放的，我们还可以将自定义插件添加到存储库中。因此，我们将研究如何使用此服务快速测试存储库中的插件并查找错误，在决定使用它们之前。
- en: Using the PluginTests service
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用PluginTests服务
- en: 'Once you visit [https://plugintests.com](https://plugintests.com), you will
    get a search section to check any plugin from the repository. You will also see
    two other sections, listing popular plugins and the most recently tested plugins.
    If the expected plugin is within these lists, you just click and get a report
    for that plugin instantly. Let’s consider the following screenshot for most recently
    tested plugins:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你访问了[https://plugintests.com](https://plugintests.com)，你将获得一个搜索部分来检查存储库中的任何插件。你还会看到两个其他部分，列出流行的插件和最近测试的插件。如果期望的插件在这些列表中，你只需点击即可立即获得该插件的报告。让我们考虑以下最近测试的插件的截图：
- en: '![](img/caf5e357-3a08-4eb4-a216-c0bb1f5b8dc4.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/caf5e357-3a08-4eb4-a216-c0bb1f5b8dc4.png)'
- en: We have the plugin name, time it was last tested, and the result in the list.
    You can see the availability of different results such as **ok**, **warning**
    and **failure**. The **ok** status means the plugin was tested successfully without
    issues. The statuses, **warning** and **failure**, mean there are issues with
    the plugin code. Usually, we will get minor JavaScript or PHP errors with the
    **warning** status. However, the **failure** status means that the service was
    unable to activate the plugin or there are fatal errors in the plugin code. So,
    we can have a brief understanding about the quality of the plugin just by looking
    at the status from the list.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在列表中可以看到插件名称、最后一次测试的时间和结果。你可以看到不同结果的可用性，例如**ok**、**warning**和**failure**。**ok**状态表示插件测试成功，没有问题。**warning**和**failure**状态表示插件代码存在问题。通常，我们会得到带有**warning**状态的轻微JavaScript或PHP错误。然而，**failure**状态意味着服务无法激活插件或插件代码中存在致命错误。因此，我们可以通过查看列表中的状态来简要了解插件的质量。
- en: 'When a plugin is not listed in the popular or most recent sections, you can
    search the plugin using the name or slug, and click the Search button to load
    the results. Consider the following screen for the generated result for the popular
    WooCommerce plugin:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 当插件未列在热门或最新部分时，你可以使用名称或短码搜索插件，并点击搜索按钮来加载结果。以下屏幕显示了热门WooCommerce插件生成的结果：
- en: '![](img/0559ba48-a50c-4db6-ba5d-e38979b8791e.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/0559ba48-a50c-4db6-ba5d-e38979b8791e.png)'
- en: 'Those different sections mean:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这些不同的部分意味着：
- en: '**Errors**: This section is filled with green ticks, meaning the plugin has
    no identifiable coding errors.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**错误**：本节充满了绿色的勾选标记，意味着插件没有可识别的编码错误。'
- en: '**Environment**: This section shows the WordPress, PHP, and MySQL versions
    used for the test along with the memory limit of the server.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**环境**：本节显示了用于测试的WordPress、PHP和MySQL版本，以及服务器的内存限制。'
- en: '**Performance**: This section gives a brief summary of the used resources and
    whether the plugin has any impact on the performance. As you can see, very limited
    memory is used for WooCommerce and the impact is insignificant, meaning that we
    can use the plugin without worrying too much about performance.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**性能**：本节简要总结了使用的资源以及插件是否对性能有任何影响。正如你所见，WooCommerce使用的内存非常有限，影响微乎其微，这意味着我们可以使用该插件而不必过于担心性能。'
- en: '**Plugin Info**: This section shows the plugin information such as the last
    updated date, active installs, and URL from [thewordpress.org](http://thewordpress.org) plugin
    page. These badges give you a straightforward idea about the compatibility with
    latest WordPress and PHP versions. WooCommerce is compatible with all the latest
    versions. You will see plugins with red color badges when there are incompatibilities,
    especially with PHP 7.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**插件信息**：本节显示了插件信息，例如最后更新日期、活跃安装和来自[thewordpress.org](http://thewordpress.org)插件页面的URL。这些徽章直接给出了与最新WordPress和PHP版本兼容性的直观想法。WooCommerce与所有最新版本兼容。当存在不兼容性时，你会看到带有红色徽章的插件，特别是与PHP
    7的不兼容性。'
- en: After these sections, you will see a list-tested screen of the plugin with HTTP
    status, load time, memory usage, JavaScript, and PHP errors. These screens will
    help you identify the errors in individual features. The PHP error log is at the
    bottom of this report. You can check the error log and fix any coding issues that
    impact the site features, or decide not to use third-party plugins with a considerable
    amount of errors.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些部分之后，你将看到插件的一个列表测试屏幕，包括HTTP状态、加载时间、内存使用、JavaScript和PHP错误。这些屏幕将帮助你识别单个功能中的错误。PHP错误日志位于此报告的底部。你可以检查错误日志并修复影响网站功能的任何编码问题，或者决定不使用具有大量错误的第三方插件。
- en: 'Apart from these features, we get useful info about a plugin, such as the following:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 除了这些功能之外，我们还可以获得有关插件的有用信息，如下所示：
- en: '**Roles and capabilities**: It''s important to know the roles and capabilities
    created by third-party plugins, as these permissions may not be compatible with
    some of the other third-party plugins.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**角色和权限**：了解第三方插件创建的角色和权限很重要，因为这些权限可能与某些其他第三方插件不兼容。'
- en: '**Widgets and custom post types**: Also, you will get to know the custom post
    types and widgets registered through the plugin.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**小工具和自定义文章类型**：此外，你还将了解通过插件注册的自定义文章类型和小工具。'
- en: '**Custom tables**: This is also important as we need to be aware of how and
    where third-party plugins store the data. Also, knowing the use of custom tables
    is important in migrating sites with necessary backups.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自定义表格**：这也很重要，因为我们需要了解第三方插件如何以及在哪里存储数据。此外，了解自定义表格的使用对于迁移需要备份的网站也很重要。'
- en: '**Resource usage**: This section shows the resource usage of common WordPress
    admin and frontend screens when the plugin is active and inactive. So, you can
    decide which areas are mostly impacted by the use of the plugin.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资源使用**：本节显示了插件激活和未激活时常见WordPress管理界面和前端屏幕的资源使用情况。因此，您可以决定哪些区域最易受插件使用的影响。'
- en: Overall, this is an excellent service for tracking coding errors in a plugin
    as well as understanding how each plugin affects your database and site features.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 总体而言，这是一个跟踪插件中编码错误以及了解每个插件如何影响您的数据库和网站功能的优秀服务。
- en: Performance testing
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 性能测试
- en: In the old days, we had slow internet connections and users were willing to
    wait for results. Nowadays, we have superspeed internet connections and super
    busy schedules. So, users expect instant results when using a site or application.
    Even a delay of a few seconds can lead the user to an alternative site. So, the
    performance has become a very important factor in website development. Therefore,
    we need to consider every possible action that improves the performance of the
    application.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去，我们拥有缓慢的互联网连接，用户愿意等待结果。如今，我们有了超高速的互联网连接和超忙碌的日程安排。因此，当使用网站或应用程序时，用户期望即时结果。即使是几秒钟的延迟也可能导致用户转向其他网站。因此，性能已成为网站开发中的一个非常重要的因素。因此，我们需要考虑所有可能提高应用程序性能的行动。
- en: In general, improving performance requires us to reduce the time of loading
    or executing a site feature, while reducing the bandwidth used for the request.
    So, we want the website to deliver the results as fast as possible while using
    the minimum amount of data, especially for mobile-based users.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，提高性能需要我们减少加载或执行网站功能所需的时间，同时减少请求使用的带宽。因此，我们希望网站尽可能快地提供结果，同时使用最少的数据量，尤其是对于基于移动端的用户。
- en: 'Let''s find out the possible ways of improving performance of a WordPress site:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们找出提高WordPress网站性能的可能方法：
- en: '**Caching application data**: Caching allows us to deliver site pages to users
    without connecting to a database or executing complex time consuming logic. It’s
    mostly suitable for sites that don’t change often.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缓存应用程序数据**：缓存允许我们在不连接到数据库或执行复杂且耗时的逻辑的情况下向用户提供网站页面。它主要适用于不经常更改的网站。'
- en: '**Compressing and minimizing files**: Generally, the size of data sent in a
    response impacts the loading or execution time. As the size gets lower, applications
    can provide the results faster. Compressing and minimizing files such as CSS,
    JavaScript, and images considerably reduces the size of the response. You can
    find many plugins for compressing and minimizing files of your application.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**压缩和最小化文件**：通常，响应中发送的数据量会影响加载或执行时间。随着数据量的减少，应用程序可以更快地提供结果。压缩和最小化CSS、JavaScript和图像等文件可以显著减少响应的大小。您可以在应用程序中找到许多用于压缩和最小化文件的插件。'
- en: '**Loading third-party files from fast CDNs**: Generally, we use at least a
    few open source libraries when developing applications. jQuery is one of the most
    common among such libraries. We load jQuery within the WordPress files to keep
    the consistency and prevent duplication. However, loading such files through a
    **Content Delivery Network** (**CDN**) can be used to improve the loading time
    of such files.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**从快速CDN加载第三方文件**：通常，我们在开发应用程序时至少使用几个开源库。jQuery是这类库中最常见的一个。我们将在WordPress文件中加载jQuery以保持一致性并防止重复。然而，通过**内容分发网络**（**CDN**）加载此类文件可以提高这些文件的加载时间。'
- en: '**Removing low-quality plugins**: We tend to use many plugins in web site development,
    and sometimes we can''t check the code quality of each plugin we use due to time
    constraints. So, some of the plugins with low-quality code or a lack of proper
    implementation can create major performance issues in our site. Therefore, we
    need to check how each plugin affects the performance of the site and replace
    low-quality plugins with alternative ones.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**移除低质量插件**：我们在网站开发中倾向于使用许多插件，有时由于时间限制，我们无法检查我们使用的每个插件的代码质量。因此，一些代码质量低或实现不当的插件可能会在我们的网站上造成严重的性能问题。因此，我们需要检查每个插件对网站性能的影响，并用替代品替换低质量插件。'
- en: '**Limiting the number of database queries**: We use many plugins in web development,
    and each plugin uses numerous database queries. On most occasions, these queries
    might be slowing down the application without our knowledge. Also, there can be
    many duplicate queries that can be converted into single queries with proper coding.
    So, it''s important to check the database query usage of the application and limit
    it as much as possible.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**限制数据库查询数量**：我们在网络开发中使用了众多插件，每个插件都会使用大量的数据库查询。在大多数情况下，这些查询可能会在不为我们所知的情况下减慢应用程序的速度。此外，还可能有许多可以转换为单个查询的重复查询。因此，检查应用程序的数据库查询使用情况并将其尽可能限制在最低限度是很重要的。'
- en: 'O**ptimizing existing queries**: Sometimes, developers tend to use their own
    queries when those features are available through optimized WordPress functions.
    Also, developers may add unnecessary complexity to queries due to the lack of
    knowledge. So, it''s important to identify the database queries that mostly impact
    the performance and optimize them.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**优化现有查询**：有时，当这些功能可以通过优化的WordPress函数实现时，开发者倾向于使用自己的查询。此外，由于缺乏知识，开发者可能会给查询添加不必要的复杂性。因此，识别对性能影响最大的数据库查询并对其进行优化是很重要的。'
- en: These are some of the main criteria that affect the performance of a web site.
    There are many other such criteria for improving the performance of a web site.
    We use existing plugins/services to measure the performance in development and
    identify the possible improvements. There are a wide range of existing plugins
    in the WordPress plugins directory for measuring the performance. We are going
    to look at one of the plugins among them, as we already looked at a few plugins
    when setting up the development environment in [Chapter 1](205a9625-512c-4925-a3a8-bfe8a1784773.xhtml),
    *Introduction to WordPress Development*.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是影响网站性能的一些主要标准。还有许多其他这样的标准可以用来提高网站的性能。我们使用现有的插件/服务来衡量开发中的性能并确定可能的改进。WordPress插件目录中有许多现有的插件可以用来衡量性能。我们将查看其中之一，因为我们已经在[第1章](205a9625-512c-4925-a3a8-bfe8a1784773.xhtml)，*WordPress开发简介*中设置开发环境时查看了一些插件。
- en: P3 - the Plugin Performance Profiler plugin
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: P3 - 插件性能分析插件
- en: 'Even though this plugin has not been updated for a while, it’s still a popular
    solution for checking the performance of individual plugins. We can use it to
    measure the impact of each activated plugin in any given page. You can download
    and install the plugin from [https://wordpress.org/plugins/p3-profiler](https://wordpress.org/plugins/p3-profiler).
    Once the plugin is activated, you can click on the P3 Plugin Profiler menu item
    in the Tools menu to load the scanning features. Then, you can click on the Start
    Scan button and you will get a screen similar to the following screenshot:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这个插件已经有一段时间没有更新了，但它仍然是检查单个插件性能的流行解决方案。我们可以用它来测量任何给定页面中每个激活的插件的影响。您可以从[https://wordpress.org/plugins/p3-profiler](https://wordpress.org/plugins/p3-profiler)下载并安装此插件。一旦插件被激活，您可以在工具菜单中点击P3插件分析器菜单项来加载扫描功能。然后，您可以点击开始扫描按钮，您将看到一个类似于以下屏幕截图的界面：
- en: '![](img/b59eae12-22bc-4e9a-a2b6-0c1249aac135.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/b59eae12-22bc-4e9a-a2b6-0c1249aac135.png)'
- en: 'We can use the Auto Scan or Manual Scan option to start scanning the site.
    The Auto Scan option scans different content of your site randomly and generates
    the reports. On the other hand, Manual Scan allows us to only visit the content
    based on our preference by clicking the links of the web site. Once results are
    generated, you will have a screen similar to the following with various details:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用自动扫描或手动扫描选项来开始扫描网站。自动扫描选项会随机扫描您网站的不同内容并生成报告。另一方面，手动扫描允许我们通过点击网站的链接来仅访问我们偏好的内容。一旦生成结果，您将看到一个类似于以下屏幕的界面，其中包含各种详细信息：
- en: '![](img/03b35a55-b871-4b34-87d1-d648019e99dc.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/03b35a55-b871-4b34-87d1-d648019e99dc.png)'
- en: We can see the Plugin Load Time, Plugin Impact, and the MySQL Queries per visit
    along with various charts in the available tabs. This allows us to directly see
    the plugins with the most performance impact. In this scenario, the WooCommerce
    plugin has the highest impact. Earlier, we used the PluginTest service and identified
    the resource usage of WooCommerce as insignificant. So, we can consider both results
    and come to the conclusion that this site is not using plugins that affect the
    performance, as WooCommerce is the plugin with highest impact. If some other plugin
    is having a higher impact, we can look at the code and use other tools to identify
    if there is an issue in the plugin that creates a major impact on performance.
    After such verification, we can keep the plugins or replace them with alternative
    plugins to reduce the plugin impact on our web site.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在可用的标签页中看到插件加载时间、插件影响以及每次访问的MySQL查询量，并伴随着各种图表。这使我们能够直接看到影响性能最大的插件。在这种情况下，WooCommerce插件的影响最大。之前，我们使用了PluginTest服务，并确定了WooCommerce的资源使用量微不足道。因此，我们可以考虑这两个结果，并得出结论，这个网站没有使用影响性能的插件，因为WooCommerce是影响最大的插件。如果其他插件有更大的影响，我们可以查看代码并使用其他工具来识别插件中是否存在对性能产生重大影响的重大问题。在完成此类验证后，我们可以保留插件或用替代插件替换它们，以减少插件对我们网站的影响。
- en: Securing WordPress sites
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保护WordPress网站
- en: The security of the site is one of the main concerns when developing sites or
    applications with WordPress. Open source code and the old coding techniques to
    keep the backward compatibility are two reasons for these security concerns. However,
    the major threat comes with the use of third-party plugins and themes, as there
    is no guarantee about the quality of them in many cases. So, it's essential to
    secure WordPress sites as much as possible to prevent attacks through plugins,
    themes, or known security concerns.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用WordPress开发网站或应用程序时，网站的安全性是主要关注点之一。开源代码和保持向后兼容性的旧编码技术是这些安全担忧的两个原因。然而，主要威胁来自于第三方插件和主题的使用，因为在很多情况下，对这些插件的质量没有保证。因此，尽可能确保WordPress网站的安全，以防止通过插件、主题或已知的网络安全问题进行攻击。
- en: 'The WordPress codex provides a separate section called **Hardening WordPress**
    for defining the necessary security constraints. You can read this security guide
    at [http://codex.wordpress.org/Hardening_WordPress](http://codex.wordpress.org/Hardening_WordPress).
    Let’s find out the common reasons for WordPress exploits and basic precautions:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: WordPress编码手册提供了一个名为**强化WordPress**的独立部分，用于定义必要的安全约束。您可以在[http://codex.wordpress.org/Hardening_WordPress](http://codex.wordpress.org/Hardening_WordPress)上阅读此安全指南。让我们找出WordPress漏洞的常见原因和基本预防措施：
- en: '**Username of the admin**: This is one of the most basic and primary reasons
    for exploits in WordPress sites. Many novice clients and developers keep **admin**
    as the username of the site administrator. So, the process of hacking becomes
    simpler as the attacker only has to find the password. So, it’s a must to change
    it to an advanced username including letters, numbers, and maybe some characters.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**管理员用户名**：这是WordPress网站漏洞的最基本和最根本的原因之一。许多新手客户和开发者将**admin**作为网站管理员的用户名。因此，黑客攻击的过程变得简单，攻击者只需要找到密码。所以，必须将其更改为一个包含字母、数字，甚至可能包含一些字符的高级用户名。'
- en: '**WordPress core updates**: Since it''s open source and the community is very
    large, there is a high-percentage chance of someone finding a bug in each WordPress
    release or using it to exploit the existing WordPress sites. However, these issues
    are identified very quickly and an updated version is released immediately to
    prevent the issue. Many WordPress sites are maintained by non-technical administrators
    without the support of a developer. So, these administrators don''t have the knowledge
    of updating WordPress or they are afraid of breaking the site by updates. The
    attackers can easily use the issues in old WordPress versions and exploit them.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**WordPress核心更新**：由于它是开源的，社区非常大，因此每个WordPress发布都存在很大可能性有人发现一个错误，或者利用它来攻击现有的WordPress网站。然而，这些问题被非常快速地识别出来，并立即发布更新版本以防止问题。许多WordPress网站由没有开发者支持的普通管理员维护。因此，这些管理员没有更新WordPress的知识，或者他们害怕更新会破坏网站。攻击者可以轻易利用旧WordPress版本中的问题并加以利用。'
- en: '**Plugin and theme updates**: This is even more problematic than WordPress
    updates. Many of the WordPress sites are done by third-party one-time developers.
    So, the quality of the plugins or themes is questionable as they only focus on
    completing the features within the estimated cost. So, there are lot of plugins
    and themes with exploitable code and many of these are not even actively maintained.
    So, we can''t expect a new version every time for fixing the bugs. Also, these
    sites are developed using dozens of WordPress plugins and hence manually updating
    versions of each plugin is not preferred by many administrators. So, the outdated
    versions of these plugins and themes can cause a major security threat. As a solution,
    you can enable automatic updates for WordPress.org-based plugins and themes by
    using `auto_update_plugin` and `auto_update_theme` filters, while returning `__return_true`
    as the value. However, there is a chance that updates of certain plugins or theme
    can cause conflicts in other plugins. Therefore, you need to keep a close eye
    on site functionality when using auto-updates.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**插件和主题更新**：这比WordPress更新更成问题。许多WordPress网站是由第三方一次性开发者完成的。因此，插件或主题的质量是可疑的，因为它们只关注在估算的成本内完成功能。所以，有很多插件和主题存在可利用的代码，其中许多甚至没有积极维护。因此，我们不能期望每次都有一个新版本来修复错误。此外，这些网站使用数十个WordPress插件开发，因此许多管理员不倾向于手动更新每个插件的版本。因此，这些插件和主题的过时版本可能造成重大的安全威胁。作为解决方案，您可以通过使用`auto_update_plugin`和`auto_update_theme`过滤器来启用基于WordPress.org的插件和主题的自动更新，并将值返回为`__return_true`。然而，某些插件或主题的更新可能会在其他插件中引起冲突。因此，在使用自动更新时，您需要密切关注网站的功能。'
- en: '**Configuration file location**: By default, the configuration file is located
    in the root folder of your WordPress installation and contains the most important
    database login details. So, it''s easier for the attacker as they know the file
    location. So, we need to protect this file by changing its location to a private
    directory in your WordPress site.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**配置文件位置**：默认情况下，配置文件位于WordPress安装的根目录中，并包含最重要的数据库登录详细信息。因此，攻击者知道文件位置，这更容易。因此，我们需要通过将文件位置更改为WordPress网站中的私有目录来保护此文件。'
- en: '**User roles and permissions**: There are five built-in user roles with different
    capabilities. In most sites, there are two or more people editing the content
    and managing the site. So, it''s important to only give these users necessary
    features by using user roles and capabilities, while preventing access to important
    parts of the WordPress site.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户角色和权限**：有五个内置的用户角色，具有不同的能力。在大多数网站上，有两人或更多人编辑内容和管理网站。因此，通过使用用户角色和能力仅给予这些用户必要的功能，同时防止访问WordPress网站的重要部分，这是非常重要的。'
- en: '**Login form security**: The default WordPress login functionality is secure.
    However, attackers may use tools to guess the passwords and gain access to the
    site. Therefore, we need to implement additional security measures on WordPress
    login. We can protect the login by implementing features such as limit failed
    login attempts, using two-factor authentication, restricting to certain IPs, and
    so on. We can easily find existing plugins to implement these features.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**登录表单安全**：默认的WordPress登录功能是安全的。然而，攻击者可能会使用工具猜测密码并获取对网站的访问权限。因此，我们需要在WordPress登录上实施额外的安全措施。我们可以通过实施限制失败的登录尝试、使用双因素认证、限制到某些IP地址等功能来保护登录。我们可以轻松地找到现有的插件来实现这些功能。'
- en: '**Backend file editing**: In case an attacker somehow gets access to a site,
    he can use the theme or plugin editor to modify the files and add malicious code
    or completely destroy the site by deleting the data as well as files. So, we need
    to use `define( ''DISALLOW_FILE_EDIT'', true )` in the config file to remove the
    file-editing capabilities for all users, or conditionally use it for certain users
    with custom code.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**后端文件编辑**：如果攻击者以某种方式获得了对网站的访问权限，他可以使用主题或插件编辑器来修改文件，添加恶意代码，或者通过删除数据和文件来完全破坏网站。因此，我们需要在配置文件中使用`define(
    ''DISALLOW_FILE_EDIT'', true )`来移除所有用户的文件编辑能力，或者通过自定义代码有条件地为某些用户使用它。'
- en: '**Password complexity**: This is one of the basic concerns in any site, not
    only in WordPress. Most administrators tend to use easy-to-remember simple passwords
    allowing attackers to guess them. So, the password needs to be long enough for
    the site to prevent attacks.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**密码复杂性**：这是任何网站的基本关注点之一，不仅限于WordPress。大多数管理员倾向于使用易于记忆的简单密码，这使得攻击者可以猜出它们。因此，密码需要足够长，以便网站能够防止攻击。'
- en: 'These are only some of the basic precautions for securing WordPress sites.
    We need to use advanced security features, along with these features for sites
    with sensitive data and functionality. It''s impossible to develop these advanced
    security features for use in development, unless your intention is building a
    security plugin. So, we have to use one or more top security plugins or services
    to secure the site. The following is a list of the most popular security plugins
    provided in the WordPress plugin directory:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 这些只是保护WordPress网站的一些基本预防措施。对于具有敏感数据和功能性的网站，我们需要使用高级安全功能，以及这些功能。除非你的意图是构建一个安全插件，否则不可能在开发中使用这些高级安全功能。因此，我们必须使用一个或多个顶级安全插件或服务来保护网站。以下是在WordPress插件目录中提供的最受欢迎的安全插件列表：
- en: '**iThemes Security**: [http://wordpress.org/plugins/better-wp-security/](http://wordpress.org/plugins/better-wp-security/)'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**iThemes Security**: [http://wordpress.org/plugins/better-wp-security/](http://wordpress.org/plugins/better-wp-security/)'
- en: '**BulletProof Security**: [http://wordpress.org/plugins/bulletproof-security/](http://wordpress.org/plugins/bulletproof-security/)'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**BulletProof Security**: [http://wordpress.org/plugins/bulletproof-security/](http://wordpress.org/plugins/bulletproof-security/)'
- en: '**All In One WP Security & Firewall** : [https://wordpress.org/plugins/all-in-one-wp-security-and-firewall/](https://wordpress.org/plugins/all-in-one-wp-security-and-firewall/)'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**All In One WP Security & Firewall** : [https://wordpress.org/plugins/all-in-one-wp-security-and-firewall/](https://wordpress.org/plugins/all-in-one-wp-security-and-firewall/)'
- en: We can choose one of these plugins based on the security features needed for
    a given site. It's possible to use more than one security plugin for providing
    different security features. However, there is a chance of them conflicting with
    each other and hence it's ideal to choose one quality plugin.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以根据特定网站所需的网络安全功能选择这些插件之一。使用多个安全插件提供不同的安全功能是可能的。然而，它们之间可能存在冲突的风险，因此选择一个高质量的插件是理想的。
- en: Migrating WordPress sites
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: WordPress网站迁移
- en: Generally, we develop sites on a staging server before migrating to the live
    server. The process of manually migrating sites is not practical in most scenarios
    as we have to manually back up the database, files, uploaded media, and upload
    to another server via FTP. So, we need to use a tool that allows us to automate
    the tasks of this process with a smooth migration. There are plugins that allow
    you to back up the database, files, and media separately, and then import them
    manually to the live server.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，我们在迁移到实际服务器之前在预发布服务器上开发网站。在大多数情况下，手动迁移网站的过程并不实用，因为我们必须手动备份数据库、文件、上传的媒体，并通过FTP上传到另一个服务器。因此，我们需要使用一个工具，允许我们通过平滑迁移自动化这个过程。有一些插件允许你分别备份数据库、文件和媒体，然后手动导入到实际服务器。
- en: 'We are going to look at a plugin that offers all these features within the
    same plugin, making migration a super simple task. You can find a plugin called
    All-in-One WP Migration. This plugin is available at [https://wordpress.org/plugins/all-in-one-wp-migration/](https://wordpress.org/plugins/all-in-one-wp-migration/).
    Once activated, you can click on the Export item from the All-In-One WP Migration
    menu item on the left menu. You will get a screen similar to the following:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将查看一个提供所有这些功能的同一插件，使迁移变得超级简单。你可以找到一个名为All-in-One WP Migration的插件。这个插件可以在[https://wordpress.org/plugins/all-in-one-wp-migration/](https://wordpress.org/plugins/all-in-one-wp-migration/)找到。一旦激活，你可以在左侧菜单的All-In-One
    WP Migration菜单项中点击导出项目。你将看到一个类似于以下屏幕的界面：
- en: '![](img/fe8ecc93-06a0-46f4-b064-382963952685.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fe8ecc93-06a0-46f4-b064-382963952685.png)'
- en: The exporting feature starts with the database replace feature. We can use this
    feature to find and replace anything in the database. This is quite useful for
    changing the URLs of custom data to match the live site URL. Next, we can select
    the File option from the EXPORT TO setting, and the plugin will generate the backup
    of your site to be downloaded as a single file with `wpress` as the extension.
    We can download the backup to our local machine.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 导出功能从数据库替换功能开始。我们可以使用这个功能在数据库中查找并替换任何内容。这对于将自定义数据的URL更改为与实际网站URL匹配非常有用。接下来，我们可以从“导出到”设置中选择文件选项，插件将生成一个以`wpress`为扩展名的单个文件作为网站的备份。我们可以将备份下载到本地机器。
- en: 'Now, we have to go to the live site and install the same plugin. This time,
    we have to use the Import section, as shown in the following screenshot:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们必须前往实际网站并安装相同的插件。这次，我们必须使用导入部分，如下面的截图所示：
- en: '![](img/24135950-90b8-4c8b-bba1-ed2bd0a3372b.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](img/24135950-90b8-4c8b-bba1-ed2bd0a3372b.png)'
- en: We can click on the IMPORT FROM button and add the exported `wpress` file generated
    in the previous section. Then, the plugin will migrate the entire site within
    minutes, making it a super-simple solution. Unlike other frameworks, we can completely
    migrate a WordPress site within a few minutes.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以点击“从导入”按钮，并添加上一节中生成的导出 `wpress` 文件。然后，插件将在几分钟内迁移整个网站，使其成为一个超级简单的解决方案。与其他框架不同，我们可以在几分钟内完全迁移一个
    WordPress 网站。
- en: The exported `wpress` files are stored in the `/wpcontent/ai1wm-backups` folder
    of your server. These files can be very large even for a basic websites. So, you
    have to make sure to remove the unnecessary backups to prevent the use of a large
    server space.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 导出的 `wpress` 文件存储在您的服务器 `/wpcontent/ai1wm-backups` 文件夹中。即使对于基本网站，这些文件也可能非常大。因此，您必须确保删除不必要的备份，以防止占用大量服务器空间。
- en: 'We can find all the exported and available backup files in the Backups menu
    of the plugin. So, we can easily restore a site to its previous point using a
    single click. This is one of the best plugin available for site migration. You
    can also consider the following plugins as alternatives for site migration:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在插件的“备份”菜单中找到所有已导出和可用的备份文件。因此，我们可以通过单次点击轻松地将网站恢复到之前的状态。这是目前最好的网站迁移插件之一。您还可以考虑以下插件作为网站迁移的替代方案：
- en: '**Duplicator**: [https://wordpress.org/plugins/duplicator/](https://wordpress.org/plugins/duplicator/)'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Duplicator**：[https://wordpress.org/plugins/duplicator/](https://wordpress.org/plugins/duplicator/)'
- en: '**WP Staging—DB & File Duplicator & Migration**: [https://wordpress.org/plugins/wp-staging/](https://wordpress.org/plugins/wp-staging/)'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**WP Staging—DB & File Duplicator & Migration**：[https://wordpress.org/plugins/wp-staging/](https://wordpress.org/plugins/wp-staging/)'
- en: '**XCloner**: Backup and Restore—[https://wordpress.org/plugins/xcloner-backup-and-restore/](https://wordpress.org/plugins/xcloner-backup-and-restore/)'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**XCloner**：备份和恢复—[https://wordpress.org/plugins/xcloner-backup-and-restore/](https://wordpress.org/plugins/xcloner-backup-and-restore/)'
- en: Each of these plugins offers different migration features including exports
    to Google Drive and other third-party services. So, you will have to try these
    plugins and choose the simplest plugin that migrates the sites, while being compatible
    with your hosting provider.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 这些插件中的每一个都提供了不同的迁移功能，包括导出到 Google Drive 和其他第三方服务。因此，您将不得不尝试这些插件，并选择迁移网站最简单的插件，同时确保它与您的托管提供商兼容。
- en: Maintaining WordPress sites
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 维护 WordPress 网站
- en: 'The process of maintaining sites is another problematic area in WordPress development.
    Many sites are built by non-technical clients without a developer, and hence they
    are not aware of the regular tasks in order to maintain the site. Once an issue
    is occurred, these clients looks for developers to fix them without having the
    necessary processes and resources. So, as a developer, it''s important to keep
    the site maintainable and transfer the knowledge on the maintenance process to
    the client, in case you are no longer working on that site. In this section, we
    are going to look at the primary tasks for properly maintaining a WordPress site
    and how to implement these tasks:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 维护网站的过程是 WordPress 开发中的另一个问题领域。许多网站是由没有开发者的非技术客户构建的，因此他们不了解维护网站的常规任务。一旦出现问题，这些客户就会寻找开发者来修复，而没有必要的流程和资源。因此，作为开发者，保持网站可维护性并将维护流程的知识传授给客户非常重要，以防你不再负责该网站。在本节中，我们将探讨维护
    WordPress 网站的主要任务以及如何实施这些任务：
- en: Backup files and databases
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 备份文件和数据库
- en: This is one of the must-do tasks in maintenance, ruled out by many non-technical
    site owners. WordPress powers over 25 percent of the web and hence the number
    of attacks on WordPress sites are equally high. So, we need regular backups of
    files and databases to be used in such occasions. Unfortunately, many site owners
    don't have a proper backup process and some of them assume that it's done automatically
    by the hosting server.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 这是在维护中必须完成的任务之一，许多非技术性的网站所有者都将其排除在外。WordPress 控制着超过 25% 的网络，因此针对 WordPress 网站的攻击数量同样很高。因此，我们需要定期备份文件和数据库，以便在类似情况下使用。不幸的是，许多网站所有者没有适当的备份流程，其中一些人认为这是由托管服务器自动完成的。
- en: 'There are hosting providers and features for automating the backup process
    from the server side. However, it''s better to have our own backups using a manual
    process or using an existing plugin. There are many plugins that allow us to schedule
    backups of the sites, such as the following:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些托管提供商和功能可以从服务器端自动化备份流程。然而，最好使用手动流程或现有插件来拥有我们自己的备份。有许多插件允许我们安排网站的备份，如下所示：
- en: '`UpdraftPlus`: This is one of the most popular backup plugins with a wide range
    of features for file and database backup as well as restoring. You can find all
    the features at [https://wordpress.org/plugins/updraftplus/](https://wordpress.org/plugins/updraftplus/).'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UpdraftPlus`: 这是最受欢迎的备份插件之一，具有广泛的文件和数据库备份以及恢复功能。您可以在[https://wordpress.org/plugins/updraftplus/](https://wordpress.org/plugins/updraftplus/)找到所有功能。'
- en: '`BackUpWordPress`: Allows you to schedule backups for both files and database.
    You can find all the features at [https://wordpress.org/plugins/backupwordpress/](https://wordpress.org/plugins/backupwordpress/).'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`BackUpWordPress`: 允许您为文件和数据库安排备份。您可以在[https://wordpress.org/plugins/backupwordpress/](https://wordpress.org/plugins/backupwordpress/)找到所有功能。'
- en: We already discussed the use of the **All-In-One WP Migration** plugin for migrating
    WordPress sites. We can also use such plugins as the backup and restore mechanism
    for the same site as well. So, it's a must to use one of these backup plugins
    and schedule the backups of your site.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经讨论了使用**All-In-One WP Migration**插件迁移WordPress站点的用法。我们还可以使用此类插件作为同一站点的备份和恢复机制。因此，使用这些备份插件并安排您站点的备份是必须的。
- en: Updating WordPress plugins and themes
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更新WordPress插件和主题
- en: We already discussed the need for updating WordPress core, plugins and themes
    to improve the security of the site in the previous sections. Also, it's an essential
    part of maintenance, as some of the plugins and themes may not be compatible with
    older or newer versions of WordPress. So, you need to keep track of the updates
    in plugins and themes, along with the possible bug fixes in each version. Otherwise,
    you will have to automate the update process using custom code, or use a plugin
    like **Automatic Plugin Updates** ([https://wordpress.org/plugins/automatic-plugin-updates/](https://wordpress.org/plugins/automatic-plugin-updates/))
    for automating updates only for certain plugins.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的章节中，我们已经讨论了更新WordPress核心、插件和主题以提升网站安全性的必要性。此外，这也是维护工作的重要组成部分，因为一些插件和主题可能无法与较旧或较新的WordPress版本兼容。因此，您需要跟踪插件和主题的更新，以及每个版本中可能的错误修复。否则，您将不得不使用自定义代码来自动化更新过程，或者使用像**自动插件更新**（[https://wordpress.org/plugins/automatic-plugin-updates/](https://wordpress.org/plugins/automatic-plugin-updates/))这样的插件来仅对某些插件进行自动化更新。
- en: Optimizing database tables
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 优化数据库表
- en: This is another aspect in maintenance that is not considered by many site owners.
    We use many plugins in WordPress sites with different data needs. Many of these
    plugins work on existing database tables, and hence it's difficult to track which
    plugin is responsible for certain data in core tables. Some of these plugins provide
    a quality deactivation or delete process, removing all the plugin-related data
    from the database. However, many plugins don't have such a process and we can
    find many unused data in the database even after deleting the plugins. Also, WordPress
    core features such as revisions, transients, caching overloads core tables with
    unnecessary amount of data.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 这是在维护工作中许多网站所有者没有考虑到的另一个方面。我们在WordPress站点中使用了许多具有不同数据需求的插件。许多这些插件在现有的数据库表中工作，因此很难追踪哪个插件负责核心表中的某些数据。一些这些插件提供了高质量的停用或删除过程，从数据库中删除所有与插件相关的数据。然而，许多插件没有这样的过程，即使删除了插件，我们仍然可以在数据库中找到许多未使用的数据。此外，WordPress核心功能，如修订、瞬态、缓存等，都会在核心表中加载大量不必要的数据。
- en: 'So, we need to optimize the database time to time by removing these unnecessary
    data. The first step is only choosing plugins that remove their data on uninstallation.
    Then, we can choose a database optimization plugin, such as the following:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们需要定期通过删除这些不必要的数据来优化数据库。第一步是仅选择在卸载时删除其数据的插件。然后，我们可以选择一个数据库优化插件，如下所示：
- en: '**WP-Optimize**: [https://wordpress.org/plugins/wp-optimize/](https://wordpress.org/plugins/wp-optimize/)'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**WP-Optimize**: [https://wordpress.org/plugins/wp-optimize/](https://wordpress.org/plugins/wp-optimize/)'
- en: '**WP-Sweep**: [https://wordpress.org/plugins/wp-sweep/](https://wordpress.org/plugins/wp-sweep/)'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**WP-Sweep**: [https://wordpress.org/plugins/wp-sweep/](https://wordpress.org/plugins/wp-sweep/)'
- en: '**Advanced Database Cleaner**: [https://wordpress.org/plugins/advanced-database-cleaner/](https://wordpress.org/plugins/advanced-database-cleaner/)'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**高级数据库清理器**: [https://wordpress.org/plugins/advanced-database-cleaner/](https://wordpress.org/plugins/advanced-database-cleaner/)'
- en: The common features of these plugins include the ability to delete revisions,
    auto-drafts, comments with certain statuses, and duplicated and orphaned metadata.
    We have to use one of such plugins to keep the database clean by removing unused
    data.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 这些插件的一些常见功能包括删除修订、自动草稿、具有特定状态的评论以及重复和孤立的元数据。我们必须使用这样的插件之一，通过删除未使用的数据来保持数据库的清洁。
- en: Checking request errors and broken links
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查请求错误和断链
- en: We use many third-party libraries and resources from external sites when developing
    sites. So, these resources are loaded through external URLs. Sometimes, we may
    notice the unavailability of these files due to server unavailability or other
    errors. So, unavailability of some files may create conflicts in our site features.
    Also, we might link to no-longer-available content, leading to 404 errors. So,
    we need to track these issues and resolve them in order to keep the consistency
    of our site features.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在开发网站时，我们会使用许多来自外部网站的第三方库和资源。因此，这些资源通过外部URL加载。有时，我们可能会注意到由于服务器不可用或其他错误，这些文件不可用。因此，某些文件的不可用可能会在我们的网站功能中造成冲突。此外，我们可能会链接到不再可用的内容，导致404错误。因此，我们需要跟踪这些问题，并解决它们，以保持我们网站功能的连贯性。
- en: We can use a plugin such as **Broken Link Checker** ([https://wordpress.org/plugins/broken-link-checker/](https://wordpress.org/plugins/broken-link-checker/))
    to identify the broken posts, pages, or screens on our sites. Also, if you are
    using an analytics tool such as **Google Analytics**, we can check the requests
    to the 404 page and them track backward to find the links causing the issue.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用像**断链检查器**（[https://wordpress.org/plugins/broken-link-checker/](https://wordpress.org/plugins/broken-link-checker/))）这样的插件来识别我们网站上的断链帖子、页面或屏幕。此外，如果您使用像**Google
    Analytics**这样的分析工具，我们可以检查对404页面的请求，并追踪回找到导致问题的链接。
- en: We discussed performance-measuring plugins in previous sections. These plugins
    will show you a list of loaded files with the loading time, along with a list
    of files with loading errors from external sources. The most common issue is unavailability
    of CSS or JavaScript files from external sources. So, we can use such plugins
    to identify these files and update the URLs, or download and include these files
    locally within plugins.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在前面几节讨论了性能测量插件。这些插件会向您显示一个加载时间列表的已加载文件，以及来自外部源的错误加载文件列表。最常见的问题是外部源中CSS或JavaScript文件的不可用。因此，我们可以使用这样的插件来识别这些文件，并更新URL，或者下载并在插件中本地包含这些文件。
- en: Checking error logs
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查错误日志
- en: Once debug mode is switched off in a live environment, we won't see any errors
    generated in the site. Many third-party low-quality plugins generate minor and
    major errors. So, we need to have a error log to regularly check the site for
    errors as well as identify the cause, when something breaks on your site. The
    hosting providers also provide error logging features in servers. However, we
    should use our own error logs by using the core WordPress error log features,
    or using a plugin such as **Error Log Monitor** ([https://wordpress.org/plugins/error-log-monitor/](https://wordpress.org/plugins/error-log-monitor/))
    to keep track of the existing errors and fix them as soon as possible.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦在实时环境中关闭调试模式，我们就不会在该网站上看到任何生成的错误。许多第三方低质量插件会产生轻微和严重的错误。因此，我们需要有一个错误日志来定期检查网站上的错误，以及当您的网站上出现问题时，确定原因。托管提供商也在服务器上提供错误日志功能。然而，我们应该通过使用WordPress的核心错误日志功能，或者使用像**错误日志监控器**（[https://wordpress.org/plugins/error-log-monitor/](https://wordpress.org/plugins/error-log-monitor/))）这样的插件来跟踪现有错误，并尽快修复它们。
- en: These are some of the primary tasks for maintaining a site. You can find more
    minor tasks and plugins for maintaining sites. As a developer, you should have
    a proper maintenance routine based on the functionality of each site.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是维护网站的一些主要任务。您可以找到更多维护网站的小任务和插件。作为一名开发者，您应该根据每个网站的功能制定适当的维护常规。
- en: Summary
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In site development, we mainly focus on the functional aspects, as the client
    or end users will be involved directly in functionality. However, we will have
    to give equal importance to non-functional aspects. These non-functional aspects
    may decide the success or failure of a site as these factors are the keys for
    using or leaving the site.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在网站开发中，我们主要关注功能方面，因为客户或最终用户将直接参与功能。然而，我们必须给予非功能方面同等的重要性。这些非功能方面可能决定网站的成功或失败，因为这些因素是使用或离开网站的关键。
- en: We began the chapter by understanding the importance of testing. We looked at
    several types of functional and non-functional testing with the help of tools
    such as **P3 Plugin Profiler**, and services such as **PluginTest**. Then, we
    discussed the need for implementing key security precautions while identifying
    the plugins for handling advanced security measures. Next, we looked at the importance
    of automating the site migration process using the **All-in-One WP Migration **plugin.
    Finally, we looked at the important tasks for properly maintaining a WordPress
    site, while exploring the existing plugin-based solutions for maintenance.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从理解测试的重要性开始本章。我们借助**P3插件分析器**等工具和**PluginTest**等服务，探讨了多种功能性测试和非功能性测试。然后，我们在确定处理高级安全措施的插件时，讨论了实施关键安全预防措施的必要性。接下来，我们探讨了使用**All-in-One
    WP Migration插件**自动化网站迁移过程的重要性。最后，我们在探索现有基于插件的维护解决方案的同时，审视了正确维护WordPress网站的重要任务。
- en: We began this book by introducing you to the core WordPress features, concepts,
    and data usage. Then, we developed various features by using core functionality,
    extending core functionality, and building custom solutions. Finally, we completed
    the book by looking at the important non-functional requirements for web sites.
    It's up to you now!
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 我们这本书的开篇是向您介绍WordPress的核心功能、概念和数据使用。然后，我们通过使用核心功能、扩展核心功能以及构建定制解决方案来开发各种功能。最后，我们通过审视网站的重要非功能性需求来完成这本书。现在，这取决于你了！
