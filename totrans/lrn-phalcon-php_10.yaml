- en: Chapter 10. Going Further
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第10章. 进一步探索
- en: In this chapter, we will try to cover a few things that we didn't use in this
    book. In April 2015, Phalcon released version 2.0\. You don't have to worry about
    it because it is perfectly compatible with what you have learned so far.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将尝试涵盖一些在这本书中没有使用的内容。2015年4月，Phalcon发布了2.0版本。你不必担心，因为它与之前学到的内容完全兼容。
- en: The big difference is that version 2.0 was completely rewritten in the Zephir
    language ([http://www.zephir-lang.com/](http://www.zephir-lang.com/)). You can
    upgrade to version 2.0.* if you want.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 与之前版本相比，2.0版本完全用Zephir语言（[http://www.zephir-lang.com/](http://www.zephir-lang.com/)）重写。如果你想升级到2.0.*版本。
- en: 'We will cover the following topics in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我们将涵盖以下主题：
- en: Uploading files with Phalcon
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Phalcon上传文件
- en: Using the Annotation router
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用注解路由器
- en: Uploading files with Phalcon
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Phalcon上传文件
- en: 'Uploading files with Phalcon is a piece of cake. We just need to check whether
    the request object has files and move them to our upload directory. Let''s create
    the following controller in the `Backoffice` module:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Phalcon上传文件非常简单。我们只需要检查请求对象是否有文件，并将其移动到我们的上传目录。让我们在`Backoffice`模块中创建以下控制器：
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The `uploadAction()` method first checks whether the request object has a file
    and the request method is `POST`. We assign the path to the upload directory to
    the `$upload_dir` variable. Then we check whether this directory exists in public,
    otherwise we create it. Next, we move each uploaded file to `public/uploads/`.
    You can find the forms and the views for this example in the source code for this
    chapter. The `file` object has some built-in methods that are very helpful:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '`uploadAction()`方法首先检查请求对象是否有文件，并且请求方法是`POST`。我们将上传目录的路径分配给`$upload_dir`变量。然后我们检查这个目录是否在public中存在，如果不存在，则创建它。接下来，我们将每个上传的文件移动到`public/uploads/`。你可以在这个章节的源代码中找到这个示例的表单和视图。`file`对象有一些内置方法，非常有帮助：'
- en: '`$file->getSize();`'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`$file->getSize();`'
- en: '`$file->getRealType();`'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`$file->getRealType();`'
- en: '`$file->getName()`'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`$file->getName()`'
- en: 'Using these methods, we can implement a simple validator for an image. Let''s
    assume that we only accept JPEG files that are no larger than 1 MB. This is what
    an improved version of the `uploadAction()` method can look like:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这些方法，我们可以为图像实现一个简单的验证器。假设我们只接受不超过1MB的JPEG文件。下面是`uploadAction()`方法改进版本的样子：
- en: '[PRE1]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Phalcon also supports image manipulation. Unfortunately, this is not documented,
    but you can take a look at the official repository at [https://github.com/phalcon/cphalcon/tree/master/ext/phalcon/image](https://github.com/phalcon/cphalcon/tree/master/ext/phalcon/image)
    to find out the available methods, or the source code for the IDE stubs at [https://github.com/phalcon/phalcon-devtools/tree/master/ide/1.3.4/Phalcon/Image](https://github.com/phalcon/phalcon-devtools/tree/master/ide/1.3.4/Phalcon/Image).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Phalcon还支持图像处理。不幸的是，这部分内容没有文档说明，但你可以查看官方仓库[https://github.com/phalcon/cphalcon/tree/master/ext/phalcon/image](https://github.com/phalcon/cphalcon/tree/master/ext/phalcon/image)以了解可用方法，或者查看IDE存根的源代码[https://github.com/phalcon/phalcon-devtools/tree/master/ide/1.3.4/Phalcon/Image](https://github.com/phalcon/phalcon-devtools/tree/master/ide/1.3.4/Phalcon/Image)。
- en: 'A simple example of image manipulation can be as follows:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 图像处理的简单示例可以如下所示：
- en: '[PRE2]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: We can also use an external library, such as [https://github.com/avalanche123/Imagine](https://github.com/avalanche123/Imagine),
    which you will find very well documented at [http://imagine.readthedocs.org/en/latest/usage/introduction.html](http://imagine.readthedocs.org/en/latest/usage/introduction.html).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用外部库，例如[https://github.com/avalanche123/Imagine](https://github.com/avalanche123/Imagine)，你可以在[http://imagine.readthedocs.org/en/latest/usage/introduction.html](http://imagine.readthedocs.org/en/latest/usage/introduction.html)找到它，那里有很好的文档说明。
- en: Using the Annotation router
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用注解路由器
- en: 'In this book, we used a configuration file for the router. If you come from
    Symfony, for example, you might want to use annotations. For this, you need to
    change the router information in the DI:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，我们使用了配置文件来设置路由器。如果你来自Symfony，例如，你可能想使用注解。为此，你需要更改DI中的路由器信息：
- en: '[PRE3]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Then you must modify `ArticlesController` to look like this:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，你必须修改`ArticlesController`使其看起来像这样：
- en: '[PRE4]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: You can read more about the Annotation router at [http://docs.phalconphp.com/en/latest/reference/routing.html#annotations-router](http://docs.phalconphp.com/en/latest/reference/routing.html#annotations-router).
    If you need/want, you can also develop your own router, implementing `Phalcon\Mvc\RouterInterface`.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[http://docs.phalconphp.com/en/latest/reference/routing.html#annotations-router](http://docs.phalconphp.com/en/latest/reference/routing.html#annotations-router)了解更多关于注解路由器的信息。如果你需要/想要，你也可以开发自己的路由器，实现`Phalcon\Mvc\RouterInterface`。
- en: Summary
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we saw how we can upload files with Phalcon. Also, we saw how
    to use the Annotation router.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们看到了如何使用Phalcon上传文件，也看到了如何使用注解路由器。
- en: Phalcon is a completely decoupled framework. There are no real "best practices",
    so you, as a developer, can build your own conduit. I also recommend that you
    take a look at Vegas CMF for Phalcon at [https://github.com/vegas-cmf](https://github.com/vegas-cmf),
    especially if you are going to work with a big team.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Phalcon是一个完全解耦的框架。没有真正的“最佳实践”，因此作为开发者，您可以构建自己的管道。我还建议您查看Phalcon的Vegas CMF项目[https://github.com/vegas-cmf](https://github.com/vegas-cmf)，尤其是如果您打算与大型团队合作。
- en: Thank you for reading this book, and I really hope that it was helpful. You
    can now start developing your own application.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢您阅读这本书，我真心希望它对您有所帮助。现在您可以开始开发自己的应用程序了。
