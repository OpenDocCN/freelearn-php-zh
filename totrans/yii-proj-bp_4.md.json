["```php\nID INTEGER PRIMARY KEY\nname STRING\ncreated INTEGER\nupdated INTEGER\n```", "```php\nID INTEGER PRIMARY KEY\ncustomer_id INTEGER FK\ntitle STRING\ndescription TEXT\nstatus_id INTEGER FK\ncreated INTEGER\nupdated INTEGER\n```", "```php\nID INTEGER PRIMARY KEY\nname STRING\ncreated INTEGER\nupdated INTEGER\n```", "```php\nID INTEGER PRIMARY KEY\nissue_id INTEGER FK\nauthor_id INTEGER FK\nupdate TEXT\ncreated INTEGER\nupdated INTEGER\n```", "```php\n    CREATE USER 'ch4_issue'@'localhost' IDENTIFIED BY 'ch4_issue';\n    CREATE DATABASE IF NOT EXISTS  `ch4_issue` ;\n    GRANT ALL PRIVILEGES ON  `ch4\\_issue` . * TO  'ch4_issue'@'localhost';\n    FLUSH PRIVILEGES;\n    ```", "```php\n    php protected/yiic.php migrate up --interactive=0\n    mysql –u ch4_issue –p ch4_issue < protected/data/combined.sql\n\n    ```", "```php\n    composer install\n\n    ```", "```php\npublic function accessRules()\n{\n   return array(\n      array('allow',\n         'actions' => array('search', 'view'),\n         'users'=>array('@'),\n         'expression' => 'Yii::app()->user->role>=2'\n      ),\n      array('allow',\n         'actions' => array('index', 'save', 'delete'),\n         'users'=>array('@'),\n         'expression' => 'Yii::app()->user->role==3'\n      ),\n      array('deny',  // deny all users\n         'users'=>array('*'),\n      ),\n   );\n}\n```", "```php\npublic function authenticate()\n{\n   $record = User::model()->findByAttributes(array('email'=>$this->username));\n\n   if ($record == NULL)\n      $this->errorCode = self::ERROR_UNKNOWN_IDENTITY;\n   else if (password_verify($this->password, $record->password))\n   {\n      $this->errorCode = self::ERROR_NONE;\n      $this->_id \t\t = $record->id;\n      $this->setState('email', $record->email);\n      $this->setState('role', $record->role_id);\n   }\n   else\n      $this->errorCode = self::ERROR_UNKNOWN_IDENTITY;\n\n   return !$this->errorCode;\n}\n```", "```php\npublic function actionIndex()\n{\n   $users = new User('search');\n   $users->unsetAttributes();\n\n   if (isset($_GET['User']))\n      $users->attributes = $_GET['Users'];\n\n   $this->render('index', array(\n      'model' => $users\n   ));\n}\n```", "```php\n<h3>Manage Users</h3>\n<?php $this->widget('zii.widgets.grid.CGridView', array(\n   'itemsCssClass' => 'table table-striped',\n   'enableSorting' => true,\n   'dataProvider'  =>$model->search(),\n    'columns' => array(\n        'id',\n        'email',\n        'name',\n       array(\n            'class'=>'CButtonColumn',\n            'template' => '{view}{update}{delete}',\n            'viewButtonOptions' => array(\n                'class' => 'fa fa-search'\n            ),\n            'viewButtonLabel' => false,\n            'viewButtonImageUrl' => false,\n            'viewButtonUrl' => 'Yii::app()->createUrl(\"user/view\", array(\"id\" => \"$data->id\"))',\n            'updateButtonOptions' => array(\n               'class' => 'fa fa-pencil'\n            ),\n            'updateButtonLabel' => false,\n            'updateButtonImageUrl' => false,\n            'updateButtonUrl' => 'Yii::app()->createUrl(\"user/save\", array(\"id\" => \"$data->id\"))',\n            'deleteButtonOptions' => array(\n                'class' => 'fa fa-trash-o'\n            ),\n            'deleteButtonLabel' => false,\n            'deleteButtonImageUrl' => false,\n            'deleteButtonUrl' => 'Yii::app()->createUrl(\"user/delete\", array(\"id\" => \"$data->id\"))'\n        ),\n    )\n));\n```", "```php\npublic function actionDelete($id=NULL)\n{\n   if ($id == Yii::app()->user->id)\n      throw new CHttpException(403, 'You cannot delete yourself');\n\n   $user = $this->loadModel($id);\n\n   if ($user->delete())\n      $this->redirect($this->createUrl('user/index'));\n\n   throw new CHttpException(400, 'Bad Request');\n}\n\nprivate function loadModel($id=NULL)\n{\n   if ($id == NULL)\n      throw new CHttpException(400, 'Missing ID');\n\n   $model = User::model()->findByPk($id);\n\n   if ($model == NULL)\n      throw new CHttpException(404, 'No user with that ID could be found');\n\n   return $model;\n}\n```", "```php\npublic function actionSave($id=NULL)\n{\n   if ($id == NULL)\n      $user = new User;\n   else\n      $user = $this->loadModel($id);\n\n   if (isset($_POST['User']))\n   {\n      $user->attributes = $_POST['User'];\n\n      try\n      {\n         if ($user->save())\n         {\n            Yii::app()->user->setFlash('success', 'The user has sucessfully been updated');\n            $this->redirect($this->createUrl('user/save', array('id' => $user->id)));\n         }\n      } catch (Exception $e) {\n         $user->addError('email', 'A user with that email address already exists');\n      }\n   }\n\n   $this->render('save', array(\n      'model' => $user\n   ));\n}\n```", "```php\nCHtml::listData(Role::model()->findAll(), 'id', 'name');\n```", "```php\npublic function actionView($id=NULL)\n{\n    $user = $this->loadModel($id);\n    $issues = new Issue('search');\n    $issues->unsetAttributes();\n\n    if(isset($_GET['Issue']))\n        $issues->attributes=$_GET['Issue'];\n    $issues->status_id = '<5';\n\n    $issues->customer_id = $user->id;\n\n    $this->render('view', array(\n       'user' \t => $user,\n      'issues' => $issues\n   ));\n}\n```", "```php\n<?php $this->renderPartial('//issue/issues', array('model' => $issues)); ?>\n```", "```php\n<?php $this->widget('zii.widgets.grid.CGridView', array(\n   'itemsCssClass' => 'table table-striped',\n   'enableSorting' => true,\n    'dataProvider'=>$model->search(),\n    'columns' => array(\n       'id',\n       'customer_id' => array(\n          'name' => 'Customer',\n          'value' => '$data->customer->name'\n       ),\n       'title',\n        'status_id' => array(\n            'name' => 'Status',\n            'value' => '$data->status->name'\n        ),\n       'updated' => array(\n          'name' => 'Last Updated',\n          'value' => 'date(\"F m, Y @ H:i\", $data->updated) . \" UTC\"'\n       ),\n       array(\n            'class'=>'CButtonColumn',\n            'template' => '{update}',\n            'updateButtonOptions' => array(\n            \t'class' => 'fa fa-pencil'\n            ),\n            'updateButtonLabel' => false,\n            'updateButtonImageUrl' => false\n        ),\n    )\n));\n```", "```php\n   private $_isNewRecord = false;\n   public  $_isEmailCreate = false;\n```", "```php\n    public function beforeSave()\n    {\n       if ($this->isNewRecord)\n       {\n          // If this is a new issue, set the customer_id to be the currently logged in user\n          if (!$this->_isEmailCreate)\n             $this->customer_id = Yii::app()->user->id;\n\n          // And set the status to 'New'\n          $this->status_id = 1;\n\n          // Set IsNewRecord so that afterSave can pick this up\n          $this->_isNewRecord = true;\n       }\n       else // Otherwise reset the customer_id back to what it previously was (prevent it from being changed)\n          $this->customer_id = $this->_oldAttributes['customer_id'];\n\n       return parent::beforeSave();\n    }\n    ```", "```php\n    public function afterSave()\n    {\n       $user = User::model()->findByPk($this->customer_id);\n       $sendgrid = new SendGrid(Yii::app()->params['sendgrid']['username'], Yii::app()->params['sendgrid']['password']);\n       $email    = new SendGrid\\Email();\n       $email->setFrom(Yii::app()->params['sendgrid']['from'])\n            ->addTo($user->email);\n\n       if ($this->_isNewRecord)\n       {\n          $email->setSubject(\"[Issue #$this->id] $this->subject | A New Issue Has Been Created For You\")\n               ->setText('Issue has been created')\n               ->setHtml(Yii::app()->controller->renderPartial('//email/created', array('issue' => $this, 'user' => $user), true));\n\n          // Send the SendGrid email\n          $sendgrid->send($email);\n       }\n       else\n       {\n          if ($this->status_id == 5 && $this->_oldAttributes['status'] != 5)\n          {\n             $email->addTo($user->email)\n               ->setSubject(\"[Issue #$this->id] Issue has been resolved\")\n               ->setText('Issue has been resolved')\n               ->setHtml(Yii::app()->controller->renderPartial('//email/resolved', array('issue' => $this, 'user' => $user), true));\n\n             // Send the SendGrid email\n             $sendgrid->send($email);\n          }\n       }\n\n       return parent::afterSave();\n    }\n    ```", "```php\n    $criteria->addSearchCondition('title',$this->title,true, 'OR');\n    $criteria->addSearchCondition('description',$this->title,true, 'OR');\n    ```", "```php\npublic $isEmailUpdate = false;\n```", "```php\n    public function beforeSave()\n    {\n       // Allow the author_id to be set, but reset it to the logged in user->id if it isn't set\n       if ($this->author_id == NULL)\n          $this->author_id = Yii::app()->user->id;\n\n       if ($this->update == '')\n          return false;\n\n       return parent::beforeSave();\n    }\n    ```", "```php\n    public function afterSave()\n    {\n       // If the issue was created by the currently logged in user, or this is an email update, don't send an email\n       $issue = Issue::model()->findByPk($this->issue_id);\n\n       // Don't send an email if the customer provides an update, if this came from email, or the status of the issue is resolved\n       if ($issue->customer_id == Yii::app()->user->id || $this->isEmailUpdate || $issue->status_id == 5)\n          return parent::afterSave();\n\n       // If this is a NEW issue, send the user an email with the detais\n       $user = User::model()->findByPk($issue->customer_id);\n\n       // Init the SendGrid object and the Email Object\n       $sendgrid = new SendGrid(Yii::app()->params['sendgrid']['username'], Yii::app()->params['sendgrid']['password']);\n       $email    = new SendGrid\\Email();\n\n       $email->setFrom(Yii::app()->params['sendgrid']['from'])\n            ->addTo($user->email)\n            ->setSubject(\"[Issue #$issue->id] $this->subject | Issue has been updated\")\n            ->setText('Issue has been updated')\n            ->setHtml(Yii::app()->controller->renderPartial('//email/updated', array('issue' => $issue, 'update' => $this, 'user' => $user), true));\n\n       $sendgrid->send($email);\n\n       return parent::afterSave();\n    }\n    ```", "```php\npublic function actionIndex()\n{\n    $issues = new Issue('search');\n    $issues->unsetAttributes();\n\n    if(isset($_GET['Issue']))\n        $issues->attributes=$_GET['Issue'];\n\n    // Don't search resolved issues\n    $issues->status_id = '<5';\n\n    $issues->customer_id = Yii::app()->user->id;\n\n    $this->render('index', array(\n      'issues' => $issues\n   ));\n}\n```", "```php\n<h3>My Issues</h3>\n<?php $this->renderPartial('issues', array('model' => $issues)); ?>\n```", "```php\npublic function actionSearch()\n{\n   $issues = new Issue('search');\n   $issues->status_id = '<5';\n\n   if (isset($_GET['issue']))\n   {\n      if (is_numeric($_GET['issue']))\n      {\n         $issue = Issue::model()->findByPk($_GET['issue']);\n         if ($issue != NULL)\n            $this->redirect($this->createUrl('issue/update', array('id' => $issue->id)));\n      }\n\n      $issues->title = $_GET['issue'];\n      $issues->description = $_GET['issue'];\n   }\n\n   $this->render('search', array(\n      'issues' => $issues\n   ));\n}\n```", "```php\n<h3>Search for Issues</h3>\n<?php $form=$this->beginWidget('CActiveForm', array(\n   'id'=>'project-form',\n   'method' => 'get',\n   'htmlOptions' => array(\n      'class' => 'form-horizontal',\n      'role' => 'form',\n   )\n)); ?>\n   <p>Search for issues...</p>\n   <div class=\"form-group\">\n      <?php echo CHtml::textField('issue', isset($_GET['issue']) ? $_GET['issue'] : NULL, array('class' => 'form-control', 'placeholder' => 'Search for Issues by ID, Title, or Description...')); ?>\n   </div>\n   <div class=\"row buttons\">\n      <?php echo CHtml::submitButton('Search', array('class' => 'btn btn-primary pull-right col-md-offset-1')); ?>\n   </div>\n<?php $this->endWidget(); ?>\n\n<?php if ($issues != NULL): ?>\n   <?php $this->renderPartial('issues', array('model' => $issues)); ?>\n<?php endif; ?>\n```", "```php\npublic function actionCreate()\n{\n   $issue = new Issue;\n   if (isset($_POST['Issue']))\n   {\n      $issue->attributes = $_POST['Issue'];\n\n      if ($issue->save())\n      {\n         Yii::app()->user->setFlash('success', \"Issue #{$issue->id} has successfully been created\");\n         $this->redirect($this->createUrl('issue/update', array('id' => $issue->id)));\n      }\n   }\n\n   $this->render('create', array(\n      'model' => $issue\n   ));\n}\n```", "```php\nYii::app()->user->setFlash($key, $value);\n```", "```php\nYii::app()->user->hasFlash($key);\n```", "```php\nYii::app()->user->getFlash($key);\n```", "```php\nforeach (Yii::app()->user->getFlashes() as $key => $message)\n   echo '<div class=\"flash-' . $key . '\">' . $message . \"</div>\";\n```", "```php\n    private function loadModel($id=NULL)\n    {\n       if ($id == NULL)\n          throw new CHttpException(400, 'Missing ID');\n\n       $model = Issue::model()->findByPk($id);\n\n       if ($model == NULL)\n          throw new CHttpException(404, 'No issue with that ID was found');\n\n       return $model;\n    }\n    ```", "```php\n    public function actionUpdate($id=NULL)\n    {\n       // Load the necessary models\n       $issue = $this->loadModel($id);\n       $update = new Update;\n       $update->update = NULL;\n       $customer_id = $issue->customer_id;\n    ```", "```php\n    if (Yii::app()->user->role == 1)\n    {\n       if (Yii::app()->user->id != $customer_id)\n          throw new CHttpException(403, 'You do not have permission to view this issue');\n    }\n    ```", "```php\n    if (Yii::app()->user->role >= 2)\n    {\n       if (isset($_POST['Issue']))\n       {\n          $issue->attributes = $_POST['Issue'];\n          if ($issue->save())\n             Yii::app()->user->setFlash('success', \"Issue #{$issue->id} has successfully been updated\");\n       }\n    }\n    ```", "```php\n    if (isset($_POST['Update']))\n    {\n       $update->issue_id = $issue->id;\n       $update->update = $_POST['Update']['update'];\n       if ($update->save())\n       {\n          Yii::app()->user->setFlash('success', \"Issue #{$issue->id} has successfully been updated\");\n          $this->redirect($this->createUrl('issue/update', array('id' => $issue->id)));\n       }\n    }\n    ```", "```php\n       $this->render('update', array(\n          'issue' => $issue,\n          'update' => $update,\n          'md' => new CMarkdownParser\n       ));\n    }\n    ```", "```php\n    --------------- DO NOT EDIT BELOW THIS LINE ---------------\n    <div class=\"email\">\n       Hello <?php echo $user->name; ?>,<br /><br />\n\n       This is a notification that a new issue (#<?php echo $issue->id; ?>) has been opened for you. A member of our team will review this shortly.<br /><br />\n\n       As a reminder, here is the description of the issue you provided:<br /><br />\n\n       <strong><?php echo $issue->title; ?></strong>\n       <blockquote>\n          <?php echo $issue->description; ?>\n       </blockquote>\n\n       <br /><br />\n\n       To add additional information to this issue, you may either reply to this email, or login <?php echo CHtml::link('here', $this->createAbsoluteUrl('issue/update', array('id' => $issue->id))); ?>.\n       <br /><br />\n\n       Thank you,<br />\n       Issue Tracking System\n    </div>\n    ```", "```php\n    --------------- DO NOT EDIT BELOW THIS LINE ---------------\n    <div class=\"email\">\n       Hello <?php echo $user->name; ?>,<br /><br />\n\n       This is a notification that a new issue (#<?php echo $issue->id; ?>) has been updated with the following message:<br /><br />\n\n       <blockquote>\n          <?php echo $update->update; ?>\n       </blockquote>\n       <hr />\n       As a reminder, here is the description of the issue you provided:<br /><br />\n       <strong><?php echo $issue->title; ?></strong>\n       <blockquote>\n          <?php echo $issue->description; ?>\n       </blockquote>\n       <br /><br />\n       To reply to this issue you may either reply to this email, or login <?php echo CHtml::link('here', $this->createAbsoluteUrl('issue/update', array('id' => $issue->id))); ?>.\n       <br /><br />\n       Thank you,<br />\n       Issue Tracking System\n    </div>\n    ```", "```php\n    --------------- DO NOT EDIT BELOW THIS LINE ---------------\n    <div class=\"email\">\n       Hello <?php echo $user->name; ?>,<br /><br />\n\n       This is a notification that a new issue (#<?php echo $issue->id; ?>) has been resolved.<br /><br />\n\n       Thank you,<br />\n       Issue Tracking System\n    </div>\n    ```", "```php\nchapter4     IN     MX     10     mx.sendgrid.net.\n```", "```php\n    private function _parseEmailAddress($raw)\n    {\n       $name = \"\";\n       $email = trim($raw, \" '\\\"\");\n\n       if (preg_match(\"/^(.*)<(.*)>.*$/\", $raw, $matches))\n       {\n          array_shift($matches);\n          $name = trim($matches[0], \" '\\\"\");\n          $email = trim($matches[1], \" '\\\"\");\n       }\n\n       return array(\n          \"name\" => $name,\n          \"email\" => $email,\n          \"full\" => $name . \" <\" . $email . \">\"\n       );\n    }\n    ```", "```php\n    $from = $this->_parseEmailAddress($_POST['from']);\n       $subject = $_POST['subject'];\n    ```", "```php\n    $idString = NULL;\n    preg_match('/\\[Issue #.*?\\]/', $subject, $idString);\n    $id = str_replace(']', '', str_replace('[Issue #', '', (isset($idString[0]) ? $idString[0] : 0)));\n    ```", "```php\n    $user = User::model()->findByAttributes(array('email' => $from['email']));\n\n    if ($user == NULL)\n    {\n       $user = new User;\n       $user->attributes = array(\n          'name' => $from['name'],\n          'email' => $from['email'],\n          'password' => 'changeme9',\n          'role_id' => 1\n       );\n\n       if (!$user->save())\n          return true;\n    }\n    ```", "```php\n    $issue = Issue::model()->findByPk($id);\n\n    // If the user or ID are NULL, or that email address doesn't belong to that customer, Create a new issue\n    if ($issue == NULL || $id == NULL || $issue->customer_id != $user->id)\n    {\n       // create the issue, save it, then return - no further work needs to be done.\n       $issue = new Issue;\n       $issue->_isEmailCreate = true;\n\n       $issue->attributes = array(\n          'title' => $subject,\n          'description' => $_POST['text'],\n          'customer_id' => $user->id\n       );\n\n       $issue->save();\n       return true;\n    }\n    ```", "```php\n    $body = explode('--------------- DO NOT EDIT BELOW THIS LINE ---------------', $_POST['text']);\n    $body = $body[0];\n\n    // Set the update\n    $update = new Update;\n    $update->author_id = $user->id;\n    $update->issue_id = $issue->id;\n    $update->update = $body;\n    $update->isEmailUpdate = true;\n\n    $update->save();\n    return true;\n    ```"]