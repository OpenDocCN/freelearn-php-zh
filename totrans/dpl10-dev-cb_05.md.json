["```php\n    mkdir -p src/Controller\n    ```", "```php\n    <?php\n    ```", "```php\n    namespace Drupal\\mymodule\\Controller;\n    ```", "```php\n    use Drupal\\Core\\Controller\\ControllerBase;\n    ```", "```php\n    class HelloWorldController extends ControllerBase {\n    ```", "```php\n    }\n    ```", "```php\n      /**\n    ```", "```php\n       * Returns markup for our custom page.\n    ```", "```php\n       *\n    ```", "```php\n       * @returns array\n    ```", "```php\n       *   The render array.\n    ```", "```php\n       */\n    ```", "```php\n      public function page(): array {\n    ```", "```php\n        return [\n    ```", "```php\n          '#markup' => '<p>Hello world!</p>'\n    ```", "```php\n        ];\n    ```", "```php\n      }\n    ```", "```php\n    mymodule.hello_world\n    ```", "```php\n    mymodule.hello_world:\n    ```", "```php\n      path: /hello-world\n    ```", "```php\n    mymodule.hello_world:\n    ```", "```php\n      path: /hello-world\n    ```", "```php\n      defaults:\n    ```", "```php\n        _controller: Drupal\\mymodule\\Controller\\\n    ```", "```php\n            HelloWorldController::page\n    ```", "```php\n        _title: 'Hello world!'\n    ```", "```php\n    mymodule.hello_world:\n    ```", "```php\n      path: /hello-world\n    ```", "```php\n      defaults:\n    ```", "```php\n        _controller: Drupal\\mymodule\\Controller\\\n    ```", "```php\n            HelloWorldController::page\n    ```", "```php\n        _title: 'Hello world!'\n    ```", "```php\n      requirements:\n    ```", "```php\n        _permission: 'access content'\n    ```", "```php\n    php vendor/bin/drush cr\n    ```", "```php\nroute_callbacks:\n  - 'Drupal\\mymodule\\Routing\\CustomRoutes::routes'\n```", "```php\n<?php\nnamespace Drupal\\mymodule\\Routing;\nuse Symfony\\Component\\Routing\\Route;\nclass CustomRoutes {\n  public function routes() {\n    $routes = [];\n    // Create mypage route programmatically\n    $routes['mymodule.hello_world'] = new Route(\n      // Path definition\n      '/hello-world',\n      // Route defaults\n      [\n        '_controller' =>\n        '\\Drupal\\mymodule\\Controller\\\n            HelloWorldController::page',\n        '_title' => 'Hello world',\n      ],\n      // Route requirements\n      [\n        '_permission' => 'access content',\n      ]\n    );\n    return $routes;\n  }\n}\n```", "```php\n<?php\nnamespace Drupal\\mymodule\\Routing;\nuse Drupal\\Core\\Routing\\RouteSubscriberBase;\nuse Symfony\\Component\\Routing\\RouteCollection;\nclass RouteSubscriber extends RouteSubscriberBase {\n  /**\n   * {@inheritdoc}\n   */\n  public function alterRoutes(RouteCollection $collection) {\n    // Change path of mymodule.hello_world to just 'hello'\n    if ($route = $collection->get('mymodule.hello_world')) {\n      $route->setPath('/hello');\n    }\n  }\n}\n```", "```php\nservices:\n  mymodule.route_subscriber:\n    class: Drupal\\mymodule\\Routing\\RouteSubscriber\n    tags:\n      - { name: event_subscriber }\n```", "```php\n      path: /hello-world/{user}\n    ```", "```php\n      requirements:\n    ```", "```php\n        user: '\\d+'\n    ```", "```php\n        _entity_access: 'user.view'\n    ```", "```php\n      options:\n    ```", "```php\n        parameters:\n    ```", "```php\n          user:\n    ```", "```php\n            type: 'entity:user'\n    ```", "```php\n      /**\n    ```", "```php\n       * Returns markup for our custom page.\n    ```", "```php\n       *\n    ```", "```php\n       * @param \\Drupal\\user\\UserInterface $user\n    ```", "```php\n       *   The user parameter.\n    ```", "```php\n       *\n    ```", "```php\n       * @returns array\n    ```", "```php\n       *   The render array.\n    ```", "```php\n       */\n    ```", "```php\n      public function page(UserInterface $user): array {\n    ```", "```php\n        return [\n    ```", "```php\n          '#markup' => '<p>Hello world!</p>'\n    ```", "```php\n        ];\n    ```", "```php\n      }\n    ```", "```php\n        return [\n    ```", "```php\n          '#markup' => sprintf('<p>Hello %s!</p>',\n    ```", "```php\n             $user->getEmail()),\n    ```", "```php\n        ];\n    ```", "```php\n    php vendor/bin/drush cr\n    ```", "```php\n#^/hello\\-world/(?P<user>\\d+)$#sDu\n```", "```php\n    mkdir -p src/Controller\n    ```", "```php\n    <?php\n    ```", "```php\n    namespace Drupal\\mymodule\\Controller;\n    ```", "```php\n    use Drupal\\Core\\Controller\\ControllerBase;\n    ```", "```php\n    class RedirectController extends ControllerBase {\n    ```", "```php\n    }\n    ```", "```php\n    <?php\n    ```", "```php\n    namespace Drupal\\mymodule\\Controller;\n    ```", "```php\n    use Drupal\\Core\\Controller\\ControllerBase;\n    ```", "```php\n    use Symfony\\Component\\HttpFoundation\\RedirectResponse;\n    ```", "```php\n    class RedirectController extends ControllerBase {\n    ```", "```php\n      /**\n    ```", "```php\n       * Returns redirect to home or user login form.\n    ```", "```php\n       *\n    ```", "```php\n       * @return \\Symfony\\Component\\HttpFoundation\\\n    ```", "```php\n            RedirectResponse\n    ```", "```php\n       *   The redirect response.\n    ```", "```php\n       */\n    ```", "```php\n      public function page(): RedirectResponse {\n    ```", "```php\n        if ($this->currentUser()->isAuthenticated()) {\n    ```", "```php\n          // Redirect to the homepage.\n    ```", "```php\n        }\n    ```", "```php\n        else {\n    ```", "```php\n          // Redirect to the user login form.\n    ```", "```php\n        }\n    ```", "```php\n      }\n    ```", "```php\n    }\n    ```", "```php\n      public function page(): RedirectResponse {\n    ```", "```php\n        if ($this->currentUser()->isAuthenticated()) {\n    ```", "```php\n          $route_name = '<front>';\n    ```", "```php\n        }\n    ```", "```php\n        else {\n    ```", "```php\n          $route_name = 'user.login';\n    ```", "```php\n        }\n    ```", "```php\n        $url = \\Drupal\\Core\\Url::fromRoute($route_name);\n    ```", "```php\n        return new RedirectResponse($url->toString());\n    ```", "```php\n      }\n    ```", "```php\n    mymodule.user_redirect\n    ```", "```php\n    mymodule.user_redirect:\n    ```", "```php\n      path: /user-redirect\n    ```", "```php\n    mymodule.user_redirect:\n    ```", "```php\n      path: /user-redirect\n    ```", "```php\n      defaults:\n    ```", "```php\n        _controller: Drupal\\mymodule\\Controller\\\n    ```", "```php\n            RedirectController::page\n    ```", "```php\n    mymodule.user_redirect:\n    ```", "```php\n      path: /user-redirect\n    ```", "```php\n      defaults:\n    ```", "```php\n        _controller: Drupal\\mymodule\\Controller\\\n    ```", "```php\n            RedirectController::page\n    ```", "```php\n      requirements:\n    ```", "```php\n        _access: 'TRUE'\n    ```", "```php\n    php vendor/bin/drush cr\n    ```", "```php\n    mkdir -p src/Controller\n    ```", "```php\n    <?php\n    ```", "```php\n    namespace Drupal\\mymodule\\Controller;\n    ```", "```php\n    use Drupal\\Core\\Controller\\ControllerBase;\n    ```", "```php\n    use Symfony\\Component\\HttpFoundation\\JsonResponse;\n    ```", "```php\n    class SiteInfoController extends ControllerBase {\n    ```", "```php\n    }\n    ```", "```php\n       /**\n    ```", "```php\n       * Returns site info in a JSON response.\n    ```", "```php\n       *\n    ```", "```php\n       * @return \\Symfony\\Component\\HttpFoundation\\\n    ```", "```php\n            JsonResponse\n    ```", "```php\n       *   The JSON response.\n    ```", "```php\n       */\n    ```", "```php\n      public function page(): JsonResponse {\n    ```", "```php\n        return new JsonResponse();\n    ```", "```php\n      }\n    ```", "```php\n      /**\n    ```", "```php\n       * Returns site info in a JSON response.\n    ```", "```php\n       *\n    ```", "```php\n       * @return \\Symfony\\Component\\HttpFoundation\\\n    ```", "```php\n            JsonResponse\n    ```", "```php\n       *   The JSON response.\n    ```", "```php\n       */\n    ```", "```php\n      public function page(): JsonResponse {\n    ```", "```php\n        $config = $this->config('system.site');\n    ```", "```php\n        return new JsonResponse([\n    ```", "```php\n          'name' => $config->get('name'),\n    ```", "```php\n          'slogan' => $config->get('slogan'),\n    ```", "```php\n          'email' => $config->get('mail')\n    ```", "```php\n        ]);\n    ```", "```php\n      }\n    ```", "```php\n    mymodule.site_info\n    ```", "```php\n    mymodule.site_info:\n    ```", "```php\n      path: /site-info\n    ```", "```php\n    mymodule.site_info:\n    ```", "```php\n      path: /site-info\n    ```", "```php\n      defaults:\n    ```", "```php\n        _controller: Drupal\\mymodule\\Controller\\\n    ```", "```php\n            SiteInfoController::page\n    ```", "```php\n    mymodule.site_info:\n    ```", "```php\n      path: /site-info\n    ```", "```php\n      defaults:\n    ```", "```php\n        _controller: Drupal\\mymodule\\Controller\\\n    ```", "```php\n            SiteInfoController::page\n    ```", "```php\n      requirements:\n    ```", "```php\n        _access: 'TRUE'\n    ```", "```php\n    php vendor/bin/drush cr\n    ```", "```php\n    {\n    ```", "```php\n      \"name\": \"Drupal Development Cookbook\",\n    ```", "```php\n      \"slogan\": \"Practical recipes to harness the power of\n    ```", "```php\n        Drupal 10.\",\n    ```", "```php\n      \"email\": \"admin@example.com\"\n    ```", "```php\n    }\n    ```", "```php\nclass SiteInfoController extends ControllerBase {\n  /**\n   * Returns site info in a JSON response.\n   *\n   * @return \\Symfony\\Component\\HttpFoundation\\JsonResponse\n   *   The JSON response.\n   */\n  public function page(): JsonResponse {\n    $config = $this->config('system.site');\n    $response = new \\Drupal\\Core\\Cache\\\n        CacheableJsonResponse([\n      'name' => $config->get('name'),\n      'slogan' => $config->get('slogan'),\n      'email' => $config->get('mail')\n    ]);\n    $response->addCacheableDependency($config);\n    return $response;\n  }\n}\n```", "```php\n    mkdir -p src/Controller\n    ```", "```php\n    <?php\n    ```", "```php\n    namespace Drupal\\mymodule\\Controller;\n    ```", "```php\n    class SiteInfoController {\n    ```", "```php\n    }\n    ```", "```php\n      /**\n    ```", "```php\n       * Downloads a file.\n    ```", "```php\n       *\n    ```", "```php\n       * @return \\Symfony\\Component\\HttpFoundation\\\n    ```", "```php\n            BinaryFileResponse\n    ```", "```php\n       *   The file response.\n    ```", "```php\n       */\n    ```", "```php\n      public function page(): BinaryFileResponse {\n    ```", "```php\n        // File paths are relative to the document root\n    ```", "```php\n             (web.)\n    ```", "```php\n        $file_path = 'modules/custom/mymodule/dummy.pdf';\n    ```", "```php\n        $response = new BinaryFileResponse($file_path);\n    ```", "```php\n        $response->setContentDisposition('attachment',\n    ```", "```php\n            basename($file_path));\n    ```", "```php\n        return $response;\n    ```", "```php\n      }\n    ```", "```php\n      /**\n    ```", "```php\n       * Downloads a file.\n    ```", "```php\n       *\n    ```", "```php\n       * @return \\Symfony\\Component\\HttpFoundation\\\n    ```", "```php\n            BinaryFileResponse\n    ```", "```php\n       *   The file response.\n    ```", "```php\n       */\n    ```", "```php\n      public function page(): BinaryFileResponse {\n    ```", "```php\n        // File paths are relative to the document root\n    ```", "```php\n             (web.)\n    ```", "```php\n        $file_path = 'modules/custom/mymodule/dummy.pdf';\n    ```", "```php\n        /** @var \\Drupal\\Core\\File\\MimeType\\\n    ```", "```php\n            MimeTypeGuesser $guesser */\n    ```", "```php\n        $guesser = \\Drupal::service\n    ```", "```php\n             ('file.mime_type.guesser');\n    ```", "```php\n        $mime_type = $guesser->guessMimeType($file_path);\n    ```", "```php\n        $response = new BinaryFileResponse($file_path);\n    ```", "```php\n        $response->headers->set('Content-Type',\n    ```", "```php\n            $mimetype);\n    ```", "```php\n        $response->setContentDisposition('attachment',\n    ```", "```php\n            basename($file_path));\n    ```", "```php\n        return $response;\n    ```", "```php\n      }\n    ```", "```php\n    mymodule.pdf_download\n    ```", "```php\n    mymodule.pdf_download:\n    ```", "```php\n      path: /pdf-download\n    ```", "```php\n    mymodule.pdf_download:\n    ```", "```php\n      path: /pdf-download\n    ```", "```php\n      defaults:\n    ```", "```php\n        _controller: Drupal\\mymodule\\Controller\n    ```", "```php\n            \\DownloadController::page\n    ```", "```php\n    mymodule.pdf_download:\n    ```", "```php\n      path: /pdf-download\n    ```", "```php\n      defaults:\n    ```", "```php\n        _controller: Drupal\\mymodule\\Controller\n    ```", "```php\n            \\DownloadController::page\n    ```", "```php\n      requirements:\n    ```", "```php\n        _user_is_logged_in: 'TRUE'\n    ```", "```php\n    php vendor/bin/drush cr\n    ```"]