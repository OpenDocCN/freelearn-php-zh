["```php\n    <?php\n    ```", "```php\n    namespace Drupal\\mymodule\\Controller;\n    ```", "```php\n    use Drupal\\Core\\Controller\\ControllerBase;\n    ```", "```php\n    use Symfony\\Component\\HttpFoundation\\JsonResponse;\n    ```", "```php\n    use Symfony\\Component\\HttpFoundation\\Request;\n    ```", "```php\n    class ArticleController extends ControllerBase {\n    ```", "```php\n      public function store(Request $request):\n    ```", "```php\n          JsonResponse {\n    ```", "```php\n      }\n    ```", "```php\n    }\n    ```", "```php\n      public function store(Request $request):\n    ```", "```php\n       JsonResponse {\n    ```", "```php\n       $content = $request->getContent();\n    ```", "```php\n       $json = \\Drupal\\Component\\Serialization\\\n    ```", "```php\n          Json::decode($content);\n    ```", "```php\n      }\n    ```", "```php\n      public function store(Request $request):\n    ```", "```php\n       JsonResponse {\n    ```", "```php\n       $content = $request->getContent();\n    ```", "```php\n       $json = \\Drupal\\Component\\Serialization\\\n    ```", "```php\n          Json::decode($content);\n    ```", "```php\n       $entity_type_manager = $this->entityTypeManager();\n    ```", "```php\n       $node_storage = $entity_type_manager->\n    ```", "```php\n          getStorage('node');\n    ```", "```php\n      }\n    ```", "```php\n      public function store(Request $request):\n    ```", "```php\n       JsonResponse {\n    ```", "```php\n       $content = $request->getContent();\n    ```", "```php\n       $json = \\Drupal\\Component\\Serialization\\\n    ```", "```php\n          Json::decode($content);\n    ```", "```php\n       $entity_type_manager = $this->entityTypeManager();\n    ```", "```php\n       $node_storage = $entity_type_manager->\n    ```", "```php\n          getStorage('node');\n    ```", "```php\n       $article = $node_storage->create([\n    ```", "```php\n        'type' => 'article',\n    ```", "```php\n       ]);\n    ```", "```php\n      }\n    ```", "```php\n      public function store(Request $request): JsonResponse {\n    ```", "```php\n       $content = $request->getContent();\n    ```", "```php\n       $json = \\Drupal\\Component\\Serialization\\\n    ```", "```php\n          Json::decode($content);\n    ```", "```php\n       $entity_type_manager = $this->entityTypeManager();\n    ```", "```php\n       $node_storage = $entity_type_manager->\n    ```", "```php\n          getStorage('node');\n    ```", "```php\n       $article = $node_storage->create([\n    ```", "```php\n        'type' => 'article',\n    ```", "```php\n        'title' => $json['title'],\n    ```", "```php\n        'body' => $json['body'],\n    ```", "```php\n       ]);\n    ```", "```php\n      }\n    ```", "```php\n      public function store(Request $request):\n    ```", "```php\n        JsonResponse {\n    ```", "```php\n       $content = $request->getContent();\n    ```", "```php\n       $json = \\Drupal\\Component\\Serialization\\\n    ```", "```php\n          Json::decode($content);\n    ```", "```php\n       $entity_type_manager = $this->entityTypeManager();\n    ```", "```php\n       $node_storage = $entity_type_manager->\n    ```", "```php\n          getStorage('node');\n    ```", "```php\n       $article = $node_storage->create([\n    ```", "```php\n        'type' => 'article',\n    ```", "```php\n        'title' => $json['title'],\n    ```", "```php\n        'body' => $json['body'],\n    ```", "```php\n       ]);\n    ```", "```php\n       $article->save();\n    ```", "```php\n      }\n    ```", "```php\n      public function store(Request $request):\n    ```", "```php\n        JsonResponse {\n    ```", "```php\n       $content = $request->getContent();\n    ```", "```php\n       $json = \\Drupal\\Component\\Serialization\\\n    ```", "```php\n          Json::decode($content);\n    ```", "```php\n       $entity_type_manager = $this->entityTypeManager();\n    ```", "```php\n       $node_storage = $entity_type_manager->\n    ```", "```php\n          getStorage('node');\n    ```", "```php\n       $article = $node_storage->create([\n    ```", "```php\n        'type' => 'article',\n    ```", "```php\n        'title' => $json['title'],\n    ```", "```php\n        'body' => $json['body'],\n    ```", "```php\n       ]);\n    ```", "```php\n       $article->save();\n    ```", "```php\n       $article_url = $article->toUrl()->setAbsolute()->\n    ```", "```php\n          toString();\n    ```", "```php\n       return new JsonResponse(\n    ```", "```php\n        $article->toArray(),\n    ```", "```php\n        201,\n    ```", "```php\n        ['Location' => $article_url],\n    ```", "```php\n       );\n    ```", "```php\n      }\n    ```", "```php\n    mymodule.create_article:\n    ```", "```php\n      path: /articles\n    ```", "```php\n      defaults:\n    ```", "```php\n       _controller: Drupal\\mymodule\\Controller\\\n    ```", "```php\n          ArticleController::store\n    ```", "```php\n      methods: [POST]\n    ```", "```php\n      requirements:\n    ```", "```php\n       _access: 'TRUE'\n    ```", "```php\n    php vendor/bin/drush cr\n    ```", "```php\n    POST http://localhost/articles\n    ```", "```php\n    Content-Type: application/json\n    ```", "```php\n    Accept: application/json\n    ```", "```php\n    {\n    ```", "```php\n      \"title\": \"New article\",\n    ```", "```php\n      \"body\": \"Test body\"\n    ```", "```php\n    }\n    ```", "```php\n    <?php\n    ```", "```php\n    namespace Drupal\\mymodule\\Controller;\n    ```", "```php\n    use Drupal\\Core\\Controller\\ControllerBase;\n    ```", "```php\n    use Symfony\\Component\\HttpFoundation\\JsonResponse;\n    ```", "```php\n    use Symfony\\Component\\HttpFoundation\\Request;\n    ```", "```php\n    class ArticleController extends ControllerBase {\n    ```", "```php\n      public function index(Request $request):\n    ```", "```php\n       JsonResponse {\n    ```", "```php\n      }\n    ```", "```php\n    }\n    ```", "```php\n      public function index(Request $request):\n    ```", "```php\n        JsonResponse {\n    ```", "```php\n       $sort = $request->query->get('sort', 'DESC');\n    ```", "```php\n      }\n    ```", "```php\n      public function index(Request $request):\n    ```", "```php\n        JsonResponse {\n    ```", "```php\n       $sort = $request->query->get('sort', 'DESC');\n    ```", "```php\n       $entity_type_manager = $this->entityTypeManager();\n    ```", "```php\n       $node_storage = $entity_type_manager->\n    ```", "```php\n          getStorage('node');\n    ```", "```php\n      }\n    ```", "```php\n      public function index(Request $request):\n    ```", "```php\n        JsonResponse {\n    ```", "```php\n       $sort = $request->query->get('sort', 'DESC');\n    ```", "```php\n       $entity_type_manager = $this->entityTypeManager();\n    ```", "```php\n        $node_storage = $entity_type_manager->\n    ```", "```php\n            getStorage('node');\n    ```", "```php\n       $query = $node_storage->getQuery()\n    ```", "```php\n        ->accessCheck(TRUE);\n    ```", "```php\n      }\n    ```", "```php\n      public function index(Request $request):\n    ```", "```php\n        JsonResponse {\n    ```", "```php\n       $sort = $request->query->get('sort', 'DESC');\n    ```", "```php\n       $entity_type_manager = $this->entityTypeManager();\n    ```", "```php\n       $node_storage = $entity_type_manager->\n    ```", "```php\n          getStorage('node');\n    ```", "```php\n       $query = $node_storage->getQuery();\n    ```", "```php\n        ->accessCheck(TRUE);\n    ```", "```php\n       $query->condition('type', 'article');\n    ```", "```php\n       $query->condition('status', TRUE);\n    ```", "```php\n      }\n    ```", "```php\n      public function index(Request $request):\n    ```", "```php\n        JsonResponse {\n    ```", "```php\n       $sort = $request->query->get('sort', 'DESC');\n    ```", "```php\n       $entity_type_manager = $this->entityTypeManager();\n    ```", "```php\n       $node_storage = $entity_type_manager->\n    ```", "```php\n          getStorage('node');\n    ```", "```php\n       $query = $node_storage->getQuery();\n    ```", "```php\n        ->accessCheck(TRUE);\n    ```", "```php\n       $query->condition('type', 'article');\n    ```", "```php\n       $query->condition('status', TRUE);\n    ```", "```php\n       $query->sort('created', $sort);\n    ```", "```php\n      }\n    ```", "```php\n      public function index(Request $request):\n    ```", "```php\n        JsonResponse {\n    ```", "```php\n       $sort = $request->query->get('sort', 'DESC');\n    ```", "```php\n       $entity_type_manager = $this->entityTypeManager();\n    ```", "```php\n       $node_storage = $entity_type_manager->\n    ```", "```php\n          getStorage('node');\n    ```", "```php\n       $query = $node_storage->getQuery()\n    ```", "```php\n        ->accessCheck(TRUE);\n    ```", "```php\n       $query->condition('type', 'article');\n    ```", "```php\n       $query->condition('status', TRUE);\n    ```", "```php\n       $query->sort('created', $sort);\n    ```", "```php\n       $node_ids = $query->execute();\n    ```", "```php\n      }\n    ```", "```php\n      public function index(Request $request):\n    ```", "```php\n        JsonResponse {\n    ```", "```php\n       $sort = $request->query->get('sort', 'DESC');\n    ```", "```php\n       $entity_type_manager = $this->entityTypeManager();\n    ```", "```php\n       $node_storage = $entity_type_manager->\n    ```", "```php\n          getStorage('node');\n    ```", "```php\n       $query = $node_storage->getQuery()\n    ```", "```php\n        ->accessCheck(TRUE);\n    ```", "```php\n       $query->condition('type', 'article');\n    ```", "```php\n       $query->condition('status', TRUE);\n    ```", "```php\n       $query->sort('created', $sort);\n    ```", "```php\n       $node_ids = $query->execute();\n    ```", "```php\n       $nodes = $node_storage->loadMultiple($node_ids);\n    ```", "```php\n      }\n    ```", "```php\n      public function index(Request $request):\n    ```", "```php\n        JsonResponse {\n    ```", "```php\n       $sort = $request->query->get('sort', 'DESC');\n    ```", "```php\n       $entity_type_manager = $this->entityTypeManager();\n    ```", "```php\n       $node_storage = $entity_type_manager->\n    ```", "```php\n          getStorage('node');\n    ```", "```php\n       $query = $node_storage->getQuery()\n    ```", "```php\n        ->accessCheck(TRUE);\n    ```", "```php\n       $query->condition('type', 'article');\n    ```", "```php\n       $query->condition('status', TRUE);\n    ```", "```php\n       $query->sort('created', $sort);\n    ```", "```php\n       $node_ids = $query->execute();\n    ```", "```php\n       $nodes = $node_storage->loadMultiple($node_ids);\n    ```", "```php\n       $nodes = array_map(function (\\Drupal\\node\\\n    ```", "```php\n          NodeInterface $node) {\n    ```", "```php\n        return $node->toArray();\n    ```", "```php\n       }, $nodes);\n    ```", "```php\n       return new JsonResponse($nodes);\n    ```", "```php\n      }\n    ```", "```php\n    mymodule.get_articles:\n    ```", "```php\n      path: /articles\n    ```", "```php\n      defaults:\n    ```", "```php\n       _controller: Drupal\\mymodule\\Controller\\\n    ```", "```php\n          ArticleController::index\n    ```", "```php\n      methods: [GET]\n    ```", "```php\n      requirements:\n    ```", "```php\n       _permission: 'access content'\n    ```", "```php\n    php vendor/bin/drush cr\n    ```", "```php\n    GET http://localhost/articles\n    ```", "```php\n    Accept: application/json\n    ```", "```php\n$node_storage->getQuery()\n  ->accessCheck(FALSE)\n  ->condition('type', 'article')\n  ->condition('status', FALSE)\n  ->count()\n  ->execute();\n```", "```php\n    <?php\n    ```", "```php\n    namespace Drupal\\mymodule\\Controller;\n    ```", "```php\n    use Drupal\\Core\\Controller\\ControllerBase;\n    ```", "```php\n    use Drupal\\node\\NodeInterface;\n    ```", "```php\n    use Symfony\\Component\\HttpFoundation\\JsonResponse;\n    ```", "```php\n    use Symfony\\Component\\HttpFoundation\\Request;\n    ```", "```php\n    class ArticleController extends ControllerBase {\n    ```", "```php\n      public function get(NodeInterface $node):\n    ```", "```php\n        JsonResponse {\n    ```", "```php\n      }\n    ```", "```php\n    }\n    ```", "```php\n      public function get(NodeInterface $node):\n    ```", "```php\n        JsonResponse {\n    ```", "```php\n       $entity_type_manager = $this->entityTypeManager();\n    ```", "```php\n       $access_handler = $entity_type_manager->\n    ```", "```php\n          getAccessControlHandler('node');\n    ```", "```php\n      }\n    ```", "```php\n      public function get(NodeInterface $node):\n    ```", "```php\n        JsonResponse {\n    ```", "```php\n       $entity_type_manager = $this->entityTypeManager();\n    ```", "```php\n       $access_handler = $entity_type_manager->\n    ```", "```php\n          getAccessControlHandler('node');\n    ```", "```php\n       $node_access = $access_handler->access($node,\n    ```", "```php\n          'view');\n    ```", "```php\n      }\n    ```", "```php\n      public function get(NodeInterface $node):\n    ```", "```php\n        JsonResponse {\n    ```", "```php\n       $entity_type_manager = $this->entityTypeManager();\n    ```", "```php\n       $access_handler = $entity_type_manager->\n    ```", "```php\n          getAccessControlHandler('node');\n    ```", "```php\n       $node_access = $access_handler->access($node,\n    ```", "```php\n          'view');\n    ```", "```php\n       if (!$node_access) {\n    ```", "```php\n        return new JsonResponse(NULL, 404);\n    ```", "```php\n       }\n    ```", "```php\n      }\n    ```", "```php\n      public function get(NodeInterface $node):\n    ```", "```php\n        JsonResponse {\n    ```", "```php\n       $entity_type_manager = $this->entityTypeManager();\n    ```", "```php\n       $access_handler = $entity_type_manager->\n    ```", "```php\n          getAccessControlHandler('node');\n    ```", "```php\n       $node_access = $access_handler->access($node,\n    ```", "```php\n          'view');\n    ```", "```php\n       if (!$node_access) {\n    ```", "```php\n        return new JsonResponse(NULL, 404);\n    ```", "```php\n       }\n    ```", "```php\n       return new JsonResponse(\n    ```", "```php\n        $node->toArray(),\n    ```", "```php\n       );\n    ```", "```php\n      }\n    ```", "```php\n    mymodule.get_article:\n    ```", "```php\n      path: /articles/{node}\n    ```", "```php\n      defaults:\n    ```", "```php\n       _controller: Drupal\\mymodule\\Controller\\\n    ```", "```php\n          ArticleController::get\n    ```", "```php\n      requirements:\n    ```", "```php\n       _permission: 'access content'\n    ```", "```php\n    php vendor/bin/drush cr\n    ```", "```php\n    GET http://localhost/articles/1\n    ```", "```php\n    Accept: application/json\n    ```", "```php\n$node_access = $node->access('view');\n```", "```php\n$node_access = $node->access('view', $other_user);\n```", "```php\n    <?php\n    ```", "```php\n    namespace Drupal\\mymodule\\Controller;\n    ```", "```php\n    use Drupal\\Core\\Controller\\ControllerBase;\n    ```", "```php\n    use Drupal\\node\\NodeInterface;\n    ```", "```php\n    use Symfony\\Component\\HttpFoundation\\JsonResponse;\n    ```", "```php\n    use Symfony\\Component\\HttpFoundation\\Request;\n    ```", "```php\n    class ArticleController extends ControllerBase {\n    ```", "```php\n      public function update(Request $request,\n    ```", "```php\n        NodeInterface $node): JsonResponse {\n    ```", "```php\n      }\n    ```", "```php\n    }\n    ```", "```php\n      public function update(Request $request,\n    ```", "```php\n        NodeInterface $node): JsonResponse {\n    ```", "```php\n       $content = $request->getContent();\n    ```", "```php\n       $json = \\Drupal\\Component\\Serialization\\\n    ```", "```php\n          Json::decode($content);\n    ```", "```php\n      }\n    ```", "```php\n      public function update(Request $request,\n    ```", "```php\n        NodeInterface $node): JsonResponse {\n    ```", "```php\n       $content = $request->getContent();\n    ```", "```php\n       $json = \\Drupal\\Component\\Serialization\\\n    ```", "```php\n          Json::decode($content);\n    ```", "```php\n       if (!empty($json['title'])) {\n    ```", "```php\n        $node->setTitle($json['title']);\n    ```", "```php\n       }\n    ```", "```php\n      }\n    ```", "```php\n      public function update(Request $request,\n    ```", "```php\n        NodeInterface $node): JsonResponse {\n    ```", "```php\n       $content = $request->getContent();\n    ```", "```php\n       $json = \\Drupal\\Component\\Serialization\\\n    ```", "```php\n          Json::decode($content);\n    ```", "```php\n       if (!empty($json['title'])) {\n    ```", "```php\n        $node->setTitle($json['title']);\n    ```", "```php\n       }\n    ```", "```php\n       if (!empty($json['body'])) {\n    ```", "```php\n        $node->set('field_body', $json['body']);\n    ```", "```php\n       }\n    ```", "```php\n      }\n    ```", "```php\n      public function update(Request $request,\n    ```", "```php\n        NodeInterface $node): JsonResponse {\n    ```", "```php\n       $content = $request->getContent();\n    ```", "```php\n       $json = \\Drupal\\Component\\Serialization\\\n    ```", "```php\n          Json::decode($content);\n    ```", "```php\n       if (isset($json['title'])) {\n    ```", "```php\n        $node->setTitle($json['title']);\n    ```", "```php\n       }\n    ```", "```php\n       if (isset($json['body'])) {\n    ```", "```php\n        $node->set('body', $json['body']);\n    ```", "```php\n       }\n    ```", "```php\n       $node->save();\n    ```", "```php\n       return new JsonResponse(\n    ```", "```php\n        $node->toArray()\n    ```", "```php\n       );\n    ```", "```php\n      }\n    ```", "```php\n    mymodule.update_article:\n    ```", "```php\n      path: /articles/{node}\n    ```", "```php\n      defaults:\n    ```", "```php\n       _controller: Drupal\\mymodule\\Controller\\\n    ```", "```php\n          ArticleController::update\n    ```", "```php\n      methods: [PATCH]\n    ```", "```php\n      requirements:\n    ```", "```php\n       _access: 'TRUE'\n    ```", "```php\n    php vendor/bin/drush cr\n    ```", "```php\n    PATCH http://localhost/articles/1\n    ```", "```php\n    Content-Type: application/json\n    ```", "```php\n    Accept: application/json\n    ```", "```php\n    {\n    ```", "```php\n      \"title\": \"New updated title!\",\n    ```", "```php\n      \"body\": \"Modified body text\"\n    ```", "```php\n    }\n    ```", "```php\n      public function update(Request $request,\n    ```", "```php\n        NodeInterface $node): JsonResponse {\n    ```", "```php\n       $content = $request->getContent();\n    ```", "```php\n       $json = \\Drupal\\Component\\Serialization\\\n    ```", "```php\n          Json::decode($content);\n    ```", "```php\n       if (isset($json['title'])) {\n    ```", "```php\n        $node->setTitle($json['title']);\n    ```", "```php\n       }\n    ```", "```php\n       if (isset($json['body'])) {\n    ```", "```php\n        $node->set('body', $json['body']);\n    ```", "```php\n       }\n    ```", "```php\n       $node->save();\n    ```", "```php\n       return new JsonResponse(\n    ```", "```php\n        $node->toArray()\n    ```", "```php\n       );\n    ```", "```php\n      }\n    ```", "```php\n      public function update(Request $request,\n    ```", "```php\n        NodeInterface $node): JsonResponse {\n    ```", "```php\n       $content = $request->getContent();\n    ```", "```php\n       $json = \\Drupal\\Component\\Serialization\\\n    ```", "```php\n          Json::decode($content);\n    ```", "```php\n       if (isset($json['title'])) {\n    ```", "```php\n        $node->setTitle($json['title']);\n    ```", "```php\n       }\n    ```", "```php\n       if (isset($json['body'])) {\n    ```", "```php\n        $node->set('body', $json['body']);\n    ```", "```php\n       }\n    ```", "```php\n       $constraint_violations = $node->validate();\n    ```", "```php\n       $node->save();\n    ```", "```php\n       return new JsonResponse(\n    ```", "```php\n        $node->toArray()\n    ```", "```php\n       );\n    ```", "```php\n      }\n    ```", "```php\n      public function update(Request $request,\n    ```", "```php\n        NodeInterface $node): JsonResponse {\n    ```", "```php\n       $content = $request->getContent();\n    ```", "```php\n       $json = \\Drupal\\Component\\Serialization\\\n    ```", "```php\n          Json::decode($content);\n    ```", "```php\n       if (isset($json['title'])) {\n    ```", "```php\n        $node->setTitle($json['title']);\n    ```", "```php\n       }\n    ```", "```php\n       if (isset($json['body'])) {\n    ```", "```php\n        $node->set('body', $json['body']);\n    ```", "```php\n       }\n    ```", "```php\n       $constraint_violations = $node->validate();\n    ```", "```php\n       if (count($constraint_violations) > 0) {\n    ```", "```php\n       }\n    ```", "```php\n       $node->save();\n    ```", "```php\n       return new JsonResponse(\n    ```", "```php\n        $node->toArray()\n    ```", "```php\n       );\n    ```", "```php\n      }\n    ```", "```php\n      public function update(Request $request,\n    ```", "```php\n        NodeInterface $node): JsonResponse {\n    ```", "```php\n       $content = $request->getContent();\n    ```", "```php\n       $json = \\Drupal\\Component\\Serialization\\\n    ```", "```php\n          Json::decode($content);\n    ```", "```php\n       if (isset($json['title'])) {\n    ```", "```php\n        $node->setTitle($json['title']);\n    ```", "```php\n       }\n    ```", "```php\n       if (isset($json['body'])) {\n    ```", "```php\n        $node->set('body', $json['body']);\n    ```", "```php\n       }\n    ```", "```php\n       $constraint_violations = $node->validate();\n    ```", "```php\n       if (count($constraint_violations) > 0) {\n    ```", "```php\n        $errors = [];\n    ```", "```php\n        foreach ($constraint_violations as $violation) {\n    ```", "```php\n          $errors[] = $violation->getPropertyPath()\n    ```", "```php\n            . ': ' . $violation->getMessage();\n    ```", "```php\n        }\n    ```", "```php\n        return new JsonResponse($errors, 400);\n    ```", "```php\n       }\n    ```", "```php\n       $node->save();\n    ```", "```php\n       return new JsonResponse(\n    ```", "```php\n        $node->toArray()\n    ```", "```php\n       );\n    ```", "```php\n      }\n    ```", "```php\n    PATCH https://localhost/articles/1\n    ```", "```php\n    Content-Type: application/json\n    ```", "```php\n    Accept: application/json\n    ```", "```php\n    {\n    ```", "```php\n      \"title\": \"\",\n    ```", "```php\n      \"body\": \"Modified body text\"\n    ```", "```php\n    }\n    ```", "```php\n$node->get('body')->validate();\n```", "```php\n    <?php\n    ```", "```php\n    namespace Drupal\\mymodule\\Controller;\n    ```", "```php\n    use Drupal\\Core\\Controller\\ControllerBase;\n    ```", "```php\n    use Drupal\\node\\NodeInterface;\n    ```", "```php\n    use Symfony\\Component\\HttpFoundation\\JsonResponse;\n    ```", "```php\n    use Symfony\\Component\\HttpFoundation\\Request;\n    ```", "```php\n    class ArticleController extends ControllerBase {\n    ```", "```php\n      public function delete(NodeInterface $node):\n    ```", "```php\n        JsonResponse {\n    ```", "```php\n      }\n    ```", "```php\n    }\n    ```", "```php\n      public function delete(NodeInterface $node):\n    ```", "```php\n        JsonResponse {\n    ```", "```php\n       $node->delete();\n    ```", "```php\n      }\n    ```", "```php\n      public function delete(NodeInterface $node):\n    ```", "```php\n        JsonResponse {\n    ```", "```php\n       $node->delete();\n    ```", "```php\n       return new JsonResponse(null, 204);\n    ```", "```php\n      }\n    ```", "```php\n    mymodule.delete_article:\n    ```", "```php\n      path: /articles/{node}\n    ```", "```php\n      defaults:\n    ```", "```php\n       _controller: Drupal\\mymodule\\Controller\\\n    ```", "```php\n          ArticleController::delete\n    ```", "```php\n      methods: [DELETE]\n    ```", "```php\n      requirements:\n    ```", "```php\n       _access: 'TRUE'\n    ```", "```php\n    php vendor/bin/drush cr\n    ```", "```php\n    DELETE http://localhost/articles/1\n    ```", "```php\n    Accept: application/json\n    ```", "```php\n    GET http://localhost/articles/1\n    ```", "```php\n    Accept: application/json\n    ```"]