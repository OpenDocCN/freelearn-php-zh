- en: Chapter 3. Building a Blog Application
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3章：构建博客应用程序
- en: Now that we have seen FuelPHP's elementary features in the previous chapters,
    it is time to use more advanced ones. In this chapter, we will build a typical
    blog application managed via a secured administration interface. We will implement
    it as a module since this is a convenient way in FuelPHP to improve code reusability.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在前几章中我们已经看到了FuelPHP的基本特性，现在是时候使用更高级的特性了。在本章中，我们将构建一个典型的博客应用程序，通过一个安全的行政界面进行管理。我们将将其实现为一个模块，因为在FuelPHP中这是一种提高代码重用性的便捷方式。
- en: 'By the end of the chapter, you should know:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，你应该知道：
- en: How to generate an administration interface
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何生成管理界面
- en: How to create your own module
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何创建你自己的模块
- en: What are CSRF attacks and how to protect your website from them
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CSRF攻击是什么，以及如何保护你的网站免受其侵害
- en: How to create and use tasks
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何创建和使用任务
- en: How and when to use presenters
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何以及何时使用演示者
- en: How to easily create pagination
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何轻松创建分页
- en: How to use the slug observer
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用slug观察者
- en: What are the **Auth** and **Email** packages and how to use them
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Auth**和**Email**包是什么，以及如何使用它们'
- en: How to parse markdown
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何解析Markdown
- en: How to use **WYSIWYGS** editors and display their content
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用**WYSIWYG**编辑器和显示其内容
- en: The aim of this chapter is also to consolidate your acquired knowledge, and
    thus the implementation will be a little longer and more repetitive than usual.
    Please take your time to analyze and understand how each part works, and play
    around by tweaking or adding features.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的目标也是巩固你获得的知识，因此实现将比通常更长、更重复。请花时间分析和理解每个部分是如何工作的，并通过调整或添加功能来尝试。
- en: Specifications
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 规范
- en: 'First, let''s define what should be expected in our final application:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们定义我们最终应用程序中应该期望什么：
- en: A blog displays posts. A post is described by a title, a small description (that
    acts as a summary), the post's content, a category, a publication date, and an
    author.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个博客显示帖子。帖子由标题、小描述（作为摘要）、帖子内容、类别、发布日期和作者描述。
- en: The blog's home page displays a paginated list of posts. If the user clicks
    on the title, he should be able to see the full version of the post.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 博客的主页显示帖子的分页列表。如果用户点击标题，他应该能看到帖子的完整版本。
- en: By clicking on the post category, a similar list should appear, but only displaying
    the posts belonging to this category.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 点击帖子类别时，应显示一个类似列表，但只显示属于此类别的帖子。
- en: Posts and categories should only be created and edited by authenticated users
    in the administration interface.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 帖子和类别只能由认证用户在管理界面中创建和编辑。
- en: The length of the post's small description should be limited to 200 characters
    and edited in the Markdown syntax.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 帖子的小描述长度应限制在200个字符内，并使用Markdown语法进行编辑。
- en: The content should be edited with a WYSIWYG plugin.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内容应使用WYSIWYG插件进行编辑。
- en: The administrators should be able to moderate comments.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理员应该能够管理评论。
- en: Each time someone writes a comment, an email should be sent to the post's author.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每当有人写评论时，应向帖子的作者发送电子邮件。
- en: We want to be able to easily install a new blog on other websites.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们希望能够轻松地将新的博客安装到其他网站上。
- en: Conception
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概念
- en: Let's try to determine our models from the preceding specifications. Post is
    obviously a model, as it is the main feature of our blog (we display posts). Each
    post is created and updated by an authenticated user, meaning that users have
    to be saved into the database; therefore, we also have a **User** model. There
    can be posts without comments, and categories without any posts, meaning they
    belong to distinct models; therefore, there is also a **Category** and a **Comment**
    model.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试根据前面的规范确定我们的模型。显然，帖子是一个模型，因为它是我们博客的主要功能（我们显示帖子）。每个帖子都是由认证用户创建和更新的，这意味着用户必须保存到数据库中；因此，我们还有一个**用户**模型。可能存在没有评论的帖子，以及没有帖子的类别，这意味着它们属于不同的模型；因此，还有一个**类别**和**评论**模型。
- en: 'That sums up to four models:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这总共是四个模型：
- en: '![Conception](img/5401OS_03_01.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![概念](img/5401OS_03_01.jpg)'
- en: Entity Relationship diagram (Min-Max notation)
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 实体关系图（Min-Max表示法）
- en: '**Post**: This model has the following properties: title, small description,
    content, and publication date. A post is linked to a unique category and each
    category has many posts, so we will add an additional column here, named `category_id`.
    Similarly, each post belongs to a user (the author), so we will add the `user_id`
    column.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**帖子**：此模型具有以下属性：标题、简短描述、内容和发布日期。帖子链接到一个唯一的类别，每个类别有许多帖子，因此我们将在这里添加一个额外的列，命名为`category_id`。同样，每个帖子属于一个用户（作者），因此我们还将添加`user_id`列。'
- en: '**Category**: This model only has a name property.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**类别**：此模型只有一个名称属性。'
- en: '**Comment**: This model has the following properties: name, email, status and
    content. Since a comment belongs to a unique post and each post can have many
    comments, we will also add a `post_id` column. When a comment is posted by a visitor,
    its status value will be `pending`, since it has not been reviewed. The administrator
    can publish or hide each comment by changing their status in the administration
    panel to `published` or `not_published`.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**注释**：此模型具有以下属性：名称、电子邮件、状态和内容。由于评论属于一个唯一的帖子，每个帖子可以有多个评论，因此我们还将添加一个`post_id`列。当访客发表评论时，其状态值将是`待审阅`，因为它尚未被审查。管理员可以通过在管理面板中将状态更改为`已发布`或`未发布`来发布或隐藏每个评论。'
- en: We will not generate a **User** model. We will use the one from the Auth package,
    that will manage users and their authentication for us.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将不会生成**用户**模型。我们将使用Auth包中的模型，该模型将为我们管理用户及其认证。
- en: Preliminary steps
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 初步步骤
- en: 'You first need to:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 您首先需要：
- en: Install a new FuelPHP instance
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装一个新的FuelPHP实例
- en: 'Configure Apache and your host file to handle it: in this chapter, we will
    access our application by requesting the `http://myblog.app` URL.'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置Apache和您的hosts文件以处理它：在本章中，我们将通过请求`http://myblog.app` URL来访问我们的应用程序。
- en: Update Composer if necessary
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如有必要，更新Composer
- en: Create a new database for your application
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为您的应用程序创建一个新的数据库
- en: And configure FuelPHP in order to allow your application to access this database
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后配置FuelPHP以允许您的应用程序访问此数据库
- en: These steps have been covered in [Chapter 1](ch01.html "Chapter 1. Building
    Your First FuelPHP Application"), *Building Your First FuelPHP Application*, so
    you might want to take a look at it.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这些步骤已在[第1章](ch01.html "第1章. 构建您的第一个FuelPHP应用程序")中介绍，*构建您的第一个FuelPHP应用程序*，因此您可能想查看它。
- en: 'This project will also need the ORM and Auth packages. We have already used
    the ORM package, and as written earlier, the Auth package will allow us to manage
    our users and their authentication. Since both packages are already installed,
    we just need to enable them. For doing this, simply open the `APPPATH/config/config.php`
    file and insert at the end of the returned array the following code:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 此项目还需要ORM和Auth包。我们已经使用了ORM包，如前所述，Auth包将允许我们管理我们的用户及其认证。由于这两个包已经安装，我们只需要启用它们。为此，只需打开`APPPATH/config/config.php`文件，在返回数组的末尾插入以下代码：
- en: '[PRE0]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Or you can uncomment the appropriate lines. This will load the `ORM` and `Auth`
    package every time a FuelPHP instance is loaded.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，您可以取消注释适当的行。这将每次加载FuelPHP实例时都加载`ORM`和`Auth`包。
- en: Note
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can also load a package in an ad hoc manner, using the `Package::load` method.
    This will be addressed later in this chapter when we will use the `Email` package.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用`Package::load`方法以临时方式加载包。这将在本章后面讨论，当我们使用`Email`包时。
- en: 'We also need to change few configuration items for the `Auth` package. First,
    copy the `PKGPATH/auth/config/auth.php` configuration file to `APPPATH/config/auth.php`
    (this configuration file will overwrite the one of the `Auth` package) and replace:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要更改`Auth`包的一些配置项。首先，将`PKGPATH/auth/config/auth.php`配置文件复制到`APPPATH/config/auth.php`（此配置文件将覆盖`Auth`包中的配置文件）并替换：
- en: '[PRE1]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'By:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 作者：
- en: '[PRE2]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Note
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: One reason we chose to use the `Ormauth` driver is that it has a much more fine-grained
    ACL system than the `Simpleauth` driver. `Ormauth` is more flexible and manages
    users, groups, roles, and permissions, whereas `Simpleauth` only manages users,
    groups, and roles. Another reason is that `Ormauth` already contains migrations
    and models managing all these components. In a nutshell, we mainly chose this
    driver because it is easy to set up and shows the whole scope of what is possible.
    However, it is important to point out that we will only use a very small fraction
    of its features and we could have limited ourselves to the `Simpleauth` driver.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们选择使用`Ormauth`驱动程序的一个原因是它比`Simpleauth`驱动程序具有更细粒度的ACL系统。`Ormauth`更灵活，管理用户、组、角色和权限，而`Simpleauth`只管理用户、组和角色。另一个原因是`Ormauth`已经包含了管理所有这些组件的迁移和模型。简而言之，我们主要选择这个驱动程序是因为它易于设置，并展示了所有可能的功能范围。然而，重要的是要指出，我们只会使用其非常小的一部分功能，我们本可以仅限于使用`Simpleauth`驱动程序。
- en: Finally, copy the `PKGPATH/auth/config/ormauth.php` configuration file to `APPPATH/config/ormauth.php`,
    and set the value of `login_hash_salt` to a random string (for security precautions).
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，将`PKGPATH/auth/config/ormauth.php`配置文件复制到`APPPATH/config/ormauth.php`，并将`login_hash_salt`的值设置为随机字符串（出于安全考虑）。
- en: Scaffolding the posts
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建帖子脚手架
- en: 'We will now, as we did in [Chapter 1](ch01.html "Chapter 1. Building Your First
    FuelPHP Application"), *Building Your First FuelPHP Application* and [Chapter
    2](ch02.html "Chapter 2. Building a To-do List Application"), *Building a To-do
    List Application*, generate the necessary code to handle our posts. Since posts
    should only be created and edited by authenticated administrators in an administration
    panel, we will generate the scaffold using `admin` (alias `admin/orm`):'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将像在[第1章](ch01.html "第1章. 构建您的第一个FuelPHP应用程序")和[第2章](ch02.html "第2章. 构建待办事项列表应用程序")中做的那样，生成必要的代码来处理我们的帖子。由于帖子应该只由认证管理员在管理面板中创建和编辑，我们将使用`admin`（别名`admin/orm`）生成脚手架：
- en: '[PRE3]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The command should output the following:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 命令应该输出以下内容：
- en: '[PRE4]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'You will notice that additional files have been created compared to `scaffold/orm`.
    These files fall into two broad categories:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到与`scaffold/orm`相比，创建了额外的文件。这些文件可以分为两大类：
- en: The first five generated files have been generated to handle the administration
    panel in a general manner (authentication and layout).
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 前五个生成的文件是为了以通用方式处理管理面板（认证和布局）。
- en: The other ones, except the last one, have been generated to specifically handle
    the post administration.
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 另外一些文件（除了最后一个），是为了专门处理帖子管理。
- en: You can notice that we haven't yet generated the categories and comments, we
    will come back to that later. Our priority right now is to make the administration
    panel work to see what we are dealing with.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以注意到我们还没有生成分类和评论，我们稍后会回到这一点。我们现在的优先级是让管理面板工作，看看我们正在处理什么。
- en: Migrating part 1
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 迁移第1部分
- en: 'Now, execute the migration file that has been generated:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，执行生成的迁移文件：
- en: '[PRE5]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'If you request the URL `http://myblog.app/admin` and try to log in, an error
    will be thrown because no table handling our users exist. To create this table
    (and all the other ones necessary for the `Ormauth` driver), you have to execute
    the `Auth` package migrations. This is done using the following command:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你请求URL `http://myblog.app/admin`并尝试登录，将会抛出一个错误，因为没有处理我们用户的表。为了创建这个表（以及为`Ormauth`驱动程序所需的其它所有表），你必须执行`Auth`包迁移。这可以通过以下命令完成：
- en: '[PRE6]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The `oil refine migrate` command allows you to specify which modules and packages
    you want to migrate. You can even choose to execute all migrations (from your
    applications, modules, and packages) with the following command:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '`oil refine migrate`命令允许你指定你想要迁移的模块和包。你甚至可以选择执行所有迁移（来自你的应用程序、模块和包）的以下命令：'
- en: '[PRE7]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Though in our case it doesn't make any difference, be aware that it will execute
    even migrations for packages that are not defined in the `always_load.packages`
    key of the `APPPATH/config/config.php` configuration file. Some of you might have
    expected this behavior, but we felt that it was an important point to stress.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然在我们的情况下这没有区别，但请注意，它将执行配置文件`APPPATH/config/config.php`中未定义在`always_load.packages`键的包的迁移。有些人可能期望这种行为，但我们认为这是一个重要的要点要强调。
- en: The administration panel
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理面板
- en: 'Once the migrations have been executed, request the following URL:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 迁移执行完毕后，请求以下URL：
- en: '`http://myblog.app/admin`'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://myblog.app/admin`'
- en: 'During the migration, the `Auth` package created a default user with the following
    credentials:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在迁移过程中，`Auth` 包创建了一个具有以下凭据的默认用户：
- en: 'Username: admin'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户名：admin
- en: 'Password: admin'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密码：admin
- en: 'If you log in using these credentials, the administration panel welcome page
    will be displayed, as shown in the following screenshot:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用这些凭据登录，管理面板的欢迎页面将显示，如下面的截图所示：
- en: '![The administration panel](img/5401OS_03_02.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![管理面板](img/5401OS_03_02.jpg)'
- en: 'It is very similar to the default welcome page; the major difference is the
    upper navigation bar. As you can see in the `APPPATH/views/admin/template.php`
    generated file, the navigation bar automatically detects controllers in the `APPPATH/classes/controller/admin`
    folder and create links toward their index action. Since the `Controller_Admin_Post`
    controller has been generated, there is a link toward the posts list. If you click
    on it, you should see a CRUD scaffold pretty similar to the one generated by `scaffold/orm`:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 它与默认的欢迎页面非常相似；主要区别是顶部的导航栏。正如你在 `APPPATH/views/admin/template.php` 生成的文件中所看到的，导航栏会自动检测
    `APPPATH/classes/controller/admin` 文件夹中的控制器，并为它们的索引动作创建链接。由于已经生成了 `Controller_Admin_Post`
    控制器，因此有一个指向帖子列表的链接。如果你点击它，你应该会看到一个与 `scaffold/orm` 生成的类似的结构化 CRUD 框架：
- en: '![The administration panel](img/5401OS_03_03.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![管理面板](img/5401OS_03_03.jpg)'
- en: The Auth package
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '`Auth` 包'
- en: 'If you take a look at your database now, you should see that many tables with
    names that are prefixed by the **users** keyword, have been created:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你现在查看你的数据库，你应该会看到许多以 **users** 关键字为前缀的表已经创建：
- en: users
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户
- en: users_clients
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户客户端
- en: users_groups
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户组
- en: users_group_permissions
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户组权限
- en: users_group_roles
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户组角色
- en: users_metadata
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户元数据
- en: users_permissions
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户权限
- en: users_providers
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户提供者
- en: users_roles
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户角色
- en: users_role_permissions
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户角色权限
- en: users_scopes
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户作用域
- en: users_sessions
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户会话
- en: users_sessionscopes
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户会话作用域
- en: users_user_permissions
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户用户权限
- en: users_user_roles
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户用户角色
- en: The `Ormauth` driver of the `Auth` package manages these tables, and some of
    them are linked to models located at `PKGPATH/auth/classes/model/auth`. As explained
    earlier, the driver provides a much more complete solution than a simple authentication
    system, as it manages users, groups, roles, and permissions.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '`Auth` 包的 `Ormauth` 驱动程序管理这些表，其中一些与位于 `PKGPATH/auth/classes/model/auth` 的模型相关联。如前所述，该驱动程序提供的解决方案比简单的认证系统要完整得多，因为它管理用户、组、角色和权限。'
- en: 'It is important to point out that two other drivers exist:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 需要指出的是，存在另外两个驱动程序：
- en: '`Simpleauth`, which is a much simpler driver than `Ormauth` and only manages
    users, groups and roles.'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Simpleauth`，它比 `Ormauth` 简单得多，只管理用户、组和角色。'
- en: '`Opauth`, which allows users to connect using `OAuth` or `OpenID` providers
    including Facebook, Twitter, or Google.'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Opauth`，允许用户使用 `OAuth` 或 `OpenID` 提供商（包括Facebook、Twitter或Google）进行连接。'
- en: As we will use only a very small part of the package, explaining it to its full
    extent would be out of scope. For more details, you are recommended to read the
    official documentation at [http://fuelphp.com/docs/packages/auth/intro.html](http://fuelphp.com/docs/packages/auth/intro.html)
    (It can be accessed through the FuelPHP website by navigating to **DOCS** | **TABLE
    OF CONTENTS** | **Auth** | **Introduction**)
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们只会使用该包的一小部分，对其进行全面解释超出了范围。有关更多详细信息，建议您阅读官方文档[http://fuelphp.com/docs/packages/auth/intro.html](http://fuelphp.com/docs/packages/auth/intro.html)（可以通过通过FuelPHP网站导航到**DOCS**
    | **TABLE OF CONTENTS** | **Auth** | **Introduction**来访问）
- en: It would be good practice to change your admin password, as the current setting
    (username and password both set to `admin`) will be a major security flaw when
    publishing your project to the production server. You can change it using the
    `Auth::change_password` method, and for doing that you are recommended to read
    the method's official documentation at [http://fuelphp.com/docs/packages/auth/ormauth/usage.html#/method_change_password](http://fuelphp.com/docs/packages/auth/ormauth/usage.html#/method_change_password)
    (It can be accessed through the FuelPHP website by navigating to **DOCS** | **TABLE
    OF CONTENTS** | **Auth** | **Ormauth** | **Usage**).
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 修改您的管理员密码是一个好习惯，因为当前的设置（用户名和密码都设置为 `admin`）在将项目发布到生产服务器时将是一个重大的安全漏洞。您可以使用 `Auth::change_password`
    方法来更改它，并且建议您阅读该方法的官方文档[http://fuelphp.com/docs/packages/auth/ormauth/usage.html#/method_change_password](http://fuelphp.com/docs/packages/auth/ormauth/usage.html#/method_change_password)（可以通过通过FuelPHP网站导航到**DOCS**
    | **TABLE OF CONTENTS** | **Auth** | **Ormauth** | **Usage**来访问）。
- en: We suggest that you execute this method in the console of **Oil** or inside
    a migration file (it is better if you want to propagate the change to other instances).
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 我们建议您在**Oil**的控制台或迁移文件中执行此方法（如果您想将更改传播到其他实例，这样做更好）。
- en: You could also add new users by using the `Auth::create_user` method. Note however
    that, for the long run, creating or using a user management system could be a
    good idea.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 您也可以通过使用`Auth::create_user`方法添加新用户。然而，请注意，从长远来看，创建或使用用户管理系统可能是一个好主意。
- en: Creating the Blog module
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建博客模块
- en: By creating the post administration interface, we have now completed the first
    step of our project. Before generating and implementing our other features, it
    is important to remember that one additional objective is to easily install blogs
    on other websites by reusing the same code. For doing that, we will create a blog
    module, and this is where we should implement our code.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 通过创建帖子管理界面，我们现在已经完成了项目的第一步。在生成和实施我们的其他功能之前，重要的是要记住，一个额外的目标是能够通过重用相同的代码轻松地将博客安装到其他网站上。为了做到这一点，我们将创建一个博客模块，这就是我们应该实现代码的地方。
- en: Moving files to the Blog module
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将文件移动到博客模块
- en: 'The first step is to specify to FuelPHP where to look for modules. At the end
    of the `APPPATH/config/config.php` configuration file returned array, add (or
    uncomment appropriate lines):'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是告诉FuelPHP在哪里查找模块。在`APPPATH/config/config.php`配置文件的返回数组末尾添加（或取消注释适当的行）：
- en: '[PRE8]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'We then need to create our blog module folders. Create a folder located at
    `APPPATH/modules/blog` with the following subfolders:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 我们接下来需要创建我们的博客模块文件夹。在`APPPATH/modules/blog`位置创建一个文件夹，并包含以下子文件夹：
- en: '`classes`'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`classes`'
- en: '`classes/controller`'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`classes/controller`'
- en: '`classes/controller/admin`'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`classes/controller/admin`'
- en: '`classes/model`'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`classes/model`'
- en: '`config`'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config`'
- en: '`migrations`'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`migrations`'
- en: '`views`'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`views`'
- en: '`views/admin`'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`views/admin`'
- en: 'You can also generate all these folders using the following `oil` command line:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 您也可以使用以下`oil`命令行生成所有这些文件夹：
- en: '[PRE9]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The next step is to move the files we generated earlier to the blog module.
    As it can be a bit long to complete (some code also need to be changed), we implemented
    an open source task for that. The repository can be found here:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是将我们之前生成的文件移动到博客模块。由于这可能需要一点时间来完成（一些代码也需要更改），我们为此实现了一个开源任务。存储库可以在以下位置找到：
- en: '[https://github.com/sdrdis/move_scaffold_to_module](https://github.com/sdrdis/move_scaffold_to_module)'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/sdrdis/move_scaffold_to_module](https://github.com/sdrdis/move_scaffold_to_module)'
- en: 'To install this task, simply save:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装此任务，只需保存：
- en: '[https://raw.githubusercontent.com/sdrdis/move_scaffold_to_module/master/movescaffoldtomodule.php](https://raw.githubusercontent.com/sdrdis/move_scaffold_to_module/master/movescaffoldtomodule.php)'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://raw.githubusercontent.com/sdrdis/move_scaffold_to_module/master/movescaffoldtomodule.php](https://raw.githubusercontent.com/sdrdis/move_scaffold_to_module/master/movescaffoldtomodule.php)'
- en: Into the `APPPATH/tasks/` repository.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 进入`APPPATH/tasks/`存储库。
- en: 'Before executing the task and moving all the files, it is important to underline
    that we will also move the `001_create_posts.php` migration file to the blog module.
    As a consequence, the `oil` utility will consider this migration file as a new
    one and try to execute it. We could leave it as it is; since the migration checks
    if the `posts` table exists before trying to create it, it will successfully be
    executed, though it won''t do anything. But the `oil` utility will have saved
    that a `001_create_posts.php` migration has been executed in the application folder,
    so this isn''t the cleanest solution. Since we haven''t entered any relevant post
    right now, let''s first undo this migration by executing:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在执行任务和移动所有文件之前，重要的是要强调，我们还将`001_create_posts.php`迁移文件移动到博客模块。因此，`oil`实用程序将考虑这个迁移文件是一个新的，并尝试执行它。我们可以让它保持原样；由于迁移在尝试创建`posts`表之前会检查该表是否存在，所以它将成功执行，尽管它不会做任何事情。但是，`oil`实用程序将保存一个`001_create_posts.php`迁移已在应用程序文件夹中执行的信息，所以这不是最干净的方法。由于我们现在还没有输入任何相关的帖子，让我们首先通过执行以下操作撤销此迁移：
- en: '[PRE10]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Then execute the following command line:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 然后执行以下命令行：
- en: '[PRE11]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The command should output (`BLOGPATH` being the path of the blog module):'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 命令应该输出（`BLOGPATH`是博客模块的路径）：
- en: '[PRE12]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Note
  id: totrans-133
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: This task was created for making your life easier when implementing this project.
    Please note, it supposes that the code was directly generated from the `oil` utility
    and that you didn't make any changes inside it. It can certainly be improved.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 这个任务是为了在实施此项目时使您的生活更轻松。请注意，它假设代码是直接从`oil`实用程序生成的，并且您没有对其进行任何修改。它当然可以改进。
- en: Hopefully, it won't be needed anymore in FuelPHP 1.8 as a `--module` option
    might be implemented in the `oil generate scaffold` and `oil generate admin` commands,
    allowing developers to directly generate scaffolds inside a module.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 希望在 FuelPHP 1.8 中不再需要它，因为 `--module` 选项可能会在 `oil generate scaffold` 和 `oil generate
    admin` 命令中实现，允许开发者直接在模块内生成脚手架。
- en: 'Now, let''s execute the migration file inside the blog module:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们在博客模块中执行迁移文件：
- en: '[PRE13]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Improving the navigation bar
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 改进导航栏
- en: 'You might have noticed that, though our post administration panel can be accessed
    by requesting the following URL:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经注意到，尽管我们的帖子管理面板可以通过请求以下 URL 访问：
- en: '`http://myblog.app/blog/admin/post`'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://myblog.app/blog/admin/post`'
- en: 'It doesn''t appear in the upper navigation bar anymore. If we take a look at
    the administration template located at `APPPATH/views/admin/template.php`, we
    can see that those links are generated by the following code:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 它不再出现在上方的导航栏中。如果我们查看位于 `APPPATH/views/admin/template.php` 的管理模板，我们可以看到那些链接是由以下代码生成的：
- en: '[PRE14]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'As you can see, the links are currently created according to files located
    at `APPPATH/classes/controller/admin/`. However, we would like to support modules
    by looking for files in the `classes/controller/admin` subdirectory of each module.
    For doing this, replace this code by the following:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，链接目前是根据位于 `APPPATH/classes/controller/admin/` 的文件创建的。然而，我们希望支持通过在每个模块的
    `classes/controller/admin` 子目录中查找文件来支持模块。为此，将此代码替换为以下代码：
- en: '[PRE15]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Create the helper at the location `APPPATH/classes/helper.php` and add the
    following content (read the comments for more information):'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `APPPATH/classes/helper.php` 位置创建辅助器，并添加以下内容（阅读注释以获取更多信息）：
- en: '[PRE16]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Note
  id: totrans-147
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 备注
- en: Note that the above code supposes that all modules containing at least an admin
    controller can be requested.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，上述代码假设所有包含至少一个后台控制器的模块都可以被请求。
- en: If you refresh your administration panel, the **Post** link should appear in
    the upper navigation toolbar.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你刷新你的管理面板，**帖子**链接应该出现在上方的导航工具栏中。
- en: 'One caveat of this solution is that you have to perform the same changes on
    each new project if you want to display the **Post** link in the navigation toolbar.
    However, the solution is universal in the sense that, if you add other modules
    and admin controllers, their links will automatically appear. Moreover, if you
    don''t use this solution, you will still be able to manage posts via the following
    URL:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 这个解决方案的一个缺点是，如果你想显示导航工具栏中的 **帖子** 链接，你必须对每个新的项目执行相同的更改。然而，这个解决方案是通用的，因为如果你添加其他模块和后台控制器，它们的链接将自动出现。此外，如果你不使用这个解决方案，你仍然可以通过以下
    URL 管理帖子：
- en: '`http://myblog.app/blog/admin/post`'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://myblog.app/blog/admin/post`'
- en: Scaffolding the rest of our project
  id: totrans-152
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 脚手架项目的其余部分
- en: Now that the post administration panel is working and inside the blog module,
    it is time to generate our other models.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 现在帖子管理面板已经工作，并且位于博客模块中，是时候生成我们的其他模型了。
- en: Scaffolding categories
  id: totrans-154
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 脚手架分类
- en: Let's first take care of the Category model.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先处理分类模型。
- en: Generating files
  id: totrans-156
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 生成文件
- en: 'This step is quite straightforward; as we did previously, we will use the `oil`
    command to generate our scaffold:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 这一步相当直接；就像我们之前做的那样，我们将使用 `oil` 命令来生成我们的脚手架：
- en: '[PRE17]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Note that we added the `-s` (`s` for skip) parameter, as some files have already
    been generated previously and we don''t want to replace them. This command line
    should output:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，我们添加了 `-s` （`s` 代表跳过）参数，因为一些文件之前已经被生成，我们不希望替换它们。这个命令行应该输出：
- en: '[PRE18]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Don't launch the generated migration though; we will first move the code to
    our blog module.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 不要启动生成的迁移；我们首先将代码移动到我们的博客模块中。
- en: Moving categories to the blog module
  id: totrans-162
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将分类移动到博客模块
- en: 'Let''s use the `moveScaffoldToModule` task to move the category scaffold into
    the blog module:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用 `moveScaffoldToModule` 任务将分类脚手架移动到博客模块：
- en: '[PRE19]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The command should output (`BLOGPATH` being the path of the blog module):'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 命令应该输出（`BLOGPATH` 是博客模块的路径）：
- en: '[PRE20]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Migrating
  id: totrans-167
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 迁移
- en: 'Now we just have to execute our migration file. To do that, enter the following
    command line:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们只需执行我们的迁移文件。为此，输入以下命令行：
- en: '[PRE21]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: If you access your administration panel, you should now be able to manage categories.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你访问你的管理面板，你现在应该能够管理分类。
- en: Scaffolding comments
  id: totrans-171
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 脚手架注释
- en: 'This section is quite similar to the previous one. First, generate the scaffold:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 这一节与上一节相当相似。首先，生成脚手架：
- en: '[PRE22]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'This command should output the following:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令应该输出以下内容：
- en: '[PRE23]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Then, move the scaffold to the blog module:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，将脚手架移动到博客模块：
- en: '[PRE24]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'This command should output the following:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令应输出以下内容：
- en: '[PRE25]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Before launching the migration file, we will improve it by changing the `status`
    column type to `ENUM`, since there are only three possible values: `not_published`,
    `pending`, and `published`. To do that, edit the `BLOGPATH/migrations/003_create_comments.php`
    file and replace the following line:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动迁移文件之前，我们将通过将`status`列类型更改为`ENUM`来改进它，因为只有三个可能的值：`not_published`、`pending`和`published`。为此，编辑`BLOGPATH/migrations/003_create_comments.php`文件并替换以下行：
- en: '[PRE26]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'By:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 通过：
- en: '[PRE27]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'And finally, launch the migration file using oil:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，使用oil启动迁移文件：
- en: '[PRE28]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Comments should now be manageable in the administration interface.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 现在应该在管理界面中可以管理评论。
- en: Scaffolding posts (front)
  id: totrans-187
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 前端帖子脚手架
- en: In order to have a starting point, we are going to generate the scaffold of
    posts for the front. We will, of course, change the controller a lot, because
    we don't want visitors to edit and create posts.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 为了有一个起点，我们将为前端生成帖子脚手架。当然，我们会大量修改控制器，因为我们不希望访客编辑和创建帖子。
- en: Note
  id: totrans-189
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Before doing anything, check that no file has been generated at `APPPATH/views/template.php`
    (as I write, `oil generate admin/orm` seems to generate an incorrect file at that
    location). If that is the case, delete that file: it will be regenerated later
    by oil.'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行任何操作之前，请检查在`APPPATH/views/template.php`（在我写的时候，`oil generate admin/orm`似乎在该位置生成了一个错误的文件）。如果是这种情况，请删除该文件：稍后oil会重新生成它。
- en: 'Enter the following command:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 输入以下命令：
- en: '[PRE29]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'It should output:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 应该输出：
- en: '[PRE30]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Now move the scaffold to the blog module by entering the following command:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 现在通过输入以下命令将脚手架移动到博客模块：
- en: '[PRE31]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'This should print the following output:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该打印以下输出：
- en: '[PRE32]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Note that, as a migration file with as similar file name was already in the
    blog module, the task simply removed the one in the application directory (without
    copying it into the blog module). This is the expected behavior since a migration
    that creates the posts table already exists in the module.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，由于与类似文件名迁移文件已经在博客模块中，任务只是简单地删除了应用程序目录中的那个（而没有将其复制到博客模块中）。这是预期的行为，因为创建帖子表的迁移已经在模块中存在。
- en: 'You should be able to access the scaffold by requesting the following URL:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该可以通过请求以下URL来访问脚手架：
- en: '`http://myblog.app/blog/post`'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://myblog.app/blog/post`'
- en: Refining the administration panel
  id: totrans-202
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 精炼管理面板
- en: 'Now that all the scaffolds have been created, it is time to refine our administration
    panel:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 现在所有脚手架都已创建，是时候精炼我们的管理面板了：
- en: As categories are very simple models (they only have a `name` attribute), the
    **View** link doesn't give the user more information than in the listing, so we
    will remove it. We will also display the number of posts associated with each
    category in the categories list; it will give us an idea of the most used categories.
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于分类是非常简单的模型（它们只有一个`name`属性），所以**视图**链接不会比列表提供更多信息，因此我们将移除它。我们还将显示与每个分类关联的帖子数量；这将给我们一个关于最常用分类的印象。
- en: We don't need to create new comments inside the administration panel, so we
    need to remove the associated links and actions. We also need to do some improvements
    in the edition form and in the listing.
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们不需要在管理面板中创建新的评论，因此我们需要移除相关的链接和操作。我们还需要在编辑表单和列表中进行一些改进。
- en: Same for the posts; we will remove most columns when listing posts, we will
    add a WYSIWYG editor, a markdown editor and a category select box inside the post
    creation and edition forms.
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于帖子也是如此；在列出帖子时，我们将移除大多数列，我们将在帖子创建和编辑表单中添加一个所见即所得编辑器、一个Markdown编辑器和分类选择框。
- en: Note that there could be a lot of other improvements. You are recommended to
    add the changes you deem necessary.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，可能会有很多其他的改进。建议您添加您认为必要的更改。
- en: Refining the posts administration panel
  id: totrans-208
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 精炼帖子管理面板
- en: Let's start with the posts administration panel. You might want to add some
    categories for the purpose of testing. Note that you should be able to test your
    application again at the end of each section.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从帖子管理面板开始。您可能想添加一些分类以供测试。请注意，您应该在每个部分的末尾再次测试您的应用程序。
- en: Improving the post creation and edition forms
  id: totrans-210
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 改进帖子创建和编辑表单
- en: 'We will begin with the creation/edition form. We generated it and, as we saw
    in the previous chapters, the view managing this form can be found at: `BLOGPATH/views/admin/post/_form.php`.'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从创建/编辑表单开始。我们已经生成了它，正如我们在前面的章节中看到的，管理此表单的视图可以在以下位置找到：`BLOGPATH/views/admin/post/_form.php`。
- en: Removing and automatically filling the slug
  id: totrans-212
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 删除并自动填充别名
- en: The **slug** property should only depend on the title, and it will be used in
    URLs for improving the SEO. Its value will be automatically filled from the title,
    so we don't need its related field in the form. Therefore, remove the second `div`
    with the class `form-group` along with its content (which contains the `slug`
    input).
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: '**slug** 属性应仅依赖于标题，它将用于 URL 中以提高 SEO。其值将自动从标题中填充，因此我们不需要在表单中包含其相关字段。因此，移除带有
    `form-group` 类的第二个 `div` 以及其内容（其中包含 `slug` 输入）。'
- en: 'To automatically fill its value, we will use an observer (as for the `created_at`
    and `updated_at` columns); `Orm\Observer_Slug`. In a model''s instance, this observer
    takes a property value and saves its slug version into a second property. In the
    default case, without any additional configuration, it will take the value of
    `title` and save its slug version into `slug`. This is exactly our case, so it
    will be pretty simple, but you are recommended to read the official documentation
    for more information:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 为了自动填充其值，我们将使用观察者（如 `created_at` 和 `updated_at` 列）；`Orm\Observer_Slug`。在模型实例中，此观察者将属性值保存到第二个属性中的
    slug 版本。在默认情况下，没有任何额外配置，它将取 `title` 的值并将其 slug 版本保存到 `slug`。这正是我们的情况，所以它将非常简单，但建议您阅读官方文档以获取更多信息：
- en: '[http://fuelphp.com/docs/packages/orm/observers/included.html#os_slug](http://fuelphp.com/docs/packages/orm/observers/included.html#os_slug)'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://fuelphp.com/docs/packages/orm/observers/included.html#os_slug](http://fuelphp.com/docs/packages/orm/observers/included.html#os_slug)'
- en: (It can be accessed through FuelPHP website by navigating to **DOCS** | **TABLE
    OF CONTENTS** | **ORM** | **Observers+** | **Included observers**)
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: （可以通过 FuelPHP 网站访问，通过导航到 **DOCS** | **目录** | **ORM** | **观察者+** | **包含的观察者**）
- en: 'Open the **Post** model located at `BLOGPATH/classes/model/post.php` and add
    the following at the end of the `$_observers` property:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 打开位于 `BLOGPATH/classes/model/post.php` 的 **Post** 模型，并在 `$_observers` 属性的末尾添加以下内容：
- en: '[PRE33]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Finally, we have to remove all elements related to the **Slug** field processing.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们必须移除所有与 **Slug** 字段处理相关的元素。
- en: 'First, in the `validate` method of the **Post** model, remove:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，在 **Post** 模型的 `validate` 方法中，移除：
- en: '[PRE34]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Then, open the **Post** controller located at `BLOGPATH/classes/controller/admin/post.php`
    and remove:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，打开位于 `BLOGPATH/classes/controller/admin/post.php` 的 **Post** 控制器，并移除：
- en: '[PRE35]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'And:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 并且：
- en: '[PRE36]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'And:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 并且：
- en: '[PRE37]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Changing the small description input to a textarea
  id: totrans-228
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 将简短描述输入框改为 textarea
- en: 'We want to change the small description input into a `textarea`, because though
    its length is limited to 200 characters, the standard input isn''t user friendly.
    Replace:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望将简短描述输入框改为 `textarea`，因为尽管其长度限制为 200 个字符，但标准输入并不友好。替换为：
- en: '[PRE38]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'By:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 由：
- en: '[PRE39]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: We want to write content using the markdown syntax (take a look at [https://en.wikipedia.org/wiki/Markdown](https://en.wikipedia.org/wiki/Markdown)
    if you are not familiar with it) and display the formatted small description in
    our front end, but we won't need to change anything else for now since this formatting
    process will happen in our front views. Though, you could add a JavaScript markdown
    plugin here to make this `textarea` even more user-friendly.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望使用 Markdown 语法编写内容（如果您不熟悉，可以查看 [https://en.wikipedia.org/wiki/Markdown](https://en.wikipedia.org/wiki/Markdown)），并在我们的前端显示格式化后的简短描述，但我们现在不需要更改任何其他内容，因为此格式化过程将在我们的前端视图中发生。尽管如此，您可以在这里添加一个
    JavaScript Markdown 插件，使这个 `textarea` 更加用户友好。
- en: Editing the post content using a WYSIWYG editor
  id: totrans-234
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 使用 WYSIWYG 编辑器编辑帖子内容
- en: The next form item is the content and we want to edit it with a WYSIWYG editor.
    We just have to add a JavaScript plugin. We will use **TinyMCE**, a well-known
    open source WYSIWYG editor.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个表单项是内容，我们希望使用 WYSIWYG 编辑器来编辑它。我们只需要添加一个 JavaScript 插件。我们将使用 **TinyMCE**，这是一个知名的开放源代码
    WYSIWYG 编辑器。
- en: 'First, you will need to include the TinyMCE JavaScript file. Open the template
    file located at `APPPATH/views/admin/template.php` and add:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，您需要包含 TinyMCE JavaScript 文件。打开位于 `APPPATH/views/admin/template.php` 的模板文件，并添加：
- en: '[PRE40]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: At the end of the `Asset::js` first array parameter.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `Asset::js` 首个数组参数的末尾。
- en: Note
  id: totrans-239
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Note that we used the JavaScript file hosted on TinyMCE's recommended CDN at
    the time this book was written. Depending on when you read this book and your
    requirements, you might want to use a different URL or host TinyMCE on your servers.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，我们使用了在本书编写时 TinyMCE 推荐的 CDN 上托管的 JavaScript 文件。根据您阅读本书的时间和您的需求，您可能希望使用不同的
    URL 或在您的服务器上托管 TinyMCE。
- en: 'Next, we need to specify to TinyMCE which `textarea` has to be transformed
    to WYSIWGs. Inside the same template, add the following at the end of the first
    `script` tag:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要指定 TinyMCE 哪个 `textarea` 需要转换为 WYSIWYG。在同一个模板中，在第一个 `script` 标签的末尾添加以下内容：
- en: '[PRE41]'
  id: totrans-242
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Finally, we need to add the `wysiwyg` class to our content `textarea`. Return
    to the file located at `APPPATH/views/admin/post/_form.php`, search for `Form::textarea(''content''`
    and inside this method call, replace:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们需要将 `wysiwyg` 类添加到我们的内容 `textarea` 中。返回位于 `APPPATH/views/admin/post/_form.php`
    的文件，搜索 `Form::textarea('content'` 并在这次方法调用中替换：
- en: '[PRE42]'
  id: totrans-244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'By:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 作者：
- en: '[PRE43]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Replacing the category input by a select box
  id: totrans-247
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 用选择框替换分类输入
- en: The next item in the form is **Category id**. Setting the category id manually
    is not user friendly for the administrator; the best would be to display a select
    box, so that categories can be chosen by their title.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 表单中的下一个项目是 **分类 id**。手动设置分类 id 对管理员来说不友好；最好的做法是显示一个选择框，以便可以通过标题选择分类。
- en: 'First, create a view file at `BLOGPATH/views/admin/category/selector.php`,
    and add the following content:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，在 `BLOGPATH/views/admin/category/selector.php` 创建一个视图文件，并添加以下内容：
- en: '[PRE44]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Then, back on the `BLOGPATH/views/admin/post/_form.php` view file, fix the
    category field title by replacing:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，回到 `BLOGPATH/views/admin/post/_form.php` 视图文件，通过替换以下内容来修复分类字段标题：
- en: '[PRE45]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'With:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 修改内容：
- en: '[PRE46]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'And include our select box by replacing:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 然后通过以下方式包含我们的选择框：
- en: '[PRE47]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'With:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 修改内容：
- en: '[PRE48]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: If you test the form, the select box should be working. But there is a small
    issue; when we created the selector view, we loaded a list of categories inside
    the view. This isn't respecting the MVC pattern, as we are loading models inside
    a view. But it would not make sense to load these objects inside the **Post**
    controller, because the view doesn't actually depend on any post; we always load
    all categories, no matter the context. As written earlier in [Chapter 1](ch01.html
    "Chapter 1. Building Your First FuelPHP Application"), *Building Your First FuelPHP
    Application*, we should use a presenter in that case. Luckily, we don't need to
    make many changes.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您测试表单，选择框应该可以正常工作。但存在一个小问题；当我们创建选择视图时，我们在视图中加载了分类列表。这不符合 MVC 模式，因为我们正在视图中加载模型。但是，将这些对象加载到
    **Post** 控制器中也没有意义，因为视图实际上不依赖于任何文章；我们总是加载所有分类，无论上下文如何。正如之前在 [第 1 章](ch01.html
    "第 1 章。构建您的第一个 FuelPHP 应用程序") 中所述，“构建您的第一个 FuelPHP 应用程序”，在这种情况下我们应该使用一个展示者。幸运的是，我们不需要做很多修改。
- en: 'First, create the presenter file at `BLOGPATH/classes/presenter/admin/category/selector.php`
    and add the following content:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，在 `BLOGPATH/classes/presenter/admin/category/selector.php` 创建展示者文件，并添加以下内容：
- en: '[PRE49]'
  id: totrans-261
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Then, edit the `BLOGPATH/views/admin/post/_form.php` view file to replace the
    following line:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，编辑 `BLOGPATH/views/admin/post/_form.php` 视图文件，替换以下行：
- en: '[PRE50]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'By:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 通过：
- en: '[PRE51]'
  id: totrans-265
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'And finally, edit the `BLOGPATH/views/admin/category/selector.php` view and
    remove the following line:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，编辑 `BLOGPATH/views/admin/category/selector.php` 视图并删除以下行：
- en: '[PRE52]'
  id: totrans-267
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: Though we won't need them immediately, we will add the relations between the
    post and category models. Since each post can only have one category, and each
    category can be related to many posts, there is a `belongs_to` relationship between
    posts and categories, and a `has_many` relationship between categories and posts.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们不会立即需要它们，但我们将添加文章和分类模型之间的关系。由于每篇文章只能有一个分类，而每个分类可以与多个文章相关联，因此文章和分类之间存在 `belongs_to`
    关系，分类和文章之间存在 `has_many` 关系。
- en: 'First, open the **Post** model located at `BLOGPATH/classes/model/post.php`,
    and add the following code inside the class:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，打开位于 `BLOGPATH/classes/model/post.php` 的 **Post** 模型，并在类中添加以下代码：
- en: '[PRE53]'
  id: totrans-270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'Then, open the **Category** model located at `BLOGPATH/classes/model/category.php`,
    and add the following code inside the class:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，打开位于 `BLOGPATH/classes/model/category.php` 的 **Category** 模型，并在类中添加以下代码：
- en: '[PRE54]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: Replacing the user_id field by author
  id: totrans-273
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 将 user_id 字段替换为作者
- en: The last field in our form is the **user_id field**. We will replace this field
    by an author field. This field won't be editable; the author of a post will simply
    be the authenticated user that creates it.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 我们表中的最后一个字段是 **user_id 字段**。我们将用作者字段替换此字段。该字段不可编辑；文章的作者将简单地是创建它的认证用户。
- en: We first need to add the relation between posts and users; since each post can
    only be related to a single user, and users can have as many posts as they want,
    the relation's type is `belongs_to`.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先需要添加文章和用户之间的关系；由于每篇文章只能与一个用户相关联，而用户可以有任意数量的文章，因此关系类型是 `belongs_to`。
- en: 'Open the **Post** model located at `BLOGPATH/classes/model/post.php` and add
    the following at the end of the `$_belongs_to` array:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 打开位于`BLOGPATH/classes/model/post.php`的**帖子**模型，并在`$_belongs_to`数组末尾添加以下内容：
- en: '[PRE55]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'Next, we will change how the field is displayed in the creation/edition form.
    Open `BLOGPATH/views/admin/post/_form.php`, and first replace:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将更改在创建/编辑表单中显示字段的方式。打开`BLOGPATH/views/admin/post/_form.php`，并首先替换以下内容：
- en: '[PRE56]'
  id: totrans-279
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'By:'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 'By:'
- en: '[PRE57]'
  id: totrans-281
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'And then replace:'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 然后替换为：
- en: '[PRE58]'
  id: totrans-283
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'By:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 'By:'
- en: '[PRE59]'
  id: totrans-285
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'And finally, we need the **Post** controller to reflect that behavior. For
    doing that, we first change how the `user_id` attribute is saved in the create
    and edit actions. Open the **Post** controller located at `BLOGPATH/classes/controller/admin/post.php`,
    and, inside the create action, replace the following:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们需要让**帖子**控制器反映这种行为。为此，我们首先更改创建和编辑操作中`user_id`属性的保存方式。打开位于`BLOGPATH/classes/controller/admin/post.php`的**帖子**控制器，并在创建操作内部替换以下内容：
- en: '[PRE60]'
  id: totrans-287
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'By:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 'By:'
- en: '[PRE61]'
  id: totrans-289
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'And inside the edit action, simply delete the following line:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 在编辑操作中，只需简单地删除以下行：
- en: '[PRE62]'
  id: totrans-291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'And:'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 以及：
- en: '[PRE63]'
  id: totrans-293
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'Though, you still won''t be able to create a new post now, as the following
    message will appear: **The field User Id is required and must contain a value**.
    This is happening because of the **Post** model `validate` method. The remaining
    thing to do is to remove the `user_id` validation. Open the **Post** model located
    at `BLOGPATH/classes/model/post.php`, and remove the following line inside the
    `validate` method:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管，你现在仍然无法创建新的帖子，因为会出现以下消息：**用户ID字段是必需的，并且必须包含值**。这是由于**帖子**模型的`validate`方法导致的。接下来要做的就是移除`user_id`验证。打开位于`BLOGPATH/classes/model/post.php`的**帖子**模型，并在`validate`方法内部移除以下行：
- en: '[PRE64]'
  id: totrans-295
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: Removing the View link
  id: totrans-296
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 移除查看链接
- en: 'Since we are not interested in keeping the detailed view of posts, we can remove
    the `View` link. Open `BLOGPATH/views/admin/post/edit.php` and remove the following
    code:'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们不想保留帖子的详细视图，我们可以移除`查看`链接。打开`BLOGPATH/views/admin/post/edit.php`并移除以下代码：
- en: '[PRE65]'
  id: totrans-298
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: The posts' list
  id: totrans-299
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 帖子列表
- en: If you have tested the form we improved to create new posts, you have probably
    noticed that the listing is not well adapted.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你测试了改进后用于创建新帖子的表单，你可能已经注意到列表并不很好地适应。
- en: Removing the Slug, Small description and Content columns
  id: totrans-301
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 移除别名、简短描述和内容列
- en: 'The first issue is that the **Slug**, **Small description**, and **Content**
    columns are displayed, though their value''s length can be important. Since this
    can have a terrible effect on the table layout, we will have to remove them. Open
    the listing view located at `BLOGPATH/views/admin/post/index.php` and remove the
    following lines:'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个问题是我们显示了**别名**、**简短描述**和**内容**列，尽管它们的值长度可能很重要。由于这可能会对表格布局产生严重影响，我们不得不移除它们。打开位于`BLOGPATH/views/admin/post/index.php`的列表视图，并移除以下行：
- en: '[PRE66]'
  id: totrans-303
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'And:'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 以及：
- en: '[PRE67]'
  id: totrans-305
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: Displaying the category and author names
  id: totrans-306
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 显示分类和作者名称
- en: The second issue is that we are displaying the categories' and users' ids, though
    displaying their associated names would be more convenient.
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个问题是我们在显示分类和用户的ID，尽管显示它们关联的名称会更方便。
- en: 'First, change the table titles accordingly by replacing:'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，相应地更改表格标题，通过替换：
- en: '[PRE68]'
  id: totrans-309
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: 'By:'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 'By:'
- en: '[PRE69]'
  id: totrans-311
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'And the following line:'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 以及以下行：
- en: '[PRE70]'
  id: totrans-313
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: 'By:'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 'By:'
- en: '[PRE71]'
  id: totrans-315
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: 'And change each line value by replacing:'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 并将每一行值通过替换：
- en: '[PRE72]'
  id: totrans-317
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: 'By:'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 'By:'
- en: '[PRE73]'
  id: totrans-319
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: 'And the following line:'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 以及以下行：
- en: '[PRE74]'
  id: totrans-321
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: 'By:'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 'By:'
- en: '[PRE75]'
  id: totrans-323
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: 'You could leave the code as it is, since the correct information will appear
    in the listing. But if you activate the profiler, you will notice that if you
    have several posts, a lot of SQL requests will be executed. As we saw before,
    this is because we are calling `$item->category` and `$item->author`, and, if
    not cached, each call executes a SQL request. In order to optimize the number
    of requests being made, we will use the `related` key. Open the **Post** controller
    located at `BLOGPATH/classes/controller/post.php` and, inside the index action,
    replace the following line:'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以保留代码不变，因为正确的信息将出现在列表中。但如果你激活了性能分析器，你会注意到如果你有多个帖子，将会执行很多SQL请求。正如我们之前看到的，这是因为我们在调用`$item->category`和`$item->author`，并且如果没有缓存，每次调用都会执行一个SQL请求。为了优化请求的数量，我们将使用`related`键。打开位于`BLOGPATH/classes/controller/post.php`的**帖子**控制器，并在索引操作内部替换以下行：
- en: '[PRE76]'
  id: totrans-325
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: 'By:'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 'By:'
- en: '[PRE77]'
  id: totrans-327
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: Removing the view link
  id: totrans-328
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 移除视图链接
- en: 'Since we are implementing the administration panel, we can reduce the code
    to what is strictly necessary. The post edition and visualization is redundant,
    since we have access to the post information when we are editing it. Thus, we
    will remove the **View** link. Simply remove the following line:'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们正在实现管理面板，我们可以将代码缩减到严格必要的部分。由于我们在编辑文章时可以访问文章信息，因此文章编辑和可视化是多余的。因此，我们将删除 **视图**
    链接。只需删除以下行：
- en: '[PRE78]'
  id: totrans-330
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: It is a good idea to remove the **View** action inside the **Post** controller
    as well as the view located at `BLOGPATH/admin/post/view.php`, since they are
    now useless code.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 最好在 **文章** 控制器中以及位于 `BLOGPATH/admin/post/view.php` 的视图中删除 **视图** 操作，因为它们现在是无用的代码。
- en: Refining the categories administration panel
  id: totrans-332
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 精炼分类管理面板
- en: Let's now focus on the categories administration panel. The **Category** model
    is quite simple, so there is not much to do. As a matter of fact, we will almost
    only change the listing page.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们专注于分类管理面板。**分类** 模型相当简单，所以没有太多的事情要做。实际上，我们几乎只会更改列表页面。
- en: Removing the View link
  id: totrans-334
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 删除视图链接
- en: 'Since the model only has one attribute that is already displayed on the list,
    the view link and page are not of much use. First, delete the **View** link inside
    the view located at `BLOGPATH/views/admin/category/index.php` by removing:'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 由于模型只有一个已经显示在列表中的属性，因此视图链接和页面并不太有用。首先，通过删除以下内容来删除位于 `BLOGPATH/views/admin/category/index.php`
    中的 **视图** 链接：
- en: '[PRE79]'
  id: totrans-336
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: You can then remove the **View** action inside the **Category** controller and
    the view located at `BLOGPATH/views/admin/category/view.php`, since they are now
    useless code.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，您可以删除 **分类** 控制器中的 **视图** 操作以及位于 `BLOGPATH/views/admin/category/view.php`
    的视图，因为它们现在是无用的代码。
- en: 'We also have to remove the **View** link inside the edition form. Open `BLOGPATH/views/admin/category/edit.php`
    and remove the following code:'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还必须删除编辑表单中的 **视图** 链接。打开 `BLOGPATH/views/admin/category/edit.php` 并删除以下代码：
- en: '[PRE80]'
  id: totrans-339
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: Adding the number of post's column
  id: totrans-340
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加文章数量列
- en: One challenge of this section is to display how many posts there are for each
    category. This is not simple and there is no ideal solution.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 本节的一个挑战是显示每个分类有多少篇文章。这并不简单，也没有理想的解决方案。
- en: 'Let''s first add our column into our table. Under:'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先在我们的表中添加我们的列。在以下位置：
- en: '[PRE81]'
  id: totrans-343
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: 'Add:'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 添加：
- en: '[PRE82]'
  id: totrans-345
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: 'And under:'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下位置：
- en: '[PRE83]'
  id: totrans-347
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: 'Add:'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 添加：
- en: '[PRE84]'
  id: totrans-349
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: Now let's test different options.
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们测试不同的选项。
- en: 'Solution 1: using count'
  id: totrans-351
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 解决方案 1：使用 count
- en: 'The first solution is quite straightforward; we use the `count` method. Replace:'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个解决方案相当直接；我们使用 `count` 方法。替换：
- en: '[PRE85]'
  id: totrans-353
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: 'By:'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 通过：
- en: '[PRE86]'
  id: totrans-355
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: Though the solution is quite simple, there are major drawbacks. Firstly, it
    doesn't respect the MVC pattern. Secondly, it will generate a request for each
    category displayed. Don't use this if you have a lot of categories.
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然解决方案很简单，但存在一些主要缺点。首先，它不遵循 MVC 模式。其次，它将为每个显示的分类生成一个请求。如果您有很多分类，请不要使用此方法。
- en: 'Solution 2: using related'
  id: totrans-357
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 解决方案 2：使用 related
- en: 'Another solution is to use the `related` key. First, open the **Category**
    controller located at `BLOGPATH/classes/controller/admin/category.php` and, inside
    the index action, replace the following line:'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种解决方案是使用 `related` 键。首先，打开位于 `BLOGPATH/classes/controller/admin/category.php`
    的 **分类** 控制器，并在索引操作中替换以下行：
- en: '[PRE87]'
  id: totrans-359
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: 'By:'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 通过：
- en: '[PRE88]'
  id: totrans-361
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: 'And back to the `BLOGPATH/views/admin/category/index.php` view, replace:'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 然后回到 `BLOGPATH/views/admin/category/index.php` 视图，替换：
- en: '[PRE89]'
  id: totrans-363
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: 'By:'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 通过：
- en: '[PRE90]'
  id: totrans-365
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: On the one hand, this solution limits the number of requests but, on the other
    hand, it might load a lot of useless post instances into the memory, so this is
    not ideal either. Don't use this if you have a lot of posts.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 一方面，这个解决方案限制了请求数量，但另一方面，它可能会将大量的无用文章实例加载到内存中，所以这也不是理想的。如果您有很多文章，请不要使用此方法。
- en: 'Solution 3: using DB::query'
  id: totrans-367
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 解决方案 3：使用 DB::query
- en: 'Another solution is to load categories using `DB::query`. First, open the **Category**
    controller located at `BLOGPATH/classes/controller/admin/category.php` and, inside
    the index action, replace the following line:'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种解决方案是使用 `DB::query` 加载分类。首先，打开位于 `BLOGPATH/classes/controller/admin/category.php`
    的 **分类** 控制器，并在索引操作中替换以下行：
- en: '[PRE91]'
  id: totrans-369
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: 'By:'
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 通过：
- en: '[PRE92]'
  id: totrans-371
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: 'Then add the following method inside the **Category** model:'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 然后在 **分类** 模型中添加以下方法：
- en: '[PRE93]'
  id: totrans-373
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: Note
  id: totrans-374
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: It is possible to execute a custom query and then transform the result into
    model's instances thanks to the `as_object` method. In this request, we add a
    custom column, `nb_posts`, that counts the number of posts for each category.
    This column is accessible in our categories instances under the `nb_posts` attribute.
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 `as_object` 方法，我们可以执行自定义查询并将结果转换为模型实例。在这个请求中，我们添加了一个自定义列，`nb_posts`，它计算每个类别的帖子数量。这个列在我们的类别实例下可通过
    `nb_posts` 属性访问。
- en: 'And back to the `BLOGPATH/views/admin/category/index.php` view, replace:'
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 然后回到 `BLOGPATH/views/admin/category/index.php` 视图，替换：
- en: '[PRE94]'
  id: totrans-377
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: 'By:'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 通过：
- en: '[PRE95]'
  id: totrans-379
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: 'This solution is interesting for its performance: no additional queries or
    memory usage. Its drawback is that it doesn''t use the ORM, and this solution
    might be tricky to implement for more complex problems.'
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 这个解决方案因其性能而有趣：没有额外的查询或内存使用。它的缺点是它不使用 ORM，并且这个解决方案对于更复杂的问题可能难以实现。
- en: For this instance though, we are recommending this solution.
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个实例，我们推荐这个解决方案。
- en: Refining the comments administration panel
  id: totrans-382
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 精炼评论管理面板
- en: We also need to make some adjustments here. You are recommended to manually
    add some comments now, because you won't be able to after we change the interface
    (there would be no point in adding comments through the administration interface,
    since any user will be able to do it on the website).
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要在这里做一些调整。建议你现在手动添加一些评论，因为我们改变界面后你将无法再添加（通过管理界面添加评论没有意义，因为任何用户都可以在网站上这样做）。
- en: Improving the comments listing
  id: totrans-384
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 改进评论列表
- en: First, we will improve the comments listing.
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将改进评论列表。
- en: Removing the view and adding a new comment link
  id: totrans-386
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 移除查看并添加新的评论链接
- en: As we won't need those features, we will remove their links, actions and views.
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们不需要这些功能，我们将移除它们的链接、动作和视图。
- en: 'First, open the `BLOGPATH/views/admin/comment/index.php` view file and remove:'
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，打开 `BLOGPATH/views/admin/comment/index.php` 视图文件并移除：
- en: '[PRE96]'
  id: totrans-389
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: 'And:'
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 并且：
- en: '[PRE97]'
  id: totrans-391
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: And you are also recommended to remove the create and view action of the **Comment**
    controller, as well as the `BLOGPATH/views/admin/comment/create.php` and `BLOGPATH/views/admin/comment/view.php`
    files.
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 你还被建议移除 **Comment** 控制器的创建和查看动作，以及 `BLOGPATH/views/admin/comment/create.php`
    和 `BLOGPATH/views/admin/comment/view.php` 文件。
- en: Removing the Email and Content columns
  id: totrans-393
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 移除电子邮件和内容列
- en: 'We will remove these two columns because they can take too much space. For
    doing that, open `BLOGPATH/views/admin/comment/index.php` and remove the following
    lines:'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将移除这两个列，因为它们可能占用太多空间。为此，打开 `BLOGPATH/views/admin/comment/index.php` 并移除以下行：
- en: '[PRE98]'
  id: totrans-395
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: 'And:'
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 并且：
- en: '[PRE99]'
  id: totrans-397
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: Replacing the Post id column by Post
  id: totrans-398
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 将帖子 id 列替换为帖子
- en: It would be more convenient to know the title of the post the comment is related
    to, instead of the post's id.
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 了解评论所关联的帖子的标题，而不是帖子的 id，会更方便。
- en: 'First, replace:'
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，替换：
- en: '[PRE100]'
  id: totrans-401
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: 'By:'
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 通过：
- en: '[PRE101]'
  id: totrans-403
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: 'And then replace:'
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 然后替换：
- en: '[PRE102]'
  id: totrans-405
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: 'By:'
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 通过：
- en: '[PRE103]'
  id: totrans-407
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: 'But if we want this to work, we have to define the relations between posts
    and comments. Open the **Post** model located at `BLOGPATH/classes/model/post.php`,
    and add the following property:'
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，如果我们想让它工作，我们必须定义帖子与评论之间的关系。打开位于 `BLOGPATH/classes/model/post.php` 的 **Post**
    模型，并添加以下属性：
- en: '[PRE104]'
  id: totrans-409
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: 'And then open the **Comment** model located at `BLOGPATH/classes/model/comment.php`,
    and add the following property:'
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 然后打开位于 `BLOGPATH/classes/model/comment.php` 的 **Comment** 模型，并添加以下属性：
- en: '[PRE105]'
  id: totrans-411
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: 'Now, you are able to display the listing again. But, you might notice that
    if you have several comments, a lot of requests are executed. Again, we need to
    use the `related` key to prevent that. Open the `Comment` controller located at
    `BLOGPATH/classes/controller/admin/comment.php` and, inside the index action,
    replace:'
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你能够再次显示列表。但是，你可能注意到，如果你有多个评论，会执行很多请求。再次，我们需要使用 `related` 键来防止这种情况。打开位于 `BLOGPATH/classes/controller/admin/comment.php`
    的 `Comment` 控制器，并在 `index` 动作中替换：
- en: '[PRE106]'
  id: totrans-413
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: 'By:'
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 通过：
- en: '[PRE107]'
  id: totrans-415
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: Improving the comment edition form
  id: totrans-416
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 改进评论编辑表单
- en: We will improve two fields in the comment edition form; `Status`, and `Post
    id`.
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在评论编辑表单中改进两个字段；`状态` 和 `帖子 id`。
- en: Changing the Status input to a select box
  id: totrans-418
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 将状态输入更改为选择框
- en: 'Since there are only three possible statuses, we will replace the input by
    a select box. Open the form located at `BLOGPATH/views/admin/comment/_form.php`,
    and replace:'
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: 由于只有三种可能的状态，我们将用选择框替换输入。打开位于 `BLOGPATH/views/admin/comment/_form.php` 的表单，并替换：
- en: '[PRE108]'
  id: totrans-420
  prefs: []
  type: TYPE_PRE
  zh: '[PRE108]'
- en: 'By:'
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 通过：
- en: '[PRE109]'
  id: totrans-422
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: Replacing Post id by Post
  id: totrans-423
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 将帖子 id 替换为帖子
- en: Again, displaying a post's id is not relevant for the administrator; the best
    would be to display the post's title.
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，对于管理员来说，显示帖子的 id 并不重要；最好显示帖子的标题。
- en: 'First, replace:'
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，替换：
- en: '[PRE110]'
  id: totrans-426
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: 'By:'
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: 由：
- en: '[PRE111]'
  id: totrans-428
  prefs: []
  type: TYPE_PRE
  zh: '[PRE111]'
- en: 'And then replace:'
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: 然后替换：
- en: '[PRE112]'
  id: totrans-430
  prefs: []
  type: TYPE_PRE
  zh: '[PRE112]'
- en: 'By:'
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: 由：
- en: '[PRE113]'
  id: totrans-432
  prefs: []
  type: TYPE_PRE
  zh: '[PRE113]'
- en: 'We then need to prevent any change in the `post_id` property when processing
    the form. Open the **Comment** controller and, inside the `action_edit` method,
    remove the following line:'
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要防止在处理表单时`post_id`属性发生任何变化。打开**评论**控制器，并在`action_edit`方法内部删除以下行：
- en: '[PRE114]'
  id: totrans-434
  prefs: []
  type: TYPE_PRE
  zh: '[PRE114]'
- en: 'And:'
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: 然后：
- en: '[PRE115]'
  id: totrans-436
  prefs: []
  type: TYPE_PRE
  zh: '[PRE115]'
- en: 'Finally, we need to remove the `post_id` validation. Open the **Comment** model
    and remove the following line:'
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们需要删除`post_id`验证。打开**评论**模型并删除以下行：
- en: '[PRE116]'
  id: totrans-438
  prefs: []
  type: TYPE_PRE
  zh: '[PRE116]'
- en: Removing the View link
  id: totrans-439
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 删除“查看”链接
- en: 'Since there is no view action anymore, we have to remove the **View** link.
    Open `BLOGPATH/views/admin/comment/edit.php` and remove the following code:'
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: 由于没有视图操作了，我们必须删除**查看**链接。打开`BLOGPATH/views/admin/comment/edit.php`并删除以下代码：
- en: '[PRE117]'
  id: totrans-441
  prefs: []
  type: TYPE_PRE
  zh: '[PRE117]'
- en: Protecting your website against CSRF attacks
  id: totrans-442
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 保护您的网站免受CSRF攻击
- en: You would certainly like to prevent hackers from changing your website content,
    as the consequences could be disastrous. Although the risks are limited as long
    as you are the only one to access an administration panel you implemented yourself,
    you might want to protect your website against **Cross-Site Request Forgery**
    (**CSRF**) attacks.
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: 您当然希望防止黑客更改您网站的内容，因为后果可能是灾难性的。尽管只要您是唯一可以访问您自己实施的行政面板的人，风险是有限的，但您可能仍想保护您的网站免受**跨站请求伪造**（**CSRF**）攻击。
- en: 'CSRF attacks are based on the trust a website has in a user''s browser. Let''s
    illustrate these attacks with an example. Suppose you logged yourself into your
    administration interface. If you access, a bit later, a webpage on another website
    that contains the following code:'
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: CSRF攻击基于网站对用户浏览器的信任。让我们用一个例子来说明这些攻击。假设您登录了您的管理界面。如果您稍后访问另一个网站上的网页，该网页包含以下代码：
- en: '[PRE118]'
  id: totrans-445
  prefs: []
  type: TYPE_PRE
  zh: '[PRE118]'
- en: In your website, the delete action of the **Post** controller will get called
    and the post with `id = 1` will be deleted (if it exists), without your approval
    or any notification. The hacker that created the webpage has then succeeded in
    his CSRF attack by exploiting the fact that you were logged in to your administration
    panel. It worked because your action didn't verify that the request was legitimate.
    More advanced attacks can even submit forms, and you could then find yourself
    with unwanted content on your website.
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的网站上，**帖子**控制器的删除操作将被调用，并且将删除`id = 1`的帖子（如果存在），而无需您的批准或任何通知。创建网页的黑客通过利用您已登录到管理面板的事实，已经成功地通过CSRF攻击取得了成功。这是因为您的操作没有验证请求是否合法。更高级的攻击甚至可以提交表单，然后您可能会发现自己网站上出现了不希望的内容。
- en: Luckily, FuelPHP allows you to easily protect your website by including a security
    token in links or forms. This security token is later checked when the action
    is called. That process ensures that the client requested the action from the
    website, and not from somewhere else.
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，FuelPHP允许您通过在链接或表单中包含安全令牌来轻松保护您的网站。该安全令牌在调用操作时进行检查。这个过程确保客户端是从网站请求操作，而不是从其他地方。
- en: Protecting links
  id: totrans-448
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 保护链接
- en: First, let's protect the delete links in the post listing.
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们保护帖子列表中的删除链接。
- en: 'Open the `BLOGPATH/views/admin/post/index.php` view file and replace:'
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: 打开`BLOGPATH/views/admin/post/index.php`视图文件并替换：
- en: '[PRE119]'
  id: totrans-451
  prefs: []
  type: TYPE_PRE
  zh: '[PRE119]'
- en: 'By:'
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: 由：
- en: '[PRE120]'
  id: totrans-453
  prefs: []
  type: TYPE_PRE
  zh: '[PRE120]'
- en: 'If you refresh the webpage, the delete links should now point to a URL looking
    like:'
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您刷新网页，删除链接现在应该指向一个类似以下URL的地址：
- en: '`http://myblog.app/blog/admin/post/delete/ID?fuel_csrf_token=215be7bad7eb4999148a22341466f66395ce483d12b17cae463b7bf4b6d6d86233ce38ce6b145c08bf994e56610c1502158b32eca6f6d599a5bb3527d019c324`'
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://myblog.app/blog/admin/post/delete/ID?fuel_csrf_token=215be7bad7eb4999148a22341466f66395ce483d12b17cae463b7bf4b6d6d86233ce38ce6b145c08bf994e56610c1502158b32eca6f6d599a5bb3527d019c324`'
- en: 'Now that we call the delete action of the **Post** controller with the CSRF
    token as a `get` parameter, we just have to check if its value is correct before
    deleting the post. In order to do that, open the **Post** controller and, inside
    the delete action, replace:'
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们通过CSRF令牌作为`get`参数调用**帖子**控制器的删除操作，我们只需在删除帖子之前检查其值是否正确。为了做到这一点，打开**帖子**控制器，并在删除操作内部替换：
- en: '[PRE121]'
  id: totrans-457
  prefs: []
  type: TYPE_PRE
  zh: '[PRE121]'
- en: 'By:'
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
  zh: 由：
- en: '[PRE122]'
  id: totrans-459
  prefs: []
  type: TYPE_PRE
  zh: '[PRE122]'
- en: Your delete action is now protected. You should do the same with the delete
    links of the **Category** and **Comment** administration interfaces. In general,
    it is even recommended to add this protection to any link that executes an important
    or critical action.
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: 您的删除操作现在已受保护。您应该对**类别**和**评论**管理界面的删除链接做同样的处理。一般来说，甚至建议将此保护添加到任何执行重要或关键操作的链接。
- en: Protecting forms
  id: totrans-461
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 保护表单
- en: 'We will now use a very similar technique to protect our post creation and edition
    forms. First, open the `BLOGPATH/views/admin/post/_form.php` view file and add:'
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将使用一个非常类似的技术来保护我们的帖子创建和编辑表单。首先，打开`BLOGPATH/views/admin/post/_form.php`视图文件，并添加：
- en: '[PRE123]'
  id: totrans-463
  prefs: []
  type: TYPE_PRE
  zh: '[PRE123]'
- en: 'Just after:'
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下代码之后：
- en: '[PRE124]'
  id: totrans-465
  prefs: []
  type: TYPE_PRE
  zh: '[PRE124]'
- en: 'The `Form::csrf` method will automatically add a hidden input to your form
    containing the token. If you display the HTML code of the post creation or edition
    webpage, you should see that this method returned a string similar to:'
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: '`Form::csrf`方法将自动向您的表单添加一个包含令牌的隐藏输入。如果您显示帖子创建或编辑网页的HTML代码，您应该看到该方法返回了一个类似于以下字符串：'
- en: '[PRE125]'
  id: totrans-467
  prefs: []
  type: TYPE_PRE
  zh: '[PRE125]'
- en: Now, let's check that this token is correct before making any change to the
    database.
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们在修改数据库之前检查此令牌是否正确。
- en: 'Open the **Post** controller and, inside the create action, replace:'
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: 打开**帖子**控制器，并在创建操作中替换：
- en: '[PRE126]'
  id: totrans-470
  prefs: []
  type: TYPE_PRE
  zh: '[PRE126]'
- en: 'By:'
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: 通过：
- en: '[PRE127]'
  id: totrans-472
  prefs: []
  type: TYPE_PRE
  zh: '[PRE127]'
- en: 'And inside the edit action, replace:'
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: 在编辑操作中，替换：
- en: '[PRE128]'
  id: totrans-474
  prefs: []
  type: TYPE_PRE
  zh: '[PRE128]'
- en: 'By:'
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: 通过：
- en: '[PRE129]'
  id: totrans-476
  prefs: []
  type: TYPE_PRE
  zh: '[PRE129]'
- en: For the sake of this section's conciseness, we do not display a special error
    message when the token doesn't have the expected value, but you are recommended
    to add this feature.
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: 为了本节的简洁性，当令牌没有预期值时，我们不显示特殊错误消息，但建议您添加此功能。
- en: Anyway, your post creation and edition forms are now protected too. You should
    do the same with the creation and edition forms of the **Category** and **Comment**
    administration interfaces. In general, it is even recommended to add this protection
    to all your forms.
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: 不管怎样，您的帖子创建和编辑表单现在也得到了保护。您应该对**分类**和**评论**管理界面的创建和编辑表单做同样的处理。一般来说，甚至建议将此保护添加到所有表单中。
- en: Refining the front-end
  id: totrans-479
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 精炼前端
- en: We now have to refine the front-end of our website, that is to say what visitors
    will see.
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们必须精炼我们网站的前端，也就是说访客将看到的内容。
- en: Refining the posts' listing
  id: totrans-481
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 精炼帖子列表
- en: 'If you request the following URL:'
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您请求以下URL：
- en: '`http://myblog.app/blog/post`'
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://myblog.app/blog/post`'
- en: You will see the scaffold we generated earlier with `scaffold/orm`.
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: 您将看到我们之前使用`scaffold/orm`生成的脚手架。
- en: Deleting useless features
  id: totrans-485
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 删除无用功能
- en: The first important thing to do is to prevent any edition on our posts. As we
    did several times for the administration panel, remove the create, edit and delete
    actions of the **Post** controller and their associated views. Note that, here,
    we are talking about the **Post** controller located at `BLOGPATH/classes/controller/post.php`,
    since we are working on the website's front-end. You can also delete the `BLOGPATH/views/admin/post/_form.php`
    view file, as it is only called from the create and edit views.
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
  zh: 首要重要的事情是防止对我们的帖子进行任何编辑。正如我们多次为管理面板所做的那样，移除**帖子**控制器的创建、编辑和删除操作及其相关视图。请注意，这里我们谈论的是位于`BLOGPATH/classes/controller/post.php`的**帖子**控制器，因为我们正在处理网站的前端。您也可以删除`BLOGPATH/views/admin/post/_form.php`视图文件，因为它只从创建和编辑视图中被调用。
- en: Changing how the posts' listing is displayed
  id: totrans-487
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 改变帖子列表的显示方式
- en: Currently, the posts' listing is displayed in a table and, for our blog, we
    want to display the list more linearly, as most blogs are displayed.
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，帖子列表以表格形式显示，而对我们博客来说，我们希望以更线性的方式显示列表，就像大多数博客那样显示。
- en: 'The simplest way is to replace the view located at `BLOGPATH/post/index.php`
    by:'
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
  zh: 最简单的方法是将位于`BLOGPATH/post/index.php`的视图替换为：
- en: '[PRE130]'
  id: totrans-490
  prefs: []
  type: TYPE_PRE
  zh: '[PRE130]'
- en: 'As we are displaying additional content in separated views (see comments),
    we need to create these views. Create the `BLOGPATH/views/post/small_description.php`
    view file and set its content with the following:'
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们在分离的视图中显示附加内容（见注释），我们需要创建这些视图。创建`BLOGPATH/views/post/small_description.php`视图文件，并按以下内容设置其内容：
- en: '[PRE131]'
  id: totrans-492
  prefs: []
  type: TYPE_PRE
  zh: '[PRE131]'
- en: 'And create the `BLOGPATH/views/post/additional_informations.php` view file
    and set its content by the following:'
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
  zh: 并创建`BLOGPATH/views/post/additional_informations.php`视图文件，并按以下内容设置其内容：
- en: '[PRE132]'
  id: totrans-494
  prefs: []
  type: TYPE_PRE
  zh: '[PRE132]'
- en: 'Finally, in order to optimize the number of requests being made, open the **Post**
    controller (the one for the front-end), and replace:'
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，为了优化请求数量，打开**帖子**控制器（前端控制器），并替换：
- en: '[PRE133]'
  id: totrans-496
  prefs: []
  type: TYPE_PRE
  zh: '[PRE133]'
- en: 'By:'
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: 通过：
- en: '[PRE134]'
  id: totrans-498
  prefs: []
  type: TYPE_PRE
  zh: '[PRE134]'
- en: Adding pagination
  id: totrans-499
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加分页
- en: If you add a lot of posts, you will notice that the list becomes very long.
    To prevent this behavior, we will now add the `Pagination` feature.
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您添加了很多帖子，您会注意到列表变得非常长。为了防止这种行为，我们现在将添加`分页`功能。
- en: 'At the beginning of the index action of the **Post** controller, add the following
    code in order to create a `Pagination` instance:'
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
  zh: 在**帖子**控制器的索引操作开始时，添加以下代码以创建一个`分页`实例：
- en: '[PRE135]'
  id: totrans-502
  prefs: []
  type: TYPE_PRE
  zh: '[PRE135]'
- en: Note
  id: totrans-503
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 备注
- en: 'Here, we set the main options of the `Pagination` configuration, but you are
    recommended to take a look at the official documentation, as there are many more
    options:'
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们设置了`Pagination`配置的主要选项，但建议您查看官方文档，因为还有更多选项：
- en: '[http://fuelphp.com/docs/classes/pagination.html](http://fuelphp.com/docs/classes/pagination.html)'
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://fuelphp.com/docs/classes/pagination.html](http://fuelphp.com/docs/classes/pagination.html)'
- en: (It can be accessed through FuelPHP website by navigating to **DOCS** | **Core**
    | **Pagination**)
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
  zh: （可以通过通过FuelPHP网站导航到**DOCS** | **Core** | **Pagination**访问）
- en: If you don't have a lot of posts, you can lower the `per_page` value in order
    to test the pagination.
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的帖子不多，您可以降低`per_page`值以测试分页。
- en: 'Now when we retrieve the posts, we have to take into account the pagination.
    Replace:'
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们检索帖子时，必须考虑分页。替换以下内容：
- en: '[PRE136]'
  id: totrans-509
  prefs: []
  type: TYPE_PRE
  zh: '[PRE136]'
- en: 'By:'
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
  zh: 通过：
- en: '[PRE137]'
  id: totrans-511
  prefs: []
  type: TYPE_PRE
  zh: '[PRE137]'
- en: 'We need to pass the pagination instance we created to our view in order to
    display it. At the end of the action, add the following code:'
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要将创建的分页实例传递给我们的视图以便显示。在操作末尾添加以下代码：
- en: '[PRE138]'
  id: totrans-513
  prefs: []
  type: TYPE_PRE
  zh: '[PRE138]'
- en: This will have the same effect as setting a `pagination` key inside the `$data`
    parameter.
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: 这将产生与在`$data`参数内部设置`pagination`键相同的效果。
- en: 'Open the `BLOGPATH/views/post/index.php` view file, and under:'
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: 打开`BLOGPATH/views/post/index.php`视图文件，并在以下位置：
- en: '[PRE139]'
  id: totrans-516
  prefs: []
  type: TYPE_PRE
  zh: '[PRE139]'
- en: 'Add:'
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
  zh: 添加：
- en: '[PRE140]'
  id: totrans-518
  prefs: []
  type: TYPE_PRE
  zh: '[PRE140]'
- en: 'Now, if you refresh your listing page and have enough posts, you will see that
    your pagination appears but is escaped, in the sense that it displays the HTML
    code. This is because view parameters are escaped by default and we didn''t notify
    FuelPHP not to escape the `pagination` parameter. Open the **Post** controller
    again and, inside the index action, replace:'
  id: totrans-519
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果您刷新您的列表页面并且有足够的帖子，您将看到分页出现了，但它被转义了，也就是说，它显示了HTML代码。这是因为视图参数默认被转义，我们没有通知FuelPHP不要转义`pagination`参数。再次打开**Post**控制器，并在索引操作中替换以下内容：
- en: '[PRE141]'
  id: totrans-520
  prefs: []
  type: TYPE_PRE
  zh: '[PRE141]'
- en: 'By:'
  id: totrans-521
  prefs: []
  type: TYPE_NORMAL
  zh: 通过：
- en: '[PRE142]'
  id: totrans-522
  prefs: []
  type: TYPE_PRE
  zh: '[PRE142]'
- en: Using posts' slug
  id: totrans-523
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用帖子的slug
- en: 'If you display the listing, everything should look just fine. But if you click
    on the title of one post, the view page will be shown but the URL will look like
    this:'
  id: totrans-524
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您显示列表，一切看起来都应该是好的。但如果您点击一篇文章的标题，视图页面将显示，但URL看起来像这样：
- en: '`http://myblog.app/blog/post/view/1`'
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://myblog.app/blog/post/view/1`'
- en: 'This is not great for the SEO, because we don''t use the slug we created earlier.
    To fix that, first open the `BLOGPATH/views/post/index.php` view file, and replace:'
  id: totrans-526
  prefs: []
  type: TYPE_NORMAL
  zh: 这对于SEO来说并不好，因为我们没有使用之前创建的slug。为了解决这个问题，首先打开`BLOGPATH/views/post/index.php`视图文件，并替换以下内容：
- en: '[PRE143]'
  id: totrans-527
  prefs: []
  type: TYPE_PRE
  zh: '[PRE143]'
- en: 'By:'
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
  zh: 通过：
- en: '[PRE144]'
  id: totrans-529
  prefs: []
  type: TYPE_PRE
  zh: '[PRE144]'
- en: 'Now that the link is pointing to the right URL, the view action has to handle
    this new behavior. Open the **Post** controller and first replace the following
    line:'
  id: totrans-530
  prefs: []
  type: TYPE_NORMAL
  zh: 现在链接已经指向正确的URL，视图操作必须处理这种新的行为。打开**Post**控制器，并首先替换以下行：
- en: '[PRE145]'
  id: totrans-531
  prefs: []
  type: TYPE_PRE
  zh: '[PRE145]'
- en: 'By:'
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
  zh: 通过：
- en: '[PRE146]'
  id: totrans-533
  prefs: []
  type: TYPE_PRE
  zh: '[PRE146]'
- en: 'And then replace the view action''s content by:'
  id: totrans-534
  prefs: []
  type: TYPE_NORMAL
  zh: 然后替换视图操作的内容为：
- en: '[PRE147]'
  id: totrans-535
  prefs: []
  type: TYPE_PRE
  zh: '[PRE147]'
- en: Listing posts by categories
  id: totrans-536
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 按类别列出帖子
- en: 'One interesting additional feature would be to list posts belonging to each
    category. For instance, if we request the following URL:'
  id: totrans-537
  prefs: []
  type: TYPE_NORMAL
  zh: 一个有趣的功能是列出属于每个类别的帖子。例如，如果我们请求以下URL：
- en: '`http://myblog.app/blog/post/category/1`'
  id: totrans-538
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://myblog.app/blog/post/category/1`'
- en: We would like to display posts belonging to the category with `id = 1`.
  id: totrans-539
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望显示属于`id = 1`类别的帖子。
- en: Note
  id: totrans-540
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The best would have been to use a slug, as we did for posts. We didn't implement
    it for the sake of this chapter's conciseness, but you are recommended to do so.
  id: totrans-541
  prefs: []
  type: TYPE_NORMAL
  zh: 最好的方法就是使用slug，就像我们为帖子所做的那样。我们没有在这个章节中实现它，但建议您这样做。
- en: 'First, open the `BLOGPATH/views/post/additional_informations.php` and replace:'
  id: totrans-542
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，打开`BLOGPATH/views/post/additional_informations.php`并替换以下内容：
- en: '[PRE148]'
  id: totrans-543
  prefs: []
  type: TYPE_PRE
  zh: '[PRE148]'
- en: 'By:'
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
  zh: 通过：
- en: '[PRE149]'
  id: totrans-545
  prefs: []
  type: TYPE_PRE
  zh: '[PRE149]'
- en: If you think about it, the list of posts displayed for a category is similar
    to the one where no category is filtered. The view and even the requests are similar.
  id: totrans-546
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您这么想，显示的分类帖子列表与没有过滤分类的列表相似。视图和请求都是相似的。
- en: We could have written a category action inside the **Post** controller and,
    in that case, the index and category actions could have called a same common method;
    this solution would have been acceptable and even recommended in most cases.
  id: totrans-547
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在**Post**控制器内部编写一个分类操作，在这种情况下，索引和分类操作可以调用一个相同的方法；这种解决方案在大多数情况下是可接受的，甚至被推荐。
- en: 'But we will take a different approach here. Since the actions have a lot in
    common, we will reroute:'
  id: totrans-548
  prefs: []
  type: TYPE_NORMAL
  zh: 但在这里我们将采取不同的方法。由于操作有很多共同点，我们将重新路由：
- en: '`http://myblog.app/blog/post/category/category_id`'
  id: totrans-549
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://myblog.app/blog/post/category/category_id`'
- en: 'To:'
  id: totrans-550
  prefs: []
  type: TYPE_NORMAL
  zh: 到：
- en: '`http://myblog.app/blog/post/index`'
  id: totrans-551
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://myblog.app/blog/post/index`'
- en: And add the category processing inside the index action.
  id: totrans-552
  prefs: []
  type: TYPE_NORMAL
  zh: 并在索引操作中添加分类处理。
- en: 'First, create and open the `BLOGPATH/config/routes.php` file, and set its content
    to:'
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，创建并打开`BLOGPATH/config/routes.php`文件，并设置其内容为：
- en: '[PRE150]'
  id: totrans-554
  prefs: []
  type: TYPE_PRE
  zh: '[PRE150]'
- en: 'Now we have to add the category processing inside our index action in the **Post**
    controller. First, in the index action of the **Post** controler, replace:'
  id: totrans-555
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们必须在`Post`控制器中的索引动作内添加分类处理。首先，在`Post`控制器的索引动作中，替换：
- en: '[PRE151]'
  id: totrans-556
  prefs: []
  type: TYPE_PRE
  zh: '[PRE151]'
- en: 'By:'
  id: totrans-557
  prefs: []
  type: TYPE_NORMAL
  zh: 通过：
- en: '[PRE152]'
  id: totrans-558
  prefs: []
  type: TYPE_PRE
  zh: '[PRE152]'
- en: 'Then, replace:'
  id: totrans-559
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，替换：
- en: '[PRE153]'
  id: totrans-560
  prefs: []
  type: TYPE_PRE
  zh: '[PRE153]'
- en: 'By:'
  id: totrans-561
  prefs: []
  type: TYPE_NORMAL
  zh: 通过：
- en: '[PRE154]'
  id: totrans-562
  prefs: []
  type: TYPE_PRE
  zh: '[PRE154]'
- en: You can notice we used the `query` method here as it was more convenient than
    the `find` method in this case.
  id: totrans-563
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以注意到我们在这里使用了`query`方法，因为它比在这种情况下使用`find`方法更方便。
- en: Adding indexes
  id: totrans-564
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加索引
- en: 'In order to optimize our website, we will add some indexes to our tables. For
    doing that, create a migration file located at `BLOGPATH/migrations/004_create_indexes.php`
    and set its content to:'
  id: totrans-565
  prefs: []
  type: TYPE_NORMAL
  zh: 为了优化我们的网站，我们将在我们的表中添加一些索引。为此，创建一个位于`BLOGPATH/migrations/004_create_indexes.php`的迁移文件，并设置其内容为：
- en: '[PRE155]'
  id: totrans-566
  prefs: []
  type: TYPE_PRE
  zh: '[PRE155]'
- en: Don't forget to execute the migration file.
  id: totrans-567
  prefs: []
  type: TYPE_NORMAL
  zh: 不要忘记执行迁移文件。
- en: Refining the posts' visualization webpage
  id: totrans-568
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 精炼帖子可视化网页
- en: When clicking on a post's title in the listing page, you will see that the visualization
    webpage is not perfect. We need to improve how it is displayed, to display the
    post's validated comments, and to display and process the comment form.
  id: totrans-569
  prefs: []
  type: TYPE_NORMAL
  zh: 当在列表页点击帖子的标题时，您将看到可视化网页并不完美。我们需要改进其显示方式，以显示帖子的验证评论，并显示和处理评论表单。
- en: Changing the post layout
  id: totrans-570
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更改帖子布局
- en: 'In order to improve how a post is displayed, open the `BLOGPATH/views/post/view.php`
    view file and set the following content:'
  id: totrans-571
  prefs: []
  type: TYPE_NORMAL
  zh: 为了改进帖子的显示方式，打开`BLOGPATH/views/post/view.php`视图文件，并设置以下内容：
- en: '[PRE156]'
  id: totrans-572
  prefs: []
  type: TYPE_PRE
  zh: '[PRE156]'
- en: Now, if you visualize a post with a content containing HTML elements, you will
    see that it will be escaped (you will see the HTML code). This is because any
    parameter sent to a view is by default filtered.
  id: totrans-573
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果您可视化一个包含HTML元素的帖子内容，您将看到它会被转义（您将看到HTML代码）。这是因为默认情况下，发送到视图的任何参数都会被过滤。
- en: Note
  id: totrans-574
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The way each parameter is by default filtered can be changed in the `APPPATH/config/config.php`
    configuration file, using the `security.output_filter` key. Its default value
    is `array('Security::htmlentities')`, explaining why the HTML code is escaped.
    You could change this value to `array('Security::xss_clean')` to solve this issue,
    but you should know that it can potentially cause a performance hit.
  id: totrans-575
  prefs: []
  type: TYPE_NORMAL
  zh: 每个参数默认过滤的方式可以在`APPPATH/config/config.php`配置文件中更改，使用`security.output_filter`键。其默认值是`array('Security::htmlentities')`，解释了为什么HTML代码会被转义。您可以将此值更改为`array('Security::xss_clean')`以解决这个问题，但您应该知道这可能会造成性能下降。
- en: 'For solving that, inside the view action of the **Post** controller, add:'
  id: totrans-576
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这个问题，在`Post`控制器的视图动作中添加：
- en: '[PRE157]'
  id: totrans-577
  prefs: []
  type: TYPE_PRE
  zh: '[PRE157]'
- en: 'After:'
  id: totrans-578
  prefs: []
  type: TYPE_NORMAL
  zh: 之后：
- en: '[PRE158]'
  id: totrans-579
  prefs: []
  type: TYPE_PRE
  zh: '[PRE158]'
- en: 'And, in the `BLOGPATH/views/post/view.php` view file, replace:'
  id: totrans-580
  prefs: []
  type: TYPE_NORMAL
  zh: 并且，在`BLOGPATH/views/post/view.php`视图文件中，替换：
- en: '[PRE159]'
  id: totrans-581
  prefs: []
  type: TYPE_PRE
  zh: '[PRE159]'
- en: 'By:'
  id: totrans-582
  prefs: []
  type: TYPE_NORMAL
  zh: 通过：
- en: '[PRE160]'
  id: totrans-583
  prefs: []
  type: TYPE_PRE
  zh: '[PRE160]'
- en: You should be cautious when disabling the `filter` parameter, as it can add
    security issues. Since the posts are edited only by administrators, it is less
    risky, but this doesn't prevent us from taking extra measures. That is why we
    used the `Security::xss_clean` method to limit potential issues.
  id: totrans-584
  prefs: []
  type: TYPE_NORMAL
  zh: 当您禁用`filter`参数时，应谨慎行事，因为它可能会引入安全风险。由于帖子仅由管理员编辑，风险较低，但这并不能阻止我们采取额外措施。这就是为什么我们使用了`Security::xss_clean`方法来限制潜在问题。
- en: Note
  id: totrans-585
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You are probably wondering why we set the post content in an additional unfiltered
    view parameter, instead of just setting the `filter` parameter of `View::forge`
    to false. The reason is that, in that case, we would have sent a totally unfiltered
    `post` object (since all objects properties are filtered when `filter` is set
    to true). This would have forced us to manually escape most other properties we
    display on views, resulting in many more changes.
  id: totrans-586
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能想知道为什么我们设置帖子内容在额外的未过滤视图参数中，而不是仅仅将`View::forge`的`filter`参数设置为false。原因是，在这种情况下，我们将发送一个完全未过滤的`post`对象（因为当`filter`设置为true时，所有对象的属性都会被过滤）。这将迫使我们手动转义我们在视图中显示的大部分其他属性，从而导致许多更多更改。
- en: If you decide, in another case, to disable the `filter` parameter directly in
    `View::forge`, beware of an important detail; when the `filter` parameter is enabled,
    it escapes all passed objects' properties and therefore, changes them in the process.
    Consequently, the objects will be irreversibly changed after any `View::forge`
    with the `filter` parameter set to `true`. Thus, even if you set the `filter`
    parameter to false when calling `View::forge` in the controller, your objects'
    attributes might still get escaped if you are displaying sub views with `filter`
    set to `true`, so be sure to disable `filter` in that case too.
  id: totrans-587
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你决定在其他情况下直接在`View::forge`中禁用`filter`参数，请注意一个重要的细节；当`filter`参数启用时，它会转义所有传递对象的属性，因此在这个过程中改变了它们。因此，对象在设置`filter`参数为`true`的任何`View::forge`之后将不可逆地改变。因此，即使你在控制器中调用`View::forge`时将`filter`参数设置为`false`，如果你的对象属性在显示带有`filter`设置为`true`的子视图时仍然可能被转义，所以确保在这种情况下也禁用`filter`。
- en: Adding the comment form
  id: totrans-588
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加评论表单
- en: 'We also want the user to be able to post comments. To do that, we will first
    implement the comment creation form (derived from the one of the administration
    panel). Create the `BLOGPATH/views/comment/_form.php` view file and set its content
    to:'
  id: totrans-589
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还希望用户能够发布评论。为此，我们首先实现评论创建表单（从管理面板的表单派生）。创建`BLOGPATH/views/comment/_form.php`视图文件，并将其内容设置为：
- en: '[PRE161]'
  id: totrans-590
  prefs: []
  type: TYPE_PRE
  zh: '[PRE161]'
- en: 'As mentioned earlier, it is a derived version of the comment form in the administration
    panel, except we removed the **Status** and **Post** fields. Now, add the following
    line at the end of `BLOGPATH/views/post/view.php` to display the form when showing
    a post:'
  id: totrans-591
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，这是一个管理面板中评论表单的派生版本，除了我们移除了**状态**和**帖子**字段。现在，在`BLOGPATH/views/post/view.php`的末尾添加以下行以在显示帖子时显示表单：
- en: '[PRE162]'
  id: totrans-592
  prefs: []
  type: TYPE_PRE
  zh: '[PRE162]'
- en: 'We now have to process it. Open the **Post** controller and, inside the view
    action, before the following line:'
  id: totrans-593
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在必须处理它。打开**Post**控制器，在视图操作中，在以下行之前：
- en: '[PRE163]'
  id: totrans-594
  prefs: []
  type: TYPE_PRE
  zh: '[PRE163]'
- en: 'Add:'
  id: totrans-595
  prefs: []
  type: TYPE_NORMAL
  zh: 添加：
- en: '[PRE164]'
  id: totrans-596
  prefs: []
  type: TYPE_PRE
  zh: '[PRE164]'
- en: 'This is derived from the generated scaffold code, so there is nothing that
    you have not already seen. If you try to validate the comment form, you will notice
    that the `status` validation prevents the comment object from being saved. Open
    the `BLOGPATH/model/comment.php` model file, and replace:'
  id: totrans-597
  prefs: []
  type: TYPE_NORMAL
  zh: 这是从生成的脚手架代码派生出来的，所以你没有看到任何新内容。如果你尝试验证评论表单，你会注意到`status`验证阻止了评论对象被保存。打开`BLOGPATH/model/comment.php`模型文件，并替换以下内容：
- en: '[PRE165]'
  id: totrans-598
  prefs: []
  type: TYPE_PRE
  zh: '[PRE165]'
- en: 'By:'
  id: totrans-599
  prefs: []
  type: TYPE_NORMAL
  zh: 通过：
- en: '[PRE166]'
  id: totrans-600
  prefs: []
  type: TYPE_PRE
  zh: '[PRE166]'
- en: Displaying comments
  id: totrans-601
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 显示评论
- en: 'Now that the user is able to create comments, it would be nice to display them.
    A small correction; it would be nice to display those that have been validated
    by the administrator. We don''t want to display all comments, but only those with
    their `status = published`. In order to make our work easier, we will first add
    a relation to the **Post** model that only retrieves published comments. Open
    the **Post** model, and add the following at the end of the `$_has_many` property:'
  id: totrans-602
  prefs: []
  type: TYPE_NORMAL
  zh: 现在用户能够创建评论，展示它们会很好。一个小修正；展示那些由管理员验证过的评论会更好。我们不希望展示所有评论，而只展示那些`status = published`的评论。为了使我们的工作更简单，我们首先将一个关系添加到**Post**模型中，该关系只检索已发布的评论。打开**Post**模型，并在`$_has_many`属性末尾添加以下内容：
- en: '[PRE167]'
  id: totrans-603
  prefs: []
  type: TYPE_PRE
  zh: '[PRE167]'
- en: As you can see, it is also possible to add default conditions (and orders) to
    relations. From now on, `$post->published_comments` will retrieve the post's comments
    with `status = published`.
  id: totrans-604
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，也可以向关系添加默认条件（和排序）。从现在起，`$post->published_comments`将检索`status = published`的帖子评论。
- en: 'Let''s use this relation to display our published comments. Open `BLOGPATH/views/post/view.php`
    and before:'
  id: totrans-605
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用这个关系来显示我们的已发布评论。打开`BLOGPATH/views/post/view.php`，在以下之前：
- en: '[PRE168]'
  id: totrans-606
  prefs: []
  type: TYPE_PRE
  zh: '[PRE168]'
- en: 'Add:'
  id: totrans-607
  prefs: []
  type: TYPE_NORMAL
  zh: 添加：
- en: '[PRE169]'
  id: totrans-608
  prefs: []
  type: TYPE_PRE
  zh: '[PRE169]'
- en: 'Finally, create the `BLOGPATH/views/comment/item.php` view file and set its
    content to:'
  id: totrans-609
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，创建`BLOGPATH/views/comment/item.php`视图文件，并将其内容设置为：
- en: '[PRE170]'
  id: totrans-610
  prefs: []
  type: TYPE_PRE
  zh: '[PRE170]'
- en: Notifying the author when a new comment is posted
  id: totrans-611
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 当新评论发布时通知作者
- en: As comments require a validation from the administrator, we will send an email
    to the post's author when a new comment is posted.
  id: totrans-612
  prefs: []
  type: TYPE_NORMAL
  zh: 由于评论需要管理员验证，当新评论发布时，我们将向帖子的作者发送电子邮件。
- en: We will do that with the `Email` package. This package is located at the `PKGPATH/email`
    directory. You can adapt the package configuration file by copying `PKGPATH/email/config/email.php`
    to `APPPATH/config/email.php` and changing the returned array, depending on your
    local configuration. You must at least set the `defaults.from.email` and `defaults.from.name`
    values.
  id: totrans-613
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用`Email`包来完成这项工作。此包位于`PKGPATH/email`目录。您可以通过将`PKGPATH/email/config/email.php`复制到`APPPATH/config/email.php`并更改返回的数组来调整包配置文件，具体取决于您的本地配置。您至少需要设置`defaults.from.email`和`defaults.from.name`值。
- en: You can choose between several email drivers. The default driver is `mail` and,
    as we could expect, simply use the `mail` PHP method. The `sendmail` driver is
    also commonly chosen and use the open source `sendmail` utility. The `smtp` driver
    connects to the email server using sockets. Other drivers, such as `mailgun` or
    `mandrill`, allow you to use external services to send your emails.
  id: totrans-614
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以选择几个电子邮件驱动程序。默认驱动程序是`mail`，正如我们所期望的，只需简单地使用`mail`PHP方法。`sendmail`驱动程序也常被选择，并使用开源的`sendmail`实用程序。`smtp`驱动程序通过套接字连接到电子邮件服务器。其他驱动程序，如`mailgun`或`mandrill`，允许您使用外部服务发送您的电子邮件。
- en: You should read the official documentation at
  id: totrans-615
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该在以下位置阅读官方文档：
- en: '[http://fuelphp.com/docs/packages/email/introduction.html](http://fuelphp.com/docs/packages/email/introduction.html)'
  id: totrans-616
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://fuelphp.com/docs/packages/email/introduction.html](http://fuelphp.com/docs/packages/email/introduction.html)'
- en: (It can be accessed through FuelPHP website by navigating to **DOCS** | **TABLE
    OF CONTENTS** | **Email** | **Introduction**)
  id: totrans-617
  prefs: []
  type: TYPE_NORMAL
  zh: （可以通过导航到FuelPHP网站上的**文档** | **目录** | **邮件** | **简介**来访问）
- en: Note
  id: totrans-618
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you want to send emails from your local system, you will probably have to
    change additional configuration files, such as `php.ini`. Feel free to search
    the web for more information, as there are countless resources on the topic.
  id: totrans-619
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想从本地系统发送电子邮件，您可能需要更改额外的配置文件，例如`php.ini`。您可以自由地在网上搜索更多信息，因为关于这个主题有无数的资源。
- en: 'In order to send those emails, open the **Post** controller and, inside the
    view action, just before:'
  id: totrans-620
  prefs: []
  type: TYPE_NORMAL
  zh: 为了发送这些电子邮件，打开**帖子**控制器，并在视图操作中，在以下代码之前：
- en: '[PRE171]'
  id: totrans-621
  prefs: []
  type: TYPE_PRE
  zh: '[PRE171]'
- en: 'Add:'
  id: totrans-622
  prefs: []
  type: TYPE_NORMAL
  zh: 添加：
- en: '[PRE172]'
  id: totrans-623
  prefs: []
  type: TYPE_PRE
  zh: '[PRE172]'
- en: 'Finally, create the `BLOGPATH/views/comment/email.php` view file and set its
    content to:'
  id: totrans-624
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，创建`BLOGPATH/views/comment/email.php`视图文件，并设置其内容为：
- en: '[PRE173]'
  id: totrans-625
  prefs: []
  type: TYPE_PRE
  zh: '[PRE173]'
- en: Clearing rejected comments
  id: totrans-626
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 清除被拒绝的评论
- en: If your blog gets spammed and you find yourself with a lot of comments with
    status set as `not_published`, you might want to remove all these comments to
    clean your comments database. We could simply implement a link and an action but,
    for the sake of the example, let's implement a task for doing that.
  id: totrans-627
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的博客被垃圾邮件攻击，您发现自己有很多状态设置为`not_published`的评论，您可能想删除所有这些评论以清理您的评论数据库。我们可以简单地实现一个链接和一个操作，但为了示例，让我们实现一个执行此操作的任务。
- en: Tasks are classes that can be executed through the command line using the `oil`
    utility. They are generally used for background processes or cron jobs. Sometimes,
    they can also be used for generating or modifying existing code, like the task
    we previously used for moving scaffolds to modules.
  id: totrans-628
  prefs: []
  type: TYPE_NORMAL
  zh: 任务是可以通过`oil`实用程序通过命令行执行的一类。它们通常用于后台进程或cron作业。有时，它们也可以用于生成或修改现有代码，就像我们之前用于将脚手架移动到模块的任务一样。
- en: 'Let''s generate our task file using the `oil` utility:'
  id: totrans-629
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用`oil`实用程序生成我们的任务文件：
- en: '[PRE174]'
  id: totrans-630
  prefs: []
  type: TYPE_PRE
  zh: '[PRE174]'
- en: 'It should output:'
  id: totrans-631
  prefs: []
  type: TYPE_NORMAL
  zh: 它应该输出：
- en: '[PRE175]'
  id: totrans-632
  prefs: []
  type: TYPE_PRE
  zh: '[PRE175]'
- en: 'If you now open the task file located at `APPPATH/tasks/clearcomments.php`,
    you should see the following class:'
  id: totrans-633
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您现在打开位于`APPPATH/tasks/clearcomments.php`的任务文件，您应该看到以下类：
- en: '[PRE176]'
  id: totrans-634
  prefs: []
  type: TYPE_PRE
  zh: '[PRE176]'
- en: 'The `oil` utility generated a class named `Clearcomments`, with two methods:
    `run` and `index`. Each method can be called using the `oil` utility.'
  id: totrans-635
  prefs: []
  type: TYPE_NORMAL
  zh: '`oil`实用程序生成了一个名为`Clearcomments`的类，其中包含两个方法：`run`和`index`。每个方法都可以使用`oil`实用程序调用。'
- en: 'The following command executes the `run` method:'
  id: totrans-636
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令执行`run`方法：
- en: '[PRE177]'
  id: totrans-637
  prefs: []
  type: TYPE_PRE
  zh: '[PRE177]'
- en: 'The following command executes the `index` method:'
  id: totrans-638
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令执行`index`方法：
- en: '[PRE178]'
  id: totrans-639
  prefs: []
  type: TYPE_PRE
  zh: '[PRE178]'
- en: 'If you add a public method named `my_method`, it will also be called when executing:'
  id: totrans-640
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您添加一个名为`my_method`的公共方法，它也会在执行时被调用：
- en: '[PRE179]'
  id: totrans-641
  prefs: []
  type: TYPE_PRE
  zh: '[PRE179]'
- en: 'The `run` method is the default method and can therefore be called this way:'
  id: totrans-642
  prefs: []
  type: TYPE_NORMAL
  zh: '`run`方法是默认方法，因此可以按这种方式调用：'
- en: '[PRE180]'
  id: totrans-643
  prefs: []
  type: TYPE_PRE
  zh: '[PRE180]'
- en: 'It is possible to pass additional parameters to the task. For instance:'
  id: totrans-644
  prefs: []
  type: TYPE_NORMAL
  zh: 可以向任务传递额外的参数。例如：
- en: '[PRE181]'
  id: totrans-645
  prefs: []
  type: TYPE_PRE
  zh: '[PRE181]'
- en: In that case, the `oil` utility will call `Clearcomments::run('param_1', 'param_2')`.
  id: totrans-646
  prefs: []
  type: TYPE_NORMAL
  zh: 在那种情况下，`oil`实用程序将调用`Clearcomments::run('param_1', 'param_2')`。
- en: 'You should read the official documentation at:'
  id: totrans-647
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该在以下位置阅读官方文档：
- en: '[http://fuelphp.com/docs/packages/oil/generate.html#/tasks](http://fuelphp.com/docs/packages/oil/generate.html#/tasks)'
  id: totrans-648
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://fuelphp.com/docs/packages/oil/generate.html#/tasks](http://fuelphp.com/docs/packages/oil/generate.html#/tasks)'
- en: (It can be accessed through FuelPHP website by navigating to **DOCS** | **TABLE
    OF CONTENTS** | **Oil** | **Generate**)
  id: totrans-649
  prefs: []
  type: TYPE_NORMAL
  zh: （可以通过导航到FuelPHP网站上的**DOCS** | **目录** | **Oil** | **生成**）来访问
- en: '[http://fuelphp.com/docs/general/tasks.html](http://fuelphp.com/docs/general/tasks.html)'
  id: totrans-650
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://fuelphp.com/docs/general/tasks.html](http://fuelphp.com/docs/general/tasks.html)'
- en: (It can be accessed through FuelPHP website by navigating to **DOCS** | **TABLE
    OF CONTENTS** | **FuelPHP** | **General** | **Tasks**)
  id: totrans-651
  prefs: []
  type: TYPE_NORMAL
  zh: （可以通过导航到FuelPHP网站上的**DOCS** | **目录** | **FuelPHP** | **通用** | **任务**）来访问
- en: 'Replace the class content by the following:'
  id: totrans-652
  prefs: []
  type: TYPE_NORMAL
  zh: 将类内容替换为以下内容：
- en: '[PRE182]'
  id: totrans-653
  prefs: []
  type: TYPE_PRE
  zh: '[PRE182]'
- en: 'Now, if you run:'
  id: totrans-654
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果你运行：
- en: '[PRE183]'
  id: totrans-655
  prefs: []
  type: TYPE_PRE
  zh: '[PRE183]'
- en: It should delete all rejected comments.
  id: totrans-656
  prefs: []
  type: TYPE_NORMAL
  zh: 它应该删除所有被拒绝的评论。
- en: You can execute this task manually or you can set up a cron job to execute it
    regularly.
  id: totrans-657
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以手动执行此任务，或者你可以设置一个cron作业来定期执行它。
- en: Additional improvements
  id: totrans-658
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 额外的改进
- en: 'Many additional improvements are possible. Some edge cases need to be handled:
    for instance, try to successfully display the administration panel when post or
    categories are deleted. You can set the route configuration so that your welcome
    page shows your posts'' listing. When visualizing a post, you can optimize the
    SQL requests being sent, by using the related parameter. You could even send an
    e-mail to all commenters when a new comment is being posted, and allow them to
    unsubscribe if they want to. You should add the improvements you deem necessary,
    this can only have a beneficial effect on your FuelPHP skills.'
  id: totrans-659
  prefs: []
  type: TYPE_NORMAL
  zh: 可能有许多额外的改进。一些边缘情况需要处理：例如，尝试在删除帖子或分类时成功显示管理面板。你可以设置路由配置，以便欢迎页面显示你的帖子列表。在可视化帖子时，你可以通过使用相关参数来优化发送的SQL请求。你甚至可以在发布新评论时向所有评论者发送电子邮件，并允许他们取消订阅。你应该添加你认为必要的改进，这只会对你的FuelPHP技能产生有益的影响。
- en: We have one additional suggestion about modules. In this chapter, for the sake
    of simplicity and conciseness, we created a single module, blog, to manage posts,
    comments and categories. Yet, depending on the website, developers might want
    to disable (for instance, disable comments), change these features or even add
    new ones.
  id: totrans-660
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有一个关于模块的额外建议。在本章中，为了简单和简洁，我们创建了一个单独的模块，blog，来管理帖子、评论和分类。然而，根据网站的不同，开发者可能希望禁用（例如，禁用评论），更改这些功能，甚至添加新的功能。
- en: We could handle this issue by creating a configuration file defining whether
    or not a specific feature should be enabled, or the way some features should operate.
    It can do the trick but, if your module accumulates many features, your code could
    become unmaintainable.
  id: totrans-661
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过创建一个配置文件来处理这个问题，该文件定义了是否应该启用特定功能，或者某些功能应该如何操作。它可以起到作用，但如果你的模块积累了许多功能，你的代码可能会变得难以维护。
- en: A better way to solve this issue is to create several smaller modules that handle
    each feature. After all, comments can also be used on product pages, for instance.
    There can also be multiple ways to display a list of posts, so separating models
    and controllers/views into distinct modules can also be a good idea. You should
    always aim for simple and small modules that interact with each other, instead
    of a big module that does everything.
  id: totrans-662
  prefs: []
  type: TYPE_NORMAL
  zh: 解决这个问题的更好方法是创建几个较小的模块，每个模块处理一个功能。毕竟，评论也可以用于产品页面，例如。显示帖子列表的方式也可能有多个，因此将模型和控制器/视图分离到不同的模块中也是一个好主意。你应该始终追求简单且小的模块，它们相互交互，而不是一个做所有事情的庞大模块。
- en: Summary
  id: totrans-663
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we have built a complex project with many features. By trying
    to make the code as maintainable as possible (by using modules for instance),
    we have provided a snapshot of how projects should be implemented so that adding
    new features remains easy. We have also addressed some common ORM issues, learnt
    how to easily paginate a listing, and used the Auth and Email packages. You certainly
    don't know everything about the FuelPHP framework, but implementing most projects
    should not be a problem for you now.
  id: totrans-664
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们已经构建了一个具有许多功能的复杂项目。通过尽可能使代码易于维护（例如使用模块），我们提供了一个项目应该如何实施的快照，以便添加新功能仍然容易。我们还解决了一些常见的ORM问题，学习了如何轻松分页列表，并使用了Auth和Email包。你当然不可能了解FuelPHP框架的所有内容，但现在实施大多数项目应该不会对你构成问题。
- en: In the next chapter, you will learn how to add reusable features by installing
    an external package as well as creating your own.
  id: totrans-665
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，你将学习如何通过安装外部包以及创建自己的包来添加可重用的功能。
