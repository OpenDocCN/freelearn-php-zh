["```php\nregister_activation_hook( __FILE__, 'ch8bt_activation' ); \n```", "```php\nfunction ch8bt_activation() { \n    // Get access to global database access class \n    global $wpdb; \n\n    // Create table on main blog in network mode or single blog \n    ch8bt_create_table( $wpdb->get_blog_prefix() ); \n} \n```", "```php\nfunction ch8bt_create_table( $prefix ) { \n    // Prepare SQL query to create database table \n    // using function parameter \n\n    $creation_query = 'CREATE TABLE IF NOT EXISTS ' . \n                      $prefix . 'ch8_bug_data ( \n                      `bug_id` int(20) NOT NULL AUTO_INCREMENT, \n                      `bug_description` text, \n                      `bug_version` varchar(10) DEFAULT NULL, \n                      `bug_report_date` date DEFAULT NULL, \n                      `bug_status` int(3) NOT NULL DEFAULT 0, \n                      PRIMARY KEY (`bug_id`) \n                      );'; \n\n    global $wpdb; \n    $wpdb->query( $creation_query ); \n} \n```", "```php\nfunction ch8bt_activation() { \n    // Get access to global database access class \n    global $wpdb; \n\n    // Check to see if WordPress installation is a network \n    if ( is_multisite() ) { \n        // If it is, cycle through all blogs, switch to them \n        // and call function to create plugin table \n        if ( !empty( $_GET['networkwide'] ) ) { \n            $start_blog = $wpdb->blogid; \n            $blog_list =\n                $wpdb->get_col( 'SELECT blog_id FROM ' . $wpdb->blogs );\n            foreach ( $blog_list as $blog ) {\n                switch_to_blog( $blog ); \n                // Send blog table prefix to creation function\n                ch8bt_create_table( $wpdb->get_blog_prefix() );\n            } \n            switch_to_blog( $start_blog );\n            return;\n        }\n    }\n\n    // Create table on main blog in network mode or single blog\n    ch8bt_create_table( $wpdb->get_blog_prefix() );\n} \n```", "```php\n// Register function to be called when new blogs are added\n// to a network site \nadd_action( 'wpmu_new_blog', 'ch8bt_new_network_site' );\n\nfunction ch8bt_new_network_site( $blog_id ) {  \n    global $wpdb; \n\n    // Check if this plugin is active when new blog is created\n    // Include plugin functions if it is\n    if ( !function_exists( 'is_plugin_active_for_network' ) ) {\n        require_once( ABSPATH . '/wp-admin/includes/plugin.php' ); \n    }\n\n    // Select current blog, create new table and switch back\n    if ( is_plugin_active_for_network( plugin_basename( __FILE__ ) ) ) {\n        $start_blog = $wpdb->blogid; \n        switch_to_blog( $blog_id ); \n\n        // Send blog table prefix to table creation function \n        ch8bt_create_table( $wpdb->get_blog_prefix() ); \n        switch_to_blog( $start_blog ); \n    } \n} \n```", "```php\nfunction ch8bt_drop_table( $prefix ) { \n    global $wpdb;     \n    $wpdb->query( 'DROP TABLE ' . $prefix . 'ch8_bug_data' );     \n} \n```", "```php\n// Check that file was called from WordPress admin \nif( !defined( 'WP_UNINSTALL_PLUGIN' ) ) {\n    exit();\n}\n\nglobal $wpdb; \n\n// Check if site is configured for network installation \nif ( is_multisite() ) { \n    if ( !empty( $_GET['networkwide'] ) ) { \n        // Get blog list and cycle through all blogs \n        $start_blog = $wpdb->blogid; \n        $blog_list = $wpdb->get_col( 'SELECT blog_id FROM ' .\n                                     $wpdb->blogs ); \n        foreach ( $blog_list as $blog ) { \n            switch_to_blog( $blog ); \n            // Call function to delete bug table with prefix \n            ch8bt_drop_table( $wpdb->get_blog_prefix() ); \n        } \n        switch_to_blog( $start_blog ); \n        return; \n    }     \n}  \n\nch8bt_drop_table( $wpdb->prefix ); \n```", "```php\n$creation_query = 'CREATE TABLE ' . $prefix . \n                  'ch8_bug_data ( \n                  `bug_id` int(20) NOT NULL AUTO_INCREMENT, \n                  `bug_description` text, \n                  `bug_version` varchar(10) DEFAULT NULL, \n                  `bug_report_date` date DEFAULT NULL, \n                  `bug_status` int(3) NOT NULL DEFAULT 0, \n                  `bug_title` VARCHAR( 128 ) NULL, \n                  PRIMARY KEY (`bug_id`) \n                  );'; \n```", "```php\nglobal $wpdb; \nwpdb->query( $creation_query ); \n```", "```php\nrequire_once( ABSPATH . 'wp-admin/includes/upgrade.php' ); \ndbDelta( $creation_query ); \n```", "```php\nadd_action( 'admin_menu', 'ch8bt_settings_menu' ); \n```", "```php\nfunction ch8bt_settings_menu() { \n    add_options_page( 'Bug Tracker Data Management',   \n                      'Bug Tracker',\n                      'manage_options', 'ch8bt-bug-tracker',\n                      'ch8bt_config_page' ); \n} \n```", "```php\nfunction ch8bt_config_page() { \n    global $wpdb;  \n    ?> \n\n    <!-- Top-level menu --> \n    <div id=\"ch8bt-general\" class=\"wrap\"> \n    <h2>Bug Tracker <a class=\"add-new-h2\" href=\"<?php echo \n         add_query_arg( array( 'page' => 'ch8bt-bug-tracker', \n                               'id' => 'new' ),  \n                        admin_url('options-general.php') ); ?>\"> \n    Add New Bug</a></h2> \n\n    <!-- Display bug list if no parameter sent in URL --> \n    <?php if ( empty( $_GET['id'] ) ) { \n        $bug_query = 'select * from ' . $wpdb->get_blog_prefix();\n        $bug_query .= 'ch8_bug_data ORDER by bug_report_date DESC';\n        $bug_items = $wpdb->get_results( $bug_query, ARRAY_A );\n    ?> \n\n    <h3>Manage Bug Entries</h3> \n\n    <table class=\"wp-list-table widefat fixed\"> \n    <thead><tr><th style=\"width: 80px\">ID</th> \n    <th style=\"width: 300px\">Title</th>\n    <th>Version</th></tr></thead>\n\n    <?php  \n        // Display bugs if query returned results \n        if ( $bug_items ) {             \n            foreach ( $bug_items as $bug_item ) { \n                echo '<tr style=\"background: #FFF\">'; \n                echo '<td>' . $bug_item['bug_id'] . '</td>';\n                echo '<td><a href=\"'; \n                echo add_query_arg( array(  \n                    'page' => 'ch8bt-bug-tracker', \n                    'id' => $bug_item['bug_id'] ), \n                    admin_url( 'options-general.php' ) ); \n                echo '\">' . $bug_item['bug_title'] . '</a></td>'; \n                echo '<td>' . $bug_item['bug_version'];\n                echo '</td></tr>';                     \n            } \n        } else {\n            echo '<tr style=\"background: #FFF\">'; \n            echo '<td colspan=\"3\">No Bug Found</td></tr>'; \n        }        \n    ?> \n    </table><br /> \n    <?php } ?> \n    </div> \n<?php } \n```", "```php\n<?php } elseif ( isset( $_GET['id'] ) &&\n                 ( 'new' == $_GET['id'] ||  \n                   is_numeric( $_GET['id'] ) ) ) {                  \n    $bug_id = intval( $_GET['id'] ); \n    $mode = 'new'; \n\n    // Query database if numeric id is present \n    if ( $bug_id > 0 ) { \n        $bug_query = 'select * from ' . $wpdb->get_blog_prefix(); \n        $bug_query .= 'ch8_bug_data where bug_id = %d'; \n\n        $bug_data =\n            $wpdb->get_row( $wpdb->prepare( $bug_query, $bug_id ), \n                            ARRAY_A ); \n\n        // Set variable to indicate page mode \n        if ( $bug_data ) {\n            $mode = 'edit'; \n        }\n    } \n\n    if ( 'new' == $mode ) {\n        $bug_data = array(\n            'bug_title' => '', 'bug_description' => '',\n            'bug_version' => '', 'bug_status' => ''\n        ); \n    }\n\n    // Display title based on current mode \n    if ( 'new' == $mode ) { \n        echo '<h3>Add New Bug</h3>'; \n    } elseif ( 'edit' == $mode ) { \n        echo '<h3>Edit Bug #' . $bug_data['bug_id'] . ' - '; \n        echo $bug_data['bug_title'] . '</h3>'; \n    } \n    ?> \n\n    <form method=\"post\"  \n          action=\"<?php echo admin_url( 'admin-post.php' ); ?>\"> \n    <input type=\"hidden\" name=\"action\" value=\"save_ch8bt_bug\" /> \n    <input type=\"hidden\" name=\"bug_id\" \n           value=\"<?php echo $bug_id; ?>\" /> \n\n    <!-- Adding security through hidden referrer field --> \n    <?php wp_nonce_field( 'ch8bt_add_edit' ); ?> \n\n    <!-- Display bug editing form --> \n    <table> \n        <tr> \n            <td style=\"width: 150px\">Title</td> \n            <td><input type=\"text\" name=\"bug_title\" size=\"60\"\n                       value=\"<?php echo esc_html( \n                       $bug_data['bug_title'] ); ?>\"/></td> \n        </tr> \n        <tr> \n            <td>Description</td> \n            <td><textarea name=\"bug_description\"  \n            cols=\"60\"><?php echo\nesc_textarea( $bug_data['bug_description'] ); ?></textarea></td> \n        </tr> \n        <tr> \n            <td>Version</td> \n            <td><input type=\"text\" name=\"bug_version\" \n                       value=\"<?php echo esc_html( \n                       $bug_data['bug_version'] ); ?>\" /></td> \n        </tr> \n        <tr> \n            <td>Status</td> \n            <td> \n                <select name=\"bug_status\"> \n                <?php  \n                // Display drop-down list of bug statuses\n                $bug_statuses = array( 0 => 'Open', 1 => 'Closed',\n                                       2 => 'Not-a-Bug' );\n                foreach( $bug_statuses as $status_id => $status ) { \n                    // Add selected tag when entry matches \n                    echo '<option value=\"' . $status_id . '\" '; \n                    selected( $bug_data['bug_status'], \n                              $status_id ); \n                    echo '>' . $status; \n                } \n                ?> \n                </select> \n            </td> \n        </tr> \n    </table> \n    <input type=\"submit\" value=\"Submit\" class=\"button-primary\" /> \n</form> \n```", "```php\nadd_action( 'admin_init', 'ch8bt_admin_init' ); \n```", "```php\nfunction ch8bt_admin_init() { \n    add_action( 'admin_post_save_ch8bt_bug', 'process_ch8bt_bug' ); \n} \n```", "```php\nfunction process_ch8bt_bug() {  \n    if ( !current_user_can( 'manage_options' ) ) {\n        wp_die( 'Not allowed' );\n    }\n\n    // Check if nonce field is present for security \n    check_admin_referer( 'ch8bt_add_edit' ); \n    global $wpdb;\n\n    // Place all user submitted values in an array (or empty \n    // strings if no value was sent) \n    $bug_data = array(); \n    $bug_data['bug_title'] = ( isset( $_POST['bug_title'] ) ?\n        sanitize_text_field( $_POST['bug_title'] ) : '' ); \n\n    $bug_data['bug_description'] =\n        ( isset( $_POST['bug_description'] ) ? \n          sanitize_text_field( $_POST['bug_description'] ) : '' ); \n\n    $bug_data['bug_version'] = ( isset( $_POST['bug_version'] ) ? \n        sanitize_text_field( $_POST['bug_version'] ) : '' ); \n\n    // Set bug report date as current date \n    $bug_data['bug_report_date'] = date( 'Y-m-d' ); \n\n    // Set status of all new bugs to 0 (Open) \n    $bug_data['bug_status'] = ( isset( $_POST['bug_status'] ) ? \n        intval( $_POST['bug_status'] ) : 0 ); \n\n    // Call the wpdb insert or update method based on value \n    // of hidden bug_id field \n    if ( isset( $_POST['bug_id'] ) && 0 == $_POST['bug_id'] ) { \n        $wpdb->insert( $wpdb->get_blog_prefix() . 'ch8_bug_data', \n                       $bug_data ); \n    } elseif ( isset( $_POST['bug_id'] ) && \n               $_POST['bug_id'] > 0 ) { \n        $wpdb->update( $wpdb->get_blog_prefix() . 'ch8_bug_data',  \n            $bug_data, \n            array( 'bug_id' => intval( $_POST['bug_id'] ) ) ); \n    } \n\n    // Redirect the page to the user submission form\n    wp_redirect( add_query_arg( 'page', 'ch8bt-bug-tracker', \n                     admin_url( 'options-general.php' ) ) ); \n    exit; \n} \n```", "```php\n<h3>Manage Bug Entries</h3> \n\n<form method=\"post\"\n      action=\"<?php echo admin_url( 'admin-post.php' ); ?>\"> \n<input type=\"hidden\" name=\"action\" value=\"delete_ch8bt_bug\" />  \n<!-- Adding security through hidden referrer field --> \n<?php wp_nonce_field( 'ch8bt_deletion' ); ?> \n```", "```php\n<thead><tr><th style=\"width: 50px\"></th>\n       <th style='width: 80px'>ID</th>\n```", "```php\necho '<tr style=\"background: #FFF\">'; \necho '<td><input type=\"checkbox\" name=\"bugs[]\" value=\"'; \necho intval( $bug_item['bug_id'] ) . '\" /></td>'; \necho '<td>' . $bug_item['bug_id'] . '</td>';\n```", "```php\necho '<td colspan=\"4\">No Bug Found</td></tr>'; \n```", "```php\n</table><br /> \n\n<input type=\"submit\" value=\"Delete Selected\" \n class=\"button-primary\"/> \n</form> \n```", "```php\nadd_action( 'admin_post_delete_ch8bt_bug', 'delete_ch8bt_bug' ); \n```", "```php\nfunction delete_ch8bt_bug() { \n    // Check that user has proper security level \n    if ( !current_user_can( 'manage_options' ) ) {\n        wp_die( 'Not allowed' );\n    }\n\n    // Check if nonce field is present \n    check_admin_referer( 'ch8bt_deletion' );\n\n    // If bugs are present, cycle through array and call SQL \n    // command to delete entries one by one\n    if ( !empty( $_POST['bugs'] ) ) { \n        // Retrieve array of bugs IDs to be deleted \n        $bugs_to_delete = $_POST['bugs'];         \n        global $wpdb;\n\n        foreach ( $bugs_to_delete as $bug_to_delete ) { \n            $query = 'DELETE from ' . $wpdb->get_blog_prefix(); \n            $query .= 'ch8_bug_data WHERE bug_id = %d'; \n            $wpdb->query( $wpdb->prepare( $query,\n                          intval( $bug_to_delete ) ) ); \n        }         \n    }\n\n    // Redirect the page to the user submission form \n    wp_redirect( add_query_arg( 'page', 'ch8bt-bug-tracker', \n                 admin_url( 'options-general.php' ) ) ); \n    exit;   \n} \n```", "```php\nadd_shortcode( 'bug-tracker-list', 'ch8bt_shortcode_list' ); \n```", "```php\nfunction ch8bt_shortcode_list() { \n    global $wpdb;\n\n    // Prepare query to retrieve bugs from database \n    $bug_query = 'select * from ' . $wpdb->get_blog_prefix();\n    $bug_query .= 'ch8_bug_data ';\n    $bug_query .= 'ORDER by bug_id DESC';                \n    $bug_items = $wpdb->get_results( $bug_query, ARRAY_A );\n\n    // Prepare output to be returned to replace shortcode\n    $output = '';\n    $output .= '<div class=\"bug-tracker-list\"><table>';\n\n    // Check if any bugs were found \n    if ( !empty( $bug_items ) ) { \n        $output .= '<tr><th style=\"width: 80px\">ID</th>'; \n        $output .= '<th style=\"width: 300px\">Title / Desc</th>'; \n        $output .= '<th>Version</th></tr>';\n\n        // Create row in table for each bug \n        foreach ( $bug_items as $bug_item ) { \n            $output .= '<tr style=\"background: #FFF\">'; \n            $output .= '<td>' . $bug_item['bug_id'] . '</td>'; \n            $output .= '<td>' . $bug_item['bug_title'] . '</td>'; \n            $output .= '<td>' . $bug_item['bug_version'] . '</td>'; \n            $output .= '</tr><tr><td></td><td colspan=\"2\">'; \n            $output .= $bug_item['bug_description']; \n            $output .= '</td></tr>'; \n        } \n    } else { \n        // Message displayed if no bugs are found \n        $output .= '<tr style=\"background: #FFF\">'; \n        $output .= '<td colspan=\"3\">No Bugs to Display</td>'; \n    }             \n    $output .= '</table></div>';\n\n    // Return data prepared to replace shortcode on page/post \n    return $output; \n} \n```", "```php\nglobal $wpdb; \n\nif ( !empty( $_GET['searchbt'] ) ) { \n $search_string = sanitize_text_field( $_GET['searchbt'] ); \n $search_mode = true; \n} else { \n $search_string = \"Search...\"; \n $search_mode = false; \n} \n```", "```php\n$bug_query = 'select * from ' . $wpdb->get_blog_prefix(); \n$bug_query .= 'ch8_bug_data ';\n\n// Add search string in query if present \nif ( $search_mode ) { \n $search_term = '%'. $search_string . '%'; \n $bug_query .= \"where bug_title like '%s' \"; \n $bug_query .= \"or bug_description like '%s' \"; \n} else { \n $search_term = ''; \n} $bug_query .= 'ORDER by bug_id DESC'; \n```", "```php\n$bug_items = $wpdb->get_results( $bug_query, ARRAY_A );\n```", "```php\nif ( $search_mode ) {\n    $bug_items = $wpdb->get_results( $wpdb->prepare(  \n                     $bug_query, $search_term, $search_term ), \n                     ARRAY_A );\n} else {\n    $bug_items = $wpdb->get_results( $bug_query, ARRAY_A );\n}\n```", "```php\n$output = '';\n\n$output .= '<div class=\"ch8_bt_search\">';\n$output .= '<form method=\"get\" id=\"ch8_bt_search\">'; \n$output .= '<div>Search bugs '; \n$output .= '<input type=\"text\" onfocus=\"this.value=\\'\\'\" '; \n$output .= 'value=\"' . esc_html( $search_string ) . '\" '; \n$output .= 'name=\"searchbt\" />'; \n$output .= '<input type=\"submit\" value=\"Search\" />'; \n$output .= '</div>'; \n$output .= '</form></div>'; \n\n$output .= '<div class=\"bug-tracker-list\"><table>'; \n```", "```php\n<input type=\"submit\" value=\"Delete Selected\"\n       class=\"button-primary\"/> \n</form>\n\n<!-- Form to upload new bugs in csv format --> \n<form method=\"post\" \n action=\"<?php echo admin_url( 'admin-post.php' ); ?>\" \n enctype=\"multipart/form-data\">  <input type=\"hidden\" name=\"action\" value=\"import_ch8bt_bug\" />   \n<!-- Adding security through hidden referrer field --> \n<?php wp_nonce_field( 'ch8bt_import' ); ?> <h3>Import Bugs</h3> \n<div class=\"import_data\">Import Bugs from CSV File \n (<a href=\"<?php echo plugins_url( 'importtemplate.csv', \n                                      __FILE__ ); ?>\">Template</a>) \n <input name=\"import_bugs_file\" type=\"file\" /></div> \n<input type=\"submit\" value=\"Import\" class=\"button-primary\"/> \n</form> \n```", "```php\nadd_action( 'admin_post_import_ch8bt_bug', 'import_ch8bt_bug' );\n```", "```php\nfunction import_ch8bt_bug() { \n    // Check that user has proper security level \n    if ( !current_user_can( 'manage_options' ) ) {\n        wp_die( 'Not allowed' );\n    }\n\n    // Check if nonce field is present \n    check_admin_referer( 'ch8bt_import' );\n\n    // Check if file has been uploaded \n    if( array_key_exists( 'import_bugs_file', $_FILES ) ) { \n        // If file exists, open it in read mode \n        $handle =\n            fopen( $_FILES['import_bugs_file']['tmp_name'], 'r' );\n\n        // If file is successfully open, extract a row of data \n        // based on comma separator, and store in $data array \n        if ( $handle ) { \n            while ( FALSE !== \n                    ( $data = fgetcsv( $handle, 5000, ',' ) ) ) { \n                $row += 1;\n\n                // If row count is ok and row is not header row \n                // Create array and insert in database \n                if ( count( $data ) == 4 && $row != 1 ) { \n                    $new_bug = array( \n                        'bug_title' => $data[0], \n                        'bug_description' => $data[1], \n                        'bug_version' => $data[2], \n                        'bug_status' => $data[3], \n                        'bug_report_date' => date( 'Y-m-d' ) );\n\n                    global $wpdb;         \n                    $wpdb->insert( $wpdb->get_blog_prefix() . \n                                   'ch8_bug_data', $new_bug ); \n                } \n            } \n        } \n    }\n\n    // Redirect the page to the user submission form \n    wp_redirect( add_query_arg( 'page', 'ch8bt-bug-tracker', \n                     admin_url( 'options-general.php' ) ) ); \n    exit; \n} \n```", "```php\n\"Title\",\"Description\",\"Version\",\"Status\"\n\"Test Import Bug\",\"This is a test import bug\",\"1.0\",\"0\"\n```"]