["```php\n<a href=\"<?php $this->url('users/upload-manager', array('action'=>'edit', 'id' =>  10));\">Edit</a>\n```", "```php\n'route' => '/user-manager[/:action[/:id]]'\n```", "```php\n<?php echo $this->headLink(); ?>\n```", "```php\n<?php echo $this->headMeta(); ?>\n```", "```php\n<?php echo $this->headScript(); ?>\n```", "```php\n<?php echo $this->headStyle(); ?>\n```", "```php\n<?php echo $this->headTitle(); ?>\n```", "```php\n    <a href=\"/users/login\" class='ui-button'>Login</a>\n    <a href=\"/users/register\" class='ui-button'>Register</a>\n    ```", "```php\n    // Attached jQuery UI Scripts\n    $this->headScript()\n    ->appendFile('http://code.jquery.com/jquery-1.8.3.js','text/javascript');\n\n    $this->headScript()\n    ->appendFile('http://code.jquery.com/ui/1.10.0/jquery-ui.js','text/javascript');\n\n    // Attach jQuery UI Styles \n    $this->headLink()->appendStylesheet('http://code.jquery.com/ui/1.10.0/themes/base/jquery-ui.css');\n    ```", "```php\n    // UI Initializer for buttons\n    $this->headScript()->appendScript(\n    '$(function() {\n        $(\"a.ui-button\").button();\n      });', 'text/javascript');\n    ```", "```php\n<!DOCTYPE html>\n<html lang=\"en\">\n...\n...\n<script type=\"text/javascript\" src=\"img/jquery-1.8.3.js\"></script>\n<script type=\"text/javascript\" src=\"img/jquery-ui.js\"></script>\n<script type=\"text/javascript\">\n    //<!--\n    $(function() {\n   $(\"a.ui-button\").button();\n  });\n    //-->\n</script>\n...\n...\n</html>\n```", "```php\n    CREATE TABLE IF NOT EXISTS chat_messages (\n      id INT NOT NULL AUTO_INCREMENT PRIMARY KEY ,\n      user_id INT NOT NULL,\n      message VARCHAR( 255 ) NOT NULL ,  \n      stamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n    )\n    ```", "```php\n    // Invokable\n    'Users\\Controller\\GroupChat' => 'Users\\Controller\\GroupChatController',\n\n    // Route\n    'group-chat' => array(\n      'type'    => 'Segment',\n      'options' => array(\n        'route'    => '/group-chat[/:action[/:id]]',\n        'constraints' => array(\n          'action'     => '[a-zA-Z][a-zA-Z0-9_-]*',\n          'id'     => '[a-zA-Z0-9_-]*',\n        ),\n        'defaults' => array(\n          'controller' => 'Users\\Controller\\GroupChat',\n          'action'     => 'index',\n        ),\n      ),\n    ),\n    ```", "```php\n    <?php \n    $this->headScript()->appendScript(\n    '$(function() {\n        $( \"#btnRefresh\" )\n          .click(function( event ) {\n      document.getElementById(\"messageListFrame\").contentWindow.location.reload(true);\n       })\n      });', 'text/javascript');\n\n    $this->headStyle()->appendStyle('\n      #userName { width:100px; margin-top:10px; display: inline}\n      #messageText { width:700px; margin-top:10px;}\n    ');\n    ?>\n    <h3>Group Chat</h3>\n    <iframe src=\"<?php echo $this->url('users/group-chat', array( \n                            'action' =>  'messageList' \n                        )) ?>\" width=\"80%\" height=\"400px\" id=\"messageListFrame\"></iframe>\n\n    <?php \n    // Render the opening tag\n    echo $this->form()->openTag($form);\n\n    // ...loop through and render the form elements...\n    echo '<label id=\"userName\">'. $userName .': </label>';\n    foreach ($form as $element) {\n        echo $this->formElement($element);       // <-- Magic!\n        echo $this->formElementErrors($element);\n    }\n\n    // Render the closing tag\n    echo $this->form()->closeTag();\n    ?>\n    ```", "```php\n    public function messageListAction()\n    {\n      $userTable = $this->getServiceLocator()->get('UserTable');\n      $chatMessageTG = $this->getServiceLocator()->get('ChatMessagesTableGateway');\n      $chatMessages = $chatMessageTG->select();\n\n      $messageList = array();\n      foreach($chatMessages as $chatMessage) {\n        $fromUser = $userTable->getUser($chatMessage->user_id);\n        $messageData = array();\n        $messageData['user'] = $fromUser->name;\n        $messageData['time'] = $chatMessage->stamp;\n        $messageData['data'] = $chatMessage->message;\n        $messageList[] = $messageData;\n      }\n\n      $viewModel  = new ViewModel(array('messageList' => $messageList));\n      $viewModel->setTemplate('users/group-chat/message-list');\n      $viewModel->setTerminal(true);    \n      return $viewModel;\n    }\n    ```", "```php\n    <!DOCTYPE html>\n    <html lang=\"en\">\n    <body>\n    <section id=\"messages\" >\n      <?php foreach ($messageList as $mesg) : ?>\n      <div class=\"message\" style=\"clear:both;\">\n        <span class='msg-time'>\n      [<?php echo $this->escapeHtml($mesg['time']);?>]\n        </span> \n        <span class='msg-user'> \n      <?php echo $this->escapeHtml($mesg['user']);?>: \n        </span>\n        <span class='msg-data'>\n      <?php echo $this->escapeHtml($mesg['data']);?>\n        </span>\n      </div>\n      <?php endforeach; ?> \n    </section>\n    </body>\n    </html>\n    ```", "```php\n    protected function sendMessage($messageTest $fromUserId)\n    {\n      $chatMessageTG = $this->getServiceLocator()\n                        ->get('ChatMessagesTableGateway');\n      $data = array(\n        'user_id' => $fromUserId,\n        'message'  => $messageTest,\n        'stamp' => NULL\n      );\n      $chatMessageTG->insert($data);\n      return true;\n    }\n    ```", "```php\n    public function indexAction(\n    {\n      $user = $this->getLoggedInUser();\t\n      $request = $this->getRequest();\n      if ($request->isPost()) {\n        $messageTest = $request->getPost()->get('message');\n        $fromUserId = $user->id;\n        $this->sendMessage($messageTest, $fromUserId);\n        // to prevent duplicate entries on refresh\n        return $this->redirect()->toRoute('users/group-chat');\n      }\n\n      //Prepare Send Message Form\n      $form    = new \\Zend\\Form\\Form();\n\n      $form->add(array(\n        'name' => 'message',\n        'attributes' => array(\n          'type'  => 'text',\n          'id' => 'messageText',\n          'required' => 'required'\n        ),\n        'options' => array(\n          'label' => 'Message',\n        ),\n      ));\n\n      $form->add(array(\n              'name' => 'submit',\n              'attributes' => array(\n                  'type'  => 'submit',\n                  'value' => 'Send'\n              ),\n      ));\n\n      $form->add(array(\n        'name' => 'refresh',\n        'attributes' => array(\n          'type'  => 'button',\n          'id' => 'btnRefresh',\n          'value' => 'Refresh'\n        ),\n      ));\n\n      $viewModel  = new ViewModel(array('form' => $form, \n                                  'userName' => $user->name));\n      return $viewModel;\n    }\n    ```", "```php\n    use Zend\\Mail;\n    ```", "```php\n    protected function sendOfflineMessage($msgSubj, \n                             $msgText, $fromUserId, $toUserId)\n    {\n      $userTable = $this->getServiceLocator()\n                                   ->get('UserTable');\n\n      $fromUser = $userTable->getUser($fromUserId);\n      $toUser = $userTable->getUser($toUserId);\n\n      $mail = new Mail\\Message();\n      $mail->setFrom($fromUser->email, $fromUser->name);\n      $mail->addTo($toUser->email, $toUser->name);\n      $mail->setSubject($msgSubj);\n      $mail->setBody($msgText);\n\n      $transport = new Mail\\Transport\\Sendmail();\n      $transport->send($mail);\n\n      return true;\n    }\n    ```", "```php\n    'layout/myaccount' => __DIR__ . '/../view/layout/myaccount-layout.phtml',\n    ```", "```php\n    use Zend\\Mvc\\MvcEvent;\n    ```", "```php\n    public function onBootstrap($e)\n    {\n      $eventManager  = $e->getApplication()->getEventManager();\n      $moduleRouteListener = new ModuleRouteListener();\n      $moduleRouteListener->attach($eventManager);\n\n      $sharedEventManager = $eventManager->getSharedManager(); // The shared event manager\n      $sharedEventManager->attach(__NAMESPACE__, MvcEvent::EVENT_DISPATCH, function($e) {\n        $controller = $e->getTarget(); // The controller which is dispatched\n        $controllerName = $controller->getEvent()\n               ->getRouteMatch()->getParam('controller');\n        if (!in_array($controllerName, \n                  array('Users\\Controller\\Index', 'Users\\Controller\\Register', 'Users\\Controller\\Login'))) {\n          $controller->layout('layout/myaccount');\n        }\n      });\n    }\n    ```"]