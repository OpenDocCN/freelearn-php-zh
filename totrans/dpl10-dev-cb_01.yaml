- en: '1'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '1'
- en: Up and Running with Drupal
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 快速启动Drupal
- en: In this chapter, we will walk through how to create a new Drupal site and the
    system requirements for running Drupal. We’ll also walk through running the Drupal
    site locally using modern local development tools based on Docker.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍如何创建新的Drupal网站以及运行Drupal的系统要求。我们还将介绍使用基于Docker的现代本地开发工具运行Drupal网站。
- en: Then, we’ll cover adding and managing module and theme extensions with the site
    running, as well as managing your Drupal code base in Git version control and
    finally deploying that Drupal site. By the end of this chapter, you will know
    how to create a Drupal site, run it locally on your machine, and add modules and
    themes to that Drupal site. You will also understand how to manage the Drupal
    code base in version control and deploy the Drupal site. This chapter will lay
    the foundations for working with the rest of the chapters in this book, and experimenting
    on your own with Drupal.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将介绍如何在网站运行时添加和管理模块和主题扩展，以及如何在Git版本控制中管理您的Drupal代码库，最后部署该Drupal网站。到本章结束时，您将了解如何创建Drupal网站，在您的机器上本地运行它，并向该Drupal网站添加模块和主题。您还将了解如何管理版本控制中的Drupal代码库并部署Drupal网站。本章将为本书其余章节的工作奠定基础，并让您自己尝试使用Drupal进行实验。
- en: 'In this chapter, we are going to cover the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍以下主题：
- en: Creating a new Drupal code base for a new site
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为新网站创建新的Drupal代码库
- en: Running a Drupal site locally
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在本地运行Drupal网站
- en: Using Drush to manage Drupal
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Drush管理Drupal
- en: Adding and managing modules and themes with Composer
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Composer添加和管理模块和主题
- en: Using version control with your Drupal code base
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用版本控制管理您的Drupal代码库
- en: Successfully deploying your Drupal site
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 成功部署您的Drupal网站
- en: Technical requirements
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: This chapter will help you start working with Drupal locally on your computer.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将帮助您开始在您的计算机上本地使用Drupal。
- en: 'You will require the following:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 您将需要以下内容：
- en: PHP 8.1 or higher
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PHP 8.1或更高版本
- en: Docker and DDEV installed on your machine
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在您的机器上安装了Docker和DDEV
- en: Composer, the PHP package management tool
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Composer，PHP包管理工具
- en: Docker, for running local environments
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker，用于运行本地环境
- en: An editor, such as Visual Studio Code or PhpStorm
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个编辑器，例如Visual Studio Code或PhpStorm
- en: Important note
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Go to the Composer documentation to learn how to install Composer globally on
    your system.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 前往Composer文档学习如何在您的系统上全局安装Composer。
- en: 'Linux/Unix/macOS: [https://getcomposer.org/doc/00-intro.md#installation-linux-unix-osx](https://getcomposer.org/doc/00-intro.md#installation-linux-unix-osx
    )'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 'Linux/Unix/macOS: [https://getcomposer.org/doc/00-intro.md#installation-linux-unix-osx](https://getcomposer.org/doc/00-intro.md#installation-linux-unix-osx)'
- en: 'Windows: [https://getcomposer.org/doc/00-intro.md#installation-windows](https://getcomposer.org/doc/00-intro.md#installation-windows
    )'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 'Windows: [https://getcomposer.org/doc/00-intro.md#installation-windows](https://getcomposer.org/doc/00-intro.md#installation-windows)'
- en: Creating a Drupal site
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建Drupal网站
- en: Create a new Drupal site using the **Composer** project template and run the
    **Quick Start** command to create a preview site. The instructions provided in
    this section are based on the recommended installation instructions at [https://www.drupal.org/download](https://www.drupal.org/download).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 使用**Composer**项目模板创建新的Drupal网站，并运行**快速启动**命令以创建预览网站。本节中提供的说明基于[https://www.drupal.org/download](https://www.drupal.org/download)上的推荐安装说明。
- en: Getting ready
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: The **Quick Start** command uses SQLite as the database for Drupal. With most
    operating system PHP installations, this is readily available and installed. If
    SQLite is not available, the installation script will error. If this happens,
    that is okay! In *Running your Drupal site locally*, we will run Drupal using
    a local development environment with a database.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**快速启动**命令使用SQLite作为Drupal的数据库。在大多数操作系统的PHP安装中，这通常是现成的，已经安装。如果SQLite不可用，安装脚本将报错。如果发生这种情况，没关系！在*本地运行您的Drupal网站*中，我们将使用带有数据库的本地开发环境运行Drupal。'
- en: 'Drupal also requires several PHP extensions. These are typically available
    with most PHP distributions. The up-to-date list of required PHP extensions can
    be found online: [https://www.drupal.org/docs/system-requirements/php-requirements#extensions](https://www.drupal.org/docs/system-requirements/php-requirements#extensions).'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Drupal还需要几个PHP扩展。这些通常在大多数PHP发行版中可用。所需PHP扩展的最新列表可以在网上找到：[https://www.drupal.org/docs/system-requirements/php-requirements#extensions](https://www.drupal.org/docs/system-requirements/php-requirements#extensions)。
- en: How to do it...
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Open a terminal and navigate where you would like to create your new Drupal
    site.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端，导航到您想要创建新Drupal网站的位置。
- en: 'Use the `create-project` command to create a new Drupal site in the `mysite`
    directory:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `create-project` 命令在 `mysite` 目录中创建一个新的 Drupal 站点：
- en: '[PRE0]'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Important note
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: If your PHP installation is missing any required extensions for Drupal, this
    command will fail. The `Composer` command output will explain what extensions
    are missing.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的 PHP 安装缺少 Drupal 所需的任何扩展，此命令将失败。`Composer` 命令输出将解释缺少哪些扩展。
- en: 'Move into the newly created `mysite` directory, which contains the Drupal site’s
    code base:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到新创建的 `mysite` 目录，其中包含 Drupal 站点的代码库：
- en: '[PRE1]'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Run the **Quick Start** command to install a sample Drupal site using the **Umami**
    **Maganize** demo:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行 **快速开始** 命令，使用 **Umami** **Maganize** 演示安装一个示例 Drupal 站点：
- en: '[PRE2]'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Once the installation script has finished, your browser will open your Drupal
    site. If your browser does not open, a login link will be printed in the terminal:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦安装脚本完成，您的浏览器将打开您的 Drupal 站点。如果您的浏览器没有打开，终端将打印一个登录链接：
- en: '![Figure 1.1 – Output from running the Quick Start command](img/Figure_1.1_B18548.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.1 – 运行快速开始命令的输出](img/Figure_1.1_B18548.jpg)'
- en: Figure 1.1 – Output from running the Quick Start command
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.1 – 运行快速开始命令的输出
- en: Press *Ctrl* + *C* to exit the **Quick Start** server at any time.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按 *Ctrl* + *C* 退出 **快速开始** 服务器。
- en: Next, open `web/sites/default/settings.php` in your editor. We will modify this
    file to modify the configuration synchronization directory and add local setting
    overrides.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在您的编辑器中打开 `web/sites/default/settings.php`。我们将修改此文件以修改配置同步目录并添加本地设置覆盖。
- en: Set the configuration synchronization directory (where Drupal’s site configuration
    can be exported) to `../config`. The path is relative to the web directory.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将配置同步目录（Drupal 站点配置可以导出的位置）设置为 `../config`。路径相对于 web 目录。
- en: 'The installer from the **Quick Start** command will have generated a default
    value. At the bottom of your file, find a line similar to the following:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 快速开始命令的安装程序将生成一个默认值。在文件底部，找到类似以下的一行：
- en: '[PRE3]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Replace it with the following line:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 用以下行替换它：
- en: '[PRE4]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This ensures your exported Drupal configuration is not within the `web` document
    root folder.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这确保了您导出的 Drupal 配置不在 `web` 文档根文件夹中。
- en: 'At the bottom of your file, add the following snippet of code to allow the
    creation of a `settings.local.php` file to override the settings in the `settings.php`
    file in different environments:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文件底部，添加以下代码片段以允许创建 `settings.local.php` 文件来覆盖 `settings.php` 文件在不同环境中的设置：
- en: '[PRE5]'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: This checks whether there is also a `settings.local.php` file alongside your
    `settings.php` file and includes it if it exists. By using local settings files,
    you can add sensible defaults to your Drupal settings file but have per-environment
    configurations and database connection settings.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这检查是否也有一个 `settings.local.php` 文件与您的 `settings.php` 文件一起存在，如果存在则包含它。通过使用本地设置文件，您可以在
    Drupal 设置文件中添加合理的默认值，但具有每个环境的配置和数据库连接设置。
- en: With that, you have set up a Drupal code base and a sample development site
    that we will use throughout this chapter and the rest of this book.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过这样，你已经设置了一个 Drupal 代码库和一个示例开发站点，我们将在这个章节和本书的其余部分中使用它。
- en: How it works…
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Composer allows developers to create new projects from existing packages. The
    Drupal community provides the `drupal/recommended-project` package as scaffolding
    for a Drupal site. When running `create-project`, it copies the `drupal/recommended-project`
    package and installs our dependencies for us, making our copy of the package to
    use on our own.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: Composer 允许开发者从现有包创建新项目。Drupal 社区提供了 `drupal/recommended-project` 包作为 Drupal
    站点的脚手架。当运行 `create-project` 时，它会复制 `drupal/recommended-project` 包并为我们安装依赖项，使我们的包副本可用于我们自己的。
- en: Drupal has a configuration management system that allows exporting and importing
    configuration. This allows you to make configuration changes locally and push
    them up into production, without having to make changes on your live site. That
    is what `config_sync_directory` is for; it will be covered in more detail in the
    *Managing your Drupal code with version control* and *Successfully deploying your
    Drupal* *site* recipes.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: Drupal 有一个配置管理系统，允许导出和导入配置。这允许你在本地进行配置更改并将它们推送到生产环境，而无需在您的实时站点上进行更改。这就是 `config_sync_directory`
    的用途；它将在 *使用版本控制管理您的 Drupal 代码* 和 *成功部署您的 Drupal 站点* 菜单中更详细地介绍。
- en: The **Quick Start** command was added in **Drupal 8.6** to create a development
    environment for Drupal for new developers quickly. It installs Drupal programmatically,
    starts PHP’s built-in web server, and uses SQLite for database access.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**快速开始**命令是在 **Drupal 8.6** 中添加的，用于快速为新开发者创建 Drupal 的开发环境。它以编程方式安装 Drupal，启动
    PHP 内置的 web 服务器，并使用 SQLite 进行数据库访问。'
- en: The **Quick Start** command is also re-entrant. If you rerun the command, it
    will use the existing SQLite database file. This allows you to run a development
    environment with one command quickly. We will cover running a full-fledged environment
    in the *Running your Drupal site* *locally* recipe.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '**快速开始**命令也是可重入的。如果您重新运行该命令，它将使用现有的 SQLite 数据库文件。这允许您快速运行开发环境。我们将在“在本地运行您的
    Drupal 网站”菜谱中介绍如何运行完整的环境。'
- en: There’s more…
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容...
- en: While `drupal/recommended-project` is the primary way to create a new Drupal
    site, there are other options. Other project templates include a community alternative
    and various distribution templates, and various agencies that work with Drupal
    have provided their own (internally and publicly.)
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 `drupal/recommended-project` 是创建新 Drupal 网站的主要方式，但还有其他选项。其他项目模板包括社区替代方案和各种发行版模板，以及与
    Drupal 合作的各种机构已经提供了他们自己的（内部和公开的。）
- en: Community Composer project template
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 社区 Composer 项目模板
- en: Before `drupal/recommended project`, Drupal did not have a standard Composer
    project template. The community drove this initiative forward and still maintains
    a more opinionated Drupal project template. The project can be found at [https://github.com/drupal-composer/drupal-project](https://github.com/drupal-composer/drupal-project).
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `drupal/recommended project` 之前，Drupal 没有一个标准的 Composer 项目模板。社区推动了这一倡议，并仍然维护了一个更具观点的
    Drupal 项目模板。该模板可以在 [https://github.com/drupal-composer/drupal-project](https://github.com/drupal-composer/drupal-project)
    找到。
- en: 'The project adds the following enhancements:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 该项目增加了以下增强功能：
- en: Support for environment files and environment variables
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对环境文件和环境变量的支持
- en: Patching support for dependencies
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对依赖项的修补支持
- en: Drush (while a de facto tool, it is not provided by the recommended project
    template)
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Drush（虽然是一个事实上的工具，但不是由推荐项目模板提供的）
- en: Drupal distribution templates
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Drupal 发行版模板
- en: 'Drupal has a concept of installation profiles, often referred to as distributions.
    They are referred to as distributions because they provide an opinionated build
    of Drupal. There are several distribution projects templates available:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: Drupal 有一个概念叫做安装配置文件，通常被称为发行版。它们被称为发行版，因为它们提供了一个具有观点的 Drupal 构建。有几个发行版项目模板可供选择：
- en: '**Open Social** is a community engagement software built on top of Drupal:
    [https://github.com/goalgorilla/social_template/](https://github.com/goalgorilla/social_template/
    )'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Open Social** 是一个基于 Drupal 的社区参与软件：[https://github.com/goalgorilla/social_template/](https://github.com/goalgorilla/social_template/
    )'
- en: '**Commerce Kickstart**, a preconfigured eCommerce store built on top of Drupal
    with Commerce: [https://github.com/centarro/commerce-kickstart-project](https://github.com/centarro/commerce-kickstart-project
    )'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Commerce Kickstart**，一个基于 Drupal 和 Commerce 的预配置电子商务商店：[https://github.com/centarro/commerce-kickstart-project](https://github.com/centarro/commerce-kickstart-project
    )'
- en: '**Contenta CMS**, an API-first decoupled CMS built on top of Drupal: [https://github.com/contentacms/contenta_jsonapi_project](https://github.com/contentacms/contenta_jsonapi_project
    )'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Contenta CMS**，一个基于 Drupal 的 API 首先解耦 CMS：[https://github.com/contentacms/contenta_jsonapi_project](https://github.com/contentacms/contenta_jsonapi_project
    )'
- en: See also
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: 'Composer documentation: [https://getcomposer.org/doc/](https://getcomposer.org/doc/
    )'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Composer 文档：[https://getcomposer.org/doc/](https://getcomposer.org/doc/ )
- en: Running your Drupal site locally
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在本地运行您的 Drupal 网站
- en: To work with Drupal, you need to have a local development environment. The local
    development environment should be able to help you mimic your production environments,
    such as having access to specific PHP versions, database versions, Redis, and
    other services.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 要与 Drupal 一起工作，您需要一个本地开发环境。本地开发环境应该能够帮助您模拟您的生产环境，例如访问特定的 PHP 版本、数据库版本、Redis
    以及其他服务。
- en: To achieve this, we will be using **Docker**. We will not be interacting directly
    with Docker but through a tool called **DDEV**. DDEV is an abstraction on top
    of Docker that provides sensible defaults for running a Drupal site locally yet
    the flexibility to extend and add additional services.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现这一点，我们将使用 **Docker**。我们不会直接与 Docker 交互，而是通过一个名为 **DDEV** 的工具。DDEV 是 Docker
    之上的一个抽象，它为在本地运行 Drupal 网站提供了合理的默认设置，同时提供了扩展和添加额外服务的灵活性。
- en: DDEV is similar to **Laravel’s Sail** but supports various PHP projects that
    originated from the Drupal community.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: DDEV 与 **Laravel 的 Sail** 类似，但支持来自 Drupal 社区的各种 PHP 项目。
- en: Getting ready
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'You will need to install Docker:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要安装 Docker：
- en: 'macOS and Windows require the use of Docker Desktop since containers do not
    run natively on either operating system: [https://www.docker.com/products/docker-desktop](https://www.docker.com/products/docker-desktop
    )'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: macOS 和 Windows 需要使用 Docker Desktop，因为容器在这两种操作系统上都不是本地运行的：[https://www.docker.com/products/docker-desktop](https://www.docker.com/products/docker-desktop)
- en: 'Linux runs Docker natively; it is best to see DDEV’s curated installation steps:
    [https://ddev.readthedocs.io/en/stable/users/docker_installation/#linux-installation-docker-and-docker-compose](https://ddev.readthedocs.io/en/stable/users/docker_installation/#linux-installation-docker-and-docker-compose
    )'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux 本地运行 Docker；最好查看 DDEV 的精选安装步骤：[https://ddev.readthedocs.io/en/stable/users/docker_installation/#linux-installation-docker-and-docker-compose](https://ddev.readthedocs.io/en/stable/users/docker_installation/#linux-installation-docker-and-docker-compose)
- en: 'Next, you can install DDEV:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您可以安装 DDEV：
- en: '**macOS and Linux**: Installation is done through the Homebrew package manager:
    [https://ddev.readthedocs.io/en/stable/#homebrew-macoslinux](https://ddev.readthedocs.io/en/stable/#homebrew-macoslinux
    )'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**macOS 和 Linux**：通过 Homebrew 软件包管理器进行安装：[https://ddev.readthedocs.io/en/stable/#homebrew-macoslinux](https://ddev.readthedocs.io/en/stable/#homebrew-macoslinux)'
- en: '**Windows**: Windows requires WSL2 and has detailed instructions: [https://ddev.readthedocs.io/en/stable/#installation-or-upgrade-windows-wsl2](https://ddev.readthedocs.io/en/stable/#installation-or-upgrade-windows-wsl2
    )'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Windows**：Windows 需要 WSL2，并提供了详细的说明：[https://ddev.readthedocs.io/en/stable/#installation-or-upgrade-windows-wsl2](https://ddev.readthedocs.io/en/stable/#installation-or-upgrade-windows-wsl2)'
- en: 'The DDEV installation guide covers how to install Docker and itself for each
    operating system in depth: [https://ddev.readthedocs.io/en/stable/#installation](https://ddev.readthedocs.io/en/stable/#installation).'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: DDEV 安装指南详细介绍了如何在每种操作系统上安装 Docker 和 DDEV：[https://ddev.readthedocs.io/en/stable/#installation](https://ddev.readthedocs.io/en/stable/#installation)。
- en: How to do it…
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: Make sure Docker is running.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保 Docker 正在运行。
- en: Open a terminal and navigate to your Drupal code base.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端并导航到您的 Drupal 代码库。
- en: 'Run the `config` command to begin the setup:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行 `config` 命令开始设置：
- en: '[PRE13]'
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The first prompt is to choose a project name. Use the default name, inferred
    from the current directory name, or provide a custom one. Press *Enter* to continue.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一个提示是选择项目名称。使用默认名称，该名称是从当前目录名称推断出来的，或者提供自定义名称。按 *Enter* 继续操作。
- en: Select the document root for the Drupal site. DDEV’s default value is automatically
    detected. Press *Enter* to use the default value of `web`.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 Drupal 网站的文档根目录。DDEV 的默认值会自动检测。按 *Enter* 使用默认值 `web`。
- en: The next prompt is for the project type. DDEV provides platform detection and
    defaults to `drupal10`. Press *Enter* to select it.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一个提示是项目类型。DDEV 提供平台检测，默认为 `drupal10`。按 *Enter* 选择它。
- en: 'The DDEV setup is now complete! We can start the local environment by using
    the **Start** command:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: DDEV 设置现在已完成！我们可以通过使用 **启动** 命令来启动本地环境：
- en: '[PRE14]'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Access the Drupal site with the `launch` command, which will bring us to the
    interactive site installer:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `launch` 命令访问 Drupal 网站，这将带我们到交互式网站安装程序：
- en: '[PRE15]'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Finish installing Drupal by pressing **Save and continue** on the first two
    forms.
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在第一个两个表单上按 **保存并继续** 完成安装 Drupal。
- en: Once the installation has finished, fill out the site’s configuration form and
    press **Save**.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装完成后，填写网站的配置表单并按 **保存**。
- en: Your Drupal site is now running!
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您的 Drupal 网站现在正在运行！
- en: How it works…
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: DDEV allows you to build a customizable local development environment without
    having to be a Docker pro but still allows you to leverage Docker specifics. DDEV
    is a layer above the Docker Compose tool and is used to run multi-container Docker
    applications. It generates the Compose file and runs `docker-compose` commands
    for you. This makes it perfect for sharing with teams, as it takes away any intricacies
    of Docker.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: DDEV 允许您构建可定制的本地开发环境，无需成为 Docker 专家，但仍可利用 Docker 的特定功能。DDEV 位于 Docker Compose
    工具之上，用于运行多容器 Docker 应用程序。它为您生成 Compose 文件并运行 `docker-compose` 命令。这使得它非常适合团队共享，因为它消除了
    Docker 的复杂性。
- en: The configuration for your DDEV site is located in the `config.yaml` file in
    the `.ddev` directory of your Drupal directory. The PHP version, database type,
    version, and more can be customized in this configuration file.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 您的 DDEV 网站配置位于 Drupal 目录的 `.ddev` 目录中的 `config.yaml` 文件中。在此配置文件中可以自定义 PHP 版本、数据库类型、版本等。
- en: 'When running Composer or other commands, you will need to SSH into the web
    application container. This can be achieved with the `ssh` command:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 当运行 Composer 或其他命令时，您需要通过 SSH 登录到 Web 应用程序容器。这可以通过 `ssh` 命令实现：
- en: '[PRE16]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: By SSHing into the web application, you can run commands directly in your local
    environment.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 SSH 登录到 Web 应用程序，您可以直接在本地环境中运行命令。
- en: There’s more…
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容...
- en: Multiple options can be changed with DDEV and other tools that are similar to
    DDEV.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 DDEV 和其他类似 DDEV 的工具，可以更改多个选项。
- en: Changing the site’s PHP version
  id: totrans-115
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更改网站的 PHP 版本
- en: To modify the PHP version used on your project, edit `.ddev/config.yaml` and
    change the `php_version` property. The **Drupal 10** project type defaults to
    **PHP 8.1**, which is the minimum required PHP version for Drupal. But you may
    choose to use newer PHP versions as they are released and supported by Drupal.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 要修改项目中使用的 PHP 版本，编辑 `.ddev/config.yaml` 并更改 `php_version` 属性。**Drupal 10** 项目类型默认为
    **PHP 8.1**，这是 Drupal 所需的最小 PHP 版本。但您可以选择使用更新的 PHP 版本，因为它们被 Drupal 发布并支持。
- en: Changing the database version or type
  id: totrans-117
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更改数据库版本或类型
- en: 'DDEV supports MySQL and MariaDB databases, but it does not support Postgres
    (although it is supported by Drupal). By default, DDEV uses **MariaDB 10.3**:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: DDEV 支持 MySQL 和 MariaDB 数据库，但不支持 Postgres（尽管它被 Drupal 支持）。默认情况下，DDEV 使用 **MariaDB
    10.3**：
- en: To change your MariaDB version, edit `.ddev/config.yaml` and change the `mariadb_version`
    property to your desired version
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要更改您的 MariaDB 版本，编辑 `.ddev/config.yaml` 并将 `mariadb_version` 属性更改为所需的版本
- en: 'To use MySQL instead of MariaDB, edit `.ddev/config.yaml` and replace the `mariadb_version`
    property with `mysql_version: "8.0"`'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '要使用 MySQL 而不是 MariaDB，编辑 `.ddev/config.yaml` 并将 `mariadb_version` 属性替换为 `mysql_version:
    "8.0"`'
- en: You cannot change database types or downgrade database versions once there is
    data in the database. You must first delete the project’s database using `ddev
    delete`.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦数据库中有数据，您就不能更改数据库类型或降级数据库版本。您必须首先使用 `ddev delete` 删除项目的数据库。
- en: 'Check the online documentation to learn what versions of each database type
    are supported: [https://ddev.readthedocs.io/en/stable/users/extend/database_types/](https://ddev.readthedocs.io/en/stable/users/extend/database_types/).'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 查看在线文档以了解每种数据库类型支持哪些版本：[https://ddev.readthedocs.io/en/stable/users/extend/database_types/](https://ddev.readthedocs.io/en/stable/users/extend/database_types/)
- en: Adding custom services
  id: totrans-123
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加自定义服务
- en: DDEV allows you to add custom services by writing Docker Compose files in the
    `.ddev` directory. DDEV will aggregate all Docker Compose files in the `.ddev`
    directory that follow the naming convention of `docker-compose.*.yml`, where `*`
    is a unique word.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: DDEV 允许您通过在 `.ddev` 目录中编写 Docker Compose 文件来添加自定义服务。DDEV 会聚合 `.ddev` 目录中所有遵循
    `docker-compose.*.yml` 命名约定的 Docker Compose 文件，其中 `*` 是一个唯一的单词。
- en: 'For example, to add Redis, we would create a file called `docker-compose.redis.yaml`
    in the `.ddev` directory. It would contain the following Docker Compose manifest,
    which defines the Redis service and links it to the web application service:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，要添加 Redis，我们会在 `.ddev` 目录中创建一个名为 `docker-compose.redis.yaml` 的文件。它将包含以下 Docker
    Compose 清单，该清单定义了 Redis 服务并将其链接到 Web 应用程序服务：
- en: '[PRE17]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: The documentation for additional services can be found at [https://ddev.readthedocs.io/en/stable/users/extend/additional-services/](https://ddev.readthedocs.io/en/stable/users/extend/additional-services/).
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 有关附加服务的文档可以在 [https://ddev.readthedocs.io/en/stable/users/extend/additional-services/](https://ddev.readthedocs.io/en/stable/users/extend/additional-services/)
    找到。
- en: Running Composer with DDEV
  id: totrans-128
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 DDEV 运行 Composer
- en: DDEV allows you to run Composer inside of the web application container. This
    is beneficial if you have a different version of PHP on your host machine or have
    missing extensions required by the project that exists in the web application
    container.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: DDEV 允许您在 Web 应用程序容器内运行 Composer。如果您在主机机器上使用不同的 PHP 版本，或者项目在 Web 应用程序容器中需要缺少的扩展，这将非常有用。
- en: 'To run Composer commands, use `ddev composer`. For example, the following would
    add a new module to a Drupal site:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行 Composer 命令，请使用 `ddev composer`。例如，以下命令将向 Drupal 网站添加一个新模块：
- en: '[PRE18]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: You can provide any Composer commands and arguments.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以提供任何 Composer 命令和参数。
- en: See also
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: '**Awesome DDEV**: A collection of blogs, tutorials, tips, and tricks for DDEV:
    [https://github.com/drud/awesome-ddev](https://github.com/drud/awesome-ddev )'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**出色的 DDEV**：DDEV 的博客、教程、技巧和窍门的集合：[https://github.com/drud/awesome-ddev](https://github.com/drud/awesome-ddev)'
- en: '**DDEV Config**: A collection of contributed recipes and snippets for customizing
    DDEV sites: [https://github.com/drud/ddev-contrib](https://github.com/drud/ddev-contrib
    )'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**DDEV配置**：一组用于自定义DDEV网站的贡献食谱和代码片段：[https://github.com/drud/ddev-contrib](https://github.com/drud/ddev-contrib)'
- en: '**Official local development** **guide**: [https://www.drupal.org/docs/official_docs/en/_local_development_guide.html](https://www.drupal.org/docs/official_docs/en/_local_development_guide.html
    )'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**官方本地开发** **指南**：[https://www.drupal.org/docs/official_docs/en/_local_development_guide.html](https://www.drupal.org/docs/official_docs/en/_local_development_guide.html)'
- en: Using the Drush command-line tool
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Drush命令行工具
- en: '**Drush** is a command-line tool that interacts with Drupal to perform actions
    such as installing Drupal or performing various maintenance tasks. In this recipe,
    we will add Drush to our Drupal site and use it to install the Drupal site.'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '**Drush**是一个与Drupal交互的命令行工具，用于执行安装Drupal或执行各种维护任务等操作。在本食谱中，我们将向我们的Drupal网站添加Drush，并使用它来安装Drupal网站。'
- en: Warning
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: This example uses commands that will cause data loss if you have an existing
    installed site.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 此示例使用会导致现有已安装网站数据丢失的命令。
- en: Getting ready
  id: totrans-141
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: When using DDEV, you must SSH into the web application container using `ddev
    ssh` to interact with Drush.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用DDEV时，您必须使用`ddev ssh`命令SSH到Web应用程序容器中，以与Drush交互。
- en: How to do it…
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Open a terminal and navigate to your Drupal code base.
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端并导航到您的Drupal代码库。
- en: 'Add `require` command:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加`require`命令：
- en: '[PRE19]'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Execute the `site:install` command to install Drupal:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行`site:install`命令以安装Drupal：
- en: '[PRE20]'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Once the installation has finished, use the `user:login` command to generate
    a one-time login link to access the Drupal site. Your browser should automatically
    open if you do not click the returned link:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装完成后，使用`user:login`命令生成一个一次性登录链接以访问Drupal网站。如果您没有点击返回的链接，浏览器应该会自动打开：
- en: '[PRE21]'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Install the `pm:enable` command. Press *Enter* to confirm this to install **Layout
    Builder** and its dependencies:'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装`pm:enable`命令。按*Enter*键确认以安装**布局构建器**及其依赖项：
- en: '[PRE22]'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Rebuild Drupal’s caches using the `cache:rebuild` command:'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`cache:rebuild`命令重建Drupal的缓存：
- en: '[PRE23]'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: How it works…
  id: totrans-155
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: '**Drush** has been part of the Drupal community since **Drupal 4.7** and has
    become a must-have tool for every Drupal developer. The project can bootstrap
    Drupal on the command line and perform interactions with a site.'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '**Drush**自**Drupal 4.7**以来一直是Drupal社区的一部分，并已成为每个Drupal开发者的必备工具。该项目可以在命令行上引导Drupal，并执行与网站的交互。'
- en: 'Drush has a plethora of commands, which can be found by running the `list`
    command:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: Drush有大量的命令，可以通过运行`list`命令找到：
- en: '[PRE24]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Modules can provide their own Drush commands as well. As you add modules to
    your Drupal sites, new commands may be available. In the *Extending Drupal with
    custom code* recipe, we will cover creating your own Drush command.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 模块也可以提供自己的Drush命令。随着您向Drupal网站添加模块，可能会出现新的命令。在*使用自定义代码扩展Drupal*的食谱中，我们将介绍如何创建自己的Drush命令。
- en: There’s more…
  id: totrans-160
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多...
- en: There is a plethora of Drush commands and ways that Drush can make working with
    your Drupal site much easier.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: Drush有大量的命令和方式，可以使您与Drupal网站的工作变得更加容易。
- en: Running Drush with DDEV
  id: totrans-162
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用DDEV运行Drush
- en: 'DDEV provides a way to run Drush without using the `ssh` command to SSH into
    the web application container, just like it does for Composer. To run Drush commands
    with DDEV, use `ddev drush`. For example, the following command would generate
    a link to log into your Drupal site:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: DDEV提供了一种方法，可以在不使用`ssh`命令SSH到Web应用程序容器的情况下运行Drush，就像它对Composer所做的那样。要使用DDEV运行Drush命令，请使用`ddev
    drush`。例如，以下命令将生成一个登录您的Drupal网站的链接：
- en: '[PRE25]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: You can provide any Drush command and arguments.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以提供任何Drush命令和参数。
- en: Checking whether there are pending security updates
  id: totrans-166
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 检查是否有挂起的更新
- en: 'It is important to keep your installed modules and themes up to date, especially
    if there are security releases. Drush provides the `pm:security` command, which
    checks for any pending security releases for installed modules or themes:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 保持已安装的模块和主题更新很重要，尤其是如果存在安全发布。Drush提供了`pm:security`命令，该命令检查已安装模块或主题的任何挂起的更新：
- en: '[PRE26]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Exporting or importing a SQL file to your Drupal database
  id: totrans-169
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 导出或导入SQL文件到您的Drupal数据库
- en: Drush has a variety of SQL commands for interacting with your database directly.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: Drush提供了一系列SQL命令，可以直接与您的数据库交互。
- en: 'The `sql:dump` command allows you to create a database dump that can be imported
    into another database. By default, the SQL statements are printed unless the `--result-file`
    option is passed. The file path is relative to Drupal’s document root (the `web`
    directory):'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '`sql:dump`命令允许你创建一个可以导入到另一个数据库的数据库备份。默认情况下，除非传递了`--result-file`选项，否则将打印SQL语句。文件路径相对于Drupal的文档根（`web`目录）：'
- en: '[PRE27]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '`sql:cli` allows you to execute SQL statements, including importing a SQL dump
    file. For example, you can use this command to import a SQL dump from your production
    Drupal database into your local development environment:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '`sql:cli`允许你执行SQL语句，包括导入SQL备份文件。例如，你可以使用此命令将生产Drupal数据库的SQL备份导入到本地开发环境中：'
- en: '[PRE28]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: See also
  id: totrans-175
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: 'Drush home page: [https://www.drush.org/latest/](https://www.drush.org/latest/
    )'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Drush主页：[https://www.drush.org/latest/](https://www.drush.org/latest/)
- en: Adding and managing module and theme extensions
  id: totrans-177
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加和管理模块和主题扩展
- en: Drupal is extremely versatile due to its composable design and its large ecosystem
    of contributed modules and themes. Composer is used for installing and upgrading
    extensions on your Drupal site using its `require` and `update` commands. In this
    recipe, we will add the popular **Pathauto** module ([https://www.drupal.org/project/pathauto](https://www.drupal.org/project/pathauto))
    and the **Barrio** theme ([https://www.drupal.org/project/bootstrap_barrio](https://www.drupal.org/project/bootstrap_barrio)),
    a Bootstrap 5 theme.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 由于其可组合的设计和庞大的贡献模块和主题生态系统，Drupal极其灵活。Composer用于通过其`require`和`update`命令在你的Drupal站点上安装和升级扩展。在本食谱中，我们将添加流行的**Pathauto**模块([https://www.drupal.org/project/pathauto](https://www.drupal.org/project/pathauto))和**Barrio**主题([https://www.drupal.org/project/bootstrap_barrio](https://www.drupal.org/project/bootstrap_barrio))，一个Bootstrap
    5主题。
- en: How to do it…
  id: totrans-179
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: Open a terminal and navigate to your Drupal code base.
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端并导航到你的Drupal代码库。
- en: 'First, we will add the `Pathauto` module using the `require` command:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们将使用`require`命令添加`Pathauto`模块：
- en: '[PRE29]'
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Composer will output some data as it begins resolving the `Pathauto` package.
    You will notice that the module dependencies for `Pathauto` were also downloaded:
    `Token` and `Chaos Tools`.'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 当Composer开始解析`Pathauto`包时，它将输出一些数据。你会注意到`Pathauto`的模块依赖项也被下载了：`Token`和`Chaos
    Tools`。
- en: The modules will be installed into the `web/modules/contrib` directory.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 模块将被安装到`web/modules/contrib`目录。
- en: 'Next, we will add the Barrio theme:'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将添加Barrio主题：
- en: '[PRE30]'
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: This will download the Barrio theme and place it into the `web/themes/contrib`
    directory.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 这将下载Barrio主题并将其放置到`web/themes/contrib`目录。
- en: 'Now, we will install the `Pathauto` module using the Drush `pm:enable` command:'
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将使用Drush的`pm:enable`命令安装`Pathauto`模块：
- en: '[PRE31]'
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: This Drush command will prompt us to install `Pathauto` with the required module
    dependencies (`Chaos Tools` and `Token`) as well, with a default option of `yes`.
    Hit *Enter* to continue.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 此Drush命令将提示我们安装`Pathauto`以及所需的模块依赖项（`Chaos Tools`和`Token`），默认选项为`yes`。按*Enter*键继续。
- en: 'The command will return the following:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 命令将返回以下内容：
- en: '[PRE32]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Next, we will enable the Barrio theme using the Drush `theme:enable` command
    and set it as the default theme using the `config:set` command:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将使用Drush的`theme:enable`命令启用Barrio主题，并使用`config:set`命令将其设置为默认主题：
- en: '[PRE33]'
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'This only enables the theme; it does not make it the default theme used by
    your Drupal site. To make it the default theme, we need to modify the site’s configuration
    with the `config:set` command:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 这仅启用主题；它不会使其成为你的Drupal站点使用的默认主题。要将其设置为默认主题，我们需要使用`config:set`命令修改站点的配置：
- en: '[PRE34]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: This modifies the `system.theme` config so that it uses Barrio as the `default`
    theme setting.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 这修改了`system.theme`配置，使其使用Barrio作为`default`主题设置。
- en: 'Let’s assume there was a new release of `Pathauto` that we needed to update.
    We can use the `update` command to update our package:'
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 假设我们需要更新`Pathauto`的新版本。我们可以使用`update`命令来更新我们的包：
- en: '[PRE35]'
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: This will update the `Pathauto` module to the next version. However, it will
    not update its dependencies – that is, `Chaos Tools` or `Token`. Using the `--with-dependencies`
    option ensures direct dependencies for `Pathauto` are also updated.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 这将更新`Pathauto`模块到下一个版本。然而，它不会更新其依赖项——也就是说，`Chaos Tools`或`Token`。使用`--with-dependencies`选项确保`Pathauto`的直接依赖项也被更新。
- en: 'Finally, we will cover removing modules that we have added to the Drupal site.
    First, we must *uninstall* the module from Drupal before we remove it from the
    code base:'
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们将介绍如何从Drupal站点中删除我们添加的模块。首先，在从代码库中删除之前，我们必须从Drupal中**卸载**该模块：
- en: '[PRE36]'
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '[PRE37]'
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Notice how `Chaos Tools` and `Token` are added as arguments? These modules were
    added to our code base and installed as dependencies for `Pathauto`. We need to
    uninstall these modules as well before removing `Pathauto`.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 注意 `Chaos Tools` 和 `Token` 是如何作为参数添加的？这些模块被添加到我们的代码库中，并作为 `Pathauto` 的依赖项安装。在移除
    `Pathauto` 之前，我们还需要卸载这些模块。
- en: 'Next, we can use the `remove` command to remove `Pathauto` from the code base:'
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们可以使用 `remove` 命令从代码库中移除 `Pathauto`：
- en: '[PRE38]'
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: How it works…
  id: totrans-207
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: 'By default, Composer can only add packages available on `drupal/` namespace.
    The Drupal project template adds the Composer template’s `composer.json` so that
    these packages become available:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Composer 只能添加 `drupal/` 命名空间中可用的包。Drupal 项目模板添加了 Composer 模板的 `composer.json`，以便这些包可用：
- en: '[PRE39]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Drupal follows a pattern of having projects downloaded from `Drupal.org` go
    into a `contrib` directory and `custom` code go into a custom directory.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: Drupal 采取的模式是从 `Drupal.org` 下载项目进入 `contrib` 目录，而自定义代码则进入自定义目录。
- en: Once modules and themes have been added to a Drupal code base, they still need
    to be installed. Having the code present does not make them immediately activated.
    This also means that removing modules from your code base must be a two-part process.
    Drupal will throw errors if you remove a module’s code before it is uninstalled.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦模块和主题被添加到 Drupal 代码库中，它们仍然需要安装。代码的存在并不意味着它们会立即激活。这也意味着从您的代码库中移除模块必须是一个两步过程。如果在卸载之前移除了模块的代码，Drupal
    将会抛出错误。
- en: There’s more…
  id: totrans-212
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多……
- en: Drupal is a project that was created before Composer and only recently became
    **Composer** compatible halfway through the Drupal 8 life cycle. There are some
    additional items to cover.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: Drupal 是一个在 Composer 之前创建的项目，直到 Drupal 8 生命周期中途才成为 **Composer** 兼容。还有一些其他事项需要说明。
- en: Composer Library Installer and Drupal extensions
  id: totrans-214
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Composer Library Installer 和 Drupal 扩展
- en: Composer will install packages to the `vendor` directory by default. The **Composer
    Library Installer** is a package that frameworks can use to modify the installation
    paths of specific package types.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Composer 会将包安装到 `vendor` 目录。**Composer Library Installer** 是一个框架可以用来修改特定包类型安装路径的包。
- en: 'The `composer/installers` package is added as part of Drupal’s project template
    and supports the following package types and their destinations:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '`composer/installers` 包作为 Drupal 项目模板的一部分被添加，并支持以下包类型及其目标：'
- en: '`drupal-core`: The package type used for Drupal’s core code base. It is installed
    in the `web/core` directory.'
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`drupal-core`：用于 Drupal 核心代码库的包类型。它安装在 `web/core` 目录。'
- en: '`drupal-module`: The package type used for modules. It is installed in the
    `web/modules/contrib` directory.'
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`drupal-module`：用于模块的包类型。它安装在 `web/modules/contrib` 目录。'
- en: '`drupal-theme`: The package type used for themes. It is installed in the `web/themes
    /``contrib` directory.'
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`drupal-theme`：用于主题的包类型。它安装在 `web/themes/contrib` 目录。'
- en: '`drupal-profile`: The package type used for profiles. It is installed in the
    `web/modules/profiles` directory.'
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`drupal-profile`：用于配置文件的包类型。它安装在 `web/modules/profiles` 目录。'
- en: '`drupal-library`: A special package type used to help download frontend libraries
    to the `web/libraries` directory.'
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`drupal-library`：一种特殊的包类型，用于帮助将前端库下载到 `web/libraries` 目录。'
- en: These mappings can be found in the `composer.json` file for your Drupal project.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 这些映射可以在您的 Drupal 项目的 `composer.json` 文件中找到。
- en: Updating Drupal core
  id: totrans-223
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更新 Drupal 核心版本
- en: Updating the core Drupal code base is a bit more involved than updating the
    `drupal/core-recommended` package. As stated, Drupal has recently added support
    for true Composer build support. There is also the `drupal/core-composer-scaffold`
    package, which copies over the required files.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 更新 Drupal 核心代码库比更新 `drupal/core-recommended` 包要复杂一些。如前所述，Drupal 最近增加了对真正的 Composer
    构建支持。还有一个 `drupal/core-composer-scaffold` 包，它会复制所需的文件。
- en: 'Composer allows us to use wildcards to update dependencies. The easiest way
    to upgrade Drupal core is by using a wildcard and the `-``with-dependencies` option:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: Composer 允许我们使用通配符来更新依赖项。升级 Drupal 核心最简单的方法是使用通配符和 `-with-dependencies` 选项：
- en: '[PRE40]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: The apostrophes are used to escape the `*` character. This command will update
    `drupal/core-recommended` and `drupal/core-composer-scaffold` at the same time,
    as well as all of Drupal core’s dependency packages.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 单引号用于转义 `*` 字符。此命令将同时更新 `drupal/core-recommended` 和 `drupal/core-composer-scaffold`，以及
    Drupal 核心的所有依赖包。
- en: See also
  id: totrans-228
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: 'The official documentation for using Composer to download and update files:
    [https://www.drupal.org/docs/user_guide/en/install-composer.html](https://www.drupal.org/docs/user_guide/en/install-composer.html
    )'
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Composer 下载和更新文件的官方文档：[https://www.drupal.org/docs/user_guide/en/install-composer.html](https://www.drupal.org/docs/user_guide/en/install-composer.html)
- en: 'The official documentation for downloading and installing a theme from Drupal.org:
    [https://www.drupal.org/docs/user_guide/en/extend-theme-install.html](https://www.drupal.org/docs/user_guide/en/extend-theme-install.html
    )'
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从 Drupal.org 下载和安装主题的官方文档：[https://www.drupal.org/docs/user_guide/en/extend-theme-install.html](https://www.drupal.org/docs/user_guide/en/extend-theme-install.html)
- en: Managing your Drupal code with version control
  id: totrans-231
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用版本控制管理 Drupal 代码
- en: Now that we have a Drupal code base, it is time to put that code into version
    control with Git. We will also export our Drupal site’s configuration to YAML
    files that allow us to track the site configuration in version control.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了 Drupal 代码库，是时候将代码放入 Git 的版本控制中了。我们还将导出 Drupal 网站的配置到 YAML 文件中，这样我们就可以在版本控制中跟踪网站配置。
- en: Tracking your code in version control makes it easier to collaborate with other
    developers, track changes, and integrate with continuous integration and deployment
    tools. It is highly recommended, even if you are the only developer working on
    the project.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 在版本控制中跟踪您的代码可以更容易地与其他开发者协作、跟踪更改以及与持续集成和部署工具集成。即使您是唯一的项目开发者，也强烈推荐这样做。
- en: Getting ready
  id: totrans-234
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'This recipe requires that you have Git on your machine. If you do not already
    have Git, see the following resources:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 此食谱要求您在您的机器上安装 Git。如果您还没有安装 Git，请参阅以下资源：
- en: 'Git official downloads page: [https://git-scm.com/downloads](https://git-scm.com/downloads)'
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Git 官方下载页面：[https://git-scm.com/downloads](https://git-scm.com/downloads)
- en: 'GitHub’s *Install Git* guide: [https://github.com/git-guides/install-git](https://github.com/git-guides/install-git
    )'
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GitHub 的 *安装 Git* 指南：[https://github.com/git-guides/install-git](https://github.com/git-guides/install-git)
- en: How to do it…
  id: totrans-238
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Open a terminal and navigate to your Drupal code base.
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端并导航到您的 Drupal 代码库。
- en: 'Initialize a new Git repository with the `init` command:'
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `init` 命令初始化一个新的 Git 仓库：
- en: '[PRE41]'
  id: totrans-241
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'You will see a message about an initialized empty repository, similar to the
    following:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 您将看到有关初始化空仓库的消息，类似于以下内容：
- en: '[PRE42]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Before we add files to Git to be tracked in version control, we must create
    a `.gitignore` file to specify files we do not want to be tracked. Create a `.gitignore`
    file in your project’s root directory.
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我们将文件添加到 Git 以进行版本控制跟踪之前，我们必须创建一个 `.gitignore` 文件来指定我们不希望跟踪的文件。在项目根目录中创建一个
    `.gitignore` 文件。
- en: 'We want to ignore directories that contain code that is managed by Composer,
    user-managed files (such as uploads), and sensitive directories. Add the following
    to your `.``gitignore` file:'
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们希望忽略由 Composer 管理的代码目录、用户管理的文件（如上传文件）和敏感目录。请将以下内容添加到您的 `.gitignore` 文件中：
- en: '[PRE43]'
  id: totrans-246
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '[PRE44]'
  id: totrans-247
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: '[PRE45]'
  id: totrans-248
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: '[PRE46]'
  id: totrans-249
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: '[PRE47]'
  id: totrans-250
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '[PRE48]'
  id: totrans-251
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: '[PRE49]'
  id: totrans-252
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: '[PRE50]'
  id: totrans-253
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: '[PRE51]'
  id: totrans-254
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
- en: '[PRE52]'
  id: totrans-255
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE52]'
- en: '[PRE53]'
  id: totrans-256
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE53]'
- en: '[PRE54]'
  id: totrans-257
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE54]'
- en: This excludes all the directories where Composer may install dependencies, local
    override settings, and the file uploads directory. We do not exclude `web/sites/default/settings.php`
    but ensure we exclude `settings.local.php` files.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 这排除了 Composer 可能安装依赖项的所有目录、用户管理的文件（如上传文件）和敏感目录。我们不排除 `web/sites/default/settings.php`，但确保排除
    `settings.local.php` 文件。
- en: 'Now, we can add our files to be tracked by Git using the `add` command:'
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以使用 `add` 命令将我们的文件添加到 Git 的跟踪列表中：
- en: '[PRE55]'
  id: totrans-260
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE55]'
- en: We use a period (`.`) for the `add` command’s argument to add all files within
    the current directory.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用点（`.`）作为 `add` 命令的参数来添加当前目录中的所有文件。
- en: 'Verify that the files were added to be tracked by Git by using the `status`
    command:'
  id: totrans-262
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `status` 命令验证文件是否已添加到 Git 的跟踪列表：
- en: '[PRE56]'
  id: totrans-263
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'You should see multiple lines of files colored green. Green means the files
    are staged to be tracked:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该看到多行文件以绿色显示。绿色表示文件已暂存以供跟踪：
- en: '![Figure 1.2 – Output from the status command, with green files representing
    items tracked in Git](img/Figure_1.2_B18548.jpg)'
  id: totrans-265
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.2 – `status` 命令的输出，绿色文件表示 Git 中跟踪的项目](img/Figure_1.2_B18548.jpg)'
- en: Figure 1.2 – Output from the status command, with green files representing items
    tracked in Git
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.2 – `status` 命令的输出，绿色文件表示 Git 中跟踪的项目
- en: 'Now, it is time to commit the changes using the `commit` command:'
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，是时候使用 `commit` 命令提交更改了：
- en: '[PRE57]'
  id: totrans-268
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE57]'
- en: The `commit` command records changes to the repository. Commits require a commit
    message. The `-m` flag allows you to provide a message.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: '`commit` 命令记录对仓库的更改。提交需要提交信息。`-m` 标志允许您提供信息。'
- en: 'With our code now tracked in Git, we want to export Drupal’s configuration
    and track that as well. We can do this with the `config:export` command from Drush:'
  id: totrans-270
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于我们的代码现在在Git中跟踪，我们希望导出Drupal的配置并跟踪它。我们可以使用Drush的`config:export`命令来完成此操作：
- en: '[PRE58]'
  id: totrans-271
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE58]'
- en: For the first import, all configurations will be exported. Afterward, you will
    be prompted to export the configuration as it will overwrite the existing files.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 对于第一次导入，所有配置都将被导出。之后，您将被提示导出配置，因为它将覆盖现有文件。
- en: 'Add the exported configuration files to Git:'
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将导出的配置文件添加到Git：
- en: '[PRE59]'
  id: totrans-274
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE59]'
- en: You may use `git status` to verify that the files were staged for commit.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`git status`来验证文件是否已准备好提交。
- en: 'Commit the configuration files:'
  id: totrans-276
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提交配置文件：
- en: '[PRE60]'
  id: totrans-277
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE60]'
- en: Your Drupal site is now managed in Git and can be pushed to a GitHub or GitLab
    repository!
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您的Drupal站点现在由Git管理，并且可以推送到GitHub或GitLab仓库！
- en: How it works…
  id: totrans-279
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: '**Git** is a free and open-source version control system. In this recipe, we
    created a new Git repository for the files that make up our Drupal site. When
    files are added to a Git repository, they are tracked to monitor changes to the
    files. Changes are then committed and create a new revision in the version control
    history. The Git repository can then be added to GitHub, GitLab, or other services
    to host the project code.'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: '**Git**是一个免费的开源版本控制系统。在本食谱中，我们为构成我们的Drupal站点的文件创建了一个新的Git仓库。当文件被添加到Git仓库时，它们会被跟踪以监控文件的变化。然后，更改会被提交并创建版本控制历史中的新版本。Git仓库可以被添加到GitHub、GitLab或其他服务以托管项目代码。'
- en: Version control is beneficial as it makes it easy to work with other developers
    without creating conflicting code changes. It also makes the code transportable.
    The Drupal site code does not live just on your machine, but also on the remote
    repository (GitHub, GitLab, or another service).
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 版本控制的好处在于它使得与其他开发者协作变得容易，而不会创建冲突的代码更改。它还使得代码可移植。Drupal站点代码不仅存在于您的机器上，还存在于远程仓库（GitHub、GitLab或其他服务）中。
- en: Nearly all **Platform-as-a-Service** (**PaaS**) hosting providers that provide
    continuous integration and deployment for Drupal sites require code to exist in
    a Git repository.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 几乎所有提供为Drupal站点提供持续集成和部署的**平台即服务**（**PaaS**）托管提供商都需要代码存在于Git仓库中。
- en: See also
  id: totrans-283
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 相关内容
- en: 'Git docs: [https://git-scm.com/docs](https://git-scm.com/docs )'
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Git文档：[https://git-scm.com/docs](https://git-scm.com/docs)
- en: 'Drupal.org documentation for Git: [https://www.drupal.org/docs/develop/git](https://www.drupal.org/docs/develop/git
    )'
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Drupal.org关于Git的文档：[https://www.drupal.org/docs/develop/git](https://www.drupal.org/docs/develop/git)
- en: Successfully deploying your Drupal site
  id: totrans-286
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 成功部署您的Drupal站点
- en: So far, we have created a Drupal code base, set up a local development environment,
    and put our code base into version control. Now, it is time to cover deploying
    your Drupal site to a server.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经创建了一个Drupal代码库，设置了本地开发环境，并将我们的代码库放入版本控制中。现在，是时候介绍如何将您的Drupal站点部署到服务器上了。
- en: Deploying your Drupal site involves more than just copying over the code files
    as you may need to run schema updates and configuration imports. In this recipe,
    we will use **rsync**, an efficient file transfer tool, to copy our Drupal site
    code base to a server and use Drush to create a successful Drupal deployment.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 部署您的Drupal站点不仅涉及复制代码文件，因为您可能需要运行模式更新和配置导入。在本食谱中，我们将使用**rsync**，一个高效的文件传输工具，将我们的Drupal站点代码库复制到服务器，并使用Drush创建成功的Drupal部署。
- en: Getting ready
  id: totrans-289
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'This recipe requires access to a virtual machine over **SSH** that has a **Linux,
    Apache, MySQL, and PHP** (**LAMP**) stack installed. Many cloud providers, such
    as **Digital Ocean** and AWS **Lightsail**, have one-click installations for LAMP
    stack virtual machines:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 本食谱需要通过**SSH**访问虚拟机，该虚拟机已安装了**Linux、Apache、MySQL和PHP**（**LAMP**）堆栈。许多云提供商，如**Digital
    Ocean**和AWS **Lightsail**，提供LAMP堆栈虚拟机的单点安装：
- en: A virtual machine with 1 GB of memory and one CPU will suffice, usually the
    lowest virtual machine tier.
  id: totrans-291
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一台具有1GB内存和一个CPU的虚拟机就足够了，通常是最低的虚拟机级别。
- en: You must be able to access the virtual machine using SSH key-based authentication
    or password authentication.
  id: totrans-292
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您必须能够使用基于SSH密钥的身份验证或密码身份验证访问虚拟机。
- en: This recipe uses the `root` user, which is not the best security practice. Server
    security practices and management are outside the scope of this book.
  id: totrans-293
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本食谱使用`root`用户，这不是最佳的安全实践。服务器安全实践和管理超出了本书的范围。
- en: This recipe uses an IP address of `167.71.255.26` for accessing the server.
    Replace `167.71.255.26` with the IP address for your server.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 本食谱使用IP地址`167.71.255.26`来访问服务器。请将`167.71.255.26`替换为您服务器的IP地址。
- en: At the time of writing, the MySQL PHP library does not support the new `caching_sha2_authentication`
    authentication implemented by MySQL. You will need a user that has access to the
    database with the `mysql_native_password` authentication method.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，MySQL PHP库不支持MySQL实现的新的`caching_sha2_authentication`身份验证。您需要一个具有`mysql_native_password`身份验证方法访问数据库的用户。
- en: 'Here is a summary of the SQL commands for creating a `drupaldb` database that
    is accessible to the `dbuser` user with a password of `dbpass`:'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是创建一个对`dbuser`用户可访问、密码为`dbpass`的`drupaldb`数据库的SQL命令摘要：
- en: '[PRE61]'
  id: totrans-297
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: How to do it…
  id: totrans-298
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Open a terminal and navigate to your Drupal code base.
  id: totrans-299
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端并导航到您的Drupal代码库。
- en: 'Create an ignore file for `rsync` to exclude directories named `.rsyncignore`
    with the following code:'
  id: totrans-300
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为`rsync`创建一个忽略文件，以排除名为`.rsyncignore`的目录，以下为代码：
- en: '[PRE62]'
  id: totrans-301
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE62]'
- en: '[PRE63]'
  id: totrans-302
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE63]'
- en: '[PRE64]'
  id: totrans-303
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE64]'
- en: '[PRE65]'
  id: totrans-304
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE65]'
- en: '[PRE66]'
  id: totrans-305
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE66]'
- en: '[PRE67]'
  id: totrans-306
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE67]'
- en: '[PRE68]'
  id: totrans-307
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE68]'
- en: '[PRE69]'
  id: totrans-308
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE69]'
- en: This will be used to reduce the number of files transferred to the production
    server, including developer tool configuration, local development files, and any
    SQL dumps.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 这将用于减少传输到生产服务器的文件数量，包括开发者工具配置、本地开发文件以及任何SQL转储。
- en: 'Now, we will deploy our Drupal code base to the remote server using `rsync`:'
  id: totrans-310
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将使用`rsync`将我们的Drupal代码库部署到远程服务器：
- en: '[PRE70]'
  id: totrans-311
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE70]'
- en: '[PRE71]'
  id: totrans-312
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE71]'
- en: The `rzCE` flags control how files are copied to the remote server. `r` is for
    recursive copying, `z` compresses files during transfer, `C` uses a checksum to
    see if files have been modified and should be copied, `E` preserves the executability
    of files, and `l` preserves links. The `E` and `l` flags are important for Composer’s
    vendor/bin executables.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: '`rzCE`标志控制文件如何复制到远程服务器。`r`表示递归复制，`z`在传输过程中压缩文件，`C`使用校验和检查文件是否已修改并应该复制，`E`保留文件的执行权限，`l`保留链接。`E`和`l`标志对于Composer的`vendor/bin`可执行文件非常重要。'
- en: '`.` represents our current working directory as the source, where `root@167.71.255.26:/var/www/html`
    is our destination. Replace `root@167.71.255.26` with your virtual machine’s user
    and IP address.'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: '`.`代表我们的当前工作目录作为源，其中`root@167.71.255.26:/var/www/html`是我们的目标。将`root@167.71.255.26`替换为您的虚拟机的用户和IP地址。'
- en: The `exclude-from` option uses our `.rsyncignore` file to skip files from being
    uploaded, while `delete` removes old files from the destination that are no longer
    valid.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: '`exclude-from`选项使用我们的`.rsyncignore`文件来跳过上传的文件，而`delete`则从目标中删除不再有效的旧文件。'
- en: 'We also need to create a database SQL dump for a one-time import using the
    `sql:dump` command from Drush:'
  id: totrans-316
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们还需要使用Drush的`sql:dump`命令创建一个数据库SQL转储，以便进行一次性导入：
- en: '[PRE72]'
  id: totrans-317
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE72]'
- en: '[PRE73]'
  id: totrans-318
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE73]'
- en: 'We can also copy it over to the server for import later on using, **secure
    file copy** (**SFC**). We will upload it to the home directory of the user, not
    the Drupal directory:'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以将其复制到服务器，稍后使用**安全文件复制**（**SFC**）导入。我们将将其上传到用户的家目录，而不是Drupal目录：
- en: '[PRE74]'
  id: totrans-320
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: 'To finish setting up, SSH into your virtual machine:'
  id: totrans-321
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了完成设置，通过SSH连接到您的虚拟机：
- en: '[PRE75]'
  id: totrans-322
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE75]'
- en: 'After copying the files, we also need to make sure writeable directories are
    accessible to the web server, such as writing CSS and JS aggregated files and
    compiled **Twig** templates. This is a one-time operation when setting up the
    Drupal site after the first file transfer:'
  id: totrans-323
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在复制文件后，我们还需要确保可写目录对Web服务器是可访问的，例如写入CSS和JS聚合文件以及编译的**Twig**模板。这是在第一次文件传输后设置Drupal站点时的一次性操作：
- en: '[PRE76]'
  id: totrans-324
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE76]'
- en: '[PRE77]'
  id: totrans-325
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE77]'
- en: '[PRE78]'
  id: totrans-326
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE78]'
- en: This ensures the `web/sites/default/files` directory is owned by the web server
    user so that it can write files.
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 这确保了`web/sites/default/files`目录由Web服务器用户拥有，以便它可以写入文件。
- en: 'Next, we need to update the document root used by Apache, which defaults to
    `/var/www/html`. The new document root is `/var/www/html/web`. We will use the
    `sed` command to replace the value for us:'
  id: totrans-328
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要更新Apache使用的文档根，默认为`/var/www/html`。新的文档根是`/var/www/html/web`。我们将使用`sed`命令来替换值：
- en: '[PRE79]'
  id: totrans-329
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE79]'
- en: '[PRE80]'
  id: totrans-330
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE80]'
- en: The `sed` command stands for stream editor and makes finding and replacing text
    in files very easy.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: '`sed`命令代表流编辑器，使得在文件中查找和替换文本变得非常容易。'
- en: 'We need to make Apache aware of our configuration changes. Use the following
    command:'
  id: totrans-332
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要让Apache知道我们的配置更改。使用以下命令：
- en: '[PRE81]'
  id: totrans-333
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE81]'
- en: This will reload the Apache service’s configuration and make it aware of the
    new document root.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 这将重新加载Apache服务配置，并使其知道新的文档根。
- en: 'Before we set up our site, we will need to create our `settings.local.php`
    file on the server so that Drupal knows how to connect to the database. We will
    use the `nano` command-line editor to create and edit the file:'
  id: totrans-335
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我们设置站点之前，我们将在服务器上创建我们的`settings.local.php`文件，以便Drupal知道如何连接到数据库。我们将使用`nano`命令行编辑器来创建和编辑该文件：
- en: '[PRE82]'
  id: totrans-336
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE82]'
- en: '[PRE83]'
  id: totrans-337
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE83]'
- en: 'Add the following code to your `settings.local.php` file:'
  id: totrans-338
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码添加到您的`settings.local.php`文件中：
- en: '[PRE84]'
  id: totrans-339
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE84]'
- en: '[PRE85]'
  id: totrans-340
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE85]'
- en: '[PRE86]'
  id: totrans-341
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE86]'
- en: '[PRE87]'
  id: totrans-342
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE87]'
- en: '[PRE88]'
  id: totrans-343
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE88]'
- en: '[PRE89]'
  id: totrans-344
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE89]'
- en: '[PRE90]'
  id: totrans-345
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE90]'
- en: '[PRE91]'
  id: totrans-346
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE91]'
- en: '[PRE92]'
  id: totrans-347
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE92]'
- en: Be sure to change the database credentials so that they match the ones created
    with your server. Drupal will also try to create the database for you if it does
    not exist.
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 请确保更改数据库凭据，使其与您创建的服务器上的凭据匹配。如果不存在，Drupal还会尝试为您创建数据库。
- en: Save the file by using *CTRL* + *X*, then *Y*, and finally clicking *Enter*.
  id: totrans-349
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用*CTRL* + *X*保存文件，然后*Y*，最后点击*Enter*。
- en: 'Verify the database connection settings using Drush:'
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Drush验证数据库连接设置：
- en: '[PRE93]'
  id: totrans-351
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: The database credentials should match what you added to `settings.local.php`.
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库凭据应与您添加到`settings.local.php`中的内容匹配。
- en: 'Next, we need to populate our database. We will use the `sql:cli` command to
    import our initial database from the local development environment:'
  id: totrans-353
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要填充我们的数据库。我们将使用`sql:cli`命令从本地开发环境导入初始数据库：
- en: '[PRE94]'
  id: totrans-354
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE94]'
- en: 'Then, we can go through the deployment steps with Drush by using the `deploy`
    command to run any schema updates and configuration imports:'
  id: totrans-355
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们可以通过使用Drush的`deploy`命令来运行任何模式更新和配置导入来执行部署步骤：
- en: '[PRE95]'
  id: totrans-356
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE95]'
- en: You may now access your Drupal site and view it!
  id: totrans-357
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您现在可以访问您的Drupal站点并查看它了！
- en: How it works…
  id: totrans-358
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: 'This recipe involved various components: a virtual server to host our code
    and serve our Drupal site, the `rsync` tool for transferring files, and Drush
    to perform the required deployment steps.'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 此配方涉及各种组件：一个虚拟服务器来托管我们的代码和提供我们的Drupal站点，用于传输文件的`rsync`工具，以及Drush来执行所需的部署步骤。
- en: A benefit of using rsync over FTP or even scp, another command-line-based file
    transfer tool, is that rsync works incrementally. If a file has not been modified,
    rsync will not transfer that file. It will also ensure that deleted files are
    also deleted on the remote server, something other file transfer tools do not
    do.
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 使用rsync而不是FTP或甚至scp（另一种基于命令行的文件传输工具）的一个好处是rsync是增量工作的。如果一个文件没有被修改，rsync将不会传输该文件。它还会确保在远程服务器上删除的文件也会被删除，这是其他文件传输工具所不具备的。
- en: The `deploy` command from Drush ensures that your Drupal site’s database and
    configuration are up to date. It is a command that operates various processes
    in a best-practice fashion. The command runs all of Drupal’s update hooks to ensure
    they are executed (schema updates and state changes provided by modules), and
    that configuration is synchronized from the exported configuration files. The
    `deploy` command should always be run, just as you would run migrations for a
    Symfony or Laravel application.
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: Drush的`deploy`命令确保您的Drupal站点的数据库和配置是最新的。这是一个以最佳实践方式操作各种过程的命令。该命令运行Drupal的所有更新钩子以确保它们被执行（由模块提供的模式更新和状态更改），并且配置是从导出的配置文件同步的。《deploy》命令应该始终运行，就像您运行Symfony或Laravel应用程序的迁移一样。
- en: There’s more…
  id: totrans-362
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Next, we will cover more about hosting and deploying your Drupal sites.
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将更详细地介绍关于托管和部署您的Drupal站点的内容。
- en: Platform-as-a-service hosting provider
  id: totrans-364
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 平台即服务托管提供商
- en: 'You can avoid this process completely by leveraging one of the PaaS hosting
    providers for Drupal (listed alphabetically):'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过利用以下列出的Drupal（按字母顺序排列）的PaaS托管提供商之一来完全避免此过程：
- en: 'Acquia Cloud: [https://www.acquia.com/products/drupal-cloud/cloud-platform/drupal-hosting](https://www.acquia.com/products/drupal-cloud/cloud-platform/drupal-hosting
    )'
  id: totrans-366
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Acquia Cloud：[https://www.acquia.com/products/drupal-cloud/cloud-platform/drupal-hosting](https://www.acquia.com/products/drupal-cloud/cloud-platform/drupal-hosting
    )
- en: 'Pantheon: [https://pantheon.io/product/drupal-hosting](https://pantheon.io/product/drupal-hosting
    )'
  id: totrans-367
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pantheon：[https://pantheon.io/product/drupal-hosting](https://pantheon.io/product/drupal-hosting
    )
- en: 'Platform.sh: [https://platform.sh/marketplace/drupal/](https://platform.sh/marketplace/drupal/
    )'
  id: totrans-368
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Platform.sh：[https://platform.sh/marketplace/drupal/](https://platform.sh/marketplace/drupal/
    )
- en: Automating deployments
  id: totrans-369
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 自动化部署
- en: Using continuous integration, this deployment process can be automated in GitHub
    Actions, GitLab CI, or other continuous integration providers with your repository
    on commit. You will need to configure an additional set of private keys that are
    added to your continuous integration tool so that the service can SSH into your
    server.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 使用持续集成，此部署过程可以在GitHub Actions、GitLab CI或其他持续集成提供商上通过提交您的存储库来自动化。您需要配置一组额外的私钥，这些私钥被添加到您的持续集成工具中，以便服务可以SSH到您的服务器。
- en: See also
  id: totrans-371
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: 'Hosting partners on Drupal.org: [https://www.drupal.org/hosting](https://www.drupal.org/hosting
    )'
  id: totrans-372
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Drupal.org上的托管合作伙伴：[https://www.drupal.org/hosting](https://www.drupal.org/hosting
    )
- en: 'Documentation for the Drush `deploy` command: [https://www.drush.org/latest/deploycommand/](https://www.drush.org/latest/deploycommand/)'
  id: totrans-373
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Drush `deploy` 命令的文档：[https://www.drush.org/latest/deploycommand/](https://www.drush.org/latest/deploycommand/)
