- en: '2'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '2'
- en: Understanding and Organizing the Business Requirements of Our Project
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解和组织我们项目的业务需求
- en: Before writing a single line of code, we first need to understand the goals
    of a project and what problems we are trying to solve. We build software to solve
    problems, and if we do not adequately understand what the client or the business
    is trying to achieve, we will have problems coming up with the ideal solution—or,
    worse, we can end up spending months building software that doesn’t even address
    the business requirements.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在编写任何代码之前，我们首先需要了解项目的目标和我们要解决的问题。我们构建软件是为了解决问题，如果我们没有充分理解客户或商业试图实现的目标，我们将难以提出理想的解决方案——或者更糟糕的是，我们可能会花费数月时间构建根本不满足业务需求的软件。
- en: As software developers, it is great to have a clear list of what needs to be
    built. It’s just like having a simple grocery list. This list will help us determine
    which features we need to develop or release first. So, before we start building
    solutions to a problem by writing software, we will try to come up with a simple
    example where we will try to interpret business problems and goals into a list
    of software features that we will need to write code for.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 作为软件开发者，有一个清晰的待建列表是非常好的。这就像有一个简单的购物清单。这个列表将帮助我们确定哪些功能需要首先开发或发布。因此，在我们通过编写软件来构建解决问题的解决方案之前，我们将尝试提出一个简单的例子，在这个例子中，我们将尝试将商业问题和目标解释为需要编写代码的软件功能列表。
- en: In this chapter, we will come up with an example business problem. We will try
    to analyze what the example business is trying to achieve, and what’s stopping
    it from achieving this goal. We will present a solution to help us define and
    organize the business requirements into a workable list of *user stories*. These
    user stories, in turn, will be used to represent our behavior-driven tests. These
    behavior-driven tests will help us build our test-driven codes. **Behavior-driven
    development** (**BDD**) will be discussed in more detail in [*Chapter 6*](B18318_06.xhtml#_idTextAnchor094),
    *Applying* *Behavior-Driven Development*.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将提出一个示例商业问题。我们将尝试分析这个示例商业试图实现的目标，以及阻止它实现这一目标的原因。我们将提出一个解决方案，帮助我们定义和组织业务需求，形成一个可操作的*用户故事*列表。这些用户故事反过来将被用来表示我们的行为驱动测试。这些行为驱动测试将帮助我们构建我们的测试驱动代码。**行为驱动开发**（**BDD**）将在[*第6章*](B18318_06.xhtml#_idTextAnchor094)
    *应用行为驱动开发*中更详细地讨论。
- en: '![Figure 2.1 – Building with TDD and BDD](img/Figure_2.01_B18318.jpg)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![图2.1 – 使用TDD和BDD进行构建](img/Figure_2.01_B18318.jpg)'
- en: Figure 2.1 – Building with TDD and BDD
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.1 – 使用TDD和BDD进行构建
- en: 'In contrast to **test-driven development** (**TDD**) and BDD, developers can
    also write solution code directly for a user story or a requirement. This is a
    recipe for future disaster. In fact, this is how I used to develop software:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 与**测试驱动开发**（**TDD**）和BDD相比，开发者也可以直接为用户故事或需求编写解决方案代码。这是一个未来灾难的配方。事实上，这就是我过去开发软件的方式：
- en: '![Figure 2.2 – Developing a solution without tests](img/Figure_2.02_B18318.jpg)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![图2.2 – 不进行测试的开发解决方案](img/Figure_2.02_B18318.jpg)'
- en: Figure 2.2 – Developing a solution without tests
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.2 – 不进行测试的开发解决方案
- en: In this book, we will focus on building solution code based on the business
    requirements, represented by test programs. So, let’s get started with understanding
    the example business problem and requirements.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，我们将专注于基于业务需求构建解决方案代码，这些需求由测试程序表示。那么，让我们开始了解示例商业问题和需求。
- en: 'In this chapter, we will be covering the following:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下内容：
- en: The example business project
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 示例商业项目
- en: Breaking down the business requirements into software features
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将业务需求分解为软件功能
- en: Integrating Jira with Bitbucket
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将Jira与Bitbucket集成
- en: Technical requirements
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术需求
- en: This chapter requires the reader to have basic knowledge of Git version control.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 本章要求读者具备Git版本控制的基本知识。
- en: The example business project
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 示例商业项目
- en: We will be using a simple example—a *motor museum*—to help us go through the
    process of defining goals and problems and organizing them into workable units.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用一个简单的例子——*汽车博物馆*——来帮助我们通过定义目标和问题，并将它们组织成可操作的单元。
- en: The business scenario
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 业务场景
- en: I was having a catch-up and drinks with my friends from Perth months ago, and
    they told me that they had volunteered during weekends for fun to help a motor
    museum organize an inventory of toy car model donations the museum has received.
    The museum receives big boxes of toy car donations.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 几个月前，我和我在珀斯的几个朋友一起喝啤酒，他们告诉我，他们为了乐趣在周末志愿帮助一个汽车博物馆整理收到的玩具汽车模型的库存。博物馆收到了装满玩具汽车的巨大箱子。
- en: As we were drinking, they told me that it’s both fun and sometimes challenging
    as there’s no specific tool or process to itemize the toy cars that the museum
    receives. Sometimes, they open a whole box of toy cars with no information about
    the toys, and sometimes there are whole boxes containing toy cars properly packaged
    with all the information in each toy car’s box, such as the year of manufacture,
    the racing driver who drove it, color, and so on. They must itemize these toys
    and put them in a spreadsheet, and this is where things get interesting.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在喝酒的时候，他们告诉我，这既有趣又有时具有挑战性，因为没有特定的工具或流程来列出博物馆收到的玩具汽车。有时，他们打开一个装满玩具汽车的整个箱子，没有任何关于玩具的信息，有时整个箱子都装着包装好的玩具汽车，每个玩具汽车的箱子里都有所有信息，比如制造年份、驾驶它的赛车手、颜色等等。他们必须列出这些玩具并将它们放入电子表格中，这就是事情变得有趣的地方。
- en: They said they used a spreadsheet file that they would share around and hand
    over to the next volunteer. Recording information about a toy car is a bit of
    a task—for instance, someone records a toy car’s color as blue, but someone else
    might just write down “flames”, which obviously is not a color. Sometimes colors
    are mispelled. So, now, if they want to search for all cars that are blue, it
    can get complicated as sometimes people might misspell blue when saving the information.
    They also want to be able to search for model cars a specific racing driver has
    driven, and they want to discover in which section of the museum the toy car model
    can be found.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 他们说他们使用了一个电子表格文件，他们会将其共享并转交给下一个志愿者。记录玩具汽车的信息是一项任务——例如，有人将玩具汽车的颜色记录为蓝色，但另一个人可能只是写下“火焰”，这显然不是一种颜色。有时颜色会被拼写错误。所以，现在，如果他们想要搜索所有蓝色汽车，可能会变得复杂，因为有时人们在保存信息时可能会将“blue”拼写错误。他们还希望能够搜索特定赛车手驾驶的模型汽车，并希望发现玩具汽车模型在博物馆的哪个部分。
- en: As we were chatting, I couldn’t help but start imagining data being entered,
    submitted, validated, processed, and then persisted. I forgot about my drink for
    a second, and my mind started to drift away and started imagining code. If you’re
    a software developer, you probably know what I mean!
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在聊天过程中，我不禁开始想象数据被输入、提交、验证、处理，然后持久化。我暂时忘记了饮料，我的思绪开始飘忽不定，开始想象代码。如果你是软件开发者，你大概知道我的意思！
- en: 'I thought: I can use this real-life challenge and use it as an example business
    project. It’s simple and it sounds fun, but it will also serve as a good example
    to demonstrate how to implement TDD and BDD.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我想：我可以利用这个现实生活中的挑战，并将其作为一个业务项目的例子。这很简单，听起来很有趣，但也将作为一个很好的例子来展示如何实现TDD和BDD。
- en: I asked my friends if they were okay with me using their example for this project,
    and they were happy with it. So, from now on, we will refer to them as our clients
    or the business.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我问我的朋友们是否可以让我使用他们的例子来完成这个项目，他们对此表示很高兴。所以，从现在开始，我们将把他们称为我们的客户或商家。
- en: Making sense of the scenario and the problem
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解场景和问题
- en: By talking to the business or client, we can get some very important information
    about the problems they have. We can try coming up with a very rough and simple
    list of problems, constraints, and possible solutions.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 通过与商家或客户交谈，我们可以获取一些关于他们所遇到问题的非常重要的信息。我们可以尝试列出一个非常粗略和简单的关于问题、约束和可能解决方案的清单。
- en: '**What the business is trying** **to achieve**:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**商家试图** **实现的目标**：'
- en: Inventory clerks or volunteers are able to itemize and record toy car model
    information
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 库存管理员或志愿者能够列出并记录玩具汽车模型信息
- en: Users are able to search through the records and find in which section of the
    museum the car model can be viewed
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户能够搜索记录，并找到博物馆中可以查看汽车模型的哪个部分。
- en: '**Problems/challenges**:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**问题/挑战**：'
- en: No system allows different users to record car model data simultaneously
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有系统允许不同用户同时记录汽车模型数据
- en: No system validates the data being stored—for example, for color spelling
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有系统验证存储的数据——例如，对于颜色拼写
- en: No easy way for visitors to find or search for where a specific car model is
    being displayed in the museum
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有简单的方法让游客找到或搜索博物馆中特定车型展示的位置
- en: '**Constraints**:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**约束**：'
- en: The project is only focused on the toy car model inventory
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该项目仅关注玩具车模型的库存
- en: Only registered museum staff can enter data into the inventory
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只有注册的博物馆工作人员才能将数据输入到库存中
- en: '**Solutions**:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案**：'
- en: Build a simple inventory system for the toy car models
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为玩具车模型构建一个简单的库存系统
- en: Build a simple page with a table for visitors to view the inventory
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为访客构建一个带有表格的简单页面以查看库存
- en: We were able to come up with a list of very important points about the business
    scenario. At the end of the day, all the items we have listed will end up satisfying
    one thing, and that is to address what the business is trying to achieve. This
    is the most important thing to understand. We are building solutions by first
    understanding properly what the problems are. And after we solve the problems,
    we must be sure that we have addressed what the business is trying to achieve.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我们能够列出关于业务场景的非常重要的几点。最终，我们所列出的所有项目都将满足一件事，那就是解决业务试图实现的目标。这是最重要的理解。我们通过首先正确理解问题来构建解决方案。在解决问题之后，我们必须确保我们已经解决了业务试图实现的目标。
- en: '![Figure 2.3 – The solution](img/Figure_2.03_B18318.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![图2.3 – 解决方案](img/Figure_2.03_B18318.jpg)'
- en: Figure 2.3 – The solution
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.3 – 解决方案
- en: I had an experience where I saw developers spend a lot of time building software,
    and when the project got handed over to me, I realized that the direction in which
    they were going was totally incorrect. So, it doesn’t matter how good the software
    is—it is of no value if it cannot address the real problem and if it cannot help
    in achieving the business goal.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我有过一次经历，我看到开发者花费大量时间构建软件，当项目交给我时，我意识到他们所走的方向是完全错误的。所以，不管软件有多好——如果它不能解决实际问题，如果它不能帮助实现业务目标，那么它就没有价值。
- en: Now that we have defined what the business is trying to achieve and have identified
    the problems and challenges the business is facing, we can now start organizing
    a list of things we need to do to solve the problems.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经定义了业务试图实现的目标，并确定了业务面临的问题和挑战，我们现在可以开始组织一个我们需要做的事情的列表来解决这些问题。
- en: Breaking down the business requirements into software features
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将业务需求分解为软件功能
- en: We will need a solution to organize all the tasks we need to work on. We can
    do this by using a notebook, a scratchpad, post-it notes, or even a simple Kanban
    board. But since we are planning to develop maintainable software and we want
    to have visibility into the progress of our development process, it would be great
    to have a more powerful solution than, say, a notebook.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要一种解决方案来组织我们所有需要工作的任务。我们可以通过使用笔记本、便签纸、便利贴，甚至一个简单的看板来实现这一点。但鉴于我们计划开发可维护的软件，并且我们希望对开发过程的进度有可见性，拥有比笔记本更强大的解决方案会更好。
- en: In this project, we will be using **Atlassian Jira**. Jira is software that
    we can use to organize all the items that we need to build and work on. We will
    use it as a turbo-charged notebook to contain our to-do lists of software features.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，我们将使用**Atlassian Jira**。Jira是我们可以用来自组织所有我们需要构建和工作的项目的软件。我们将将其用作一个增强型笔记本，以包含我们的软件功能待办事项列表。
- en: We will not be focusing deeply on the methodology; instead, we will be using
    Jira just to help us organize our project so that we can start writing software
    in an organized sequence.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不会深入关注方法论；相反，我们将使用Jira来帮助我们组织项目，以便我们可以有组织地开始编写软件。
- en: We want to have the ability to link our Git branches, pull requests, and commits
    to an issue that we are working on. We want the ability to integrate our **continuous
    integration** (**CI**) ([*Chapter 9*](B18318_09.xhtml#_idTextAnchor138)*,* *Continuous
    Integration*) solution into our issues as well. You can think of a *Jira issue*
    as a list item representing a business problem or a software feature.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望有能力将我们的Git分支、拉取请求和提交链接到我们正在工作的一个问题。我们希望有能力将我们的**持续集成**（**CI**）([*第9章*](B18318_09.xhtml#_idTextAnchor138)*,*
    *持续集成*）解决方案集成到我们的问题中。你可以将*Jira问题*视为代表业务问题或软件功能的列表项。
- en: We will start breaking down the business requirements into a list of software
    features represented by user stories, which is an issue type in Jira. But for
    that, we first need to create a Jira account and initialize our project.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将开始将业务需求分解为软件功能列表，这些功能由用户故事表示，这是Jira中的一个问题类型。但为此，我们首先需要创建一个Jira账户并初始化我们的项目。
- en: Creating a Jira Cloud account and initializing the Jira Cloud project
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建Jira Cloud账户并初始化Jira Cloud项目
- en: 'To create a Jira Cloud account and initialize the Jira Cloud project, follow
    these steps:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建Jira Cloud账户并初始化Jira Cloud项目，请按照以下步骤操作：
- en: 'To get started, we first need to create a free Jira account. You can do so
    by going to the following URL: [https://www.atlassian.com/try/cloud/signup?bundle=jira-software&edition=free](https://www.atlassian.com/try/cloud/signup?bundle=jira-software&edition=free).
    Then, sign up for an account:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要开始，我们首先需要创建一个免费的Jira账户。你可以通过访问以下网址来完成：[https://www.atlassian.com/try/cloud/signup?bundle=jira-software&edition=free](https://www.atlassian.com/try/cloud/signup?bundle=jira-software&edition=free)。然后，注册一个账户：
- en: "![Figure 2.4 – Jira sign\uFEFF-up](img/Figure_2.04_B18318.jpg)"
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![图2.4 – Jira注册](img/Figure_2.04_B18318.jpg)'
- en: Figure 2.4 – Jira sign-up
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.4 – Jira注册
- en: 'After signing up for an account, you will be prompted to enter a subdomain
    name in the **Your site** field. Use any subdomain name you want. After this step,
    you can skip all other popups until you get to the **Project** **templates** page:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注册账户后，你将被提示在**您的站点**字段中输入一个子域名名称。使用你想要的任何子域名。完成此步骤后，你可以跳过所有其他弹出窗口，直到你到达**项目**
    **模板**页面：
- en: '![Figure 2.5 – Entering a subdomain name](img/Figure_2.05_B18318.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![图2.5 – 输入子域名名称](img/Figure_2.05_B18318.jpg)'
- en: Figure 2.5 – Entering a subdomain name
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.5 – 输入子域名名称
- en: 'On the **Project templates** page, select **Scrum**:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**项目模板**页面，选择**Scrum**：
- en: '![Figure 2.6 – Selecting Scrum](img/Figure_2.06_B18318.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![图2.6 – 选择Scrum](img/Figure_2.06_B18318.jpg)'
- en: Figure 2.6 – Selecting Scrum
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.6 – 选择Scrum
- en: 'On the **Scrum** page, click on the **Use template** button at the top or bottom
    right of the screen:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**Scrum**页面，点击屏幕右上角的**使用模板**按钮：
- en: '![Figure 2.7 – Use template button](img/Figure_2.07_B18318.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![图2.7 – 使用模板按钮](img/Figure_2.07_B18318.jpg)'
- en: Figure 2.7 – Use template button
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.7 – 使用模板按钮
- en: 'On the **Choose a project type** page, click on **Select a** **team-managed
    project**:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**选择项目类型**页面，点击**选择一个** **团队管理项目**：
- en: '![Figure 2.8 – Select a team-managed project](img/Figure_2.08_B18318.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![图2.8 – 选择团队管理项目](img/Figure_2.08_B18318.jpg)'
- en: Figure 2.8 – Select a team-managed project
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.8 – 选择团队管理项目
- en: 'On the `toycarmodels` as the name of the project and enter `TOYC` for the **Key**
    field:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将项目名称设为`toycarmodels`，并在**键**字段中输入`TOYC`：
- en: '![Figure 2.9 – Add project details](img/Figure_2.09_B18318.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![图2.9 – 添加项目详情](img/Figure_2.09_B18318.jpg)'
- en: Figure 2.9 – Add project details
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.9 – 添加项目详情
- en: 'After these steps, you should end up with an empty **TOYC** **board** page:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 经过这些步骤后，你应该会看到一个空的**TOYC** **看板**页面：
- en: "![Figure 2.10– Empty \uFEFFTOYC Kanban board](img/Figure_2.10_B18318.jpg)"
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![图2.10 – 空的TOYC看板](img/Figure_2.10_B18318.jpg)'
- en: Figure 2.10– Empty TOYC Kanban board
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.10 – 空的TOYC看板
- en: Now that we have a Jira project to play with, we can start creating tickets
    to represent the things we need to do to help the restaurant business with its
    online booking system project. We will be using *Jira epics* to group related
    Jira issues representing software features we want to build.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有一个可以操作的Jira项目，我们可以开始创建代表我们需要完成的任务以帮助餐厅业务进行在线预订系统项目的票据。我们将使用*Jira史诗*来分组相关的Jira问题，这些问题代表我们想要构建的软件功能。
- en: Creating a Jira epic
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建Jira史诗
- en: If we take a step back and think about the problems and solutions we defined
    earlier, we can come up with a simple list of things that we can build as features.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们回顾一下之前定义的问题和解决方案，我们可以列出一些简单的事项，我们可以将其作为功能来构建。
- en: 'We have identified that we want to build a way for inventory clerk volunteers
    to be able to record donated toy car models in the inventory, and we also identified
    the need for museum visitors to search through the inventory and locate where
    the toy car model is being displayed in the museum. Now, we have identified that
    we will have two types of users:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经确定，我们想要为库存管理员志愿者提供一个记录捐赠玩具车模型到库存的方法，我们也确定了博物馆参观者需要通过库存搜索并定位玩具车模型在博物馆的展示位置的需求。现在，我们已经确定我们将有两种类型的用户：
- en: Users who need to input and store data (inventory clerks)
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要输入和存储数据（库存管理员）
- en: Users who want to view the data (museum visitors)
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 想要查看数据（博物馆参观者）
- en: 'That means that we can separate the programs we need to build into two separate
    small projects: one small project for inventory clerks, and another one for visitors.
    Sometimes, it helps to segregate different parts of a big project into their own
    smaller projects; this can help in resourcing different developers for different
    areas of the projects and it can also help focus the developers’ efforts.'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着我们可以将我们需要构建的程序分成两个独立的小项目：一个是为存货管理员的小项目，另一个是为访客的小项目。有时，将一个大项目的不同部分分割成各自的小项目是有帮助的；这可以帮助为项目的不同区域分配不同的开发者，也可以帮助开发者集中精力。
- en: The inventory clerk-facing solution will probably contain a lot of smaller tasks.
    We can start defining those tasks into actual Jira tickets, but before thinking
    about the smaller tickets, let’s create an epic first.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 面向存货管理员的解决方案可能包含许多小任务。我们可以开始将这些任务定义为实际的 Jira 票据，但在考虑更小的票据之前，让我们先创建一个史诗。
- en: 'Let’s go back to the Jira **TOYC board** page from the previous instruction
    set and let’s start creating tickets:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回到上一组指令中的 Jira **TOYC 板**页面，并开始创建票据：
- en: 'On the left menu, click on the **Roadmap** menu item:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧菜单中，点击**路线图**菜单项：
- en: '![Figure 2.11 – Jira roadmap](img/Figure_2.11_B18318.jpg)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.11 – Jira 路线图](img/Figure_2.11_B18318.jpg)'
- en: Figure 2.11 – Jira roadmap
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.11 – Jira 路线图
- en: 'Within the table, click on the `What needs to` `be done?`:'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在表格中，点击 `需要做什么？`：
- en: '![Figure 2.12 – Epic title ](img/Figure_2.12_B18318.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.12 – 史诗标题](img/Figure_2.12_B18318.jpg)'
- en: Figure 2.12 – Epic title
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.12 – 史诗标题
- en: 'In the textbox, enter `Inventory Clerk Solution`, then hit *Enter*:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文本框中输入 `Inventory Clerk Solution`，然后按 *Enter*：
- en: '![Figure 2.13 – First epic](img/Figure_2.13_B18318.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.13 – 第一个史诗](img/Figure_2.13_B18318.jpg)'
- en: Figure 2.13 – First epic
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.13 – 第一个史诗
- en: 'Click on the epic you just created, and a popup will appear. In the description
    text area, you can enter any description detailing a summary of things we need
    to do. In this example, I will just use the following text: `Enable the inventory
    clerk to be able to input and store toy car model data` and under the **Assignee**
    field, click on the **Assign to** **me** link:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击您刚刚创建的史诗，将弹出一个窗口。在描述文本区域，您可以输入任何描述，详细说明我们需要做的事情。在这个例子中，我将只使用以下文本：`使存货管理员能够输入和存储玩具车模型数据`，然后在**分配给**字段下，点击**分配给我**链接：
- en: '![Figure 2.14 – Epic description](img/Figure_2.14_B18318.jpg)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.14 – 史诗描述](img/Figure_2.14_B18318.jpg)'
- en: Figure 2.14 – Epic description
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.14 – 史诗描述
- en: '![Figure 2.15 – Assignee](img/Figure_2.15_B18318.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.15 – 分配者](img/Figure_2.15_B18318.jpg)'
- en: Figure 2.15 – Assignee
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.15 – 分配者
- en: Close the popup.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭弹出窗口。
- en: Now that we have created a Jira epic, we can add *items* to this epic. The items
    we will be adding to the epic will be user stories.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经创建了一个 Jira 史诗，我们可以向这个史诗添加 *项目*。我们将添加到史诗中的项目将是用户故事。
- en: Writing user stories
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编写用户故事
- en: A *Jira user story* is a software feature written informally in a descriptive
    and expressive way from the perspective of an end user. An end user can be a non-technical
    customer or a software developer who will end up being the consumer of the software
    that will be produced.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 一个 *Jira 用户故事* 是从最终用户的角度以非正式的、描述性和表达性的方式编写的软件功能。最终用户可以是非技术客户或将成为即将生产的软件消费者的软件开发者。
- en: We created an epic called **Inventory Clerk Solution** in the previous section,
    which will contain all the things we will need for an inventory clerk to record
    all information about donated toy car models.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一节中，我们创建了一个名为**存货管理员解决方案**的史诗，它将包含存货管理员记录所有捐赠玩具车型号信息的所有所需内容。
- en: But what would the inventory clerks need to be able to achieve that goal? First,
    they will need a window or a web page that contains a form. This form will then
    be used to record the data for a specific toy car model.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 但存货管理员需要什么才能实现这个目标呢？首先，他们需要一个包含表单的窗口或网页。然后，这个表单将被用来记录特定玩具车型号的数据。
- en: But how would an inventory clerk identify themself to the system? It looks like
    we will need authentication and authorization functionalities, and with these
    functionalities, we will be able to restrict the data input part of the system
    to authorized users only.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 但存货管理员如何向系统标识自己呢？看起来我们需要身份验证和授权功能，有了这些功能，我们就能将系统数据输入部分仅限于授权用户。
- en: After inventory clerks have authenticated themselves, they should be able to
    start inputting and recording toy car model data into the system.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在存货管理员完成身份验证后，他们应该能够开始将玩具车型号数据输入和记录到系统中。
- en: For now, let’s stick to these simple features and start writing stories.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们坚持这些简单的功能并开始编写故事。
- en: We have identified at least three user stories just by thinking about what the
    inventory clerk needs to be able to do to input and record a toy car model into
    the system.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 仅通过思考库存管理员需要能够做什么来输入和记录玩具车模型到系统中，我们就已经确定了至少三个用户故事。
- en: 'We can use the following template to write our own user stories:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用以下模板来编写我们自己的用户故事：
- en: '*As a/an [Actor], [I want to], [**so that]*'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '*作为[参与者]，[我想要]，[**以便**]*'
- en: As an inventory clerk, I want to be able to log in to the system so that I can
    access the inventory system
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为库存管理员，我希望能够登录到系统，以便我可以访问库存系统
- en: As an inventory clerk, I want to be able to input toy car model data so that
    I can save the data
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为库存管理员，我希望能够输入玩具车模型数据，以便我可以保存数据
- en: As an inventory clerk, I want to be able to see a table containing the records
    so that I can review all the toy car model data stored
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为库存管理员，我希望能够看到包含记录的表格，以便我可以审查所有存储的玩具车型号数据
- en: Now that we have a list of customer user stories we need, let’s create tickets
    for them.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经列出了所需的客户用户故事，让我们为他们创建工单。
- en: Creating Jira user stories
  id: totrans-114
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建Jira用户故事
- en: 'Follow these steps to create Jira user stories:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤创建Jira用户故事：
- en: 'Mouse over on the `What needs to` `be done?`:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 鼠标悬停在`需要做什么？`上：
- en: '![Figure 2.16 – What needs to be done? text: user story title](img/Figure_2.16_B18318.jpg)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![图2.16 – 需要做什么？文本：用户故事标题](img/Figure_2.16_B18318.jpg)'
- en: 'Figure 2.16 – What needs to be done? text: user story title'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.16 – 需要做什么？文本：用户故事标题
- en: 'In the dropdown to the left of the text field, make sure **Story** is selected:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文本字段左侧的下拉菜单中，确保**故事**被选中：
- en: '![Figure 2.17 – Selecting Story from the dropdown](img/Figure_2.17_B18318.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![图2.17 – 从下拉菜单中选择故事](img/Figure_2.17_B18318.jpg)'
- en: Figure 2.17 – Selecting Story from the dropdown
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.17 – 从下拉菜单中选择故事
- en: 'In the text field, enter a title for our first user story, `As an inventory
    clerk, I want to be able to login to the system, so that I can access the inventory
    system`, and hit *Enter*:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文本字段中，为我们的第一个用户故事输入标题，`作为库存管理员，我希望能够登录到系统，以便我可以访问库存系统`，然后按*Enter*键：
- en: '![Figure 2.18 – First user story](img/Figure_2.18_B18318.jpg)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![图2.18 – 第一个用户故事](img/Figure_2.18_B18318.jpg)'
- en: Figure 2.18 – First user story
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.18 – 第一个用户故事
- en: 'Repeat the steps to create the three stories we have listed down:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复步骤以创建我们列出的三个故事：
- en: '![Figure 2.19 – Epic with user stories ](img/Figure_2.19_B18318.jpg)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![图2.19 – 带有用户故事的史诗](img/Figure_2.19_B18318.jpg)'
- en: Figure 2.19 – Epic with user stories
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.19 – 带有用户故事的史诗
- en: These user stories will play a very important role in the behavior-driven tests
    we are going to be writing in [*Chapter 6*](B18318_06.xhtml#_idTextAnchor094),
    *Applying* *Behaviour-Driven Development*.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 这些用户故事将在我们即将编写的[第6章](B18318_06.xhtml#_idTextAnchor094)中发挥非常重要的作用，即*应用* *行为驱动开发*。
- en: 'Now that we have created our first epic and user stories for the **Inventory
    Clerk Solution** epic, repeat the steps to create visitor epic and user stories.
    You can use the following epic name and user stories:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经为**库存管理员解决方案**史诗创建了第一个史诗和用户故事，重复这些步骤来创建访客史诗和用户故事。您可以使用以下史诗名称和用户故事：
- en: 'Admin epic name: **Visitors Page**'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 管理员史诗名称：**访客页面**
- en: 'User stories:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 用户故事：
- en: As a visitor, I’d like to see a public page with a table with car model info,
    so that I can browse through the inventory
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为访客，我希望看到包含汽车型号信息的公共页面，以便我可以浏览库存
- en: 'As a visitor, I’d like to be able to filter the table, so that I can narrow
    down the results:'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为访客，我希望能够过滤表格，以便我可以缩小结果：
- en: '![Figure 2.20 – Epics and user stories](img/Figure_2.20_B18318.jpg)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![图2.20 – 史诗和用户故事](img/Figure_2.20_B18318.jpg)'
- en: Figure 2.20 – Epics and user stories
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.20 – 史诗和用户故事
- en: After those steps, we will now have some lists of things we want to achieve
    as a customer and as an admin. The list of things we want to achieve is called
    **User Stories**, and we have grouped it by using epics. Before writing code,
    we want to be able to store and version our code somewhere. We will use Bitbucket
    as our version control solution.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些步骤之后，我们现在将有一些作为客户和作为管理员想要实现的事情的列表。我们想要实现的事情的列表被称为**用户故事**，我们通过史诗对其进行分组。在编写代码之前，我们希望能够在某个地方存储和版本控制我们的代码。我们将使用Bitbucket作为我们的版本控制解决方案。
- en: Integrating Jira with Bitbucket
  id: totrans-137
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将Jira与Bitbucket集成
- en: We will need a Git repository for our code, and it would be great if we could
    integrate it with the list of tasks (Jira tickets) we need to build. Jira offers
    a lot of software integration solutions, which is great. Jira can be integrated
    with our code repository, and with CI solutions, which will be discussed in [*Chapter
    9*](B18318_09.xhtml#_idTextAnchor138), *Continuous Integration*.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要一个Git仓库来存放我们的代码，如果能将其与我们需要构建的任务列表（Jira工单）集成那就太好了。Jira提供了许多软件集成解决方案，这真是太好了。Jira可以与我们的代码仓库集成，以及与CI解决方案集成，这些将在[*第9章*](B18318_09.xhtml#_idTextAnchor138)
    *持续集成*中讨论。
- en: There is a lot of Git version control hosting software out there, but for this
    project, we will be using Bitbucket so that we can quickly integrate it with Jira
    and spend more of our precious time on actual coding.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 现在有许多Git版本控制托管软件，但在这个项目中，我们将使用Bitbucket，以便我们可以快速将其与Jira集成，并将更多宝贵的时间用于实际的编码。
- en: First, you will need to create a Bitbucket account for this example project.
    Go to [https://bitbucket.org/product](https://bitbucket.org/product) and sign
    up for an account. If you have an existing Bitbucket account, that should work
    too.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，您需要为这个示例项目创建一个Bitbucket账户。访问[https://bitbucket.org/product](https://bitbucket.org/product)
    并注册一个账户。如果您已经有了现有的Bitbucket账户，那也可以使用。
- en: There is a lengthy set of instructions for integrating Bitbucket with Jira Cloud;
    follow the instructions at https://support.atlassian.com/jira-software-cloud/docs/enable-code/
    or [https://support.atlassian.com/jira-cloud-administration/docs/connect-jira-cloud-to-bitbucket/](https://support.atlassian.com/jira-cloud-administration/docs/connect-jira-cloud-to-bitbucket/).
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 集成Bitbucket与Jira Cloud有一套详细的说明；请遵循https://support.atlassian.com/jira-software-cloud/docs/enable-code/
    或 [https://support.atlassian.com/jira-cloud-administration/docs/connect-jira-cloud-to-bitbucket/](https://support.atlassian.com/jira-cloud-administration/docs/connect-jira-cloud-to-bitbucket/)上的说明。
- en: 'You can also just click on the **Code** link on the left menu:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 您也可以直接点击左侧菜单上的**代码**链接：
- en: '![Figure 2.21 – Code page](img/Figure_2.21_B18318.jpg)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![图2.21 – 代码页面](img/Figure_2.21_B18318.jpg)'
- en: Figure 2.21 – Code page
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.21 – 代码页面
- en: Click on the **Connect to Bitbucket** button on the main panel. You can then
    follow the instructions to connect your Jira project to your selected Bitbucket
    account.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 点击主面板上的**连接到Bitbucket**按钮。然后您可以按照说明将您的Jira项目连接到您选择的Bitbucket账户。
- en: 'Next, click on the **Project settings** link on the left menu:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，点击左侧菜单上的**项目设置**链接：
- en: '![Figure 2.22 – Project settings menu item](img/Figure_2.22_B18318.jpg)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![图2.22 – 项目设置菜单项](img/Figure_2.22_B18318.jpg)'
- en: Figure 2.22 – Project settings menu item
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.22 – 项目设置菜单项
- en: 'While inside the **Project settings** page, click on the **Features** menu
    item. Once on the **Features** page, in the **Development** group, click on the
    **Configure…** button inside the **Code** section:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 在**项目设置**页面内，点击**功能**菜单项。一旦进入**功能**页面，在**开发**组中，点击**代码**部分内的**配置…**按钮：
- en: '![Figure 2.23 – Code Configure… button](img/Figure_2.23_B18318.jpg)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![图2.23 – 代码配置…按钮](img/Figure_2.23_B18318.jpg)'
- en: Figure 2.23 – Code Configure… button
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.23 – 代码配置…按钮
- en: 'After clicking the **Configure…** button, you’ll be redirected to a **Toolchain**
    page; in the **Build** section, click on the **+ Add** **repository** button:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**配置…**按钮后，您将被重定向到一个**工具链**页面；在**构建**部分，点击**+ 添加** **仓库**按钮：
- en: '![Figure 2.24 – + Add repository button](img/Figure_2.24_B18318.jpg)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![图2.24 – + 添加仓库按钮](img/Figure_2.24_B18318.jpg)'
- en: Figure 2.24 – + Add repository button
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.24 – + 添加仓库按钮
- en: 'A popup will appear—select whichever Git solution you want to use with the
    project. In my case, I’m using a free Bitbucket account:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 将会出现一个弹出窗口—选择您想与项目一起使用的任何Git解决方案。在我的情况下，我正在使用一个免费的Bitbucket账户：
- en: '![Figure 2.25 – Selecting a Git product](img/Figure_2.25_B18318.jpg)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![图2.25 – 选择Git产品](img/Figure_2.25_B18318.jpg)'
- en: Figure 2.25 – Selecting a Git product
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.25 – 选择Git产品
- en: 'After clicking on **Bitbucket**, you can now enter a new repository name you
    want to integrate the Jira project with. Or, you can also select a pre-existing
    repository you have created in your own account. For this example, I’ll just create
    a new repository:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**Bitbucket**后，您现在可以输入一个您想与Jira项目集成的新的仓库名称。或者，您也可以选择您在自己的账户中创建的现有仓库。在这个示例中，我将只创建一个新的仓库：
- en: '![Figure 2.26 – Creating a new repository for the Jira project](img/Figure_2.26_B18318.jpg)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![图2.26 – 为Jira项目创建新仓库](img/Figure_2.26_B18318.jpg)'
- en: Figure 2.26 – Creating a new repository for the Jira project
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.26 – 为Jira项目创建新仓库
- en: 'Click the **+ Create** button, and your Jira project should now be integrated
    with your Git repository:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 点击 **+ 创建** 按钮，现在你的 Jira 项目应该已经与你的 Git 仓库集成：
- en: '![Figure 2.27 – Repository integrated with Jira](img/Figure_2.27_B18318.jpg)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.27 – 与 Jira 集成的仓库](img/Figure_2.27_B18318.jpg)'
- en: Figure 2.27 – Repository integrated with Jira
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.27 – 与 Jira 集成的仓库
- en: 'Now, you can go back to the project window by clicking the **Back to project**
    link; then, click on the **Roadmap** link. Click on the **Inventory Clerk Solution**
    epic we created earlier, and you should see a new **Development** section in our
    ticket:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以通过点击 **返回项目** 链接回到项目窗口；然后，点击 **路线图** 链接。点击我们之前创建的 **库存管理员解决方案**史诗，你应该在我们的票据中看到一个新的
    **开发** 部分：
- en: "![Figure 2.28 – Ticket: new Development section with \uFEFFa Create Branch\
    \ link](img/Figure_2.28_B18318.jpg)"
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.28 – 票据：带有创建分支链接的新开发部分](img/Figure_2.28_B18318.jpg)'
- en: 'Figure 2.28 – Ticket: new Development section with a Create Branch link'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.28 – 票据：带有创建分支链接的新开发部分
- en: 'Now that everything is configured, you should be able to create Bitbucket branches
    from your Jira tickets. In the **Inventory Clerk Solution** popup, click on the
    **Create Branch** link. You’ll be redirected to your Git repository page where
    you can proceed to create a branch:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 现在一切配置就绪，你应该能够从你的 Jira 票据中创建 Bitbucket 分支。在 **库存管理员解决方案** 弹出窗口中，点击 **创建分支**
    链接。你将被重定向到你的 Git 仓库页面，在那里你可以继续创建分支：
- en: '![Figure 2.29 – Creating a new branch for the epic](img/Figure_2.29_B18318.jpg)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.29 – 为史诗创建新分支](img/Figure_2.29_B18318.jpg)'
- en: Figure 2.29 – Creating a new branch for the epic
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.29 – 为史诗创建新分支
- en: 'Go back to the **Roadmap** page, and refresh the page. Open the **Inventory
    Clerk Solution** epic again, and this time, in the **Development** section, you
    will see that there is now one branch connected to our Jira epic:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 **路线图** 页面，刷新页面。再次打开 **库存管理员解决方案**史诗，这次，在 **开发** 部分中，你会看到现在有一个分支连接到我们的 Jira史诗：
- en: '![Figure 2.30 – One branch connected to the Jira epic](img/Figure_2.30_B18318.jpg)'
  id: totrans-171
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.30 – 一个连接到 Jira 史诗分支](img/Figure_2.30_B18318.jpg)'
- en: Figure 2.30 – One branch connected to the Jira epic
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.30 – 一个连接到 Jira史诗的分支
- en: We now have the ability to create Git repositories using Jira. This will come
    in handy as we go along in the project because this means that our Git repository
    is now integrated properly with our ticketing solution.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们有了使用 Jira 创建 Git 仓库的能力。随着项目的进行，这将非常有用，因为这意味着我们的 Git 仓库现在已正确集成到我们的票据解决方案中。
- en: We will be using BitBucket for this example project, but you are free to choose
    your own preferred version control system and integrate it with Jira.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在这个示例项目中使用 BitBucket，但你完全可以选择你自己的首选版本控制系统并将其与 Jira 集成。
- en: Summary
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we were able to come up with an example project based on a
    real-life problem that my friends encountered with a car museum. By trying to
    understand what the business or client wants to achieve, we were able to identify
    the problems or challenges that are stopping the business or client from achieving
    that goal. By analyzing our proposed solution to the problems, we were able to
    come up with plans for a solution. We listed down the solutions as user stories
    and grouped them under an epic.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们能够基于朋友在汽车博物馆遇到的真实问题创建了一个示例项目。通过试图理解业务或客户想要实现的目标，我们能够确定阻碍业务或客户实现该目标的问题或挑战。通过分析我们针对问题的解决方案，我们能够制定解决方案的计划。我们将解决方案列成用户故事，并将它们分组在一个史诗下。
- en: These user stories tell us about behaviors—system behaviors, to be exact. Why
    are these important? Well, by understanding what we need to build, we developers
    can plan *how* we build solutions better. I have seen software being built for
    weeks or months, and after completion, the developers and business analysts realize
    that the solution does not even solve the problem that is stopping the business
    or the client from achieving its goal simply because the business analysts and
    developers did not understand what the business was trying to achieve or solve.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 这些用户故事告诉我们关于行为的信息——确切地说，是系统行为。为什么这些很重要呢？好吧，通过理解我们需要构建什么，我们开发者可以更好地规划如何构建解决方案。我见过软件被构建了数周或数月，完成后，开发者和业务分析师才意识到该解决方案甚至没有解决阻碍业务或客户实现其目标的根本问题，仅仅是因为业务分析师和开发者没有理解业务试图实现或解决的问题。
- en: By having a clean list of items that define what needs to be built, we will
    be able to come up with automated tests that will check whether we have satisfied
    the desired behavior. We will be building those automated behavior-driven tests
    in [*Chapter 6*](B18318_06.xhtml#_idTextAnchor094), *Applying* *Behaviour-Driven
    Development*.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 通过拥有一份清晰的待建项目列表，我们将能够制定出自动测试，以检查我们是否满足了预期的行为。我们将在[*第6章*](B18318_06.xhtml#_idTextAnchor094)中构建这些自动化的行为驱动测试，即*应用行为驱动开发*。
- en: In the next chapter, we will be introducing *Docker containers* and building
    our own container. This container will then be used to contain and run the PHP
    software solution that we will be building to achieve the business’s goal.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将介绍*Docker容器*并构建我们自己的容器。这个容器将被用来包含并运行我们将构建以实现业务目标的PHP软件解决方案。
