["```php\nadd_action( 'init', 'ch4_br_create_book_post_type' ); \n```", "```php\nfunction ch4_br_create_book_post_type() { \n    register_post_type( 'book_reviews', \n        array( \n            'labels' => array( \n                'name' => 'Book Reviews', \n                'singular_name' => 'Book Review', \n                'add_new' => 'Add New', \n                'add_new_item' => 'Add New Book Review', \n                'edit' => 'Edit', \n                'edit_item' => 'Edit Book Review', \n                'new_item' => 'New Book Review', \n                'view' => 'View', \n                'view_item' => 'View Book Review', \n                'search_items' => 'Search Book Reviews', \n                'not_found' => 'No Book Reviews found', \n                'not_found_in_trash' =>  \n                    'No Book Reviews found in Trash', \n                'parent' => 'Parent Book Review'                     \n            ), \n            'public' => true, \n            'menu_position' => 20, \n            'supports' =>  \n                array( 'title', 'editor', 'comments', \n                       'thumbnail', 'custom-fields' ), \n            'taxonomies' => array( '' ), \n            'menu_icon' =>  \n                plugins_url( 'book-reviews.png', __FILE__ ), \n            'has_archive' => true,\n            'exclude_from_search' => true \n        ) \n    ); \n} \n```", "```php\nregister_post_type( $post_type, $args ); \n```", "```php\n'rewrite' => array( 'slug' => 'awesome-book-reviews' ) \n```", "```php\nglobal $wp_rewrite; \n$wp_rewrite->flush_rules(); \n```", "```php\nadd_action( 'admin_init', 'ch4_br_admin_init' ); \n```", "```php\nfunction ch4_br_admin_init() { \n    add_meta_box( 'ch4_br_review_details_meta_box',  \n                  'Book Review Details', \n                  'ch4_br_display_review_details_meta_box', \n                  'book_reviews', 'normal', 'high' ); \n} \n```", "```php\nfunction ch4_br_display_review_details_meta_box( $book_review ) {  \n    // Retrieve current author and rating based on review ID \n    $book_author = \n          esc_html( get_post_meta( $book_review->ID, \n                                   'book_author', true ) ); \n    $book_rating = \n          intval( get_post_meta( $book_review->ID,\n                                 'book_rating', true ) ); \n    ?> \n    <table> \n        <tr> \n            <td style=\"width: 100%\">Book Author</td> \n            <td><input type=\"text\" size=\"80\" \n                       name=\"book_review_author_name\" \n                       value=\"<?php echo $book_author; ?>\" /></td> \n        </tr> \n        <tr> \n            <td style=\"width: 150px\">Book Rating</td> \n            <td> \n                <select style=\"width: 100px\" \n                        name=\"book_review_rating\"> \n                <!-- Loop to generate items in dropdown list -->\n                <?php\n                for ( $rating = 5; $rating >= 1; $rating -- ) { ?> \n                <option value=\"<?php echo $rating; ?>\"\n                <?php echo selected( $rating, $book_rating ); ?>>\n                <?php echo $rating; ?> stars \n                <?php } ?> \n                </select> \n            </td> \n        </tr> \n    </table> \n <?php } \n```", "```php\nadd_action( 'save_post', 'ch4_br_add_book_review_fields', 10, 2 ); \n```", "```php\nfunction ch4_br_add_book_review_fields( $book_review_id,\n                                        $book_review ) { \n    // Check post type for book reviews \n    if ( 'book_reviews' == $book_review->post_type ) { \n        // Store data in post meta table if present in post data \n        if ( isset( $_POST['book_review_author_name'] ) ) {\n            update_post_meta( $book_review_id, 'book_author', \n                sanitize_text_field( \n                    $_POST['book_review_author_name'] ) ); \n        } \n\n        if ( isset( $_POST['book_review_rating'] ) && \n             !empty( $_POST['book_review_rating'] ) ) {            \n            update_post_meta( $book_review_id, 'book_rating', \n                intval( $_POST['book_review_rating'] ) ); \n        } \n    } \n} \n```", "```php\n   'supports' => array( 'title', 'editor', 'comments', 'thumbnail' ), \n```", "```php\nget_post_meta( $post_id, $field_name, $single ); \n```", "```php\nadd_filter( 'template_include', 'ch4_br_template_include', 1 ); \n```", "```php\nfunction ch4_br_template_include( $template_path ) {      \n    if ( 'book_reviews' == get_post_type() ) { \n        if ( is_single() ) { \n            // checks if the file exists in the theme first, \n            // otherwise install content filter \n            if ( $theme_file = locate_template( array\n                 ( 'single-book_reviews.php' ) ) ) { \n                $template_path = $theme_file; \n            } else { \n                add_filter( 'the_content',\n                            'ch4_br_display_single_book_review',\n                            20 ); \n            } \n        } \n    } \n    return $template_path; \n} \n```", "```php\nfunction ch4_br_display_single_book_review( $content ) {\n    if ( !empty( get_the_ID() ) ) {\n        // Display featured image in right-aligned floating div\n        $content = '<div style=\"float: right; margin: 10px\">';\n        $content .= get_the_post_thumbnail( get_the_ID(),\n                                            'medium' );\n        $content .= '</div>';\n\n        $content .= '<div class=\"entry-content\">'; \n\n        // Display Author Name\n        $content .= '<strong>Author: </strong>';\n        $content .= esc_html( get_post_meta( get_the_ID(),\n                                             'book_author', \n                                             true ) );\n        $content .= '<br />';\n\n        // Display yellow stars based on rating -->\n        $content .= '<strong>Rating: </strong>';\n\n        $nb_stars = intval( get_post_meta( get_the_ID(),\n                                           'book_rating', \n                                           true ) );\n\n        for ( $star_counter = 1; $star_counter <= 5; \n                  $star_counter++ ) {\n            if ( $star_counter <= $nb_stars ) {\n                $content .= '<img src=\"img/>                                         __FILE__ ) . '\" \n                            />';\n            } else {\n                $content .= '<img src=\"img/>                            . '\" />';\n            }\n        }\n\n        // Display book review contents\n        $content .= '<br /><br />';\n        $content .= get_the_content( get_the_ID() );\n        $content .= '</div>';\n\n        return $content;\n    }\n} \n```", "```php\nadd_shortcode( 'book-review-list', 'ch4_br_book_review_list' ); \n```", "```php\nfunction ch4_br_book_review_list() { \n    // Preparation of query array to retrieve 5 book reviews \n    $query_params = array( 'post_type' => 'book_reviews', \n                           'post_status' => 'publish', \n                           'posts_per_page' => 5 );\n\n    // Execution of post query \n    $book_review_query = new WP_Query; \n    $book_review_query->query( $query_params );\n\n    // Check if any posts were returned by the query \n    if ( $book_review_query->have_posts() ) { \n        // Display posts in table layout \n        $output = '<table>';\n\n        $output .= '<tr><th style=\"width: 350px\"><strong>'; \n        $output .= 'Title</strong></th>'; \n        $output .= '<th><strong>Author</strong></th></tr>';\n\n        // Cycle through all items retrieved \n        while ( $book_review_query->have_posts() ) { \n            $book_review_query->the_post();\n\n            $output .= '<tr><td><a href=\"' . get_permalink(); \n            $output .= '\">'; \n            $output .= get_the_title( get_the_ID() ) . '</a></td>'; \n            $output .= '<td>'; \n            $output .= esc_html( get_post_meta( get_the_ID(), \n                                                'book_author',\n                                                true ) ); \n            $output .= '</td></tr>'; \n        }\n\n        $output .= '</table>'; \n\n        // Display page navigation links \n        if ( $book_review_query->max_num_pages > 1 ) { \n            $output .= '<nav id=\"nav-below\">'; \n            $output .= '<div class=\"nav-previous\">'; \n            $output .= get_next_posts_link ( \n                '<span class=\"meta-nav\">&larr;</span>' .\n                ' Older reviews',\n                $book_review_query->max_num_pages ); \n            $output .= '</div>'; \n            $output .= '<div class=\"nav-next\">'; \n            $output .= get_previous_posts_link( \n                  'Newer reviews ' .\n                  '<span class=\"meta-nav\">&rarr;</span>', \n                  $book_review_query->max_num_pages ); \n            $output .= '</div>'; \n            $output .= '</nav>'; \n        }\n\n        // Reset post data query \n        wp_reset_postdata(); \n    }\n\n    return $output; \n} \n```", "```php\n// Preparation of query string to retrieve 5 book reviews \n$query_params = array( 'post_type' => 'book_reviews', \n                       'post_status' => 'publish', \n                       'posts_per_page' => 5 ); \n\n// Retrieve page query variable, if present \n$page_num = ( get_query_var( 'paged' ) ? \n              get_query_var( 'paged' ) : 1 ); \n\n// If page number is higher than 1, add to query array \nif ( $page_num != 1 ) {\n $query_params['paged'] = $page_num; \n}\n```", "```php\n<?php echo do_shortcode( '[book-review-list]' ); ?> \n```", "```php\nregister_taxonomy( \n    'book_reviews_book_type',       \n    'book_reviews',                  \n    array( \n        'labels' => array( \n            'name' => 'Book Type', \n            'add_new_item' => 'Add New Book Type', \n            'new_item_name' => 'New Book Type Name'\n        ), \n        'show_ui' => true, \n        'show_tagcloud' => false, \n        'hierarchical' => true \n    )\n); \n```", "```php\n$book_types = wp_get_post_terms( get_the_ID(), \n                                'book_reviews_book_type' ); \n\n$content .= '<br /><strong>Type: </strong>';\n\nif ( $book_types ) { \n    $first_entry = true; \n    for ( $i = 0; $i < count( $book_types ); $i++ ) { \n        if ( !$first_entry ) {\n            $content .= ', ';\n        }\n        $content .= $book_types[$i]->name; \n        $first_entry = false; \n    } \n} else {\n    $content .= 'None Assigned';\n}\n```", "```php\nregister_taxonomy( $taxonomy_name, $post_type, $options );  \n```", "```php\nadd_action( 'book_reviews_book_type_edit_form_fields', \n            'ch4_br_book_type_new_fields', 10, 2 );\nadd_action( 'book_reviews_book_type_add_form_fields',\n            'ch4_br_book_type_new_fields', 10, 2 );\n```", "```php\nfunction ch4_br_book_type_new_fields( $tag ) {\n    $mode = 'new';\n\n    if ( is_object( $tag ) ) {\n        $mode = 'edit';\n        $book_cat_color = get_term_meta( $tag->term_id, \n                                         'book_type_color',\n                                         true );\n    }\n    $book_cat_color = empty( $book_cat_color ) ? \n                          '#' : $book_cat_color;\n\n    if ( 'edit' == $mode ) {\n        echo '<tr class=\"form-field\">';\n        echo '<th scope=\"row\" valign=\"top\">';\n    } elseif ( 'new' == $mode ) {\n        echo '<div class=\"form-field\">';\n    } ?>\n\n    <label for=\"tag-category-url\">Color</label>\n    <?php if ( 'edit' == $mode ) {\n        echo '</th><td>';\n    } ?>\n\n    <input type=\"text\" id=\"book_type_color\" \n           name=\"book_type_color\"\n           value=\"<?php echo $book_cat_color; ?>\" />\n    <p class=\"description\">Color associated with book type \n                           (e.g. #199C27 or #CCC)</p>\n\n    <?php if ( 'edit' == $mode ) {\n        echo '</td></tr>'; \n    } elseif ( 'new' == $mode ) {\n        echo '</div>';\n    }\n}\n```", "```php\nadd_action( 'edited_book_reviews_book_type',\n            'ch4_br_save_book_type_new_fields', 10, 2 );\nadd_action( 'created_book_reviews_book_type',\n            'ch4_br_save_book_type_new_fields', 10, 2 );\n```", "```php\nfunction ch4_br_save_book_type_new_fields( $term_id, $tt_id ) {\n    if ( !$term_id ) {\n        return;\n    }\n\n    if ( isset( $_POST['book_type_color'] ) \n             && ( '#' == $_POST['book_type_color'] \n         || preg_match( '/#([a-f0-9]{3}){1,2}\\b/i', \n                        $_POST['book_type_color'] ) ) ) {\n        $returnvalue = update_term_meta( $term_id, \n                           'book_type_color', \n                           $_POST['book_type_color'] );\n    }\n}\n```", "```php\n   'show_tagcloud' => false, \n   'meta_box_cb' => false,\n   'hierarchical' => true\n```", "```php\n<tr> \n    <td>Book Type</td> \n    <td> \n    <?php \n        // Retrieve array of types assigned to post \n        $assigned_types = wp_get_post_terms( $book_review->ID, \n                              'book_reviews_book_type' ); \n\n        // Retrieve array of all book types in system \n        $book_types = get_terms( 'book_reviews_book_type', \n                                 array( 'orderby' => 'name',\n                                        'hide_empty' => 0) ); \n\n        if ( $book_types ) { \n            echo '<select name=\"book_review_book_type\"'; \n            echo ' style=\"width: 400px\">'; \n\n            foreach ( $book_types as $book_type ) {                 \n                echo '<option value=\"' . $book_type->term_id;\n                echo '\" '; \n                if ( !empty( $assigned_types ) ) {            \n                    selected( $assigned_types[0]->term_id, \n                              $book_type->term_id );\n                }\n                echo '>' . esc_html( $book_type->name ); \n                echo '</option>'; \n            }         \n\n            echo '</select>'; \n        } ?> \n    </td> \n</tr> \n```", "```php\nif ( isset( $_POST['book_review_book_type'] ) \n     && !empty( $_POST['book_review_book_type'] ) ) { \n    wp_set_post_terms( $book_review->ID, \n                       intval( $_POST['book_review_book_type'] ), \n                       'book_reviews_book_type' ); \n} \n```", "```php\nadd_filter( 'manage_edit-book_reviews_columns',\n            'ch4_br_add_columns' ); \n```", "```php\nfunction ch4_br_add_columns( $columns ) { \n    $columns['book_reviews_author'] = 'Author'; \n    $columns['book_reviews_rating'] = 'Rating'; \n    $columns['book_reviews_type'] = 'Type'; \n\n    unset( $columns['comments'] ); \n\n    return $columns; \n} \n```", "```php\nadd_action( 'manage_posts_custom_column', \n            'ch4_br_populate_columns' ); \n```", "```php\nfunction ch4_br_populate_columns( $column ) { \n    if ( 'book_reviews_author' == $column ) { \n        $book_author = esc_html( get_post_meta( get_the_ID(), \n                                                'book_author', \n                                                true ) ); \n        echo $book_author; \n    } elseif ( 'book_reviews_rating' == $column ) { \n        $book_rating = get_post_meta( get_the_ID(), 'book_rating', \n                                      true ); \n        echo $book_rating . ' stars'; \n    } elseif ( 'book_reviews_type' == $column ) {\n        $book_types = wp_get_post_terms( get_the_ID(), \n                          'book_reviews_book_type' );                 \n        if ( $book_types ) {\n            $book_cat_color = get_term_meta( \n                                  $book_types[0]->term_id,\n                                  'book_type_color', true );\n\n            if ( '#' != $book_cat_color ) {\n                echo '<span style=\"background-color: ';\n                echo $book_cat_color . '; ';\n                echo 'color: #fff; padding: 6px;\">';\n                echo $book_types[0]->name . '</span>';\n            } else {\n                echo $book_types[0]->name;\n            }\n        } else {\n            echo 'None Assigned'; \n        }\n    } \n} \n```", "```php\nadd_filter( 'manage_edit-book_reviews_sortable_columns', \n            'ch4_br_author_column_sortable' ); \n```", "```php\nfunction ch4_br_author_column_sortable( $columns ) { \n    $columns['book_reviews_author'] = 'book_reviews_author'; \n    $columns['book_reviews_rating'] = 'book_reviews_rating'; \n\n    return $columns; \n} \n```", "```php\nadd_filter( 'request', 'ch4_br_column_ordering' ); \n```", "```php\nfunction ch4_br_column_ordering( $vars ) { \n    if ( !is_admin() ) {\n        return $vars;\n    }\n\n    if ( isset( $vars['orderby'] ) &&  \n         'book_reviews_author' == $vars['orderby'] ) { \n        $vars = array_merge( $vars, array( \n            'meta_key' => 'book_author', \n            'orderby' => 'meta_value' ) ); \n    } elseif ( isset( $vars['orderby'] ) &&  \n               'book_reviews_rating' == $vars['orderby'] ) { \n        $vars = array_merge( $vars, array( \n                                 'meta_key' => 'book_rating', \n                                 'orderby' => 'meta_value_num' ) ); \n    } \n    return $vars; \n} \n```", "```php\nadd_action( 'restrict_manage_posts',\n            'ch4_br_book_type_filter_list' ); \n```", "```php\nfunction ch4_br_book_type_filter_list() { \n    $screen = get_current_screen(); \n    global $wp_query; \n    if ( 'book_reviews' == $screen->post_type ) { \n        wp_dropdown_categories( array( \n            'show_option_all' =>  'Show All Book Types', \n            'taxonomy'        =>  'book_reviews_book_type', \n            'name'            =>  'book_reviews_book_type', \n            'orderby'         =>  'name', \n            'selected'        =>  \n            ( isset( $wp_query->query['book_reviews_book_type'] )         \n              ? $wp_query->query['book_reviews_book_type'] : '' ), \n            'hierarchical'    =>  false, \n            'depth'           =>  3, \n            'show_count'      =>  false, \n            'hide_empty'      =>  true, \n            ) ); \n    } \n} \n```", "```php\nadd_filter( 'parse_query', 'ch4_br_perform_book_type_filtering' );\n```", "```php\nfunction ch4_br_perform_book_type_filtering( $query ) {\n    $qv = &$query->query_vars; \n\n    if ( isset( $qv['book_reviews_book_type'] ) &&\n         !empty( $qv['book_reviews_book_type'] ) && \n         is_numeric( $qv['book_reviews_book_type'] ) ) { \n        $term = get_term_by( 'id', \n                             $qv['book_reviews_book_type'], \n                             'book_reviews_book_type' );     \n        $qv['book_reviews_book_type'] = $term->slug; \n    } \n} \n```", "```php\n'show_tagcloud' => false, \n'meta_box_cb' => false,\n'show_in_quick_edit' => false,\n'hierarchical' => true,\n```", "```php\nadd_action( 'quick_edit_custom_box',\n            'ch4_br_display_custom_quickedit_link', 10, 2 );\n```", "```php\nfunction ch4_br_display_custom_quickedit_link( $column_name, \n                                               $post_type ) {\n    if ( 'book_reviews' == $post_type ) {\n        switch ( $column_name ) {\n            case 'book_reviews_author': ?>\n                <fieldset class=\"inline-edit-col-right\">\n                <div class=\"inline-edit-col\">\n                   <label><span class=\"title\">Author</span></label>\n                   <input type=\"text\"       \n                          name='book_reviews_author_input'\n                          id='book_reviews_author_input' value=\"\">\n                </div>\n                <?php break;\n            case 'book_reviews_rating': ?>\n                <div class=\"inline-edit-col\">\n                    <label>\n                        <span class=\"title\">Rating</span>\n                    </label>\n                    <select name='book_reviews_rating_input'\n                            id='book_reviews_rating_input'>\n                    <?php // Generate all items of drop-down list \n                    for ( $rating = 5; $rating >= 1; $rating -- ) {\n                    ?>  <option value=\"<?php echo $rating; ?>\">\n                        <?php echo $rating; ?> stars \n                    <?php } ?> \n                    </select>\n                </div>\n                <?php break;\n            case 'book_reviews_type': ?>\n                <div class=\"inline-edit-col\">\n                    <label><span class=\"title\">Type</span></label>\n                    <?php\n                    $terms = get_terms( array( 'taxonomy' => \n                                        'book_reviews_book_type',\n                                        'hide_empty' => false ) );\n                    ?>\n                    <select name='book_reviews_type_input'\n                            id='book_reviews_type_input'>\n                    <?php foreach ($terms as $index => $term) {\n                        echo '<option ';\n                        echo 'class=\"book_reviews_type-option\"';\n                        echo 'value=\"' . $term->term_id . '\"';\n                        selected( 0, $index );\n                        echo '>' . $term->name. '</option>';\n                    } ?>\n                    </select>\n                </div>\n            <?php break;\n        } \n    } \n}\n```", "```php\nadd_action( 'admin_footer', 'ch4_br_quick_edit_js' );\n```", "```php\nfunction ch4_br_quick_edit_js() {\n    global $current_screen;\n    if ( ( 'edit-book_reviews' !== $current_screen->id ) ||\n         ( 'book_reviews' !== $current_screen->post_type ) ) {\n        return;\n    } ?>\n\n    <script type=\"text/javascript\">\n    function set_inline_book_reviews( reviewArray ) {\n        // revert Quick Edit menu so that it refreshes properly\n        inlineEditPost.revert();\n        var inputBookAuthor = \n            document.getElementById('book_reviews_author_input');\n        inputBookAuthor.value = reviewArray[0];\n\n        var inputRating =\n            document.getElementById('book_reviews_rating_input');\n        for (i = 0; i < inputRating.options.length; i++) {\n            if ( inputRating.options[i].value == reviewArray[1] ) {\n                inputRating.options[i].setAttribute( 'selected',\n                                                     'selected' );\n            } else {\n                inputRating.options[i].removeAttribute( \n                    'selected' );\n            }\n        } \n\n        var inputBookType =\n            document.getElementById('book_reviews_type_input');\n        for (i = 0; i < inputBookType.options.length; i++) {\n            if ( inputBookType.options[i].value == \n                     reviewArray[2] ) {\n                inputBookType.options[i].setAttribute( 'selected',\n                    'selected' );\n            } else {\n                inputBookType.options[i].removeAttribute( \n                    'selected' );\n            }\n        } \n    }\n</script>\n<?php }\n```", "```php\nadd_filter( 'post_row_actions', 'ch4_br_quick_edit_link', 10, 2 );\n```", "```php\nfunction ch4_br_quick_edit_link( $act, $post ) {\n    global $current_screen;\n    $post_id = '';\n\n    if ( ( isset( $current_screen ) && \n           $current_screen->id != 'edit-book_reviews' &&\n           $current_screen->post_type != 'book_reviews' ) \n         || ( isset( $_POST['screen'] ) &&\n              $_POST['screen'] != 'edit-book_reviews' ) ) {\n        return $act;\n    }\n\n    if ( !empty( $post->ID ) ) {\n        $post_id = $post->ID;\n    } elseif ( isset( $_POST['post_ID'] ) ) {\n        $post_id = intval( $_POST['post_ID'] );\n    }\n\n    if ( !empty( $post_id ) ) {\n        $book_author = esc_html( get_post_meta( $post_id, \n                                     'book_author', true ) ); \n        $book_rating = esc_html( get_post_meta( $post_id, \n                                     'book_rating', true ) );\n        $book_reviews_types = wp_get_post_terms( $post_id, \n                                     'book_reviews_book_type',\n                                     array( 'fields' => 'all' ) );\n        if ( empty( $book_reviews_types ) ) {\n            $book_reviews_types[0] = \n                (object) array( 'term_id' => 0 );\n        }\n\n        $idx = 'inline hide-if-no-js';\n        $act[$idx] = '<a href=\"#\" class=\"editinline\"  ';\n        $act[$idx] .= \" onclick=\\\"var reviewArray = new Array('\";\n        $act[$idx] .= \"{$book_author}', '{$book_rating}', \";\n        $act[$idx] .= \"'{$book_reviews_types[0]->term_id}');\";\n        $act[$idx] .= \"set_inline_book_reviews( reviewArray )\\\">\";\n        $act[$idx] .= __( 'Quick&nbsp;Edit' );\n        $act[$idx] .= '</a>';\n    }\n    return $act;\n}\n```", "```php\nadd_action( 'save_post', 'ch4_br_save_quick_edit_data', 10, 2 );\n```", "```php\nfunction ch4_br_save_quick_edit_data( $ID = false, \n                                      $post = false ) {\n    // Do not save if auto-saving, not book reviews, no permissions\n    if ( ( defined( 'DOING_AUTOSAVE' ) && DOING_AUTOSAVE ) ||\n         ( isset( $_POST['post_type'] ) \n           && 'book_reviews' != $_POST['post_type'] ) ||\n         !current_user_can( 'edit_page', $ID ) ) {\n        return $ID;\n    }\n\n    $post = get_post( $ID );\n    if ( !empty( $post ) && 'revision' != $post->post_type ) {\n        if ( isset( $_POST['book_reviews_author_input'] ) ) {\n            update_post_meta( $ID, 'book_author', \n                sanitize_text_field( \n                    $_POST['book_reviews_author_input'] ) ); \n        }\n\n        if ( isset( $_POST['book_reviews_rating_input'] ) ) {\n            update_post_meta( $ID, 'book_rating', \n                intval( $_POST['book_reviews_rating_input'] ) ); \n        }\n\n        if ( isset( $_POST['book_reviews_type_input'] ) ) {\n            $term = term_exists( \n                intval( $_POST['book_reviews_type_input'] ),\n                        'book_reviews_book_type' );\n            if ( !empty( $term ) ) {\n                wp_set_object_terms( $ID, \n                    intval( $_POST['book_reviews_type_input'] ), \n                            'book_reviews_book_type' );\n            }\n        }\n    } \n}\n```", "```php\nadd_filter( 'document_title_parts', \n            'ch4_br_format_book_review_title' ); \n```", "```php\nfunction ch4_br_format_book_review_title( $the_title ) { \n    if ( 'book_reviews' == get_post_type() && is_single() ) { \n        $book_author = esc_html( get_post_meta( get_the_ID(),  \n                                   'book_author', true ) );\n        if ( !empty( $book_author ) ) {\n            $the_title['title'] .= ' by ' . $book_author;\n        }\n    } \n\n    return $the_title; \n} \n```"]