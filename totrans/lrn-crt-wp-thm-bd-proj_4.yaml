- en: Building a Twitter Bootstrap WordPress Theme
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建 Twitter Bootstrap WordPress 主题
- en: In this chapter, we'll integrate Bootstrap with WordPress. The look of the template
    that we created earlier was pretty simple. We didn't go for some spectacular design.
    The goal of this project is to get you to see how we can bring Bootstrap and WordPress
    together and use it to build more Bootstrap themes for WordPress in the future.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将集成 Bootstrap 与 WordPress。我们之前创建的模板的外观相当简单。我们没有追求一些壮观的设计。这个项目的目标是让你看到我们如何将
    Bootstrap 和 WordPress 结合起来，并使用它来构建更多 WordPress 的 Bootstrap 主题。
- en: 'In this chapter, we''ll cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Building a Bootstrap theme
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建 Bootstrap 主题
- en: Dealing with the post loop
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理文章循环
- en: Implementing the Navbar
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现导航栏
- en: Adding the search bar and single post page
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加搜索栏和单篇文章页面
- en: Exploring the comment functionality
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索评论功能
- en: So let's build a Twitter Bootstrap WordPress theme.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，让我们来构建一个 Twitter Bootstrap WordPress 主题。
- en: Building a Bootstrap theme
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建 Bootstrap 主题
- en: 'In our previously created template, we have a standard Bootstrap navbar up,
    and you can see that we have a drop down:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们之前创建的模板中，我们有一个标准的 Bootstrap 导航栏，你可以看到我们有一个下拉菜单：
- en: '![](img/8cd18acc-58cf-415b-b821-bc859c709021.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/8cd18acc-58cf-415b-b821-bc859c709021.png)'
- en: 'The way that we got to do the drop-down functionality was by using the `wp-bootstrap-navwalker`
    class at [www.github.com/twittem/wp-bootstrap-navwalker](http://www.github.com/twittem/wp-bootstrap-navwalker)
    shown in the following screenshot:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们实现下拉功能的方式是使用 `wp-bootstrap-navwalker` 类，如以下截图所示：[www.github.com/twittem/wp-bootstrap-navwalker](http://www.github.com/twittem/wp-bootstrap-navwalker)：
- en: '![](img/21e5ff02-b589-41b3-b52b-917dd9ef6ee9.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/21e5ff02-b589-41b3-b52b-917dd9ef6ee9.png)'
- en: This is the most common and, probably, the easiest way to integrate a Bootstrap
    navbar with the drop-down functionality in WordPress. Let's implement that.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这是将 Bootstrap 导航栏与下拉功能集成到 WordPress 中最常见且可能也是最容易的方法。让我们来实现它。
- en: As seen earlier, we have the search box up on our WordPress page. We have some
    custom code in the `header` file that allows us to use the search box and have
    it work correctly, and this will work for posts and pages.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，我们在 WordPress 页面上有搜索框。我们在 `header` 文件中有一些自定义代码，允许我们使用搜索框并使其正确工作，这对文章和页面都适用。
- en: 'For instance, if I type `lorem` and hit the Search button, it''s going to bring
    back everything that has the word *lorem* in it:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果我输入 `lorem` 并点击搜索按钮，它将返回包含单词 *lorem* 的所有内容：
- en: '![](img/938c55af-e4d9-4993-a0cb-e5ad05c7afcd.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/938c55af-e4d9-4993-a0cb-e5ad05c7afcd.png)'
- en: 'If we go to the backend, we can see we have some posts that we created earlier:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们进入后台，我们可以看到我们有一些之前创建的文章：
- en: '![](img/bb60038c-c8f0-4fae-887f-a7943c796a0f.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/bb60038c-c8f0-4fae-887f-a7943c796a0f.png)'
- en: 'We also have the featured image for it on the main page:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在主页上也有它的特色图片：
- en: '![](img/9d47448c-8a44-4b17-8ca9-85ba6a5bcfcb.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/9d47448c-8a44-4b17-8ca9-85ba6a5bcfcb.png)'
- en: 'It is the same image we selected in the backend as the featured image:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们在后台作为特色图片选择的相同图片：
- en: '![](img/c8a025d8-84a2-4810-b823-35fa4b7429eb.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/c8a025d8-84a2-4810-b823-35fa4b7429eb.png)'
- en: 'If we click on the title or the Read More button on the Home page, it takes
    us to an inner page with a larger image:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们点击首页上的标题或“阅读更多”按钮，它将带我们到一个包含较大图片的内部页面：
- en: '![](img/8f975cf5-7c3e-40dc-b006-6d03f3e3683f.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/8f975cf5-7c3e-40dc-b006-6d03f3e3683f.png)'
- en: 'You will see that we have the comments down at the bottom of the page and the
    Comment form:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 你会看到评论位于页面底部，以及评论表单：
- en: '![](img/c8b4e6c8-4e7b-4e15-b511-74a4c30e3982.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/c8b4e6c8-4e7b-4e15-b511-74a4c30e3982.png)'
- en: 'Now on the right-hand side, we have a widget sidebar shown as follows:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 现在在右侧，我们有一个如下所示的侧边栏小部件：
- en: '![](img/6c063ab0-5cfc-4769-8e10-709d877bc866.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/6c063ab0-5cfc-4769-8e10-709d877bc866.png)'
- en: 'We actually took some of the core widgets and just tweaked them a little, so
    that we could use the Bootstrap list group. We''ll tweak the following widgets:
    Categories, Recent Posts, and Recent Comments. This will be done to make them
    fit in with the Bootstrap theme.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们实际上对一些核心小部件进行了一些调整，以便我们可以使用 Bootstrap 列表组。我们将调整以下小部件：分类、近期文章和近期评论。这样做是为了使它们与
    Bootstrap 主题相匹配。
- en: 'Let''s go ahead and get started on our Bootstrap theme for WordPress:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始构建我们的 WordPress Bootstrap 主题：
- en: Go to `localhost/wpthemes/`.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往 `localhost/wpthemes/`。
- en: What we can see is just a default installation of WordPress without any posts.
    So we're starting from scratch.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到的是一个没有任何文章的默认 WordPress 安装。因此，我们从零开始。
- en: 'In the Sublime Text editor, we have the sidebar where you can see WordPress
    project root directories, and in the `themes` folder, you can see that we have
    the default themes:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Sublime Text编辑器中，我们有侧边栏，可以查看WordPress项目根目录，在`themes`文件夹中，我们可以看到我们有一些默认主题：
- en: '![](img/5a048954-3252-4a4c-bfc5-82e004dc604e.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/5a048954-3252-4a4c-bfc5-82e004dc604e.png)'
- en: 'Now create a new folder in the `themes` folder called `wordstrap`:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在在`themes`文件夹中创建一个新的文件夹，命名为`wordstrap`：
- en: '![](img/8b33cbca-cace-4548-a5a4-7c88bd3a16de.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/8b33cbca-cace-4548-a5a4-7c88bd3a16de.png)'
- en: Next, we will create the `style.css` file for it. This file also acts like a
    manifest file.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将为它创建一个`style.css`文件。此文件也像是一个清单文件。
- en: 'We need to put in our comments and then add a `Theme Name` called `Wordstrap`.
    We then need to add the `Author` name, `Author URI`, `Description`, and `Version`
    as shown in the following code block:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要添加我们的注释，然后添加一个名为`Theme Name`的`Wordstrap`。然后我们需要添加`Author`名称、`Author URI`、`Description`和`Version`，如下面的代码块所示：
- en: '[PRE0]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Save that and then let's create an `index.php` file.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存它，然后让我们创建一个`index.php`文件。
- en: 'If we go to Appearance | Themes, you can see that we have this wordstrap theme
    now:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们转到外观 | 主题，我们可以看到我们现在有了这个wordstrap主题：
- en: '![](img/002f13ab-2c43-4e7a-ab39-539f1b527381.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/002f13ab-2c43-4e7a-ab39-539f1b527381.png)'
- en: Now we will place an image file in the `theme` folder. You can take any image
    from your project files. Very simple, let's go ahead and reload. We have the wordstrap
    theme, which is very simple.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将一个图像文件放在`theme`文件夹中。你可以从你的项目文件中取任何图像。非常简单，让我们继续重新加载。我们有wordstrap主题，它非常简单。
- en: 'Now, let''s go into `index.php` and put some base HTML tags: `<head>`, `<title>`,
    and `<body>`. We will add `Wordstrap` as the title:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们进入`index.php`并添加一些基本的HTML标签：`<head>`、`<title>`和`<body>`。我们将添加`Wordstrap`作为标题：
- en: '[PRE1]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Next, we need Bootstrap. Let''s go ahead and get that. Go to [https://getbootstrap.com/](https://getbootstrap.com/)
    and let''s download it:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要Bootstrap。让我们继续前进并获取它。转到[https://getbootstrap.com/](https://getbootstrap.com/)并下载它：
- en: '![](img/86e9bcca-5b16-4d3f-9792-d0a1653ace04.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/86e9bcca-5b16-4d3f-9792-d0a1653ace04.png)'
- en: Open up the downloaded ZIP file and our `theme` folder.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开下载的ZIP文件和我们的`theme`文件夹。
- en: Now create a `css` folder within the `wordstrap` folder. We'll now bring `bootstrap.css`
    over.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在`wordstrap`文件夹内创建一个`css`文件夹。我们将现在将`bootstrap.css`文件移动过来。
- en: We'll then create a `js` folder and bring over `bootstrap.js`.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们将创建一个`js`文件夹并将`bootstrap.js`文件移动过来。
- en: 'Now let''s go back into the `index.php` file and include a couple of the `<link>`
    tags. For that, we will add the following code:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们回到`index.php`文件并包含几个`<link>`标签。为此，我们将添加以下代码：
- en: '[PRE2]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Now, we''ll go into the `css` folder and `bootstrap.css`. Next, we also want
    to make sure we include the main stylesheet. To do that, Bootstrap gives us a
    function we can use. We''ll add `stylesheet` and then `href`. We can also put
    in some `php` tags, add `bloginfo`, and here we just want to put in `stylesheet_url`.
    It''ll now bring all the system stylesheets:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将进入`css`文件夹和`bootstrap.css`。接下来，我们还想确保包含主样式表。为此，Bootstrap提供了一个我们可以使用的函数。我们将添加`stylesheet`然后是`href`。我们还可以添加一些`php`标签，添加`bloginfo`，这里我们只想放入`stylesheet_url`。现在它将带来所有系统样式表：
- en: '[PRE3]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Now we want to grab a navbar.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们想要获取一个导航栏。
- en: 'So on the Bootstrap website, let''s go to Components and then navbar:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在Bootstrap网站上，让我们转到组件然后是navbar：
- en: '![](img/b095aca0-4240-469c-942f-6bd9437702a1.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/b095aca0-4240-469c-942f-6bd9437702a1.png)'
- en: 'Let''s copy the entire code example as shown in the following screenshot:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们复制以下截图所示的整个代码示例：
- en: '![](img/d72bb8a1-7944-4d08-b22a-a74913f17362.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/d72bb8a1-7944-4d08-b22a-a74913f17362.png)'
- en: We will paste that in the `body` section of our `index.php` file.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将把它粘贴到`index.php`文件的`body`部分。
- en: Save it, and let's go ahead and activate the theme.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存它，然后让我们继续激活主题。
- en: 'Now, let''s go to the frontend and reload:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们转到前端并重新加载：
- en: '![](img/6a3af90d-410b-4186-92fd-0e7ad7887e07.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/6a3af90d-410b-4186-92fd-0e7ad7887e07.png)'
- en: The reason that it looks like this is because it's not seeing the `bootstrap.css`
    file.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 它看起来像这样是因为它没有看到`bootstrap.css`文件。
- en: 'Let''s look at the source code. You can see that the frontend is looking inside
    `/css/bootstrap`, but this file is actually in the `themes` folder:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们看看源代码。你可以看到前端正在查看`/css/bootstrap`，但实际上这个文件在`themes`文件夹中：
- en: '![](img/65e4e6f6-1ebd-4c5d-8ac8-54ba2a4116d4.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/65e4e6f6-1ebd-4c5d-8ac8-54ba2a4116d4.png)'
- en: 'In order to fix this, we will go back to `index.php`. Let''s go to the `<link>`
    tag and update the code as follows:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了解决这个问题，我们将回到`index.php`。让我们更新`<link>`标签的代码如下：
- en: '[PRE4]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'We''ll save that, go back, and see that it''s working:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将保存它，返回，并查看它是否工作：
- en: '![](img/52a3a092-f253-4055-94ec-d54449fe6b7e.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/52a3a092-f253-4055-94ec-d54449fe6b7e.png)'
- en: To change the navbar a little bit, we will indent the `<nav>` tag.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了稍微改变导航栏，我们将缩进 `<nav>` 标签。
- en: 'We''ll now dump the code quite a bit. First, we will get rid of `fluid`; we
    want it to just be `container`:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将大量删除代码。首先，我们将删除 `fluid`；我们希望它只是 `container`：
- en: '[PRE5]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: We'll get rid of the comments we don't need.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将删除我们不需要的注释。
- en: 'Then we have the `navbar-header` class. This button is for responsiveness.
    So when it''s on a mobile or just a smaller screen in general, we''ll have a button
    we can click on that will then show the menu, so we''ll leave all that stuff:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们有 `navbar-header` 类。这个按钮是为了响应式设计。所以当它在移动设备或一般较小的屏幕上时，我们将有一个可以点击的按钮，然后显示菜单，所以我们将保留所有这些内容：
- en: '[PRE6]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'For the brand, let''s change the code a little bit. We want it to reflect whatever
    we have as the site name in WordPress. We will add `<?php bloginfo(); ?>` and
    then pass in `name`. For `href`, we will add the `<?php bloginfo(); ?>` link and
    put in `url`:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于品牌，让我们稍微改变一下代码。我们希望它反映我们在 WordPress 中的网站名称。我们将添加 `<?php bloginfo(); ?>` 并传递
    `name`。对于 `href`，我们将添加 `<?php bloginfo(); ?>` 链接并放入 `url`：
- en: '[PRE7]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: We then have the `<ul>` tag where we'll implement the `wp-nav-walker` class.
    For that we will just get rid of this whole `<ul>`.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们有 `<ul>` 标签，我们将在这里实现 `wp-nav-walker` 类。为此，我们只需移除整个 `<ul>`。
- en: Then, we have our form that is the search form. It's going to be pretty much
    completely redone, so we will take out everything that's in the `<form>` tags.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们有我们的表单，即搜索表单。它将几乎完全重做，所以我们将从 `<form>` 标签中移除所有内容。
- en: We'll then take out the whole `<ul>` with the `nav navbar-nav navbar-right`
    class.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们将移除带有 `nav navbar-nav navbar-right` 类的整个 `<ul>`。
- en: 'Here''s the entire `nav`:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这里是整个 `nav`：
- en: '[PRE8]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'We''ll hold off just for now with that, let''s see what that looks like:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在暂时不处理这个，看看它是什么样子：
- en: '![](img/6c3dcca6-a6b9-4bd8-8734-4262fec3fd06.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/6c3dcca6-a6b9-4bd8-8734-4262fec3fd06.png)'
- en: As you can see it's very basic. We just have our branding, we'll implement the
    `walker-nav` or the `nav-walker` class later; but let's just continue with some
    of the base HTML.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，它非常基础。我们只有我们的品牌，我们稍后会实现 `walker-nav` 或 `nav-walker` 类；但让我们继续添加一些基本的 HTML。
- en: 'We will create a `<div>` tag right below the ending `</nav>` tag and give it
    a class of `container`, and also add `index`. We will also add a row since we''ll
    use Bootstrap''s grid system. Inside the `row` class, we will add a column using
    `col-md-8`, so that will be an 8-column div, and we''ll also have a 4-column div,
    which will be the sidebar:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将在 `</nav>` 结束标签下方创建一个 `<div>` 标签，并给它一个类名为 `container`，同时添加 `index`。我们还将添加一行，因为我们将使用
    Bootstrap 的网格系统。在 `row` 类内部，我们将使用 `col-md-8` 添加一个列，这将是一个 8 列的 div，我们还将有一个 4 列的
    div，这将是一个侧边栏：
- en: '[PRE9]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'So inside the 8-column div, we will add a panel by using `class="panel"` and
    `panel-default`:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所以在 8 列的 div 内，我们将使用 `class="panel"` 和 `panel-default` 添加一个面板：
- en: '[PRE10]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'We will then add `panel-heading`, and in `panel-heading` we''ll have an `<h3>`
    tag. We''ll give it a class of `panel-title`, and we''ll give it the title `Blog
    Posts`:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将添加 `panel-heading`，在 `panel-heading` 中我们将有一个 `<h3>` 标签。我们将给它一个类名为 `panel-title`，并且给它标题
    `Blog Posts`：
- en: '[PRE11]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Now under the heading `</div>` we will add the `panel-body` div. For that,
    we want the `div class` called `panel-body`. We will then add the post loop, using
    `if(have_posts())`, and the shorthand syntax shown in the following code block:'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在标题 `</div>` 下方，我们将添加 `panel-body` div。为此，我们想要一个名为 `panel-body` 的 `div class`。然后我们将使用
    `if(have_posts())` 添加文章循环，并使用以下代码块中显示的简写语法：
- en: '[PRE12]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Then we''ll add the `while` loop as shown in the following code block:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们将添加如下代码块所示的 `while` 循环：
- en: '[PRE13]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Next we will add two columns, one for the image and another for all the data.
    So let''s add a class called `row` and then we will add a `div class` whose value
    will be `col-md-3`. We will next add `IMAGE HERE` and then add nine columns by
    using `col-md-9`. We will then add in `the_title()` by using `<h2>`:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将添加两个列，一个用于图片，另一个用于所有数据。所以让我们添加一个名为 `row` 的类，然后我们将添加一个 `div class`，其值为
    `col-md-3`。接下来，我们将添加 `IMAGE HERE` 并使用 `col-md-9` 添加九列。然后我们将使用 `<h2>` 添加 `the_title()`：
- en: '[PRE14]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Let''s save that:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们保存一下：
- en: '![](img/0381bda0-60ed-4169-88d3-26c4c00e8ccf.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/0381bda0-60ed-4169-88d3-26c4c00e8ccf.png)'
- en: As you can see, we have our 3-column div where the image will go and then our
    nine-column with the content. We'll get back to adding all the content but let's
    continue and add the sidebar code first.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，我们有一个 3 列的 div 用于放置图片，然后是一个 9 列的内容。我们将回头添加所有内容，但让我们先添加侧边栏代码。
- en: Adding the sidebar
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加侧边栏
- en: 'This is going to be the widget area and for that, we''ll need to do create
    a `functions.php` file first. We''ll need to register the widgets we want which
    will be just the sidebar:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 这将是一个部件区域，为此，我们首先需要创建一个`functions.php`文件。我们需要注册我们想要的部件，这将只是侧边栏：
- en: 'In the `index.php` file right under the `div class`, we''ll add `<?php`. We''ll
    then see if there''s actually a widget active here using `if(is_active_sidebar)`
    and if we need the actual widget position (which will be `sidebar`):'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`index.php`文件中，紧挨着`div class`的地方，我们将添加`<?php`。然后我们将使用`if(is_active_sidebar)`来检查这里是否有一个活跃的部件，并且如果需要实际的部件位置（这将是一个`sidebar`）：
- en: '[PRE15]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Next, we will add `<?php dynamic_sidebar(); ?>`. We also need the position,
    which is `sidebar`. It doesn''t have to be called sidebar; you can call it whatever
    you''d like:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将添加`<?php dynamic_sidebar(); ?>`。我们还需要位置，这个位置是`sidebar`。它不必称为`sidebar`；你可以称它为你想要的任何名字：
- en: '[PRE16]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Now let's save that.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们保存一下。
- en: Adding the footer
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加页脚
- en: 'Now let''s quickly add the footer:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们快速添加页脚：
- en: 'Right under the `container` div, we will create another container. We will
    put a horizontal rule in this container and the `<footer>` tags. Inside `<footer>`
    we''ll have a paragraph and copyright:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`container` div下面，我们将创建另一个容器。在这个容器中我们将放置一条水平线以及`<footer>`标签。在`<footer>`内部我们将有一个段落和版权信息：
- en: '[PRE17]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Now we also want to include two things: we want jQuery and the Bootstrap JavaScript
    files. We''ll place JavaScript files right under the ending `</div>` as shown
    in the following code. We''ll paste in the jQuery script, which is just going
    to be the **CDN** (**Content Delivery Network**), and also `bootstrap.js`. We
    will also use `<?php bloginfo(''template_directory''); ?>` just like we did with
    the `css` file:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们还想包含两个东西：我们想要jQuery和Bootstrap JavaScript文件。我们将JavaScript文件放置在结束的`</div>`下面，如下面的代码所示。我们将粘贴jQuery脚本，它只是**CDN**（**内容分发网络**），以及`bootstrap.js`。我们还将使用`<?php
    bloginfo('template_directory'); ?>`，就像我们处理`css`文件时一样：
- en: '[PRE18]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Let''s save that and reload:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们保存一下并重新加载：
- en: '![](img/adbd5be4-9135-4089-9654-19361f67059a.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![](img/adbd5be4-9135-4089-9654-19361f67059a.png)'
- en: Header and footer
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 头部和页脚
- en: 'Now let''s split this up into a header and a footer file in addition to `index.php`:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们将这个分成一个头部文件、一个页脚文件以及`index.php`：
- en: From the `index.php` file, we'll grab the code from the top down to the end
    of `</nav>`.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从`index.php`文件中，我们将从顶部向下抓取代码，直到`</nav>`的结尾。
- en: Let's create a new file called `header.php`. We will paste the code that we
    grabbed earlier and into this header file and save it.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们创建一个新的文件，命名为`header.php`。我们将把之前抓取的代码粘贴到这个头部文件中并保存。
- en: 'In its place inside `index.php`, we''ll open up a set of `php` tags using `get_header()`:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`index.php`中的相应位置，我们将使用`get_header()`打开一组`php`标签：
- en: '[PRE19]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Our page will look the exact same.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的页面看起来将完全一样。
- en: 'We''ll then do the same thing with `footer`. We''ll grab the code from this
    `container` down to the very bottom, from `<div class="container">` till closing
    `</html>` tag:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们将对`footer`做同样的事情。我们将从这个`container`开始抓取代码，直到非常底部，从`<div class="container">`到关闭的`</html>`标签：
- en: '[PRE20]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Create a `footer` file, paste the grabbed content, and save it.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个`footer`文件，粘贴抓取的内容，并保存。
- en: 'In `index.php` we will add `get_footer()`:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`index.php`中，我们将添加`get_footer()`：
- en: '[PRE21]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: OK, now that should look the exact same. That cleans things up a little bit.
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 好的，现在它应该看起来完全一样。这使事情变得稍微整洁一些。
- en: The post loop
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 帖子循环
- en: So until now we went ahead and set up our core template, core theme, with an
    `index`, a `header`, and a `footer` file. We have also implemented the main post
    loop, but we don't have anything else. We just have the title; we need to fix
    that.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 所以到目前为止，我们继续设置了我们的核心模板，核心主题，包括`index`、`header`和`footer`文件。我们已实现了主要帖子循环，但我们没有其他东西。我们只有标题；我们需要修复这个问题。
- en: But before we do that, we need to make it so that we can actually add images
    to our posts.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 但在我们这样做之前，我们需要确保我们实际上可以添加图片到我们的帖子中。
- en: 'This is because right now if we go and we try to add a new post, we don''t
    have a Featured Image area:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为现在如果我们去尝试添加一个新的帖子，我们没有特色图片区域：
- en: '![](img/478442ae-169b-4de2-a603-d5f5d0661160.png)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![](img/478442ae-169b-4de2-a603-d5f5d0661160.png)'
- en: The Featured Image area
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 特色图片区域
- en: 'For the Featured Image area to show we need to create a `functions.php` file:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让特色图片区域显示，我们需要创建一个`functions.php`文件：
- en: 'Let''s create a new file and call it `functions.php`. Then let''s create a
    function `theme_setup()`. Now, let''s add a comment `Featured Image Support` and
    also add `add_theme_support()` with the value `post-thumbnails`:'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们创建一个新的文件，并命名为`functions.php`。然后让我们创建一个名为`theme_setup()`的函数。现在，让我们添加一个注释`特色图片支持`，并添加`add_theme_support()`，其值为`post-thumbnails`：
- en: '[PRE22]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Underneath the function declaration, we will place `add_action()` and then
    pass in the hook that we want, which is going to be `after_setup_theme`. Then
    we will place the function that we want to use, which is `theme_setup`:'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在函数声明下方，我们将放置 `add_action()` 并传递我们想要的钩子，它将是 `after_setup_theme`。然后我们将放置我们想要使用的函数，即
    `theme_setup`：
- en: '[PRE23]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Let''s save that and reload:'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们保存并刷新：
- en: '![](img/417cbe3a-4f6e-4146-a263-b2b4fdc3f4f1.png)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![](img/417cbe3a-4f6e-4146-a263-b2b4fdc3f4f1.png)'
- en: Now you can see that we have a Featured Image area.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以看到我们有一个特色图片区域。
- en: Creating categories
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建类别
- en: 'So let''s create a couple of categories first before we add a post. Let''s
    add `Technology`, `Food`, `Entertainment`, and `Business` as shown in the following
    screenshot:'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所以让我们先创建几个类别，然后再添加文章。让我们添加“技术”、“食品”、“娱乐”和“商业”类别，如下面的截图所示：
- en: '![](img/91b00ad1-be89-44b3-93e3-e1dd9d40fbe3.png)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![](img/91b00ad1-be89-44b3-93e3-e1dd9d40fbe3.png)'
- en: 'We will only select Technology for now and add the title as `Blog Post One`.
    We will copy some text from the Lorem Ipsum site as before and paste that in:'
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在只选择技术类别，并将标题设置为“博客文章一”。我们将像之前一样从 Lorem Ipsum 网站复制一些文本，并将其粘贴进来：
- en: '![](img/ab9863f0-7b63-417d-8266-2d5021435481.png)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ab9863f0-7b63-417d-8266-2d5021435481.png)'
- en: 'Now we need to select a featured image:'
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们需要选择一个特色图片：
- en: '![](img/19686de8-2be6-4f14-85e9-d074b7dad75c.png)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
  zh: '![](img/19686de8-2be6-4f14-85e9-d074b7dad75c.png)'
- en: 'We can choose any image. In this case, I have selected an image of the Microsoft
    Surface. Click on Set Featured Image and then Publish:'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以选择任何图片。在这种情况下，我选择了一张微软 Surface 的图片。点击“设置特色图片”然后发布：
- en: '![](img/1c2211c1-5c31-4dfc-b16b-57da3604d1e6.png)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1c2211c1-5c31-4dfc-b16b-57da3604d1e6.png)'
- en: 'Go back and reload the page:'
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回并刷新页面：
- en: '![](img/20ad4d38-9323-47db-8ae0-de3a505e8596.png)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![](img/20ad4d38-9323-47db-8ae0-de3a505e8596.png)'
- en: You can see the post but it doesn't look too good. So let's add one more.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到文章，但它看起来不太好。所以让我们再加一个。
- en: Similarly, we will add `Blog Post Two`, paste some text in, let's choose Food
    for a category, and then upload an image. We'll choose the burger image and click
    on Publish.
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同样，我们将添加“博客文章二”，粘贴一些文本，让我们选择“食品”类别，然后上传一张图片。我们将选择汉堡图片并点击发布。
- en: 'We now have a couple of posts to work with:'
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在有几篇文章可以工作：
- en: '![](img/6bdf8e9a-4568-4932-89e0-c6a05fb357af.png)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6bdf8e9a-4568-4932-89e0-c6a05fb357af.png)'
- en: We have an issue here because we're putting the image in its own column inside
    the post, and some posts aren't going to have images. For instance, the Hello
    world post does not have an image. So we need to have some kind of a conditional
    statement, where we'll say if this post has an image, then format it in a certain
    way, and then we'll place an else statement; if it doesn't have an image, we'll
    format it differently.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里遇到了一个问题，因为我们把图片放在了文章的独立列中，而有些文章可能没有图片。例如，Hello world 文章就没有图片。所以我们需要有一种条件语句，如果这篇文章有图片，我们就以某种方式格式化它，然后放置一个
    else 语句；如果没有图片，我们将以不同的方式格式化。
- en: Formatting the post
  id: totrans-161
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 格式化文章
- en: 'Let''s go into our `index.php` file. You can see that we have our loop and
    a row:'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们进入我们的 `index.php` 文件。你可以看到我们的循环和行：
- en: '[PRE24]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Right after the `row` div is where we''ll check to see if there is an image
    using `if(has_post_thumbnail())` and down where the `</div>` ends we''ll add `<?php
    else : ?>` and `<?php endif; ?>`.'
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '在 `row` div 的右边，我们将检查是否有图片使用 `if(has_post_thumbnail())`，在 `</div>` 结束的地方添加
    `<?php else : ?>` 和 `<?php endif; ?>`。'
- en: '[PRE25]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'If there is a thumbnail, then it''s going to show a three-column and a nine-column,
    but if there is no thumbnail, then we want it to be a full twelve-column. For
    that we will use:'
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果有缩略图，它将显示三列和九列，如果没有缩略图，我们希望它是十二列全宽。为此我们将使用：
- en: '[PRE26]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'We''ll start with posts that have the thumbnail. We will get rid of the text
    `Image Here`. We will then create `div` with a class of `post-thumbnail` and then
    we can use `the_post_thumbnail()`:'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将从带有缩略图的文章开始。我们将移除文本“此处显示图片”。然后我们创建一个具有 `post-thumbnail` 类的 `div`，然后我们可以使用
    `the_post_thumbnail()`：
- en: '[PRE27]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Let''s take a look at that so far:'
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们看看到目前为止的情况：
- en: '![](img/7d23dd11-e150-4243-96a6-5ecd9916a930.png)'
  id: totrans-171
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7d23dd11-e150-4243-96a6-5ecd9916a930.png)'
- en: So it's showing the images, they're insanely big but that's alright, the functionality
    is there.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 所以它显示了图片，它们非常大，但这没关系，功能是有的。
- en: Wrapping the post in an article tag
  id: totrans-173
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将文章包裹在 `<article>` 标签中
- en: 'Let''s wrap the post in an `<article>` tag:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将文章包裹在 `<article>` 标签中：
- en: 'Right inside the `while` loop, we''ll add `<article>`, give it a class of `post`,
    and end that just after we end `</div>`:'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `while` 循环中直接添加 `<article>`，给它一个 `post` 类，并在结束 `</div>` 后结束它：
- en: '[PRE28]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Now, open the `style.css` file and add `article.post img`. We'll set `width`
    to `100%`. It's going to be 100% of its container. We'll also set `height` to
    `auto` and let's use `margin-top:30px`.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，打开 `style.css` 文件并添加 `article.post img`。我们将设置 `width` 为 `100%`。它将是其容器的 100%。我们还将设置
    `height` 为 `auto`，并使用 `margin-top:30px`。
- en: '[PRE29]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Now if we reload the page, we get this:'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在如果我们重新加载页面，我们会得到这个：
- en: '![](img/b654d785-7df4-4744-a33f-62b28218a08a.png)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/b654d785-7df4-4744-a33f-62b28218a08a.png)'
- en: This looks much better.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来好多了。
- en: 'Now, let''s go back to the `index.php` file. We want the title to be a link.
    Let''s go right to the `<h2>` tag and let''s put in an `<a>` tag using `echo the_permalink()`.
    And that should be a link to that post:'
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们回到 `index.php` 文件。我们希望标题是一个链接。让我们直接跳到 `<h2>` 标签，并使用 `echo the_permalink()`
    放入一个 `<a>` 标签。这应该是一个链接到那个帖子的链接：
- en: '[PRE30]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Now under the `<h2>` tag, we will place the metadata. We will add it in a paragraph
    and give it a class of `meta`. We will then add `Posted at` and get the time by
    using `the_time()` function. We will use `on` and then we''ll add `the_date()`.
    We will open up some `<strong>` tags and add the author''s name using `the_author()`,
    which should be a function:'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在 `<h2>` 标签下，我们将放置元数据。我们将在一个段落中添加它，并给它一个 `meta` 类。然后我们将添加“发布于”并使用 `the_time()`
    函数获取时间。我们将使用“在”然后添加 `the_date()`。我们将打开一些 `<strong>` 标签，并使用 `the_author()` 函数添加作者的名字，这应该是一个函数：
- en: '[PRE31]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Let''s make sure that''s working:'
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们确保它正常工作：
- en: '![](img/4f8745b6-2e4c-4239-85da-2e2de8aa2417.png)'
  id: totrans-187
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/4f8745b6-2e4c-4239-85da-2e2de8aa2417.png)'
- en: You can see it's telling us the time, the date, and also the author. Also, this
    is a link, so if I click on it, it takes us to that page or that post.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到它告诉我们时间、日期，以及作者。此外，这是一个链接，所以如果我点击它，它会带我们到那个页面或帖子。
- en: Adding content to the post
  id: totrans-189
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加帖子内容
- en: Now what we want is the excerpt or the content, but not all of it. We'll use
    an `excerpt` class instead of `content` because that'll truncate the content.
    Let's go!
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们想要的是摘要或内容，但不是全部。我们将使用 `excerpt` 类而不是 `content`，因为那样会截断内容。让我们开始吧！
- en: 'We want to still be in the nine-column div, so we''ll go under the paragraph
    tag and add `<div class="excerpt">`. We will then add `<?php echo get_the_excerpt();
    ?>`:'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们希望仍然在九列的 `div` 中，所以我们将进入段落标签并添加 `<div class="excerpt">`。然后我们将添加 `<?php echo
    get_the_excerpt(); ?>`：
- en: '[PRE32]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Let''s see if that works:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们看看它是否有效：
- en: '![](img/97e99ba0-6267-403f-810f-d6a1644198b2.png)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/97e99ba0-6267-403f-810f-d6a1644198b2.png)'
- en: That looks good!
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来不错！
- en: Adding a Read More button
  id: totrans-196
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加“阅读更多”按钮
- en: 'Now we will also require a Read More button:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们还需要一个“阅读更多”按钮：
- en: 'We''ll go right under the excerpt class, and use bootstrap class''s `btn` and
    then `btn-default`. We will then use `href` and set that to `the_permalink()`.
    For the text, we''ll say `Read More` and for the arrow symbol we can use `&raquo;`.
    We will also add a line break above the class:'
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将直接在摘要类下面，使用 Bootstrap 类的 `btn` 和 `btn-default`。然后我们将使用 `href` 并将其设置为 `the_permalink()`。对于文本，我们将说“阅读更多”，对于箭头符号，我们可以使用
    `&raquo;`。我们还将在这个类上方添加一个换行符：
- en: '[PRE33]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Reload and let''s take a look at that:'
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新加载并看看效果：
- en: '![](img/1a8b8db7-014b-461a-b01b-6d62ccaabe6f.png)'
  id: totrans-201
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/1a8b8db7-014b-461a-b01b-6d62ccaabe6f.png)'
- en: Dealing with post without an image
  id: totrans-202
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理没有图片的帖子
- en: 'So now what we want to do is take care of the posts that don''t have an image.
    Right now the Hello World post doesn''t have one and it''s not showing up because
    we haven''t put any code in that yet. So let''s check for the thumbnails now:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 所以现在我们想要处理那些没有图片的帖子。目前“Hello World”帖子没有图片，它没有显示出来，因为我们还没有在那儿添加任何代码。所以现在让我们检查缩略图：
- en: 'This `div` is where the code for the post without an image will go:'
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这个 `div` 是放置没有图片的帖子代码的地方：
- en: '[PRE34]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Now we can have posts without images and not have just an empty space:'
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们可以有没有图片的帖子，而不仅仅是空空间：
- en: '![](img/772c32bd-cfaa-4121-8ce2-0d34dbfec57f.png)'
  id: totrans-207
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/772c32bd-cfaa-4121-8ce2-0d34dbfec57f.png)'
- en: If we didn't use the conditional statement, then this would just have an empty
    space where the image was supposed to go.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们没有使用条件语句，那么这就会在图片应该出现的地方留下一个空空间。
- en: Adding a bit of style
  id: totrans-209
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加一些样式
- en: 'Now we will add a little bit of CSS to make the post look a little better:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将添加一点 CSS 来让帖子看起来更好一些：
- en: 'Let''s go to `style.css` and use the `article.post` with a border at the bottom
    of each post. The border will be gray, `solid` and `1px`. Also, let''s add some
    padding using `padding-bottom: 20px` and `margin-bottom: 30px`:'
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '让我们去 `style.css` 文件，并使用 `article.post` 为每个帖子的底部添加一个边框。边框将是灰色，`solid`，`1px`
    宽。此外，让我们使用 `padding-bottom: 20px` 和 `margin-bottom: 30px` 添加一些内边距：'
- en: '[PRE35]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Let''s add the last article or post. We don''t want to have a border for it.
    We will add `article.post` and use `last-child` to target that last one and we''ll
    set `border-bottom` to `none`:'
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们添加最后一个文章或帖子。我们不想为它添加边框。我们将添加`article.post`并使用`last-child`来定位最后一个，并将`border-bottom`设置为`none`：
- en: '[PRE36]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: For the metadata, we will add a little bit of style using `article.post .meta`
    and give it a light gray background. We will also add a little padding, `8px`
    and `12px`. Let's add a color; we'll use dark gray.
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于元数据，我们将使用`article.post .meta`添加一些样式，并给它一个浅灰色背景。我们还将添加一些填充，`8px`和`12px`。让我们添加一个颜色；我们将使用深灰色。
- en: 'Let''s save that and reload:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们保存它并重新加载：
- en: '![](img/65987f49-4bb3-45e5-b25e-2146973b7534.png)'
  id: totrans-217
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/65987f49-4bb3-45e5-b25e-2146973b7534.png)'
- en: Now that looks a little better.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 现在看起来好多了。
- en: In the next section, we will see how to get the navbar set up with the `custom-walker`
    class.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将看到如何使用`custom-walker`类设置navbar。
- en: Implementing Navbar
  id: totrans-220
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实现Navbar
- en: We will now see how to implement a Bootstrap navbar with a WordPress theme using
    `wp-bootstrap-navwalker`. This is a really popular script that will integrate
    your navbar so that you can create sub-items and things like that.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将看到如何使用`wp-bootstrap-navwalker`在WordPress主题中实现Bootstrap navbar。这是一个非常流行的脚本，它将集成navbar，以便你可以创建子项等。
- en: Displaying menu
  id: totrans-222
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 显示菜单
- en: 'Go to [www.github.com/twittem/wp-bootstrap-navwalker](http://www.github.com/twittem/wp-bootstrap-navwalker),
    and we''ll just go ahead and download the ZIP file. Open the ZIP file, and you''ll
    see a folder with the PHP file inside it:'
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往[www.github.com/twittem/wp-bootstrap-navwalker](http://www.github.com/twittem/wp-bootstrap-navwalker)，我们将直接下载ZIP文件。打开ZIP文件，你会看到一个包含PHP文件的文件夹：
- en: '![](img/6bf2e484-7394-4d68-b5b9-40dd57b787ae.png)'
  id: totrans-224
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/6bf2e484-7394-4d68-b5b9-40dd57b787ae.png)'
- en: Let's open up our project folder. We will copy the PHP file into our folder.
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们打开我们的项目文件夹。我们将把PHP文件复制到我们的文件夹中。
- en: 'Open the `functions.php` file and we want to include the `wp_bootstrap_navwalker.php`
    file as shown:'
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`functions.php`文件，我们想要包含`wp_bootstrap_navwalker.php`文件，如下所示：
- en: '[PRE37]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: As you can see we have `require_once()` with `wp_bootstrap_navwalker.php`. Save
    it.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所见，我们使用了`require_once()`与`wp_bootstrap_navwalker.php`。保存它。
- en: 'Go back to the GitHub page where we''ll now deal with the usage. We want to
    use the `wp_nav_menu()` function inside of our navbar. For that, let''s copy the
    highlighted part:'
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回GitHub页面，我们将处理其用法。我们想在navbar中使用`wp_nav_menu()`函数。为此，让我们复制高亮部分：
- en: '![](img/716a5070-bf55-48f0-8e69-0771d0fcceed.png)'
  id: totrans-230
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/716a5070-bf55-48f0-8e69-0771d0fcceed.png)'
- en: 'Go into our `header` file where our navbar is, go down into the `div` where
    we have the `collapse` class, and we will paste the code as shown in the following
    code block:'
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入我们的`header`文件，其中包含navbar，进入包含`collapse`类的`div`，我们将粘贴以下代码块中的代码：
- en: '[PRE38]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'This basically defines a bunch of options for us. We don''t need all of them.
    We will get rid of a few things. Here is the updated code:'
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这基本上为我们定义了一组选项。我们不需要所有这些。我们将去掉一些东西。以下是更新后的代码：
- en: '[PRE39]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: We have the `theme_location`, which is `primary`, and `depth` is `2`. We have
    set `container` to `false`. Get rid of the quotes, `container_class` or a `container_id`.
    Now save it.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有`theme_location`，它是`primary`，`depth`是`2`。我们将`container`设置为`false`。移除引号，`container_class`或`container_id`。现在保存它。
- en: 'Now go back to `functions.php`. Let''s register our nav menus now by adding
    the following code:'
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在回到`functions.php`。现在让我们通过添加以下代码来注册我们的导航菜单：
- en: '[PRE40]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Inside this `theme_setup`, we have `register_nav_menus()` and that's going to
    take in an array, which will be called `primary`. We'll then set that to `__()`
    and then the readable name will be `Primary Menu`. We'll save that.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个`theme_setup`中，我们有`register_nav_menus()`，它将接受一个数组，将被命名为`primary`。然后我们将它设置为`__()`，然后可读的名称将是`Primary
    Menu`。我们将保存它。
- en: 'Let''s go back into the backend and go down to Appearance. You will see the
    Menus option:'
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们回到后台，点击外观。你会看到菜单选项：
- en: '![](img/a4d97cfc-f156-490a-bdb7-e78783596343.png)'
  id: totrans-240
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/a4d97cfc-f156-490a-bdb7-e78783596343.png)'
- en: 'Now create an extra page called `About` and click on Publish. Let''s create
    one more and we''ll call this `Our Team`:'
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在创建一个名为“关于”的额外页面并点击发布。让我们再创建一个，命名为“我们的团队”：
- en: '![](img/012783f4-0f32-4780-b287-367b1c343076.png)'
  id: totrans-242
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/012783f4-0f32-4780-b287-367b1c343076.png)'
- en: 'Go back to the Menus page and let''s take a look at this menu. Let''s go ahead
    and click on Create Menu:'
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回菜单页面，让我们看看这个菜单。让我们创建一个新的菜单并命名为“关于”：
- en: '![](img/01a093b0-7d8d-4547-a6a1-5865db76a384.png)'
  id: totrans-244
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/01a093b0-7d8d-4547-a6a1-5865db76a384.png)'
- en: 'Ensure that you check the Primary Menu option and then save it:'
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保你检查了主菜单选项，然后保存它：
- en: '![](img/92eff182-cc44-4668-b57c-87b07e8cb833.png)'
  id: totrans-246
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/92eff182-cc44-4668-b57c-87b07e8cb833.png)'
- en: 'Go to our frontend and reload. You will now see we have our menu and it works:'
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往我们的前端并重新加载。你现在会看到我们有了菜单，并且它工作正常：
- en: '![](img/fd9ff600-715d-4462-8650-78a5d610d2d2.png)'
  id: totrans-248
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/fd9ff600-715d-4462-8650-78a5d610d2d2.png)'
- en: 'Now let''s test out the drop-down functionality. All we need to do is select
    Sample Page and Our Team, and place them right under About as shown in the following
    screenshot:'
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在让我们测试下拉功能。我们只需要选择“示例页面”和“我们的团队”，并将它们放在“关于”下面，如下面的截图所示：
- en: '![](img/43f16e25-9394-4fd8-b013-06b3618c6fa0.png)'
  id: totrans-250
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/43f16e25-9394-4fd8-b013-06b3618c6fa0.png)'
- en: 'Save the menu, go back, and now we have a drop down:'
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存菜单，返回，现在我们有一个下拉菜单：
- en: '![](img/109fef77-9a56-4c1e-a502-93f38a985101.png)'
  id: totrans-252
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/109fef77-9a56-4c1e-a502-93f38a985101.png)'
- en: So you can see how easy that was to implement a navbar, and this is definitely
    something that you could use in other projects as well, any Bootstrap WordPress
    theme.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 所以你可以看到实现导航栏是多么简单，这绝对是你可以在其他项目中使用的东西，任何 Bootstrap WordPress 主题。
- en: Setting the sidebar
  id: totrans-254
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置侧边栏
- en: 'Let''s now get the sidebar set up so that we can add sidebar widgets:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来设置侧边栏，以便我们可以添加侧边栏小工具：
- en: In the `functions.php` file underneath the `add_action()`, we will create a
    function called `init_widgets()` and that's going to take in an `id`. We will
    add `register_sidebar()` and that's going to take in an `array`. And then we have
    a bunch of options, so let's add `'name' => 'Sidebar'` and `'id' => 'sidebar'`.
  id: totrans-256
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `add_action()` 下的 `functions.php` 文件中，我们将创建一个名为 `init_widgets()` 的函数，它将接受一个
    `id`。我们将添加 `register_sidebar()`，它将接受一个 `array`。然后我们有一系列选项，所以让我们添加 `'name' => 'Sidebar'`
    和 `'id' => 'sidebar'`。
- en: '[PRE41]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'We can also include other things here; for instance, we can add `''before_widget''`:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以在这里包含其他内容；例如，我们可以添加 `'before_widget'`：
- en: '[PRE42]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Now what this does is it allows us to insert code right before the widget renders.
    We'll need this because we want our widgets to render inside Bootstrap panels,
    so we need to include the panel classes. We can see we have a `div` with a class
    of `panel`, and also `panel-default`.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 现在这样做的作用是允许我们在小工具渲染之前插入代码。我们需要这样做，因为我们希望小工具在 Bootstrap 面板内渲染，所以我们需要包含面板类。我们可以看到一个具有
    `panel` 类的 `div`，还有 `panel-default`。
- en: 'Let''s then add `''after_widget''` and that''s just going to be two ending
    div tags:'
  id: totrans-261
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后添加 `'after_widget'`，它将只是两个结束 div 标签：
- en: '[PRE43]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: We now also have the ability to add content before and after the title.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在也有能力在标题前后添加内容。
- en: 'To use this, we''ll use `''before_title''` and this is going to have a div
    with the class of `panel-heading`. We also want the `<h3>` tag, and we''ll give
    that a class of `panel-title`:'
  id: totrans-264
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要使用这个功能，我们将使用 `'before_title'`，这将包含一个具有 `panel-heading` 类的 div。我们还想包含 `<h3>`
    标签，并给它一个 `panel-title` 类：
- en: '[PRE44]'
  id: totrans-265
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Finally, we''ll add `''after_title''` with ending `</h3>` and `</div>`, and
    then we also want the start of the `panel-body` class:'
  id: totrans-266
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们将添加 `'after_title'` 并结束 `</h3>` 和 `</div>`，然后我们还想开始 `panel-body` 类：
- en: '[PRE45]'
  id: totrans-267
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Now we need to add an action, so we''ll place `add_action()`. The hook will
    be `widgets_init` with the function `init_widgets`:'
  id: totrans-268
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们需要添加一个动作，所以我们将放置 `add_action()`。钩子将是 `widgets_init`，函数为 `init_widgets`：
- en: '[PRE46]'
  id: totrans-269
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Save it. If we now go to the backend and reload the page, you should now have
    a Widgets option under Appearance, and you should also see Sidebar:'
  id: totrans-270
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存它。如果我们现在进入后端并重新加载页面，你应该现在在“外观”下有“小工具”选项，也应该看到“侧边栏”：
- en: '![](img/c17ea1b1-b648-40e0-853b-18fa08af1286.png)'
  id: totrans-271
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/c17ea1b1-b648-40e0-853b-18fa08af1286.png)'
- en: 'Now let''s bring over Categories, and hit Save:'
  id: totrans-272
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在让我们将“分类”包含进来，然后点击保存：
- en: '![](img/86748060-c583-4b11-a738-8b08bc1a6acd.png)'
  id: totrans-273
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/86748060-c583-4b11-a738-8b08bc1a6acd.png)'
- en: 'Let''s see if those render:'
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们看看这些是否渲染：
- en: '![](img/a64d13db-97e5-4885-ae7e-d64f14ac824a.png)'
  id: totrans-275
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/a64d13db-97e5-4885-ae7e-d64f14ac824a.png)'
- en: So now we have our categories and you can see that now we have the panel around
    it as well.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 所以现在我们有我们的分类，你可以看到现在我们还有围绕它的面板。
- en: 'Let''s also bring over Recent Posts, change Number of posts to show to `3`,
    and bring over Recent Comments:'
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们也将“最近的文章”包含进来，将显示的文章数改为 `3`，并将“最近评论”包含进来：
- en: '![](img/45d55438-64e4-4948-92d7-57bc1c01e23d.png)'
  id: totrans-278
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/45d55438-64e4-4948-92d7-57bc1c01e23d.png)'
- en: 'Let''s take a look at our page now:'
  id: totrans-279
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们来看看我们的页面：
- en: '![](img/02c88d4f-0e11-4acb-8d0f-8b6856b1ea49.png)'
  id: totrans-280
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/02c88d4f-0e11-4acb-8d0f-8b6856b1ea49.png)'
- en: And there they are! Now we have an issue because I want the categories to show
    up as list groups, which are formatted better than this. They take away the bullets,
    add some padding, and add some borders. So what we'll need to do is create our
    own version of these widgets inside our `theme` folder.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
- en: 'Inside the `theme` folder, we''ll create another folder called `widgets`. We''ll
    go to this folder through the file manager. Now go to `wp-includes` | `widgets`.
    You''ll see all of the core widget files here:'
  id: totrans-282
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/728d20e1-216e-4c99-a015-63554285730e.png)'
  id: totrans-283
  prefs: []
  type: TYPE_IMG
- en: We want to grab the categories, the recent comments, and the recent posts. We'll
    copy (make sure you don't cut, but copy them) and paste them into our `widgets`
    folder.
  id: totrans-284
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now let''s start with the categories one. Let''s open that up through Sublime
    Text. Here we will change the classname: put an `_` and then `Custom`.'
  id: totrans-285
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE47]'
  id: totrans-286
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Next, we will change the class names for the `<ul>` and `<li>` tags. We will
    add the Bootstrap classes. For this, we will add `class="list-group"` to the `<ul>`
    tag:'
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE48]'
  id: totrans-288
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: Now we also want the list items to have the class of `list-group-item` but the
    way that this is set up, we can't access the list item tags from within. So we
    need to do a little bit of customization in the `functions.php` file.
  id: totrans-289
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'So let''s open the `function.php` file, go to the very bottom, and add a comment
    first: `Adds ''list-group-item'' to categories li`, just so we know what it does.
    Then we add the function `add_new_class_list_categories()`:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  id: totrans-291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: We will then pass in a variable by adding `$list = str_replace()`, and we'll
    add `cat-item`, which is the original class name, but we want to change that.
    Now we still want it to have the `cat-item` class because it needs that, but we
    also want to add on the `list-group-item class`. Then we just need to return the
    list.
  id: totrans-292
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE50]'
  id: totrans-293
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Now instead of adding an action, we will add `add_filter()`. Basically, an
    action is used when you want to add something, a filter is when you want to change
    something. So let''s use `add_filter(''wp_list_categories'')` and then we place
    the name of our function:'
  id: totrans-294
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE51]'
  id: totrans-295
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'We''re not out of the woods yet with these widgets; we have to register them.
    So before we do that, we need to include them at the top or use `require`. So
    we will add `require_once()`. It''s going to be the `widgets` folder, and then
    we just need to include each widget. We''ll use `class-wp-widget-categories.php`:'
  id: totrans-296
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE52]'
  id: totrans-297
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'We might as well include all of them. So we will get the recent posts and recent
    comments:'
  id: totrans-298
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE53]'
  id: totrans-299
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: Now we need to register.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
- en: 'Down at the bottom, we''ll add `function wordstrap_register_widgets()`. We
    need the classname as well, so we add `''WP_Widget_Recent_Posts_Custom''`. Next
    one will be `''WP_Widget_Recent_Comments_Custom''`. The last one will be to add
    `''WP_Widget_Categories_Custom''`:'
  id: totrans-301
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE54]'
  id: totrans-302
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'Now we add another `add_action()`, and this is going to be again on `''widgets_init''`,
    and then we just need the name of the function:'
  id: totrans-303
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE55]'
  id: totrans-304
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'Let''s save that and reload the page:'
  id: totrans-305
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/4395db0c-136f-454a-b8ad-0c7ed0cf2ece.png)'
  id: totrans-306
  prefs: []
  type: TYPE_IMG
- en: 'We get an error: Cannot declare class Recent_Posts. So let''s verify our code:'
  id: totrans-307
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE56]'
  id: totrans-308
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'So these should have `_Custom` as well. Now reload the page:'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/3cf9cbf5-dbf0-4970-9c8d-562044de5358.png)'
  id: totrans-310
  prefs: []
  type: TYPE_IMG
- en: So we have all of our widgets registered and categories now has the `list-item`
    class, so that looks good. We also want to add these classes to recent posts and
    recent comments as well, so that instead of the bullet points we have it look
    like how categories look.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
- en: 'So let''s go to our `class-wp-widget-recent-posts.php` widget file, and we
    want to go to the `<ul>` tag. We will just add a class of `list-group` and then
    the `<li>` tag will have a class of `list-group-item`:'
  id: totrans-312
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE57]'
  id: totrans-313
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: Let's reload the page; that looks good!
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4797efb3-c356-4127-a0e4-196d36cbe966.png)'
  id: totrans-315
  prefs: []
  type: TYPE_IMG
- en: 'Now let''s go to `class-wp-widget-recent-comments.php`. We will add a class
    to `<ul>` of `list-group` and then for the `<li>` tag, we''ll add a class of `list-group-item`:'
  id: totrans-316
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE58]'
  id: totrans-317
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'Save, reload, and there we go:'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/be572406-3346-4e6a-9b39-ee5c8a4e3e75.png)'
  id: totrans-319
  prefs: []
  type: TYPE_IMG
- en: So now we have some custom widgets. You could make widgets look totally different
    if you want to, and it would only affect these widgets when your theme is loaded
    so that you're not editing any core WordPress code. We have our navbar set up
    as well as our sidebar widgets.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
- en: Adding a search bar and single post page
  id: totrans-321
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: So let's get started.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
- en: Dealing with the search box
  id: totrans-323
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Go to our `header` file and go to the empty form down at the bottom of the file,
    and we will add some stuff to it. The first thing we'll do is adding a method
    and the method is going to be `get`. We can actually change the class from left
    to right. We also need to add an action. For that, we will use the `php` tags
    and add `echo esc_url()`.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
- en: 'This is because we want the URL checked and escaped. We will use `home_url`
    with a `/`:'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE59]'
  id: totrans-326
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: Basically, we're just submitting to the home URL.
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
- en: 'Now as for the fields, we''ll just want one field for Search, but let''s add
    a label. So we will add `<label for ="navbar-search"` and give it a class of `sr-only`.
    Next let''s add `<?php _e(''Search'')`, and this is just for localization of `_e`.
    And then we need a second parameter of `textdomain`. Let''s then close up those
    the `php` tags and under the `</label>` tag, let''s add `<div class="form-group">`.
    In the div class we''ll have an input. We''ll give it a type of `text` and give
    it a `class` of `form-control`, which is just a Bootstrap class. Let''s add a
    name called `s` for search, and let''s give it an `id` of `navbar-search`:'
  id: totrans-328
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE60]'
  id: totrans-329
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'We then need a submit. So we''ll add a button with a type of `submit` and give
    it a class of `btn` and `btn-default`:'
  id: totrans-330
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE61]'
  id: totrans-331
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: Let's save it.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
- en: 'Now let''s do a search for `lorem`, and it gives us these results:'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/fa71a4cc-3749-4a13-9c10-d3ab5a7fbb4e.png)'
  id: totrans-334
  prefs: []
  type: TYPE_IMG
- en: You can also try searching for the word `one` or `two`.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
- en: Now we have a search bar and the last thing that we need to do is the single
    post.
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
- en: Dealing with the single post page
  id: totrans-337
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let's create a file in our theme root and save the file as `single.php`.
  id: totrans-338
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now while creating this file, if we go and click on one of these blog posts,
    it'll be completely blank because it's automatically looking at the `single.php`
    page.
  id: totrans-339
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'We''ll now copy everything that we have in the `index.php` file and paste it
    into the `single.php` file. Save it and reload the page; it looks exactly the
    same way as the index page:'
  id: totrans-340
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/b8a5f7a9-d668-443b-85e6-48024934a160.png)'
  id: totrans-341
  prefs: []
  type: TYPE_IMG
- en: Let's go in and change some of that. First, let's remove `if(has_post_thumbnail())`.
    Now go down to where it says else and cut out from there up to the actual `if`
    statement.
  id: totrans-342
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We will also get rid of `endif` because of the way we'll be formatting it irrespective
    of the image being present or not.
  id: totrans-343
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'We want the image, though, so we''ll put it. Let''s put it right under the
    ending `</h2>`:'
  id: totrans-344
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE62]'
  id: totrans-345
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'We''re putting in the thumbnail or the featured image, if there is one. Let''s
    save that and see what that looks like:'
  id: totrans-346
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/69c0f546-8783-4837-93b7-2645100cdd87.png)'
  id: totrans-347
  prefs: []
  type: TYPE_IMG
- en: So we have our big image now, let's put a line break `<br>` underneath it as
    well.
  id: totrans-348
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE63]'
  id: totrans-349
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: We don't want Read More but we want the full content not the excerpt.
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
- en: 'So let''s get rid of Read More, and instead of `get_the_excerpt()` let''s use
    `the_content()`. We will also get rid of `echo`. Let''s also change the class
    to `content`:'
  id: totrans-351
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE64]'
  id: totrans-352
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'Save it and reload:'
  id: totrans-353
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/348365c2-b027-4bfd-98b4-8deba661547d.png)'
  id: totrans-354
  prefs: []
  type: TYPE_IMG
- en: Now it renders the HTML as well. So that's the single page.
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
- en: Next, we will deal with the comment functionality as well.
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
- en: The comment functionality
  id: totrans-357
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The last thing we need to do is add some comment functionality to our single
    post page:'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
- en: Let's go into `single.php` and go down. What we want to do is still within the
    panel body so that ends where it is shown.
  id: totrans-359
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Let''s create a comment template and add `comments_template()`:'
  id: totrans-360
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE65]'
  id: totrans-361
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: We'll save that and create a new file. We'll save it as `comments.php`.
  id: totrans-362
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: That needs to be in your `theme` folder, and then if we go ahead and type something
    in here, we'll say `TEST`.
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
- en: 'If we save and reload, and you can see we''re getting TEST:'
  id: totrans-364
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/ee8065ff-e1c8-4eab-9a11-03ce9797978a.png)'
  id: totrans-365
  prefs: []
  type: TYPE_IMG
- en: Now let's create a div with a class of `comments` and add `<?php if(have_comments);
    ?>`.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
- en: We also add heading `<h3>` with class of `comments_title`. We will add `if(get_comments_number()
    == 1)`. We are doing this because if there's only one comment then we should get
    comment singular, if there's more than one then it should say comments.
  id: totrans-367
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'So we''re checking to see if there''s one comment, if there is then we''ll
    `echo get_comments_number()` and then just concatenate the word `Comment`. Then
    we''ll put an `else` and just add an `Comments` to the end here:'
  id: totrans-368
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE66]'
  id: totrans-369
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: So that'll be the heading.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
- en: Then under the `</h3>` tag, we'll have a `<ul>` tag, give it a class of `row`
    and `comment-list`. We will add `wp_list_comments()` and that's going to get passed
    in an array. We will also use avatars so let's add `avatar_size` and set that
    to `90`. We then have a `callback`, which we have to create as well.
  id: totrans-371
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: For that, we will add `add_theme_comments` and this is going to go inside the
    `functions.php` file.
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE67]'
  id: totrans-373
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'Now, we have a few big blocks of code that we need to use:'
  id: totrans-374
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE68]'
  id: totrans-375
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: The preceding code is going to check if comments are closed, and if they are
    then we can leave a little note.
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
- en: 'Now let''s go under this `div` and we''ll put a horizontal rule. We then need
    to create our comment arguments and then create the form:'
  id: totrans-377
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE69]'
  id: totrans-378
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: We have a variable called `comment_args` and that's set to an array with a bunch
    of different values. You can have your submit button label, the title reply, notes,
    and things like that. Then down in the code file, we're also calling the `comment_form()`
    function and passing in those arguments.
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
- en: 'Save it and reload. Now if we go and try to check it out now you can see that
    we have a form here. Let''s try to add something:'
  id: totrans-380
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/39956557-2d7d-4bcb-8a54-c5d9f3670773.png)'
  id: totrans-381
  prefs: []
  type: TYPE_IMG
- en: 'Click on Send:'
  id: totrans-382
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/1477f37e-1f5f-4e6e-9dfd-56e9f99b920d.png)'
  id: totrans-383
  prefs: []
  type: TYPE_IMG
- en: 'Now what''s going on here is it''s looking for the callback that we specified.
    It is up at `add_theme_comments` as shown:'
  id: totrans-384
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE70]'
  id: totrans-385
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: It is looking for callback but not finding it. So let's go into `functions.php`
    and we'll fix that.
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
- en: 'We''ll go ahead and paste the code as shown:'
  id: totrans-387
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE71]'
  id: totrans-388
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: So we have a function called `add_theme_comments()` and that should match your
    callback. Then we pass in `comment`, `args`, and `depth`. As you can see we have
    added some tags and classes below so that we can style this.
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
- en: 'Now we''ll post some other stuff in as well. For that lets add the following
    code:'
  id: totrans-390
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE72]'
  id: totrans-391
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: You can get the code from the WordPress documentation ([https://codex.wordpress.org/Function_Reference/wp_list_comments](https://codex.wordpress.org/Function_Reference/wp_list_comments)).
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4705bc74-6489-44ad-9b83-d8afe93cc547.png)'
  id: totrans-393
  prefs: []
  type: TYPE_IMG
- en: So this code will give you correct functionality.
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s go ahead and save the code and see what happens:'
  id: totrans-395
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '>![](img/6d49514a-0ddd-4d5b-9aa9-b3b13fd34848.png)'
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
- en: 'Now let''s open up `style.css` and the class called `comment-item`. So in the
    code we add `.comment-item` and set `overflow` to `auto`. We will also add `comment-list`,
    and set `list-style` to `none` and `margin` to `0`. We then mark that as important
    and set `padding` to `0`:'
  id: totrans-397
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE73]'
  id: totrans-398
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: That looks pretty good. We can reply and leave comments, and that's really awesome.
    So that's it, we are done. We now have a WordPress theme with Bootstrap, and you
    could use this as a base theme to create other Bootstrap themes. You can use the
    `navbar-walker`, which is really helpful.
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-400
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Awesome!! In this chapter we saw how to build a Twitter Bootstrap WordPress
    theme. We dealt with widgets such as Categories, Recent Posts, and Recent Comments
    to make them fit in with the Bootstrap theme.
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
- en: We also worked on the posts loop and included the metadata for it. We saw how
    to get the navbar set up as well as our sidebar widgets. We also added a Search
    box and built the single pages. We also dealt with comment functionality – the
    comments section and form. I hope you enjoyed this chapter.
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
