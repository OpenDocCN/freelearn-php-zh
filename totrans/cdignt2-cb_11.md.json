["```php\n    <?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');\n\n    class Shop extends CI_Controller {\n      function __construct() {\n        parent::__construct();\n      }\n\n      public function index() {\n        echo 'Controller: ' . __CLASS__ . ', Method: ' . __FUNCTION__;\n      }\n\n      public function product() {\n        echo 'Controller: ' . __CLASS__ . ', Method: ' . __FUNCTION__;\n        echo '<br />';\n        echo 'Product ID: ' . $this->uri->segment(2);\n      }\n\n      public function all() {\n        echo 'Controller: ' . __CLASS__ . ', Method: ' . __FUNCTION__;\n      }\n    }\n    ```", "```php\n    $route['default_controller'] = \"default_controller\";\n    $route['404_override'] = '';\n\n    $route['item/(:any)'] = \"shop/product\";\n    $route['item'] = \"shop/all\";\n\n    ```", "```php\n$route['item/(:any)'] = \"shop/product\";\n$route['item'] = \"shop/all\";\n```", "```php\n$this->uri->segment(2);\n```", "```php\n    <?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');\n\n    class Rss_cache extends CI_Controller {\n      function __construct() {\n        parent::__construct();\n        $this->load->helper('url');\n        $this->load->helper('xml');\n        $this->load->driver('cache', array('adapter' => 'apc'));\n      }\n\n      public function index() {\n        $raw_feed = '<?xml version = \"1.0\" encoding = \"ISO-8859-1\" ?>\n        <rss version=\"2.0\">\n        <channel>\n          <title>RSS Feed</title>\n            <link>http://www.domain.com</link>\n            <description>General Description</description>\n          <item>\n            <title>RSS Item 1 Title</title>\n            <link>http://www.domain1.com/link1</link>\n            <description>Description of First Item</description>\n          </item>\n          <item>\n            <title>RSS Item 2 Title</title>\n            <link>http://www.domain2.com/link2</link>\n            <description>Description of Second Item</description>\n          </item>\n          <item>\n            <title>RSS Item 3 Title</title>\n            <link>http://www.domain3.com/link3</link>\n            <description>Description of Third Item</description>\n          </item>\n        </channel>\n        </rss>';\n\n        $feed = new SimpleXmlElement($raw_feed);\n\n        if (!$cached_feed = $this->cache->get('rss')) {\n          foreach ($feed->channel->item as $item) {\n            $cached_feed . = $item->title . '<br />' . $item->description . '<br /><br />';\n          }\n\n            $this->cache->save('rss', $cached_feed, 7);\n        }\n\n        echo $this->cache->get('rss');\n\n      }\n\n      public function clear_cache() {\n        $this->cache->clean();\n        redirect('rss_cache');\n      }\n    }\n    ?>\n    ```", "```php\nfunction __construct() {\n  parent::__construct();\n  $this->load->helper('url');\n  $this->load->driver('cache', array('adapter' => 'apc'));\n}\n```", "```php\n$raw_feed = file_get_contents('http://www.domain.com/rss_feed_url');\n```", "```php\nif (!$cached_feed = $this->cache->get('rss')) {\n  foreach ($feed->channel->item as $item) {\n    $cached_feed .= $item->title . '<br />' . $item->description . '<br /><br />';\n  }\n    $this->cache->save('rss', $cached_feed, 30);\n}\n```", "```php\n$this->cache->save('rss', $cached_feed, 30);\n```", "```php\necho $this->cache->get('rss');\n```", "```php\nRSS Item 1 Title\nDescription of First Item\nRSS Item 2 Title\nDescription of Second Item\nRSS Item 3 Title\nDescription of Third Item\n```", "```php\nRSS Item 1 Title\nDescription of First Item\nRSS Item 2 Title\nDescription of Second Item\nGigantic Elephants\nDescription of Third Item\n```", "```php\n    $config['log_threshold'] = 0;\n    ```", "```php\n    log_message('error', 'Some Text')\n    ```", "```php\n    log_message('debug', 'Some Text')\n    ```", "```php\n    log_message('info', 'Some Text');\n    ```", "```php\n    $config['log_path'] = '/path/to/log/folder/';.\n    ```", "```php\n    <?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');\n\n    class Cache_log extends CI_Controller {\n      function __construct() {\n        parent::__construct();\n        $this->load->helper('url');\n        $this->load->helper('xml');\n        $this->load->driver('cache', array('adapter' => 'apc'));\n      }\n\n      public function index() {\n        $raw_feed = '<?xml version=\"1.0\" encoding=\"ISO-8859-1\" ?>\n        <rss version=\"2.0\">\n        <channel>\n          <title>RSS Feed</title>\n            <link>http://www.domain.com</link>\n            <description>General Description</description>\n          <item>\n            <title>RSS Item 1 Title</title>\n            <link>http://www.domain1.com/link1</link>\n            <description>Description of First Item</description>\n          </item>\n          <item>\n            <title>RSS Item 2 Title</title>\n            <link>http://www.domain2.com/link2</link>\n            <description>Description of Second Item</description>\n          </item>\n          <item>\n            <title>RSS Item 3 Title</title>\n            <link>http://www.domain3.com/link3</link>\n            <description>Description of Third Item</description>\n          </item>\n        </channel>\n        </rss>';\n\n        $feed = new SimpleXmlElement($raw_feed);\n\n     if (!$feed) {\n     log_message('error', 'Unable to instantiate SimpleXmlElement.');\n     } else {\n     log_message('info', 'SimpleXmlElement was instantiated correctly.');\n     }\n\n     if (!$cached_feed = $this->cache->get('rss')) {\n     foreach ($feed->channel->item as $item) {\n     $cached_feed .= $item->title . '<br />' .$item->description . '<br /><br />';\n     }\n\n     $this->cache->save('rss', $cached_feed, 7);\n     log_message('info', 'Cache item saved.');\n     }\n\n        echo $this->cache->get('rss');\n\n      }\n\n      public function clear_cache() {\n     if (!$this->cache->clean()) {\n     log_message('error', 'Unable to clear Cache.');\n     } else {\n     log_message('info', 'Cache cleared.');\n     }\n\n        redirect('rss_cache');\n      }\n    }\n    ?>\n    ```", "```php\n    <?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed'); ?>\n\n    DEBUG - 2013-09-24 19:46:11 --> Config Class Initialized\n    DEBUG - 2013-09-24 19:46:11 --> Hooks Class Initialized\n    DEBUG - 2013-09-24 19:46:11 --> Utf8 Class Initialized\n    DEBUG - 2013-09-24 19:46:11 --> UTF-8 Support Enabled\n    DEBUG - 2013-09-24 19:46:11 --> URI Class Initialized\n    DEBUG - 2013-09-24 19:46:11 --> Router Class Initialized\n    DEBUG - 2013-09-24 19:46:11 --> Output Class Initialized\n    DEBUG - 2013-09-24 19:46:11 --> Security Class Initialized\n    DEBUG - 2013-09-24 19:46:11 --> Input Class Initialized\n    DEBUG - 2013-09-24 19:46:11 --> XSS Filtering completed\n    DEBUG - 2013-09-24 19:46:11 --> XSS Filtering completed\n    DEBUG - 2013-09-24 19:46:11 --> XSS Filtering completed\n    DEBUG - 2013-09-24 19:46:11 --> CRSF cookie Set\n    DEBUG - 2013-09-24 19:46:11 --> Global POST and COOKIE data sanitized\n    DEBUG - 2013-09-24 19:46:11 --> Language Class Initialized\n    DEBUG - 2013-09-24 19:46:11 --> Loader Class Initialized\n    DEBUG - 2013-09-24 19:46:11 --> Database Driver Class Initialized\n    DEBUG - 2013-09-24 19:46:11 --> Session Class Initialized\n    DEBUG - 2013-09-24 19:46:11 --> Helper loaded: string_helper\n    DEBUG - 2013-09-24 19:46:11 --> Encrypt Class Initialized\n    DEBUG - 2013-09-24 19:46:11 --> Session routines successfully run\n    DEBUG - 2013-09-24 19:46:11 --> XML-RPC Class Initialized\n    DEBUG - 2013-09-24 19:46:11 --> Controller Class Initialized\n    DEBUG - 2013-09-24 19:46:11 --> Helper loaded: url_helper\n    DEBUG - 2013-09-24 19:46:11 --> Helper loaded: xml_helper\n    INFO  - 2013-09-24 19:46:11 --> SimpleXmlElement was instantiated correctly.\n    INFO  - 2013-09-24 19:46:11 --> Cache item saved.\n    DEBUG - 2013-09-24 19:46:11 --> Final output sent to browser\n    DEBUG - 2013-09-24 19:46:11 --> Total execution time: 0.0280\n    ```", "```php\n$feed = new SimpleXmlElement($raw_feed);\n\nif (!$feed) {\n  log_message('error', 'Unable to instantiate SimpleXmlElement.');\n} else {\n  log_message('info', 'SimpleXmlElement was instantiated correctly.');\n}\n```", "```php\n log_message('info', ' **** ' . __LINE__ . ' â€“ This is a message.');\n```", "```php\nCREATE TABLE `bench_table` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `firstname` varchar(50) NOT NULL,\n  `lastname` varchar(50) NOT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=3 ;\n\nINSERT INTO `bench_table` (`id`, `firstname`, `lastname`) VALUES\n(1, 'Rob', 'Foster'),\n(2, 'Lucy', 'Welsh');\n```", "```php\n    <?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');\n\n    class Bench extends CI_Controller {\n      function __construct() {\n        parent::__construct();\n        $this->load->helper('url');\n        $this->load->model('bench_model');\n        $this->load->database();\n      }\n\n      public function index() {\n        // Who's in the database?\n        $this->benchmark->mark('bm1_start');\n        foreach ($this->bench_model->get_people()->result() as $row) {\n          echo $row->firstname . ' ' . $row->lastname . '<br />';\n        }\n        $this->benchmark->mark('bm1_end');\n\n        // Write some more people to the database\t\n        $this->benchmark->mark('bm2_start');\n        $data = array(\n          array('firstname' => 'George',\n              'lastname' => 'Foster'),\n          array('firstname' => 'Jackie',\n               'lastname' => 'Foster'),\n          array('firstname' => 'Antony',\n              'lastname' => 'Welsh'),\n          array('firstname' => 'Rowena',\n              'lastname' => 'Welsh'),\n          array('firstname' => 'Peter',\n              'lastname' => 'Foster'),\n          array('firstname' => 'Jenny',\n              'lastname' => 'Foster'),\n          array('firstname' => 'Oliver',\n              'lastname' => 'Welsh'),\n          array('firstname' => 'Harrison',\n              'lastname' => 'Foster'),\n          array('firstname' => 'Felicity',\n              'lastname' => 'Foster')\n          );\n\n        $result = $this->bench_model->add_to_db($data);\n        $this->benchmark->mark('bm2_end');\n\n        if ($result) {\n          // Who's in the database now?\n          $this->benchmark->mark('bm3_start');\n          foreach ($this->bench_model->get_people()->result() as $row) {\n            echo $row->firstname . ' ' . $row->lastname . '<br />';\n          }\n          $this->benchmark->mark('bm3_end');\n        } else {\n          echo 'Cannot write to database.';\n        }\n\n        echo '<br /> ---- BENCHMARK POINT STATS ---- <br />';\n        echo 'BM1 (S) to BM1 (E): ' . $this->benchmark->elapsed_time('bm1_start','bm1_end') . '<br />';\n        echo 'BM2 (S) to BM2 (E): ' . $this->benchmark->elapsed_time('bm2_start','bm2_end') . '<br />';\n        echo 'BM3 (S) to BM3 (E): ' . $this->benchmark->elapsed_time('bm3_start','bm3_end') . '<br />';\n      }\n    }\n    ?>\n    ```", "```php\n    <?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');\n\n    class Bench_model extends CI_Model {\n        function __construct() {\n            parent::__construct();\n        }\n\n        function get_people() {\n            $query = $this->db->get('bench_table');\n            return $query;\n        }\n\n        function add_to_db($data) {\n            if ($this->db->insert_batch('bench_table', $data)) {\n                return TRUE;\n            } else {\n                return FALSE;\n            }\n        }\n    }\n    ```", "```php\nRob Foster\nLucy Welsh\nRob Foster\nLucy Welsh\nGeorge Foster\nJackie Foster\nAntony Welsh\nRowena Welsh\nPeter Foster\nJenny Foster\nOliver Welsh\nHarrison Foster\nFelicity Foster\n---- BENCHMARK POINT STATS ----Â \nBM1 (S) to BM1 (E): 0.0004\nBM2 (S) to BM2 (E): 0.0010\nBM3 (S) to BM3 (E): 0.0005\n```", "```php\n$this->benchmark->mark('bm1_start');\nforeach ($this->bench_model->get_people()->result() as $row) {\n  echo $row->firstname . ' ' . $row->lastname . '<br />';\n}\n$this->benchmark->mark('bm1_end');\n\n```", "```php\n$this->benchmark->mark('bm2_start');\n$data = array(\n  array('firstname' => 'George',\n      'lastname' => 'Foster'),\n  array('firstname' => 'Jackie',\n      'lastname' => 'Foster'),\n  array('firstname' => 'Antony',\n      'lastname' => 'Welsh'),\n  array('firstname' => 'Rowena',\n      'lastname' => 'Welsh'),\n  array('firstname' => 'Peter',\n      'lastname' => 'Foster'),\n  array('firstname' => 'Jenny',\n      'lastname' => 'Foster'),\n  array('firstname' => 'Oliver',\n      'lastname' => 'Welsh'),\n  array('firstname' => 'Harrison',\n      'lastname' => 'Foster'),\n  array('firstname' => 'Felicity',\n      'lastname' => 'Foster')\n  );\n\n  $result = $this->bench_model->add_to_db($data);\n$this->benchmark->mark('bm2_end');\n\n```", "```php\nif ($result) {\n  // Who's in the database now?\n $this->benchmark->mark('bm3_start');\n  foreach ($this->bench_model->get_people()->result() as $row) {\n    echo $row->firstname . ' ' . $row->lastname . '<br />';\n  }\n $this->benchmark->mark('bm3_end');\n} else {\n  echo 'Cannot write to database.';\n}\n```", "```php\necho '<br /> ---- BENCHMARK POINT STATS ---- <br />';\necho 'BM1 (S) to BM1 (E): ' . $this->benchmark->elapsed_time('bm1_start','bm1_end') . '<br />';\necho 'BM2 (S) to BM2 (E): ' . $this->benchmark->elapsed_time('bm2_start','bm2_end') . '<br />';\necho 'BM3 (S) to BM3 (E): ' . $this->benchmark->elapsed_time('bm3_start','bm3_end') . '<br />';\n```", "```php\necho 'BM1 (S) to BM2 (E): ' . $this->benchmark->elapsed_time('bm1_start','bm2_end') . '<br />'\n```"]