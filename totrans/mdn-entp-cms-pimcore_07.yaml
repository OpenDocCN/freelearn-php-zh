- en: '*Chapter 7*: Administrating Pimcore Sites'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第七章*：管理Pimcore网站'
- en: In the previous chapter, we learned how to manage images, thumbnails, and assets
    in Pimcore, using the DAM feature. In this chapter, we will start by seeing how
    it is possible to enhance Pimcore features through the use of bundles, which are
    packages created by the Pimcore team or by third-party developers and can be easily
    installed.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们学习了如何使用DAM功能在Pimcore中管理图像、缩略图和资产。在本章中，我们将首先了解如何通过使用捆绑包来增强Pimcore的功能，这些捆绑包是由Pimcore团队或第三方开发者创建的，并且可以轻松安装。
- en: Another fundamental feature that cannot be missed is the organization of users
    and their permissions. To limit the functionality of the site in the administration
    and content management sections, we will learn how roles are created, how permissions
    are created for roles, and how they are assigned to users.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个不容忽视的基本功能是用户及其权限的组织。为了限制网站在管理和内容管理部分的功能，我们将学习如何创建角色，如何为角色创建权限，以及如何将它们分配给用户。
- en: We will also see how it is possible to import and export the settings of our
    Pimcore installation to other environments. Finally, we will get a little familiar
    with the Pimcore console, a powerful and useful tool to be able to execute commands,
    without having to access the web administration panel.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将了解如何导入和导出我们的Pimcore安装的设置到其他环境。最后，我们将对Pimcore控制台有一个初步的了解，这是一个强大且有用的工具，可以执行命令，而无需访问网络管理面板。
- en: 'We will cover the following topics in this chapter:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我们将涵盖以下主题：
- en: Installing a bundle
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装捆绑包
- en: Exploring Users and Roles
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索用户和角色
- en: Managing perspectives
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理视角
- en: Importing and Exporting Pimcore settings
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导入和导出Pimcore设置
- en: Using the Pimcore Console
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Pimcore控制台
- en: By the end of this chapter, we will have learned how to add functionality to
    our site by installing bundles, configure access to users with different roles
    and permissions, import and export settings and classes, and use the Pimcore console
    via the command line.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，我们将学习如何通过安装组件来为我们的网站添加功能，配置不同角色和权限的用户访问，导入和导出设置和类，以及通过命令行使用Pimcore控制台。
- en: Technical requirements
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: To follow this chapter, the only requirement is to have an up and running Pimcore
    installation and be able to access it via the command line.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 要跟随本章，唯一的要求是拥有一个运行中的Pimcore安装，并且能够通过命令行访问它。
- en: 'If you have installed Pimcore with Docker, just run these simple instructions:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用Docker安装了Pimcore，只需运行以下简单指令：
- en: 'Run Docker with the following command:'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令运行Docker：
- en: '[PRE0]'
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'It is possible, but not necessary, to restore the local installation settings
    by running this command:'
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 有可能，但不是必须的，通过运行以下命令来恢复本地安装设置：
- en: '[PRE1]'
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Navigate to [http://localhost/admin](http://localhost/admin) and log in with
    your admin/pimcore credentials.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 导航到[http://localhost/admin](http://localhost/admin)并使用你的管理员/pimcore凭据登录。
- en: Now you are ready to put into practice all the aspects related to this chapter.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以将本章涉及的所有方面付诸实践了。
- en: Installing a bundle
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装捆绑包
- en: In this section, we will see how you can add features to Pimcore with the use
    of bundles. We will then see what a bundle is and how to install it in a few simple
    steps.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将了解如何使用捆绑包向Pimcore添加功能。然后我们将了解捆绑包是什么，以及如何通过几个简单步骤来安装它。
- en: Pimcore offers many features already pre-installed and ready to use, but while
    these may be sufficient for our needs, it is possible to need additional features
    that are not available in Pimcore. No problem, because the framework provides
    a quick and easy way to install new features. Adding functionality to the framework
    is done by installing packages, or **bundles** in the Pimcore world, just like
    in other systems, where they can be identified as plugins, modules, or add-ons.
    A bundle, in other words, is a package that contains additional components or
    features that will increase the functionality of Pimcore.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: Pimcore已经预装了许多功能，并准备好使用，但尽管这些可能满足我们的需求，但可能还需要一些Pimcore中不可用的额外功能。没问题，因为这个框架提供了一个快速简单的方式来安装新功能。向框架添加功能是通过安装包来完成的，在Pimcore的世界里，它们被称为**组件**或**捆绑包**，就像在其他系统中，它们可以被识别为插件、模块或附加组件一样。换句话说，捆绑包是一个包含额外组件或功能的包，这将增加Pimcore的功能性。
- en: Installing a bundle is a relatively easy operation; let's proceed step by step.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 安装捆绑包是一个相对简单的操作；让我们一步步进行。
- en: 'The first thing to do is to identify a bundle to install according to our needs.
    There''s a dedicated page for this on the official Pimcore site, where you can
    find a large number of bundles, many created by the Pimcore development team and
    others by third-party developers. This is the link to this page, which is called
    the Pimcore Marketplace: https://Pimcore.com/en/developers/marketplace.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要根据我们的需求确定要安装的包。在官方 Pimcore 网站上有一个专门的页面，你可以在这里找到大量包，其中许多是由 Pimcore 开发团队创建的，其他则是由第三方开发者创建的。这是该页面的链接，被称为
    Pimcore 市场页面：https://Pimcore.com/en/developers/marketplace。
- en: 'We can see how the marketplace looks in the following screenshot:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在以下屏幕截图中看到市场的外观：
- en: '![Figure 7.1: Pimcore Marketplace'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.1：Pimcore 市场页面]'
- en: '](img/Figure_7.01_B17073.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片 7.01_B17073.jpg]'
- en: 'Figure 7.1: Pimcore Marketplace'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.1：Pimcore 市场页面
- en: As we can see in the previous screenshot, it is possible to do a search and
    filter the search results.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一个屏幕截图所示，我们可以进行搜索并过滤搜索结果。
- en: Now we just have to look for what we need. For this chapter, we can assume we
    need a bundle that allows us to generate continuous numbers. Even if the bundle
    we are going to install will not add many features to our Pimcore installation,
    the procedure remains valid for every bundle that we will have to install, regardless
    of its features.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们只需查找我们需要的。对于本章，我们可以假设我们需要一个允许我们生成连续数字的包。即使我们将要安装的包不会给我们的 Pimcore 安装添加很多功能，但该过程对于我们将要安装的每个包都是有效的，无论其功能如何。
- en: 'After a simple search, we found a bundle that will be right for us. The bundle
    is called **Number Sequence Generator**, developed by the Pimcore team. In the
    next screenshot, we see what the page looks like with the search carried out and
    the results:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 经过简单的搜索，我们找到了一个适合我们的包。这个包叫做 **数字序列生成器**，由 Pimcore 团队开发。在下一个屏幕截图中，我们看到搜索执行和结果的样子：
- en: '![Figure 7.2: The Pimcore Marketplace page with a search performed'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.2：执行搜索的 Pimcore 市场页面]'
- en: '](img/Figure_7.02_B17073.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片 7.02_B17073.jpg]'
- en: 'Figure 7.2: The Pimcore Marketplace page with a search performed'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.2：执行搜索的 Pimcore 市场页面
- en: As we can see in the preceding screenshot, we got a list of results with our
    search. The search results are represented with cards, where we can read a brief
    description of the features that we will introduce with the installation of the
    bundle. There is also other useful information, such as the version number, category,
    name of the developer, whether it is a reviewed version, and when it was last
    reviewed.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一个屏幕截图所示，我们得到了搜索结果列表。搜索结果以卡片形式表示，我们可以阅读我们将通过安装包介绍的功能的简要描述。还有其他有用的信息，例如版本号、类别、开发者的名字、是否经过审查，以及最后一次审查的时间。
- en: Now, just click on the bundle and go to the details page. Among all the additional
    information that we find on the page, click on the **GET IT NOW** button. This
    is a link that will send us to the bundle's source code page.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，只需点击包并转到详情页面。在页面上找到的所有附加信息中，点击 **立即获取** 按钮。这是一个链接，将带我们到包的源代码页面。
- en: 'So, let''s go a bit further and begin with the installation procedure. It''s
    nothing complicated, but compared to other plugin installation systems, such as
    WordPress or other similar systems, it requires some additional steps. So, get
    ready to get your hands a little dirty, and follow these steps:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，让我们进一步深入，开始安装过程。这并不复杂，但与其他插件安装系统，如 WordPress 或其他类似系统相比，它需要一些额外的步骤。所以，准备好让你的手稍微脏一点，并遵循以下步骤：
- en: 'Locate and open the `composer.json` file in the source file repository. In
    our case, the file looks like this:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在源文件仓库中定位并打开 `composer.json` 文件。在我们的例子中，文件看起来是这样的：
- en: '[PRE2]'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: While familiarity with the `composer.json` file is certainly useful, in this
    case, the only thing we are interested in is retrieving the bundle name to install
    it. We find this by scrolling up the file to the `"name"` property.
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 虽然熟悉 `composer.json` 文件确实很有用，但在这种情况下，我们唯一感兴趣的是检索要安装的包名。我们可以通过向上滚动文件到 `"name"`
    属性来找到它。
- en: Now that we know the name of the bundle to install, we need to execute one simple
    command, and `compose` will do everything for us. To do this, we need to access
    our command-line installation. If you do not use Docker, just open a shell on
    the machine where Pimcore is installed. Otherwise, you first need to access the
    container where Pimcore runs.
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在我们知道了要安装的包的名称，我们需要执行一个简单的命令，`compose` 会为我们做所有的事情。为此，我们需要访问我们的命令行安装。如果您不使用Docker，只需在Pimcore安装的机器上打开一个shell。否则，您首先需要访问Pimcore运行的容器。
- en: 'To do that, type the following command:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要做到这一点，输入以下命令：
- en: '[PRE3]'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Once you have recovered the container ID of the image where Pimcore runs, type
    this command:'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您恢复了Pimcore运行的镜像的容器ID，输入以下命令：
- en: '[PRE4]'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Once you are in, run this command:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦进入，运行以下命令：
- en: '[PRE5]'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: … (previous console log lines)
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: …（之前的控制台日志行）
- en: Trying to install assets as relative symbolic links.
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 尝试将资产作为相对符号链接安装。
- en: '--- --------------------------------- ------------------'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '--- --------------------------------- ------------------'
- en: Bundle                            Method / Error
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 包                            方法 / 错误
- en: '--- --------------------------------- ------------------'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '--- --------------------------------- ------------------'
- en: FOSJsRoutingBundle                relative symlink
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: FOSJsRoutingBundle                relative symlink
- en: … (some other bundles)
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: …（一些其他包）
- en: '--- --------------------------------- ------------------'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '--- --------------------------------- ------------------'
- en: '[OK] All assets were successfully installed.'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[OK] 所有资产已成功安装。'
- en: '[PRE6]'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: If the installation was successful, we will have installed a new bundle in our
    Pimcore. We just have to go and configure it.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如果安装成功，我们将在Pimcore中安装一个新的包。我们只需去配置它。
- en: 'By following the **Tools | Bundles** menus, you can access the bundle configuration
    page. In the next screenshot, we see what this page looks like:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 通过遵循**工具 | 包**菜单，您可以访问包配置页面。在下一张截图中，我们看到这个页面的样子：
- en: '![Figure 7.3: The Pimcore bundle management page'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.3：Pimcore包管理页面'
- en: '](img/Figure_7.03_B17073.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.03_B17073.jpg)'
- en: 'Figure 7.3: The Pimcore bundle management page'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.3：Pimcore包管理页面
- en: As we can see in the preceding screenshot, we have two bundles installed; the
    one on the second line is the bundle we just installed.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一个截图所示，我们已安装了两个包；第二行显示的是我们刚刚安装的包。
- en: Before completing the installation of the bundle, let's stop for a moment and
    analyze the columns that we see in the table in *Figure 7.3*.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在完成包的安装之前，让我们停下来分析一下我们在*图7.3*中看到的表格中的列。
- en: 'We can see that there are two types of columns:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到有两种类型的列：
- en: '**Information columns**, which include **ID**, **Name**, **Version**, and **Description**.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**信息列**，包括**ID**、**名称**、**版本**和**描述**。'
- en: '**Action columns**, which contain action buttons. In particular, the two columns
    that are of interest to us are the **Enable/Disable** and **Install/Uninstall**
    columns, and their action buttons.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**操作列**，其中包含操作按钮。特别是，我们感兴趣的列是**启用/禁用**和**安装/卸载**列，以及它们的行为按钮。'
- en: First of all, we need to enable the bundle. To do that, click on the **+** icon
    in the **Enable / Disable** column, and proceed to enable the bundle. This action
    will take a few seconds, and when it is finished, a modal will appear on the screen,
    indicating that the enabling operation was successful.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要启用这个包。为此，点击**启用/禁用**列中的**+**图标，然后启用包。此操作将花费几秒钟，完成后，屏幕上会出现一个模态窗口，指示启用操作成功。
- en: 'Now we are ready to install the bundle. Before moving on to this step, we need
    to clear the cache. You can do this easily by clicking on the button at the top
    right: **Clear cache and reload**. The cache cleaning operation is necessary because
    Pimcore extensively uses caches for different types of data, including bundle
    files and their configurations. It is not recommended to complete the operation
    without first clearing the cache and then reloading the page.'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们准备安装这个包。在继续此步骤之前，我们需要清除缓存。您可以通过点击右上角的按钮轻松完成此操作：**清除缓存并重新加载**。缓存清理操作是必要的，因为Pimcore广泛使用缓存来存储不同类型的数据，包括包文件及其配置。不推荐在不先清除缓存并重新加载页面的情况下完成此操作。
- en: After clearing the cache and Pimcore has reloaded, we can return to the bundle
    management page to verify the correct status of the bundle.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 清除缓存并Pimcore重新加载后，我们可以返回包管理页面以验证包的正确状态。
- en: 'Now that we have enabled the bundle, an icon with **+** appears in the **Install/Uninstall**
    column, as shown in the following screenshot:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经启用了这个包，**+** 图标出现在**安装/卸载**列中，如下截图所示：
- en: '![Figure 7.4: The Pimcore bundle after being enabled'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.4：启用Pimcore包后的情况'
- en: '](img/Figure_7.04_B17073.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_7.04_B17073.jpg)'
- en: 'Figure 7.4: The Pimcore bundle after being enabled'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.4：启用Pimcore包后的情况
- en: As we can see from the preceding screenshot, it is now possible to click on
    the **+** icon in the **Install/Uninstall** column of the new bundle to start
    the installation process.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一个截图所示，现在可以点击新包的“安装/卸载”列中的**+**图标以启动安装过程。
- en: As for the enabling action, the system notifies us of the result of the operation
    through a modal containing some information on the operation that was just completed.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 关于启用操作，系统通过包含有关刚刚完成操作的一些信息的模态窗口通知我们操作的结果。
- en: Once again, Pimcore reminds us that we need to clear the cache and reload Pimcore.
    Let's do this for the last time, and the bundle installation is complete.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 再次提醒，Pimcore要求我们清除缓存并重新加载Pimcore。让我们最后一次这样做，包安装完成。
- en: Now that we have successfully installed the new bundle, we can take advantage
    of its features. The bundle we have chosen for this chapter allows us to generate
    continuous numbers, for example, for order numbers or customer numbers. We will
    not see how this feature works in detail because the purpose of this section is
    to learn how to install and manage bundles.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已成功安装了新的包，我们可以利用其功能。我们为这一章选择的包允许我们生成连续的数字，例如，用于订单号或客户号。我们不会详细说明此功能的工作原理，因为本节的目的在于学习如何安装和管理包。
- en: In the next section, we're going to see how users and roles are created, and
    how a user can be profiled to limit access to content.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将看到如何创建用户和角色，以及如何配置用户以限制对内容的访问。
- en: Exploring Users and Roles
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索用户和角色
- en: In this section, we will see how we can manage users and their permissions,
    to limit the functionality of the site in the administration and content management
    sections. We will see how roles and permissions are created and how they are assigned
    to users.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将了解如何管理用户及其权限，以限制网站在管理和内容管理部分的功能。我们将了解角色和权限是如何创建的，以及它们是如何分配给用户的。
- en: During the creation of a site, we often have to manage different parts with
    different importance. In addition to this, it is possible to differentiate the
    work we do in the organization. The administration part of the site is important
    and concerns the creation or editing of contents.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建网站的过程中，我们经常需要管理不同重要性不同的部分。此外，我们还可以区分我们在组织中的工作。网站的管理部分很重要，涉及内容的创建或编辑。
- en: Generally, the part concerning the maintenance and management of the site is
    the responsibility of the administrator. Thus, tasks such as managing languages,
    configuring routing rules, or creating users and installing bundles are done by
    expert users who have the required skills and knowledge, and the privileges to
    do such actions are dependent on the administrators. The content, on the other
    hand, is often the responsibility of other people such as the **users**, often
    defined as editors or publishers. Once we become aware that the management and
    maintenance of a site pass through several users, we can therefore take another
    step and define some basic notions that concern the rules of *who does what*.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，与站点的维护和管理相关部分是管理员的职责。因此，如管理语言、配置路由规则或创建用户和安装包等任务由具有所需技能和知识以及执行此类操作权限的专家用户完成，而这些权限取决于管理员。另一方面，内容通常是其他人的责任，例如**用户**，通常定义为编辑者或发布者。一旦我们意识到站点的管理和维护需要通过多个用户，因此我们可以再迈出一步，定义一些关于“谁做什么”的基本概念。
- en: 'As we have already mentioned, there are different types of users: in our example,
    we talked about administrators, who manage the configuration parts of the site,
    and editors or publishers, who enter the content. This distinction, although valid,
    is however limited because just as in a real company, where there are many people
    with many different tasks and responsibilities, even on a site, there can be many
    users with many different roles and responsibilities.'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们已经提到的，有不同类型的用户：在我们的例子中，我们谈到了管理员，他们管理网站的配置部分，以及编辑者或发布者，他们输入内容。这种区分虽然有效，但却是有限的，因为就像在现实公司中，有很多人有很多不同的任务和责任一样，在网站上，也可以有很多人有很多不同的角色和责任。
- en: 'So, how do we distinguish the users who access the site, and above all, how
    can we allow these users to be able to see and modify certain information that
    we want them to work on? The answer to this question is simple: through roles.'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，我们如何区分访问网站的用户，更重要的是，我们如何允许这些用户能够看到和修改我们希望他们工作的某些信息？这个问题的答案是简单的：通过角色。
- en: But what are roles? A **role** is essentially a set of permissions. If we wanted
    to create a role for a publisher, referring to the previous example, we would
    have to put within this role the permissions to create and modify content such
    as web pages, products of a shop, or articles of a blog. Once the role has been
    created, it will be possible to give this role to one or more users of the site,
    effectively allowing these users to do the actions that the role allows.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 但角色是什么？**角色**本质上是一组权限。如果我们想为出版商创建一个角色，参照前面的例子，我们必须在这个角色中放入创建和修改内容（如网页、商店的产品或博客的文章）的权限。一旦角色创建完成，就可以将这个角色分配给网站的一个或多个用户，从而有效地允许这些用户执行角色允许的操作。
- en: Setting Users and Roles
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置用户和角色
- en: 'In Pimcore, as well as in almost all systems that allow access to multiple
    people, it is possible to create users and roles and to relate the two entities.
    For this purpose, there are dedicated sections in the Pimcore **Settings** menu:
    **Users** and **Roles**.'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在Pimcore中，以及几乎所有允许多人访问的系统，都可以创建用户和角色，并将这两个实体关联起来。为此，Pimcore的**设置**菜单中有专门的章节：**用户**和**角色**。
- en: Following the **Settings | Users** menu, Pimcore opens a page with a list of
    registered users. On this page, we can delete, modify, or create new users. To
    open the role management page instead, simply follow the link in the **Settings
    | Roles** menu. Here, we will find the list of roles created in the system, and
    the possibility of modifying, deleting, or creating new ones.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下**设置 | 用户**菜单，Pimcore打开一个包含注册用户列表的页面。在这个页面上，我们可以删除、修改或创建新用户。要打开角色管理页面，只需点击**设置
    | 角色**菜单中的链接。在这里，我们将找到系统中创建的角色列表，以及修改、删除或创建新角色的可能性。
- en: 'By clicking on a user, the **Configuration** tab will open, where you can add
    or change information such as **Firstname** and **Lastname**, **Email**, and **Language**,
    as shown in the following screenshot:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 点击一个用户，将打开**配置**标签页，在这里您可以添加或更改诸如**名**和**姓**、**电子邮件**和**语言**等信息，如图下所示：
- en: '![Figure 7.5 – Administration pages for users'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.5 – 用户管理页面'
- en: '](img/Figure_7.05_B17073.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_7.05_B17073.jpg]'
- en: Figure 7.5 – Administration pages for users
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.5 – 用户管理页面
- en: In the previous screenshot, we can see the user administration page; by right-clicking
    the left menu, a pop-up context menu will appear where you can create or delete
    a user. The role administration page has the same layout and functionality as
    the user administration page.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的截图中，我们可以看到用户管理页面；通过右键单击左侧菜单，将出现一个弹出上下文菜单，您可以在其中创建或删除用户。角色管理页面与用户管理页面具有相同的布局和功能。
- en: 'In Pimcore, there are two levels of user permissions:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在Pimcore中，存在两个级别的用户权限：
- en: Permissions on system components
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 系统组件的权限
- en: Permissions on data elements (assets, objects, and documents)
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据元素（资产、对象和文档）的权限
- en: Permissions can be granted to roles or individual users. It is not mandatory
    to use roles; permissions can be granted to users directly instead. However, it
    is advised to use roles if there is a larger user group to manage. In the **User/Role**
    settings tab, inside the **Permission** section, it can be decided which permissions
    are granted to that user or role. An individual user has a few more general settings
    than the role.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 权限可以授予角色或单个用户。使用角色不是强制性的；可以直接将权限授予用户。然而，如果需要管理较大的用户组，建议使用角色。在**用户/角色**设置标签页中，在**权限**部分，可以决定授予该用户或角色的哪些权限。与角色相比，单个用户有一些更多的通用设置。
- en: So, let's see how to assign permissions to users. Take a look at how the user
    configuration page is defined. As you can see in *Figure 7.5*, the page is divided
    into four tabs. Describing them all in detail would take a long time and is beyond
    the scope of this chapter. For our purpose, we will keep the focus on the **Settings**
    and **Workspaces** tabs.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，让我们看看如何为用户分配权限。看看用户配置页面是如何定义的。如您在*图7.5*中看到的，页面分为四个标签页。详细描述它们将花费很长时间，并且超出了本章的范围。为了我们的目的，我们将重点关注**设置**和**工作空间**标签页。
- en: 'In particular, the **Settings** tab is divided into sections:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 特别是，**设置**标签页被分为几个部分：
- en: '**General**: Configures the account user'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**常规**：配置账户用户'
- en: '**Admin**: Grants administrator role to the user'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**管理员**：授予用户管理员角色'
- en: '**Permission**: Sets which system role to grant to the user'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**权限**：设置授予用户的系统角色'
- en: '**Allowed types to create**: Selects the classes allowed to be created'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**允许创建的类型**：选择允许创建的类'
- en: '**Editor Settings**: Selects the language for the user'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**编辑器设置**：选择用户的语言'
- en: '**Shared Translation Settings**: Manages shared translations'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**共享翻译设置**：管理共享翻译'
- en: 'So, let''s start with the configuration of user settings. By clicking on the
    **+** icon, you discover the various configurations for each section, as we can
    see in the following screenshot:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，让我们从用户设置的配置开始。通过点击**+**图标，您可以发现每个部分的多种配置，如下面的截图所示：
- en: '![Figure 7.6: User administration page: sections inside the Settings tab'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.6：用户管理页面：设置选项卡内的部分'
- en: '](img/Figure_7.06_B17073.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.06_B17073.jpg)'
- en: 'Figure 7.6: User administration page: sections inside the Settings tab'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.6：用户管理页面：设置选项卡内的部分
- en: As we can see from the previous screenshot, the **General** section contains
    all the user information, such as username and password, image, and roles. The
    **Admin** section, on the other hand, contains only a checkbox that, if selected,
    will grant administrator privileges for the user; that is, they will have full
    control of Pimcore. The third section, **Permissions**, is a long list of checkboxes,
    each of which identifies particular permission to perform operations on Pimcore.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一个截图所示，**常规**部分包含所有用户信息，如用户名和密码、图像和角色。另一方面，**管理员**部分只包含一个复选框，如果选中，将为用户授予管理员权限；也就是说，他们将拥有对Pimcore的完全控制权。第三个部分**权限**是一个长长的复选框列表，每个复选框都标识了在Pimcore上执行特定操作的权利。
- en: 'Let''s check out some of these items and their meaning:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们检查一些这些条目及其含义：
- en: '**Assets**: Makes the assets tree visible.'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资产**：使资产树可见。'
- en: '**Classes**: Makes the object classes editor visible (user can create and modify
    object classes).'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**类**：使对象类编辑器可见（用户可以创建和修改对象类）。'
- en: '**Clear Cache**: Defines whether a user may clear the Pimcore cache.'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**清除缓存**：定义用户是否可以清除Pimcore缓存。'
- en: '**Clear Temporary Files**: Defines whether a user may delete temporary system
    files.'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**清除临时文件**：定义用户是否可以删除临时系统文件。'
- en: '**Documents**: Makes the documents tree visible.'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文档**：使文档树可见。'
- en: '**Document Types**: Allows the user to create and modify predefined document
    types.'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文档类型**：允许用户创建和修改预定义的文档类型。'
- en: '**Emails**: The user sees the email history.'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**电子邮件**：用户可以看到电子邮件历史记录。'
- en: '**Extensions**: Specifies whether a user is allowed to download, install, and
    manage the extension.'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**扩展**：指定用户是否允许下载、安装和管理扩展。'
- en: '**Objects**: Makes the object''s tree visible.'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**对象**：使对象的树可见。'
- en: '**Recycle Bin**: The user has access to the recycle bin.'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**回收站**：用户可以访问回收站。'
- en: '**Redirects**: The user can create and modify redirects.'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**重定向**：用户可以创建和修改重定向。'
- en: '**System Settings**: The user has access to system settings.'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**系统设置**：用户可以访问系统设置。'
- en: '**Translations**: Defines whether a user may view and edit website translations.'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**翻译**：定义用户是否可以查看和编辑网站翻译。'
- en: '**Users**: Defines whether a user may manage other users'' settings and system
    permissions.'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户**：定义用户是否可以管理其他用户的设置和系统权限。'
- en: '**Website Settings**: The user can create and modify website settings.'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**网站设置**：用户可以创建和修改网站设置。'
- en: Therefore, by selecting some of these checkboxes, it is possible to configure
    the permissions of a user (or for a role, the configuration section is identical)
    according to the needs. These permissions are the Pimcore system permissions.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，通过选择这些复选框中的一些，可以根据需要配置用户的权限（或对于角色，配置部分是相同的）。这些权限是Pimcore系统权限。
- en: 'There are also other permissions that can be configured from the **Workspaces**
    tab, which looks like this:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还可以从**工作空间**选项卡配置其他权限，其外观如下：
- en: '![Figure 7.7: Managing user permissions on data elements (assets, objects,
    and documents)'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.7：管理数据元素（资产、对象和文档）的用户权限'
- en: '](img/Figure_7.07_B17073.jpg)'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.07_B17073.jpg)'
- en: 'Figure 7.7: Managing user permissions on data elements (assets, objects, and
    documents)'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.7：管理数据元素（资产、对象和文档）的用户权限
- en: As we can see in the preceding screenshot, a user's access can be restricted
    on an element basis. This can be done by defining workspaces for a user or role.
    Provided that a user may generally access documents, it can be specified what
    a user/role may or may not do with each document or workspace. The same is true
    for objects and assets.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一个屏幕截图所示，用户的访问权限可以基于元素进行限制。这可以通过为用户或角色定义工作空间来实现。既然用户通常可以访问文档，就可以指定用户/角色可以对每个文档或工作空间执行的操作。对于对象和资产也是如此。
- en: 'The user permissions based on the elements are identified by a column, as can
    be seen in *Figure 7.7*. We can summarize some of them:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 基于元素的基于用户的权限通过一列标识，如图 *图 7.7* 所示。我们可以总结其中的一些：
- en: '**List**: The element can be listed in a tree.'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**列表**：元素可以在树中列出。'
- en: '**View**: The element can be opened.'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**查看**：元素可以被打开。'
- en: '**Save**: The element can be saved (save button visible).'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**保存**：元素可以被保存（可见保存按钮）。'
- en: '**Publish**: The element can be published (publish button visible).'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**发布**：元素可以被发布（可见发布按钮）。'
- en: '**Create**: New child elements can be created (does not exist for assets).'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**创建**：可以创建新的子元素（对于资产不存在）。'
- en: '**Delete**: The element can be deleted.'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**删除**：元素可以被删除。'
- en: '**Versions**: Makes the **Versions** tab available.'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**版本**：使 **版本** 选项卡可用。'
- en: Now that we have seen all the components needed to configure and use users and
    roles, let's move on to a simple practical example.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经看到了配置和使用用户和角色所需的所有组件，让我们继续一个简单的实际例子。
- en: A practical example of using users and roles
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用用户和角色的实际例子
- en: Now that we have a clear idea of how to configure users and roles, let's take
    a simple practical example.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经清楚地了解了如何配置用户和角色，让我们用一个简单的实际例子来说明。
- en: For this example, we created two users, **Tom** and **Bob**, and two roles,
    **tomstuff** and **bobstuff**. Let's assign **Tom** the **tomstuff** role and
    **Bob** the **bobstuff** role. This is possible by going to the **General** section
    of the **User Configuration** menu (*Figure 7.6*) and selecting the appropriate
    role in the **Roles** box.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个例子，我们创建了两个用户，**Tom** 和 **Bob**，以及两个角色，**tomstuff** 和 **bobstuff**。让我们将 **Tom**
    分配为 **tomstuff** 角色，将 **Bob** 分配为 **bobstuff** 角色。这可以通过进入 **用户配置** 菜单的 **常规**
    部分 (*图 7.6*) 并在 **角色** 框中选择适当的角色来实现。
- en: 'What we need to do now is to select the permissions for each role. This can
    be done from the group called **Permissions** inside the **Settings** tab (see
    *Figure 7.6*):'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在需要为每个角色选择权限。这可以通过在 **设置** 选项卡内的 **权限** 组内完成（见图 *图 7.6*）：
- en: For **tomstuff**, we selected **Notes & Events** | **System Settings** | **Users**
    | **Admin Translation** | **Object**.
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于 **tomstuff**，我们选择了 **笔记与事件** | **系统设置** | **用户** | **管理员翻译** | **对象**。
- en: For **bobstuff**, we selected **Recycle Bin** | **Static Routes** | **Clear
    Cache** | **Object**.
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于 **bobstuff**，我们选择了 **回收站** | **静态路由** | **清除缓存** | **对象**。
- en: 'These are permissions concerning the Pimcore configurations and settings. Now
    let''s set the permissions for the contents. We have created two classes: `Book`
    and `Film`. Class creation is fully described in [*Chapter 5*](B17073_05_ePub_RK.xhtml#_idTextAnchor093),
    *Exploring Objects and Classes*. We assigned the **tomstuff** role permissions
    to manage the books, while **bobstuff** was given permissions to manage the films.
    This can be done from the **Workspace** tab, as seen in *Figure 7.7*.'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是与 Pimcore 配置和设置相关的权限。现在让我们设置内容的权限。我们创建了两个类：`Book` 和 `Film`。类创建在 [*第 5 章*](B17073_05_ePub_RK.xhtml#_idTextAnchor093)，*探索对象和类*
    中有详细描述。我们将 **tomstuff** 角色的权限分配给管理书籍，而将 **bobstuff** 分配给管理电影。这可以通过 **工作空间** 选项卡来完成，如图
    *图 7.7* 所示。
- en: 'Now that the configuration is completed, let''s log in with the two users;
    in the next screenshot, we can see what the administration looks like by logging
    in as Tom:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 现在配置完成后，让我们用这两个用户登录；在下一个屏幕截图中，我们可以看到以 Tom 登录时管理界面看起来是什么样子：
- en: '![Figure 7.8 – Administration page for Tom'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.8 – Tom 的管理页面'
- en: '](img/Figure_7.08_B17073.jpg)'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.08_B17073.jpg)'
- en: Figure 7.8 – Administration page for Tom
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.8 – Tom 的管理页面
- en: 'As we can see in the previous screenshot, only some menu items are accessible
    for Tom, under the permissions of the user''s role. We can also see that Tom can
    only manage book objects, as we specified in the workspace of the **tomstuff**
    role. In the next screenshot, instead, we can see what the administration looks
    like for Bob:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一个屏幕截图所示，Tom 在用户角色的权限下只能访问一些菜单项。我们还可以看到，Tom 只能管理我们在 **tomstuff** 角色的工作空间中指定的书籍对象。相反，在下一个屏幕截图中，我们可以看到
    Bob 的管理界面：
- en: '![Figure 7.9: Administration page for Bob'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 7.9: Bob的管理页面]'
- en: '](img/Figure_7.09_B17073.jpg)'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_7.09_B17073.jpg]'
- en: 'Figure 7.9: Administration page for Bob'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 7.9: Bob的管理页面]'
- en: Again, in this screenshot, we can see how the menus are limited for Bob, and
    how it is possible to manage only the film objects.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，在这个屏幕截图中，我们可以看到鲍勃的菜单是如何受限的，以及如何仅管理电影对象。
- en: As we can see from the preceding screenshot, the context menus of the Pimcore
    administration are different according to the user and their roles. In particular,
    we can verify that only the actions related to the assigned permissions are visible;
    everything else is not accessible. Even for the contents, the two users are only
    enabled for the classes that are accessible through their role; in particular,
    Tom can manage books, while Bob can manage films.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的屏幕截图中我们可以看到，Pimcore管理界面中的上下文菜单根据用户及其角色而有所不同。特别是，我们可以验证只有与分配的权限相关的操作是可见的；其他一切都不可以访问。即使是内容，两个用户也仅能访问通过其角色可访问的类；特别是，汤姆可以管理书籍，而鲍勃可以管理电影。
- en: What we have just seen in this section is a possible solution to the problem
    of limiting access to certain users based on roles, and it is possible to achieve
    this without having to write the code, simply by configuring users, roles, and
    permissions, from the Pimcore administration page.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们刚刚看到的是解决基于角色限制某些用户访问问题的一个可能解决方案，而且可以通过配置用户、角色和权限，无需编写代码，仅通过Pimcore管理页面即可实现这一点。
- en: Pimcore, however, offers a much more complete system for creating special views
    that is much more complete and configurable than what we have just seen. This
    Pimcore feature is called **perspectives**, that is, views created and configured
    ad hoc for specific users. So, let's see how a perspective can be created, how
    it is configured, and what the final result will be in our Pimcore.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，Pimcore提供了一个更完整的系统来创建特殊视图，这个系统比我们刚刚看到的要完整得多，可配置性也更强。这个Pimcore功能被称为**视角**，即专门为特定用户创建和配置的视图。那么，让我们看看如何创建一个视角，如何配置它，以及最终在Pimcore中的结果会是什么。
- en: Managing Perspectives
  id: totrans-162
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理视角
- en: 'As we saw in the previous section, it is possible to limit access to Pimcore
    features by configuring users and roles. We also mentioned, at the end of the
    previous section, that there is a feature in Pimcore that allows you to obtain
    the same result, namely the perspective. While the preceding is completely true,
    there is one important difference to keep in mind: while using permissions on
    users and roles restricts access to data, perspectives are not intended to be
    used to restrict access to data. So, although the end result may seem similar,
    they are two very different things in terms of security. Our advice is to use
    both, so as to have a perfect result both from the administrative backend side
    as well as from the security side.'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一小节所述，可以通过配置用户和角色来限制对Pimcore功能的访问。我们也在前一小节的结尾提到，Pimcore中有一个功能可以让你获得相同的结果，即视角。虽然前面的说法完全正确，但有一个重要的区别需要记住：使用用户和角色的权限来限制数据访问，而视角并不是用来限制数据访问的。因此，尽管最终结果可能看起来相似，但在安全性方面，它们是两件非常不同的事情。我们的建议是两者都使用，以便从管理后端以及安全性方面都得到完美的结果。
- en: 'So, let''s see how we can create a perspective. The simplest way is to use
    the bundle developed by the Pimcore dev team. This bundle provides an editor for
    Pimcore that allows us to do the following:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，让我们看看我们如何创建一个视角。最简单的方法是使用Pimcore开发团队开发的包。这个包提供了一个Pimcore编辑器，允许我们执行以下操作：
- en: Add/remove/edit custom views
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加/删除/编辑自定义视图
- en: Add/remove/edit perspectives
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加/删除/编辑视角
- en: It also allows us to configure most of the possible configuration options directly
    in the user interface.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 它还允许我们直接在用户界面中配置大多数可能的配置选项。
- en: 'The bundle page can be reached at this address: https://github.com/pimcore/perspective-editor.'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过以下地址访问包页面：https://github.com/pimcore/perspective-editor。
- en: 'As we have seen in the *Installing a bundle* section of this chapter, to install
    a bundle it will be enough to follow a few simple steps. We will not explain again
    how to install the bundle, but as we have already seen, we have to ask a composer
    to add the bundle to the solution, with the following command:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 如本章“安装包”部分所述，要安装包，只需遵循几个简单的步骤即可。我们不会再次解释如何安装包，但正如我们已经看到的，我们需要让composer将包添加到解决方案中，使用以下命令：
- en: '[PRE7]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'After installing and activating the bundle on Pimcore, we are ready to use
    this new feature, starting from the new menu item that we find under **Settings**
    | **Perspectives / Views**, as you can see in the following screenshot:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 在Pimcore上安装并激活捆绑包后，我们就可以使用这个新功能了，从**设置** | **视角/视图**下找到的新菜单项开始，如以下截图所示：
- en: '![Figure 7.10: Perspectives / Views Menu item and the Perspectives edit page'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.10：视角/视图菜单项和视角编辑页面'
- en: '](img/Figure_7.10_B17073.jpg)'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_7.10_B17073.jpg)'
- en: 'Figure 7.10: Perspectives / Views Menu item and the Perspectives edit page'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.10：视角/视图菜单项和视角编辑页面
- en: As you can see in the previous screenshot, there is a default perspective, which
    can be changed at will. But in order not to touch the default perspective, let's
    go and create a new one. By clicking on the `MyFirstPerspective`.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一个截图所示，有一个默认的视角，可以随意更改。但为了不修改默认视角，让我们去创建一个新的视角。通过点击`MyFirstPerspective`。
- en: 'As you can also see in *Figure 7.10*, we have five fields in a perspective,
    and they are as follows:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您在*图7.10*中也可以看到，在视角中我们有五个字段，如下所示：
- en: '**icon**: You can select an icon for the perspective.'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**图标**：可以为视角选择一个图标。'
- en: '**Element Tree Left**: Within this element, it is possible to add one or more
    of the following elements: **Document**, **Asset**, **Object**, or **Custom View**.
    The added items will be displayed on the left column of the Pimcore admin interface.'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**元素树左侧**：在这个元素中，可以添加以下一个或多个元素：**文档**、**资产**、**对象**或**自定义视图**。添加的项目将在Pimcore管理界面的左侧列中显示。'
- en: '**Element Tree Right**: This is the same as the preceding item just described,
    but the items will be displayed on the right column.'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**元素树右侧**：这与前面描述的相同项目，但项目将在右侧列中显示。'
- en: '**Dashboard**: By selecting this element, you would be able to decide which
    elements can be allowed or forbidden in the dashboard. It is also possible to
    create new dashboards and, for each one, it is possible to decide which elements
    it is composed of.'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**仪表板**：通过选择此元素，可以决定哪些元素可以在仪表板上允许或禁止。还可以创建新的仪表板，并且对于每个仪表板，可以决定它由哪些元素组成。'
- en: '**Toolbar**: Through a list of checkboxes, grouped by menu, it is possible
    to choose whether or not to display a menu, but also to decide which items for
    a menu should be visible or not. In other words, through this element, it is possible
    to enable or hide the menu items of the Pimcore administration, and even hide
    entire menus.'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**工具栏**：通过一组按菜单分组的复选框，可以选择是否显示菜单，还可以决定哪些菜单项应该可见或不可见。换句话说，通过这个元素，可以启用或隐藏Pimcore管理中的菜单项，甚至可以隐藏整个菜单。'
- en: 'As we have seen, in the two items, **Element Tree Right** and **Element Tree
    Left**, it is possible to add one or more of the document, asset, or object elements.
    In the next screenshot, we see how to add the document element:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所见，在两个项目**元素树右侧**和**元素树左侧**中，可以添加一个或多个文档、资产或对象元素。在下一个截图中，我们看到如何添加文档元素：
- en: '![Figure 7.11: Perspective Menu item: add document element tree left'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.11：视角菜单项：添加文档元素树左侧'
- en: '](img/Figure_7.11_B17073.jpg)'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_7.11_B17073.jpg)'
- en: 'Figure 7.11: Perspective Menu item: add document element tree left'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.11：视角菜单项：添加文档元素树左侧
- en: 'As we can see in the preceding screenshot, for our view we have decided to
    add a document and asset elements in the left column and an object in the right
    column. Once you have decided which elements to put where, by selecting each of
    these elements, it will be possible to decide, through a list of checkboxes, which
    elements of the contextual menu should be visible for each element. Let''s take,
    for example, the document element, as seen in the following screenshot:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一个截图所示，对于我们的视图，我们决定在左侧列中添加文档和资产元素，在右侧列中添加一个对象。一旦决定将哪些元素放在哪里，通过选择这些元素中的每一个，就可以通过复选框列表决定每个元素的上下文菜单中哪些元素应该可见。以下是一个例子，如以下截图所示：
- en: '![Figure 7.12: Definition of the context menu for the document element'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.12：文档元素的上下文菜单定义'
- en: '](img/Figure_7.12_B17073.jpg)'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_7.12_B17073.jpg)'
- en: 'Figure 7.12: Definition of the context menu for the document element'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.12：文档元素的上下文菜单定义
- en: As we can see from the previous screenshot, it is possible to select which context
    menu items we want to display.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的截图我们可以看到，可以选择显示哪些上下文菜单项。
- en: 'As for the elements of the columns, just seen, through the **Toolbar** element,
    it is possible to decide which menus to show or hide, or it is possible to decide
    which items of a menu or submenu we want to hide. All menus are grouped, and in
    each group there is a list of checkboxes that act on the menu item, displaying
    or hiding it. For better understanding, let''s take a look at the following screenshot,
    relating to the settings menu:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 就列元素而言，刚刚看到，通过**工具栏**元素，我们可以决定显示或隐藏哪些菜单，或者我们可以决定要隐藏的菜单或子菜单中的哪些项目。所有菜单都分组，在每个组中都有一个作用于菜单项的复选框列表，显示或隐藏它。为了更好地理解，让我们看一下以下截图，与设置菜单相关：
- en: '![Figure 7.13: Selection of items to be displayed in the settings menu'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.13：设置菜单中要显示的项目选择'
- en: '](img/Figure_7.13_B17073.jpg)'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.13_B17073.jpg)'
- en: 'Figure 7.13: Selection of items to be displayed in the settings menu'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.13：设置菜单中要显示的项目选择
- en: As we can see in the preceding screenshot, each menu item is a group, which
    can be expanded, revealing the list of checkboxes that identify the various menu
    items. Each checkbox list group has **Hide** **xxx Menu** as its first entry,
    where **xxx** is the name of the menu. If we select this item, the menu will be
    hidden, and subsequent ticks will not be considered.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 如前截图所示，每个菜单项都是一个组，可以展开，显示识别各种菜单项的复选框列表。每个复选框列表组的第一个条目是**隐藏** **xxx菜单**，其中**xxx**是菜单的名称。如果我们选择此项目，菜单将被隐藏，后续的勾选将不被考虑。
- en: 'Once all parts of the perspectives are defined, the perspective item will appear
    in the file menu, and inside it will be possible to select our new perspective,
    as we can see in the following figure:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦定义了视角的所有部分，视角项将出现在文件菜单中，并且在其中可以选择我们的新视角，如下图所示：
- en: '![Figure 7.14: File menu with the list of perspectives'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.14：包含视角列表的文件菜单'
- en: '](img/Figure_7.14_B17073.jpg)'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.14_B17073.jpg)'
- en: 'Figure 7.14: File menu with the list of perspectives'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.14：包含视角列表的文件菜单
- en: 'As we can see in the preceding figure, in the new menu item called **Perspectives**,
    inside the file menu, there are two items: the default perspective and our new
    perspective, **MyFirstPerspective**.'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 如前图所示，在名为**Perspectives**的新菜单项中，文件菜单内有两个项目：默认视角和我们的新视角**MyFirstPerspective**。
- en: 'Once our perspective is configured as we want, we can associate it to users
    or roles. This can be done directly in the user or role settings, as we can see
    in the following figure:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们的视角配置如我们所愿，我们就可以将其关联到用户或角色。这可以直接在用户或角色设置中完成，如以下图所示：
- en: '![Figure 7.15: Configuration of the perspective for users and roles'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.15：用户和角色的视角配置'
- en: '](img/Figure_7.15_B17073.jpg)'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.15_B17073.jpg)'
- en: 'Figure 7.15: Configuration of the perspective for users and roles'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.15：用户和角色的视角配置
- en: 'As we can see from the preceding screenshot, the selection of the perspective
    for users and roles is extremely simple: just select the desired perspective from
    the list and save the settings. We have thus seen how users and roles are managed
    in Pimcore, and how to create and configure perspectives to be associated with
    each user or role. In the next section, we will see a very useful feature concerning
    the maintenance of Pimcore: the import/export of Pimcore settings.'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 如前截图所示，用户和角色的视角选择非常简单：只需从列表中选择所需的视角并保存设置。因此，我们已经看到了如何在Pimcore中管理用户和角色，以及如何创建和配置与每个用户或角色关联的视角。在下一节中，我们将看到一个关于Pimcore维护的非常有用的功能：Pimcore设置的导入/导出。
- en: Importing and Exporting Pimcore settings
  id: totrans-206
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导入和导出Pimcore设置
- en: In this section, we will see how it is possible to export the settings of our
    Pimcore installation and import them into other environments, a fundamental functionality
    when we have to work in different environments, such as for development, testing,
    or production.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将看到如何导出Pimcore安装的设置并将它们导入到其他环境中，这是在必须在不同环境中工作时的基本功能，例如开发、测试或生产。
- en: 'As we saw in [*Chapter 5*](B17073_05_ePub_RK.xhtml#_idTextAnchor093), *Exploring
    Objects and Classes*, when we talked about classes and objects, we learned how
    to create new entities and use them for our purposes. All the work we do is somehow
    trapped inside Pimcore, like in a kind of a box. This is completely normal, and
    when developing a new website, we are used to referring to the various environments,
    development, testing, staging, and so on, where we have made our changes. The
    doubt therefore arises: if I work in the development environment, for example,
    how can I transfer the work done in other environments?'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在[*第五章*](B17073_05_ePub_RK.xhtml#_idTextAnchor093)中看到的，*探索对象和类*，当我们谈论类和对象时，我们学习了如何创建新实体并用于我们的目的。我们所做的一切工作都在某种程度上被困在
    Pimcore 中，就像在一个盒子中一样。这是完全正常的，当开发一个新网站时，我们习惯于参考各种环境，开发、测试、预发布等，我们在那里进行了更改。因此，疑问随之而来：如果我工作在开发环境中，例如，我如何将其他环境中完成的工作转移过来？
- en: Well, having a tool that allows us to export the work done in a Pimcore installation,
    to be able to import it into another installation, becomes a necessary, if not
    indispensable, benefit.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，拥有一个允许我们将 Pimcore 安装中完成的工作导出，以便能够将其导入另一个安装的工具，这成为了一个必要，如果不是必不可少的益处。
- en: 'To clarify, let''s take a simple example taking the two classes we initially
    created: `Book` and `Film`. If we want to export one of the two classes, or both,
    to be able to import them into another Pimcore installation in another environment,
    we can go to the class editing page and click the **Export** button in the bottom
    button bar, as you can see in the following screenshot:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 为了澄清，让我们以我们最初创建的两个类`Book`和`Film`为例。如果我们想要导出这两个类中的一个，或者两个，以便能够将它们导入另一个环境中的另一个
    Pimcore 安装，我们可以进入类编辑页面，点击底部按钮栏中的**导出**按钮，如下截图所示：
- en: '![Figure 7.16 Class edit page, with the Import/Export buttons'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 7.16 类编辑页面，带有导入/导出按钮](img/Figure_7.16_B17073.jpg)'
- en: '](img/Figure_7.16_B17073.jpg)'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 7.17: 批量导出](img/Figure_7.17_B17073.jpg)'
- en: Figure 7.16 Class edit page, with the Import/Export buttons
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.16 类编辑页面，带有导入/导出按钮
- en: As we can see, the **Export** button is exactly what we need. Just click on
    **Export** and Pimcore will generate a JSON file containing all the necessary
    information to be able to import it later on in another Pimcore environment. Once
    it has been exported, all we have to do is access the Pimcore installation where
    we want to import our class, create it, and then import the previously extracted
    file using the **Import** button, as shown in *Figure 7.16*.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，**导出**按钮正是我们所需要的。只需点击**导出**，Pimcore 将生成一个包含所有必要信息的 JSON 文件，以便能够在另一个 Pimcore
    环境中稍后导入。一旦导出，我们只需访问我们想要导入类的 Pimcore 安装，创建它，然后使用**导入**按钮导入之前提取的文件，如图*7.16*所示。
- en: 'But this is only part of the solution. Let''s imagine we have hundreds of classes;
    exporting and importing them one by one could be a long job, and we could forget
    some classes along the way. To solve this problem, navigate to **Settings** |
    **Data Objects** and we find two items: **Bulk Export** and **Bulk Import**. After
    clicking on **Bulk Export**, a modal like this will appear:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 但这仅仅是解决方案的一部分。让我们设想我们有成百上千个类；逐个导出和导入它们可能是一项漫长的工作，我们可能会在途中忘记一些类。为了解决这个问题，导航到**设置**
    | **数据对象**，我们会找到两个项目：**批量导出**和**批量导入**。点击**批量导出**后，会出现如下模式：
- en: '![Figure 7.17: Bulk export'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 7.17: 批量导出'
- en: '](img/Figure_7.17_B17073.jpg)'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 7.17: Bulk export](img/Figure_7.17_B17073.jpg)'
- en: 'Figure 7.17: Bulk export'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.17：批量导出
- en: As we can see, it is possible to select from the list of classes the ones that
    we want to export.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，我们可以从类列表中选择我们想要导出的类。
- en: Also, if you have created or edited `Book` and `Film`.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果您创建了或编辑了`Book`和`Film`。
- en: Once we have selected what we want to extract by clicking on **Export**, Pimcore
    generates a JSON file containing all the information necessary to import all the
    elements in another environment. Finally, you can use the **Bulk Import** command
    to reload the exported file containing all the exported entities.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们通过点击**导出**选择了我们想要提取的内容，Pimcore 将生成一个包含导入另一个环境中所有元素所需信息的 JSON 文件。最后，您可以使用**批量导入**命令重新加载包含所有导出实体的导出文件。
- en: 'The import happens in two steps, as follows:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 导入分为两个步骤，如下所示：
- en: 'Select the JSON file generated during the export. Using the following modal,
    load the JSON file that was generated during the export stage, which you now want
    to import:![Figure 7.18: Select local file'
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '选择导出过程中生成的 JSON 文件。使用以下模式，加载在导出阶段生成的 JSON 文件，您现在想要导入：![Figure 7.18: 选择本地文件'
- en: '](img/Figure_7.18_B17073.jpg)'
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 7.18: Select local file'
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Decide what we want to import from this file. In our example, we selected the
    two classes we want to import – **Book** and **Film** – from the following modal:'
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.19: Select object to import'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_7.19_B17073.jpg)'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 7.19: Select object to import'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
- en: As you can see in the previous screenshot, Pimcore shows us the list of all
    the objects that we can import, related to the file we have uploaded. So, let's
    select what we want to import. Once we have decided, just click on **Apply**,
    and Pimcore will do the rest.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
- en: 'At this point in the chapter, we have seen how to install a bundle, how to
    manage users and roles, and also how we transfer our work between various Pimcore
    installations. We have done all these activities from the web admin interface
    that Pimcore makes available to us. But there is also another way to be able to
    make changes to Pimcore, without having to go through the administration page:
    using the Pimcore console tool.'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
- en: Using the Pimcore Console
  id: totrans-232
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we will get a little familiar with the Pimcore console, a powerful
    and useful tool to be able to execute commands without having to access the web
    administration panel.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
- en: The **Pimcore Console** can be described as a command-line interface that allows
    you to install, configure, and maintain your Pimcore using only the terminal.
    The main goal is to provide a tool for the actions that can normally be performed
    through the administrative area.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
- en: 'As Pimcore''s admin interface is so beautiful and easy to use, the natural
    question is: why should you use a command-line interface? There are two main reasons:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
- en: '**The keyboard is faster than the mouse**: For advanced users, typing a command
    can be an order of magnitude faster than pressing a button in a web browser.'
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Scripting**: You can put several commands in a text file and have it run
    automatically.'
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using a console instead of using the web interface is much faster because it
    eliminates all the dead time for loading the page and all its components. The
    console acts directly on the Pimcore core, making the command execution much faster.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
- en: 'So, the first step to using the console is to get on board the machine where
    Pimcore is running, or inside the Docker container (for more on Docker, see the
    *Installing a bundle* section in this chapter to get commands to execute to access
    the container), and run this command to get a list of available commands:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The output of this command is very long because many commands can be executed
    from the console. Let''s look at the partial output of the command list:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.20: The partial output of the Pimcore console'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_7.20_B17073.jpg)'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 7.20: The partial output of the Pimcore console'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
- en: 'As we can see in the preceding screenshot, the first part of the output contains
    useful information about the options for the Pimcore console, and beneath that
    is the list of the available commands (which for convenience we have cut out in
    *Figure 7.20*). Even if the list is very long, the logic for executing commands
    is always the same: we just have to understand how a command is structured and
    how to execute it.'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一个屏幕截图所示，输出的第一部分包含有关Pimcore控制台选项的有用信息，下面是可用命令的列表（为了方便，我们在*图7.20*中将其截断）。即使列表非常长，执行命令的逻辑始终相同：我们只需要理解命令的结构以及如何执行它。
- en: Inside the `-vvv` in front of the command. If, on the other hand, we don't want
    any information to be output to the console, just add the `-q` parameter before
    the command.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 在命令前面的`-vvv`中。另一方面，如果我们不想将任何信息输出到控制台，只需在命令前添加`-q`参数。
- en: All commands are divided into `cache` namespace, the Pimcore core commands will
    start with the `pimcore` namespace, and so on.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 所有命令都被划分到`cache`命名空间，Pimcore核心命令将以`pimcore`命名空间开头，等等。
- en: 'To see the list of all commands for each namespace, you can run the `list`
    command followed by the namespace. For example, to get all the cache-related commands,
    we run the `list` command followed by the `cache` namespace:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看每个命名空间的所有命令列表，你可以运行`list`命令后跟命名空间。例如，要获取所有与缓存相关的命令，我们运行`list`命令后跟`cache`命名空间：
- en: '[PRE9]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The output will be the list of all available commands to execute on the Pimcore
    cache.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将是可以在Pimcore缓存上执行的所有可用命令列表。
- en: 'Some namespaces are composed of several elements, concatenated by a colon,
    so if we want to identify the list of commands available for Pimcore bundles,
    we must execute the following command:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 一些命名空间由几个元素组成，通过冒号连接，因此如果我们想识别Pimcore捆绑包可用的命令列表，我们必须执行以下命令：
- en: '[PRE10]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Now that we are familiar with the console commands, let's try running a couple
    of commands as an exercise. At the beginning of the chapter, we installed a bundle,
    then we activated it from the web interface. Let's now try to run the same commands
    but using the console.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经熟悉了控制台命令，让我们尝试运行几个命令作为练习。在章节的开始，我们安装了一个捆绑包，然后我们从网页界面激活了它。现在让我们尝试使用控制台运行相同的命令。
- en: 'First of all, we need to identify which bundles are available in our Pimcore
    installation by running the following command:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要通过运行以下命令来识别我们Pimcore安装中可用的捆绑包：
- en: '[PRE11]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The output of this command is shown in the following screenshot:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令的输出显示在下述屏幕截图中：
- en: '![Figure 7.21: The output of the command to get the bundle available in our
    Pimcore installation'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.21：获取我们Pimcore安装中可用的捆绑包的命令输出'
- en: '](img/Figure_7.21_B17073.jpg)'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.21_B17073.jpg)'
- en: 'Figure 7.21: The output of the command to get the bundle available in our Pimcore
    installation'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.21：获取我们Pimcore安装中可用的捆绑包的命令输出
- en: 'As we can see from this screenshot, the bundle we installed at the beginning
    of the chapter is enabled. Now let''s try to disable it by running the following
    command:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 如此屏幕截图所示，我们在章节开始时安装的捆绑包是启用的。现在让我们尝试通过运行以下命令来禁用它：
- en: '[PRE12]'
  id: totrans-261
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'As we can see, at the bottom of the command we have added as a parameter the
    name of the bundle we want to act on: `NumberSequenceGeneratorBundle`.'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，我们在命令底部添加了作为参数的捆绑包名称，即我们想要操作的`NumberSequenceGeneratorBundle`。
- en: 'We now execute the command again:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在再次执行命令：
- en: '[PRE13]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The output will now look like this:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 输出现在看起来是这样的：
- en: '![Figure 7.22: The output of the command to get the bundle available in our
    Pimcore installation'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.22：获取我们Pimcore安装中可用的捆绑包的命令输出'
- en: '](img/Figure_7.22_B17073.jpg)'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.22_B17073.jpg)'
- en: 'Figure 7.22: The output of the command to get the bundle available in our Pimcore
    installation'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.22：获取我们Pimcore安装中可用的捆绑包的命令输出
- en: As we can see, the bundle is now completely uninstalled.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，捆绑包现在已经被完全卸载。
- en: So, we saw how simple it is to execute a command using the Pimcore console.
    The other thing that makes the console very useful is in the execution of scheduled
    scripts, in which it is possible to execute several commands in sequence. For
    example, you can write a script that cleans up the cache and the mail logs, and
    have this script run every morning, for example, through a scheduler, such as
    **crontab** on **Unix systems**.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们看到了如何简单地在Pimcore控制台中执行命令。控制台非常有用的另一个原因是执行计划脚本，其中可以按顺序执行多个命令。例如，你可以编写一个清理缓存和邮件日志的脚本，并通过调度程序，例如**Unix系统**上的**crontab**，每天早上运行此脚本。
- en: We leave you the freedom to try other commands, to become familiar with the
    Pimcore console, and to understand its potential.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 我们留给您尝试其他命令的自由，熟悉Pimcore控制台，并理解其潜力。
- en: Summary
  id: totrans-272
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned how it is possible to enhance Pimcore features through
    the use of bundles, and how they can easily be installed and managed.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何通过使用包来增强Pimcore的功能，以及它们如何容易被安装和管理。
- en: We learned how to organize the site's users and their permissions, to limit
    the functionality of the site in the administration and content management sections,
    and how to create and configure perspectives, as well as associating them with
    users or roles.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 我们学习了如何组织网站的用户及其权限，限制网站在管理和内容管理部分的功能，以及如何创建和配置视角，并将它们与用户或角色关联起来。
- en: We also learned how to import and export the settings of our Pimcore installation
    to other environments.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还学会了如何将我们的Pimcore安装的设置导入和导出到其他环境。
- en: Finally, we learned how to use the Pimcore console, a powerful and useful tool
    to be able to execute commands, without having to access the web administration
    panel.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们学习了如何使用Pimcore控制台，这是一个强大且有用的工具，可以执行命令，而无需访问网络管理面板。
- en: All these new skills acquired while reading this chapter will allow us to configure
    our site in the best way, to achieve the aim of creating a site that satisfies
    all our needs, and even a little of our pleasures.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 在阅读本章的过程中，我们获得的所有新技能将使我们能够以最佳方式配置我们的网站，实现创建一个满足我们所有需求，甚至一点点满足我们乐趣的网站的目标。
- en: Now that we have become familiar with all the tools that Pimcore offers us,
    it is time to get our hands dirty. After this chapter, we will begin to put into
    practice everything we have seen in the previous chapters, with the aim of creating
    a site, with blogs, static pages, and a products catalog. For this, in the next
    chapter, we begin by creating custom CMS pages.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经熟悉了Pimcore提供的所有工具，是时候动手实践了。在本章之后，我们将开始将之前章节中看到的一切付诸实践，目标是创建一个包含博客、静态页面和产品目录的网站。为此，在下一章中，我们将首先创建自定义CMS页面。
