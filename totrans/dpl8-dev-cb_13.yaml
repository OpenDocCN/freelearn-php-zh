- en: The Drupal CLI
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Drupal CLI
- en: 'There are two command-line tools for Drupal 8: **Drupal Console** and **Drush**.
    In this chapter, we will discuss how they make working with Drupal easier by covering
    the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Drupal 8 有两个命令行工具：**Drupal Console** 和 **Drush**。在本章中，我们将通过以下菜谱来讨论它们如何通过简化与
    Drupal 的工作来使工作变得更轻松：
- en: Rebuilding cache in Drupal Console or Drush
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Drupal Console 或 Drush 中重建缓存
- en: Using Drush to interact with the database
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Drush 与数据库交互
- en: Debugging Drupal using Drupal Console
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Drupal Console 调试 Drupal
- en: Scaffolding code through Drupal Console
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过 Drupal Console 生成代码框架
- en: Making a Drush command
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建 Drush 命令
- en: Making a Drupal Console command
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建 Drupal Console 命令
- en: Introduction
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: In the previous chapters of this book, there have been recipes that provide
    ways of using command-line tools to simplify working with Drupal. There are two
    contributed projects that provide Drupal with a command-line interface experience.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的前几章中，有一些菜谱提供了使用命令行工具简化 Drupal 工作的方法。有两个贡献项目为 Drupal 提供了命令行界面体验。
- en: First, there is Drush. Drush was first created for Drupal 4.7 and has become
    an integral tool used for day-to-day Drupal operations. However, with Drupal 8
    and its integration with Symfony, there came Drupal Console. Drupal Console is
    a Symfony Console-based application that allows it to reuse more components and
    integrate more easily with contributed modules.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，是 Drush。Drush 首次为 Drupal 4.7 创建，并已成为用于日常 Drupal 操作的必备工具。然而，随着 Drupal 8 及其与
    Symfony 的集成，出现了 Drupal Console。Drupal Console 是基于 Symfony Console 的应用程序，这使得它能够重用更多组件，并更容易与贡献模块集成。
- en: This chapter contains recipes that will highlight operations that can be simplified
    using Drush or Console. By the end of this chapter, you will be able to work with
    your Drupal sites through the command line.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本章包含了一些菜谱，将突出使用 Drush 或 Console 可以简化的操作。在本章结束时，您将能够通过命令行与您的 Drupal 网站进行交互。
- en: At the time of writing this book, Drush was still the primary tool of choice
    for Drupal 8; however, Drupal Console is earning more market share. Drupal Console
    is rapidly being developed. Due to this rapid development, the commands will still
    exist, but the output may differ.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本书时，Drush 仍然是 Drupal 8 的首选主要工具；然而，Drupal Console 正在赢得更多的市场份额。Drupal Console
    正在快速发展。由于这种快速发展，命令将仍然存在，但输出可能不同。
- en: 'Both Drush and Drupal Console support global installation, but both projects
    are migrating to per-project installation using Composer. To get started, refer
    to the following installation guides for each tool for up-to-date installation
    information:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Drush 和 Drupal Console 都支持全局安装，但这两个项目都在迁移到使用 Composer 的按项目安装。要开始，请参考以下每个工具的安装指南以获取最新的安装信息：
- en: '**Drush**: [http://docs.drush.org/en/master/install/](http://docs.drush.org/en/master/install/)'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Drush**：[http://docs.drush.org/en/master/install/](http://docs.drush.org/en/master/install/)'
- en: '**Drupal Console**: [https://docs.drupalconsole.com/en/getting/project.html](https://docs.drupalconsole.com/en/getting/project.html)'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Drupal Console**：[https://docs.drupalconsole.com/en/getting/project.html](https://docs.drupalconsole.com/en/getting/project.html)'
- en: Rebuilding cache in Drupal Console or Drush
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Drupal Console 或 Drush 中重建缓存
- en: Drupal utilizes caching to store plugin definitions, routes, and so on. When
    you add a new plugin definition or a new route, you need to rebuild Drupal's cache
    for it to be recognized.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Drupal 利用缓存来存储插件定义、路由等。当您添加新的插件定义或新的路由时，您需要重建 Drupal 的缓存，以便它被识别。
- en: Rebuilding the cache over the command line is also more performant than using
    the user interface since it does not use web server resources to execute the cache
    rebuild.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 通过命令行重建缓存比使用用户界面更高效，因为它不会使用 web 服务器资源来执行缓存重建。
- en: In this recipe, we will walk you through using both Drush and Drupal Console
    to clear various cache bins in Drupal. It is important to know how to clear specific
    cache bins so that you do not need to rebuild everything, if possible.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将向您展示如何使用 Drush 和 Drupal Console 清除 Drupal 中的各种缓存区。了解如何清除特定的缓存区非常重要，这样在可能的情况下，您就不需要重建一切。
- en: How to do it…
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Open a terminal and navigate to an installed Drupal directory.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端并导航到已安装的 Drupal 目录。
- en: 'We use the `cache-rebuild` command in Drush to rebuild all of Drupal''s caches,
    including routes:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们在 Drush 中使用 `cache-rebuild` 命令来重建 Drupal 的所有缓存，包括路由：
- en: '[PRE0]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'In Drupal Console, we use the `cache:rebuild` command to clear specific cache
    bins. The input uses autocomplete to help specify a specific cache bin to clear.
    In this example, we clear the render cache:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Drupal Console 中，我们使用 `cache:rebuild` 命令来清除特定的缓存区。输入使用自动完成来帮助指定要清除的特定缓存区。在这个例子中，我们清除渲染缓存：
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'If we only need to rebuild our routes in Drupal, we can use the `router:rebuild`
    command in Console. This will keep render, discovery, and other caches, but expose
    new routes:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们只需要在 Drupal 中重建我们的路由，我们可以在控制台中使用 `router:rebuild` 命令。这将保持渲染、发现和其他缓存，但会暴露新的路由：
- en: '[PRE2]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Drush provides `twig-compile` to rebuild templates. Passing the verbose option
    displays templates being compiled:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Drush 提供了 `twig-compile` 来重建模板。传递详细选项将显示正在编译的模板：
- en: '[PRE3]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: How it works…
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Both Drush and Drupal Console will load files from the Drupal installation and
    bootstrap the application. This allows the commands to invoke functions and methods
    found in Drupal.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: Drush 和 Drupal Console 都会从 Drupal 安装中加载文件并引导应用程序。这使得命令可以调用 Drupal 中找到的函数和方法。
- en: For Drush 8.x, Drush does not implement the dependency injection container and
    still needs to rely on procedural functions in Drupal.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Drush 8.x，Drush 没有实现依赖注入容器，仍然需要依赖于 Drupal 的过程函数。
- en: Drupal Console, however, harnesses the dependency injection container, allowing
    it to reuse Drupal's container and services.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，Drupal Console 利用依赖注入容器，允许它重用 Drupal 的容器和服务。
- en: The *Making a Drush command* and *Making a Drupal Console command* recipes will
    describe the differences in more detail.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '*创建 Drush 命令* 和 *创建 Drupal Console 命令* 的配方将更详细地描述这些差异。'
- en: See also
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参见
- en: The Drush documentation at [http://docs.drush.org/en/master/](http://docs.drush.org/en/master/)
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Drush 文档位于 [http://docs.drush.org/en/master/](http://docs.drush.org/en/master/)
- en: The Drupal Console documentation at [https://docs.drupalconsole.com/](https://docs.drupalconsole.com/)
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Drupal Console 文档位于 [https://docs.drupalconsole.com/](https://docs.drupalconsole.com/)
- en: The Drush command cheat sheet at [https://drushcommands.com/](https://drushcommands.com/)
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Drush 命令速查表位于 [https://drushcommands.com/](https://drushcommands.com/)
- en: The Drupal Console command cheat sheet at [http://drupalconsole.com/cheatsheet/](http://drupalconsole.com/cheatsheet/)
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Drupal Console 命令速查表位于 [http://drupalconsole.com/cheatsheet/](http://drupalconsole.com/cheatsheet/)
- en: Using Drush to interact with the database
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Drush 与数据库交互
- en: When working with any application that utilizes a database, there are times
    when you will need to export a database and import it elsewhere. Most often, you
    would do this with a production site to work on it locally. This way, you can
    create a new configuration that can be exported and pushed to production, as discussed
    in [*Chapter 9*](b2659986-a8dc-4503-a043-6071ab7b6722.xhtml), *Configuration Management
    – Deploying in Drupal 8*.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 当与任何使用数据库的应用程序一起工作时，有时您需要导出数据库并将其导入其他地方。通常，您会这样做以将生产站点上的内容本地化。这样，您可以创建一个可以导出并推送到生产的配置，如在第
    [*第9章*](b2659986-a8dc-4503-a043-6071ab7b6722.xhtml) 中讨论的，*配置管理 – 在 Drupal 8 中部署*。
- en: In this recipe, we will export a database dump from a production site in order
    to set up the local development. The database dump will be imported over the command
    line and sanitized. We will then execute an SQL query through Drush to verify
    sanitization.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个配方中，我们将从生产站点导出数据库转储以设置本地开发。数据库转储将通过命令行导入并清理。然后，我们将通过 Drush 执行 SQL 查询以验证清理。
- en: Getting ready
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: Drush has the ability to use site aliases. Site aliases are configuration items
    that allow you to interact with a remote Drupal site. In this recipe, we will
    use the following alias to interact with a fictional remote site to show how a
    typical workflow will go to fetch a remote database.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: Drush 有能力使用站点别名。站点别名是配置项，允许您与远程 Drupal 站点交互。在这个配方中，我们将使用以下别名与一个虚构的远程站点交互，以展示典型的流程是如何获取远程数据库的。
- en: 'Note that you do not need to use a Drush alias to download the database dump
    created in the recipe; you can use any method you are familiar with (manually
    from the command line with `mysqldump` or `phpMyAdmin`):'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，您不需要使用 Drush 别名来下载配方中创建的数据库转储；您可以使用您熟悉的方法（手动从命令行使用 `mysqldump` 或 `phpMyAdmin`）：
- en: '[PRE4]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Read the Drush documentation for more information on site aliases at [http://docs.drush.org/en/master/usage/#site-aliases](http://docs.drush.org/en/master/usage/#site-aliases).
    Site aliases allow you to interact with remote Drupal installations.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 有关站点别名的更多信息，请参阅 Drush 文档 [http://docs.drush.org/en/master/usage/#site-aliases](http://docs.drush.org/en/master/usage/#site-aliases)。站点别名允许您与远程
    Drupal 安装交互。
- en: We will also assume that the local development site has not yet been configured
    to connect it to the database.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还假设本地开发站点尚未配置以连接到数据库。
- en: How to do it...
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'We will use the `sql-dump` command to export the database into a file. The
    command returns the output that needs to be redirected to a file:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将使用 `sql-dump` 命令将数据库导出到文件。该命令返回需要重定向到文件的输出：
- en: '[PRE5]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Navigate to your local Drupal site's directory and copy `sites/default/default.settings.php`
    to `sites/default/settings.php`.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到你的本地 Drupal 网站目录，并将 `sites/default/default.settings.php` 复制到 `sites/default/settings.php`。
- en: 'Edit the new `settings.php` file and add a database configuration array at
    the end of the file; this will be the database used by Drupal:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑新的 `settings.php` 文件，并在文件末尾添加一个数据库配置数组；这将用于 Drupal 的数据库：
- en: '[PRE6]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Using the `sql-cli` command, we can import the database dump that we created:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `sql-cli` 命令，我们可以导入我们创建的数据库导出：
- en: '[PRE7]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The `sql-sanitize` command allows you to obfuscate user emails and passwords
    in the database:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`sql-sanitize` 命令允许你在数据库中混淆用户电子邮件和密码：'
- en: '[PRE8]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'To verify that our information is imported sanitized, we will use the `sql-query`
    command to run a query against the database:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了验证我们的信息已导入并清理，我们将使用 `sql-query` 命令对数据库运行查询：
- en: '[PRE9]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: How it works...
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: When working with Drush, we have the ability to use Drush aliases. A Drush alias
    contains a configuration that allows the tool to connect to a remote server and
    interact with that server's installation of Drush.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用 Drush 时，我们有使用 Drush 别名的功能。Drush 别名包含一个配置，允许工具连接到远程服务器并与该服务器的 Drush 安装交互。
- en: You need to have Drush installed on your remote server in order to use a site
    alias for it.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用站点别名，你需要在远程服务器上安装 Drush。
- en: The `sql-dump` command executes the proper dump command for the database driver,
    which is typically MySQL and the `mysqldump` command. It streams to the terminal
    and must be piped to a destination. When piped to a local SQL file, we can import
    it and execute the create commands to import our database schema and data.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '`sql-dump` 命令执行数据库驱动程序的适当导出命令，通常是 MySQL 和 `mysqldump` 命令。它流到终端，必须管道到目的地。当管道到本地
    SQL 文件时，我们可以导入它并执行创建命令以导入我们的数据库模式和数据。'
- en: The `sql-dump` command supports a `--result-file` option; however, that saves
    the file relative to the Drupal installation.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '`sql-dump` 命令支持 `--result-file` 选项；然而，它会将文件保存到 Drupal 安装的相关位置。'
- en: With the `sql-cli` command, we will be able to execute SQL commands to the database
    through Drush. This allows us to redirect the file contents to the `sql-cli` command
    and run the set of SQL commands. With the data imported, the `sql-sanitize` command
    replaces usernames and passwords.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `sql-cli` 命令，我们将能够通过 Drush 执行数据库的 SQL 命令。这允许我们将文件内容重定向到 `sql-cli` 命令并运行 SQL
    命令集。数据导入后，`sql-sanitize` 命令将替换用户名和密码。
- en: Finally, the `sql-query` command allows us to pass an SQL command directly to
    the database and return its results. In our recipe, we will query the `users_field_data`
    to verify that we imported our users and that emails have been sanitized.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，`sql-query` 命令允许我们直接将 SQL 命令传递到数据库并返回其结果。在我们的配方中，我们将查询 `users_field_data`
    以验证我们已导入用户并且电子邮件已被清理。
- en: There's more…
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更多内容...
- en: Working with Drupal over the command line simplifies working with the database.
    We will explore this in more detail in the following sections.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 通过命令行与 Drupal 交互简化了数据库操作。我们将在以下章节中更详细地探讨这一点。
- en: Using gzip with sql-dump
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 gzip 与 sql-dump
- en: 'Sometimes, databases can be quite large. The `sql-dump` command has a `gzip`
    option that will output the SQL dump using the `gzip` command. In order to run
    the command, you would simply:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，数据库可以相当大。`sql-dump` 命令有一个 `gzip` 选项，它将使用 `gzip` 命令输出 SQL 导出。为了运行该命令，你只需：
- en: '[PRE10]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The end result provides a reduction in the dump file:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 最终结果减少了导出文件的大小：
- en: '[PRE11]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: If you create a gzipped database dump, ensure that you unarchive it before attempting
    an import with the `sql-cli` command.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你创建了一个压缩的数据库导出，确保在尝试使用 `sql-cli` 命令导入之前解压缩它。
- en: Using Console to interact with the database
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用控制台与数据库交互
- en: At the time of writing this book, Console does not provide a command for sanitizing
    the database. The feature is currently documented in this issue; refer to [https://github.com/hechoendrupal/drupal-console/issues/3192](https://github.com/hechoendrupal/drupal-console/issues/3192).
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本书时，控制台不提供清理数据库的命令。该功能目前记录在这个问题中；请参阅 [https://github.com/hechoendrupal/drupal-console/issues/3192](https://github.com/hechoendrupal/drupal-console/issues/3192)。
- en: 'The `database:connect` and `database:client` commands will launch a database
    client. This allows you to be logged into the database''s command-line interface:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '`database:connect`和`database:client`命令将启动数据库客户端。这允许你登录到数据库的命令行界面：'
- en: '[PRE12]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: These commands are similar to the `sql-cli` and `sql-connect` commands from
    Drush. The client command will bring you to the database's command-line tool,
    where connect shows the connection string.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这些命令类似于Drush的`sql-cli`和`sql-connect`命令。客户端命令将带你去数据库的命令行工具，其中connect显示连接字符串。
- en: 'Drupal Console also provides the `database:dump` command. Unlike Drush, this
    will write the database dump for you in the Drupal directory:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: Drupal Console还提供了`database:dump`命令。与Drush不同，这将为你将数据库转储写入Drupal目录：
- en: '[PRE13]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Using Drush to manage users
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Drush管理用户
- en: When you need to add an account to Drupal, you will visit the `People` page
    and manually add a new user. Drush provides the complete user management for Drupal,
    from creation to role assignment, password recovery, and deletion. This workflow
    allows you to create users easily and provides them with a login without having
    to enter your Drupal site.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 当你需要将账户添加到Drupal时，你将访问“人员”页面并手动添加新用户。Drush为Drupal提供完整用户管理，从创建到角色分配、密码恢复和删除。此工作流程允许你轻松创建用户，并为他们提供登录，无需进入你的Drupal网站。
- en: In this recipe, we will create a `staff` role with a `staffmember` user and
    log in as that user through Drush.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将创建一个带有`staffmember`用户的`staff`角色，并通过Drush以该用户身份登录。
- en: How to do it…
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Use the `role-create` command to create a new role labeled `staff`:'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`role-create`命令创建一个标记为`staff`的新角色：
- en: '[PRE14]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Use the `role-lists` command to verify that the role was created in Drupal:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`role-lists`命令验证角色是否已在Drupal中创建：
- en: '[PRE15]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The `user-create` command will create our user:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`user-create`命令将创建我们的用户：'
- en: '[PRE16]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'In order to add the role, we will need to use the `user-add-role` command:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了添加角色，我们需要使用`user-add-role`命令：
- en: '[PRE17]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'We will now log in as the `staffmember` user using the `user-login` command:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在将使用`user-login`命令以`staffmember`用户身份登录：
- en: '[PRE18]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Copy the link and paste it in your browser to log in as that user:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制链接并将其粘贴到浏览器中以登录该用户：
- en: '![](img/b3a686e6-bda2-4ac7-ad43-563d2efd7b06.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/b3a686e6-bda2-4ac7-ad43-563d2efd7b06.png)'
- en: How it works…
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: When you reset a password in Drupal, a special one-time login link is generated.
    The login link is based on a generated hash. The Drush command validates the given
    user, which exists in the Drupal site, and then passes it to the `user_pass_reset_url`
    function from the User module.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在Drupal中重置密码时，将生成一个特殊的单次登录链接。登录链接基于生成的哈希值。Drush命令验证存在于Drupal网站上的给定用户，然后将它传递给用户模块的`user_pass_reset_url`函数。
- en: The URL is made up of the user's ID, the timestamp when the link was generated,
    and a hash based on the user's last login time, link generation, and email. When
    the link is loaded, this hash is rebuilt and verified. For example, if the user
    has logged in since the time it was generated, the link will become invalid.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: URL由用户的ID、生成链接时的时间戳以及基于用户最后登录时间、链接生成和电子邮件的哈希值组成。当链接加载时，此哈希值将被重建并验证。例如，如果用户在生成链接之后登录，链接将变得无效。
- en: When used on a machine that has a web browser installed, Drush will make an
    attempt to launch the link in a web browser for you. The browser option allows
    you to specify which browser should be launched. Additionally, you can use no-browser
    to prevent one from being launched.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 当在已安装网络浏览器的机器上使用时，Drush将尝试在网页浏览器中为你打开链接。浏览器选项允许你指定应启动哪个浏览器。此外，你可以使用no-browser来防止浏览器启动。
- en: There's more…
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更多内容...
- en: The command line offers the ability to simplify user management and user administration.
    Next, we will explore more on this topic in detail.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 命令行提供了简化用户管理和用户管理的能力。接下来，我们将更详细地探讨这个主题。
- en: Advanced user-login use cases
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 高级用户登录用例
- en: The `user-login` command is a useful tool that allows some advanced use cases.
    For instance, you can append a path after the username and be launched to that
    path. You can pass a UID or email instead of a username in order to log in as
    a user.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '`user-login`命令是一个有用的工具，允许一些高级用例。例如，你可以在用户名后附加一个路径并跳转到该路径。你可以传递UID或电子邮件而不是用户名来以用户身份登录。'
- en: You can use the `user-login` to secure your admin user account. In Drupal, the
    user with the identifier of 1 is treated as the root and can bypass all permissions.
    Many times, this is the default maintenance account used to work on the Drupal
    site. Instead of logging in manually, you can set the account to a very robust
    passphrase and use the `user-login` command when you need to access your site.
    With this, the only users who should be able to log in as the administrator account
    are those with access to run the Drush commands on the website.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`user-login`来保护您的管理员用户账户。在Drupal中，标识为1的用户被视为根用户，可以绕过所有权限。很多时候，这是默认的维护账户，用于在Drupal站点上工作。您不必手动登录，可以将账户设置为非常健壮的密码短语，并在需要访问您的站点时使用`user-login`命令。这样，唯一能够以管理员账户登录的用户是那些可以访问在网站上运行Drush命令的用户。
- en: Using Drupal Console
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Drupal Console
- en: Drupal Console also provide commands to interact with users. Although they do
    not allow the creation of users or roles, they provide a basic user management.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: Drupal Console还提供与用户交互的命令。尽管它们不允许创建用户或角色，但它们提供基本的用户管理。
- en: 'The `user:login:url` command will generate a one-time login link for the specified
    user ID. This uses the same methods as the Drush command:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '`user:login:url` 命令将为指定的用户ID生成一个一次性登录链接。这使用与Drush命令相同的方法：'
- en: '[PRE19]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The `user:password:reset` command allows you to reset a user''s password to
    the new provided password. You can provide the user ID and new password as arguments,
    but if missing, the values will be prompted for interactively:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '`user:password:reset` 命令允许您将用户的密码重置为新提供的密码。您可以提供用户ID和新密码作为参数，但如果缺失，将交互式地提示输入：'
- en: '[PRE20]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: The `create:users` command provides an interactive way to generate bulk users,
    which are useful for debugging. However, it cannot create individual users with
    specific passwords like Drush.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '`create:users` 命令提供了一种交互式生成大量用户的方法，这对于调试很有用。然而，它不能像Drush那样创建具有特定密码的单独用户：'
- en: Scaffolding code through Console
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过Console生成代码框架
- en: When Drupal Console was first introduced, one of the biggest highlights was
    its ability to scaffold code. The project has turned into a much larger Drupal
    runner over the command-line interface, but much of its resourcefulness is code
    generation.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 当Drupal Console首次推出时，最大的亮点之一是其生成代码的能力。该项目已经变成一个更大的Drupal运行器，通过命令行界面，但其中大部分的机智在于代码生成。
- en: As you may have noted in the previous chapters and recipes, there can be a few
    mundane tasks and a bit of boilerplate code. Drupal Console enables Drupal developers
    to create various components without having to write all of the boilerplate code.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 如您在前几章和食谱中可能已经注意到的，可能会有一些日常任务和一些样板代码。Drupal Console使Drupal开发者能够创建各种组件，而无需编写所有样板代码。
- en: In [Chapter 10](2f5fe169-0ba6-4746-9586-896f00f0bb28.xhtml), *The Entity API*,
    we covered the creation of a custom entity type. In this recipe, we will automate
    most of that process using Drupal Console to generate our content entity.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第10章](2f5fe169-0ba6-4746-9586-896f00f0bb28.xhtml)《实体API》中，我们介绍了自定义实体类型的创建。在这个食谱中，我们将使用Drupal
    Console自动化大部分过程，以生成我们的内容实体。
- en: Getting ready
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: For this recipe, you will need to have Drupal Console installed. The tool will
    generate everything else for us. You will need to have a Drupal 8 site installed.
    Many of Console's commands will not work (or be listed) unless they can access
    an installed Drupal site. This is because of the way it interacts with Drupal's
    service container.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个食谱，您需要安装Drupal Console。该工具将为我们生成其他所有内容。您需要安装一个Drupal 8站点。许多Console的命令将无法工作（或列出），除非它们可以访问已安装的Drupal站点。这是因为它与Drupal的服务容器交互的方式。
- en: How to do it…
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'From the root of your Drupal site, generate a module with the `generate:module`
    command and follow the interactive process. Use the defaults prompted as well
    as giving it a module name:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从您的Drupal站点的根目录开始，使用`generate:module`命令生成一个模块，并遵循交互式过程。使用提示的默认值，以及给它一个模块名称：
- en: '[PRE21]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Next, we will generate our `content` entity. Specify the module name that will
    provide the entity:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将生成我们的`content`实体。指定将提供实体的模块名称：
- en: '[PRE22]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Install your module using Drupal Console:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Drupal Console安装您的模块：
- en: '[PRE23]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'View Structure and find your Custom content entity settings:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看结构并找到您的自定义内容实体设置：
- en: '![](img/fc4536b3-1e4d-440f-8c35-2a4edfedc896.png)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/fc4536b3-1e4d-440f-8c35-2a4edfedc896.png)'
- en: How it works…
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: One of the biggest features of Console is its ability to reduce the time spent
    by developers to create code for Drupal 8\. Console utilizes the Twig templating
    engine to provide code generation. These Twig templates contain variables and
    logic that are compiled into the end result code.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台最大的特点之一是它能够减少开发者编写Drupal 8代码所需的时间。控制台利用Twig模板引擎提供代码生成。这些Twig模板包含变量和逻辑，它们被编译成最终结果代码。
- en: A set of generator classes receives specific parameters, which are received
    through the appropriate command, and pass them to Twig for rendering. This allows
    Console to easily stay up to date with changes in Drupal core and still provide
    valuable code generation.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 一组生成器类接收特定的参数，这些参数通过适当的命令接收，并将它们传递给Twig进行渲染。这使得控制台能够轻松地与Drupal核心的变化保持同步，同时仍然提供有价值的代码生成。
- en: Making a Drush command
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建Drush命令
- en: Drush provides an API that allows developers to write their own commands. These
    commands can be part of a module and loaded through a Drupal installation, or
    they can be placed in the local user's Drush folder for general purposes.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: Drush提供了一个API，允许开发者编写他们自己的命令。这些命令可以是模块的一部分，通过Drupal安装加载，或者它们可以被放置在本地用户的Drush文件夹中用于一般目的。
- en: Often, contributed modules create commands to automate user interface operations.
    However, creating a custom Drush command can be useful for specific operations.
    In this recipe, we will create a command that loads all the users who have not
    logged in in the last 10 days and resets their password.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，贡献的模块会创建命令来自动化用户界面操作。然而，为特定操作创建自定义Drush命令可能很有用。在这个菜谱中，我们将创建一个命令，该命令加载在过去10天内未登录的所有用户并重置他们的密码。
- en: Getting ready
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: For this recipe, you will need Drush available. We will be creating a command
    in a local user directory.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个菜谱，你需要Drush可用。我们将在本地用户目录中创建一个命令。
- en: How to do it…
  id: totrans-138
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Create a file named `disable_users.drush.inc` in the `~/.drush` folder for
    your user:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的用户`~/.drush`文件夹中创建一个名为`disable_users.drush.inc`的文件：
- en: '[PRE24]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Add the Drush command hook that will allow Drush to discover our commands provided
    by the file:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加Drush命令钩子，该钩子将允许Drush发现我们通过文件提供的命令：
- en: '[PRE25]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Next, we will create the command callback function, which will end up holding
    all of our logic. Since our filename is `disable_users.drush.inc` and our command
    is `disable-users`, the hook turns out to be `drush_disable_users_disable_users`:'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将创建命令回调函数，它将包含所有我们的逻辑。由于我们的文件名是`disable_users.drush.inc`，我们的命令是`disable-users`，所以钩子最终变成了`drush_disable_users_disable_users`：
- en: '[PRE26]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Update the function to create a `DateTime` object, representing 10 days ago.
    We will use this to generate a timestamp for our query:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新函数以创建一个表示10天前的`DateTime`对象。我们将使用它来生成查询的时间戳：
- en: '[PRE27]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Now, we will add our query, which will query all the user entities who have
    a login timestamp greater than 10 days:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将添加我们的查询，该查询将查询所有登录时间戳超过10天的用户实体：
- en: '[PRE28]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Next, we will iterate over the results and mark the user as disabled:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将遍历结果并标记用户为禁用：
- en: '[PRE29]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Drush''s cache will need to be cleared in order to discover your new command:'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了发现你的新命令，Drush的缓存需要被清除：
- en: '[PRE30]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Check whether the command exists:'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查命令是否存在：
- en: '[PRE31]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: How it works…
  id: totrans-155
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Drush works by scanning specific directories for files that follow the `COMMANDFILE.drush.inc`
    pattern. You can think of `COMMANDFILE` for Drush as a representation of a module
    name in Drupal's hook system. When implementing a Drush hook, in the `HOOK_drush`
    format, you will need to replace HOOK with your `COMMANDFILE` name, just as you
    would do in Drupal with a module name.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: Drush通过扫描特定目录以查找遵循`COMMANDFILE.drush.inc`模式的文件来工作。你可以将Drush中的`COMMANDFILE`视为Drupal钩子系统中模块名称的表示。在实现Drush钩子时，以`HOOK_drush`格式，你需要将HOOK替换为你的`COMMANDFILE`名称，就像你在Drupal中使用模块名称一样。
- en: In this recipe, we created a `disable_users.drush.inc` file. This means that
    all hooks and commands in the file need to use `disable_users` for hook invocations.
    Drush uses this to load the `hook_drush_command` hook that returns our command
    information.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们创建了一个`disable_users.drush.inc`文件。这意味着文件中的所有钩子和命令都需要使用`disable_users`进行钩子调用。Drush使用此来加载返回我们命令信息的`hook_drush_command`钩子。
- en: We then provided the functionality of our logic in the `drush_hook_command`
    hook. For this hook, we replaced hook with our `COMMANDFILE` name, which was `disable_users`,
    giving us `drush_disable_users_command`. We replaced command with the command
    that we defined in `hook_drush_command`, which was `disable-users`. We then had
    our final `drush_disable_users_disable_users` hook.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 我们然后在 `drush_hook_command` 钩子中提供了我们逻辑的功能。对于这个钩子，我们将钩子替换为我们的 `COMMANDFILE` 名称，即
    `disable_users`，得到 `drush_disable_users_command`。我们将命令替换为我们在 `hook_drush_command`
    中定义的命令，即 `disable-users`。然后我们有了最终的 `drush_disable_users_disable_users` 钩子。
- en: There's more…
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更多内容…
- en: Drush commands have additional options that can be specified in their definitions.
    We explore their abilities to control the required level of Drupal integration
    for a command.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: Drush命令在其定义中可以指定额外的选项。我们探讨了它们控制命令所需Drupal集成级别的功能。
- en: Specifying the level of Drupal's bootstrap
  id: totrans-161
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 指定Drupal的引导级别
- en: Drush commands have the ability to specify the level of Drupal's bootstrap before
    being executed. Drupal has several bootstrap levels in which only specific parts
    of the system are loaded. By default, a command's bootstrap is at `DRUSH_BOOTSTRAP_DRUPAL_LOGIN`,
    which is at the same level as accessing Drupal over the Web.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: Drush命令在执行前可以指定Drupal引导的级别。Drupal有多个引导级别，其中只有系统的特定部分被加载。默认情况下，命令的引导级别为 `DRUSH_BOOTSTRAP_DRUPAL_LOGIN`，这与通过Web访问Drupal的级别相同。
- en: Commands, depending on their purpose, can choose to avoid bootstrapping Drupal
    at all or only until the database system is loaded. Drush commands that are utilities,
    such as the Git release notes module, provide a Drush command that does not interact
    with Drupal. It specifies a bootstrap of `DRUSH_BOOTSTRAP_DRUSH`, as it only interacts
    with repositories to generate change logs based on Git tags and commits.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 命令根据其目的可以选择完全不引导Drupal或仅引导到数据库系统加载。例如，Git发布说明模块这样的实用程序Drush命令不与Drupal交互。它指定了一个引导级别为
    `DRUSH_BOOTSTRAP_DRUSH`，因为它只与存储库交互，根据Git标签和提交生成变更日志。
- en: See also
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 相关链接
- en: Refer to how to creating custom Drush commands at [http://docs.drush.org/en/master/commands/](http://docs.drush.org/en/master/commands/).
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 参考如何创建自定义Drush命令，请访问 [http://docs.drush.org/en/master/commands/](http://docs.drush.org/en/master/commands/)。
- en: Refer to how to install Drush at [http://docs.drush.org/en/master/install/](http://docs.drush.org/en/master/install/).
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 参考如何安装Drush，请访问 [http://docs.drush.org/en/master/install/](http://docs.drush.org/en/master/install/)。
- en: Refer to the Drush Bootstrap process at [http://docs.drush.org/en/master/bootstrap/](http://docs.drush.org/en/master/bootstrap/).
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 参考Drush引导过程，请访问 [http://docs.drush.org/en/master/bootstrap/](http://docs.drush.org/en/master/bootstrap/)。
- en: Making a Console command
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建控制台命令
- en: Drupal Console makes use of the Symfony Console project and other third-party
    libraries to utilize modern PHP best practices. In doing so, it follows Drupal
    8 practices as well. This allows Console to use namespaces for the command detection
    and interaction with Drupal by reading its class loader.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: Drupal Console利用了Symfony Console项目和其他第三方库，以利用现代PHP的最佳实践。在这个过程中，它遵循Drupal 8的实践。这使得Console能够通过读取其类加载器来使用命名空间进行命令检测和与Drupal的交互。
- en: This allows developers to easily create a Console command by implementing a
    custom class in a module.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 这允许开发者通过在模块中实现自定义类来轻松创建控制台命令。
- en: In this recipe, we will create a command that loads all the users who have not
    logged in in the last 10 days and resets their password. We will generate the
    base of our command using the scaffolding commands.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将创建一个命令，该命令加载过去10天内未登录的所有用户并重置他们的密码。我们将使用脚手架命令生成我们命令的基础。
- en: Getting ready
  id: totrans-172
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: For this recipe, you will need to have Drupal Console installed. The tool will
    generate everything else for us. You will need to have a Drupal 8 site installed.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个菜谱，你需要安装Drupal Console。该工具将为我们生成其他所有内容。你需要安装一个Drupal 8站点。
- en: How to do it…
  id: totrans-174
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作…
- en: Create a new module that will hold your Drupal Console command, such as
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的模块来存放你的 Drupal Console 命令，例如
- en: '`console_commands`:'
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`console_commands`：'
- en: '[PRE32]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Next, we will generate the command''s base files using the `generate:command`
    command. Call it the `disable_users` command:'
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将使用 `generate:command` 命令生成命令的基本文件。将其命名为 `disable_users` 命令：
- en: '[PRE33]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Edit the created `DisableUsersCommand.php` file and remove the boilerplate
    example code from the execute method:'
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑创建的 `DisableUsersCommand.php` 文件，并从执行方法中删除样板示例代码：
- en: '[PRE34]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Update the function to create a `DateTime` object, representing 10 days ago.
    We will use this to generate a timestamp for our query:'
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新函数以创建一个表示10天前的`DateTime`对象。我们将使用它来生成查询的时间戳：
- en: '[PRE35]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Now, we will add our query, which will query all the user entities who have
    a login timestamp greater than 10 days:'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将添加我们的查询，该查询将查询所有登录时间戳大于10天的用户实体：
- en: '[PRE36]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Next, we will iterate over the results and mark the user as disabled:'
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将遍历结果并将用户标记为禁用：
- en: '[PRE37]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Enable the module in order to access the following command:'
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用模块以访问以下命令：
- en: '[PRE38]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: How it works…
  id: totrans-190
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Drupal Console provides integration with modules using namespace discovery methods.
    When Console is run in a Drupal installation, it will discover all the available
    projects. It then discovers any files in the `\Drupal\{ a module }\Command` namespace
    that implements `\Drupal\Console\Command\Command`.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: Drupal Console通过使用命名空间发现方法与模块集成。当控制台在Drupal安装中运行时，它将发现所有可用的项目。然后，它将发现`\Drupal\{
    a module }\Command`命名空间中的任何文件，这些文件实现了`\Drupal\Console\Command\Command`接口。
- en: Drupal Console will rescan the Drupal directory for available commands every
    time it is invoked, as it does not keep a cache of available commands.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 每次调用Drupal Console时，它都会重新扫描Drupal目录以查找可用的命令，因为它不会保留可用命令的缓存。
- en: There's more…
  id: totrans-193
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更多内容...
- en: Drupal Console provides a much more intuitive developer experience as it follows
    Drupal core's coding formats. We will touch on how Console can be used to create
    entities.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: Drupal Console提供了更直观的开发者体验，因为它遵循Drupal核心的编码格式。我们将讨论如何使用控制台创建实体。
- en: Using a Console command to create entities
  id: totrans-195
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用控制台命令创建实体
- en: A benefit of Console is its ability to utilize Symfony Console's question helpers
    for a robust interactive experience. Drupal Commerce utilizes Console to provide
    a `commerce:create:store` command to generate stores. The purpose of the command
    is to simplify the creation of a specific entity.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台的一个优点是它能够利用Symfony Console的提问助手，提供强大的交互体验。Drupal Commerce使用控制台提供`commerce:create:store`命令来生成商店。该命令的目的是简化特定实体的创建。
- en: The `\Drupal\commerce_store\Command\CreateStoreCommand` class overrides the
    default interact method that is executed to prompt data from the user. It will
    prompt users to enter the store's name, email, country, and currency.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '`\Drupal\commerce_store\Command\CreateStoreCommand`类覆盖了默认的交互方法，该方法用于从用户那里提示数据。它将提示用户输入商店的名称、电子邮件、国家/地区和货币。'
- en: Developers can implement similar commands to give advanced users a simpler way
    to work with modules and configuration.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 开发者可以实现类似的命令，为高级用户提供更简单的方式来处理模块和配置。
- en: See also
  id: totrans-199
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参见
- en: Refer to how to create custom commands at [https://docs.drupalconsole.com/en/extending/creating-custom-commands.html](https://docs.drupalconsole.com/en/extending/creating-custom-commands.html)
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请参阅如何创建自定义命令的说明：[https://docs.drupalconsole.com/en/extending/creating-custom-commands.html](https://docs.drupalconsole.com/en/extending/creating-custom-commands.html)
