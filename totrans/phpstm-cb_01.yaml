- en: Chapter 1. Cooking with PhpStorm
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章. 使用 PhpStorm 烹饪
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍以下食谱：
- en: Showing/hiding views
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 显示/隐藏视图
- en: Customizing a view
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自定义视图
- en: Accessing any project file
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问任何项目文件
- en: Maximizing views and editors
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最大化视图和编辑器
- en: Going back to the previous editor
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 返回上一个编辑器
- en: Going back to the previous edit location
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 返回上一个编辑位置
- en: Linking views to editors
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将视图链接到编辑器
- en: Creating a key binding
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个键绑定
- en: Creating a bookmark
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建书签
- en: Restoring deleted resources
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 恢复已删除的资源
- en: Customizing with PhpStorm
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 PhpStorm 进行自定义
- en: Adding an include path
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加一个包含路径
- en: Excluding unwanted directories from the index
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从索引中排除不需要的目录
- en: Using code completion
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用代码补全
- en: Introduction
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: Finally, your hard work will produce some results—the amount of sweat that you
    had to perspire to code in PHP will now decrease. The reason behind your being
    unable to love PHP as a programming language was never trivial. Handling PHP without
    a strong IDE is no less tough than driving at night with the headlights off. It
    is always said that PHP is a loosely-typed language (God bless those who say this!),
    yet PHP errors are nightmarish—with all of those mysterious 500 errors, 403 errors,
    and the like.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你的辛勤工作将产生一些结果——你现在编写 PHP 所需的汗水将减少。你无法爱上 PHP 作为编程语言的原因从来都不是微不足道的。没有强大的 IDE
    处理 PHP 的工作并不比在关闭车灯的情况下夜间驾驶轻松。人们常说 PHP 是一种弱类型语言（上帝保佑那些这么说的人！），然而 PHP 错误是噩梦般的——所有那些神秘的
    500 错误、403 错误等等。
- en: But let us not forget that the error code definitely has a meaning. The Apache
    server is unable to interpret PHP as such, so it gives you an indication that
    probably the homework is incomplete and that you have to look into your PHP code
    and find the exact error yourself. You are left adrift in a leaky boat in a stormy
    ocean... sad!
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 但我们不要忘记，错误代码肯定有它的意义。Apache 服务器无法将 PHP 解释为这样的，因此它给你一个提示，可能作业是不完整的，你必须查看你的 PHP
    代码并自己找到确切的错误。你就像在暴风雨中一艘漏水的船上漂泊... 很悲伤！
- en: 'To be able to come out of this stormy ocean with a leaky boat, you definitely
    need some aid: a patch, maybe some better material in the form of a good editor
    with some really smart intelligence; such intelligence will not only inform you
    about the error, but also help you a great deal in solving the problem. In short,
    you need a smart IDE, such as PhpStorm, to code in PHP just as the other creatures
    in the world of programming do.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 为了能够带着一艘漏水的船从这场暴风雨中出来，你肯定需要一些帮助：一个补丁，也许是一些更好的材料，比如一个带有真正智能的编辑器；这样的智能不仅会告诉你错误，还会在解决问题上给你很大的帮助。简而言之，你需要一个智能
    IDE，比如 PhpStorm，来像编程世界中的其他生物一样编写 PHP。
- en: PhpStorm understands that programmers are not robots, and thus it leaves no
    stone unturned in making coding easier for them—be it the beautiful syntax highlighting,
    code formatting, language injection, error inspection, bookmarking lines of code,
    and all possible permutations and combinations of the thoughts that are currently
    coming to your mind. Yes, PhpStorm has a solution to all your coding woes, and
    it ensures that you can love PHP.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: PhpStorm 理解程序员不是机器人，因此它不遗余力地使编码对他们来说更容易——无论是美丽的语法高亮、代码格式化、语言注入、错误检查、标记代码行，还是所有可能的思维组合。是的，PhpStorm
    有解决你所有编码问题的方案，并确保你可以爱上 PHP。
- en: PhpStorm is created and maintained by **JetBrains**, an organization with many
    similar products in other languages as well. The people at JetBrains respect every
    community of programmers, and hence they provide IDEs to many programming languages,
    including Java. PhpStorm is built using the Java programming language and has
    been carefully designed to be able to support almost all the common and uncommon
    tools that directly or indirectly provide assistance in programming.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: PhpStorm 由 **JetBrains** 创建和维护，这是一个在许多其他语言中也有许多类似产品的组织。JetBrains 的人尊重每一个程序员社区，因此他们为包括
    Java 在内的许多编程语言提供了 IDE。PhpStorm 使用 Java 编程语言构建，并经过精心设计，能够支持几乎所有直接或间接提供编程辅助的常见和不常见工具。
- en: Tip
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: PhpStorm is an intelligent code editor that provides smart code completion,
    syntax highlighting, extended code formatting configuration, on-the-fly error
    checking, code folding, support for language mixtures, and so on.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: PhpStorm 是一个智能代码编辑器，它提供智能代码补全、语法高亮、扩展代码格式配置、即时错误检查、代码折叠、支持语言混合等功能。
- en: Showing/hiding views
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 显示/隐藏视图
- en: A **view**, as the name suggests, is a visual area in PhpStorm that enables
    you, the PHP programmer, to see the various aspects and/or perspectives of the
    code.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**视图**，正如其名所示，是 PhpStorm 中一个视觉区域，它使您，PHP 程序员，能够看到代码的各个方面和/或视角。'
- en: 'This includes the following:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这包括以下内容：
- en: The structure of the code you toiled for
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您辛勤劳作后的代码结构
- en: Your favorites (or quick view shortcuts)
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您的收藏夹（或快速查看快捷键）
- en: The future plans in the form of a TODO list
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TODO 列表形式的未来计划
- en: A bird's-eye view of your entire PHP project
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您整个 PHP 项目的鸟瞰图
- en: How the code changes in the local system and/or the subversioning system
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码在本地系统以及/或版本控制系统中的更改
- en: How to do it...
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Perform the following steps:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤：
- en: 'Views in PhpStorm can be shown/hidden via the following keyboard shortcuts
    and some navigation menu items as well as via some mouse clicks:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: PhpStorm 中的视图可以通过以下键盘快捷键以及一些导航菜单项以及一些鼠标点击来显示/隐藏：
- en: '| Views | Shortcuts |'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 视图 | 快捷键 |'
- en: '| --- | --- |'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Terminal view | *Alt* + *F12* |'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 终端视图 | *Alt* + *F12* |'
- en: '| TODO view | *Alt* + *6* |'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| TODO 视图 | *Alt* + *6* |'
- en: '| Project view | *Alt* + *1* |'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 项目视图 | *Alt* + *1* |'
- en: '| Favorites view | *Alt* + *2* |'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 收藏夹视图 | *Alt* + *2* |'
- en: '| Structure view | *Alt* + *7* |'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 结构视图 | *Alt* + *7* |'
- en: The best shortcut to access these features is located in the bottom-left corner
    in PhpStorm and is depicted in the following screenshot:![How to do it...](img/3878OT_01_01.jpg)
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问这些功能的最佳快捷键位于 PhpStorm 的左下角，如下截图所示：![如何操作...](img/3878OT_01_01.jpg)
- en: How it works...
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'Let us serve the views one at a time so that they can be served hot:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们一次服务一个视图，以便它们可以热腾腾地上桌：
- en: '**The Terminal view**: PhpStorm ensures that you don''t leave it for any reason
    whatsoever. In case you wish to do some command-line activity, such as running
    some shell commands, setting some cron jobs or whatever, there is this command
    terminal available inside PhpStorm. Please remember the keyboard shortcut *Alt*
    + *F12*.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**终端视图**：PhpStorm 确保您不会因为任何原因而离开。如果您想进行一些命令行活动，例如运行一些 shell 命令、设置一些 cron 作业或任何其他操作，PhpStorm
    内部有这个命令行终端。请记住键盘快捷键 *Alt* + *F12*。'
- en: '**The TODO view**: To live the life of a programmer, you need to have multiple
    core processors to be time-bound; infinite cloud storage volume so that whatever
    is said to you is recorded somewhere eternally; and 32 GB of RAM so that no context
    switch pushes the active process out of the memory onto the disk. In short, you
    need to be Jarvis (Iron Man series). Wake up! You are still a human being with
    a natural tendency to start dreaming and hence stray from the main topic and forget
    the main course.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**TODO 视图**：要过程序员的日常生活，您需要多个核心处理器来限制时间；无限的云存储空间，以便无论您听到什么都会被永远记录下来；以及 32 GB
    的 RAM，以便没有上下文切换将活动进程推离内存到磁盘上。简而言之，您需要成为贾维斯（钢铁侠系列）。醒来！您仍然是一个有自然倾向开始做梦并因此偏离主题、忘记主要课程的人类。'
- en: A TODO view in the PhpStorm IDE is a feature with which you can record your
    future plans to make changes in the code. This not only helps you (in most cases)
    to remember your plans but also to search for them later when required. A TODO
    feature is just a sticky note that has literally occupied all the space on your
    workbench. *Alt* + *6* in your sticky note, please.
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: PhpStorm IDE 中的 TODO 视图是一个功能，您可以记录您未来计划对代码进行更改。这不仅帮助您（在大多数情况下）记住您的计划，而且当需要时可以搜索它们。TODO
    功能就像一张实际上占据了您工作台所有空间的便利贴。请使用 *Alt* + *6* 在您的便利贴上。
- en: '**The Project view**: A project is analogous to a mechanic''s workshop, where
    great things are made in a not-so-great-looking way. Your project contains all
    sorts of commented-out code, sample logics, test logics, and failed algorithms,
    which definitely make you smile at the end of the day when you turn off your computer
    and go home. In PhpStorm, the Project view is a hierarchical view that shows you
    the exact hierarchy your code has and what files are located at which node in
    the tree. In order to show the Project view, use *Alt* + *1*.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**项目视图**：一个项目类似于机械师的工作室，在那里以不太引人注目的方式制造出伟大的事物。您的项目包含各种注释掉的代码、示例逻辑、测试逻辑和失败的算法，这确实会在您关闭电脑、下班回家时让您微笑。在
    PhpStorm 中，项目视图是一个层次视图，显示您的代码的确切层次结构以及哪些文件位于树中的哪个节点。为了显示项目视图，请使用 *Alt* + *1*。'
- en: '**The Favorites view**: A favorite is an item or a list that you need quite
    frequently, so PhpStorm has provided a feature with which you can very easily
    look up those items. By default, PhpStorm provides three favorites: the bookmarks
    in your code, the debugger breakpoints in your code that you might have set, and
    a list containing other favorite items with the same name as you create your project
    in PhpStorm. The keyboard shortcut is *Alt* + *2*.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**收藏夹视图**：收藏夹是您需要相当频繁的项目或列表，因此PhpStorm提供了一种功能，可以非常容易地查找这些项目。默认情况下，PhpStorm提供三个收藏夹：您的代码中的书签、您可能设置的代码调试器断点以及包含与您在PhpStorm中创建项目时相同名称的其他收藏夹项的列表。键盘快捷键是*Alt*
    + *2*。'
- en: '**The Structure view**: What is more relieving to the mind and the soul than
    to see the entire code in a consolidated format? The PhpStorm IDE provides a Structure
    view for code in such a way that all the methods are shown in the form of a list.
    This enables you to have greater control over the members of any class that you
    created and prevents namespace collision and method duplication. In order to open
    the Structure view, all you need to remember is the keyboard shortcut *Alt* +
    *7*.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**结构视图**：还有什么比看到整个代码以统一格式更令人心情舒畅和灵魂得到慰藉的呢？PhpStorm IDE以这种方式提供代码的结构视图，使得所有方法都显示为列表形式。这使得您能够更好地控制您创建的任何类的成员，并防止命名空间冲突和方法重复。为了打开结构视图，您只需要记住键盘快捷键*Alt*
    + *7*。'
- en: '**The Database view**: Although programming a database is one of the most daunting
    tasks in the world of programming, PhpStorm eases off this pressure by adding
    a Database view to the system. It lets you view the database tables, the procedures
    stored in it, the data stored in it, and a number of general tasks related to
    databases, which would otherwise have required a dedicated application of its
    own. The database views can be shown or hidden by simple mouse clicks, as shown
    in the following recipes. You have the freedom to choose the database server of
    your choice—it could be a server running on your local system or something running
    over in the cloud over an IP address and protected by a username and password.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据库视图**：尽管在编程世界中编写数据库是其中最令人畏惧的任务之一，但PhpStorm通过向系统中添加数据库视图来减轻这种压力。它允许您查看数据库表、存储在其中的存储过程、存储在其中的数据以及与数据库相关的许多一般性任务，否则可能需要其自己的专用应用程序。数据库视图可以通过简单的鼠标点击显示或隐藏，如下面的食谱所示。您有自由选择您喜欢的数据库服务器——它可以是运行在您本地系统上的服务器，也可以是运行在云上并通过IP地址和用户名密码保护的服务器。'
- en: Customizing a view
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自定义视图
- en: There are times in the life of a software engineer when nothing seems to be
    going right, and hence the only thought that comes to mind is to change everything.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在软件工程师的生活中，有时似乎一切都不顺利，因此唯一出现在脑海中的想法就是改变一切。
- en: PhpStorm takes care of that time period as well and provides customization to
    the views—you can customize the way views appear.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: PhpStorm同样负责这个时间段，并提供视图的自定义——您可以自定义视图的显示方式。
- en: How to do it...
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'There are two roads that can take you to the world of customization:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 有两条路可以带您进入定制的世界：
- en: The **Settings** button available in the top-right corner of the individual
    view, as shown in the following screenshot:![How to do it...](img/3878OT_01_19.jpg)
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如下截图所示，位于单个视图右上角的**设置**按钮![如何做到这一点...](img/3878OT_01_19.jpg)
- en: The other very easy option and the most familiar friend of yours is the right-click
    context menu on the title bar of the toolbar.
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 另一个非常简单且你最熟悉的选择是工具栏标题栏上的右键单击上下文菜单。
- en: How it works...
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'In general, there are some context menu options available to all the views,
    such as the orientation modes: floating, docked, pinned, and split. The views
    can be in:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，所有视图都可用一些上下文菜单选项，例如方向模式：浮动、停靠、固定和分割。视图可以处于以下状态：
- en: '**Floating Mode**: The views are free to be located anywhere on the screen'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**浮动模式**：视图可以自由地位于屏幕上的任何位置'
- en: '**Docked Mode**: The views do not disappear automatically on losing focus'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**停靠模式**：视图在失去焦点时不会自动消失'
- en: '**Pinned Mode**: The view stays at one location until changed'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**固定模式**：视图保持在同一位置，直到被更改'
- en: '**Split Mode**: You can have multiple views shown at a time'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分割模式**：您可以同时显示多个视图'
- en: The **Show View as Tabs** option lets you filter or group your tasks based on
    various criteria, such as project-based, currently-being-edited-based, and scope-based.
    The **Move** menu allows you to move the view to the top, right, left, or bottom
    depending upon the current orientation of the view. There are options to stretch
    or squeeze the view of a window to increase / decrease the size of the view window.
    The keyboard shortcut is *Ctrl* + *Shift* + *Up* / *Ctrl* + *Shift* + *Down* to
    increase/decrease the size.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '**将视图显示为标签页**：此选项允许您根据各种标准过滤或分组您的任务，例如基于项目、基于当前正在编辑的以及基于范围。**移动**菜单允许您根据视图的当前方向将视图移动到顶部、右侧、左侧或底部。有选项可以拉伸或压缩窗口视图，以增加/减少视图窗口的大小。键盘快捷键是*Ctrl*
    + *Shift* + *向上* / *Ctrl* + *Shift* + *向下*以增加/减少大小。'
- en: 'There are individual options available for the views. Stay awake to explore
    customizations of individual view windows, as shown in the following list:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 视图有单独的选项可用。保持清醒，探索以下列表中显示的各个视图窗口的定制选项：
- en: '**Terminal View**: More terminal windows can be opened depending on your requirements
    by clicking on the **+** symbol provided with the Terminal view. If you feel that
    you need to close the active terminal window, you can very easily do so by clicking
    on the **-** symbol on the left-hand side. The commands available for the underlying
    operating system work fine in this terminal; for example, Linux users can type
    *Ctrl* + *D* to exit the terminal, and Windows users can type in their favorite
    command `dir` in this terminal.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**终端视图**：根据您的需求，可以通过点击终端视图提供的**+**符号打开更多终端窗口。如果您觉得需要关闭活动终端窗口，可以非常容易地通过点击左侧的**-**符号来实现。此终端中可用的命令在底层操作系统上运行良好；例如，Linux
    用户可以在此终端中输入 *Ctrl* + *D* 以退出终端，而 Windows 用户可以在此终端中输入他们喜欢的命令 `dir`。'
- en: '**TODO View**: The special menu options available for this view are listed
    here:'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**TODO 视图**：此视图可用的特殊菜单选项在此列出：'
- en: '**Select Next Tab**: This shows the next available view inside the TODO view.'
  id: totrans-69
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**选择下一个标签页**：这显示了 TODO 视图内的下一个可用视图。'
- en: '**Select Previous Tab**: This is used to switch back to the previous view.'
  id: totrans-70
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**选择前一个标签页**：此选项用于切换回前一个视图。'
- en: '**Show List of Tabs**: This shows all views. This provides a dropdown to select
    from the list of available views inside the TODO view, as shown in the following
    screenshot:'
  id: totrans-71
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**显示标签页列表**：这显示了所有视图。这提供了一个下拉菜单，可以从 TODO 视图内可用的视图列表中进行选择，如以下截图所示：'
- en: '![How it works...](img/3878OT_01_02.jpg)'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何工作...](img/3878OT_01_02.jpg)'
- en: '**Project View**: If you are in the **Project View** window, you again deserve
    more than the general options available. The options are described here. Stay
    tuned and read on.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**项目视图**：如果您在 **项目视图** 窗口中，您应得的选项比一般选项更多。选项在此描述。保持关注并继续阅读。'
- en: '**Select Next View**: Use this option to go to the next view tab.'
  id: totrans-74
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**选择下一个视图**：使用此选项可转到下一个视图标签。'
- en: '**Select Previous View**; Use this option to go to the previous view tab.'
  id: totrans-75
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**选择前一个视图**；使用此选项可转到前一个视图标签。'
- en: '**Show List of Views**: Use this option to select from the list of available
    views for this window.'
  id: totrans-76
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**显示视图列表**：使用此选项可从此窗口的可选视图列表中进行选择。'
- en: '**Show Members**: If you put a tick mark here, you will be able to see the
    member functions and variables in the file or code.'
  id: totrans-77
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**显示成员**：如果您在此处勾选，您将能够看到文件或代码中的成员函数和变量。'
- en: '**Autoscroll to Source**: This option enables a very useful feature. If you
    select a file here, the same file will be automatically opened in the editor.'
  id: totrans-78
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自动滚动到源代码**：此选项启用了一个非常有用的功能。如果您在此处选择一个文件，该文件将在编辑器中自动打开。'
- en: '**Autoscroll from Source**: This is a feature similar to the immediately preceding
    option. If you select a file in the editor, the Project view will automatically
    show the same file selected in the Project view.'
  id: totrans-79
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**从源代码自动滚动**：这是一个与前面选项类似的功能。如果您在编辑器中选择一个文件，项目视图将自动显示在项目视图中选择的相同文件。'
- en: '**Sort by Type**: This feature, though seemingly trivial, might prove to be
    very useful in organizing the files and folders in the project currently being
    worked upon.'
  id: totrans-80
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**按类型排序**：虽然这个功能看似微不足道，但它可能在组织当前正在工作的项目中的文件和文件夹时非常有用。'
- en: '**Folders Always on Top**: You can use this feature to let the folders bubble
    upwards, and the files are automatically shown under the list of folders.'
  id: totrans-81
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文件夹始终在顶部**：您可以使用此功能让文件夹冒泡上升，文件将自动显示在文件夹列表下方。'
- en: 'The following screenshot shows how the Project view looks:'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下截图显示了项目视图的外观：
- en: '![How it works...](img/3878OT_01_20.jpg)'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何工作...](img/3878OT_01_20.jpg)'
- en: '**Favorites View**: This view section provides three special features:'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**收藏夹视图**: 这个视图部分提供了三个特殊功能：'
- en: '**Show Members**: This feature shows the list of members in the selected favorite'
  id: totrans-85
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**显示成员**: 这个功能显示所选收藏夹中的成员列表'
- en: '**Autoscroll from Source**: This is similar to the Project view'
  id: totrans-86
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**从源自动滚动**: 这与项目视图类似'
- en: '**Autoscroll to Source**: This is similar to the Project view'
  id: totrans-87
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自动滚动到源**: 这与项目视图类似'
- en: 'The **Favorites** view is as shown in the following screenshot:'
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**收藏夹**视图如下所示：'
- en: '![How it works...](img/3878OT_01_03.jpg)'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何工作...](img/3878OT_01_03.jpg)'
- en: '**Structure View**: All you enthusiastic programmers out there should make
    a habit of using this feature intensively because this is more of an engineering
    practice than a PHP principle. You should always keep this feature handy, as it
    definitely is your savior at those times when you feel lost in your hard-labored
    project. So check your seatbelt, and get ready for this informative ride:'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**结构视图**: 所有热情的程序员都应该养成使用这个功能的高强度习惯，因为这是一个更偏向于工程实践而不是PHP原则的功能。你应该始终将这个功能放在手边，因为当你感觉在辛苦的项目中迷失时，它绝对是你救星。所以检查你的安全带，准备开始这次信息之旅：'
- en: '**Sort by Visibilit**y: Use this feature to sort your files and folders according
    to the visibility of the member functions and variables.'
  id: totrans-91
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**按可见性排序**: 使用此功能根据成员函数和变量的可见性对文件和文件夹进行排序。'
- en: '**Sort Alphabetically**: Friends, remember that this feature will be useful
    and helpful only in cases where naming conventions have been followed by the rule
    book. This feature enables the sorting of member functions and variables alphabetically.
    A descriptive name for the feature, isn''t it?'
  id: totrans-92
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**按字母顺序排序**: 朋友们，请记住，这个功能只有在遵循规则书中的命名约定的情况下才会有用和有帮助。这个功能可以按字母顺序对成员函数和变量进行排序。这不是一个描述性的功能名称吗？'
- en: '**Show Includes**: This feature shows the files included or required programmatically
    through PHP code as well.'
  id: totrans-93
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**显示包含的文件**: 这个功能显示通过PHP代码程序化包含或要求的文件。'
- en: '**Show Fields**: This feature show the fields in the class/file.'
  id: totrans-94
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**显示字段**: 这个功能显示类/文件中的字段。'
- en: '**Show Constants**: This feature shows the constant values in the class/file.'
  id: totrans-95
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**显示常量**: 这个功能显示类/文件中的常量值。'
- en: '**Show Inherited**: This feature shows those files/classes that have an inheritance
    relationship as well.'
  id: totrans-96
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**显示继承的**: 这个功能显示具有继承关系的文件/类。'
- en: '**Show Toolbar**: This feature shows the discussed features in the form of
    quick access buttons, as shown in the following screenshot:![How it works...](img/3878OT_01_04.jpg)'
  id: totrans-97
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**显示工具栏**: 这个功能以快速访问按钮的形式显示所讨论的功能，如下所示：![如何工作...](img/3878OT_01_04.jpg)'
- en: '**Database View**: Most PHP programmers might ask—why do I need to have the
    Database view in PhpStorm? There should have been something like an SQLStorm for
    SQL databases.'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据库视图**: 大多数PHP程序员可能会问——为什么我需要在PhpStorm中拥有数据库视图？应该有一个类似于SQLStorm的SQL数据库工具。'
- en: 'The reason is related to usability. SQL inside PhpStorm is added just to make
    everything accessible under one roof and stop the programmer from switching back
    and forth between PhpStorm and SQLStorm. The right-click context menu options
    available for this feature are:'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 原因与可用性相关。在PhpStorm中添加SQL只是为了使一切都在一个屋檐下，并阻止程序员在PhpStorm和SQLStorm之间来回切换。此功能可用的右键单击上下文菜单选项包括：
- en: '**Flatten Schemas**: This feature show the database schema in a rather flattened
    way rather than in a tree structure.'
  id: totrans-100
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**扁平化模式**: 这个功能以一种相当扁平的方式显示数据库模式，而不是以树状结构显示。'
- en: '**Group Tables by Type**: This feature groups the tables by their type. This
    helps in searching for a table in the database and enhances the viewing of the
    tables.'
  id: totrans-101
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**按类型分组表**: 这个功能按类型对表进行分组。这有助于在数据库中搜索表，并增强了表的查看。'
- en: '**Sort Columns**: This feature sorts columns by name for the database selected.'
  id: totrans-102
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**按名称排序列**: 这个功能按名称对所选数据库的列进行排序。'
- en: 'The **Database** view options are as shown in the following screenshot:'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**数据库**视图选项如下所示：'
- en: '![How it works...](img/3878OT_01_05.jpg)'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何工作...](img/3878OT_01_05.jpg)'
- en: Accessing any project file
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 访问任何项目文件
- en: Software engineering, at times, becomes more about adjustments than creation.
    There are practical cases where the developer has no option but to switch to some
    other project created earlier and now wants to use some feature (without infringing
    the copyrights and without running the gauntlet of legal action).
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 软件工程有时更多地是关于调整而不是创造。在有些情况下，开发者别无选择，只能切换到之前创建的某个项目，并希望使用某些功能（不侵犯版权，也不进行法律诉讼）。
- en: Getting ready
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: If you need to access any project file in PhpStorm, a few decisions can be made.
    Accessing the project is more important when you handle multiple projects at a
    time.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要在PhpStorm中访问任何项目文件，可以做出一些决定。当您同时处理多个项目时，访问项目更为重要。
- en: How to do it...
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: If you vaguely remember some of the content that was in the file, you can do
    a project-wide search to find the target file. Does it make you think of the old
    story of searching for a needle in a haystack?
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您对文件中的一些内容有模糊的记忆，您可以对项目进行全局搜索以找到目标文件。这让你想起了寻找干草堆里针的老故事吗？
- en: You can open a folder where your project is supposedly located, as shown in
    the following screenshot. You can initiate the process by navigating to **File**
    | **Open**.![How to do it...](img/3878OT_01_06.jpg)
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以打开一个文件夹，您的项目可能位于其中，如下面的截图所示。您可以通过导航到**文件** | **打开**来启动此过程。![如何操作...](img/3878OT_01_06.jpg)
- en: How it works…
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Don't worry even if the folder is not a PhpStorm project. PhpStorm is smart
    enough to manage that. Once opened, the project can be searched for the desired
    file/resource. PhpStorm will remember the folder as a project, and once indexed,
    the files of that folder can be accessed just as your current project files.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 即使文件夹不是PhpStorm项目，也不要担心。PhpStorm足够智能，可以管理这一点。一旦打开，就可以在项目中搜索所需的文件/资源。PhpStorm会将文件夹记住为项目，一旦索引，该文件夹的文件就可以像当前项目文件一样访问。
- en: Tip
  id: totrans-114
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: 'You have a hotkey at your disposal for the purpose: Try *Ctrl* + *Shift* +
    *N* in times of need, and type in some letters to get a hint list of filenames
    matching your typed string.'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 您有一个热键可供使用：在需要的时候尝试*Ctrl* + *Shift* + *N*，并输入一些字母以获取匹配您输入字符串的文件名提示列表。
- en: Maximizing views and editors
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最大化视图和编辑器
- en: Although the IT industry is flourishing, and candidates from all across the
    globe are making a living by IT jobs as programmers, companies continue to be
    misers in the area of providing infrastructure and maintaining proper ergonomics
    for the programmers. A small monitor is one such ergonomic infrastructure problem.
    PhpStorm comes to the rescue.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然IT行业蓬勃发展，来自全球各地的候选人通过IT工作作为程序员谋生，但公司在提供基础设施和维护程序员适当的人体工程学方面仍然很吝啬。一个小型显示器就是这种人体工程学基础设施问题之一。PhpStorm来拯救。
- en: There is a feature to maximize a view or editor at will. The views can be maximized
    (when in the docked mode) by the resize option available in the right-click context
    menu or in the settings menu. For easier handling, the mouse drag can also be
    handy. Just click and drag the required window to resize.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 可以随意最大化视图或编辑器。视图可以通过右键单击上下文菜单中的调整大小选项或设置菜单中的选项来最大化（当处于停靠模式时）。为了更方便地操作，鼠标拖动也可以派上用场。只需单击并拖动所需的窗口即可调整大小。
- en: Good practice says that an editor should be the only object that should be kept
    visible at all times. The other views should be opened on demand and closed as
    soon as the task is done. The undocked mode is meant for this purpose. The view
    appears on demand and disappears as soon as another view or editor is clicked
    on.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 良好的实践表明，编辑器应该是始终保持可见的唯一对象。其他视图应根据需要打开，并在任务完成后关闭。未停靠模式就是为了这个目的。视图根据需要出现，并在点击另一个视图或编辑器时消失。
- en: There is an excellent feature available with PhpStorm that lets you concentrate
    solely on your coding by providing a fullscreen mode, which shows you only the
    PhpStorm window. Yes, you got it right. Only the PhpStorm window is visible, and
    no frame border or operating system items are visible.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: PhpStorm提供了一个出色的功能，通过提供全屏模式，让您可以专注于编码，只显示PhpStorm窗口。是的，您理解得正确。只有PhpStorm窗口可见，没有框架边框或操作系统项目可见。
- en: How to do it...
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'To turn on this feature, you need to perform the following steps:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 要启用此功能，您需要执行以下步骤：
- en: Go to **View** | **Enter Full Screen**.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到**视图** | **进入全屏**。
- en: To turn off, go to **View** | **Exit Full Screen**. Wasn't that easy? Indeed.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要关闭全屏，请转到**视图** | **退出全屏**。这难道不难吗？确实如此。
- en: An even better feature provided by PhpStorm is the presentation mode. In this,
    you will only view the editor window with the fonts enlarged. All other features
    will be available, but only on demand. This is the best viewing option that can
    be provided by an IDE to work with small or single monitors. Although the motive
    behind this was to help the programmer demonstrate some coding to an audience,
    the usage stated in this section is also useful. To turn on this feature, go to
    **View** | **Enter Presentation Mode**, and to turn off, go to **View** | **Exit
    Presentation Mode**.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: PhpStorm 提供的另一个更好的功能是演示模式。在这个模式下，你将只看到字体放大的编辑器窗口。所有其他功能都将可用，但仅按需使用。这是 IDE 提供的最佳查看选项，适用于小型或单显示器。尽管背后的动机是帮助程序员向观众展示一些编码，但本节中所述的使用方法也很实用。要打开此功能，请转到
    **视图** | **进入演示模式**，要关闭，请转到 **视图** | **退出演示模式**。
- en: Going back to the previous editor
  id: totrans-126
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 返回上一个编辑器
- en: It is strongly advised that humans only perform one task at a time. This is
    said because (most) humans cannot multitask, and hence if they attempt to do so,
    they make mistakes. The same is the case with you, dear.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 强烈建议人类一次只执行一项任务。这是因为（大多数）人类不能多任务处理，因此如果他们尝试这样做，就会犯错误。对你来说也是一样。
- en: Getting ready
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In the event that you have to work on a project that demands you modify a number
    of files at once, there is a big chance that you might forget which editor you
    came from and where to go if the current file being scanned is not the correct
    copy.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你必须处理一个需要你同时修改多个文件的项目，那么有很大可能性你会忘记你来自哪个编辑器，以及如果当前正在扫描的文件不是正确的副本，你应该去哪里。
- en: How to do it...
  id: totrans-130
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'In PhpStorm, you can go back to the previous editor / next editor / choose
    from the list of open editors by remembering (and obviously using) keymaps. To
    do so, perform the following steps:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在 PhpStorm 中，你可以通过记住（并且显然使用）快捷键来返回上一个编辑器、切换到下一个编辑器或从打开的编辑器列表中选择。为此，请执行以下步骤：
- en: Use *Alt* + *Left* for previous editor.
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 *Alt* + *左键* 切换到上一个编辑器。
- en: If you want to move to the next editor, use *Alt* + *Right*.
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你想切换到下一个编辑器，请使用 *Alt* + *右键*。
- en: There's more…
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容...
- en: 'A facility that allows you to move to any part of the code or any class in
    the open project is available in PhpStorm. This facility enables you to access
    at random any part of any class or any part of any file that is open in the currently
    open project, as shown in the following screenshot:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: PhpStorm 提供了一个允许你移动到代码的任何部分或任何打开项目中的任何类的功能。这个功能使你能够随机访问当前打开项目中任何类的任何部分或任何打开文件的任何部分，如下面的截图所示：
- en: '![There''s more…](img/3878OT_01_07.jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![更多内容…](img/3878OT_01_07.jpg)'
- en: And, as usual, there are some customizations involved in the behavior of PhpStorm.
    There is a filter symbol. Clicking on the filter symbol, quite implicitly, allows
    you to filter the search criteria. You can tell PhpStorm not to look in a certain
    file or resource type by simply unchecking the unwanted file or resource type.
    Refer to the preceding screenshot for clarity.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 并且，像往常一样，在 PhpStorm 的行为中涉及一些自定义。有一个过滤器符号。点击过滤器符号，相当隐晦地，允许你过滤搜索条件。你可以通过简单地取消选中不需要的文件或资源类型来告诉
    PhpStorm 不要在某个文件或资源类型中查找。请参考前面的截图以获得清晰度。
- en: To enable random access, every item needs to be added to the index. You can
    now give credit to the PhpStorm development team for developing this powerful
    indexing system.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 为了启用随机访问，每个项目都需要添加到索引中。现在你可以为 PhpStorm 开发团队开发这个强大的索引系统表示赞赏。
- en: Going back to the previous edit location
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 返回上一个编辑位置
- en: You can not only switch between the currently opened editors, but also navigate
    to the last file you made changes to.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 你不仅可以切换到当前打开的编辑器之间，还可以导航到最后一次修改的文件。
- en: Getting ready
  id: totrans-141
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: This is particularly helpful in all those cases where you seem to be lost in
    the load of work that your manager has assigned to you and who wants it to be
    done in a very short span of time. All programmers in the world have many of the
    same woes and worries.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 这在那些你似乎在经理分配给你的工作负担中迷失，并且希望在非常短的时间内完成的情况中尤其有用。世界上所有的程序员都有许多相同的烦恼和担忧。
- en: How to do it...
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'In order to access the previous edit location(s), use *Ctrl* + *Shift* + *E*,
    and select the desired file from the list shown in the pop up. It is pretty easy
    to understand how it works. Let''s see a screenshot explaining how to go to the
    previous editor:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 为了访问上一个编辑位置，请使用 *Ctrl* + *Shift* + *E*，并从弹出的列表中选择所需的文件。理解其工作原理相当简单。让我们看看以下截图，解释如何返回上一个编辑器：
- en: '![How to do it...](img/3878OT_01_08.jpg)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作...](img/3878OT_01_08.jpg)'
- en: Linking views to editors
  id: totrans-146
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将视图链接到编辑器
- en: Sometimes, the name is self-explanatory. Sometimes, the sentences have a hint.
    If you got the hint, you must have understood that this feature provided by PhpStorm
    is intended to show you exactly where in the project heirarchy the code is. If
    you did not get the hint, don't worry—you've now got it since you've read the
    text. Please stay tuned for more tasty recipes.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候，名称本身就一目了然。有时候，句子中会有提示。如果你得到了提示，那么你一定已经理解了PhpStorm提供的这个功能是为了显示代码在项目层次结构中的确切位置。如果你没有得到提示，别担心——既然你读了这段文字，你现在就明白了。请继续关注更多美味的食谱。
- en: PhpStorm provides two ways of linking between view and editor. PhpStorm can
    highlight the location of the file you are currently editing in the project tree
    hierarchy shown in the Project view.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: PhpStorm提供了两种在视图和编辑器之间链接的方式。PhpStorm可以在项目视图中显示的项目树层次结构中突出显示你当前正在编辑的文件的位置。
- en: How to do it...
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'PhpStorm can also open the file in the editor as soon as you select it in the
    Project view. Perform the following steps:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在项目视图中选择文件时，PhpStorm也可以立即在编辑器中打开该文件。执行以下步骤：
- en: To use this feature, you are advised to read the explanation of *Autoscroll
    to Source* given in the *Customizing a view* recipe of this chapter.
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要使用此功能，建议你阅读本章“自定义视图”食谱中提供的 *自动滚动到源* 的说明。
- en: This linking system also applies to the class members (the functions and variables)
    as well. PhpStorm can autoscroll (or link) between the editor and the view and
    hence ease some of the pressure of development from your shoulders. So brotherly!
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这种链接系统也适用于类成员（函数和变量）。PhpStorm可以在编辑器和视图之间自动滚动（或链接），从而减轻你肩上的一些开发压力。真兄弟！
- en: Creating a key binding
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建键绑定
- en: For all those people who find key bindings difficult to visualize, key bindings
    mean keyboard shortcuts, and they are the gear changers in a programmer's life.
    When you are concentrating hard on the project that you have to complete within
    a stipulated amount of time, you can bet anything in this world for a way or a
    means by which your speed of working gets affected positively. Bet on keyboard
    shortcuts. You will be on the winning side.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 对于那些觉得键绑定难以可视化的所有人，键绑定意味着键盘快捷键，它们是程序员生活中的变速器。当你全神贯注于必须在规定时间内完成的项目时，你可以在这个世界上打赌任何一种方式或手段，以影响你的工作效率。赌键盘快捷键吧。你将站在胜利的一方。
- en: PhpStorm, again, specifies some default **keymap** shortcuts. Don't worry friends!
    You can very easily customize the keyboard shortcuts to suit your taste.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: PhpStorm 再次指定了一些默认的 **快捷键映射**。朋友们，别担心！你可以非常容易地自定义键盘快捷键以适应你的口味。
- en: How to do it...
  id: totrans-156
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Use the keyboard shortcut *Ctrl* + *Alt* + *S* or choose from the **File** menu.
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用键盘快捷键 *Ctrl* + *Alt* + *S* 或从 **文件** 菜单中选择。
- en: Go to the **Settings** dialog box and type `keymap` in the search box provided
    at the top and PhpStorm will highlight the target for you.
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往 **设置** 对话框，在顶部提供的搜索框中输入 `keymap`，PhpStorm 将为你突出显示目标。
- en: Choose from a list of the default keymap settings, as shown in the following
    screenshot, but better late than never. Before jumping to change the shortcuts,
    understand how shortcuts work in PhpStorm. The keymap shortcuts provided by PhpStorm
    by default are not directly editable, so in order to customize them, you need
    to make a copy of the default settings. Sounds confusing? The PhpStorm wizard
    creates the copy for you. Your mind prompts a question—where are my settings saved
    then? Here comes the answer—under `*nix` based systems.![How to do it...](img/3878OT_01_09.jpg)
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从以下截图所示的默认快捷键设置列表中选择，但迟做总比不做好。在跳转到更改快捷键之前，了解在PhpStorm中快捷键是如何工作的。PhpStorm默认提供的快捷键映射不能直接编辑，因此为了自定义它们，你需要复制默认设置。听起来很复杂？PhpStorm向导会为你创建副本。你的大脑会提出一个问题——我的设置在哪里保存？答案是——在基于
    `*nix` 的系统下。![如何操作...](img/3878OT_01_09.jpg)
- en: How it works...
  id: totrans-160
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: PhpStorm uses the directory `~/.WebIde70/config/keymaps` to store all the keymap
    schemes that you create. Still not feeling confident? Here are the tricks of the
    trade.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: PhpStorm 使用目录 `~/.WebIde70/config/keymaps` 来存储你创建的所有快捷键映射方案。仍然不自信？这里有一些行业技巧。
- en: PhpStorm will copy it for you. It will ask you for a name for this keymap scheme.
    The name you specify will be respected by PhpStorm. A careful observation would
    easily tell you that PhpStorm will always make you remember that your current
    selection is based on the setting provided by PhpStorm. After you have made the
    selection to copy and modify, all you have to do is to press the **Apply** button.
    Bingo! You just created a copy of one default setting, and now you are all set
    to customize PhpStorm behavior your own way.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: PhpStorm会为您复制。它会要求您为此键映射方案命名。您指定的名称将被PhpStorm尊重。仔细观察后，您会发现PhpStorm会始终让您记住您的当前选择是基于PhpStorm提供的设置。在您完成选择并复制修改后，您所要做的就是按下**应用**按钮。恭喜！您刚刚创建了一个默认设置的副本，现在您可以按照自己的方式自定义PhpStorm的行为。
- en: To verify that, you can go to `~/.WebIde70/config/keymaps` and see that PhpStorm
    just created a new XML file for you that contains the settings you created via
    the PhpStorm GUI. Behind every successful frontend, there is an equally strong
    backend!
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 为了验证这一点，您可以转到`~/.WebIde70/config/keymaps`并查看PhpStorm刚刚为您创建了一个新的XML文件，其中包含您通过PhpStorm
    GUI创建的设置。每一个成功的客户端背后，都有一个同样强大的后端！
- en: Tip
  id: totrans-164
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: If you think that you can speak XML, you can create some settings via the GUI
    and then view the contents of the XML file to observe how the settings are saved.
    You can later add items directly to the XML file. You naughty hacker! Control
    your smile!
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您认为自己可以说XML，您可以通过GUI创建一些设置，然后查看XML文件的内容以观察设置是如何保存的。您可以在稍后直接将项目添加到XML文件中。你这个淘气的黑客！控制你的笑容！
- en: Creating a bookmark
  id: totrans-166
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建书签
- en: Bookmarks are great. A bookmark lets you put a flag somewhere in your code so
    that you have a shortcut to access that code.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 书签非常实用。书签允许您在代码的某个位置放置一个标记，以便您可以通过快捷方式访问该代码。
- en: A bookmark in PhpStorm has the same meaning as that in a book where a reader
    puts some indication in the form of some piece of paper, by turning the page corner,
    or by any means through which the reader can access the page directly.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: PhpStorm中的书签与书中读者通过放置一些纸张、翻页角或任何读者可以直接访问页面的方式所做的标记具有相同的意义。
- en: How to do it...
  id: totrans-169
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: PhpStorm bookmarks are created with ease. The add bookmark option can be had
    by going to **Navigate** | **Bookmarks**.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: PhpStorm的书签创建起来非常简单。可以通过转到**导航** | **书签**来获得添加书签的选项。
- en: 'The three options available are explained here:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 这里解释了可用的三个选项：
- en: '**Toggle Bookmark**: This feature enables you to create a bookmark at some
    specified line of code if it does not exist and to delete a bookmark from some
    line of code if it does.'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**切换书签**：此功能允许您在代码的某些指定行创建书签（如果不存在的话），以及从某些代码行删除书签。'
- en: '**Toggle Bookmark with Mnemonic**: This feature enables you to toggle a bookmark
    with the added ability to be able to access that bookmark using keyboard shortcuts.'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用记忆法切换书签**：此功能允许您使用记忆法切换书签，并附加了使用键盘快捷键访问该书签的能力。'
- en: Suppose you choose the alphanumeric **0**, as shown in the following screenshot,
    you will be able to access that bookmark by using *Ctrl* + *0*
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 假设您选择的是字母数字**0**，如图所示，您将能够通过使用*Ctrl* + *0*来访问该书签。
- en: '![How to do it...](img/3878OT_01_10.jpg)'
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作...](img/3878OT_01_10.jpg)'
- en: '**Show Bookmarks**: This is rather a simple feature. It simply lets you view
    all the bookmarks you created for the project you are working on.'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '**显示书签**：这是一个相当简单的功能。它只是让您查看您为正在工作的项目创建的所有书签。'
- en: Tip
  id: totrans-177
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Quick access to bookmark**'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '**快速访问书签**'
- en: In order to have quick access to the bookmark feature with the mnemonic feature,
    all the hard work that you have to do is remember the keyboard shortcut *Ctrl*
    + *F11*. The rest will be taken care of by PhpStorm automatically.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 为了能够通过记忆法快速访问书签功能，您所要做的所有艰苦工作就是记住键盘快捷键*Ctrl* + *F11*。其余的将由PhpStorm自动处理。
- en: Restoring deleted resources
  id: totrans-180
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 恢复已删除的资源
- en: To err is human. To recover from the error cleanly is PhpStorm. It is perfectly
    okay for you to commit mistakes. You could be thinking of your ex or your reporting
    manager's atrocities on you to make you work overtime (while he himself keeps
    tinkering with social networking sites), and you happen to accidentally delete
    some lines from your code. You have no idea what you did, and with a heavy heart,
    you went home at the close of day. The very next morning, when you are about to
    start work, you suddenly realize that you deleted some lines of code and you don't
    remember which! Is this something like salt on burnt skin? Need ointment? Breathe
    and thank PhpStorm's team of developers who knew that you are a human prone to
    making drastic mistakes like these.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 人非圣贤，孰能无过。从错误中干净利落地恢复是PhpStorm的强项。你犯错误是完全可以接受的。你可能正在想你的前任或你的汇报经理对你施加的恶行，让你加班（而他自己却在社交媒体上忙得不亦乐乎），你不小心删除了一些代码行。你不知道自己做了什么，带着沉重的心情，你下班回家了。第二天早上，当你准备开始工作时，你突然意识到你删除了一些代码行，但你记不清楚是哪些了！这难道就像是烧伤后的盐吗？需要药膏吗？深呼吸，感谢PhpStorm的开发团队，他们知道你是一个容易犯这类极端错误的凡人。
- en: Getting ready
  id: totrans-182
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: You can recover the lines deleted from your code. Yes, you got that right. There
    is the history feature in PhpStorm that is one of the best in its class in terms
    of the visual assistance it provides in finding the change that has occurred to
    your code—be it local, that is, you were the culprit behind the notorious code
    change, be it from the team, that is, someone else's code ruined yours. PhpStorm
    helps you point out the mistake or error and helps you in fixing things quickly.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以恢复从你的代码中删除的行。是的，你理解得没错。PhpStorm中有一个历史功能，它在提供视觉辅助以查找对代码发生的更改方面是同类产品中最好的之一——无论是本地更改，即你是臭名昭著的代码更改的罪魁祸首，还是团队更改，即别人的代码破坏了你的代码。PhpStorm帮助你指出错误或错误，并帮助你快速解决问题。
- en: How to do it...
  id: totrans-184
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'PhpStorm keeps a snapshot of every code that you write. It updates it every
    time you save. So, if you need to undelete a piece of code, you need to dive into
    the history using the times of editing the files as anchors. As soon as you change
    to another window it automatically saves the document…wasn''t that cool. Perform
    the following steps:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: PhpStorm会保存你写的每一行代码的快照。每次你保存时，它都会更新。所以，如果你想恢复一段代码，你需要通过使用编辑文件的时光作为锚点，深入到历史中。只要你切换到另一个窗口，它就会自动保存文档……这难道不是很酷吗。执行以下步骤：
- en: The **Local History** option is available on the mouse right-click context menu.
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**本地历史**选项在鼠标右键单击上下文菜单中可用。'
- en: As soon as you click on or select a particular time, PhpStorm shows you the
    difference between that file from history and your current file, as shown in the
    following screenshot:![How to do it...](img/3878OT_01_11.jpg)
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你点击或选择一个特定的时间，PhpStorm就会显示历史文件与当前文件之间的差异，如下面的截图所示：![如何操作...](img/3878OT_01_11.jpg)
- en: You can revert to (this) particular item by selecting the **Revert** option
    from the right-click context menu. Done!
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以通过从右键单击上下文菜单中选择**还原**选项来恢复到（这个）特定的项目。完成！
- en: You can also merge the code line by line by double-clicking on the greater-than
    sign (**>>**).
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你也可以通过双击大于号（**>>**）逐行合并代码。
- en: How it works...
  id: totrans-190
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'If you deleted a file from PhpStorm, knowingly or unknowingly, you can use
    the same feature to recover your deleted files. You need to select the target
    folder or directory from the Project view, access the right-click context menu,
    and select the **Local History** | **Show History** option. PhpStorm will not
    only show you all the files that you deleted very easily, but also in a hierarchical
    way, as shown in the following screenshot:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你从PhpStorm中删除了一个文件，无论是故意还是无意，你都可以使用相同的特性来恢复你的删除文件。你需要从项目视图中选择目标文件夹或目录，访问右键单击上下文菜单，并选择**本地历史**
    | **显示历史**选项。PhpStorm不仅会非常容易地显示你删除的所有文件，而且还会以分层的方式显示，如下面的截图所示：
- en: '![How it works...](img/3878OT_01_12.jpg)'
  id: totrans-192
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/3878OT_01_12.jpg)'
- en: All you need to do is to access the right-click context menu on the file that
    you want to recover from the list and choose the **Revert Selection** option.
    No more cigarettes and coffee combinations, please. Your headache is solved.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要做的就是访问你想要从列表中恢复的文件的右键单击上下文菜单，并选择**还原选择**选项。请不要再吸烟和喝咖啡了。你的头痛问题解决了。
- en: Customizing with PhpStorm
  id: totrans-194
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用PhpStorm进行自定义
- en: Sometimes thinking enough is not enough. Sometimes doing enough is not enough.
    The point is, despite learning so much, you still have a feeling that some more
    customization could have been possible. PhpStorm is at your disposal.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候，思考得足够多还不够。有时候，做得足够多还不够。关键是，尽管学到了很多，您仍然有一种感觉，认为还可以进行更多的自定义。PhpStorm就在您的身边。
- en: Getting ready
  id: totrans-196
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: The best thing you can do is use PhpStorm for whatever PHP projects you take
    up. But therein the problem looms large. Executing PHP via a web server is OK,
    but what do you do about the use case when the script has to run in the background?
    What if your reporting manager wants you to do some socket programming? You need
    a command-line interpreter for PHP. Stunned silence? It's time to break that silence.
    Thank PhpStorm and integrate the command-line PHP interpreter with PhpStorm.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 您能做的最好的事情就是使用PhpStorm处理您所承担的任何PHP项目。但问题就在这里。通过Web服务器执行PHP是可以的，但当脚本需要在后台运行时怎么办？如果您的报告经理要求您进行一些套接字编程，您该怎么办？您需要一个PHP的命令行解释器。震惊的沉默？是时候打破这种沉默了。感谢PhpStorm，并将其与PhpStorm集成命令行PHP解释器。
- en: How to do it...
  id: totrans-198
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Just a small sequence of shortcuts is all that you need to invoke command-line
    PHP. There are actually two roads, that is, there is a bifurcation ahead. From
    the bifurcation, you will see two roads—on the left-hand side is the *PhpStormish*
    way, and on the right-hand side is the *operating systemish* way. The point worth
    noting is that both ways take you to the same destination. At the destination,
    you will attain your goal, which is to have the capacity to use PhpStorm for every
    PHP task.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 只需要一小串快捷键就可以调用命令行PHP。实际上有两条路，也就是说，前方有一个分岔口。从分岔口，您将看到两条路——左侧是*PhpStormish*方式，右侧是*操作系统ish*方式。值得注意的一点是，两种方式都能带您到达同一个目的地。在目的地，您将实现目标，即能够使用PhpStorm处理每个PHP任务。
- en: 'You will be taken through the PhpStormish way first. This is easier, so you
    should try it first. This is termed as PhpStormish because PhpStorm lets you think
    that you are using PhpStorm itself to run your hard toiled PHP code. Perform the
    following steps:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 您将首先通过PhpStorm的方式来进行。这比较简单，所以您应该先尝试它。这被称为PhpStormish，因为PhpStorm让您感觉您正在使用PhpStorm本身来运行您辛苦编写的PHP代码。执行以下步骤：
- en: In order to run command-line PHP this way, you need to go to **Settings** |
    **PHP**, as shown in the next screenshot:![How to do it...](img/3878OT_01_13.jpg)
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了以这种方式运行命令行PHP，您需要转到**设置** | **PHP**，如图下所示：![如何操作...](img/3878OT_01_13.jpg)
- en: There is this interpreter dropdown. You need to add an interpreter. You can
    do that by selecting the PHP interpreter from the `bin` folder of the PHP installation.
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这里有一个解释器下拉菜单。您需要添加一个解释器。您可以通过从PHP安装的`bin`文件夹中选择PHP解释器来实现。
- en: Once selected, you need to customize it by providing various parameters, such
    as a name and configuration options. On applying the changes, the PHP environment
    in PhpStorm will be powered by the PHP environment of your underlying operating
    system.
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦选择，您需要通过提供各种参数来对其进行自定义，例如名称和配置选项。在应用更改后，PhpStorm中的PHP环境将由您底层操作系统的PHP环境提供支持。
- en: This will enable you to test and run your PHP scripts using the default keyboard
    shortcut *Ctrl* + *Shift* + *F10*.
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将使您能够使用默认的快捷键*Ctrl* + *Shift* + *F10*来测试和运行您的PHP脚本。
- en: See also
  id: totrans-205
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: Note
  id: totrans-206
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can add more interpreters if you have multiple versions of PHP installed
    and select from those for execution.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您安装了多个PHP版本，您可以添加更多解释器，并从中选择用于执行的解释器。
- en: That was easy to cook, right? Feeling happy? In this happiness, please don't
    forget that there was one more road, which was on the right-hand side, and which
    again took us to the same destination. PHP scripts or codes can be run on the
    terminal. Terminal—did this word strike bells in your mind? PhpStorm provides
    you a terminal (emulator) such that you do not have to switch back and forth between
    your beloved IDE (presumably) PhpStorm and the command-line terminal. You can
    again use this feature to execute command-line PHP scripts. All you have to do
    is type `php your-php-file.php` if you have the PHP classpath set, or else you
    need to add some extra letters to make it `/path/to/installed-php/php your-php-file.php`.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 那做起来很简单，对吧？感觉很高兴？在这份快乐中，请不要忘记还有一条路，它在右边，而且又把我们带到了同一个目的地。PHP脚本或代码可以在终端上运行。终端——这个词在你的脑海中响起铃声了吗？PhpStorm为你提供了一个终端（模拟器），这样你就不必在心爱的IDE（可能是PhpStorm）和命令行终端之间来回切换。你可以再次使用这个功能来执行命令行PHP脚本。你只需要输入`php
    your-php-file.php`，如果你已经设置了PHP类路径，否则你需要添加一些额外的字母来使其变为`/path/to/installed-php/php
    your-php-file.php`。
- en: 'The following screenshot shows you how to run PHP through command line in PhpStorm:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了如何在PhpStorm中通过命令行运行PHP：
- en: '![See also](img/3878OT_01_14.jpg)'
  id: totrans-210
  prefs: []
  type: TYPE_IMG
  zh: '![参见](img/3878OT_01_14.jpg)'
- en: Adding an include path
  id: totrans-211
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加包含路径
- en: One of the software engineering principles says that components should be reusable,
    that is, the structure of the software should be modular. This is a practice accepted
    worldwide, but this adds an overhead to the translation (interpreter or compiler)
    to link the modules together by first finding them. PHP is no different.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 软件工程的一个原则是组件应该是可重用的，也就是说，软件的结构应该是模块化的。这是一个全球范围内接受的实践，但这给翻译（解释器或编译器）带来了额外的开销，因为它需要先找到模块才能将它们链接在一起。PHP也不例外。
- en: Getting ready
  id: totrans-213
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: The PHP interpreter has to search for the required files/folders/resources every
    time the script is run. PhpStorm can, however, decrease the time required to search
    for the files/folders by allowing you to set the include path. The include path
    is the base directory under your operating system that contains all the files
    and folders to the dependencies.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 每次运行脚本时，PHP解释器都必须搜索所需的文件/文件夹/资源。然而，PhpStorm可以通过允许你设置包含路径来减少搜索文件/文件夹所需的时间。包含路径是在你的操作系统下包含所有依赖项的文件和文件夹的基目录。
- en: How to do it...
  id: totrans-215
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'You have the freedom to set this in PhpStorm. Go to **Settings | PHP | Include
    Path**. Select the new path. Click on **Apply**. Done! Take a look at the following
    screenshot, which illlustrates this point:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 你有在PhpStorm中设置这个的自由。转到**设置 | PHP | 包含路径**。选择新的路径。点击**应用**。完成！看看下面的截图，它说明了这个观点：
- en: '![How to do it...](img/3878OT_01_15.jpg)'
  id: totrans-217
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作...](img/3878OT_01_15.jpg)'
- en: Tip
  id: totrans-218
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: You should always make sure that you plan how to organize your files and folders
    beforehand so that a minimum number of include path settings are required.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该始终确保在事先计划如何组织你的文件和文件夹，这样就不需要设置太多的包含路径。
- en: If a folder is provided in the include path, it will be helpful in autocompletion
    for `include()`, `require()`, and so on.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在包含路径中提供了文件夹，它将有助于`include()`、`require()`等自动完成。
- en: Excluding unwanted directories from the index
  id: totrans-221
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从索引中排除不需要的目录
- en: Did you try imagining why on earth PhpStorm has information about all the files
    you added in your project directory structure? How does PhpStorm detect the changes
    that you make to the disk by adding images, text files, and so on, and manages
    to show them in the Project view? Yes, the answer is indexing.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 你尝试想象过为什么PhpStorm会知道你在项目目录结构中添加的所有文件的信息吗？PhpStorm是如何通过添加图像、文本文件等来检测你对磁盘所做的更改，并设法在项目视图中显示它们的？是的，答案是索引。
- en: Getting ready
  id: totrans-223
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: PhpStorm indexes everything that comes its way. Thus, it remembers the files
    and folders properly. But there is an overhead involved in this system. The more
    the number of files in the project, the longer the index created is. If PhpStorm
    decreases time in searching for files and folders by maintaining an index, how
    will it manage searching in the index itself when the index list has increased
    to a very large size?
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: PhpStorm对其遇到的所有内容进行索引。因此，它正确地记住了文件和文件夹。但这个系统中涉及一些开销。项目中的文件越多，创建的索引就越长。如果PhpStorm通过维护索引来减少搜索文件和文件夹的时间，那么当索引列表增加到非常大的规模时，它将如何管理在索引中进行搜索呢？
- en: How to do it...
  id: totrans-225
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'You can help PhpStorm by performing the following steps:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过以下步骤帮助PhpStorm：
- en: Go to **Settings** | **Directories**.
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往**设置** | **目录**。
- en: 'Select a directory, and all you have to remember from here are three keyboard
    shortcuts: *Alt* + *T*, *Alt* + *E*, and *Alt* + *R*. Consider the following screenshots:'
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择一个目录，你从这里需要记住的只有三个键盘快捷键：*Alt* + *T*，*Alt* + *E*，和 *Alt* + *R*。请参考以下截图：
- en: '![How to do it...](img/3878OT_01_16.jpg)'
  id: totrans-229
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作...](img/3878OT_01_16.jpg)'
- en: How it works…
  id: totrans-230
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: '*Alt* + *T* will mark a resource as a test resource, *E* will exclude it from
    indexing, and *R* will mark it as the content root. For you, the increase in speed
    will come from the magic key combination *Alt* + *E*. Be ruthless enough to apply
    this magic to all those directories that you decide are not important enough to
    be indexed.'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '*Alt* + *T* 将资源标记为测试资源，*E* 将其排除在索引之外，*R* 将其标记为内容根目录。对你来说，速度的提升将来自神奇的关键组合 *Alt*
    + *E*。对于那些你认为不足以被索引的目录，要足够无情地应用这个魔法。'
- en: Note
  id: totrans-232
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: A test resource is a type of resource, most probably some PHP script, some directory,
    or some other file type that is used in the testing process. So, you can mark
    a resource as a test resource once you know that it will be useful for testing
    purposes.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 测试资源是一种资源类型，很可能是某些PHP脚本、某些目录或其他在测试过程中使用的文件类型。因此，一旦你知道它对测试目的有用，你就可以将资源标记为测试资源。
- en: PhpStorm, being a careful(ly written) piece of software, maintains a list of
    all the files that you save in your project, using indexes. So, a large number
    of files means a longer index and hence the potential danger of slowing PhpStorm
    down. An excluded resource is a resource—some file(s) or folder(s)— that you have
    asked PhpStorm not to index.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一款精心编写的软件，PhpStorm使用索引维护了你项目中保存的所有文件的列表。因此，大量的文件意味着更长的索引，从而可能导致PhpStorm变慢。一个被排除的资源是你请求PhpStorm不要索引的某些文件或文件夹。
- en: 'A content root is a folder or directory under which the contents of the resources
    you are working on is contained. You would easily be tempted to ask "what purpose
    does it serve?" The answer is rather simple: it maintains a clean workspace for
    you (everything in life need not be complicated)!'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 内容根目录是你正在工作的资源内容所在的文件夹或目录。你可能会很容易地问“它有什么作用？”答案相当简单：它为你维护一个干净的工作空间（生活中的一切都不必那么复杂）！
- en: Using code completion
  id: totrans-236
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用代码补全
- en: The best example of the need to use an IDE instead of a standard editor is that
    an IDE understands your code and thus provides hints about the code that you might
    be writing or need next.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 使用IDE而不是标准编辑器的最佳例子是，IDE理解你的代码，因此可以提供关于你可能正在编写或需要的代码的提示。
- en: Getting ready
  id: totrans-238
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: A standard editor would, at the maximum, provide basic text coloring based on
    the various keywords. Anyway, without hurting the feelings of editors, PhpStorm
    provides you with additional options besides providing you the standard code completion
    system.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 标准编辑器最多只能提供基于各种关键字的基于基本文本着色。无论如何，不伤害编辑器的感情，PhpStorm除了提供标准的代码补全系统外，还提供了额外的选项。
- en: How to do it...
  id: totrans-240
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: There is the smart type completion that not only completes your code, but also
    finds and suggests the most eligible match for your code. By eligible, it means
    that the code hint matches the current context (the invoking object). This is
    particularly useful in cases in which you have honestly stuck to the *Software
    Engineering principle of Inheritance*.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 有智能类型补全功能，它不仅完成你的代码，还能找到并建议最适合你的代码的匹配项。通过“合适”的意思是，代码提示与当前上下文（调用对象）匹配。这在你需要坚持*软件工程继承原则*的情况下尤其有用。
- en: 'Code completion settings in PhpStorm are available at **File** | **Settings**
    | **Editor** | **Code Completion**, as shown in the following screenshot:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 在PhpStorm中，代码补全设置可在**文件** | **设置** | **编辑器** | **代码补全**中找到，如下截图所示：
- en: '![How to do it...](img/3878OT_01_17.jpg)'
  id: totrans-243
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作...](img/3878OT_01_17.jpg)'
- en: How it works...
  id: totrans-244
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: If you have a lot of items for PhpStorm to look up, for example, members of
    your created class, you can order PhpStorm to provide you with hints in lexicographical
    order.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有很多项目需要PhpStorm查找，例如，你创建的类的成员，你可以让PhpStorm按字典顺序为你提供提示。
- en: 'To turn this feature on, you need to select the checkbox adjacent to **Sort
    lookup items lexicographically**. The following screenshot shows the code completion
    feature:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 要启用此功能，您需要选择与**按字典顺序排序查找项**相邻的复选框。以下截图显示了代码补全功能：
- en: '![How it works...](img/3878OT_01_18.jpg)'
  id: totrans-247
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/3878OT_01_18.jpg)'
- en: Code completion at your convenience! I hope this make sense to you.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 便捷的代码补全！希望这对你来说是有意义的。
