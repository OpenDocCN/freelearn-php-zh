["```php\nCREATE TABLE IF NOT EXISTS `sessions` (\n  `session_id` varchar(40) COLLATE utf8_bin NOT NULL DEFAULT '0',\n  `ip_address` varchar(16) COLLATE utf8_bin NOT NULL DEFAULT '0',\n  `user_agent` varchar(120) COLLATE utf8_bin DEFAULT NULL,\n  `last_activity` int(10) unsigned NOT NULL DEFAULT '0',\n  `user_data` text COLLATE utf8_bin NOT NULL,\n  PRIMARY KEY (`session_id`),\n  KEY `last_activity_idx` (`last_activity`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;\n\nCREATE TABLE `users` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `first_name` varchar(125) NOT NULL,\n  `last_name` varchar(125) NOT NULL,\n  `email` varchar(255) NOT NULL,\n  `created_date` int(11) NOT NULL COMMENT 'unix timestamp',\n  `is_active` varchar(3) NOT NULL COMMENT 'yes or no',\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=1;\n\nINSERT INTO `users` (`id`, `first_name`, `last_name`, `email`, `created_date`, `is_active`) VALUES\n(5, 'First Name', 'Last name', 'first@last.com', 0, '0');\n```", "```php\n    <?php if (! defined('BASEPATH')) exit('No direct script access allowed');\n\n    class Users extends CI_Controller {\n        function __construct() {\n            parent::__construct();\n            $this->load->helper('form');\n            $this->load->helper('url');\n            $this->load->helper('security');\n            $this->load->model('Users_model');\n            $this->load->database();\n        }\n\n        public function index() {\n            redirect('users/view_users');\n        }\n\n        public function view_users() {\n            $data['query'] = $this->Users_model->get_all_users();\n            $this->load->view('users/view_all_users', $data);\n        }\n    }\n    ```", "```php\n    <?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');\n\n    class Users_model extends CI_Model {\n        function __construct() {\n            parent::__construct();\n        }\n\n        public function get_all_users() {\n            return $this->db->get('users');\n        }\n    }\n    ```", "```php\n    <?php if ($query->num_rows() > 0 ) : ?>\n    <table border=\"0\">\n      <tr>\n          <td>ID</td>\n          <td>First Name</td>\n          <td>Last Name</td>\n          <td>Created Date</td>\n          <td>Is Active</td>\n          <td colspan=\"2\">Actions</td>\n      </tr>\n      <?php foreach ($query->result() as $row) : ?>\n      <tr>\n          <td><?php echo $row->id; ?></td>\n          <td><?php echo $row->first_name; ?></td>\n          <td><?php echo $row->last_name; ?></td>\n          <td><?php echo date(\"d-m-Y\", $row->created_date); ?></td>\n          <td><?php echo ($row->is_active ? 'Yes' : 'No'); ?></td>\n          <td><?php echo anchor('users/edit_user/'.$row->id, 'Edit') ; ?></td>\n          <td><?php echo anchor('users/delete_user/'.$row->id, 'Delete') ; ?></td>\n      </tr>\n      <?php endforeach ; ?>\n    </table>\n    <?php endif ; ?>\n    ```", "```php\n    <?php echo form_open('users/new_user') ; ?>\n      <?php if (validation_errors()) : ?>\n        <h3>Whoops! There was an error:</h3>\n        <p><?php echo validation_errors(); ?></p>\n      <?php endif; ?>\n      <table border=\"0\">\n      <tr>\n        <td>User First Name</td>\n        <td><?php echo form_input($first_name); ?></td>\n      </tr>\n      <tr>\n        <td>User Last Name</td>\n        <td><?php echo form_input($last_name); ?></td>\n      </tr>\n      <tr>\n        <td>User Email</td>\n        <td><?php echo form_input($email); ?></td>\n      </tr>\n      <tr>\n        <td>User Is Active?</td>\n        <td><?php echo form_checkbox($is_active); ?></td>\n      </tr>\n    </table>\n        <?php echo form_submit('submit', 'Create'); ?>\n        or <?php echo anchor('users/index', 'cancel'); ?>\n    <?php echo form_close(); ?>\n    ```", "```php\n        public function new_user() {\n            // Load support assets\n            $this->load->library('form_validation');\n            $this->form_validation->set_error_delimiters('', '<br />');\n\n            // Set validation rules\n            $this->form_validation->set_rules('first_name', 'First Name', 'required|min_length[1]|max_length[125]');\n            $this->form_validation->set_rules('last_name', 'Last Name', 'required|min_length[1]|max_length[125]');\n            $this->form_validation->set_rules('email', 'Email', 'required|min_length[1]|max_length[255]|valid_email');\n            $this->form_validation->set_rules('is_active', 'Is Active', 'min_length[1]|max_length[1]|integer|is_natural');\n\n            // Begin validation\n            if ($this->form_validation->run() == FALSE) {\n                // First load, or problem with form\n                $data['first_name'] = array('name' => 'first_name', 'id' => 'first_name', 'value' => set_value('first_name', ''), 'maxlength'   => '100', 'size' => '35');\n                $data['last_name'] = array('name' => 'last_name', 'id' => 'last_name', 'value' => set_value('last_name', ''), 'maxlength'   => '100', 'size' => '35');\n                $data['email'] = array('name' => 'email', 'id' => 'email', 'value' => set_value('email', ''), 'maxlength'   => '100', 'size' => '35');\n                $data['is_active'] = array('name' => 'is_active', 'id' => 'is_active', 'value' => set_value('is_active', ''));\n\n                $this->load->view('users/new_user',$data);\n            } else { // Validation passed, now escape the data\n                $data = array(\n                    'first_name' => $this->input->post('first_name'),\n                    'last_name' => $this->input->post('last_name'),\n                    'email' => $this->input->post('email'),\n                    'is_active' => $this->input->post('is_active'),\n                );\n\n                if ($this->Users_model->process_create_user($data)) {\n                   redirect('users');\n               }\n            }\n        }\n    ```", "```php\n        public function process_create_user($data) {\n            if ($this->db->insert('users', $data)) {\n              return true;\n            } else {\n              return false;\n            }\n        }\n    ```", "```php\n    <?php echo form_open('users/edit_user') ; ?>\n        <?php if (validation_errors()) : ?>\n            <h3>Whoops! There was an error:</h3>\n            <p><?php echo validation_errors(); ?></p>\n        <?php endif; ?>\n        <table border=\"0\" >\n          <tr>\n             <td>User First Name</td>\n             <td><?php echo form_input($first_name); ?></td>\n          </tr>\n          <tr>\n             <td>User Last Name</td>\n             <td><?php echo form_input($last_name); ?></td>\n          </tr>\n          <tr>\n             <td>User Email</td>\n             <td><?php echo form_input($email); ?></td>\n          </tr>\n          <tr>\n              <td>User Is Active?</td>\n              <td><?php echo form_checkbox($is_active); ?></td>\n          </tr>\n          <?php echo form_hidden($id); ?>\n        </table>\n        <?php echo form_submit('submit', 'Update'); ?>\n        or <?php echo anchor('users/index', 'cancel'); ?>\n    <?php echo form_close(); ?>\n    ```", "```php\n        public function edit_user() {\n            // Load support assets\n            $this->load->library('form_validation');\n            $this->form_validation->set_error_delimiters('', '<br />');\n\n            // Set validation rules\n            $this->form_validation->set_rules('first_name', 'First Name', 'required|min_length[1]|max_length[125]');\n            $this->form_validation->set_rules('last_name', 'Last Name', 'required|min_length[1]|max_length[125]');\n            $this->form_validation->set_rules('email', 'Email', 'required|min_length[1]|max_length[255]|valid_email');\n            $this->form_validation->set_rules('is_active', 'Is Active', 'min_length[1]|max_length[1]|integer|is_natural');\n\n            if ($this->input->post()) {\n                $id = $this->input->post('id');\n            } else {\n                $id = $this->uri->segment(3); \n            }\n\n            // Begin validation\n            if ($this->form_validation->run() == FALSE) {\n              // First load, or problem with form\n                    $query = $this->Users_model->get_user_details($id);\n                    foreach ($query->result() as $row) {\n                        $first_name = $row->first_name;\n                        $last_name = $row->last_name;\n                        $email = $row->email;\n                        $is_active= $row->is_active;\n                    }\n\n                    $data['first_name'] = array('name' => 'first_name', 'id' => 'first_name', 'value' => set_value('first_name', $first_name), 'maxlength' => '100', 'size' => '35');\n                    $data['last_name'] = array('name' => 'last_name', 'id' => 'last_name', 'value' => set_value('last_name', $last_name), 'maxlength'   => '100', 'size' => '35');\n                    $data['email'] = array('name' => 'email', 'id' => 'email', 'value' => set_value('email', $email), 'maxlength' => '100', 'size' => '35');\n                    $data['is_active'] = array('name' => 'is_active', 'id' => 'is_active', 'value' => set_value('is_active', $is_active), 'maxlength'   => '100', 'size' => '35');\n                    $data['id'] = array('id' => set_value('id', $id));\n\n                    $this->load->view('users/edit_user', $data);\n\n            } else { // Validation passed, now escape the data\n                $data = array(\n                    'first_name' => $this->input->post('first_name'),\n                    'last_name' => $this->input->post('last_name'),\n                    'email' => $this->input->post('email'),\n                    'is_active' => $this->input->post('is_active'),\n                );\n\n                if ($this->Users_model->process_update_user($id, $data)) {\n                    redirect('users/view_users');\n                }\n            }\n        }\n    ```", "```php\n        public function process_update_user($id, $data) {\n            $this->db->where('id', $id);\n            if ($this->db->update('users', $data)) {\n              return true;\n            } else {\n              return false;\n            }\n        }\n\n        public function get_user_details($id) {\n            $this->db->where('id', $id);\n            return $this->db->get('users');\n        }\n    ```", "```php\nif ($this->input->post()) {\n    $id = $this->input->post('id');\n} else {\n    $id = $this->uri->segment(3); \n}\n```", "```php\n    $data = array(\n        'first_name' => $this->input->post('first_name'),\n        'last_name' => $this->input->post('last_name'),\n        'email' => $this->input->post('email'),\n        'is_active' => $this->input->post('is_active'),\n    );\n```", "```php\n    if ($this->Users_model->process_update_user($id, $data)) {\n        redirect('users/view_users');\n    }\n```", "```php\n    <?php echo form_open('users/delete_user'); ?>\n        <?php if (validation_errors()) : ?>\n            <h3>Whoops! There was an error:</h3>\n            <p><?php echo validation_errors(); ?></p>\n        <?php endif; ?>\n        <?php foreach ($query->result() as $row) : ?>\n            <?php echo $row->first_name . ' ' . $row->last_name; ?>\n            <?php echo form_submit('submit', 'Delete'); ?>\n            or <?php echo anchor('users/index', 'cancel'); ?>\n            <?php echo form_hidden('id', $row->id); ?>\n        <?php endforeach; ?>\n    </form>\n    ```", "```php\n       public function delete_user() {\n            // Load support assets\n            $this->load->library('form_validation');\n            $this->form_validation->set_error_delimiters('', '<br />');\n\n            // Set validation rules\n            $this->form_validation->set_rules('id', 'User ID', 'required|min_length[1]|max_length[11]|integer|is_natural');\n\n            if ($this->input->post()) {\n                $id = $this->input->post('id');\n            } else {\n                $id = $this->uri->segment(3);\n            }\n\n            if ($this->form_validation->run() == FALSE) {\n              // First load, or problem with form\n\n                $data['query'] = $this->Users_model->get_user_details($id);\n\n                $this->load->view('users/delete_user', $data);\n            } else {\n                if ($this->Users_model->delete_user($id)) {\n                    redirect('users/view_users');\n                }\n            }\n        }\n    ```", "```php\n        public function delete_user($id) {\n            $this->db->where('id', $id);\n            if ($this->db->delete('users')) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n    ```", "```php\nif ($this->input->post()) {\n  $id = $this->input->post('id');\n} else {\n  $id = $this->uri->segment(3);  \n}\n```", "```php\nCREATE TABLE IF NOT EXISTS `register` ( \n  `user_id` int(11) NOT NULL AUTO_INCREMENT, \n  `user_first_name` varchar(125) NOT NULL, \n  `user_last_name` varchar(125) NOT NULL, \n  `user_email` varchar(255) NOT NULL, \n  `user_hash` text NOT NULL, \n  PRIMARY KEY (`user_id`) \n) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;\n```", "```php\n    <?php if (!defined('BASEPATH')) exit('No direct script access allowed');\n\n    class Register extends CI_Controller {\n        function __construct() {\n            parent::__construct();\n            $this->load->helper('form');\n            $this->load->helper('url');\n            $this->load->helper('security');\n            $this->load->model('Register_model');\n            $this->load->library('encrypt');\n            $this->load->database();\n        }\n\n        public function index() {\n            redirect('register/register_user');\n        }\n\n        public function register_user() {\n            // Load support assets\n            $this->load->library('form_validation');\n            $this->form_validation->set_error_delimiters('', '<br />');\n\n            // Set validation rules\n            $this->form_validation->set_rules('first_name', 'First Name', 'required|min_length[1]|max_length[125]');\n            $this->form_validation->set_rules('last_name', 'Last Name', \n                'required|min_length[1]|max_length[125]');\n            $this->form_validation->set_rules('email', 'Email', \n              'required|min_length[1]|max_length[255]|valid_email');\n            $this->form_validation->set_rules('password1', \n              'Password', 'required|min_length[5]|max_length[15]');\n            $this->form_validation->set_rules('password2', 'Confirmation Password', 'required|min_length[5]|max_length[15]|matches[password1]');\n\n            // Begin validation\n            if ($this->form_validation->run() == FALSE) {\n                // First load, or problem with form\n                $data['page_title'] = \"Register\";\n                $this->load->view('register/register',$data);\n            } else {\n                // Create hash from user password\n                $hash = $this->encrypt->sha1($this->input->post('password1'));\n\n                $data = array(\n                    'user_first_name' => $this->input->post('first_name'),\n                    'user_last_name' => $this->input->post('last_name'),\n                    'user_email' => $this->input->post('email'),\n                    'user_hash' => $hash\n                );\n\n                if ($this->Register_model->register_user($data)) {\n                    redirect('signin');\n                } else {\n                    redirect('register');\n                }\n            }\n        }\n    }\n    ```", "```php\n    <?php if (! defined('BASEPATH')) exit('No direct script access allowed');\n\n    class Register_model extends CI_Model {\n        function __construct() {\n            parent::__construct();\n        }\n\n        public function register_user($data) {\n            if ($this->db->insert('register', $data)) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n\n        public function update_user($data, $email) {\n            $this->db->where('user_email', $email);\n            $this->db->update('register', $data);\n        }\n    }\n    ```", "```php\n    <?php echo form_open('register/register_user') ; ?>\n        <?php if (validation_errors()) : ?>\n            <h3>Whoops! There was an error:</h3>\n            <p><?php echo validation_errors(); ?></p>\n        <?php endif; ?>\n        <table border=\"0\" >\n            <tr>\n                <td>First Name</td>\n                <td><?php echo form_input(array('name' => 'first_name', 'id' => 'first_name','value' => set_value('first_name', ''), 'maxlength' => '100', 'size' => '50', 'style' => 'width:100%')); ?></td>\n            </tr>\n            <tr>\n                <td>Last Name</td>\n                <td><?php echo form_input(array('name' => 'last_name', 'id' => 'last_name', \n                    'value' => set_value('last_name', ''), 'maxlength' => '100', 'size' => '50', 'style' => 'width:100%')); ?></td>\n            </tr>\n            <tr>\n                <td>User Email</td>\n                <td><?php echo form_input(array('name' => 'email', 'id' => 'email', 'value' => set_value('email', ''), 'maxlength' => '100', 'size' => '50', 'style' => 'width:100%')); ?></td>\n            </tr>\n            <tr>\n                <td>Password</td>\n                <td><?php echo form_password(array('name' => 'password1', 'id' => 'password1', \n                    'value' => set_value('password1', ''), 'maxlength' => '100', 'size' => '50', \n                        'style' => 'width:100%')); ?></td>\n            </tr>\n            <tr>\n                <td>Confirm Password</td>\n                <td><?php echo form_password(array('name' => 'password2', 'id' => 'password2', 'value' => set_value('password2', ''), 'maxlength' => '100', 'size' => '50', 'style' => 'width:100%')); ?></td>\n            </tr>\n        </table>\n        <?php echo form_submit('submit', 'Submit'); ?>\n        or <?php echo anchor('form', 'cancel'); ?>\n    <?php echo form_close(); ?>\n    ```", "```php\n    <?php if (!defined('BASEPATH')) exit('No direct script access allowed');\n\n    class Signin extends CI_Controller {\n\n      function __construct() {\n        parent::__construct();\n        $this->load->helper('form');\n        $this->load->helper('url');\n        $this->load->helper('security');\n      }\n\n      public function index() {\n        redirect('signin/login');\n      }\n\n        public function login() {\n        if ($this->session->userdata('logged_in') == TRUE) {\n          redirect('signin/loggedin');\n        } else {\n          $this->load->library('form_validation');\n\n          // Set validation rules for view filters\n          $this->form_validation->set_rules('email', 'Email', 'required|valid_email|min_length[5]|max_length[125]');\n          $this->form_validation->set_rules('password', 'Password ', 'required|min_length[5]|max_length[30]');\n\n          if ($this->form_validation->run() == FALSE) {\n            $this->load->view('signin/signin');\n          } else {\n            $email = $this->input->post('email');\n            $password = $this->input->post('password');\n\n            $this->load->model('Signin_model');\n            $query = $this->Signin_model->does_user_exist($email);\n\n            if ($query->num_rows() == 1) {\n              // One matching row found\n              foreach ($query->result() as $row) {\n                // Call Encrypt library\n     $this->load->library('encrypt');\n\n                // Generate hash from a their password\n                $hash = $this->encrypt->sha1($password);\n\n                // Compare the generated hash with that in the // database\n     if ($hash != $row->user_hash) {\n     // Didn't match so send back to login\n     $data['login_fail'] = true;\n     $this->load->view('signin/signin', $data);\n     } else {\n     $data = array(\n     'user_id' => $row->user_id,\n     'user_email' => $row->user_email,\n     'logged_in' => TRUE\n     );\n\n     // Save data to session\n     $this->session->set_userdata($data);\n     redirect('signin/loggedin');\n     }\n              }\n            } \n          }\n        }\n      }\n\n      function loggedin() {\n        if ($this->session->userdata('logged_in') == TRUE) {\n          $this->load->view('signin/loggedin');\n        } else {\n          redirect('signin');\n        }       \n      }\n    }\n    ```", "```php\n    <?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');\n\n    class Signin_model extends CI_Model {\n        function __construct() {\n            parent::__construct();\n        }\n\n        public function does_user_exist($email) {\n            $this->db->where('user_email', $email);\n            $query = $this->db->get('register');\n            return $query;\n        }\n    }\n    ```", "```php\n    <?php echo form_open('signin/login') ; ?>\n        <?php if (validation_errors()) : ?>\n            <h3>Whoops! There was an error:</h3>\n            <p><?php echo validation_errors(); ?></p>\n        <?php endif; ?>\n\n        <?php if (isset($login_fail)) : ?>\n            <h3>Login Error:</h3>\n            <p>Username or Password is incorrect, please try again.</p>\n        <?php endif; ?>\n\n        <table border=\"0\" >\n            <tr>\n                <td>User Email</td>\n                <td><?php echo form_input(array('name' => 'email', 'id' => 'email', 'value' => set_value('email', ''), 'maxlength' => '100', 'size' => '50', 'style' => 'width:100%')); ?></td>\n            </tr>\n            <tr>\n                <td>Password</td>\n                <td><?php echo form_password(array('name' => 'password', 'id' => 'password', \n                    'value' => set_value('password', ''), 'maxlength' => '100', 'size' => '50', \n                        'style' => 'width:100%')); ?></td>\n            </tr>\n        </table>\n        <?php echo form_submit('submit', 'Submit'); ?>\n        or <?php echo anchor('signin', 'cancel'); ?>\n    <?php echo form_close(); ?>\n    ```", "```php\n    Success!  Logged in as <?php echo $this->session->userdata('user_email'); ?>\n    ```", "```php\n$hash = $this->encrypt->sha1($password);\n```", "```php\n// Create hash from user password\n$hash = $this->encrypt->sha1($this->input->post('password1'));\n\n$data = array(\n     'user_first_name' => $this->input->post('first_name'),\n     'user_last_name' => $this->input->post('last_name'),\n     'user_email' => $this->input->post('email'),\n     'user_hash' => $hash\n);\n```", "```php\n        $this->load->model('Signin_model');\n        $query = $this->Signin_model->does_user_exist($email);\n\n        if ($query->num_rows() == 1) {\n          // One matching row found\n          foreach ($query->result() as $row) {\n          ..\n        }\n```", "```php\n            // Call Encrypt library\n            $this->load->library('encrypt');\n\n            // Generate hash from a their password\n            $hash = $this->encrypt->sha1($password);\n\n            // Compare the generated hash with that in the // database\n if ($hash != $row->user_hash) {\n              // Didn't match so send back to login\n              $data['login_fail'] = true;\n              $this->load->view('signin/signin', $data);\n            } else {\n              $data = array(\n                  'user_id' => $row->user_id,\n                  'user_email' => $row->user_email,\n                  'logged_in' => TRUE\n              );\n\n              // Save data to session\n              $this->session->set_userdata($data);\n              redirect('signin/loggedin');\n            }\n```", "```php\n    // Call Encrypt library\n    $this->load->library('encrypt');\n\n    $hash = $this->encrypt->sha1($text_to_be_hashed);\n    ```", "```php\n    // Call Encrypt library\n    $this->load->library('encrypt');\n\n    $key = \"This-is-the-key\";\n    $hash = $this->encrypt->sha1($text_to_be_hashed, $key);\n    ```", "```php\n// Call Encrypt library\n$this->load->library('encrypt');\n\n// Generate hash from a their password\n$hash = $this->encrypt->sha1($password);\n\n// Compare the generated hash with that in the database\nif ($hash != $row->user_hash) {\n    // Didn't match so send back to login\n    redirect('signin/login');\n} else { \n    // Did match so log them in if you wish\n}\n```", "```php\n$this->encrypt->sha1($text_to_be_hashed, $key)\n```", "```php\nALTER TABLE register ADD forgot_password INT(11) AFTER user_hash;\n```", "```php\n    <?php echo form_open('signin/forgot_password') ; ?>\n        <?php if (validation_errors()) : ?>\n            <h3>Whoops! There was an error:</h3>\n            <p><?php echo validation_errors(); ?></p>\n        <?php endif; ?>\n        <?php if (isset($submit_success)) : ?>\n            <h3>Email Sent:</h3>\n            <p>An email has been sent to the address provided.</p>\n        <?php endif; ?>\n        <table border=\"0\" >\n            <tr>\n                <td>User Email</td>\n                <td><?php echo form_input(array('name' => 'email', 'id' => 'email', 'value' => set_value('email', ''), 'maxlength' => '100', 'size' => '50', 'style' => 'width:100%')); ?></td>\n            </tr>\n        </table>\n        <?php echo form_submit('submit', 'Submit'); ?>\n        or <?php echo anchor('form', 'cancel'); ?>\n    <?php echo form_close(); ?>\n    ```", "```php\n    <?php echo form_open('signin/new_password') ; ?>\n        <?php if (validation_errors()) : ?>\n            <h3>Whoops! There was an error:</h3>\n            <p><?php echo validation_errors(); ?></p>\n        <?php endif; ?>\n        <h2>Reset your password</h2>\n\n        <table border=\"0\">\n            <tr>\n                <td>User Email</td>\n                <td><?php echo form_input(array('name' => 'email', 'id' => 'email', 'value' => set_value('email', ''), 'maxlength' => '100', 'size' => '50', 'style' => 'width:100%')); ?></td>\n            </tr>\n            <tr>\n                <td>Password</td>\n                <td><?php echo form_password(array('name' => 'password1', 'id' => 'password1', 'value' => set_value('password1', ''), 'maxlength' => '100', 'size' => '50', 'style' => 'width:100%')); ?></td>\n            </tr>\n            <tr>\n                <td>Confirm Password</td>\n                <td><?php echo form_password(array('name' => 'password2', 'id' => 'password2', 'value' => set_value('password2', ''), 'maxlength' => '100', 'size' => '50', 'style' => 'width:100%')); ?></td>\n            </tr>\n\n            <?php echo form_hidden('code', $code) ; ?>\n        </table>\n        <?php echo form_submit('submit', 'Submit'); ?>\n        or <?php echo anchor('form', 'cancel'); ?>\n    <?php echo form_close(); ?>\n    ```", "```php\n    public function forgot_password() {\n        $this->load->library('form_validation');\n        $this->form_validation->set_rules('email', 'Email', 'required|valid_email|min_length[5]|max_length[125]');\n\n        if ($this->form_validation->run() == FALSE) {\n          $this->load->view('signin/forgot_password');\n        } else {\n          $email = $this->input->post('email');\n\n          $this->db->where('user_email', $email);\n          $this->db->from('register');\n          $num_res = $this->db->count_all_results();\n\n          if ($num_res == 1) {\n            // Make a small string (code) to assign to the user // to indicate they've requested a change of // password\n            $code = mt_rand('5000', '200000');\n            $data = array(\n              'forgot_password' => $code,\n            );\n\n            $this->db->where('user_email', $email);\n            if ($this->db->update('register', $data)) {\n              // Update okay, send email\n              $url = \"http://www.domain.com/signin/new_password/\".$code;\n              $body = \"\\nPlease click the following link to reset your password:\\n\\n\".$url.\"\\n\\n\";\n              if (mail($email, 'Password reset', $body, 'From: no-reply@domain.com')) {\n                $data['submit_success'] = true;\n                $this->load->view('signin/signin', $data);\n              }\n            } else {\n              // Some sort of error happened, redirect user // back to form\n              redirect('singin/forgot_password');\n            }\n          } else {\n            // Some sort of error happened, redirect user back // to form\n            redirect('singin/forgot_password');\n          }\n        }\n      }\n\n      public function new_password() {\n        $this->load->library('form_validation');\n        $this->form_validation->set_rules('code', 'Code', 'required|min_length[4]|max_length[7]');\n        $this->form_validation->set_rules('email', 'Email', 'required|valid_email|min_length[5]|max_length[125]');\n        $this->form_validation->set_rules('password1', 'Password', 'required|min_length[5]|max_length[15]');\n        $this->form_validation->set_rules('password2', 'Confirmation Password', 'required|min_length[5]|max_length[15]|matches[password1]');\n\n        // Get Code from URL or POST and clean up\n        if ($this->input->post()) {\n          $data['code'] = xss_clean($this->input->post('code'));\n        } else {\n          $data['code'] = xss_clean($this->uri->segment(3));\n        }\n\n        if ($this->form_validation->run() == FALSE) {\n          $this->load->view('signin/new_password', $data);\n        } else {\n          // Does code from input match the code against the // email\n          $this->load->model('Signin_model');\n          $email = xss_clean($this->input->post('email'));\n          if (!$this->Signin_model->does_code_match($data['code'], $email)) {\n            // Code doesn't match\n            redirect ('signin/forgot_password');\n          } else {// Code does match\n            $this->load->model('Register_model');\n            $hash = $this->encrypt->sha1($this->input->post('password1'));\n\n            $data = array(\n              'user_hash' => $hash\n            );\n\n            if ($this->Register_model->update_user($data, $email)) {\n              redirect ('signin');\n            }\n          }\n        }\n      }\n    ```", "```php\n        public function update_user($data, $email) {\n            $this->db->where('user_email', $email);\n            $this->db->update('register', $data);\n        }\n\n        public function does_email_exist($email) {\n          $this->db->where('user_email', $email);\n          $this->db->from('register');\n          $num_res = $this->db->count_all_results();\n            if ($num_res == 1) {\n              return TRUE;\n          } else {\n              return FALSE;\n          }\n        }\n\n        public function does_code_match($code, $email) {\n          $this->db->where('user_email', $email);\n          $this->db->where('forgot_password', $code);\n          $this->db->from('register');\n            $num_res = $this->db->count_all_results();\n\n            if ($num_res == 1) {\n              return TRUE;\n          } else {\n              return FALSE;\n          }\n        }\n    ```", "```php\n    <?php echo form_open('signin/login') ; ?>\n        <?php if (validation_errors()) : ?>\n            <h3>Whoops! There was an error:</h3>\n            <p><?php echo validation_errors(); ?></p>\n        <?php endif; ?>\n\n        <?php if (isset($login_fail)) : ?>\n            <h3>Login Error:</h3>\n            <p>Username or Password is incorrect, please try again.</p>\n        <?php endif; ?>\n\n        <table border=\"0\" >\n            <tr>\n                <td>User Email</td>\n                <td><?php echo form_input(array('name' => 'email', 'id' => 'email', 'value' => set_value('email', ''), 'maxlength' => '100', 'size' => '50', 'style' => 'width:100%')); ?></td>\n            </tr>\n            <tr>\n                <td>Password</td>\n                <td><?php echo form_password(array('name' => 'password', 'id' => 'password', 'value' => set_value('password', ''), 'maxlength' => '100', 'size' => '50', 'style' => 'width:100%')); ?></td>\n            </tr>\n        </table>\n        <?php echo form_submit('submit', 'Submit'); ?>\n        or <?php echo anchor('signin', 'cancel'); ?>\n     <?php echo anchor('signin/forgot_password', 'Forgot Password'); ?>\n    <?php echo form_close(); ?>\n    ```"]