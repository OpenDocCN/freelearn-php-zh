["```php\n<?php //buggy_code.php\n$person['firSt'] = 'Thomas';\n$person['last'] = 'Anderson';\necho \"Hi {$person['first']} {$person['last']}\";\n```", "```php\nphp buggy_code.php\n```", "```php\nPHP Warning:  Undefined array key \"first\"…\nWarning: Undefined array key \"first\" in…\nHi  Anderson\n```", "```php\n<?php //buggy_code.php\n…\n//echo \"Hi {$person['first']} {$person['last']}\";\nvar_dump($person);\n```", "```php\nphp buggy_code.php\n```", "```php\n…\narray(2) {\n  [\"firSt\"]=>\n  string(6) \"Thomas\"\n  [\"last\"]=>\n  string(8) \"Anderson\"\n}\n```", "```php\n<?php //buggy_code.php\n$person['first'] = 'Thomas';\n$person['last'] = 'Anderson';\necho \"Hi {$person['first']} {$person['last']}\";\n```", "```php\nphp buggy_code.php\n```", "```php\nHi Thomas Anderson\n```", "```php\n# buggy_code.rb\nperson = Hash.new\nperson['firSt'] = 'Thomas'\nperson['last'] = 'Anderson'\nprint \"Hi #{person['first']} #{person['last']}\"\n```", "```php\nruby buggy_code.rb\n```", "```php\nHi  Anderson\n```", "```php\n# buggy_code.rb\nperson = Hash.new\nperson['firSt'] = 'Thomas'\nperson['last'] = 'Anderson'\n#print \"Hi #{person['first']} #{person['last']}\"\nprint person.inspect\n```", "```php\nruby buggy_code.rb\n```", "```php\n{\"firSt\"=>\"Thomas\", \"last\"=>\"Anderson\"}\n```", "```php\n# buggy_code.rb\nperson = Hash.new\nperson['first'] = 'Thomas'\nperson['last'] = 'Anderson'\nprint \"Hi #{person['first']} #{person['last']}\"\n```", "```php\nruby buggy_code.rb\n```", "```php\nHi Thomas Anderson\n```", "```php\n# Gemfile\ngem \"debug\", \">= 1.0.0\"\n```", "```php\nbundle install\n```", "```php\nResolving dependencies...\nUsing bundler 2.4.6\nUsing debug 1.7.1\nBundle complete! 1 Gemfile dependency, 2 gems now installed.\nUse `bundle info [gemname]` to see where a bundled gem is installed.\n```", "```php\n# debuggable_example.rb\nrequire 'digest'\nuser = Hash.new\nuser['name'] = 'admin'\nuser['password'] = 'secret'\nSECRET_SHA2_PASSWORD = '32b363908ba2382c892800589d6aa3104dc41e6789d2d6a12512c34ec0632834'\nuser_sha2_input = Digest::SHA2.hexdigest(user['password'])\nif user_sha2_input == SECRET_SHA2_PASSWORD\n  print \"Your password is CORRECT\"\nelse\n  print \"Your password is INCORRECT\"\nend\n```", "```php\nruby debuggable_example.rb\n```", "```php\nYour password is INCORRECT\n```", "```php\n# debuggable_example.rb\nrequire 'digest'\nrequire 'debug'\nuser = Hash.new\n…\n```", "```php\n# debuggable_example.rb\nrequire 'digest'\nrequire 'debug'\nuser = Hash.new\nuser['name'] = 'admin'\nuser['password'] = 'secret'\nSECRET_SHA2_PASSWORD = '32b363908ba2382c892800589d6aa3104dc41e6789d2d6a12512c34ec0632834'\nbinding.break\nuser_sha2_input = Digest::SHA2.hexdigest(user['password'])\nif user_sha2_input == SECRET_SHA2_PASSWORD\n  print \"Your password is CORRECT\"\nelse\n  print \"Your password is INCORRECT\"\nend\n```", "```php\nruby debuggable_example.rb\n```", "```php\n[4, 13] in debuggable_example.rb\n     4|\n     5| user = Hash.new\n     6| user['name'] = 'admin'\n     7| user['password'] = 'admin'\n     8| SECRET_SHA2_PASSWORD = '32b3639…'\n=>   9| binding.break\n    10| user_sha2_input = Digest::SHA2.hexdigest\n        (user['password'])\n    11|\n    12| if user_sha2_input == SECRET_SHA2_PASSWORD\n    13|   print \"Your password is CORRECT\"\n=>#0  <main> at debuggable_example.rb:9\n(rdbg)\n```", "```php\nuser\n```", "```php\n(rdbg) user\n{\"name\"=>\"admin\", \"password\"=>\"secret\"}\n(rdbg)\n```", "```php\nuser_sha2_input\n```", "```php\n(ruby) user_sha2_input\nnil\n(rdbg)\n```", "```php\n(rdbg) next\n```", "```php\n[5, 14] in debuggable_example.rb\n     5| user = Hash.new\n     6| user['name'] = 'admin'\n     7| user['password'] = 'admin'\n     8| SECRET_SHA2_PASSWORD = '32b3639…'\n     9| binding.break\n=>  10| user_sha2_input = Digest::SHA2.hexdigest\n        (user['password'])\n    11|\n    12| if user_sha2_input == SECRET_SHA2_PASSWORD\n    13|   print \"Your password is CORRECT\"\n    14| else\n=>#0  <main> at debuggable_example.rb:10\n(rdbg)\n```", "```php\n(rdbg) n\n```", "```php\n[5, 14] in debuggable_example.rb\n     5| user = Hash.new\n     6| user['name'] = 'admin'\n     7| binding.break\n     8| user['password'] = 'admin'\n     9|\n=>  10| if user_sha2_input == SECRET_SHA2_PASSWORD\n    11|   print \"Your password is CORRECT\"\n    12| else\n    13|   print \"Your password is INCORRECT\"\n    14| end\n=>#0  <main> at debuggable_example.rb:10\n(rdbg)\n```", "```php\n(rdbg) user_sha2_input\n```", "```php\n(rdbg) user_sha2_input\n2bb80d537b1da3e38bd30361aa855686bde0eacd7162fef6a25fe97bf527a25b\n(rdbg)\n```", "```php\nuser_sha2_input == SECRET_SHA2_PASSWORD\n```", "```php\nfalse\n```", "```php\nuser_sha2_input\n```", "```php\n2bb80d537b1da3e38bd30361aa855686bde0eacd7162fef6a25fe97bf527a25b\n```", "```php\n32b363908ba2382c892800589d6aa3104dc41e6789d2d6a12512c34ec0632834\n```", "```php\n(rdbg) continue\n```", "```php\n(rdbg) continue    # command\nYour password is INCORRECT\n```", "```php\n2bb80d537b1da3e38bd30361aa855686bde0eacd7162fef6a25fe97bf527a25b\n```", "```php\n# debuggable_example.rb\nrequire 'digest'\nrequire 'debug'\nuser = Hash.new\nuser['name'] = 'admin'\nuser['password'] = 'secret'\nSECRET_SHA2_PASSWORD = '2bb80d537b1da3e38bd30361aa855686bde0eacd7162fef6a25fe97bf527a25b'\nuser_sha2_input = Digest::SHA2.hexdigest(user['password'])\nif user_sha2_input == SECRET_SHA2_PASSWORD\n  print \"Your password is CORRECT\"\nelse\n  print \"Your password is INCORRECT\"\nend\n```", "```php\nruby debuggable_example.rb\n```", "```php\nYour password is CORRECT\n```", "```php\ngem install pry\n```", "```php\nFetching pry-0.14.2.gem\nSuccessfully installed pry-0.14.2\nParsing documentation for pry-0.14.2\nInstalling ri documentation for pry-0.14.2\nDone installing documentation for pry after 0 seconds\n1 gem installed\n```", "```php\n# pryable_example.rb\nclass Person\n  attr_accessor :first_name, :last_name\n  def full_name\n    puts \"#{first_name}#{last_name}\"\n  end\nend\nperson = Person.new\nperson.first_name = \"Zach\"\nperson.last_name = \"Smith\"\nperson.full_name\n```", "```php\nruby pryable_example.rb\n```", "```php\nZachSmith\n```", "```php\n# pryable_example.rb\nrequire 'pry'\nclass Person\n  attr_accessor :first_name, :last_name\n  def full_name\n    puts \"#{first_name}#{last_name}\"\n  end\nend\nperson = Person.new\nperson.first_name = \"Zach\"\nperson.last_name = \"Smith\"\nbinding.pry\nperson.full_name\n```", "```php\nruby pryable_example.rb\n```", "```php\n     9: end\n    10:\n    11: person = Person.new\n    12: person.first_name = \"Zach\"\n    13: person.last_name = \"Smith\"\n => 14: binding.pry\n    15: person.full_name\n[1] pry(main)>\n```", "```php\nls\n```", "```php\n[6] pry(main)> ls\nself.methods: inspect  to_s\nlocals: _  __  _dir_  _ex_  _file_  _in_  _out_  person\npry_instance\n[7] pry(main)>\n```", "```php\ncd person\n```", "```php\nls\n```", "```php\n[7] pry(main)> cd person\n[8] pry(#<Person>):1> ls\nPerson#methods: first_name  first_name=  full_name  last_name  last_name=\nself.methods: __pry__\ninstance variables: @first_name  @last_name\nlocals: _  __  _dir_  _ex_  _file_  _in_  _out_\n  pry_instance\n[9] pry(#<Person>):1>\n```", "```php\n# pryable_example.rb\nrequire 'pry'\nclass Person\n  attr_accessor :first_name, :last_name\n  def full_name\n    puts \"#{first_name} #{last_name}\"\n  end\nend\nperson = Person.new\nperson.first_name = \"Zach\"\nperson.last_name = \"Smith\"\nbinding.pry\nperson.full_name\n```", "```php\nreload-method\n```", "```php\n     9: end\n    10:\n    11: person = Person.new\n    12: person.first_name = \"Zach\"\n    13: person.last_name = \"Smith\"\n => 14: binding.pry\n    15: person.full_name\n```", "```php\nperson.full_name\n```", "```php\n[1] pry(main)> person.full_name\nZach Smith\n=> nil\n[2] pry(main)>\n```", "```php\n!!!\n```", "```php\ngem install byebug\n```", "```php\nFetching byebug-11.1.3.gem\nBuilding native extensions. This could take a while...\nSuccessfully installed byebug-11.1.3\nParsing documentation for byebug-11.1.3\nInstalling ri documentation for byebug-11.1.3\nDone installing documentation for byebug after 4 seconds\n1 gem installed\n```", "```php\n# byeable_example.rb\nrequire 'byebug'\n[1,5,7,9].each do |index|\n  not_label = index ? \"NOT\":\"\"\n  output = \"#{index} is #{not_label} larger than 6\"\n  puts output\nend\n```", "```php\nruby byeable_example.rb\n```", "```php\n1 is NOT larger than 6\n5 is NOT larger than 6\n7 is NOT larger than 6\n9 is NOT larger than 6\n```", "```php\n# byeable_example.rb\nrequire 'byebug'\n[1,5,7,9].each do |index|\n  not_label = index ? \"NOT\":\"\"\n  output = \"#{index} is #{not_label} larger than 6\"\n  byebug\n  puts output\nend\n```", "```php\nruby byeable_example.rb\n```", "```php\n   1: # byeable_example.rb\n   2: require 'byebug'\n   3:\n   4: [1,5,7,9].each do |index|\n   5:   not_label = index ? \"NOT\":\"\"\n   6:   output = \"#{index} is #{not_label} larger than 6\"\n   7:   byebug\n=> 8:   puts output\n   9: end\n(byebug)\n```", "```php\nindex\n```", "```php\n1\n```", "```php\nnot_label\n```", "```php\n\"NOT\"\n```", "```php\ncontinue\n```", "```php\nindex\n```", "```php\n5\n```", "```php\nnot_label\n```", "```php\n\"NOT\"\n```", "```php\nexit\n```", "```php\n# byeable_example.rb\nrequire 'byebug'\n[1,5,7,9].each do |index|\n  not_label = index < 6 ? \"NOT\":\"\"\n  output = \"#{index} is #{not_label} larger than 6\"\n  puts output\nend\n```", "```php\nruby byeable_example.rb\n```", "```php\n1 is NOT larger than 6\n5 is NOT larger than 6\n7 is  larger than 6\n9 is  larger than 6\n```"]