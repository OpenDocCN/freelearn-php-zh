["```php\nadd_menu_page( __('UI Component Settings', 'wqkm' ), __('UI Component Settings', 'wqkm' ),  'manage_options','wqkm-settings', array( &$this,'ui_settings' ) );\n```", "```php\npublic function ui_settings(){\n  // Define global variables\n  // Load template and return to browser\n}\n```", "```php\n<?php\n global $wqkm_template_data;\n extract($wqkm_template_data);\n?>\n<form id=\"wqkm_slider_frm\" action=\"\" method=\"POST\" >\n <div id=\"wqkm-slider-msg\"></div>\n <table class=\"form-table\">\n   <tr>\n     <th><label><?php _e('Product Slider Images','wqkm'); ?>*</label></th>\n     <td> <div id=\"wqkm-slider-images-panel\"></div>\n       <input type=\"file\" name=\"wqkm_slider_image\" id=\"wqkm_slider_image\" value=\"\" />\n     </td>\n   </tr> \n   <tr>\n     <th>&</th>\n     <td><input name=\"wqkm_ui_submit\" id=\"wqkm_ui_submit\" type=\"button\" value=\"<?php _e('Add Image','wqkm'); ?>\" /></td>\n   </tr>\n </table>\n</form>\n```", "```php\nadd_action( 'wp_ajax_wqkm_save_slider_images', array( $this, 'save_slider_images') );\n```", "```php\npublic function save_slider_images(){\n global $wpdb; \n $file_nonce = isset( $_POST['file_nonce'] ) ? ($_POST['file_nonce']) :'';\n $user_id = get_current_user_id();\n\n if(check_ajax_referer( 'wqkm-private-admin', 'file_nonce',false )){\n   $result_upload = $this->process_file_upload();\n   if(isset($result_upload['status']) && $result_upload['status'] == 'success' ){\n     $file_date = date(\"Y-m-d H:i:s\"); \n     $uploaded_file_name = $result_upload['base_name'];\n     $slider_images = (array) get_option('wqkm_slider_images');\n     $slider_images[] = $result_upload['relative_file_path'];\n     update_option( 'wqkm_slider_images', $slider_images );\n     $upload_dir = wp_upload_dir();\n     $display_images = '';\n     foreach ($slider_images as $slider_image) {\n       if( $slider_image != '' )\n         $display_images .= '<img src=\"img/' . $upload_dir['baseurl'] . $slider_image . '\" style=\"width:100px;height:100px\" />';\n     }\n\n     $result = array( 'status' => 'success', 'msg' => $result_upload['msg'] , 'images' => $display_images );\n   }else{\n     $result = array( 'status' => 'error','msg'=> $result_upload['msg']);\n   }\n }else{\n   $result = array( 'status' => 'error', 'msg' => __('Invalid file upload request.','wqkm') );\n }\n echo json_encode($result);exit;\n}\n```", "```php\n<div id=\"banner-fade\">\n <ul class=\"bjqs\">\n <li><!-- Any content you like --></li>\n </ul>\n</div>\n```", "```php\nadd_shortcode( 'wqkm_product_slider', array( $this, 'product_slider') );\n```", "```php\npublic function product_slider( $atts, $content ){\n $sh_attr = shortcode_atts( array(\n   'width' => '520',\n   'height' => '320',\n ), $atts );\n\n $slider_images = (array) get_option('wqkm_slider_images');\n $upload_dir = wp_upload_dir();\n\n $display = '<div id=\"banner-fade\"><ul class=\"bjqs\">';\n foreach ($slider_images as $slider_image) {\n   if( $slider_image != '' )\n     $display .= '<li><img src=\"img/' . $upload_dir['baseurl'] . $slider_image . '\" /></li>';\n }\n $display .= ' </ul><div>';\n return $display;\n}\n```", "```php\nwp_register_style( 'wqkm-slider', WQKM_PLUGIN_URL . 'css/bjqs.css' );\nwp_register_style( 'wqkm-slider-demo', WQKM_PLUGIN_URL . 'css/demo.css' );\nwp_register_script( 'wqkm-slider', WQKM_PLUGIN_URL . 'js/bjqs-1.3.js', array('jquery') );\nwp_register_script('wqkm-front',WQKM_PLUGIN_URL .'js/wqkm-front.js', array('jquery','wqkm-slider') );\n```", "```php\njQuery(document).ready(function($) { \n  $('#banner-fade').bjqs({\n    animtype : 'slide',\n    height : WQKMFront.height,\n    width : WQKMFront.width,\n    responsive : true,\n    randomstart : true,\n    showmarkers   : false, \n  });\n});\n```", "```php\nclass WQKM_Product_Slider_Widget extends WP_Widget {\n  public function __construct() {\n    parent::__construct( 'wqkm_product_slider', esc_html__( 'Product Slider', 'wqkm' ), array( 'description' => esc_html__( 'Main product slider', 'wqkm' ) ) );\n  }\n\n  public function widget( $args, $instance ) {\n    echo $args['before_widget']; \n    echo do_shortcode('[wqkm_product_slider width=\"'.$instance['width'].'\" height=\"'.$instance['height'].'\" /]');\n    echo $args['after_widget'];\n  }\n\n  public function form( $instance ) {\n    $width = ! empty($instance['width']) ? (int) $instance['width']: 640;\n    $height= ! empty($instance['height']) ? (int) $instance['height']:320;?>\n    <p>\n      <label><?php esc_attr_e( 'Width:', 'wqkm' ); ?></label>\n      <input class=\"widefat\" id=\"<?php echo esc_attr( $this->get_field_id( 'width' ) ); ?>\" name=\"<?php echo esc_attr( $this->get_field_name( 'width' ) ); ?>\" type=\"text\" value=\"<?php echo esc_attr( $width ); ?>\">\n    </p>\n    <p>\n      <label><?php esc_attr_e( 'Height:', 'wqkm' ); ?></label>\n      <input class=\"widefat\" id=\"<?php echo esc_attr( $this->get_field_id( 'height' ) ); ?>\" name=\"<?php echo esc_attr( $this->get_field_name( 'height' ) ); ?>\" type=\"text\" value=\"<?php echo esc_attr( $height ); ?>\">\n    </p>\n <?php  }\n\n  public function update( $new_instance, $old_instance ) {\n    $instance = array();\n    $instance['width'] = ( ! empty( $new_instance['width'] ) ) ? (int)          $new_instance['width'] : '';\n    $instance['height'] = ( ! empty( $new_instance['height'] ) ) ? (int) $new_instance['height'] : '';\n    return $instance;\n  }\n}\n```", "```php\nadd_action( 'widgets_init', array( $this, 'register_product_slider_widget' ) );\npublic function register_product_slider_widget() {\n  register_widget( 'WQKM_Product_Slider_Widget' );\n}\n```", "```php\npublic function add_accordion_meta_boxes() {\n  add_meta_box( 'wqkm-accordion-meta', __('Accordion Details','wqkm'), array( $this, 'display_accordion_meta_boxes' ), $this->post_type );\n}\n```", "```php\npublic function display_accordion_meta_boxes( $accordion ) {\n global $wqkm,$template_data;\n $template_data['accordion_post_type'] = $this->post_type;\n $template_data['accordion_nonce'] = wp_create_nonce('wqkm-accordion-meta');\n $template_data['wqkm_tab_1'] = get_post_meta( $accordion->ID, '_wqkm_tab_1', true );\n\n ob_start();\n $wqkm->template_loader->get_template_part( 'accordion','meta');\n $display = ob_get_clean();\n echo $display;\n}\n```", "```php\n<td><?php wp_editor( $wqkm_tab_1, 'wqkm_tab_1' ); ?></td>\n```", "```php\nadd_shortcode( 'wqkm_accordian', array( $this, 'display_accordian') ); \npublic function display_accordian( $atts, $content ){\n $sh_attr = shortcode_atts( array( 'id' => '0' ), $atts );\n extract($sh_attr);\n\n $display = '<div id=\"accordion\">';\n if( trim( get_post_meta( $id, '_wqkm_tab_1' , true ) ) != '' ){\n   $display .= '<h3>'.get_the_title( $id ).'</h3>';\n   $display .= '<div><p>'.get_post_meta( $id, '_wqkm_tab_1' , true ).' </p> </div>';\n }\n\n // other fields\n $display .= '</div>';\n return $display;\n}\n```", "```php\nwp_register_style('wqkm-jquery-ui-style', WQKM_PLUGIN_URL . 'css/jquery-ui.css', false, null);\nwp_register_script( 'wqkm-accordion', WQKM_PLUGIN_URL . 'js/wqkm-accordion.js', array('jquery','jquery-ui-accordion') );\n```", "```php\nwp_enqueue_style('wqkm-jquery-ui-style');\nwp_enqueue_script('wqkm-accordion');\n```", "```php\njQuery(document).ready(function($) {\n  $( \"#accordion\" ).accordion({ collapsible: true, active: false, heightStyle: \"content\"   }); \n});\n```", "```php\nadd_action( 'wp_dashboard_setup', array( $this, 'dashboard_widgets' ) );\npublic function dashboard_widgets() {\n  wp_add_dashboard_widget( 'wqkm_post_attachments', __('Post Attachments','wqkm'), array( $this, 'post_attachments_widget' ) );\n}\n```", "```php\npublic function post_attachments_widget() {\n  echo do_shortcode('[wpquick_attachment_posts]');\n}\n```", "```php\nadd_filter( 'bulk_actions-users', array( $this, 'user_actions' ) );\n```", "```php\npublic function user_actions($bulk_actions) { \n  $bulk_actions['wpquick_featured_user'] = __('Mark Featured Profile','wqkm'); \n  return $bulk_actions;\n}\n```", "```php\nadd_filter( 'handle_bulk_actions-users', array( $this,'users_page_loaded'),10,3);\n```", "```php\npublic function users_page_loaded($redirect_to,$doaction,$featured_users ){\n  if ( $doaction !== 'wpquick_featured_user' ) {\n    return $redirect_to;\n  }\n\n  foreach ($featured_users as $featured_user) {\n    update_user_meta($featured_user, 'wqkm_featured_status', 'ACTIVE');\n  }\n\n  $redirect_to = add_query_arg( 'bulk_featured_users', count( $featured_users ), $redirect_to );\n  return $redirect_to;\n}\n```", "```php\nadd_filter( 'manage_users_columns', array( $this,'manage_user_custom_columns') );\nadd_action( 'manage_users_custom_column', array( $this, 'manage_user_custom_column_values' ), 10, 3 );\n```", "```php\npublic function manage_user_custom_columns( $column ) {\n $column['featured_user_status'] = __('Featured Status','wqkm');\n return $column;\n}\n```", "```php\npublic function manage_user_custom_column_values( $val, $column_name, $user_id) {\n  $featured_user_status = get_user_meta( $user_id ,'wqkm_featured_status', TRUE);\n  $featured_user_status = ( $featured_user_status == 'ACTIVE') ? __('ACTIVE','wqkm') : __('INACTIVE','wqkm');\n\n  switch ($column_name) {\n    case 'featured_user_status' :\n      return $featured_user_status;\n      break;\n    default:\n      return $val;\n      break;\n  }\n}\n```", "```php\nadd_filter('manage_users_sortable_columns', array($this,'users_sortable_columns'));\npublic function users_sortable_columns( $columns ) {\n  $columns['featured_user_status'] = 'featured_user_status';\n  return $columns;\n}\n```", "```php\nadd_action( 'pre_user_query', array( $this, 'users_orderby_filters' ) );\npublic function users_orderby_filters( $userquery ){\n  global $wpdb;\n  if( 'featured_user_status' == $userquery->query_vars['orderby'] ) {\n    $userquery->query_from .= \" LEFT OUTER JOIN $wpdb->usermeta AS wpusermeta ON ($wpdb->users.ID = wpusermeta.user_id) \";\n    $userquery->query_where.= \" AND wpusermeta.meta_key='featured_user_status' \";\n    $userquery->query_orderby = \" ORDER BY wpusermeta.meta_value \".( $userquery->query_vars[\"order\"] == \"ASC\" ? \"asc \" : \"desc \" ); \n  }\n}\n```"]