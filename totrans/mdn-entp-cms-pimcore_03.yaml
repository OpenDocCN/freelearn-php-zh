- en: '*Chapter 3*: Getting Started with Pimcore Admin UI'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we will examine all the components and menus of the Pimcore
    administration interface, the "control room" from which you can do most of the
    operations necessary for the management of your website. By reading this book,
    you will be able to build a site from scratch.
  prefs: []
  type: TYPE_NORMAL
- en: For getting your website completed, Pimcore allows you to create bundles, modify
    core components, or overwrite most of the parts that make it up (from controllers
    to models, from views to routing rules, and so on). All of these aspects will
    be explored later in the book, but you cannot tackle these topics without first
    learning how to move through the web interface as a user.
  prefs: []
  type: TYPE_NORMAL
- en: In particular, in this chapter, we will discover the most useful tools to configure
    your site and where to find them on the administration page.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the Pimcore Architecture
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exploring the UI Components
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Working with the grid component
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Inspecting the menus
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: So let's get started with a brief introduction to the Pimcore architecture.
  prefs: []
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To follow the lessons in this chapter, you do not need more than a running Pimcore
    instance. You can just read through the chapter, but if you want to practice,
    you can open Pimcore and follow along.
  prefs: []
  type: TYPE_NORMAL
- en: All you need to do here is just follow the instructions in [*Chapter 2*](B17073_02_ePub_RK.xhtml#_idTextAnchor044)*,
    Setting Up Your Pimcore Development Environment*, for installing an empty Pimcore
    instance.
  prefs: []
  type: TYPE_NORMAL
- en: Once this is done, can just open your browser and type http://localhost and
    navigate around the UI.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the Pimcore Architecture
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this short section, we will look at a simplified outline of the Pimcore architecture,
    with particular attention paid to that part of the architecture that we will focus
    on in our discussion as we go through this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the following diagram, we can take a look at the Pimcore architecture, and
    understand which part of Pimcore we will be focusing on in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.1: Pimcore Architecture'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_3.01_B1073.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 3.1: Pimcore Architecture'
  prefs: []
  type: TYPE_NORMAL
- en: 'As you can see in the previous diagram, the starting point for our journey
    of discovering Pimcore is indicated by the dashed rectangle that contains the
    text: **YOU ARE HERE**.'
  prefs: []
  type: TYPE_NORMAL
- en: Just to get an idea of how Pimcore is composed in all its parts, let's look
    at each aspect of the diagram; even if what we see is a simplified version of
    the Pimcore architecture, we can identify all the important parts of the platform.
    We won't go into detail on each part, but we can still describe them quickly.
  prefs: []
  type: TYPE_NORMAL
- en: 'The **PIMCORE UI LAYER** is the user interface layer, that is, the entry point
    for all interactions with the users. Inside we can identify two further aspects,
    the **ADMIN UI** and the **PUBLIC UI**: this division between public and private
    is necessary to keep the services related to the administration, usable only by
    users with administration roles, decoupled from public ones that all users can
    use.'
  prefs: []
  type: TYPE_NORMAL
- en: '**APIs** refers to the layer through which third-party software can access
    the Pimcore, interacting with its features and data; the possibilities of the
    iteration are many, such as importing data, updating data, exporting data, creating
    content, and so on. Access to all these operations within this layer is possible
    using communication protocols, such as a REST API or GraphQL, which expose their
    services in this part of Pimcore.'
  prefs: []
  type: TYPE_NORMAL
- en: Finally, **PIMCORE CORE ARCHITECTURE** is the layer containing the business
    logic layer, the data models, the data access layer for database access, the templating
    engine for creating HTML pages – in other words, this is the core of Pimcore.
    Within the book, we will refer to this part as **Pimcore admin**, or the **Admin
    Page**, or even the **Pimcore Dashboard** in some cases.
  prefs: []
  type: TYPE_NORMAL
- en: Let's begin our journey through the administration of Pimcore, starting from
    the UI components.
  prefs: []
  type: TYPE_NORMAL
- en: Exploring the UI Components
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Pimcore is a huge environment, supported by an equally important and extensive
    framework (Symfony), and this can be a bit confusing, especially for those new
    to Pimcore. But like all long journeys, we have to start with one step. Here's
    our first one. Let's log into the administration panel.
  prefs: []
  type: TYPE_NORMAL
- en: 'First of all, we need to access the Pimcore administration; to do this, we
    must log in to the administration page by visiting the page [yoursite.com/admin/](http://www.yoursite.com/admin/).
    Here is the first screen we are faced with, and we are welcomed by the Pimconaut,
    the Pimcore mascot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.2: Pimcore Administration Login Page (the image on this page changes
    from time to time)'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_3.02_B1073.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 3.2: Pimcore Administration Login Page (the image on this page changes
    from time to time)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Once logged in, we will be on the administration page, the Pimcore control
    room. In the next screenshot, we will see how the control room looks:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.3 – Pimcore administration'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_3.03_B1073.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 3.3 – Pimcore administration
  prefs: []
  type: TYPE_NORMAL
- en: 'As we can see, the Pimcore dashboard is divided into four parts that will be
    discussed in this section:'
  prefs: []
  type: TYPE_NORMAL
- en: Sidebar Menu
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Left Sidebar
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Main frame
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Right Sidebar
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Let's take a look at each one now.
  prefs: []
  type: TYPE_NORMAL
- en: Sidebar Menu
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The sidebar menu is the leftmost black bar you see. It contains two parts:'
  prefs: []
  type: TYPE_NORMAL
- en: The first part at the top contains all the actions necessary for the development
    and configuration of the platform, from languages to routing rules, and research
    to creating objects.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The second part, at the bottom, contains information about the system and user,
    notifications, and the Pimcore logo.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Just above the lower section of the sidebar, the Symfony logo is visible. Symfony
    is the PHP framework on which Pimcore was developed; its engine in other words.
    Everything done on Pimcore goes through this framework. When you click on the
    Symfony logo, another thin toolbar appears at the bottom of the page, as can be
    seen in this screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.4: Symfony Toolbar'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_3.04_B1073.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 3.4: Symfony Toolbar'
  prefs: []
  type: TYPE_NORMAL
- en: 'This new menu contains some basic information about the system, such as memory
    usage, current user, Cache usage, or Database queries. Moving the mouse over it,
    some pop-up windows will appear with additional information, as shown in this
    next screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.5: Symfony toolbar and additional details'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_3.05_B1073.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 3.5: Symfony toolbar and additional details'
  prefs: []
  type: TYPE_NORMAL
- en: When clicking on the items, a new page is loaded that contains more detailed
    information about each part of the system. If you need to have even more information
    than this about the system, you can click on one of the toolbar entries and a
    page will open where there is much more information about caches, logs, events,
    routines, and all the other parts of Symfony used by Pimcore.
  prefs: []
  type: TYPE_NORMAL
- en: Left sidebar
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Always on the left, next to the menu sidebar, there is a second sidebar; this
    one contains shortcuts to documents, assets, and data objects. We will discuss
    them later in the following chapters, but they are the most common functionalities
    that we will use in creating beautiful Pimcore websites.
  prefs: []
  type: TYPE_NORMAL
- en: Main frame
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The main frame is the central panel of the Pimcore admin interface. All elements
    that need to be changed are loaded here. In other words, this is the place where
    things related to the menu items are opened. The following is a screenshot of
    the main frame in action:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.6: Pimcore administration with some tabs opened'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_3.06_B1073.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 3.6: Pimcore administration with some tabs opened'
  prefs: []
  type: TYPE_NORMAL
- en: As you can see in the previous screenshot, there are some documents opened,
    each in a separate tab. The main frame is, in other words, the container of all
    the configuration windows that will be open during our work on Pimcore.
  prefs: []
  type: TYPE_NORMAL
- en: Right sidebar
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The sidebar on the right of the main frame is a place where you can move components
    of the left sidebar. This can be done easily by clicking on the arrow (see *Figure
    3.3*). This layout is useful when you have to handle many items at once and you
    want to keep them under control. For example, you may want to navigate the pages
    and, at the same time, have the products ready to be used on the page. So you
    may use the right toolbar for showing data objects. We will learn how we can model
    product entities using data objects in [*Chapter 5*](B17073_05_ePub_RK.xhtml#_idTextAnchor093)*,
    Exploring Objects and Classes*.
  prefs: []
  type: TYPE_NORMAL
- en: 'Pimcore allows changing the sidebar configuration, including by adding menu
    items, which is often useful for quick access to specific features. In the case
    of e-commerce, for example, it might be useful to have shortcuts available for
    orders or customers. An example of these customization capabilities can be seen
    in the demo examples on the official Pimcore site: [https://demo.pimcore.fun/admin/](https://demo.pimcore.fun/admin/).'
  prefs: []
  type: TYPE_NORMAL
- en: After this brief introduction about menus, we can see in detail all the elements
    we have just listed, starting from the main component of the Pimcore dashboard,
    the main frame. Any object opened from the sidebar (or the menu entries) is opened
    inside the main frame as a new tab. In other words, the main frame is a container
    for all the editing tabs, which the user can close one by one or all together
    just as you usually do with a browser.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we're familiar with the UI components, we can go a little further,
    and start analyzing the other parts in detail, such as the grid component and
    menus. In the next section, we will move on to take a look at the grid component,
    where we will spend most of our time when working with Pimcore data.
  prefs: []
  type: TYPE_NORMAL
- en: Working with the grid component
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this session, we will analyze in detail how the grid component works. We
    will discover how to perform simple activities such as searches. Moreover, we
    will also understand what each of the functionalities of the main buttons present
    on the toolbar is.
  prefs: []
  type: TYPE_NORMAL
- en: 'First of all, let''s take a look at the following screenshot, and see what
    the grid looks like during use:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.7: Grid component'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_3.07_B1073.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 3.7: Grid component'
  prefs: []
  type: TYPE_NORMAL
- en: 'As we can see from the preceding screenshot, there are at least four points
    of interest in this component:'
  prefs: []
  type: TYPE_NORMAL
- en: The first tab bar with the opened entity, already seen before
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The toolbar with buttons for the main actions
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The second tab bar for a specific document
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The opened document
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We have listed the elements that make up the grid component seen in *Figure
    3.7*, so now we can describe them in more detail, starting from the first.
  prefs: []
  type: TYPE_NORMAL
- en: First tab bar
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This first element we have already seen and it does not need further explanation;
    you can refer back to the *Main frame* section if required.
  prefs: []
  type: TYPE_NORMAL
- en: Toolbar
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now let's see the toolbar, along with some of its action buttons.
  prefs: []
  type: TYPE_NORMAL
- en: Depending on the type of object we are modifying, and in some cases depending
    on the publishing state of the document itself, it is possible to have different
    buttons in this toolbar. In other words, the toolbar changes based on the element
    you are editing (that is, a document or object) and on its publishing status.
    For example, if we are editing a web page, depending on whether it is published
    or yet to be published, we will see the **SAVE** and **SAVE & PUBLISH** buttons
    or the **SAVE & PUBLISH** and **Unpublish** buttons.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows a toolbar for different objects – for a folder,
    a web page, and then an object in a different state:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.8: Toolbars displayed when editing folders, web page, and an object
    in a different state'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_3.08_B1073.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 3.8: Toolbars displayed when editing folders, web page, and an object
    in a different state'
  prefs: []
  type: TYPE_NORMAL
- en: As you can see in the previous screenshot, there are different numbers of buttons
    in the top toolbar – this is because the actions change dynamically depending
    on the type of object we are editing.
  prefs: []
  type: TYPE_NORMAL
- en: For example, the **SAVE & PUBLISH** button is always present in all elements
    that must be made visible, such as web pages or objects. For other elements of
    internal use, such as folders, it is not visible because it is not necessary.
  prefs: []
  type: TYPE_NORMAL
- en: 'In *Figure 3.8*, you can see some buttons inside a red rectangle. These three
    buttons, always present in the toolbar, are as follows (from left to right):'
  prefs: []
  type: TYPE_NORMAL
- en: '**Reload**: Reloads the document (not the whole page).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Show in tree**: When you click this button, Pimcore identifies and selects
    the current object in the tree file on the left.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Info**: This button opens a modal window with some information about the
    document we are editing.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Now that we have seen the second element of the grid component, let''s move
    to the next section, and analyze the third element of the four we have listed:
    the second tab bar.'
  prefs: []
  type: TYPE_NORMAL
- en: Second tab bar
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There is another tab bar, below the toolbar, which contains a variable number
    of tabs, each of which will display a set of properties for the object we are
    editing. Also, in this case, as we have just seen for the tab bar, the number
    and type of tabs change according to the object and its state when we are modifying
    it.
  prefs: []
  type: TYPE_NORMAL
- en: Depending on the element we are editing, whether it is a web page, an object,
    or a folder, the number of tabs changes along with their meanings. For example,
    as shown in *Figure 3.8*, if we are editing a web page, we will have the **SEO
    & Settings** and **Preview** tabs, while if we are editing an object, we can see
    the **Properties** tab.
  prefs: []
  type: TYPE_NORMAL
- en: 'In both cases, there is the **Versions** tab; if we open this tab, the contents
    will be shown, as can be seen in this screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.9: The Versions tab for an object'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_3.09_B1073.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 3.9: The Versions tab for an object'
  prefs: []
  type: TYPE_NORMAL
- en: 'As we can see from this screenshot, the content of the **Versions** tab is
    exactly what we expected: all the information about the changes made to the object,
    the date when they were made, and who made them. By clicking on any version you
    can see how the document was previously, and by selecting two (*Ctrl* + click)
    you can see the differences between the two versions.'
  prefs: []
  type: TYPE_NORMAL
- en: With this section, we have also described the third element of our list, the
    second tab bar. We can move on to the fourth and final item on our list, the opened
    document.
  prefs: []
  type: TYPE_NORMAL
- en: The opened document
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This is the part where the content of the open tab is displayed. As you can
    imagine, it is the largest part of the whole component, because it contains all
    the properties and actions necessary to modify and configure the document.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, as we can see in *Figure 3.9*, the version tab divides this component
    into two parts: on the left, in a table, are displayed all the changes made to
    the document, while on the right, a preview of the selected changes is displayed.'
  prefs: []
  type: TYPE_NORMAL
- en: Each tab will therefore contain different layouts and properties based on the
    document and what we are editing.
  prefs: []
  type: TYPE_NORMAL
- en: In this section, we have seen in detail the parts that make up the grid component,
    a fundamental tool for working with documents. The last part of this chapter is
    dedicated to the menus, which we are going to explore now.
  prefs: []
  type: TYPE_NORMAL
- en: Inspecting the menus
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now we will deal with the menus, which, as often happens, play a very important
    role due to the large number of actions that we find inside. We cannot look at
    them in detail one by one, so we will limit ourselves to discussing the scope
    of each menu and what we can do with the items we find inside it. This is essential
    for getting moving inside the Pimcore interface and following the lesson that
    we will learn in the next chapters.
  prefs: []
  type: TYPE_NORMAL
- en: 'All of the menus are shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.10: The Pimcore menus'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_3.10_B1073.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 3.10: The Pimcore menus'
  prefs: []
  type: TYPE_NORMAL
- en: 'From left to right, the menus are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**File**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Tools**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Marketing**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Settings**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Search**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Clicking on the menu items opens a configuration page in the main frame as a
    new tab. However, there are menu items that contain a submenu (identifiable by
    the arrow on the right after the item), which appears when the mouse is moved
    over the item.
  prefs: []
  type: TYPE_NORMAL
- en: As we said, it is not possible to describe the functionality of each of the
    items in all menus, so let's now look at what the main commands we can find inside
    are.
  prefs: []
  type: TYPE_NORMAL
- en: File
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The file menu, as we usually know, contains the actions to open documents (of
    various kinds), close all open tabs, navigate the Pimcore site to read the official
    documentation, or show the Pimcore information modal. There is also the shortcut
    for the dashboard page, where we can find some graphs that display the number
    of changes made in the last period, or the list of the last modified elements.
  prefs: []
  type: TYPE_NORMAL
- en: Tools
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this menu, we can find some useful tools for site management, such as redirects,
    site language management or emails sent, and the ability to send test emails.
    In addition to this, there are other ancillary features, such as notes and a useful
    link to the database administration page. In this menu, there is also some information
    about the system, such as the cache status or the PHP version in use.
  prefs: []
  type: TYPE_NORMAL
- en: Marketing
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This menu is dedicated to marketing management, including features for search
    engine optimization, statistical reports, the configuration for analysis tools
    such as Google Tag Manager and Google Analytics, tools that those of you who work
    in web marketing know the importance of for monitoring visits to your website.
  prefs: []
  type: TYPE_NORMAL
- en: Settings
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this menu, we find all the actions necessary for the configuration of our
    site. It is possible, for example, to create and modify document types, general
    properties of objects, but also to manage users and their roles, configure the
    system in all its parts (time zone, default language,email settings, and so on),
    create static routes, and manage the cache or translations.
  prefs: []
  type: TYPE_NORMAL
- en: As we could have guessed, this is one of the most important menus, but it is
    not necessary to remember exactly which items it contains, we just need to remember
    that here we can find most of the configurations that we will have to do on our
    site from an administrative point of view. With practice and experience, we will
    be able to memorize all the functionalities of the various menus, although now
    this may seem like a distant goal.
  prefs: []
  type: TYPE_NORMAL
- en: 'Just to understand how many things can hide inside even just a menu item, here
    is the **System Settings** page:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.11: The System Settings page'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_3.11_B1073.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 3.11: The System Settings page'
  prefs: []
  type: TYPE_NORMAL
- en: As we can see, each section can be expanded by clicking on the **+** to access
    the configuration parameters of the section itself.
  prefs: []
  type: TYPE_NORMAL
- en: Search
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Finally, in this last menu, you can find the shortcuts for the general search
    functionality, as well as for the specific search function for certain elements
    of the site such as assets, documents, and data objects.
  prefs: []
  type: TYPE_NORMAL
- en: In this section, we have seen what each of the menus are and the many features
    available in Pimcore. It was not possible to describe them individually, but we
    still discussed the most important items in the book, and we will leave the fun
    of exploring all the menu items that we have not described to you.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: After reading this chapter, you now know how to move inside the Pimcore administration
    UI, where you can find the most important tools for Pimcore governance. We talked
    about the actions of the various menus, how to use the grid component, and what
    the main elements of the administration UI are. This is quite a large amount of
    information so far but it is essential for understanding what we will study in
    the next chapters.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we are aware of how to navigate the most important of Pimcore's functionalities,
    we can move on to the next step, which is learning how to create documents using
    Pimcore.
  prefs: []
  type: TYPE_NORMAL
