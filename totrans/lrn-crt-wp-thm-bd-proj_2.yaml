- en: Building a WordPress Theme
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we''ll jump into more details and get our feet wet. In the
    previous chapter, we covered the basics, but now we''ll use some of the more advanced
    concepts to build a WordPress theme. Here we will cover the following concepts:'
  prefs: []
  type: TYPE_NORMAL
- en: Custom template pages
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Archived pages
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Post formats
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Custom home pages
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Let''s take a quick look at the project:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/bd1a0cdc-1e15-41d6-8109-d328b78f08db.png)'
  prefs: []
  type: TYPE_IMG
- en: In the preceding image, you can see the WordpressDev home page with some widgets
    that we'll implement, such as the showcase. You can also see three box widgets.
  prefs: []
  type: TYPE_NORMAL
- en: Post formats
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'When you visit the blog page, you can see we have multiple post types:'
  prefs: []
  type: TYPE_NORMAL
- en: Gallery posts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Linked posts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A-side posts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Regular blog posts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'In the following screenshot, you can see Gallery post and the linked posts:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/dd09d23f-3d34-40a6-8cb1-a2db3de8d746.png)'
  prefs: []
  type: TYPE_IMG
- en: 'This is how the A-side post looks:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/320f269b-1817-4779-9486-cb3578389aa1.png)'
  prefs: []
  type: TYPE_IMG
- en: 'This is what a regular blog post looks like:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4902d9ca-77aa-4088-81d5-65f90addc7fe.png)'
  prefs: []
  type: TYPE_IMG
- en: 'When we click on Read More, it takes us to a single page where we have our
    comment form and the customized comments interface, as shown in the following
    image:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/0e1fb70d-46d6-4ddd-8a59-a5d93150ff9f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We will now see how to create custom layouts; for instance, the About page,
    shown in the following screenshot, is in a layout called Company, where we have
    the phone number displayed in a `div` class:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/8c7c8fee-1e76-4392-ac71-d16ce008fb2f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now let''s click on Posts or Pages and then on About:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c4cf5a53-c4e7-4f1f-897d-76267fadda03.png)'
  prefs: []
  type: TYPE_IMG
- en: 'You''ll see that we have Default Template and Company Layout in the Template
    option:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9948aa06-31d8-4869-9bba-4afed505994c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now we will see how to create a submenu for pages that have parents; for instance
    our About page has two children, FAQ and Our Team, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/23b0711d-d18e-40cf-af0e-993296eb74cd.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now let''s take a look at an archive listing. Go to the blog page and click
    on one of categories such as Technology:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/21247cee-9c94-4244-a232-68a2fbfe1490.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We can see that the page displays all the posts in Technology. Also, if we
    go to the username and click on that, it''ll show you posts by that author, and
    as you can see in the following image, it''s a custom layout for the archive pages:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f2806178-1520-406c-a75c-f9198f641f2d.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Let''s go ahead and search. We have a special theme or a special layout for
    that, as you can see in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/cdf2cfe4-ea72-4fdc-a934-da24870dbb61.png)'
  prefs: []
  type: TYPE_IMG
- en: We'll get in a little deeper than we did in the first chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a design using HTML and CSS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let's see how to create our theme, but before we get into WordPress, we'll first
    map out and just create the design using HTML and CSS.
  prefs: []
  type: TYPE_NORMAL
- en: Usually, when we build a WordPress theme, or a Drupal or Joomla theme, you can
    usually create the design first using just static HTML and CSS.
  prefs: []
  type: TYPE_NORMAL
- en: Building the HTML body
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As you can see in the following screenshot, we have an empty folder called `advanced-wp-html`,
    and we'll create a couple of files here. First, we'll create an `index.html` file,
    and then we'll create our style sheet, which will just be `style.css`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s open both the files with Sublime editor. In the `index.html` file, add
    in our core html markup, as shown in the following code block:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'We''ll update the code, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Here, we have `Advanced WP Theme` as the title and added a link to our style
    sheet, and put an `href` attribute that's going to go to `style.css`. Then down
    in the body, we created our markup with the header. Since we're using HTML5 syntax,
    we used a `<header>` tag, and created a `<div>` with the `container` class. Inside
    the `container` class, we have a `<h1>` tag, which says `Advanced Wordpress Theme`;
    of course, when we actually create the WordPress theme, this will be dynamic and
    you'll be able to change it from within the admin area, but for now we'll just
    going to stick some static text in here.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, after the `<h1>` tag, we''ll have another `div` class and we''ll give
    this an `h_right` class for a header right. And this is where our search form
    is going to go, so for now we''ll just put a `<form>` tag and an `<input>` tag
    as shown in the following code block. We''ll give it a `placeholder`, and just
    say `Search...`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, let''s go underneath `</header>` and create our navigation, as shown in
    the following code block:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: As you can see, we have used a `<nav>` tag with `nav` class and added `main-nav`
    to it. Next we added `<div>` with `class="container"` just to move everything
    towards the center. Then, inside, we have placed `<ul>` with some `<li>` tags
    and some links. We have added `Home`, `About`, and `Services`. However, since
    we're not actually going to have a `Services` page, we will have an `About` page
    so that we have some perspective on using on an inner page. So, `index` page will
    be the blog post, `About` will be just a regular page.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, let''s add the following code after the `</nav>` tag:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Here, we have added a `div` element, with a `container` class, and a `content`
    class. Then, inside, we have added another `div` element, with a `class="main
    block"`. Here, `block` is a class that we can use all around the site, we can
    use it for widgets as well; it's just going to have some padding and also a border.
  prefs: []
  type: TYPE_NORMAL
- en: Now inside this `div`, we have our main post; so each post has an `<article>`
    tag with a `post` class. We have added a paragraph that has a `meta` class. This
    is where things such as the date of the posts and the author name will go. This
    might change a little bit as far as the format goes when we actually build the
    WordPress theme; for now we're just going to say `Posted at 11:00 on May 9 by
    admin`. So it'll look something like that.
  prefs: []
  type: TYPE_NORMAL
- en: 'We also need a title. For that, put an `<h2>` tag and say `Blog Post 1`, as
    shown in the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Now let's just add some content real quick. We will go to the [www.lipsum.com](http://www.lipsum.com)
    and click on Generate Lorem Ipsum.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/50180b99-18fd-4721-b6ae-99ef4d8c0972.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We will copy and paste some content and then we will add some paragraph tags.
    The next thing we need after that is a `Read More` button. We''ll add a link;
    we''ll give it a class of `button`, as shown in the following code block:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Then we'll copy the entire article post and paste it two more times. If we want
    to take a look at it, open the `index.html` file.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a67469b4-55d9-44d6-b49a-bfb488ffe7a9.png)'
  prefs: []
  type: TYPE_IMG
- en: 'You can see in the preceding screenshot that it does not look pretty yet. So,
    now we''ll add a footer. To do this, let''s go to the last `<div>` tag and enter
    the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Here, we have added a `<footer>` tag with a `"main-footer"` class; we also
    have a container for it. In the container, we have a left side and a right side
    of the footer; so we have added `<div class="f_left">` and `f_right`. So, on the
    left-hand side, we will have a paragraph that will have a copyright, and then
    on the right-hand side, we will have another menu. For that, we have then copied
    the `<ul>` from above and pasted it. This is enough for the markup for the HTML.
    Now let''s reload the file:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/82c4b61a-38a1-4bdb-997d-533a3680d182.png)'
  prefs: []
  type: TYPE_IMG
- en: We have a footer down here; It looks pretty horrible, that's because we have
    no styling. Next, we will see how to add CSS.
  prefs: []
  type: TYPE_NORMAL
- en: Adding CSS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We will now see how adding CSS makes our page look a lot better. We have our
    `style.css` created; to it, let''s add the body, as shown in the following code
    block:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Here, we have just added a `font-family` of `Arial`; the color of the text is
    going to be a really dark gray. We have set the body margin to `0` and the padding
    to `0`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s start with some core styles for the unordered list. I want to just take
    off the margin and the padding, using the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Now let''s add the links or the `a` tags, as shown in the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Here, we have added a light blue color, `009acd`, and set `text-decoration`
    to `none`. We also require a hover color; in this case, the hover color will just
    be dark gray. Next, we have `container`, which brings everything to the middle.
    We have set a width of `960`, and set `margin` to `auto`. The `overflow` is set
    to `auto`. We have `header` with a light gray `background`; we have set the padding
    of the header to `10px` and `border-bottom` to `3px solid`, and it's also of that
    same light blue color.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now let''s add `header h1` with a margin and padding of `0`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: As you can see, we have also added the color as light blue, and we want to float
    it to the left.
  prefs: []
  type: TYPE_NORMAL
- en: 'Then, we also want that `<h1>` to be a link. For this, we will go to the `index.html`
    file and wrap it in `a` tag, as shown in the following code block:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, we will create `header`, `h1` and `a` with the color of light blue. The
    text-decoration is set to `none`, as you can see in the following code block:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'Now let''s add a slogan or a tagline, because WordPress by default has an option
    for that. So right inside of the `<h1>` tag, we will put a slogan in a `<small>`
    tag, which will say `Another Wordpress Theme`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s style that using the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: We have added `header` `small`, and given it a color of dark gray. We have set
    `margin-left` to `1px` margin, and `font-size` to `13px`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now for the right side of the header, add the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: We have `header .h_right` and we'll float that to the right.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, since it has an input, we''ll style the input. Let''s just make sure it''s
    only for the text input. To do this, we will enter the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Here, we have entered `type="text"` and set a width of `250px`. We have also
    set a padding of `5px`, and a margin-top of `5px`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s save it and take a look:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a9cbe045-7996-462d-9075-e270fe9a6838.png)'
  prefs: []
  type: TYPE_IMG
- en: We can see our header.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, we''ll work on the navigation. We want to have the main `nav` div for
    stuff like the height, background color, and similar customizations; however,
    we do want to have just a regular `nav` class to do the floats, so that our footer
    menu can have our list item floated, and stuff like that. So we will not put anything
    for that yet. We want to do `li` of the `nav` element. We''ll make sure that we
    have that. You can see in the code we entered so far that we have the `nav` class
    and `main-nav`. Now, we''ll float the list items to the left, and we''ll enter
    `display:inline` and set a padding on the right of `15px`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, we''ll add `nav.nav a`, and make sure that the text-decoration is set
    to `none`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 'Now let''s do `main-nav`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: Here, we have set the height to `45px`, `overflow` is `hidden`, and we have
    set the background to dark gray. The color of the text will be white, and `padding-top`
    is set to `7px`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now let''s add `main-nav li`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: 'We have set height to `40px`, and `line-height` to `40px`. Next, we''ll add
    the `a` tag:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: Here we set the color as white, `text-decoration` as `none`, and `padding` as
    `8px`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now we need the hover state:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: Here we have `nav.main-nava:hover`, and the hover `color` is set to light blue.
  prefs: []
  type: TYPE_NORMAL
- en: 'We''ll save this, and look at our navigation:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2ace161a-d362-4aa7-b9d4-f946b0337c96.png)'
  prefs: []
  type: TYPE_IMG
- en: 'As you can see, the whole highlighted area has a class of `content`, we just
    want to push it down a little bit and set the line height of all the text:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: We have `.content` with `margin-top` set to `30px` and `line-height` to `1.5em`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now we will include a sidebar since we have not done that earlier. For this,
    let''s open the `index.html` file and add the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: We have put our sidebar right underneath the closing `</div>` tag. We have added
    a `div class` with a class of `side`. We have also added a `<div>` tag inside
    called block. Each element in the sidebar should have a class of `block`. Then
    we have an `<h3>` tag, which says `Sidebar Head`, and we have put a paragraph
    for which we have grabbed some text. Then, under this, we have placed a button,
    or a link that is formatted like a button. Now we can see our sidebar.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s go back to the `style.css` file. Here, we''ll enter `.main`, which we''ll
    float to the left, and we enter a width of `65%` for it. Then, let''s add a width
    of `30%` for side, and float it to the right. Next, for the block style, we will
    set a border of light gray, which is `1px` solid. We will also add some padding
    of `5px 15px 25px 15px` and set the background to a really light gray and `overflow`
    to `hidden`. For `h3` in the block, we will set `border-bottom`, which will be
    light gray, and solid of `1px`; we''ll also set a padding of `10px` to the bottom:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s take a look at this. You can see that now we have our main area and
    the sidebar:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/b936bacb-7705-46ff-b472-82a4d61be549.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Next, let''s add the article. We will place an `article` tag with a `post`
    class, and we will add `border-bottom`, `margin-bottom`, and `padding-bottom`,
    as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: 'Now let''s style the meta area highlighted in the following image; we will
    give it a blue background:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/04eeea7e-022f-4318-b097-ccf5692d3f39.png)'
  prefs: []
  type: TYPE_IMG
- en: 'To do this, let''s enter the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: 'We have entered `article.post .meta` with a padding of `7px`. We also added
    the `button` class with the padding set to `10px 15px`. We also displayed it as
    an inline block. Let''s take a look now:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/031a96cf-22bb-45a2-9e52-5e5a741bd3bd.png)'
  prefs: []
  type: TYPE_IMG
- en: This looks pretty good.
  prefs: []
  type: TYPE_NORMAL
- en: Let's add the footer now. We will enter `footer`, give it the `.main-footer`
    class, and set a margin on the top of `40px`. We'll align everything to the center
    and give it a dark gray background. We'll set `color` as white, and height as
    `60px`, `padding-top:10px` and `overflow` as `auto`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next we will add the left- and right-hand side of the footer. To do this, we
    will enter `footer.main-footer .f_left` with a left float, and we''ll do the same
    thing for the right-hand side, giving it a right float:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: 'We will now move on to the menu. We''ll enter `ul` with an inline display,
    and then we have `li`, as shown as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: For `li`, we have `float:left`, `padding-right` set as `10px`, and `list-style`
    set to `none`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Lastly, we''ll color the links white. Now, let''s take a look:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d886e227-15f5-45b7-b6ec-7776d5e4e0db.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We''ll just want to push footer down a little bit. To do this, enter the following
    code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, look at it:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2b1717d0-5814-46c5-8494-895c1da8dd35.png)'
  prefs: []
  type: TYPE_IMG
- en: This looks pretty good; it's a very simple design, we didn't want to go all
    out because the main point of this is to get you familiar with the syntax to create
    a WordPress theme, not so much about creating a great design. So now that we're
    done with HTML and CSS, we can move on to create our WordPress theme.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a WordPress theme
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now we'll convert our HTML template into a WordPress theme. I have a fresh install
    of WordPress here with just the default twentysixteen theme. We will go to the
    WordPress folder, `wp-content` and then in the `themes` folder, we will create
    a new folder and name it `advanced-wp`.
  prefs: []
  type: TYPE_NORMAL
- en: Here we will create a `style.css` file and also an `index.php` file.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now let''s open the style sheet. Here we will put our declaration first, so
    that WordPress can see the theme. We will set `Theme Name` as `Advanced WP` and
    enter a value for `Author`. Next we will add `Author URI`, a description, and
    a version:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: Now we do have a screenshot as well in our project files, so we will add that.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s go to `C:`. Since I''m using AMPPS, I will go to my `www` folder and
    then to `wpthemes\content\themes`, and then to `advanced-wp`. We will go ahead
    and paste the image called `screenshot.png` here. If we go to the backend of WordPress,
    and we go to Appearance and then Themes, you can see that we have the AdvancedWP
    theme:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e4a5fba4-19f0-4bae-afae-01468a44fac8.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We will now go ahead and activate this. If we go to the frontend and reload,
    we just see a blank white page, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/64e6c642-85d3-4a1d-88d2-f11eaa0fba3e.png)'
  prefs: []
  type: TYPE_IMG
- en: Let's add styles here. Open the `style.css` file from the HTML template. We
    will copy all the code and paste it right in the style sheet.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will save this, and then in the `index.php` file, we will copy everything
    from the `index.html` file and paste it in `index.php`:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Save it and reload the frontend. We''ll see all the HTML and static HTML:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/b8c96eb3-936b-4288-a5f6-3fa0a2bee418.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We cannot see the style sheet though, because we don''t have it going to the
    right place. So let''s update the code as follows. We will get rid of `style.css`.
    We will open up some `php` tags, and use `bloginfo`, and then we will just put
    `stylesheet_url`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s save this and reload:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/16b4a4be-25e4-48a0-946a-2ed61dc02a9c.png)'
  prefs: []
  type: TYPE_IMG
- en: You can see that now the CSS is being read. All the stuff we're looking at here
    is just static content in the `index.php` file, it's not actually coming from
    WordPress yet. So let's do a few things here.
  prefs: []
  type: TYPE_NORMAL
- en: 'The best thing to do is to just start at the top and work our way down. Into
    the html tag, we will put the `language_attributes()` function. We will update
    the `<title>` tag with `php bloginfo`, and in it we will put `name`. We will also
    put the character set `<meta>` tag by adding `meta charset`. We can use the `bloginfo()`
    unction as shown and pass in `charset`. Next, we want enter the `wp_head()` function,
    hence we will add `<?php wp_head(); ?>`. Add a `viewport` function using the `<meta>`
    tag with the name `viewport`. We will set the `content` attribute to `width=device-width`.
    Then, we''ll set `initial-scale` to `1.0`; this just helps with the responsiveness
    of the theme:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: Now in the `<body>` tag, we want our `body_class()` function.
  prefs: []
  type: TYPE_NORMAL
- en: 'For the logo, or the heading, we will get rid of the static text and add `php
    bloginfo` with the name. Next, we will add the tagline to make that dynamic using
    `bloginfo`, and then we can pass in `''description''`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: 'Now the search form is pretty easy. We''ll just take the `<form>` tag and add
    some stuff to it. We will update it with `method="get"` and then `action`, which
    is where it''s submitted, and for this, we will enter `php` with the `esc_url()`
    function. We will then pass in `home _url` and then `/`. Then, in the input, we
    will added a `name` attribute and just set it to `s`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: 'That''s pretty much it. The rest will get taken care of by WordPress. Let''s
    save this and look at it so far:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/97ebb83d-8e11-4061-be94-09cb0b899629.png)'
  prefs: []
  type: TYPE_IMG
- en: We have our logo, which is coming from WordPress, same thing with the tagline.
    We can't really test Search yet because we don't have any dynamic content down
    here. Now you'll see that we have the white space at the top; the reason for this
    is that we don't have the `wp_footer()` function yet, which will put the admin
    menu there. We'll add this next.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s go back and after the closing `</footer>` tag, add `wp_footer()`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s save this and reload:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/63534abf-b599-4307-a12b-2131944a04d3.png)'
  prefs: []
  type: TYPE_IMG
- en: Now you can see that we have our admin bar.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s go back up, and take care of the menu. We''ll go down to where we have
    our `nav` menu, and get rid of the whole `<ul>` tag and all the `<li>` tags. We''ll
    first create a variable called `args`, and we''ll set that to `array`, and the
    arguments can be passed into the `wp_nav_menu()` function. We''ll just have one
    argument for now, which is going to be the location of the menu. So we will enter
    `theme_location` and we set it to `primary`. Next, we will enter `wp_nav_menu`,
    and pass in `args`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: 'If we go and look at it, we find that it is working here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/795a859b-23e8-4f76-9258-66ef8d506f96.png)'
  prefs: []
  type: TYPE_IMG
- en: However, we want to specify in our functions file the different menu positions
    in our theme, and we have two. So let's go and create a new file. We'll save it
    as `functions.php`, and set a function for Theme Support.
  prefs: []
  type: TYPE_NORMAL
- en: 'We''ll enter a function with `adv` as a prefix, and then `_theme_support`.
    All of our custom functions will have the `adv` prefix. Next, we''ll register
    the `nav menus`. We will pass in an array and put our different positions; we
    have `primary`, which we will set to a readable name, so we enter `Primary Menu`,
    and then we will add another one in `footer`, and get this out of the way for
    now:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: 'Now underneath the function we''ll add `add_action` and `after_setup_theme`,
    and then the function we want to run is `adv_theme_support`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s save this and reload:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/78514160-ee84-4416-b843-76a0a49fee52.png)'
  prefs: []
  type: TYPE_IMG
- en: You can see that our menu is now here. If we click on it, you'll see the URL
    change, but you won't see any content change because this is all still just static
    HTML, but we do have our menu. Now, by default, every page that we have will show
    up here. Your pages might actually be different; you probably don't have Our Team
    because here I did a little bit of work with this WordPress site earlier, so your
    links may be a little different. Now if you look under Appearance, you'll see
    that we don't have a Menus option.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: Since we added `register_nav_menus` to the `functions` file, if we reload now,
    you will see a Menus link. Click on this, and you'll see that in Themes Locations
    we have Primary and Footer because we added them in the functions file.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s check the Primary Menu, and for menu name let''s just enter `Main Menu`,
    and you can put whatever pages you''d like. We''ll just leave one unchecked, we''ll
    leave Our Team unchecked; and click on Add to Menu. Then, click on Save Menu:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ed75044e-6299-444c-b489-c71192c72a5d.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now if we go to the frontend, you will see we only have About and Sample Page:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d5df4f0f-c7cc-4b01-a859-d701df91849d.png)'
  prefs: []
  type: TYPE_IMG
- en: Now I will create a couple of pages, so that you have the same pages as I do.
    So we have an `About` page which just says This is the about page.
  prefs: []
  type: TYPE_NORMAL
- en: 'For `Our Team` page, we will choose the parent of `About` and we''ll update
    it:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/eccba390-63f5-4ca7-8938-07f40d48ffb7.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now let''s create a new page called `FAQ`. We will select the parent of About,
    and you''ll see why we''re doing this later on:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/79537a11-4176-4c1e-b194-e3d127cf8b69.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Then, we''ll create another page called Services, and this will not have a
    parent. Next let''s add Services to the menu as shown. We will not add FAQ or
    Our Team just yet. We will see how we can use submenus, but we''ll do that later
    on:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a0f55c4e-ed68-4431-9f3f-54a2bed90fb2.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We''ll save the settings, and then your menu should look like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/5ede4c64-1a92-476d-a0cc-df88e8a26de6.png)'
  prefs: []
  type: TYPE_IMG
- en: We have the navigation bar, header, Search box, and all of our styles done.
    In the next section, we'll move on and start to create our main blog post loop.
  prefs: []
  type: TYPE_NORMAL
- en: Displaying blog post
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We created the theme and added the header and navigation bar. All of this stuff
    on the page is now dynamic and integrated with WordPress, but this is all just
    static HTML.
  prefs: []
  type: TYPE_NORMAL
- en: Let's go back to our `index.php` page and go down to where we have the `container
    content` div, and we have different blog posts. We have three `article` tags with
    blog posts; we will delete two out of the three.
  prefs: []
  type: TYPE_NORMAL
- en: Then we will cut the paragraphs down and make it much shorter just so we can
    get it all in the page or in view. We want to write in this `main block` div,
    and we want to create our post loop.
  prefs: []
  type: TYPE_NORMAL
- en: 'First, we''ll have to check for posts, and for that, we will enter `if(have_posts)`,and
    then we have to end it after the ending `</article>` tag. We will put an `else`
    statement as well. If there are no posts, then we will enter `php echo`, with
    the `wpautop()` function, where we can put the text that we want. In this case,
    we enter `''Sorry, no posts were found''`. Then, we will create our `while` loop,
    and then down under the `</article>` tag, we will end that `while` loop:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: 'So it''s going to loop through the posts and for every one it finds it''s going
    to spit this out. Now to make it dynamic, we will use `php the_title()` and replace
    the paragraph with `php the_content()`, as shown in the preceding code block.
    We''ll save this, and reload:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e5ea51dc-d07e-442f-9ad2-839ba9ddcc29.png)'
  prefs: []
  type: TYPE_IMG
- en: Now we're on the `About` page; let's go back to the `Home` page, which we don't
    have a link for. When we click on WPThemes, it should take us to the `Home` page,
    but if we click on it now, it takes us to `index.html`, so let's fix this.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will update the `index.html` file with the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: 'Now if we reload and click on WPThemes, we will get this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2bf1519b-f586-4f6c-9198-00790433b04f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'If we look at the posts, we get Blog Post One and Blog Post Two. Now you probably
    don''t have these posts; you probably have a Hello World; if that''s showing up,
    then that''s fine. If you want to match your content to mine, just go ahead and
    create two posts, one as `Blog Post One`—I just have some sample content in it—and
    then `Blog Post Two` similarly:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f3e504b0-8a76-4fb0-ae5d-141a19a67c5a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'You can also create some categories, it doesn''t really matter what they are.
    We''re not really dealing with specific content, it''s just for a sample content:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/38421276-b887-4d5c-8f7d-ef0f4e3bf90a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The meta info, as you can see, is still static, and so is the Read More button.
    When we click on this button, it doesn''t do anything. So let''s fix that next.
    Back in our post loop, where we have `<p class="meta">`, we will make the following
    changes to make it look dynamic:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: 'Since we need to be more specific, for the date and time we use `the_time()`.
    If we just keep it like that, let''s see what it gives us:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a4d97327-fb8b-48f1-bfbb-e7455c9b5212.png)'
  prefs: []
  type: TYPE_IMG
- en: 'So it gives us just the time, 11:55 am. I want the date as well, so we''ll
    format this. However, we want to do this by just adding some parameters. We have
    added `F j`, `Y`, and then for time, we''ll add `g:i a`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: This pertains to the parameters of the `php date` function.
  prefs: []
  type: TYPE_NORMAL
- en: If you don't know how to format the time, you can go to [php.net](http://php.net)
    and just search for the `date` function, and that should give you all the formatting
    options.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now if I reload, it gives the date, month, day, year, and also the time:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/eddba4a1-d4ac-4bed-8841-be7224cbf291.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now we also want the username of the user that created the post. To do this,
    we can just put in `<?php the_author(); ?>`, as shown in the following code block:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: 'If we reload now, you can see that we still get admin because that''s the actual
    user''s name. Now we want to be able to click on the author name and then have
    it bring us to all the posts archived from that user. This is pretty easy to do
    as well. We just want to put a link, as shown as follows. Inside the link, we
    enter `php echo get_author_posts_url()` and then pass `get_the_author_meta()`
    and `ID`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s save this, and then if we reload, you can see that it''s now a link.
    We can''t see it because of the color—we''ll have to change the CSS—but if I click
    on it, it will take us to whatever the username is in the address bar, `auth/author/`
    the username; it will show you all the posts from that user:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e34eefe8-3a7c-4dd8-8644-7a087d869892.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Let''s go into the CSS real quick and see where we have our `meta` class. We''ll
    add `article.post .meta` a to it and set `color` to white, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: So now that's fixed.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/09f5d07a-d01e-431d-8501-ef187e1263e7.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now we can also get the categories that the post is in. To do this, we''ll
    go back to the `index.php` file and we will update the code, as shown in the following
    code block:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: Right after the ending `</a>` tag of what we just did, of the author, we will
    put in a pipe `|` character, and then open up some `php` tags. Before the `php`
    tags, we'll enter `Posted In` and then we can place all the categories. To do
    this, we'll set a `categories` variable and set it to `get_the_category()`. Now
    this will give us an array of categories that this post is in. We can't just take
    the array and display it, so we have to loop through it. Before we do that, we'll
    create a variable called `separator` and separate that with a comma and a space.
    Then, we'll initialize a variable called `output` and set it to nothing for now.
    Next, we'll check for categories. To do this, we'll enter `if($categories)`, then
    we'll use a `foreach` loop with `($categories as $category)`. Next we'll append
    to that `output` variable, using `.=`. Now for each category to have a link as
    well, we'll use `href`. In order to do a little bit of concatenation here, we'll
    use dots and then add `get_category_link()`. We need to pass in a parameter, we'll
    take that `$category` variable and call `term_id`. Then we'll go back to our string
    right after the double quote, and we'll concatenate again, and enter `$category->cat_name`,
    closing it with the `</a>` tag. I know concatenation gets a little confusing,
    so we want a separator. Then, after the `if` statement, we'll use `echo` and wrap
    this in the `trim()` function to make it a little neater; we'll then enter `output`,
    and the second parameter will be `separator`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s save this and see what we get. Now you can see that it says Posted in
    Business:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f9170eb7-2f4b-472e-a361-f4b7966629e4.png)'
  prefs: []
  type: TYPE_IMG
- en: 'This one is Posted In Uncategorized:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e99d0b53-b83e-4df5-be63-ead75db28bad.png)'
  prefs: []
  type: TYPE_IMG
- en: Now if I click on Business, it takes us to `category/business`, and you can
    see only this post is here; this is the only one in Business.
  prefs: []
  type: TYPE_NORMAL
- en: So this is working perfectly.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now the last thing we want is the text to be shorter and the Read More button
    to work. So we''ll go to where we put the content, and to make it shorter, we
    can just change it to `the_excerpt();`, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: 'If we look at it now, we have much shorter text:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ac759984-b982-4a99-8482-c8d5ee5aa932.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now, by default I think it''s 55 words, but we can change this:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s go to `functions.php` and add the `excerpt_length()` function. All we
    need to do here is to just return the number; let''s say we want `25`. Then we
    just need to create a filter, so we''ll say `add_filter`; `add_action` means you''re
    adding something, and `add_filter` means you''re changing something. We want `excerpt_length`,
    so we will add `set_excerpt_length`, and we''ll also use the `adv` prefix:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s save this and reload:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ea46b12c-edf4-43d9-a272-9ecc62c1ca37.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now you can see that we get length of 25\. Now, for the Read More to work,
    it is pretty easy. We''ll go down to where we have the link and update the code
    as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs: []
  type: TYPE_PRE
- en: 'We''ll reload and click on Read More. This brings us to that particular post:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/3e93e2e4-2290-479e-9d74-61720e4bdef3.png)'
  prefs: []
  type: TYPE_IMG
- en: Next we will see how to add a comment form and how we can add a featured image
    to our posts.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a single post and adding an image
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We will now see how to create a single post. If we click on Read More now,
    it takes us to the single post, but it''s not what we want, we want to change
    this. Also, we want the ability to add a featured image to a post, also called
    a thumbnail. Let''s start with the thumbnail. We''ll first go to `functions.php`
    and we need to enable that support for our theme. For this, we''ll go to the `adv_theme_support()`
    function and add a `Featured Image Support` comment. Next, we''ll enter the `add_theme_support()`
    function and pass in `post-thumbnails`, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE53]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s save this, and if we go to, let''s say `Blog Post One`, you''ll see
    that we have the Featured Image block:'
  prefs: []
  type: TYPE_NORMAL
- en: 'We will click on Set featured image and upload some files:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a65729b1-b1c6-4acd-9da3-8115860acae7.png)'
  prefs: []
  type: TYPE_IMG
- en: You should have a folder called `_images` with some images placed in it.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s choose the `phones.jpg` image and click on Set featured image, as shown
    in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a96140d9-346d-4552-9523-37da0691a7f6.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Next, we will set this to Technology for the category and click on Update:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6cb6722c-1b9e-4e41-8de0-77cdc2e150b0.png)'
  prefs: []
  type: TYPE_IMG
- en: Now, let's go to `Blog Post Two` and click on Set featured image, and then on
    Upload, and then, grab the `surface.jpg` image. Now let's go ahead and click on
    Update.
  prefs: []
  type: TYPE_NORMAL
- en: If we go to the frontend and reload, you won't see the images; we actually have
    to add that to our theme.
  prefs: []
  type: TYPE_NORMAL
- en: 'So let''s go to `index.php` and find out where you want to put the image. In
    this case, we will put it right above `the_excerpt()`, as shown in the following
    code block:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs: []
  type: TYPE_PRE
- en: 'First, we will check for the image, and for that, we will add `<?php if(has_post_thumbnail())
    : ?>`. Then we will create a `<div>` tag with a `post-thumbnail` class. We will
    then add `<?php the_post_thumbnail(); ?>`.'
  prefs: []
  type: TYPE_NORMAL
- en: Let's save this, go back, and reload.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now you can see that we have the images. They''re a little too big, so let''s
    go to our CSS and edit the code. We''ll go to where we have our article styles,
    and we''ll add `article .post-thumbnail`. Then, we will set the image `width`
    to `100%`. Now it takes up 100% of the div, but the proportion is all out of whack.
    So we''ll add `height` and set it to `auto`, as shown in the following code block:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE55]'
  prefs: []
  type: TYPE_PRE
- en: Reload, and now you can see that they fit.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a02b1cc3-04cf-4a84-b9c2-c536cacec67b.png)'
  prefs: []
  type: TYPE_IMG
- en: This looks good now!
  prefs: []
  type: TYPE_NORMAL
- en: 'Now we want to move on to the single post page. To do this, we''ll set a new
    file and save it as `single.php`. We will just type in the word `TEST`. Now, if
    we go back to our single post and reload, you''ll see that we get TEST, because
    this page has now overwritten the `index.php` page on the single post. You can
    also see that the main page still shows, it''s just when we go to view a single
    post:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/772fb21a-7b27-42ae-b47b-d2c915c33ea2.png)'
  prefs: []
  type: TYPE_IMG
- en: Let's copy everything that we have in the `index.php` file. We'll now split
    this up into a header and a footer file since we have not done that yet, and that's
    what you typically want to do with a WordPress theme, right? So we will create
    a new file and save it as `header.php`, and then, we'll create another one called
    `footer.php`.
  prefs: []
  type: TYPE_NORMAL
- en: In our `index.php` file, we'll figure out what we want to bring over to the
    header. So, we want the actual header and the navigation.
  prefs: []
  type: TYPE_NORMAL
- en: Let's start with `<nav>` and go up. We'll cut everything out and paste it in
    the header file.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, down at the bottom of `index.php`, we''ll start selecting from the ending
    `</html>` tag up to where the `<footer>` starts. We''ll cut that, and put it in
    our footer file, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE56]'
  prefs: []
  type: TYPE_PRE
- en: 'Now if I save our `index.php` file as is, and we try to view it, you can see
    that it''s all messed up:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/389caf61-a961-4e72-86d3-a555c1503003.png)'
  prefs: []
  type: TYPE_IMG
- en: 'So at the top, we''ll say `get_header()`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE57]'
  prefs: []
  type: TYPE_PRE
- en: 'At the bottom, of course, we''ll add `get_footer()`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE58]'
  prefs: []
  type: TYPE_PRE
- en: 'If we go back now, everything''s back to normal:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/dd60dd34-4563-48b2-a326-d1238d01bd7d.png)'
  prefs: []
  type: TYPE_IMG
- en: Now, we'll take everything from `index.php`, including `get_header()` and `get_footer()`,
    and we'll paste that into `single.php`.
  prefs: []
  type: TYPE_NORMAL
- en: 'We''ll save this, and then if we go to the single post, we get what we had
    before:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/7d52bee5-7fe6-4f75-8e26-7e416f06f53d.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Let''s change a couple of things. One thing we want to change is that we want
    all the content to be shown. So we''ll set `the_excerpt()` back to `the_content()`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE59]'
  prefs: []
  type: TYPE_PRE
- en: If we reload now, we get all the content.
  prefs: []
  type: TYPE_NORMAL
- en: 'Also, we don''t want the Read More link, so we''ll get rid of that:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE60]'
  prefs: []
  type: TYPE_PRE
- en: Now, reload, and you will see that the link is gone. So now we just have our
    single post.
  prefs: []
  type: TYPE_NORMAL
- en: Now the archive pages should work. If we click on Business, it'll show us all
    the Business posts; if we click on admin, it'll show us all the posts created
    by admin; similarly, Search should also work. If we search for `Lorem`, the two
    articles should show up.
  prefs: []
  type: TYPE_NORMAL
- en: Now all the things, such as search, the category, and user archive pages, can
    be actually customized; we can make them different from the main post style. This
    is what we'll do next.
  prefs: []
  type: TYPE_NORMAL
- en: Creating custom archive pages
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let's create custom archive pages. Now if we click on one of the categories,
    it'll take us to a category archive.
  prefs: []
  type: TYPE_NORMAL
- en: If we click on admin, the username, it will take us to the author archive. There
    are others as well. We can also have archives by dates, we can have them by tags,
    and so on. So let's go into our `themes` folder. We will create a new file and
    save that as `archive.php` and open that up.
  prefs: []
  type: TYPE_NORMAL
- en: Now if we go back and click on a category, you can see it's blank because it's
    looking at the `archive.php` page. We will copy what's in the `index.php` page
    and paste that in `archive.php`.
  prefs: []
  type: TYPE_NORMAL
- en: I want these pages to be much more simple. We don't need the meta, and we don't
    need the image; pretty much just the title and the date is all that we want. So
    let's go to where we have the `<article>` tag and get rid of the whole part.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will replace this with a `<div>` tag and give it a `archive-post` class.
    We''ll enter `<h4>`; then we''ll insert a link, which will go to `the_permalink()`,
    and then we have `the_title()`. Next, we''ll place a paragraph that says `Posted
    On: <?php the_time`, and we''ll pass in the same formatting options as earlier:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE61]'
  prefs: []
  type: TYPE_PRE
- en: 'Now let''s take a look at this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/348a9df1-d5de-4fcc-9e9e-e74171500f50.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Let''s update the style sheet real quick. We will add `.archive-post` with
    a border set on the bottom of light gray color, `1px solid`, and `padding-bottom:10px`.
    We''ll also add `10px` on `margin-bottom`. Then for `h4` and the paragraph, we
    will remove the margin and padding:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE62]'
  prefs: []
  type: TYPE_PRE
- en: 'Now we will need to have a different heading depending on what type of archive
    it is. So let''s go back to `archive.php` and add the following code right under
    the `main block` div:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE63]'
  prefs: []
  type: TYPE_PRE
- en: 'Here, we''ll use some WordPress functions that are extremely helpful. We use
    `is_category()`, that''ll happen if it''s a category archive, and then we just
    use this `single_cat_title()` function, which can give us the category name. We
    then see if it is an author, and then, `echo ''Archives By Author: ''`, the author''s
    name, and `the_post()`. We also use `rewind_posts()`, and if it''s a tag, we can
    actually give `tag_title()`; if it''s by day, we can say `''Archives By Day: ''`
    and then just say `get_the_date()`. We can also do the same for `Month`, and then
    for `Year`. If it''s none of these, then it''s just going to say `Archives`. Let''s
    save this, and go back and reload:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/23305db3-f53a-49ca-a693-748dfa2537de.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now you can see that we get `Archives By Author: admin`. If we go back to a
    post and click on the category, it gives us the category name. So that''s how
    that works. We want the same kind of view for the Search.'
  prefs: []
  type: TYPE_NORMAL
- en: In order to search for something we'll create a new file and call it `search.php`.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will copy what we have in `archive.php` and paste it in the `search.php`
    file. We will remove the ones which are not required and then we''ll just say
    `Search Results`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE64]'
  prefs: []
  type: TYPE_PRE
- en: 'Also, just to make sure Search is definitely working, let''s put in the word
    `Hello` in `Blog Post Two`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2e2a6170-e7a6-48e4-a0f4-031d73afcec0.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now if we go back to the frontend and search for `Hello`, `Blog Post Two` comes
    up:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a57e3798-2589-4698-85d9-48b3930b5544.png)'
  prefs: []
  type: TYPE_IMG
- en: So this works!
  prefs: []
  type: TYPE_NORMAL
- en: Now we want a link to the Home page in the menu, so let's do that. To do this,
    let's go to Menus, and to Custom Links. For the URL, we will add `localhost/wpthemes`,
    and then for Link Text we'll just say `Home`. Click on the Add to Menu button,
    put that up here at the top, and save it.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/706add1f-45c0-4b84-8b56-e598e2b186f1.png)'
  prefs: []
  type: TYPE_IMG
- en: If we go back and reload, you can see a Home link.
  prefs: []
  type: TYPE_NORMAL
- en: Next, we will look at content types, and how to place things, such as galleries,
    a side content, and links.
  prefs: []
  type: TYPE_NORMAL
- en: Different post formats
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let's take a look at a few different things now. We'll look at post types or
    post formats. Right now, if we look at our theme, we have just basically one kind
    of post, and it's just a standard blog post. We can also have things, such as
    galleries, links, images, and quotes status updates, and we can format these different
    types of posts in different ways. We will now see how to do that, how to add these
    to our theme. Also, we'll look at a function called `get_ template_part()`, which
    allows us to stop repeating ourselves. For instance, if we look at our index page,
    we have `while (have_posts())`, and then we're just outputting our post. We observe
    the same thing in the archive, in `search.php`, and so on. So we want something
    that's going to stop us from repeating ourselves over and over. I know that each
    of these files have minor changes, but we can implement that inside of a specific
    content file. The best thing to do is to just jump in and show you.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s go to `index.php` and look at everything that is inside the `while`
    loop:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE65]'
  prefs: []
  type: TYPE_PRE
- en: 'We will grab everything that is in our `post` loop; basically, all that is
    in it from the `<article>` tag to the ending `</article>` tag. We''ll cut this,
    paste it in a new file, and save it as `content.php`. We''ll save this, go back
    to index, and in its place, we''ll say `<?php` and then we''ll use `get_template_part()`.
    Then we will pass in the name of the file which we just created, which is `content`.
    Let''s save this and make sure that `content.php` is saved as well:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE66]'
  prefs: []
  type: TYPE_PRE
- en: Now if we reload, it looks the exact same, which is what we want.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s take a look at `archive.php`. You can see same content in the archive
    file. The idea is to get everything that''s in the while loop, into that content
    file. So let''s cut the highlighted part:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE67]'
  prefs: []
  type: TYPE_PRE
- en: 'Go to `content.php`. Now this is a little different than what we have for a
    regular blog post. So what we can do is we can use a condition and check to see
    whether we get an archive or a search result page. To do this, we''ll say `<?php`
    with an `if` statement. We''ll also use an `else` statement along with it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE68]'
  prefs: []
  type: TYPE_PRE
- en: 'For the `if` statement, we''ll say `if(is _search())`. This means that if we''re
    on a search results page, and if we search for something and this comes up, it''s
    checking to see whether we''re on this page. We can also check to see if it''s
    on a category or an archive—not just category but any kind of archive. So let''s
    say also `is_archive()`. If this is true then we want to just output what we just
    copied from the archive post page. Next, we will grab all the code in the `<article>`
    tag and paste that inside `else`, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE69]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s save this and then, in `archive.php`, we also want what we put in the
    `index.php` file. So we''ll copy and paste that, as shown, and save it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE70]'
  prefs: []
  type: TYPE_PRE
- en: Now if we reload the search page, it should look the exact same.
  prefs: []
  type: TYPE_NORMAL
- en: 'Just to make sure that it''s coming from the content file, we''ll just say
    `TEST` and then reload. Let''s see it now:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/eba98321-5de5-4466-b912-e0ebbbd60b34.png)'
  prefs: []
  type: TYPE_IMG
- en: It's not giving us TEST. Oh, that's because we didn't put it in the search.
    We only put it in the archive, so let's test that first.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now if we click on category name, you can see that we''re getting TEST. Just
    like we did in the archive where we put this `get_template_part()`, we will copy
    and put that in the `search` page as well:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE71]'
  prefs: []
  type: TYPE_PRE
- en: 'This is the same exact code as we have seen earlier. We can just paste that
    in. Then, if we do a search, we now get TEST:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c5250b42-6e46-479c-9989-222f538d9853.png)'
  prefs: []
  type: TYPE_IMG
- en: So we know that it's coming from `content` page in this conditional. We'll save
    this, and that's all set.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now we can also implement our `content.php` file inside of the `single.php`
    file as well, because if we look at `single`, we have a lot of the same stuff
    that we had in the `index.php` file. We have an `<article>` tag. The only difference
    is that we''re using the excerpt inside of the blog roll; also, we have the Read
    More link that''s not in the `single.php` file. So we''ll copy from the `<article>`
    tag to the ending `</article>` tag, paste that in `get _template_part()`, and
    save it. Now if we go to the `single` page, we lost that single page formatting.
    So we''ll go into the `content.php` page and just add some conditionals where
    we want things to be different:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE72]'
  prefs: []
  type: TYPE_PRE
- en: For instance, in `the_excerpt()`, we want to say `<?php if`. We can say `if(is_single)`;
    if it is single, then we want `the_content()`, if not, then we want `the_excerpt()`.
    So we'll paste the code in and then get rid of the old code. So let's go back
    to the single page, reload, and we see that now we have our content back.
  prefs: []
  type: TYPE_NORMAL
- en: 'We also want to get rid of the `Read More` link. So let''s go down to where
    that is, and actually we don''t even need to do another conditional. We can just
    grab it and paste it below `the_excerpt()`, as shown in the following code block:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE73]'
  prefs: []
  type: TYPE_PRE
- en: So then the `Read More` won't show up on the single page anymore.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can see how we''ve saved ourselves from repeating ourselves. Now, in `archive.php`
    inside the `while` loop, we just have this one line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE74]'
  prefs: []
  type: TYPE_PRE
- en: We see the same thing with the other pages—`search`, `single` and `index`. Now
    we'll get into the post formats. So, let's add a gallery type.
  prefs: []
  type: TYPE_NORMAL
- en: First, let's go to our `functions.php` file. We need to enable these different
    formats that we want to use.
  prefs: []
  type: TYPE_NORMAL
- en: 'Right under `register_nav_menus()`, we can add `Post Format Support` and `add
    _theme_support()`. Also, we want to add `post-formats`. Then the second parameter
    will be an array of the types of formats we want. We will choose three; we''ll
    take `aside`, `gallery` and `link`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE75]'
  prefs: []
  type: TYPE_PRE
- en: 'If we look at the documentation, the supported formats are as shown in the
    following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f7cc6c0f-bfea-4604-b57e-57c4b4dfa1a4.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We''re using aside, gallery and link, but we also have image, quote, status,
    audio, and chat. You might want to take a look at that. Let''s save this, and
    since we put that in there, if we go to our Posts and say Add New, you''ll now
    see that we have the Format box on the side, where we can choose what format we
    want for our post:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/dc9d59cd-fa56-4e9a-b759-d486b13b797e.png)'
  prefs: []
  type: TYPE_IMG
- en: Now, as it is, it's not going to do anything different. So let's do something
    different.
  prefs: []
  type: TYPE_NORMAL
- en: We'll say `Sample Aside` and grab some content. We'll just take this content
    and paste it.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6e01f693-5bab-4a15-b74d-56a47a998bd3.png)'
  prefs: []
  type: TYPE_IMG
- en: We'll choose Aside as a format, Business as a category, and click on Publish.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now if we go to our frontend and reload, you can see that we have our Aside,
    but it''s no different than these posts:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d18b013a-d80e-4ef5-a367-70f94e497b33.png)'
  prefs: []
  type: TYPE_IMG
- en: The point of this is to have this show up differently.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, the way we can do that is when we go to, let''s say, `index.php`, where
    we put `get_template_part()`. We want to pass in a second parameter of `get_post_format()`,
    as shown in the following code block:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE76]'
  prefs: []
  type: TYPE_PRE
- en: This is a function and that's going to allow it to see what type of post format
    it is. We'll just replace all `get_template_part()` with the second parameter.
    We'll go to `archive.php` and paste `<?php get_template_part('content', get_post_format());
    ?>`. Let's do the same for `search.php` and `single.php`.
  prefs: []
  type: TYPE_NORMAL
- en: Now, for each format, we'll create a content file. So let's say New File and
    save this as `content-aside.php`.
  prefs: []
  type: TYPE_NORMAL
- en: We'll also create `content-gallery.php` and, finally, `content-link.php`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, with these different files, we can make our formats look differently.
    So let''s start with the `content-aside.php` file. This is going to be very simple.
    It will have an `<article>` tag. We''ll give it a `post` class and `post-aside`.
    We don''t want to have any images or any of that stuff. We just want the actual
    content, the author, and the date. We will place it in a `<div>` tag with the
    `well` class, which is a bootstrap class, and then in there, we''ll use a `<small>`
    tag and `the_author()`. You can kind of think of this as like a status update.
    Let''s put the `@` sign and then, `<?php the_ date(); ?>`. Then right under it,
    we''ll put `the_content()`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE77]'
  prefs: []
  type: TYPE_PRE
- en: 'Now we''ll save this. If we go back and reload, you can see that the post has
    changed because it''s coming from this `content-aside` file:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/0f355fa6-70ac-4eb2-b01f-750869dfa854.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now I want to make this look a little better. So we''ll go into our style sheet.
    We''ll go down to where we have the `article` stuff, and let''s say `article.post-aside`.
    Actually, we don''t want to do the core element. We want `small`, and we just
    want to make the text bold by adding `font-weight: bold`. We also want to format
    `well`. In addition, we will change the background from gray to a light blue by
    adding `#e0eefc`. We also want to add some padding:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE78]'
  prefs: []
  type: TYPE_PRE
- en: 'Now you can see that it''s formatted differently:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/024c14dc-0b8c-4850-9525-c281bcb3ef20.png)'
  prefs: []
  type: TYPE_IMG
- en: 'So this takes care of `aside`. Now let''s do the link. For this, we''ll go
    into `content-link.php`, copy what we have in `content-aside`, and update the
    code as shown in the following code block:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE79]'
  prefs: []
  type: TYPE_PRE
- en: We will add the link as shown and keep the `well` class, but this is going to
    be different!
  prefs: []
  type: TYPE_NORMAL
- en: 'Now if we go back into our posts, and click on Add New this time, we''ll choose
    a Link as a format, and then, as a title, we''ll add `Get awesome web dev courses
    at Eduonix`. Then, in the text area, we just want to put a link and that''s it.
    We''ll say Publish and go back and reload. Now you can see that we have a link
    that goes to [eduonix.com](https://www.eduonix.com/):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ce9a91d3-1383-488e-9bde-b62be8060e2f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We want to format this to make it appear a little better. So we''ll go back
    to our style sheet and say `.post-link`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE80]'
  prefs: []
  type: TYPE_PRE
- en: Actually, we just want `well`. We'll say background, which will be just light
    gray, and then we'll enter `padding:10px`. So now we have a formatted link.
  prefs: []
  type: TYPE_NORMAL
- en: 'We have our regular post, we have the aside content or status updates, and
    we have links. So the last one we''ll look at is the gallery. For this, let''s
    go to `content-gallery.php`; this is actually going to be very simple. We''ll
    say `<article class="post post-gallery">` and we enter the `<h2>` tag with `the_title()`
    and then, we just want `the_content()`; that''s it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE81]'
  prefs: []
  type: TYPE_PRE
- en: Now we'll go to the Add New post. We will then go to Add Media and then to Create
    Gallery.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/78426237-bdc2-4fd4-a681-542a4484750a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We have some images in here, but we want to upload some more, and you should
    have these in your files. We will upload a few images, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/3d76a329-a400-4757-9833-cb3f8057a62b.png)'
  prefs: []
  type: TYPE_IMG
- en: 'That''s fine. We''re just going to click on all of these images and then on
    Create a new gallery. Then you want to make sure that all of these are in there.
    To check them, click on Insert Gallery and make sure that Gallery is chosen inside
    the Format box:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6e31921e-c7b9-47c0-8b01-42dfaca96f66.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We''ll choose Entertainment inside the Category box and click on Publish. Let''s
    go back and reload, and there''s our gallery:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c56eb265-436e-46be-8113-46861cbf7a31.png)'
  prefs: []
  type: TYPE_IMG
- en: 'If we want to edit it, we can go back in, and you can choose the pencil icon
    to edit. Now, right now, they''re linked to Attachment Page, but I want them to
    actually go to the media file. So you can see that when you click on them, it''s
    just going to the image file:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/32487c5b-0d83-494a-8aab-552e163502f2.png)'
  prefs: []
  type: TYPE_IMG
- en: 'You can change this. You can have it go to a page or you can implement some
    kind of light box plugin, if you wanted to, as well, but we''ll not get into that.
    Now, I want to go to my `style.css` file and just add some styles. We''ll say
    `article.post-gallery` and we''ll add a dark background. We''ll set `color` as
    white. We''ll also add some padding, say, `5px 10px` and then, `margin-top` will
    be `5px`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE82]'
  prefs: []
  type: TYPE_PRE
- en: Let's save this and reload.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/23ed521f-11e6-409f-bdec-e7ad8d109d28.png)'
  prefs: []
  type: TYPE_IMG
- en: So, now we can post a gallery!
  prefs: []
  type: TYPE_NORMAL
- en: Pages, custom templates, and sub navigation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now we'll move from the posts to pages. If we visit the About page, you can
    see that it's formatted just like a post, which is definitely not what we want.
  prefs: []
  type: TYPE_NORMAL
- en: We just want the pages to have the title, we don't want metadata, Read More,
    and stuff like that. So to change all that, we have to create a new file and save
    it as `page.php`.
  prefs: []
  type: TYPE_NORMAL
- en: Now if I go back to that page and reload, it's just a blank white page. It's
    looking to this file to parse it.
  prefs: []
  type: TYPE_NORMAL
- en: 'Just to start with, I''ll grab what we have in the `index` page, paste it in
    `page.php`, and just change some stuff. We want the `while` loop, we''ll not use
    `get_template_part()`, so we can get rid of that. We want an `<article>` tag,
    and let''s give this a class of `page`. Let''s also put in an `<h2>` tag. This
    is where the title will go, so we''ll say `<?php the_title(); ?>`, and right under
    this, we''ll put `the_content()`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE83]'
  prefs: []
  type: TYPE_PRE
- en: OK, really simple, save it, let's go to the About page, and now we have a very
    simple About page.
  prefs: []
  type: TYPE_NORMAL
- en: 'If we go to Services, we find that it uses the same format; even Sample Page
    uses the same format. Now I want to show you that we can actually create page
    templates for certain pages. For instance, let''s take the About page. If I say
    New File, save it as `page-about.php`, and we''ll say `ABOUT` and save and reload
    it, we get `ABOUT`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d0d38922-a03f-4514-8b06-c770feeec65c.png)'
  prefs: []
  type: TYPE_IMG
- en: Now this isn't going to be on every page; you can see that Services shows up,
    Sample Page, it's only the About page. So it's using the slug that is up in the
    URL. We could just as well say page `services` and that would work. You would
    do this when you want something on the `About` page that you don't want anywhere
    else.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now we''ll just copy what''s in `page.php`, put it in `page-about.php` and
    then go right above `the_content()`. There, we''ll put a `<div>` tag with the
    `well` class, and we''ll just put in `Company Phone`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE84]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, go back to About, and you can see that we have the Company Phone there:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/84c9e6fc-0de1-4338-a52c-36709a564de6.png)'
  prefs: []
  type: TYPE_IMG
- en: So, it's not on Services, it's not on Sample Page or any other pages. You can
    do this, but I think a better thing to do, when you want to have specific styles
    or content on certain pages, is to use a template. I'm going to get rid of the
    `page-about` file. I just wanted to show you that this is possible. So we got
    rid of that, and now we'll create a template. Let's create a new file and save
    it as `company-template.php`. We'll copy what we have in the `page.php` file,
    and paste it right in the `company-template.php` file.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now at the top, we want to add a declaration or comment. Actually, this needs
    to be in the `php` tags. Next, we''ll say `Template Name` and call this `Company
    Layout`. All we want to do here is to go right below `the_title()`, and put the
    phone number; however, I''ll put it in a paragraph tag with a class of `phone`,
    and we''ll put a `1-800-555-5555` number:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE85]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, save this. Let''s quickly go into the style sheet and add a style for
    the `phone` class. This is probably something you would do, but it''s just to
    give you an example to show you that you can have custom templates for certain
    pages. Let''s give it a background, `border`, `padding`, and make the font bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE86]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/40f44ab7-d929-4406-ad47-f6a983f0c9fc.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now that we have that created, let''s go into our pages, and go to About, and
    then, under Template, we can choose Company Layout. We''ll update this, reload,
    and now you can see we have the phone number:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/b7a6e5cd-1493-4816-870c-d9ff91d9d2c2.png)'
  prefs: []
  type: TYPE_IMG
- en: 'I actually want to put some text in front of it, though. We''ll say `Call Us`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/21493b10-fedf-458b-a4ed-fd0bd935be4f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'If we go to Services, you''ll not see it because we didn''t choose that template.
    However, I actually do want it for Services, so we''ll simply go into the `Services`
    page and select Company Layout. Now, that should also have the phone number:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/0311d132-c4b8-4420-bf83-642b19138fe3.png)'
  prefs: []
  type: TYPE_IMG
- en: So the next thing that I want to show you is how we can create a submenu. What
    I mean by this is that if we have, let's say, the About page, the parent page,
    and in it we have child pages—I had put an FAQ page and an Our Team page under
    the About page. Now my goal is to have links on the About page for the child pages,
    and this is not just for the About page but any page that has a child. There are
    quite a few things that we have to do to accomplish this. Let's go to `page.php`
    and remove Company Layout from the About page. So, it shouldn't have the phone
    number anymore.
  prefs: []
  type: TYPE_NORMAL
- en: 'In `page.php`, let''s go right under the `<article>` tag and say `<?php wp_list_pages();
    ?>`, as shown in the following code block:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE87]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s see what this does:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/71699eba-edd3-4b18-ba23-b934c111dd8c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We can see that it''s listing all of the pages that we have on our WordPress
    site, which obviously isn''t what we want. Pay no attention to the style yet because
    we''ll get to that after we get the functionality. We only want to get the `About`
    page and its child pages. So we''ll go to the `page.php` file, and right above
    `wp_list_pages()` we''ll say `<?php`. We''ll create a variable called `args` and
    set that to an array. We''ll then say `child_of`. Now there''s no core function
    to get the parent, so we''ll actually create a function called `get_top_parent()`.
    Then we also want to say `title_li` and set that to nothing. I''ll explain that
    in a bit, but right now, we''ll put our `args` variable right in `wp_list_pages()`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE88]'
  prefs: []
  type: TYPE_PRE
- en: 'If we go ahead and reload, we''ll get an error, because there''s no function
    called `get_top_parent()`. So let''s go into `functions.php` and down at the bottom,
    create a function called `get_top_parent()`. We''ll make the `post` object available
    to us by saying `global $post`. Then, we''ll say `if($post->post_parent)`, and
    we''ll create a variable called `$ancestors` and set it to `get_post_ancestors()`.
    We''ll then pass in `$post->ID`. Now we''ll say `return $ancestors` and we want
    the `0` index; then, under the `if` statement, say `return $post->ID`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE89]'
  prefs: []
  type: TYPE_PRE
- en: 'Now save this and reload:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/43e02dfd-910d-478e-83c2-416b530b84df.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now you can see that we are only getting the child pages of the About page,
    which is FAQ and Our Team. Now we also want the About link to show up in here
    as well because we can go to FAQ, but we can''t get back to About unless we use
    the main menu. So let''s go back to `page.php` and inside the `<article>` tag,
    we''ll create a `<ul>` tag. Above the `<ul>` tag, we''ll create a `<nav>` tag
    and give it a class of both `nav` and `sub-nav`. Now under the `<ul>` tag, I''ll
    put a `<span>` tag and give it a class of `parent-link`. Inside it, we''ll place
    an `<a>` tag, which will go to `<?php echo get_the_permalink(); ?>`. We''ll pass
    in the `get_top_parent()` function there. Then, for the link text we''ll say `<?php
    echo the_title(); ?>`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE90]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s save this and take a look:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/50e7f264-5528-4204-8831-e59aa41714c8.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now we just have About. We can navigate using the menu here. However, if we
    go to Sample Page or any other page, it''s going to still have this even though
    there''s no child links. So, we''ll create another short function in the `functions.php`
    file and call `page_is_parent`. Then, we''ll say `global $post` and set `$pages`
    equal to `get_pages()`, and in here, we''ll say `''child_of=''` and concatenate
    the post ID. Next, we''ll say `return` and then, we want the number of pages,
    so we''ll `count($pages)`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE91]'
  prefs: []
  type: TYPE_PRE
- en: 'If the page count is more than zero, then we know that it''s a parent. So let''s
    go back to `page.php` and right above the `<nav>` tag, we''ll put an `if` statement,
    which will end below the `<nav>` tag. We''ll see if it''s a parent `page_is_parent()`,
    or if there''s any children `$post->post_parent is > 0`, then we''ll do what follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE92]'
  prefs: []
  type: TYPE_PRE
- en: Let's save that and then go back to Sample Page. We can see that menu is now
    gone, but if we go to About it's still there, because it has the child pages.
  prefs: []
  type: TYPE_NORMAL
- en: So everything is working correctly.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now I just want to fix the display; I want it to move it and make it appear
    a little better. To do this, let''s go to our style sheet and say `.sub-nav`.
    We''ll then place some margin on the top, floating it to the right and setting
    it to `300px` wide. Then we''ll float `ul` to the right. Next, the parent link,
    which in this case is About; we''ll float this to left and make it black, bold,
    and add a border to the right. Then, we''ll make the parent link black, and we''ll
    use `current_page_item`, because whatever page we''re on, we want that to be bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE93]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s save this and see what that looks like:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/347089dd-4346-4213-948a-4977b273828f.png)'
  prefs: []
  type: TYPE_IMG
- en: You can see that we have About, and if we go to FAQ that stays bold; if we go
    to Our Team even that's bold. This looks a lot better.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, we''ll clear the float. To do this, we''ll go to `page.php`, and under
    `</nav>` we''ll add `<div class="clr">`. Then, we''ll go to our style sheet and
    add `.clr` and say `clear:both`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE94]'
  prefs: []
  type: TYPE_PRE
- en: 'So now we see that it''s above the title on the page:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/dbb703dc-6d87-436f-9a6e-129439b7da50.png)'
  prefs: []
  type: TYPE_IMG
- en: We did quite a bit in this section.
  prefs: []
  type: TYPE_NORMAL
- en: We set up our pages, and we saw how to create custom pages, custom templates,
    and also, how to create a sub navigation. In the next section, we'll get into
    widgets.
  prefs: []
  type: TYPE_NORMAL
- en: Working with Theme Widgets
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we'll take a look at widgets.
  prefs: []
  type: TYPE_NORMAL
- en: Right now, we have a sidebar, but this is just static content in our php file.
    So we want this to come from the widget system. Also, we should be able to add
    multiple widgets in the sidebar. Now, on the blog page, and on any other page,
    this is going to be the only widget aside from a custom Home page that we'll create
    later on. However, we will add those positions in our `functions` file.
  prefs: []
  type: TYPE_NORMAL
- en: 'So, let''s open up `functions.php`, and go right under the `after_theme_setup`
    action; this will be to set up widget locations. We''ll create a function, call
    it `init_widgets()` and it will take an `id`; then, we''ll say `register_sidebar`.
    Now, even though this is called `register_sidebar`, this is used with all widget
    positions, not just a sidebar. It takes in an array and it''s going to take a
    `name`; this happens to be `Sidebar`, but it could be anything. Then, we''ll also
    say `before_widget` and `after_widget`. Also, we''ll say `before_title` and `after_title`
    of the widget:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE95]'
  prefs: []
  type: TYPE_PRE
- en: 'So, basically, these will be HTML tags that we want. If we say `index.php`
    and look at the sidebar, it has `<div>` with the class of `block`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE96]'
  prefs: []
  type: TYPE_PRE
- en: 'Now I don''t want to add this `div` element in `functions.php`; so let''s put
    it in `index.php` and `<div class="block">`. Let''s also add a class called `side-widget`
    and, after widget, we''ll close that `</div>` element. For the title, I''ll put
    `<h3>`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE97]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s save this and then go into `index.php`. We''ll take out everything that''s
    in this `side` div element and check to see whether there are any widgets in that
    position. To do this, we''ll say `if(is_active_sidebar)` and then pass in the
    widget ID, which is `sidebar`. Then we''ll say `<?php dynamic_sidebar(); ?>` and
    pass in the ID, `sidebar`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE98]'
  prefs: []
  type: TYPE_PRE
- en: 'If we look at the index page, nothing''s there because we haven''t added any
    widgets:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/904ac774-4df9-47d0-a1b6-db3f560f60a8.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now we''ll need to replace all of the static sidebar code. Let''s copy it;
    we''ll start with `archive.php`. Then, we''ll just paste that in. We''ll go to
    `page.php`. Of course, you don''t need to have a sidebar with all these pages:
    `search`, `single`, and `company-template`, but we''re going to.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, we''ll go to our backend and then to Appearance:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/16cf061e-9907-404d-aada-7183defbf891.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now see how there''s no widget. We need to initialize it, so back to `functions.php`,
    and then, right under `init_widgets()` we need to say `add_action()`. Now the
    hook we want to use is `widgets_init`, and then we just want to put the name of
    our function, which is `init_widgets`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE99]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s go back to our backend, reload, and now under Appearance, you should
    be able to go to Widgets:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9b3f5e08-5594-43fc-bae4-25f8d934468f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now we''ll add a custom Text widget, and let''s just put title; we''ll say
    `My Text Widget`. Then, I''ll just paste a sentence or two in Content, and click
    on Save:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2f66f9c5-01ca-4ae5-8415-6311950b8cd6.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now go back to our frontend and reload:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6185538b-833a-4b4c-8965-3603df9f9ee4.png)'
  prefs: []
  type: TYPE_IMG
- en: So this is coming from the Text widget.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s add a button in here as well, just for looks. Let''s also put two line
    breaks. You can put whatever you like in a custom Text widget:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9f106c79-4a7d-44ca-86be-ab2fd883effc.png)'
  prefs: []
  type: TYPE_IMG
- en: Now, another thing that we could do is to add some kind of dynamic widget, like,
    let's say, `Categories`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s take that Categories widget, put it in Sidebar, and we''ll save it.
    Let''s go take a look:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/0b5be00f-a53c-4f6e-bfce-01b9e3bba6d5.png)'
  prefs: []
  type: TYPE_IMG
- en: 'I want to make this look a little better, which we can do that with CSS. Let''s
    go to the bottom and say `.side-widget`. I''ll add `margin-bottom: 20px`, that
    will move it down a little. Then, to do the list items, we''ll say `list-style:none`;
    we''ll give it `line-height` of `2.1em`, and for `border-bottom`, we''ll do `dotted`,
    with the color gray:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE100]'
  prefs: []
  type: TYPE_PRE
- en: Save this.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, it looks a lot better:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d12b358a-c31c-47d3-b31e-6c4c8a205587.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We can also put, let''s say, `Recent Posts`, and change this to `3`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e5fd80e9-6910-4eee-b684-0a7d0deb3bb3.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We actually didn''t give a title for the gallery. So, let''s just say `Photo
    Gallery`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/47f3bfc3-d414-4627-b129-060ecaec7f26.png)'
  prefs: []
  type: TYPE_IMG
- en: Now, I'll add the rest of the widgets into `functions.php`, or the rest of the
    widget positions, even though we'll not do it in this section. In the next section,
    we'll create a custom home page with those widgets.
  prefs: []
  type: TYPE_NORMAL
- en: We'll go right under `init_widgets()`, and copy and paste it four more times.
    So `Sidebar`, then we'll enter the `Showcase` area and change the class name.
    Then we'll have `Box 1`, `Box 2`, and `Box 3`. This will have a class of `box`
    and `box1`. I'll actually replace these two with `box` and `box1`. In next `register_sidebar`
    we'll change `name` to `Box 2`, and change `name` in final `register_sidebar`
    to `3`. Save it, and now if we were to go back into the widgets area, you can
    now see that we have those widgets. At least, we have the positions. If we put
    something in them now, nothing's going to happen because we don't have them in
    our template.
  prefs: []
  type: TYPE_NORMAL
- en: Custom home page
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now we'll create a custom home page and then add widgets to the positions that
    we added.
  prefs: []
  type: TYPE_NORMAL
- en: Let's create a new file and save this as `front-page.php`. If we reload the
    home page it goes completely blank because it's looking at `front-page.php` file.
    So I'll copy what we have in `page.php` and paste it in `front-page.php`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now let''s reload:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6908732d-52a5-4854-8119-4f47fa2d69dc.png)'
  prefs: []
  type: TYPE_IMG
- en: 'This doesn''t look very good because we''re showing the posts with just the
    page formatting. So let''s go into pages, and create two new pages. We will call
    one `Home`; we''ll just say `This is the homepage`, click on Publish, and similarly
    create a new one called `Blog` and Publish:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/62aceaa0-a31f-4e93-95fb-ef73146d8fba.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now we''ll go to Settings and then to Reading:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/091cbbdc-1b24-4d3d-b5e0-01a65b32a2ab.png)'
  prefs: []
  type: TYPE_IMG
- en: In Your homepage displays, we'll set A static page; for Homepage, we'll choose
    Home; for Post page we'll choose Blog, and then we'll save it.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now we''ll go to Appearance and then Menus:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9f6897f6-4686-4a6a-94fa-7aded0f62833.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Let''s go to tick Blog and click on Add to Menu. We''ll put that right between
    About and Services and save it. Now if we go back and reload, we get the Home
    page, and if we click on Blog, that brings us to the blog:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/76c68a33-8850-4878-aaba-46831105ec7f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'So, this is how we can handle that. Now we want to make this look a little
    different, I want to have a Showcase widget. Also, I want to get rid of the sidebar
    and have three boxes and three different widgets under this content. Let''s go
    to `front-page.php` and get rid of the `main` class, highlighted in the following
    code block, because that''s what limits this to this width:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE101]'
  prefs: []
  type: TYPE_PRE
- en: 'Then, we''ll completely get rid of this `side` div element:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE102]'
  prefs: []
  type: TYPE_PRE
- en: 'We''ll look at it now; there''s no more sidebar:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4668199f-cccd-402b-adbd-41773342f7eb.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Let''s do our Showcase widget, and see where it is going to go; right under
    `<div class="container content">`. I''ll copy from `index.php` and grab the code
    shown in the following code block. We''ll paste that in and then we just want
    to change the ID from `sidebar` to `showcase`; we''ll do the same thing for `dynamic_sidebar()`.
    So, this takes care of the Showcase widget:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE103]'
  prefs: []
  type: TYPE_PRE
- en: 'Now we''ll also want our three boxes, which we''ll put down right above the
    last `div` element. So I''ll paste this in three times. This one will be `box1`,
    `box2`, and `box3`. We''ll save this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE104]'
  prefs: []
  type: TYPE_PRE
- en: 'Now let''s go to the backend, to Appearance, and then Widgets:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f0e0fe16-9846-43db-8767-89844136812f.png)'
  prefs: []
  type: TYPE_IMG
- en: We'll grab Text and put that right in Showcase, and then we'll paste some code
    in the Content textbox; well, not some code, but just some HTML. We'll save this.
  prefs: []
  type: TYPE_NORMAL
- en: Now we'll grab another Text, put that in Box 1, and put a title in here, let's
    say `Box 1 Heading`. Then I'll just paste some sample text in there. Let's do
    the same thing for Box 2 and for Box 3.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s do something different. We''ll grab the Recent Posts widget and put
    that in there, and set that Title to `Latest News`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c89f67ce-4fbd-4607-a2f4-5af7d80a38c8.png)'
  prefs: []
  type: TYPE_IMG
- en: We'll save this, go to the frontend, and reload. Now we have our widgets.
  prefs: []
  type: TYPE_NORMAL
- en: 'They don''t look too good, we need to style them. So let''s go to `style.css`.
    We''ll paste in the styling for showcase first. We''ll give it a background, padding
    of `40px`, and `margin-bottom`, and align everything to the center. Let''s do
    the same thing for `h1`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE105]'
  prefs: []
  type: TYPE_PRE
- en: 'Now for the `box` class, we set it to `32%` width, `float:left`; then for `h3`,
    we center it, add a background and some padding:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE106]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s save this and reload:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/42f0337c-2951-43ef-bce8-dae70fe1dc62.png)'
  prefs: []
  type: TYPE_IMG
- en: 'There''s our Home page. You can see that we have Latest News; we can click
    on there and go to the different posts. There''s Gallery and Blog Posts, and just
    to make this look a little better, I''ll go to where we put `side-widget li` and
    add `.box li`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE107]'
  prefs: []
  type: TYPE_PRE
- en: Now that looks better. So let's actually set the number of posts to be seen
    to `3`.
  prefs: []
  type: TYPE_NORMAL
- en: This isn't the best looking style, but the point of this whole project isn't
    the design or style, or to create something beautiful, it's to get you familiar
    with the functionality of creating a WordPress theme.
  prefs: []
  type: TYPE_NORMAL
- en: We'll have one more section and that's going to be for the comments, because
    right now in our blog, if we go to a regular post there's no comment functionality.
  prefs: []
  type: TYPE_NORMAL
- en: Comment Functionality
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we'll add the custom comment functionality.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s open up `single.php` and go right under `endif`. We''ll say `<?php comments_template();
    ?>`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE108]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s save this and reload. We have our comment section now:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/8a59a226-97dd-475b-96e6-b7270629fac6.png)'
  prefs: []
  type: TYPE_IMG
- en: Let's say `Great Post`, click on Post Comment, and it works!
  prefs: []
  type: TYPE_NORMAL
- en: Now this will work as far as functionality goes, but it doesn't look too good,
    so I want to show you how we can customize this.
  prefs: []
  type: TYPE_NORMAL
- en: 'We''ll create a new page, or a new file, and we''ll call this `comments.php`.
    If we go back now and reload you''ll see there''s nothing here, it''s reading
    from this file; if we say `Test` and reload, we get Test:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4df7b01a-d2ea-4e9e-ad97-18577c9a3158.png)'
  prefs: []
  type: TYPE_IMG
- en: So it's up to us to customize how we want this to work.
  prefs: []
  type: TYPE_NORMAL
- en: There's actually some helpful code in the documentation at [https://codex.wordpress.org/Function_Reference/wp_list_comments](https://codex.wordpress.org/Function_Reference/wp_list_comments)
    for our `wp_list_comments`, and this is what we want.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the `comments.php` file enter the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE109]'
  prefs: []
  type: TYPE_PRE
- en: Let's first of all put an `<h2>` tag and say `Comments`.
  prefs: []
  type: TYPE_NORMAL
- en: We can create an arguments array. I'll grab that. Obviously, we don't need most
    of this stuff, but it's not going to hurt us to keep it in there; you'll see a
    lot of this is set to null, just in case you wanted to change anything later on.
    I'll change `avatar_size` to `80`, make it a little bigger. The rest we can leave.
    These arguments will now get plugged into the `wp_list_comments()` function. Next,
    we'll pass in `args` and `comments`. So, that takes care of the comments. Now
    we need the form so that can also take some arguments.
  prefs: []
  type: TYPE_NORMAL
- en: 'From the bottom I''ll grab this code, paste that in; it just needs a `php`
    tag. We''ll set another argument array, `comments_args`; actually let''s call
    this `form_args`, and then change `comments_args` to `form_args`. Let''s set the
    label of the submit button, what you want in the `title_reply` field, comment
    after, `comment_notes_after`, and then the `comment_field` itself; in this case,
    they give you a paragraph with the class of `comment-form-comment` as the label.
    I don''t think we really want to change anything here. For the text area, we''ll
    add in a couple of attributes; we''ll set `cols` to `45` and `rows` to `8`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE110]'
  prefs: []
  type: TYPE_PRE
- en: 'We''ll save it and reload. This is good:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/348d1011-cf94-4cc3-b74f-6d688d79ceda.png)'
  prefs: []
  type: TYPE_IMG
- en: The rest of it we'll do in CSS.
  prefs: []
  type: TYPE_NORMAL
- en: 'We''ll now go to `style.css`. Let''s go down to the bottom and paste this code
    in; this is going to be `comment-body`, we''ll give it a `border`, `margin`, and
    `padding`. We also want the meta which is this area here, the avatar, and then
    the date and all that stuff; let''s paste that in:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE111]'
  prefs: []
  type: TYPE_PRE
- en: 'We''ll add a dark background, some padding, and for the image, I''ll float
    it to the left, add the time and some margin to that. Next, we''ll format reply-link
    to make it look like a button, and then the form itself:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE112]'
  prefs: []
  type: TYPE_PRE
- en: 'For the form input and the text area, we''ll just set width to `100%`, and
    we''ll add some padding, border, and stuff like that:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE113]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s save this and reload, we can see that it looks a lot better:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/aff829c3-5901-4210-92cf-ae3c23783375.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Let''s type something here. If we''re logged out, then we also have the Name,
    Email, and Website fields:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/adb2c84b-2db7-478e-b16f-76b16db74026.png)'
  prefs: []
  type: TYPE_IMG
- en: 'I think that looks pretty good. It looks a lot better than the default. Let''s
    say `This is a great article` and click on Send:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e434aa5a-2ca2-4c66-b97f-fa81fca9e992.png)'
  prefs: []
  type: TYPE_IMG
- en: Since we weren't logged in, it just says it's awaiting moderation, and that's
    good; it's working great!
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Great! So that was pretty much it. The purpose of this project wasn't to build
    a beautiful theme, it was to really get you familiar with the different files
    that we need to create the syntax, the different functions, and things like that.
  prefs: []
  type: TYPE_NORMAL
- en: We saw different post formats and created design using HTML and CSS. We created
    a WordPress theme by learning how to display blog posts, single posts, custom
    archive pages, and different post formats. We also saw how to add an image to
    the post and dealt with pages, custom templates, and sub navigation. We also worked
    around theme widgets, custom homepages, and the comment functionality.
  prefs: []
  type: TYPE_NORMAL
- en: So, hopefully you enjoyed this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: In our next chapter, we will build a WordPress theme for the photo gallery.
  prefs: []
  type: TYPE_NORMAL
