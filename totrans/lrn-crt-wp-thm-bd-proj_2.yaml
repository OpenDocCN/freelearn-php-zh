- en: Building a WordPress Theme
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建WordPress主题
- en: 'In this chapter, we''ll jump into more details and get our feet wet. In the
    previous chapter, we covered the basics, but now we''ll use some of the more advanced
    concepts to build a WordPress theme. Here we will cover the following concepts:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将深入了解并湿脚。在前一章中，我们介绍了基础知识，但现在我们将使用一些更高级的概念来构建WordPress主题。以下是我们将涵盖的概念：
- en: Custom template pages
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自定义模板页面
- en: Archived pages
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 归档页面
- en: Post formats
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 帖子格式
- en: Custom home pages
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自定义主页
- en: 'Let''s take a quick look at the project:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们快速看一下这个项目：
- en: '![](img/bd1a0cdc-1e15-41d6-8109-d328b78f08db.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/bd1a0cdc-1e15-41d6-8109-d328b78f08db.png)'
- en: In the preceding image, you can see the WordpressDev home page with some widgets
    that we'll implement, such as the showcase. You can also see three box widgets.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的图片中，你可以看到WordpressDev主页和一些我们将要实现的组件，例如展示组件。你还可以看到三个框组件。
- en: Post formats
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 帖子格式
- en: 'When you visit the blog page, you can see we have multiple post types:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 当你访问博客页面时，你可以看到我们有多种帖子类型：
- en: Gallery posts
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图库帖子
- en: Linked posts
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 链接帖子
- en: A-side posts
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: A面帖子
- en: Regular blog posts
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 普通博客帖子
- en: 'In the following screenshot, you can see Gallery post and the linked posts:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的屏幕截图中，你可以看到图库帖子以及链接帖子：
- en: '![](img/dd09d23f-3d34-40a6-8cb1-a2db3de8d746.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/dd09d23f-3d34-40a6-8cb1-a2db3de8d746.png)'
- en: 'This is how the A-side post looks:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是A面帖子的样子：
- en: '![](img/320f269b-1817-4779-9486-cb3578389aa1.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/320f269b-1817-4779-9486-cb3578389aa1.png)'
- en: 'This is what a regular blog post looks like:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是一篇普通博客帖子的样子：
- en: '![](img/4902d9ca-77aa-4088-81d5-65f90addc7fe.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/4902d9ca-77aa-4088-81d5-65f90addc7fe.png)'
- en: 'When we click on Read More, it takes us to a single page where we have our
    comment form and the customized comments interface, as shown in the following
    image:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们点击“阅读更多”时，它会带我们到一个单独的页面，在那里我们有评论表单和定制的评论界面，如下面的图片所示：
- en: '![](img/0e1fb70d-46d6-4ddd-8a59-a5d93150ff9f.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/0e1fb70d-46d6-4ddd-8a59-a5d93150ff9f.png)'
- en: 'We will now see how to create custom layouts; for instance, the About page,
    shown in the following screenshot, is in a layout called Company, where we have
    the phone number displayed in a `div` class:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将看到如何创建自定义布局；例如，下面的屏幕截图所示的关于页面，其布局称为公司，其中电话号码显示在`div`类中：
- en: '![](img/8c7c8fee-1e76-4392-ac71-d16ce008fb2f.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/8c7c8fee-1e76-4392-ac71-d16ce008fb2f.png)'
- en: 'Now let''s click on Posts or Pages and then on About:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们点击帖子或页面，然后点击关于：
- en: '![](img/c4cf5a53-c4e7-4f1f-897d-76267fadda03.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/c4cf5a53-c4e7-4f1f-897d-76267fadda03.png)'
- en: 'You''ll see that we have Default Template and Company Layout in the Template
    option:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 你会看到我们有默认模板和公司布局在模板选项中：
- en: '![](img/9948aa06-31d8-4869-9bba-4afed505994c.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/9948aa06-31d8-4869-9bba-4afed505994c.png)'
- en: 'Now we will see how to create a submenu for pages that have parents; for instance
    our About page has two children, FAQ and Our Team, as shown in the following screenshot:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将看到如何为有父级的页面创建子菜单；例如，我们的关于页面有两个子页面，常见问题和我们的团队，如下面的屏幕截图所示：
- en: '![](img/23b0711d-d18e-40cf-af0e-993296eb74cd.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/23b0711d-d18e-40cf-af0e-993296eb74cd.png)'
- en: 'Now let''s take a look at an archive listing. Go to the blog page and click
    on one of categories such as Technology:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看看归档列表。转到博客页面并点击一个分类，例如技术：
- en: '![](img/21247cee-9c94-4244-a232-68a2fbfe1490.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/21247cee-9c94-4244-a232-68a2fbfe1490.png)'
- en: 'We can see that the page displays all the posts in Technology. Also, if we
    go to the username and click on that, it''ll show you posts by that author, and
    as you can see in the following image, it''s a custom layout for the archive pages:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到页面显示了所有关于技术的帖子。如果我们点击用户名并点击它，它将显示该作者的帖子，如下面的图片所示，这是归档页面的自定义布局：
- en: '![](img/f2806178-1520-406c-a75c-f9198f641f2d.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/f2806178-1520-406c-a75c-f9198f641f2d.png)'
- en: 'Let''s go ahead and search. We have a special theme or a special layout for
    that, as you can see in the following screenshot:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续搜索。我们有一个特殊的主题或布局，正如你在下面的屏幕截图中所看到的：
- en: '![](img/cdf2cfe4-ea72-4fdc-a934-da24870dbb61.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/cdf2cfe4-ea72-4fdc-a934-da24870dbb61.png)'
- en: We'll get in a little deeper than we did in the first chapter.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们会比第一章更深入地探讨。
- en: Creating a design using HTML and CSS
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用HTML和CSS创建设计
- en: Let's see how to create our theme, but before we get into WordPress, we'll first
    map out and just create the design using HTML and CSS.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何创建我们的主题，但在我们进入WordPress之前，我们将首先绘制并使用HTML和CSS创建设计。
- en: Usually, when we build a WordPress theme, or a Drupal or Joomla theme, you can
    usually create the design first using just static HTML and CSS.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，当我们构建WordPress主题、Drupal或Joomla主题时，你通常可以使用静态HTML和CSS首先创建设计。
- en: Building the HTML body
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建HTML主体
- en: As you can see in the following screenshot, we have an empty folder called `advanced-wp-html`,
    and we'll create a couple of files here. First, we'll create an `index.html` file,
    and then we'll create our style sheet, which will just be `style.css`.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如以下截图所示，我们有一个名为`advanced-wp-html`的空文件夹，我们将在其中创建几个文件。首先，我们将创建一个`index.html`文件，然后我们将创建我们的样式表，它将只是`style.css`。
- en: 'Let''s open both the files with Sublime editor. In the `index.html` file, add
    in our core html markup, as shown in the following code block:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们用Sublime编辑器打开这两个文件。在`index.html`文件中，添加我们的核心HTML标记，如下面的代码块所示：
- en: '[PRE0]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'We''ll update the code, as shown here:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将更新代码，如下所示：
- en: '[PRE1]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Here, we have `Advanced WP Theme` as the title and added a link to our style
    sheet, and put an `href` attribute that's going to go to `style.css`. Then down
    in the body, we created our markup with the header. Since we're using HTML5 syntax,
    we used a `<header>` tag, and created a `<div>` with the `container` class. Inside
    the `container` class, we have a `<h1>` tag, which says `Advanced Wordpress Theme`;
    of course, when we actually create the WordPress theme, this will be dynamic and
    you'll be able to change it from within the admin area, but for now we'll just
    going to stick some static text in here.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们有“高级WP主题”作为标题，并添加了一个到我们的样式表的链接，并放置了一个`href`属性，它将指向`style.css`。然后在body中，我们创建了一个带有标题的标记。由于我们使用HTML5语法，我们使用了`<header>`标签，并创建了一个带有`container`类的`<div>`。在`container`类内部，我们有一个`<h1>`标签，上面写着“高级Wordpress主题”；当然，当我们实际创建WordPress主题时，这将动态的，你将能够在管理区域中更改它，但现在我们只是在这里放一些静态文本。
- en: 'Now, after the `<h1>` tag, we''ll have another `div` class and we''ll give
    this an `h_right` class for a header right. And this is where our search form
    is going to go, so for now we''ll just put a `<form>` tag and an `<input>` tag
    as shown in the following code block. We''ll give it a `placeholder`, and just
    say `Search...`:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在`<h1>`标签之后，我们将有一个另一个`div`类，并给它一个`h_right`类作为右侧标题。这就是我们的搜索表单将要放置的地方，所以现在我们只是放一个`<form>`标签和一个`<input>`标签，如下面的代码块所示。我们将给它一个`placeholder`，并说“搜索...”：
- en: '[PRE2]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Now, let''s go underneath `</header>` and create our navigation, as shown in
    the following code block:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们在`</header>`标签下方创建我们的导航，如下面的代码块所示：
- en: '[PRE3]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: As you can see, we have used a `<nav>` tag with `nav` class and added `main-nav`
    to it. Next we added `<div>` with `class="container"` just to move everything
    towards the center. Then, inside, we have placed `<ul>` with some `<li>` tags
    and some links. We have added `Home`, `About`, and `Services`. However, since
    we're not actually going to have a `Services` page, we will have an `About` page
    so that we have some perspective on using on an inner page. So, `index` page will
    be the blog post, `About` will be just a regular page.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，我们使用了一个带有`nav`类的`<nav>`标签，并给它添加了`main-nav`。接下来，我们添加了一个带有`class="container"`的`<div>`，只是为了将所有内容移动到中心。然后，在内部，我们放置了一个带有一些`<li>`标签和一些链接的`<ul>`。我们添加了“首页”、“关于”和“服务”。然而，由于我们实际上不会有“服务”页面，我们将有一个“关于”页面，这样我们就可以在内部页面上使用它。所以，“首页”将是博客帖子，“关于”将只是一个普通页面。
- en: 'Next, let''s add the following code after the `</nav>` tag:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们在`</nav>`标签之后添加以下代码：
- en: '[PRE4]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Here, we have added a `div` element, with a `container` class, and a `content`
    class. Then, inside, we have added another `div` element, with a `class="main
    block"`. Here, `block` is a class that we can use all around the site, we can
    use it for widgets as well; it's just going to have some padding and also a border.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们添加了一个带有`container`类和`content`类的`div`元素。然后，在内部，我们添加了另一个带有`class="main block"`的`div`元素。在这里，`block`是一个我们可以在整个网站上使用的类，我们也可以用它来设置小工具；它只是会有一些填充和边框。
- en: Now inside this `div`, we have our main post; so each post has an `<article>`
    tag with a `post` class. We have added a paragraph that has a `meta` class. This
    is where things such as the date of the posts and the author name will go. This
    might change a little bit as far as the format goes when we actually build the
    WordPress theme; for now we're just going to say `Posted at 11:00 on May 9 by
    admin`. So it'll look something like that.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 现在在这个`div`内部，我们有我们的主要帖子；所以每个帖子都有一个带有`post`类的`<article>`标签。我们添加了一个带有`meta`类的段落。这就是放置诸如帖子日期和作者姓名等内容的区域。当我们实际构建WordPress主题时，格式可能会有一些变化；现在我们只是说“发布于5月9日11:00，由admin发布”。所以它看起来会是这样。
- en: 'We also need a title. For that, put an `<h2>` tag and say `Blog Post 1`, as
    shown in the following code:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要一个标题。为此，放一个`<h2>`标签，并说“博客帖子1”，如下面的代码所示：
- en: '[PRE5]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Now let's just add some content real quick. We will go to the [www.lipsum.com](http://www.lipsum.com)
    and click on Generate Lorem Ipsum.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们快速添加一些内容。我们将访问[www.lipsum.com](http://www.lipsum.com)并点击生成Lorem Ipsum。
- en: '![](img/50180b99-18fd-4721-b6ae-99ef4d8c0972.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/50180b99-18fd-4721-b6ae-99ef4d8c0972.png)'
- en: 'We will copy and paste some content and then we will add some paragraph tags.
    The next thing we need after that is a `Read More` button. We''ll add a link;
    we''ll give it a class of `button`, as shown in the following code block:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将复制并粘贴一些内容，然后添加一些段落标签。接下来，我们需要的是`Read More`按钮。我们将添加一个链接；我们将给它一个`button`类，如下面的代码块所示：
- en: '[PRE6]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Then we'll copy the entire article post and paste it two more times. If we want
    to take a look at it, open the `index.html` file.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将整个文章帖子复制并粘贴两次。如果我们想查看它，请打开`index.html`文件。
- en: '![](img/a67469b4-55d9-44d6-b49a-bfb488ffe7a9.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/a67469b4-55d9-44d6-b49a-bfb488ffe7a9.png)'
- en: 'You can see in the preceding screenshot that it does not look pretty yet. So,
    now we''ll add a footer. To do this, let''s go to the last `<div>` tag and enter
    the following code:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从前面的屏幕截图看到，它看起来还不是很好看。所以，现在我们将添加一个页脚。为此，让我们进入最后一个`<div>`标签并输入以下代码：
- en: '[PRE7]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Here, we have added a `<footer>` tag with a `"main-footer"` class; we also
    have a container for it. In the container, we have a left side and a right side
    of the footer; so we have added `<div class="f_left">` and `f_right`. So, on the
    left-hand side, we will have a paragraph that will have a copyright, and then
    on the right-hand side, we will have another menu. For that, we have then copied
    the `<ul>` from above and pasted it. This is enough for the markup for the HTML.
    Now let''s reload the file:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们添加了一个带有`"main-footer"`类的`<footer>`标签；我们还有一个它的容器。在容器中，我们有页脚的左侧和右侧；所以我们添加了`<div
    class="f_left">`和`f_right`。因此，在左侧，我们将有一个包含版权信息的段落，而在右侧，我们将有一个另一个菜单。为此，我们然后从上面复制了`<ul>`并将其粘贴。这已经足够了，对于HTML的标记。现在让我们重新加载文件：
- en: '![](img/82c4b61a-38a1-4bdb-997d-533a3680d182.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/82c4b61a-38a1-4bdb-997d-533a3680d182.png)'
- en: We have a footer down here; It looks pretty horrible, that's because we have
    no styling. Next, we will see how to add CSS.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里有一个页脚；它看起来很糟糕，这是因为我们没有添加样式。接下来，我们将看到如何添加CSS。
- en: Adding CSS
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加CSS
- en: 'We will now see how adding CSS makes our page look a lot better. We have our
    `style.css` created; to it, let''s add the body, as shown in the following code
    block:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将看到添加CSS如何使我们的页面看起来好很多。我们已经创建了`style.css`；让我们向其中添加body，如下面的代码块所示：
- en: '[PRE8]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Here, we have just added a `font-family` of `Arial`; the color of the text is
    going to be a really dark gray. We have set the body margin to `0` and the padding
    to `0`.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们只是添加了`Arial`字体；文字颜色将是深灰色。我们设置了主体边距为`0`和填充为`0`。
- en: 'Let''s start with some core styles for the unordered list. I want to just take
    off the margin and the padding, using the following code:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从无序列表的几个核心样式开始。我想移除边距和填充，使用以下代码：
- en: '[PRE9]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Now let''s add the links or the `a` tags, as shown in the following code:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们添加链接或`a`标签，如下面的代码所示：
- en: '[PRE10]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Here, we have added a light blue color, `009acd`, and set `text-decoration`
    to `none`. We also require a hover color; in this case, the hover color will just
    be dark gray. Next, we have `container`, which brings everything to the middle.
    We have set a width of `960`, and set `margin` to `auto`. The `overflow` is set
    to `auto`. We have `header` with a light gray `background`; we have set the padding
    of the header to `10px` and `border-bottom` to `3px solid`, and it's also of that
    same light blue color.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们添加了浅蓝色，颜色代码为`009acd`，并将`text-decoration`设置为`none`。我们还需要一个悬停颜色；在这种情况下，悬停颜色将是深灰色。接下来，我们有`container`，它将所有内容都居中。我们设置了宽度为`960`，并将`margin`设置为`auto`。`overflow`设置为`auto`。我们有一个带有浅灰色背景的`header`；我们设置了页眉的填充为`10px`和`border-bottom`为`3px
    solid`，并且它也是同样的浅蓝色颜色。
- en: 'Now let''s add `header h1` with a margin and padding of `0`:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们添加带有边距和填充为`0`的`header h1`：
- en: '[PRE11]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: As you can see, we have also added the color as light blue, and we want to float
    it to the left.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，我们还将颜色设置为浅蓝色，并希望将其浮动到左侧。
- en: 'Then, we also want that `<h1>` to be a link. For this, we will go to the `index.html`
    file and wrap it in `a` tag, as shown in the following code block:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们也想让`<h1>`成为一个链接。为此，我们将进入`index.html`文件并将它包裹在`a`标签中，如下面的代码块所示：
- en: '[PRE12]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Next, we will create `header`, `h1` and `a` with the color of light blue. The
    text-decoration is set to `none`, as you can see in the following code block:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将创建带有浅蓝色颜色的`header`、`h1`和`a`。文本装饰设置为`none`，如以下代码块所示：
- en: '[PRE13]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Now let''s add a slogan or a tagline, because WordPress by default has an option
    for that. So right inside of the `<h1>` tag, we will put a slogan in a `<small>`
    tag, which will say `Another Wordpress Theme`:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们添加一个标语或口号，因为WordPress默认有一个这样的选项。所以直接在 `<h1>` 标签内，我们将一个标语放在一个 `<small>`
    标签中，内容为 `Another Wordpress Theme`：
- en: '[PRE14]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Let''s style that using the following code:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用以下代码来设置样式：
- en: '[PRE15]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: We have added `header` `small`, and given it a color of dark gray. We have set
    `margin-left` to `1px` margin, and `font-size` to `13px`.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经添加了 `header` `small`，并给它设置了深灰色。我们将 `margin-left` 设置为 `1px` 的边距，并将 `font-size`
    设置为 `13px`。
- en: 'Now for the right side of the header, add the following code:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 现在为页眉的右侧添加以下代码：
- en: '[PRE16]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: We have `header .h_right` and we'll float that to the right.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有 `header .h_right`，并将它浮动到右侧。
- en: 'Now, since it has an input, we''ll style the input. Let''s just make sure it''s
    only for the text input. To do this, we will enter the following code:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，由于它有一个输入，我们将设置输入的样式。为此，我们将输入以下代码：
- en: '[PRE17]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Here, we have entered `type="text"` and set a width of `250px`. We have also
    set a padding of `5px`, and a margin-top of `5px`.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们输入了 `type="text"` 并设置宽度为 `250px`。我们还设置了 `padding` 为 `5px`，以及 `margin-top`
    为 `5px`。
- en: 'Let''s save it and take a look:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们保存它并看一下：
- en: '![](img/a9cbe045-7996-462d-9075-e270fe9a6838.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a9cbe045-7996-462d-9075-e270fe9a6838.png)'
- en: We can see our header.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到我们的页眉。
- en: 'Next, we''ll work on the navigation. We want to have the main `nav` div for
    stuff like the height, background color, and similar customizations; however,
    we do want to have just a regular `nav` class to do the floats, so that our footer
    menu can have our list item floated, and stuff like that. So we will not put anything
    for that yet. We want to do `li` of the `nav` element. We''ll make sure that we
    have that. You can see in the code we entered so far that we have the `nav` class
    and `main-nav`. Now, we''ll float the list items to the left, and we''ll enter
    `display:inline` and set a padding on the right of `15px`:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将处理导航。我们想要有一个主要的 `nav` div 来处理高度、背景颜色和类似的定制；然而，我们确实想要有一个普通的 `nav` 类来处理浮动，这样我们的页脚菜单就可以将列表项浮动，等等。所以现在我们不会为那个添加任何内容。我们想要做
    `nav` 元素的 `li`。我们将确保我们有那个。你可以在我们输入的代码中看到，我们有 `nav` 类和 `main-nav`。现在，我们将列表项浮动到左侧，并输入
    `display:inline`，并在右侧设置 `15px` 的填充：
- en: '[PRE18]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Next, we''ll add `nav.nav a`, and make sure that the text-decoration is set
    to `none`:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将添加 `nav.nav a`，并确保将文本装饰设置为 `none`：
- en: '[PRE19]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Now let''s do `main-nav`:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们来做 `main-nav`：
- en: '[PRE20]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Here, we have set the height to `45px`, `overflow` is `hidden`, and we have
    set the background to dark gray. The color of the text will be white, and `padding-top`
    is set to `7px`.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将高度设置为 `45px`，`overflow` 设置为 `hidden`，并将背景设置为深灰色。文字颜色将是白色，`padding-top`
    设置为 `7px`。
- en: 'Now let''s add `main-nav li`:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '现在我们来添加 `main-nav li`:'
- en: '[PRE21]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'We have set height to `40px`, and `line-height` to `40px`. Next, we''ll add
    the `a` tag:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将高度设置为 `40px`，并将 `line-height` 设置为 `40px`。接下来，我们将添加 `a` 标签：
- en: '[PRE22]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Here we set the color as white, `text-decoration` as `none`, and `padding` as
    `8px`.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将颜色设置为白色，`text-decoration` 设置为 `none`，并将 `padding` 设置为 `8px`。
- en: 'Now we need the hover state:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要悬停状态：
- en: '[PRE23]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Here we have `nav.main-nava:hover`, and the hover `color` is set to light blue.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们有 `nav.main-nava:hover`，并将悬停 `color` 设置为浅蓝色。
- en: 'We''ll save this, and look at our navigation:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将保存这个，并查看我们的导航：
- en: '![](img/2ace161a-d362-4aa7-b9d4-f946b0337c96.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2ace161a-d362-4aa7-b9d4-f946b0337c96.png)'
- en: 'As you can see, the whole highlighted area has a class of `content`, we just
    want to push it down a little bit and set the line height of all the text:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所见，整个高亮区域都有一个 `content` 类，我们只想把它向下推一点，并设置所有文本的行高：
- en: '[PRE24]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: We have `.content` with `margin-top` set to `30px` and `line-height` to `1.5em`.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有 `.content`，`margin-top` 设置为 `30px`，`line-height` 设置为 `1.5em`。
- en: 'Now we will include a sidebar since we have not done that earlier. For this,
    let''s open the `index.html` file and add the following code:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将包括一个侧边栏，因为我们之前还没有这样做。为此，让我们打开 `index.html` 文件并添加以下代码：
- en: '[PRE25]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: We have put our sidebar right underneath the closing `</div>` tag. We have added
    a `div class` with a class of `side`. We have also added a `<div>` tag inside
    called block. Each element in the sidebar should have a class of `block`. Then
    we have an `<h3>` tag, which says `Sidebar Head`, and we have put a paragraph
    for which we have grabbed some text. Then, under this, we have placed a button,
    or a link that is formatted like a button. Now we can see our sidebar.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将侧边栏放在了`</div>`标签的下方。我们添加了一个带有`side`类的`div class`，还添加了一个内部名为`block`的`<div>`标签。侧边栏中的每个元素都应该有一个`block`类。然后我们有一个`<h3>`标签，上面写着`Sidebar
    Head`，我们还放置了一个段落，其中包含我们抓取的一些文本。然后，在这个下面，我们放置了一个按钮，或者一个格式像按钮的链接。现在我们可以看到我们的侧边栏了。
- en: 'Let''s go back to the `style.css` file. Here, we''ll enter `.main`, which we''ll
    float to the left, and we enter a width of `65%` for it. Then, let''s add a width
    of `30%` for side, and float it to the right. Next, for the block style, we will
    set a border of light gray, which is `1px` solid. We will also add some padding
    of `5px 15px 25px 15px` and set the background to a really light gray and `overflow`
    to `hidden`. For `h3` in the block, we will set `border-bottom`, which will be
    light gray, and solid of `1px`; we''ll also set a padding of `10px` to the bottom:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回到`style.css`文件。在这里，我们将输入`.main`，并将其左浮动，并为其设置宽度为`65%`。然后，让我们为侧边栏添加宽度为`30%`，并将其右浮动。接下来，对于块样式，我们将设置浅灰色边框，为`1px`实线。我们还将添加一些内边距`5px
    15px 25px 15px`，并将背景设置为非常浅的灰色和`overflow`设置为`hidden`。对于块中的`h3`，我们将设置`border-bottom`，这将为浅灰色，实线为`1px`；我们还将设置底部内边距为`10px`：
- en: '[PRE26]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Let''s take a look at this. You can see that now we have our main area and
    the sidebar:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看这个。你可以看到现在我们有了主区域和侧边栏：
- en: '![](img/b936bacb-7705-46ff-b472-82a4d61be549.png)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/b936bacb-7705-46ff-b472-82a4d61be549.png)'
- en: 'Next, let''s add the article. We will place an `article` tag with a `post`
    class, and we will add `border-bottom`, `margin-bottom`, and `padding-bottom`,
    as shown here:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们添加文章。我们将放置一个带有`post`类的`article`标签，并添加`border-bottom`、`margin-bottom`和`padding-bottom`，如下所示：
- en: '[PRE27]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Now let''s style the meta area highlighted in the following image; we will
    give it a blue background:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们为以下图像中突出显示的元区域设置样式；我们将为其添加蓝色背景：
- en: '![](img/04eeea7e-022f-4318-b097-ccf5692d3f39.png)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/04eeea7e-022f-4318-b097-ccf5692d3f39.png)'
- en: 'To do this, let''s enter the following code:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 要做到这一点，让我们输入以下代码：
- en: '[PRE28]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'We have entered `article.post .meta` with a padding of `7px`. We also added
    the `button` class with the padding set to `10px 15px`. We also displayed it as
    an inline block. Let''s take a look now:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 我们输入了`article.post .meta`，并设置了内边距为`7px`。我们还添加了`button`类，并将内边距设置为`10px 15px`。我们还将其显示为内联块。现在让我们看看：
- en: '![](img/031a96cf-22bb-45a2-9e52-5e5a741bd3bd.png)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/031a96cf-22bb-45a2-9e52-5e5a741bd3bd.png)'
- en: This looks pretty good.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 这看起来相当不错。
- en: Let's add the footer now. We will enter `footer`, give it the `.main-footer`
    class, and set a margin on the top of `40px`. We'll align everything to the center
    and give it a dark gray background. We'll set `color` as white, and height as
    `60px`, `padding-top:10px` and `overflow` as `auto`.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们添加页脚。我们将输入`footer`，给它`.main-footer`类，并在顶部设置`40px`的边距。我们将使所有内容居中，并给它一个深灰色背景。我们将设置`color`为白色，高度为`60px`，`padding-top:10px`和`overflow`为`auto`。
- en: 'Next we will add the left- and right-hand side of the footer. To do this, we
    will enter `footer.main-footer .f_left` with a left float, and we''ll do the same
    thing for the right-hand side, giving it a right float:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将添加页脚的左右两侧。为此，我们将进入`footer.main-footer .f_left`，并使用左浮动，然后对右侧做同样的事情，给它一个右浮动：
- en: '[PRE29]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'We will now move on to the menu. We''ll enter `ul` with an inline display,
    and then we have `li`, as shown as follows:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将转到菜单。我们将使用内联显示的`ul`，然后我们有`li`，如下所示：
- en: '[PRE30]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: For `li`, we have `float:left`, `padding-right` set as `10px`, and `list-style`
    set to `none`.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`li`，我们设置了`float:left`，将`padding-right`设置为`10px`，并将`list-style`设置为`none`。
- en: 'Lastly, we''ll color the links white. Now, let''s take a look:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将链接的颜色设置为白色。现在，让我们看看：
- en: '![](img/d886e227-15f5-45b7-b6ec-7776d5e4e0db.png)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/d886e227-15f5-45b7-b6ec-7776d5e4e0db.png)'
- en: 'We''ll just want to push footer down a little bit. To do this, enter the following
    code:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 我们只想将页脚向下推一点。为此，输入以下代码：
- en: '[PRE31]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Now, look at it:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，看看它：
- en: '![](img/2b1717d0-5814-46c5-8494-895c1da8dd35.png)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/2b1717d0-5814-46c5-8494-895c1da8dd35.png)'
- en: This looks pretty good; it's a very simple design, we didn't want to go all
    out because the main point of this is to get you familiar with the syntax to create
    a WordPress theme, not so much about creating a great design. So now that we're
    done with HTML and CSS, we can move on to create our WordPress theme.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 这看起来相当不错；这是一个非常简单的设计，我们不想做得太过分，因为这个的主要目的是让你熟悉创建WordPress主题的语法，而不是创建一个伟大的设计。所以现在我们完成了HTML和CSS，我们可以继续创建我们的WordPress主题。
- en: Creating a WordPress theme
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建WordPress主题
- en: Now we'll convert our HTML template into a WordPress theme. I have a fresh install
    of WordPress here with just the default twentysixteen theme. We will go to the
    WordPress folder, `wp-content` and then in the `themes` folder, we will create
    a new folder and name it `advanced-wp`.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将把我们的HTML模板转换成一个WordPress主题。我在这里有一个全新的WordPress安装，只有默认的twentysixteen主题。我们将进入WordPress文件夹，`wp-content`，然后在`themes`文件夹中，我们将创建一个新的文件夹并命名为`advanced-wp`。
- en: Here we will create a `style.css` file and also an `index.php` file.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 这里我们将创建一个`style.css`文件和一个`index.php`文件。
- en: 'Now let''s open the style sheet. Here we will put our declaration first, so
    that WordPress can see the theme. We will set `Theme Name` as `Advanced WP` and
    enter a value for `Author`. Next we will add `Author URI`, a description, and
    a version:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们打开样式表。在这里，我们将首先放置我们的声明，这样WordPress就能看到这个主题。我们将设置`Theme Name`为`Advanced
    WP`并为`Author`输入一个值。接下来我们将添加`Author URI`、一个描述和一个版本：
- en: '[PRE32]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Now we do have a screenshot as well in our project files, so we will add that.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们项目文件中也有一个截图，所以我们将添加那个。
- en: 'Let''s go to `C:`. Since I''m using AMPPS, I will go to my `www` folder and
    then to `wpthemes\content\themes`, and then to `advanced-wp`. We will go ahead
    and paste the image called `screenshot.png` here. If we go to the backend of WordPress,
    and we go to Appearance and then Themes, you can see that we have the AdvancedWP
    theme:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们转到`C:`。由于我使用的是AMPPS，我将进入我的`www`文件夹，然后转到`wpthemes\content\themes`，然后转到`advanced-wp`。我们将继续粘贴名为`screenshot.png`的图片到这里。如果我们去WordPress的后端，然后转到外观和主题，你可以看到我们有了AdvancedWP主题：
- en: '![](img/e4a5fba4-19f0-4bae-afae-01468a44fac8.png)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e4a5fba4-19f0-4bae-afae-01468a44fac8.png)'
- en: 'We will now go ahead and activate this. If we go to the frontend and reload,
    we just see a blank white page, as shown here:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将激活这个功能。如果我们去前端并重新加载，我们只看到一个空白白色页面，就像这里显示的那样：
- en: '![](img/64e6c642-85d3-4a1d-88d2-f11eaa0fba3e.png)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/64e6c642-85d3-4a1d-88d2-f11eaa0fba3e.png)'
- en: Let's add styles here. Open the `style.css` file from the HTML template. We
    will copy all the code and paste it right in the style sheet.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在这里添加样式。从HTML模板中打开`style.css`文件。我们将复制所有代码并将其直接粘贴到样式表中。
- en: 'We will save this, and then in the `index.php` file, we will copy everything
    from the `index.html` file and paste it in `index.php`:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将保存这个文件，然后在`index.php`文件中，我们将从`index.html`文件中复制所有内容并将其粘贴到`index.php`中：
- en: 'Save it and reload the frontend. We''ll see all the HTML and static HTML:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 保存并重新加载前端。我们会看到所有的HTML和静态HTML：
- en: '![](img/b8c96eb3-936b-4288-a5f6-3fa0a2bee418.png)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/b8c96eb3-936b-4288-a5f6-3fa0a2bee418.png)'
- en: 'We cannot see the style sheet though, because we don''t have it going to the
    right place. So let''s update the code as follows. We will get rid of `style.css`.
    We will open up some `php` tags, and use `bloginfo`, and then we will just put
    `stylesheet_url`:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 但是我们看不到样式表，因为我们没有将其放到正确的位置。所以让我们更新代码如下。我们将移除`style.css`。我们将打开一些`php`标签，并使用`bloginfo`，然后我们只需放入`stylesheet_url`：
- en: '[PRE33]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Let''s save this and reload:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们保存并重新加载：
- en: '![](img/16b4a4be-25e4-48a0-946a-2ed61dc02a9c.png)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/16b4a4be-25e4-48a0-946a-2ed61dc02a9c.png)'
- en: You can see that now the CSS is being read. All the stuff we're looking at here
    is just static content in the `index.php` file, it's not actually coming from
    WordPress yet. So let's do a few things here.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到现在CSS正在被读取。我们在这里看到的所有内容只是`index.php`文件中的静态内容，实际上还不是来自WordPress。所以让我们在这里做一些事情。
- en: 'The best thing to do is to just start at the top and work our way down. Into
    the html tag, we will put the `language_attributes()` function. We will update
    the `<title>` tag with `php bloginfo`, and in it we will put `name`. We will also
    put the character set `<meta>` tag by adding `meta charset`. We can use the `bloginfo()`
    unction as shown and pass in `charset`. Next, we want enter the `wp_head()` function,
    hence we will add `<?php wp_head(); ?>`. Add a `viewport` function using the `<meta>`
    tag with the name `viewport`. We will set the `content` attribute to `width=device-width`.
    Then, we''ll set `initial-scale` to `1.0`; this just helps with the responsiveness
    of the theme:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 最好的做法是从顶部开始，逐步向下工作。在 HTML 标签中，我们将放置 `language_attributes()` 函数。我们将使用 `php bloginfo`
    更新 `<title>` 标签，并在其中放入 `name`。我们还将添加 `meta charset` 字符集 `<meta>` 标签。我们可以使用 `bloginfo()`
    函数，并传递 `charset`。接下来，我们想要输入 `wp_head()` 函数，因此我们将添加 `<?php wp_head(); ?>`。使用 `<meta>`
    标签添加 `viewport` 函数，其名称为 `viewport`。我们将设置 `content` 属性为 `width=device-width`。然后，我们将
    `initial-scale` 设置为 `1.0`；这有助于主题的响应性：
- en: '[PRE34]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Now in the `<body>` tag, we want our `body_class()` function.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 现在在 `<body>` 标签中，我们需要 `body_class()` 函数。
- en: 'For the logo, or the heading, we will get rid of the static text and add `php
    bloginfo` with the name. Next, we will add the tagline to make that dynamic using
    `bloginfo`, and then we can pass in `''description''`:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 对于标志或标题，我们将移除静态文本并添加 `php bloginfo` 与名称。接下来，我们将添加标语，使其动态化使用 `bloginfo`，然后我们可以传递
    `'description'`：
- en: '[PRE35]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Now the search form is pretty easy. We''ll just take the `<form>` tag and add
    some stuff to it. We will update it with `method="get"` and then `action`, which
    is where it''s submitted, and for this, we will enter `php` with the `esc_url()`
    function. We will then pass in `home _url` and then `/`. Then, in the input, we
    will added a `name` attribute and just set it to `s`:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 现在搜索表单相当简单。我们只需将 `<form>` 标签添加一些内容。我们将使用 `method="get"` 更新它，然后是 `action`，这是提交的地方，我们将输入
    `php` 并使用 `esc_url()` 函数。然后，我们将传递 `home_url` 和 `/`。然后，在输入中，我们将添加一个 `name` 属性并将其设置为
    `s`：
- en: '[PRE36]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'That''s pretty much it. The rest will get taken care of by WordPress. Let''s
    save this and look at it so far:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 大概就是这样。其余的将由 WordPress 处理。让我们保存并查看到目前为止的情况：
- en: '![](img/97ebb83d-8e11-4061-be94-09cb0b899629.png)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/97ebb83d-8e11-4061-be94-09cb0b899629.png)'
- en: We have our logo, which is coming from WordPress, same thing with the tagline.
    We can't really test Search yet because we don't have any dynamic content down
    here. Now you'll see that we have the white space at the top; the reason for this
    is that we don't have the `wp_footer()` function yet, which will put the admin
    menu there. We'll add this next.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有我们的标志，它来自 WordPress，标语也是一样。我们实际上还不能测试搜索功能，因为我们这里没有动态内容。现在你会看到顶部有空白区域；这是因为我们还没有
    `wp_footer()` 函数，它将把管理员菜单放在那里。我们将在下一步添加这个函数。
- en: 'Let''s go back and after the closing `</footer>` tag, add `wp_footer()`:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回到代码中，在 `</footer>` 标签之后添加 `wp_footer()`：
- en: '[PRE37]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Let''s save this and reload:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们保存并重新加载：
- en: '![](img/63534abf-b599-4307-a12b-2131944a04d3.png)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/63534abf-b599-4307-a12b-2131944a04d3.png)'
- en: Now you can see that we have our admin bar.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以看到我们的管理员栏。
- en: 'Let''s go back up, and take care of the menu. We''ll go down to where we have
    our `nav` menu, and get rid of the whole `<ul>` tag and all the `<li>` tags. We''ll
    first create a variable called `args`, and we''ll set that to `array`, and the
    arguments can be passed into the `wp_nav_menu()` function. We''ll just have one
    argument for now, which is going to be the location of the menu. So we will enter
    `theme_location` and we set it to `primary`. Next, we will enter `wp_nav_menu`,
    and pass in `args`:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回到上面，处理菜单。我们将下滑到我们的 `nav` 菜单处，移除整个 `<ul>` 标签和所有的 `<li>` 标签。我们首先创建一个名为 `args`
    的变量，并将其设置为 `array`，然后将参数传递给 `wp_nav_menu()` 函数。目前我们只有一个参数，即菜单的位置。所以我们将输入 `theme_location`
    并将其设置为 `primary`。接下来，我们将输入 `wp_nav_menu` 并传递 `args`：
- en: '[PRE38]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'If we go and look at it, we find that it is working here:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们去查看，我们会发现它在这里是工作的：
- en: '![](img/795a859b-23e8-4f76-9258-66ef8d506f96.png)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/795a859b-23e8-4f76-9258-66ef8d506f96.png)'
- en: However, we want to specify in our functions file the different menu positions
    in our theme, and we have two. So let's go and create a new file. We'll save it
    as `functions.php`, and set a function for Theme Support.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，我们想在函数文件中指定主题中不同的菜单位置，我们有两个。所以让我们去创建一个新的文件。我们将将其保存为 `functions.php`，并设置一个用于主题支持的功能。
- en: 'We''ll enter a function with `adv` as a prefix, and then `_theme_support`.
    All of our custom functions will have the `adv` prefix. Next, we''ll register
    the `nav menus`. We will pass in an array and put our different positions; we
    have `primary`, which we will set to a readable name, so we enter `Primary Menu`,
    and then we will add another one in `footer`, and get this out of the way for
    now:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将定义一个以`adv`为前缀的函数，然后是`_theme_support`。我们所有的自定义函数都将有`adv`前缀。接下来，我们将注册`nav menus`。我们将传递一个数组并放置我们的不同位置；我们有`primary`，我们将将其设置为可读的名称，因此我们输入`Primary
    Menu`，然后我们将在`footer`中添加另一个，现在我们先把它放一边：
- en: '[PRE39]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Now underneath the function we''ll add `add_action` and `after_setup_theme`,
    and then the function we want to run is `adv_theme_support`:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 现在在函数下面，我们将添加`add_action`和`after_setup_theme`，然后我们要运行的函数是`adv_theme_support`：
- en: '[PRE40]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Let''s save this and reload:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们保存这个并重新加载：
- en: '![](img/78514160-ee84-4416-b843-76a0a49fee52.png)'
  id: totrans-193
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/78514160-ee84-4416-b843-76a0a49fee52.png)'
- en: You can see that our menu is now here. If we click on it, you'll see the URL
    change, but you won't see any content change because this is all still just static
    HTML, but we do have our menu. Now, by default, every page that we have will show
    up here. Your pages might actually be different; you probably don't have Our Team
    because here I did a little bit of work with this WordPress site earlier, so your
    links may be a little different. Now if you look under Appearance, you'll see
    that we don't have a Menus option.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到我们的菜单现在在这里。如果我们点击它，你会看到URL发生变化，但你不会看到任何内容变化，因为所有这些都仍然是静态HTML，但我们确实有我们的菜单。现在，默认情况下，我们拥有的每个页面都会显示在这里。你的页面可能实际上会有所不同；你可能没有“我们的团队”，因为在这里我之前对这个WordPress站点做了一些工作，所以你的链接可能略有不同。现在如果你查看“外观”，你会看到我们没有“菜单”选项。
- en: '[PRE41]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Since we added `register_nav_menus` to the `functions` file, if we reload now,
    you will see a Menus link. Click on this, and you'll see that in Themes Locations
    we have Primary and Footer because we added them in the functions file.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 自从我们在`functions`文件中添加了`register_nav_menus`之后，如果我们现在重新加载，你会看到一个“菜单”链接。点击这个链接，你会看到在“主题位置”我们有“主要”和“页脚”，因为我们已经在`functions`文件中添加了它们。
- en: 'Let''s check the Primary Menu, and for menu name let''s just enter `Main Menu`,
    and you can put whatever pages you''d like. We''ll just leave one unchecked, we''ll
    leave Our Team unchecked; and click on Add to Menu. Then, click on Save Menu:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们检查“主要菜单”，在菜单名称中我们只输入“主菜单”，你可以放置你想要的任何页面。我们只保留一个未勾选的，我们保留“我们的团队”未勾选；然后点击“添加到菜单”。然后，点击“保存菜单”：
- en: '![](img/ed75044e-6299-444c-b489-c71192c72a5d.png)'
  id: totrans-198
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/ed75044e-6299-444c-b489-c71192c72a5d.png)'
- en: 'Now if we go to the frontend, you will see we only have About and Sample Page:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 现在如果我们去前端，你会看到我们只有“关于”和“样本页面”：
- en: '![](img/d5df4f0f-c7cc-4b01-a859-d701df91849d.png)'
  id: totrans-200
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/d5df4f0f-c7cc-4b01-a859-d701df91849d.png)'
- en: Now I will create a couple of pages, so that you have the same pages as I do.
    So we have an `About` page which just says This is the about page.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我将创建几个页面，这样你就有和我一样的页面。所以我们有一个“关于”页面，上面只写着“这是关于页面”。
- en: 'For `Our Team` page, we will choose the parent of `About` and we''ll update
    it:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 对于“我们的团队”页面，我们将选择“关于”的父级，并更新它：
- en: '![](img/eccba390-63f5-4ca7-8938-07f40d48ffb7.png)'
  id: totrans-203
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/eccba390-63f5-4ca7-8938-07f40d48ffb7.png)'
- en: 'Now let''s create a new page called `FAQ`. We will select the parent of About,
    and you''ll see why we''re doing this later on:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们创建一个名为`FAQ`的新页面。我们将选择“关于”的父级，你稍后会看到我们为什么要这样做：
- en: '![](img/79537a11-4176-4c1e-b194-e3d127cf8b69.png)'
  id: totrans-205
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/79537a11-4176-4c1e-b194-e3d127cf8b69.png)'
- en: 'Then, we''ll create another page called Services, and this will not have a
    parent. Next let''s add Services to the menu as shown. We will not add FAQ or
    Our Team just yet. We will see how we can use submenus, but we''ll do that later
    on:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将创建另一个名为“服务”的页面，这个页面没有父级。接下来让我们按照以下方式将“服务”添加到菜单中。我们暂时不会添加“FAQ”或“我们的团队”。我们将看看我们如何使用子菜单，但我们稍后再做：
- en: '![](img/a0f55c4e-ed68-4431-9f3f-54a2bed90fb2.png)'
  id: totrans-207
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/a0f55c4e-ed68-4431-9f3f-54a2bed90fb2.png)'
- en: 'We''ll save the settings, and then your menu should look like this:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将保存设置，然后你的菜单应该看起来像这样：
- en: '![](img/5ede4c64-1a92-476d-a0cc-df88e8a26de6.png)'
  id: totrans-209
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/5ede4c64-1a92-476d-a0cc-df88e8a26de6.png)'
- en: We have the navigation bar, header, Search box, and all of our styles done.
    In the next section, we'll move on and start to create our main blog post loop.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经有了导航栏、页眉、搜索框，以及所有的样式都已经完成。在下一节中，我们将继续前进并开始创建我们的主要博客文章循环。
- en: Displaying blog post
  id: totrans-211
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 显示博客文章
- en: We created the theme and added the header and navigation bar. All of this stuff
    on the page is now dynamic and integrated with WordPress, but this is all just
    static HTML.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 我们创建了主题并添加了页眉和导航栏。现在页面上所有的这些内容都是动态的，并且与WordPress集成，但这所有的一切都只是静态HTML。
- en: Let's go back to our `index.php` page and go down to where we have the `container
    content` div, and we have different blog posts. We have three `article` tags with
    blog posts; we will delete two out of the three.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
- en: Then we will cut the paragraphs down and make it much shorter just so we can
    get it all in the page or in view. We want to write in this `main block` div,
    and we want to create our post loop.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
- en: 'First, we''ll have to check for posts, and for that, we will enter `if(have_posts)`,and
    then we have to end it after the ending `</article>` tag. We will put an `else`
    statement as well. If there are no posts, then we will enter `php echo`, with
    the `wpautop()` function, where we can put the text that we want. In this case,
    we enter `''Sorry, no posts were found''`. Then, we will create our `while` loop,
    and then down under the `</article>` tag, we will end that `while` loop:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'So it''s going to loop through the posts and for every one it finds it''s going
    to spit this out. Now to make it dynamic, we will use `php the_title()` and replace
    the paragraph with `php the_content()`, as shown in the preceding code block.
    We''ll save this, and reload:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e5ea51dc-d07e-442f-9ad2-839ba9ddcc29.png)'
  id: totrans-218
  prefs: []
  type: TYPE_IMG
- en: Now we're on the `About` page; let's go back to the `Home` page, which we don't
    have a link for. When we click on WPThemes, it should take us to the `Home` page,
    but if we click on it now, it takes us to `index.html`, so let's fix this.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
- en: 'We will update the `index.html` file with the following code:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Now if we reload and click on WPThemes, we will get this:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2bf1519b-f586-4f6c-9198-00790433b04f.png)'
  id: totrans-223
  prefs: []
  type: TYPE_IMG
- en: 'If we look at the posts, we get Blog Post One and Blog Post Two. Now you probably
    don''t have these posts; you probably have a Hello World; if that''s showing up,
    then that''s fine. If you want to match your content to mine, just go ahead and
    create two posts, one as `Blog Post One`—I just have some sample content in it—and
    then `Blog Post Two` similarly:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f3e504b0-8a76-4fb0-ae5d-141a19a67c5a.png)'
  id: totrans-225
  prefs: []
  type: TYPE_IMG
- en: 'You can also create some categories, it doesn''t really matter what they are.
    We''re not really dealing with specific content, it''s just for a sample content:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/38421276-b887-4d5c-8f7d-ef0f4e3bf90a.png)'
  id: totrans-227
  prefs: []
  type: TYPE_IMG
- en: 'The meta info, as you can see, is still static, and so is the Read More button.
    When we click on this button, it doesn''t do anything. So let''s fix that next.
    Back in our post loop, where we have `<p class="meta">`, we will make the following
    changes to make it look dynamic:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Since we need to be more specific, for the date and time we use `the_time()`.
    If we just keep it like that, let''s see what it gives us:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a4d97327-fb8b-48f1-bfbb-e7455c9b5212.png)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
- en: 'So it gives us just the time, 11:55 am. I want the date as well, so we''ll
    format this. However, we want to do this by just adding some parameters. We have
    added `F j`, `Y`, and then for time, we''ll add `g:i a`:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: This pertains to the parameters of the `php date` function.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
- en: If you don't know how to format the time, you can go to [php.net](http://php.net)
    and just search for the `date` function, and that should give you all the formatting
    options.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不知道如何格式化时间，你可以访问[php.net](http://php.net)并搜索`date`函数，这样应该会给出所有的格式化选项。
- en: 'Now if I reload, it gives the date, month, day, year, and also the time:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 现在如果重新加载页面，它会显示日期、月份、日、年和时间：
- en: '![](img/eddba4a1-d4ac-4bed-8841-be7224cbf291.png)'
  id: totrans-237
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/eddba4a1-d4ac-4bed-8841-be7224cbf291.png)'
- en: 'Now we also want the username of the user that created the post. To do this,
    we can just put in `<?php the_author(); ?>`, as shown in the following code block:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们还想要获取创建文章的用户名。为此，我们只需在代码中添加`<?php the_author(); ?>`，如下面的代码块所示：
- en: '[PRE46]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'If we reload now, you can see that we still get admin because that''s the actual
    user''s name. Now we want to be able to click on the author name and then have
    it bring us to all the posts archived from that user. This is pretty easy to do
    as well. We just want to put a link, as shown as follows. Inside the link, we
    enter `php echo get_author_posts_url()` and then pass `get_the_author_meta()`
    and `ID`:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们现在重新加载页面，你可以看到我们仍然得到“admin”，因为那是实际用户的名称。现在我们想要能够点击作者名称，然后链接到该用户所有存档的文章。这也很容易做到。我们只需要添加一个链接，如下所示。在链接内部，我们输入`php
    echo get_author_posts_url()`，然后传递`get_the_author_meta()`和`ID`：
- en: '[PRE47]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Let''s save this, and then if we reload, you can see that it''s now a link.
    We can''t see it because of the color—we''ll have to change the CSS—but if I click
    on it, it will take us to whatever the username is in the address bar, `auth/author/`
    the username; it will show you all the posts from that user:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们保存这个文件，然后如果重新加载页面，你可以看到现在它已经变成了一个链接。我们因为颜色看不到它——我们需要更改CSS——但如果我点击它，它会将我们带到地址栏中的用户名，即`auth/author/`加上用户名；它会显示该用户的所有文章：
- en: '![](img/e34eefe8-3a7c-4dd8-8644-7a087d869892.png)'
  id: totrans-243
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e34eefe8-3a7c-4dd8-8644-7a087d869892.png)'
- en: 'Let''s go into the CSS real quick and see where we have our `meta` class. We''ll
    add `article.post .meta` a to it and set `color` to white, as shown here:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们快速进入CSS看看我们的`meta`类在哪里。我们将添加`article.post .meta`到其中，并将`color`设置为白色，如下所示：
- en: '[PRE48]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: So now that's fixed.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 所以现在问题已经解决了。
- en: '![](img/09f5d07a-d01e-431d-8501-ef187e1263e7.png)'
  id: totrans-247
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/09f5d07a-d01e-431d-8501-ef187e1263e7.png)'
- en: 'Now we can also get the categories that the post is in. To do this, we''ll
    go back to the `index.php` file and we will update the code, as shown in the following
    code block:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们也可以获取到文章所属的分类。为此，我们需要回到`index.php`文件并更新代码，如下面的代码块所示：
- en: '[PRE49]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: Right after the ending `</a>` tag of what we just did, of the author, we will
    put in a pipe `|` character, and then open up some `php` tags. Before the `php`
    tags, we'll enter `Posted In` and then we can place all the categories. To do
    this, we'll set a `categories` variable and set it to `get_the_category()`. Now
    this will give us an array of categories that this post is in. We can't just take
    the array and display it, so we have to loop through it. Before we do that, we'll
    create a variable called `separator` and separate that with a comma and a space.
    Then, we'll initialize a variable called `output` and set it to nothing for now.
    Next, we'll check for categories. To do this, we'll enter `if($categories)`, then
    we'll use a `foreach` loop with `($categories as $category)`. Next we'll append
    to that `output` variable, using `.=`. Now for each category to have a link as
    well, we'll use `href`. In order to do a little bit of concatenation here, we'll
    use dots and then add `get_category_link()`. We need to pass in a parameter, we'll
    take that `$category` variable and call `term_id`. Then we'll go back to our string
    right after the double quote, and we'll concatenate again, and enter `$category->cat_name`,
    closing it with the `</a>` tag. I know concatenation gets a little confusing,
    so we want a separator. Then, after the `if` statement, we'll use `echo` and wrap
    this in the `trim()` function to make it a little neater; we'll then enter `output`,
    and the second parameter will be `separator`.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们刚刚做的作者结束`</a>`标签的右边，我们将放入一个竖线`|`字符，然后打开一些`php`标签。在`php`标签之前，我们将输入`发布在`，然后我们可以放置所有类别。为了做到这一点，我们将设置一个`categories`变量并将其设置为`get_the_category()`。现在这将给我们一个包含这个帖子所在的所有类别的数组。我们不能直接取这个数组并显示它，所以我们必须遍历它。在我们这样做之前，我们将创建一个名为`separator`的变量，并用逗号和空格分隔它。然后，我们将初始化一个名为`output`的变量，并将其暂时设置为空。接下来，我们将检查类别。为此，我们将输入`if($categories)`，然后我们将使用一个`foreach`循环，循环`($categories
    as $category)`。接下来，我们将向那个`output`变量追加内容，使用`.=`。现在为了使每个类别都有一个链接，我们将使用`href`。为了在这里进行一些连接，我们将使用点，然后添加`get_category_link()`。我们需要传递一个参数，我们将使用那个`$category`变量并调用`term_id`。然后我们将回到我们的字符串双引号之后，再次连接，并输入`$category->cat_name`，用`</a>`标签关闭它。我知道连接可能会有些混乱，所以我们需要一个分隔符。然后，在`if`语句之后，我们将使用`echo`并将这个包裹在`trim()`函数中，使其看起来更整洁；然后我们将输入`output`，第二个参数将是`separator`。
- en: 'Let''s save this and see what we get. Now you can see that it says Posted in
    Business:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们保存一下，看看我们会得到什么。现在你可以看到它说在商业类别中发布：
- en: '![](img/f9170eb7-2f4b-472e-a361-f4b7966629e4.png)'
  id: totrans-252
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/f9170eb7-2f4b-472e-a361-f4b7966629e4.png)'
- en: 'This one is Posted In Uncategorized:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 这个是发布在“未分类”中的：
- en: '![](img/e99d0b53-b83e-4df5-be63-ead75db28bad.png)'
  id: totrans-254
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e99d0b53-b83e-4df5-be63-ead75db28bad.png)'
- en: Now if I click on Business, it takes us to `category/business`, and you can
    see only this post is here; this is the only one in Business.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 现在如果我们点击商业，它会带我们到`category/business`，你可以看到这里只有这一篇帖子；这是商业类别中的唯一一篇。
- en: So this is working perfectly.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 所以这工作得非常完美。
- en: 'Now the last thing we want is the text to be shorter and the Read More button
    to work. So we''ll go to where we put the content, and to make it shorter, we
    can just change it to `the_excerpt();`, as shown here:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们不希望文本太短，并且“阅读更多”按钮能够正常工作。所以我们将转到放置内容的地方，为了使其更短，我们只需将其更改为`the_excerpt();`，如图所示：
- en: '[PRE50]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'If we look at it now, we have much shorter text:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们现在看，文本变得短多了：
- en: '![](img/ac759984-b982-4a99-8482-c8d5ee5aa932.png)'
  id: totrans-260
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/ac759984-b982-4a99-8482-c8d5ee5aa932.png)'
- en: 'Now, by default I think it''s 55 words, but we can change this:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，默认情况下我认为是55个单词，但我们可以更改这个：
- en: 'Let''s go to `functions.php` and add the `excerpt_length()` function. All we
    need to do here is to just return the number; let''s say we want `25`. Then we
    just need to create a filter, so we''ll say `add_filter`; `add_action` means you''re
    adding something, and `add_filter` means you''re changing something. We want `excerpt_length`,
    so we will add `set_excerpt_length`, and we''ll also use the `adv` prefix:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们转到`functions.php`文件并添加`excerpt_length()`函数。我们在这里需要做的只是返回一个数字；让我们说我们想要`25`。然后我们只需要创建一个过滤器，所以我们会说`add_filter`；`add_action`意味着你正在添加一些内容，而`add_filter`意味着你正在更改一些内容。我们想要`excerpt_length`，所以我们将添加`set_excerpt_length`，并且我们也会使用`adv`前缀：
- en: '[PRE51]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Let''s save this and reload:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们保存并重新加载：
- en: '![](img/ea46b12c-edf4-43d9-a272-9ecc62c1ca37.png)'
  id: totrans-265
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/ea46b12c-edf4-43d9-a272-9ecc62c1ca37.png)'
- en: 'Now you can see that we get length of 25\. Now, for the Read More to work,
    it is pretty easy. We''ll go down to where we have the link and update the code
    as shown here:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以看到我们得到了25个字符的长度。现在，为了使“阅读更多”按钮正常工作，这相当简单。我们将向下到我们放置链接的地方，并更新代码，如图所示：
- en: '[PRE52]'
  id: totrans-267
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'We''ll reload and click on Read More. This brings us to that particular post:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将重新加载并点击“阅读更多”。这带我们到那个特定的帖子：
- en: '![](img/3e93e2e4-2290-479e-9d74-61720e4bdef3.png)'
  id: totrans-269
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3e93e2e4-2290-479e-9d74-61720e4bdef3.png)'
- en: Next we will see how to add a comment form and how we can add a featured image
    to our posts.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将展示如何添加评论表单以及如何将特色图片添加到我们的帖子中。
- en: Creating a single post and adding an image
  id: totrans-271
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建单个帖子并添加图片
- en: 'We will now see how to create a single post. If we click on Read More now,
    it takes us to the single post, but it''s not what we want, we want to change
    this. Also, we want the ability to add a featured image to a post, also called
    a thumbnail. Let''s start with the thumbnail. We''ll first go to `functions.php`
    and we need to enable that support for our theme. For this, we''ll go to the `adv_theme_support()`
    function and add a `Featured Image Support` comment. Next, we''ll enter the `add_theme_support()`
    function and pass in `post-thumbnails`, as shown here:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将看看如何创建单个帖子。如果我们现在点击“阅读更多”，它将带我们到单个帖子，但这不是我们想要的，我们想要改变这个。此外，我们还想有在帖子中添加特色图片的能力，也称为缩略图。让我们从缩略图开始。我们首先进入
    `functions.php` 文件，并需要启用我们主题的支持。为此，我们将进入 `adv_theme_support()` 函数并添加一个 `Featured
    Image Support` 注释。接下来，我们将进入 `add_theme_support()` 函数，并传入 `post-thumbnails`，如下所示：
- en: '[PRE53]'
  id: totrans-273
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'Let''s save this, and if we go to, let''s say `Blog Post One`, you''ll see
    that we have the Featured Image block:'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们保存这个，然后转到，比如说 `Blog Post One`，你会看到我们有了特色图片块：
- en: 'We will click on Set featured image and upload some files:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将点击“设置特色图片”并上传一些文件：
- en: '![](img/a65729b1-b1c6-4acd-9da3-8115860acae7.png)'
  id: totrans-276
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a65729b1-b1c6-4acd-9da3-8115860acae7.png)'
- en: You should have a folder called `_images` with some images placed in it.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该有一个名为 `_images` 的文件夹，里面放了一些图片。
- en: 'Let''s choose the `phones.jpg` image and click on Set featured image, as shown
    in the following screenshot:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们选择 `phones.jpg` 图片并点击“设置特色图片”，如下面的截图所示：
- en: '![](img/a96140d9-346d-4552-9523-37da0691a7f6.png)'
  id: totrans-279
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a96140d9-346d-4552-9523-37da0691a7f6.png)'
- en: 'Next, we will set this to Technology for the category and click on Update:'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将将其设置为“技术”类别并点击更新：
- en: '![](img/6cb6722c-1b9e-4e41-8de0-77cdc2e150b0.png)'
  id: totrans-281
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6cb6722c-1b9e-4e41-8de0-77cdc2e150b0.png)'
- en: Now, let's go to `Blog Post Two` and click on Set featured image, and then on
    Upload, and then, grab the `surface.jpg` image. Now let's go ahead and click on
    Update.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们转到 `Blog Post Two` 并点击“设置特色图片”，然后点击“上传”，然后，抓取 `surface.jpg` 图片。现在让我们点击更新。
- en: If we go to the frontend and reload, you won't see the images; we actually have
    to add that to our theme.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们前往前端并重新加载，你将看不到图片；实际上，我们必须将其添加到我们的主题中。
- en: 'So let''s go to `index.php` and find out where you want to put the image. In
    this case, we will put it right above `the_excerpt()`, as shown in the following
    code block:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 所以让我们去 `index.php` 并找出你想要放置图片的位置。在这种情况下，我们将在 `the_excerpt()` 的上方放置它，如下面的代码块所示：
- en: '[PRE54]'
  id: totrans-285
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'First, we will check for the image, and for that, we will add `<?php if(has_post_thumbnail())
    : ?>`. Then we will create a `<div>` tag with a `post-thumbnail` class. We will
    then add `<?php the_post_thumbnail(); ?>`.'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: '首先，我们将检查图片，为此，我们将添加 `<?php if(has_post_thumbnail()) : ?>`。然后我们将创建一个带有 `post-thumbnail`
    类的 `<div>` 标签。然后我们将添加 `<?php the_post_thumbnail(); ?>`。'
- en: Let's save this, go back, and reload.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们保存这个，返回，并重新加载。
- en: 'Now you can see that we have the images. They''re a little too big, so let''s
    go to our CSS and edit the code. We''ll go to where we have our article styles,
    and we''ll add `article .post-thumbnail`. Then, we will set the image `width`
    to `100%`. Now it takes up 100% of the div, but the proportion is all out of whack.
    So we''ll add `height` and set it to `auto`, as shown in the following code block:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以看到我们有了图片。它们有点太大，所以让我们去我们的 CSS 并编辑代码。我们将进入我们的文章样式部分，并添加 `article .post-thumbnail`。然后，我们将设置图片的
    `width` 为 `100%`。现在它占用了 100% 的 div，但比例完全失调。所以我们将添加 `height` 并将其设置为 `auto`，如下面的代码块所示：
- en: '[PRE55]'
  id: totrans-289
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: Reload, and now you can see that they fit.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 重新加载，现在你可以看到它们适合了。
- en: '![](img/a02b1cc3-04cf-4a84-b9c2-c536cacec67b.png)'
  id: totrans-291
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a02b1cc3-04cf-4a84-b9c2-c536cacec67b.png)'
- en: This looks good now!
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 现在看起来不错了！
- en: 'Now we want to move on to the single post page. To do this, we''ll set a new
    file and save it as `single.php`. We will just type in the word `TEST`. Now, if
    we go back to our single post and reload, you''ll see that we get TEST, because
    this page has now overwritten the `index.php` page on the single post. You can
    also see that the main page still shows, it''s just when we go to view a single
    post:'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/772fb21a-7b27-42ae-b47b-d2c915c33ea2.png)'
  id: totrans-294
  prefs: []
  type: TYPE_IMG
- en: Let's copy everything that we have in the `index.php` file. We'll now split
    this up into a header and a footer file since we have not done that yet, and that's
    what you typically want to do with a WordPress theme, right? So we will create
    a new file and save it as `header.php`, and then, we'll create another one called
    `footer.php`.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
- en: In our `index.php` file, we'll figure out what we want to bring over to the
    header. So, we want the actual header and the navigation.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
- en: Let's start with `<nav>` and go up. We'll cut everything out and paste it in
    the header file.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, down at the bottom of `index.php`, we''ll start selecting from the ending
    `</html>` tag up to where the `<footer>` starts. We''ll cut that, and put it in
    our footer file, as shown here:'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE56]'
  id: totrans-299
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'Now if I save our `index.php` file as is, and we try to view it, you can see
    that it''s all messed up:'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/389caf61-a961-4e72-86d3-a555c1503003.png)'
  id: totrans-301
  prefs: []
  type: TYPE_IMG
- en: 'So at the top, we''ll say `get_header()`:'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE57]'
  id: totrans-303
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'At the bottom, of course, we''ll add `get_footer()`:'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE58]'
  id: totrans-305
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'If we go back now, everything''s back to normal:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/dd60dd34-4563-48b2-a326-d1238d01bd7d.png)'
  id: totrans-307
  prefs: []
  type: TYPE_IMG
- en: Now, we'll take everything from `index.php`, including `get_header()` and `get_footer()`,
    and we'll paste that into `single.php`.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
- en: 'We''ll save this, and then if we go to the single post, we get what we had
    before:'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/7d52bee5-7fe6-4f75-8e26-7e416f06f53d.png)'
  id: totrans-310
  prefs: []
  type: TYPE_IMG
- en: 'Let''s change a couple of things. One thing we want to change is that we want
    all the content to be shown. So we''ll set `the_excerpt()` back to `the_content()`:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE59]'
  id: totrans-312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: If we reload now, we get all the content.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
- en: 'Also, we don''t want the Read More link, so we''ll get rid of that:'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE60]'
  id: totrans-315
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: Now, reload, and you will see that the link is gone. So now we just have our
    single post.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
- en: Now the archive pages should work. If we click on Business, it'll show us all
    the Business posts; if we click on admin, it'll show us all the posts created
    by admin; similarly, Search should also work. If we search for `Lorem`, the two
    articles should show up.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
- en: Now all the things, such as search, the category, and user archive pages, can
    be actually customized; we can make them different from the main post style. This
    is what we'll do next.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
- en: Creating custom archive pages
  id: totrans-319
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let's create custom archive pages. Now if we click on one of the categories,
    it'll take us to a category archive.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
- en: If we click on admin, the username, it will take us to the author archive. There
    are others as well. We can also have archives by dates, we can have them by tags,
    and so on. So let's go into our `themes` folder. We will create a new file and
    save that as `archive.php` and open that up.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
- en: Now if we go back and click on a category, you can see it's blank because it's
    looking at the `archive.php` page. We will copy what's in the `index.php` page
    and paste that in `archive.php`.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
- en: I want these pages to be much more simple. We don't need the meta, and we don't
    need the image; pretty much just the title and the date is all that we want. So
    let's go to where we have the `<article>` tag and get rid of the whole part.
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
- en: 'We will replace this with a `<div>` tag and give it a `archive-post` class.
    We''ll enter `<h4>`; then we''ll insert a link, which will go to `the_permalink()`,
    and then we have `the_title()`. Next, we''ll place a paragraph that says `Posted
    On: <?php the_time`, and we''ll pass in the same formatting options as earlier:'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE61]'
  id: totrans-325
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'Now let''s take a look at this:'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/348a9df1-d5de-4fcc-9e9e-e74171500f50.png)'
  id: totrans-327
  prefs: []
  type: TYPE_IMG
- en: 'Let''s update the style sheet real quick. We will add `.archive-post` with
    a border set on the bottom of light gray color, `1px solid`, and `padding-bottom:10px`.
    We''ll also add `10px` on `margin-bottom`. Then for `h4` and the paragraph, we
    will remove the margin and padding:'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE62]'
  id: totrans-329
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'Now we will need to have a different heading depending on what type of archive
    it is. So let''s go back to `archive.php` and add the following code right under
    the `main block` div:'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE63]'
  id: totrans-331
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'Here, we''ll use some WordPress functions that are extremely helpful. We use
    `is_category()`, that''ll happen if it''s a category archive, and then we just
    use this `single_cat_title()` function, which can give us the category name. We
    then see if it is an author, and then, `echo ''Archives By Author: ''`, the author''s
    name, and `the_post()`. We also use `rewind_posts()`, and if it''s a tag, we can
    actually give `tag_title()`; if it''s by day, we can say `''Archives By Day: ''`
    and then just say `get_the_date()`. We can also do the same for `Month`, and then
    for `Year`. If it''s none of these, then it''s just going to say `Archives`. Let''s
    save this, and go back and reload:'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/23305db3-f53a-49ca-a693-748dfa2537de.png)'
  id: totrans-333
  prefs: []
  type: TYPE_IMG
- en: 'Now you can see that we get `Archives By Author: admin`. If we go back to a
    post and click on the category, it gives us the category name. So that''s how
    that works. We want the same kind of view for the Search.'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
- en: In order to search for something we'll create a new file and call it `search.php`.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
- en: 'We will copy what we have in `archive.php` and paste it in the `search.php`
    file. We will remove the ones which are not required and then we''ll just say
    `Search Results`:'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE64]'
  id: totrans-337
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'Also, just to make sure Search is definitely working, let''s put in the word
    `Hello` in `Blog Post Two`:'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2e2a6170-e7a6-48e4-a0f4-031d73afcec0.png)'
  id: totrans-339
  prefs: []
  type: TYPE_IMG
- en: 'Now if we go back to the frontend and search for `Hello`, `Blog Post Two` comes
    up:'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a57e3798-2589-4698-85d9-48b3930b5544.png)'
  id: totrans-341
  prefs: []
  type: TYPE_IMG
- en: So this works!
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
- en: Now we want a link to the Home page in the menu, so let's do that. To do this,
    let's go to Menus, and to Custom Links. For the URL, we will add `localhost/wpthemes`,
    and then for Link Text we'll just say `Home`. Click on the Add to Menu button,
    put that up here at the top, and save it.
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/706add1f-45c0-4b84-8b56-e598e2b186f1.png)'
  id: totrans-344
  prefs: []
  type: TYPE_IMG
- en: If we go back and reload, you can see a Home link.
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
- en: Next, we will look at content types, and how to place things, such as galleries,
    a side content, and links.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
- en: Different post formats
  id: totrans-347
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let's take a look at a few different things now. We'll look at post types or
    post formats. Right now, if we look at our theme, we have just basically one kind
    of post, and it's just a standard blog post. We can also have things, such as
    galleries, links, images, and quotes status updates, and we can format these different
    types of posts in different ways. We will now see how to do that, how to add these
    to our theme. Also, we'll look at a function called `get_ template_part()`, which
    allows us to stop repeating ourselves. For instance, if we look at our index page,
    we have `while (have_posts())`, and then we're just outputting our post. We observe
    the same thing in the archive, in `search.php`, and so on. So we want something
    that's going to stop us from repeating ourselves over and over. I know that each
    of these files have minor changes, but we can implement that inside of a specific
    content file. The best thing to do is to just jump in and show you.
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s go to `index.php` and look at everything that is inside the `while`
    loop:'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE65]'
  id: totrans-350
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'We will grab everything that is in our `post` loop; basically, all that is
    in it from the `<article>` tag to the ending `</article>` tag. We''ll cut this,
    paste it in a new file, and save it as `content.php`. We''ll save this, go back
    to index, and in its place, we''ll say `<?php` and then we''ll use `get_template_part()`.
    Then we will pass in the name of the file which we just created, which is `content`.
    Let''s save this and make sure that `content.php` is saved as well:'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE66]'
  id: totrans-352
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: Now if we reload, it looks the exact same, which is what we want.
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s take a look at `archive.php`. You can see same content in the archive
    file. The idea is to get everything that''s in the while loop, into that content
    file. So let''s cut the highlighted part:'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE67]'
  id: totrans-355
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'Go to `content.php`. Now this is a little different than what we have for a
    regular blog post. So what we can do is we can use a condition and check to see
    whether we get an archive or a search result page. To do this, we''ll say `<?php`
    with an `if` statement. We''ll also use an `else` statement along with it:'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE68]'
  id: totrans-357
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: 'For the `if` statement, we''ll say `if(is _search())`. This means that if we''re
    on a search results page, and if we search for something and this comes up, it''s
    checking to see whether we''re on this page. We can also check to see if it''s
    on a category or an archive—not just category but any kind of archive. So let''s
    say also `is_archive()`. If this is true then we want to just output what we just
    copied from the archive post page. Next, we will grab all the code in the `<article>`
    tag and paste that inside `else`, as shown here:'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE69]'
  id: totrans-359
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'Let''s save this and then, in `archive.php`, we also want what we put in the
    `index.php` file. So we''ll copy and paste that, as shown, and save it:'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE70]'
  id: totrans-361
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: Now if we reload the search page, it should look the exact same.
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
- en: 'Just to make sure that it''s coming from the content file, we''ll just say
    `TEST` and then reload. Let''s see it now:'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/eba98321-5de5-4466-b912-e0ebbbd60b34.png)'
  id: totrans-364
  prefs: []
  type: TYPE_IMG
- en: It's not giving us TEST. Oh, that's because we didn't put it in the search.
    We only put it in the archive, so let's test that first.
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
- en: 'Now if we click on category name, you can see that we''re getting TEST. Just
    like we did in the archive where we put this `get_template_part()`, we will copy
    and put that in the `search` page as well:'
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE71]'
  id: totrans-367
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: 'This is the same exact code as we have seen earlier. We can just paste that
    in. Then, if we do a search, we now get TEST:'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c5250b42-6e46-479c-9989-222f538d9853.png)'
  id: totrans-369
  prefs: []
  type: TYPE_IMG
- en: So we know that it's coming from `content` page in this conditional. We'll save
    this, and that's all set.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
- en: 'Now we can also implement our `content.php` file inside of the `single.php`
    file as well, because if we look at `single`, we have a lot of the same stuff
    that we had in the `index.php` file. We have an `<article>` tag. The only difference
    is that we''re using the excerpt inside of the blog roll; also, we have the Read
    More link that''s not in the `single.php` file. So we''ll copy from the `<article>`
    tag to the ending `</article>` tag, paste that in `get _template_part()`, and
    save it. Now if we go to the `single` page, we lost that single page formatting.
    So we''ll go into the `content.php` page and just add some conditionals where
    we want things to be different:'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE72]'
  id: totrans-372
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: For instance, in `the_excerpt()`, we want to say `<?php if`. We can say `if(is_single)`;
    if it is single, then we want `the_content()`, if not, then we want `the_excerpt()`.
    So we'll paste the code in and then get rid of the old code. So let's go back
    to the single page, reload, and we see that now we have our content back.
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
- en: 'We also want to get rid of the `Read More` link. So let''s go down to where
    that is, and actually we don''t even need to do another conditional. We can just
    grab it and paste it below `the_excerpt()`, as shown in the following code block:'
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE73]'
  id: totrans-375
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: So then the `Read More` won't show up on the single page anymore.
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
- en: 'You can see how we''ve saved ourselves from repeating ourselves. Now, in `archive.php`
    inside the `while` loop, we just have this one line:'
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE74]'
  id: totrans-378
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: We see the same thing with the other pages—`search`, `single` and `index`. Now
    we'll get into the post formats. So, let's add a gallery type.
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
- en: First, let's go to our `functions.php` file. We need to enable these different
    formats that we want to use.
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
- en: 'Right under `register_nav_menus()`, we can add `Post Format Support` and `add
    _theme_support()`. Also, we want to add `post-formats`. Then the second parameter
    will be an array of the types of formats we want. We will choose three; we''ll
    take `aside`, `gallery` and `link`:'
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE75]'
  id: totrans-382
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: 'If we look at the documentation, the supported formats are as shown in the
    following screenshot:'
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f7cc6c0f-bfea-4604-b57e-57c4b4dfa1a4.png)'
  id: totrans-384
  prefs: []
  type: TYPE_IMG
- en: 'We''re using aside, gallery and link, but we also have image, quote, status,
    audio, and chat. You might want to take a look at that. Let''s save this, and
    since we put that in there, if we go to our Posts and say Add New, you''ll now
    see that we have the Format box on the side, where we can choose what format we
    want for our post:'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/dc9d59cd-fa56-4e9a-b759-d486b13b797e.png)'
  id: totrans-386
  prefs: []
  type: TYPE_IMG
- en: Now, as it is, it's not going to do anything different. So let's do something
    different.
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
- en: We'll say `Sample Aside` and grab some content. We'll just take this content
    and paste it.
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6e01f693-5bab-4a15-b74d-56a47a998bd3.png)'
  id: totrans-389
  prefs: []
  type: TYPE_IMG
- en: We'll choose Aside as a format, Business as a category, and click on Publish.
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
- en: 'Now if we go to our frontend and reload, you can see that we have our Aside,
    but it''s no different than these posts:'
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d18b013a-d80e-4ef5-a367-70f94e497b33.png)'
  id: totrans-392
  prefs: []
  type: TYPE_IMG
- en: The point of this is to have this show up differently.
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, the way we can do that is when we go to, let''s say, `index.php`, where
    we put `get_template_part()`. We want to pass in a second parameter of `get_post_format()`,
    as shown in the following code block:'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE76]'
  id: totrans-395
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: This is a function and that's going to allow it to see what type of post format
    it is. We'll just replace all `get_template_part()` with the second parameter.
    We'll go to `archive.php` and paste `<?php get_template_part('content', get_post_format());
    ?>`. Let's do the same for `search.php` and `single.php`.
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
- en: Now, for each format, we'll create a content file. So let's say New File and
    save this as `content-aside.php`.
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
- en: We'll also create `content-gallery.php` and, finally, `content-link.php`.
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, with these different files, we can make our formats look differently.
    So let''s start with the `content-aside.php` file. This is going to be very simple.
    It will have an `<article>` tag. We''ll give it a `post` class and `post-aside`.
    We don''t want to have any images or any of that stuff. We just want the actual
    content, the author, and the date. We will place it in a `<div>` tag with the
    `well` class, which is a bootstrap class, and then in there, we''ll use a `<small>`
    tag and `the_author()`. You can kind of think of this as like a status update.
    Let''s put the `@` sign and then, `<?php the_ date(); ?>`. Then right under it,
    we''ll put `the_content()`:'
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE77]'
  id: totrans-400
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: 'Now we''ll save this. If we go back and reload, you can see that the post has
    changed because it''s coming from this `content-aside` file:'
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/0f355fa6-70ac-4eb2-b01f-750869dfa854.png)'
  id: totrans-402
  prefs: []
  type: TYPE_IMG
- en: 'Now I want to make this look a little better. So we''ll go into our style sheet.
    We''ll go down to where we have the `article` stuff, and let''s say `article.post-aside`.
    Actually, we don''t want to do the core element. We want `small`, and we just
    want to make the text bold by adding `font-weight: bold`. We also want to format
    `well`. In addition, we will change the background from gray to a light blue by
    adding `#e0eefc`. We also want to add some padding:'
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE78]'
  id: totrans-404
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: 'Now you can see that it''s formatted differently:'
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/024c14dc-0b8c-4850-9525-c281bcb3ef20.png)'
  id: totrans-406
  prefs: []
  type: TYPE_IMG
- en: 'So this takes care of `aside`. Now let''s do the link. For this, we''ll go
    into `content-link.php`, copy what we have in `content-aside`, and update the
    code as shown in the following code block:'
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE79]'
  id: totrans-408
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: We will add the link as shown and keep the `well` class, but this is going to
    be different!
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
- en: 'Now if we go back into our posts, and click on Add New this time, we''ll choose
    a Link as a format, and then, as a title, we''ll add `Get awesome web dev courses
    at Eduonix`. Then, in the text area, we just want to put a link and that''s it.
    We''ll say Publish and go back and reload. Now you can see that we have a link
    that goes to [eduonix.com](https://www.eduonix.com/):'
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ce9a91d3-1383-488e-9bde-b62be8060e2f.png)'
  id: totrans-411
  prefs: []
  type: TYPE_IMG
- en: 'We want to format this to make it appear a little better. So we''ll go back
    to our style sheet and say `.post-link`:'
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE80]'
  id: totrans-413
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: Actually, we just want `well`. We'll say background, which will be just light
    gray, and then we'll enter `padding:10px`. So now we have a formatted link.
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
- en: 'We have our regular post, we have the aside content or status updates, and
    we have links. So the last one we''ll look at is the gallery. For this, let''s
    go to `content-gallery.php`; this is actually going to be very simple. We''ll
    say `<article class="post post-gallery">` and we enter the `<h2>` tag with `the_title()`
    and then, we just want `the_content()`; that''s it:'
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE81]'
  id: totrans-416
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: Now we'll go to the Add New post. We will then go to Add Media and then to Create
    Gallery.
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/78426237-bdc2-4fd4-a681-542a4484750a.png)'
  id: totrans-418
  prefs: []
  type: TYPE_IMG
- en: 'We have some images in here, but we want to upload some more, and you should
    have these in your files. We will upload a few images, as shown here:'
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/3d76a329-a400-4757-9833-cb3f8057a62b.png)'
  id: totrans-420
  prefs: []
  type: TYPE_IMG
- en: 'That''s fine. We''re just going to click on all of these images and then on
    Create a new gallery. Then you want to make sure that all of these are in there.
    To check them, click on Insert Gallery and make sure that Gallery is chosen inside
    the Format box:'
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6e31921e-c7b9-47c0-8b01-42dfaca96f66.png)'
  id: totrans-422
  prefs: []
  type: TYPE_IMG
- en: 'We''ll choose Entertainment inside the Category box and click on Publish. Let''s
    go back and reload, and there''s our gallery:'
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c56eb265-436e-46be-8113-46861cbf7a31.png)'
  id: totrans-424
  prefs: []
  type: TYPE_IMG
- en: 'If we want to edit it, we can go back in, and you can choose the pencil icon
    to edit. Now, right now, they''re linked to Attachment Page, but I want them to
    actually go to the media file. So you can see that when you click on them, it''s
    just going to the image file:'
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/32487c5b-0d83-494a-8aab-552e163502f2.png)'
  id: totrans-426
  prefs: []
  type: TYPE_IMG
- en: 'You can change this. You can have it go to a page or you can implement some
    kind of light box plugin, if you wanted to, as well, but we''ll not get into that.
    Now, I want to go to my `style.css` file and just add some styles. We''ll say
    `article.post-gallery` and we''ll add a dark background. We''ll set `color` as
    white. We''ll also add some padding, say, `5px 10px` and then, `margin-top` will
    be `5px`:'
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE82]'
  id: totrans-428
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: Let's save this and reload.
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/23ed521f-11e6-409f-bdec-e7ad8d109d28.png)'
  id: totrans-430
  prefs: []
  type: TYPE_IMG
- en: So, now we can post a gallery!
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
- en: Pages, custom templates, and sub navigation
  id: totrans-432
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now we'll move from the posts to pages. If we visit the About page, you can
    see that it's formatted just like a post, which is definitely not what we want.
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
- en: We just want the pages to have the title, we don't want metadata, Read More,
    and stuff like that. So to change all that, we have to create a new file and save
    it as `page.php`.
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
- en: Now if I go back to that page and reload, it's just a blank white page. It's
    looking to this file to parse it.
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
- en: 'Just to start with, I''ll grab what we have in the `index` page, paste it in
    `page.php`, and just change some stuff. We want the `while` loop, we''ll not use
    `get_template_part()`, so we can get rid of that. We want an `<article>` tag,
    and let''s give this a class of `page`. Let''s also put in an `<h2>` tag. This
    is where the title will go, so we''ll say `<?php the_title(); ?>`, and right under
    this, we''ll put `the_content()`:'
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE83]'
  id: totrans-437
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: OK, really simple, save it, let's go to the About page, and now we have a very
    simple About page.
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
- en: 'If we go to Services, we find that it uses the same format; even Sample Page
    uses the same format. Now I want to show you that we can actually create page
    templates for certain pages. For instance, let''s take the About page. If I say
    New File, save it as `page-about.php`, and we''ll say `ABOUT` and save and reload
    it, we get `ABOUT`:'
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d0d38922-a03f-4514-8b06-c770feeec65c.png)'
  id: totrans-440
  prefs: []
  type: TYPE_IMG
- en: Now this isn't going to be on every page; you can see that Services shows up,
    Sample Page, it's only the About page. So it's using the slug that is up in the
    URL. We could just as well say page `services` and that would work. You would
    do this when you want something on the `About` page that you don't want anywhere
    else.
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
- en: 'Now we''ll just copy what''s in `page.php`, put it in `page-about.php` and
    then go right above `the_content()`. There, we''ll put a `<div>` tag with the
    `well` class, and we''ll just put in `Company Phone`:'
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE84]'
  id: totrans-443
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: 'Now, go back to About, and you can see that we have the Company Phone there:'
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/84c9e6fc-0de1-4338-a52c-36709a564de6.png)'
  id: totrans-445
  prefs: []
  type: TYPE_IMG
- en: So, it's not on Services, it's not on Sample Page or any other pages. You can
    do this, but I think a better thing to do, when you want to have specific styles
    or content on certain pages, is to use a template. I'm going to get rid of the
    `page-about` file. I just wanted to show you that this is possible. So we got
    rid of that, and now we'll create a template. Let's create a new file and save
    it as `company-template.php`. We'll copy what we have in the `page.php` file,
    and paste it right in the `company-template.php` file.
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
- en: 'Now at the top, we want to add a declaration or comment. Actually, this needs
    to be in the `php` tags. Next, we''ll say `Template Name` and call this `Company
    Layout`. All we want to do here is to go right below `the_title()`, and put the
    phone number; however, I''ll put it in a paragraph tag with a class of `phone`,
    and we''ll put a `1-800-555-5555` number:'
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE85]'
  id: totrans-448
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: 'Now, save this. Let''s quickly go into the style sheet and add a style for
    the `phone` class. This is probably something you would do, but it''s just to
    give you an example to show you that you can have custom templates for certain
    pages. Let''s give it a background, `border`, `padding`, and make the font bold:'
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE86]'
  id: totrans-450
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: '![](img/40f44ab7-d929-4406-ad47-f6a983f0c9fc.png)'
  id: totrans-451
  prefs: []
  type: TYPE_IMG
- en: 'Now that we have that created, let''s go into our pages, and go to About, and
    then, under Template, we can choose Company Layout. We''ll update this, reload,
    and now you can see we have the phone number:'
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/b7a6e5cd-1493-4816-870c-d9ff91d9d2c2.png)'
  id: totrans-453
  prefs: []
  type: TYPE_IMG
- en: 'I actually want to put some text in front of it, though. We''ll say `Call Us`:'
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/21493b10-fedf-458b-a4ed-fd0bd935be4f.png)'
  id: totrans-455
  prefs: []
  type: TYPE_IMG
- en: 'If we go to Services, you''ll not see it because we didn''t choose that template.
    However, I actually do want it for Services, so we''ll simply go into the `Services`
    page and select Company Layout. Now, that should also have the phone number:'
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/0311d132-c4b8-4420-bf83-642b19138fe3.png)'
  id: totrans-457
  prefs: []
  type: TYPE_IMG
- en: So the next thing that I want to show you is how we can create a submenu. What
    I mean by this is that if we have, let's say, the About page, the parent page,
    and in it we have child pages—I had put an FAQ page and an Our Team page under
    the About page. Now my goal is to have links on the About page for the child pages,
    and this is not just for the About page but any page that has a child. There are
    quite a few things that we have to do to accomplish this. Let's go to `page.php`
    and remove Company Layout from the About page. So, it shouldn't have the phone
    number anymore.
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
- en: 'In `page.php`, let''s go right under the `<article>` tag and say `<?php wp_list_pages();
    ?>`, as shown in the following code block:'
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE87]'
  id: totrans-460
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: 'Let''s see what this does:'
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/71699eba-edd3-4b18-ba23-b934c111dd8c.png)'
  id: totrans-462
  prefs: []
  type: TYPE_IMG
- en: 'We can see that it''s listing all of the pages that we have on our WordPress
    site, which obviously isn''t what we want. Pay no attention to the style yet because
    we''ll get to that after we get the functionality. We only want to get the `About`
    page and its child pages. So we''ll go to the `page.php` file, and right above
    `wp_list_pages()` we''ll say `<?php`. We''ll create a variable called `args` and
    set that to an array. We''ll then say `child_of`. Now there''s no core function
    to get the parent, so we''ll actually create a function called `get_top_parent()`.
    Then we also want to say `title_li` and set that to nothing. I''ll explain that
    in a bit, but right now, we''ll put our `args` variable right in `wp_list_pages()`:'
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE88]'
  id: totrans-464
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: 'If we go ahead and reload, we''ll get an error, because there''s no function
    called `get_top_parent()`. So let''s go into `functions.php` and down at the bottom,
    create a function called `get_top_parent()`. We''ll make the `post` object available
    to us by saying `global $post`. Then, we''ll say `if($post->post_parent)`, and
    we''ll create a variable called `$ancestors` and set it to `get_post_ancestors()`.
    We''ll then pass in `$post->ID`. Now we''ll say `return $ancestors` and we want
    the `0` index; then, under the `if` statement, say `return $post->ID`:'
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE89]'
  id: totrans-466
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: 'Now save this and reload:'
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/43e02dfd-910d-478e-83c2-416b530b84df.png)'
  id: totrans-468
  prefs: []
  type: TYPE_IMG
- en: 'Now you can see that we are only getting the child pages of the About page,
    which is FAQ and Our Team. Now we also want the About link to show up in here
    as well because we can go to FAQ, but we can''t get back to About unless we use
    the main menu. So let''s go back to `page.php` and inside the `<article>` tag,
    we''ll create a `<ul>` tag. Above the `<ul>` tag, we''ll create a `<nav>` tag
    and give it a class of both `nav` and `sub-nav`. Now under the `<ul>` tag, I''ll
    put a `<span>` tag and give it a class of `parent-link`. Inside it, we''ll place
    an `<a>` tag, which will go to `<?php echo get_the_permalink(); ?>`. We''ll pass
    in the `get_top_parent()` function there. Then, for the link text we''ll say `<?php
    echo the_title(); ?>`:'
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE90]'
  id: totrans-470
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: 'Let''s save this and take a look:'
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/50e7f264-5528-4204-8831-e59aa41714c8.png)'
  id: totrans-472
  prefs: []
  type: TYPE_IMG
- en: 'Now we just have About. We can navigate using the menu here. However, if we
    go to Sample Page or any other page, it''s going to still have this even though
    there''s no child links. So, we''ll create another short function in the `functions.php`
    file and call `page_is_parent`. Then, we''ll say `global $post` and set `$pages`
    equal to `get_pages()`, and in here, we''ll say `''child_of=''` and concatenate
    the post ID. Next, we''ll say `return` and then, we want the number of pages,
    so we''ll `count($pages)`:'
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE91]'
  id: totrans-474
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: 'If the page count is more than zero, then we know that it''s a parent. So let''s
    go back to `page.php` and right above the `<nav>` tag, we''ll put an `if` statement,
    which will end below the `<nav>` tag. We''ll see if it''s a parent `page_is_parent()`,
    or if there''s any children `$post->post_parent is > 0`, then we''ll do what follows:'
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE92]'
  id: totrans-476
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: Let's save that and then go back to Sample Page. We can see that menu is now
    gone, but if we go to About it's still there, because it has the child pages.
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
- en: So everything is working correctly.
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
- en: 'Now I just want to fix the display; I want it to move it and make it appear
    a little better. To do this, let''s go to our style sheet and say `.sub-nav`.
    We''ll then place some margin on the top, floating it to the right and setting
    it to `300px` wide. Then we''ll float `ul` to the right. Next, the parent link,
    which in this case is About; we''ll float this to left and make it black, bold,
    and add a border to the right. Then, we''ll make the parent link black, and we''ll
    use `current_page_item`, because whatever page we''re on, we want that to be bold:'
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE93]'
  id: totrans-480
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: 'Let''s save this and see what that looks like:'
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/347089dd-4346-4213-948a-4977b273828f.png)'
  id: totrans-482
  prefs: []
  type: TYPE_IMG
- en: You can see that we have About, and if we go to FAQ that stays bold; if we go
    to Our Team even that's bold. This looks a lot better.
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, we''ll clear the float. To do this, we''ll go to `page.php`, and under
    `</nav>` we''ll add `<div class="clr">`. Then, we''ll go to our style sheet and
    add `.clr` and say `clear:both`:'
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE94]'
  id: totrans-485
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: 'So now we see that it''s above the title on the page:'
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/dbb703dc-6d87-436f-9a6e-129439b7da50.png)'
  id: totrans-487
  prefs: []
  type: TYPE_IMG
- en: We did quite a bit in this section.
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
- en: We set up our pages, and we saw how to create custom pages, custom templates,
    and also, how to create a sub navigation. In the next section, we'll get into
    widgets.
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
- en: Working with Theme Widgets
  id: totrans-490
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we'll take a look at widgets.
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
- en: Right now, we have a sidebar, but this is just static content in our php file.
    So we want this to come from the widget system. Also, we should be able to add
    multiple widgets in the sidebar. Now, on the blog page, and on any other page,
    this is going to be the only widget aside from a custom Home page that we'll create
    later on. However, we will add those positions in our `functions` file.
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
- en: 'So, let''s open up `functions.php`, and go right under the `after_theme_setup`
    action; this will be to set up widget locations. We''ll create a function, call
    it `init_widgets()` and it will take an `id`; then, we''ll say `register_sidebar`.
    Now, even though this is called `register_sidebar`, this is used with all widget
    positions, not just a sidebar. It takes in an array and it''s going to take a
    `name`; this happens to be `Sidebar`, but it could be anything. Then, we''ll also
    say `before_widget` and `after_widget`. Also, we''ll say `before_title` and `after_title`
    of the widget:'
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE95]'
  id: totrans-494
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: 'So, basically, these will be HTML tags that we want. If we say `index.php`
    and look at the sidebar, it has `<div>` with the class of `block`:'
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE96]'
  id: totrans-496
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: 'Now I don''t want to add this `div` element in `functions.php`; so let''s put
    it in `index.php` and `<div class="block">`. Let''s also add a class called `side-widget`
    and, after widget, we''ll close that `</div>` element. For the title, I''ll put
    `<h3>`:'
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE97]'
  id: totrans-498
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: 'Let''s save this and then go into `index.php`. We''ll take out everything that''s
    in this `side` div element and check to see whether there are any widgets in that
    position. To do this, we''ll say `if(is_active_sidebar)` and then pass in the
    widget ID, which is `sidebar`. Then we''ll say `<?php dynamic_sidebar(); ?>` and
    pass in the ID, `sidebar`:'
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE98]'
  id: totrans-500
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: 'If we look at the index page, nothing''s there because we haven''t added any
    widgets:'
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/904ac774-4df9-47d0-a1b6-db3f560f60a8.png)'
  id: totrans-502
  prefs: []
  type: TYPE_IMG
- en: 'Now we''ll need to replace all of the static sidebar code. Let''s copy it;
    we''ll start with `archive.php`. Then, we''ll just paste that in. We''ll go to
    `page.php`. Of course, you don''t need to have a sidebar with all these pages:
    `search`, `single`, and `company-template`, but we''re going to.'
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, we''ll go to our backend and then to Appearance:'
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/16cf061e-9907-404d-aada-7183defbf891.png)'
  id: totrans-505
  prefs: []
  type: TYPE_IMG
- en: 'Now see how there''s no widget. We need to initialize it, so back to `functions.php`,
    and then, right under `init_widgets()` we need to say `add_action()`. Now the
    hook we want to use is `widgets_init`, and then we just want to put the name of
    our function, which is `init_widgets`:'
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE99]'
  id: totrans-507
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: 'Let''s go back to our backend, reload, and now under Appearance, you should
    be able to go to Widgets:'
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9b3f5e08-5594-43fc-bae4-25f8d934468f.png)'
  id: totrans-509
  prefs: []
  type: TYPE_IMG
- en: 'Now we''ll add a custom Text widget, and let''s just put title; we''ll say
    `My Text Widget`. Then, I''ll just paste a sentence or two in Content, and click
    on Save:'
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2f66f9c5-01ca-4ae5-8415-6311950b8cd6.png)'
  id: totrans-511
  prefs: []
  type: TYPE_IMG
- en: 'Now go back to our frontend and reload:'
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6185538b-833a-4b4c-8965-3603df9f9ee4.png)'
  id: totrans-513
  prefs: []
  type: TYPE_IMG
- en: So this is coming from the Text widget.
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s add a button in here as well, just for looks. Let''s also put two line
    breaks. You can put whatever you like in a custom Text widget:'
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9f106c79-4a7d-44ca-86be-ab2fd883effc.png)'
  id: totrans-516
  prefs: []
  type: TYPE_IMG
- en: Now, another thing that we could do is to add some kind of dynamic widget, like,
    let's say, `Categories`.
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s take that Categories widget, put it in Sidebar, and we''ll save it.
    Let''s go take a look:'
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/0b5be00f-a53c-4f6e-bfce-01b9e3bba6d5.png)'
  id: totrans-519
  prefs: []
  type: TYPE_IMG
- en: 'I want to make this look a little better, which we can do that with CSS. Let''s
    go to the bottom and say `.side-widget`. I''ll add `margin-bottom: 20px`, that
    will move it down a little. Then, to do the list items, we''ll say `list-style:none`;
    we''ll give it `line-height` of `2.1em`, and for `border-bottom`, we''ll do `dotted`,
    with the color gray:'
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE100]'
  id: totrans-521
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: Save this.
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, it looks a lot better:'
  id: totrans-523
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d12b358a-c31c-47d3-b31e-6c4c8a205587.png)'
  id: totrans-524
  prefs: []
  type: TYPE_IMG
- en: 'We can also put, let''s say, `Recent Posts`, and change this to `3`:'
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e5fd80e9-6910-4eee-b684-0a7d0deb3bb3.png)'
  id: totrans-526
  prefs: []
  type: TYPE_IMG
- en: 'We actually didn''t give a title for the gallery. So, let''s just say `Photo
    Gallery`:'
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/47f3bfc3-d414-4627-b129-060ecaec7f26.png)'
  id: totrans-528
  prefs: []
  type: TYPE_IMG
- en: Now, I'll add the rest of the widgets into `functions.php`, or the rest of the
    widget positions, even though we'll not do it in this section. In the next section,
    we'll create a custom home page with those widgets.
  id: totrans-529
  prefs: []
  type: TYPE_NORMAL
- en: We'll go right under `init_widgets()`, and copy and paste it four more times.
    So `Sidebar`, then we'll enter the `Showcase` area and change the class name.
    Then we'll have `Box 1`, `Box 2`, and `Box 3`. This will have a class of `box`
    and `box1`. I'll actually replace these two with `box` and `box1`. In next `register_sidebar`
    we'll change `name` to `Box 2`, and change `name` in final `register_sidebar`
    to `3`. Save it, and now if we were to go back into the widgets area, you can
    now see that we have those widgets. At least, we have the positions. If we put
    something in them now, nothing's going to happen because we don't have them in
    our template.
  id: totrans-530
  prefs: []
  type: TYPE_NORMAL
- en: Custom home page
  id: totrans-531
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now we'll create a custom home page and then add widgets to the positions that
    we added.
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
- en: Let's create a new file and save this as `front-page.php`. If we reload the
    home page it goes completely blank because it's looking at `front-page.php` file.
    So I'll copy what we have in `page.php` and paste it in `front-page.php`.
  id: totrans-533
  prefs: []
  type: TYPE_NORMAL
- en: 'Now let''s reload:'
  id: totrans-534
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6908732d-52a5-4854-8119-4f47fa2d69dc.png)'
  id: totrans-535
  prefs: []
  type: TYPE_IMG
- en: 'This doesn''t look very good because we''re showing the posts with just the
    page formatting. So let''s go into pages, and create two new pages. We will call
    one `Home`; we''ll just say `This is the homepage`, click on Publish, and similarly
    create a new one called `Blog` and Publish:'
  id: totrans-536
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/62aceaa0-a31f-4e93-95fb-ef73146d8fba.png)'
  id: totrans-537
  prefs: []
  type: TYPE_IMG
- en: 'Now we''ll go to Settings and then to Reading:'
  id: totrans-538
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/091cbbdc-1b24-4d3d-b5e0-01a65b32a2ab.png)'
  id: totrans-539
  prefs: []
  type: TYPE_IMG
- en: In Your homepage displays, we'll set A static page; for Homepage, we'll choose
    Home; for Post page we'll choose Blog, and then we'll save it.
  id: totrans-540
  prefs: []
  type: TYPE_NORMAL
- en: 'Now we''ll go to Appearance and then Menus:'
  id: totrans-541
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9f6897f6-4686-4a6a-94fa-7aded0f62833.png)'
  id: totrans-542
  prefs: []
  type: TYPE_IMG
- en: 'Let''s go to tick Blog and click on Add to Menu. We''ll put that right between
    About and Services and save it. Now if we go back and reload, we get the Home
    page, and if we click on Blog, that brings us to the blog:'
  id: totrans-543
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/76c68a33-8850-4878-aaba-46831105ec7f.png)'
  id: totrans-544
  prefs: []
  type: TYPE_IMG
- en: 'So, this is how we can handle that. Now we want to make this look a little
    different, I want to have a Showcase widget. Also, I want to get rid of the sidebar
    and have three boxes and three different widgets under this content. Let''s go
    to `front-page.php` and get rid of the `main` class, highlighted in the following
    code block, because that''s what limits this to this width:'
  id: totrans-545
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE101]'
  id: totrans-546
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: 'Then, we''ll completely get rid of this `side` div element:'
  id: totrans-547
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE102]'
  id: totrans-548
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: 'We''ll look at it now; there''s no more sidebar:'
  id: totrans-549
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4668199f-cccd-402b-adbd-41773342f7eb.png)'
  id: totrans-550
  prefs: []
  type: TYPE_IMG
- en: 'Let''s do our Showcase widget, and see where it is going to go; right under
    `<div class="container content">`. I''ll copy from `index.php` and grab the code
    shown in the following code block. We''ll paste that in and then we just want
    to change the ID from `sidebar` to `showcase`; we''ll do the same thing for `dynamic_sidebar()`.
    So, this takes care of the Showcase widget:'
  id: totrans-551
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE103]'
  id: totrans-552
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: 'Now we''ll also want our three boxes, which we''ll put down right above the
    last `div` element. So I''ll paste this in three times. This one will be `box1`,
    `box2`, and `box3`. We''ll save this:'
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE104]'
  id: totrans-554
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: 'Now let''s go to the backend, to Appearance, and then Widgets:'
  id: totrans-555
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f0e0fe16-9846-43db-8767-89844136812f.png)'
  id: totrans-556
  prefs: []
  type: TYPE_IMG
- en: We'll grab Text and put that right in Showcase, and then we'll paste some code
    in the Content textbox; well, not some code, but just some HTML. We'll save this.
  id: totrans-557
  prefs: []
  type: TYPE_NORMAL
- en: Now we'll grab another Text, put that in Box 1, and put a title in here, let's
    say `Box 1 Heading`. Then I'll just paste some sample text in there. Let's do
    the same thing for Box 2 and for Box 3.
  id: totrans-558
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s do something different. We''ll grab the Recent Posts widget and put
    that in there, and set that Title to `Latest News`:'
  id: totrans-559
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c89f67ce-4fbd-4607-a2f4-5af7d80a38c8.png)'
  id: totrans-560
  prefs: []
  type: TYPE_IMG
- en: We'll save this, go to the frontend, and reload. Now we have our widgets.
  id: totrans-561
  prefs: []
  type: TYPE_NORMAL
- en: 'They don''t look too good, we need to style them. So let''s go to `style.css`.
    We''ll paste in the styling for showcase first. We''ll give it a background, padding
    of `40px`, and `margin-bottom`, and align everything to the center. Let''s do
    the same thing for `h1`:'
  id: totrans-562
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE105]'
  id: totrans-563
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: 'Now for the `box` class, we set it to `32%` width, `float:left`; then for `h3`,
    we center it, add a background and some padding:'
  id: totrans-564
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE106]'
  id: totrans-565
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: 'Let''s save this and reload:'
  id: totrans-566
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/42f0337c-2951-43ef-bce8-dae70fe1dc62.png)'
  id: totrans-567
  prefs: []
  type: TYPE_IMG
- en: 'There''s our Home page. You can see that we have Latest News; we can click
    on there and go to the different posts. There''s Gallery and Blog Posts, and just
    to make this look a little better, I''ll go to where we put `side-widget li` and
    add `.box li`:'
  id: totrans-568
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE107]'
  id: totrans-569
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: Now that looks better. So let's actually set the number of posts to be seen
    to `3`.
  id: totrans-570
  prefs: []
  type: TYPE_NORMAL
- en: This isn't the best looking style, but the point of this whole project isn't
    the design or style, or to create something beautiful, it's to get you familiar
    with the functionality of creating a WordPress theme.
  id: totrans-571
  prefs: []
  type: TYPE_NORMAL
- en: We'll have one more section and that's going to be for the comments, because
    right now in our blog, if we go to a regular post there's no comment functionality.
  id: totrans-572
  prefs: []
  type: TYPE_NORMAL
- en: Comment Functionality
  id: totrans-573
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we'll add the custom comment functionality.
  id: totrans-574
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s open up `single.php` and go right under `endif`. We''ll say `<?php comments_template();
    ?>`:'
  id: totrans-575
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE108]'
  id: totrans-576
  prefs: []
  type: TYPE_PRE
  zh: '[PRE108]'
- en: 'Let''s save this and reload. We have our comment section now:'
  id: totrans-577
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/8a59a226-97dd-475b-96e6-b7270629fac6.png)'
  id: totrans-578
  prefs: []
  type: TYPE_IMG
- en: Let's say `Great Post`, click on Post Comment, and it works!
  id: totrans-579
  prefs: []
  type: TYPE_NORMAL
- en: Now this will work as far as functionality goes, but it doesn't look too good,
    so I want to show you how we can customize this.
  id: totrans-580
  prefs: []
  type: TYPE_NORMAL
- en: 'We''ll create a new page, or a new file, and we''ll call this `comments.php`.
    If we go back now and reload you''ll see there''s nothing here, it''s reading
    from this file; if we say `Test` and reload, we get Test:'
  id: totrans-581
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4df7b01a-d2ea-4e9e-ad97-18577c9a3158.png)'
  id: totrans-582
  prefs: []
  type: TYPE_IMG
- en: So it's up to us to customize how we want this to work.
  id: totrans-583
  prefs: []
  type: TYPE_NORMAL
- en: There's actually some helpful code in the documentation at [https://codex.wordpress.org/Function_Reference/wp_list_comments](https://codex.wordpress.org/Function_Reference/wp_list_comments)
    for our `wp_list_comments`, and this is what we want.
  id: totrans-584
  prefs: []
  type: TYPE_NORMAL
- en: 'In the `comments.php` file enter the following code:'
  id: totrans-585
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE109]'
  id: totrans-586
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: Let's first of all put an `<h2>` tag and say `Comments`.
  id: totrans-587
  prefs: []
  type: TYPE_NORMAL
- en: We can create an arguments array. I'll grab that. Obviously, we don't need most
    of this stuff, but it's not going to hurt us to keep it in there; you'll see a
    lot of this is set to null, just in case you wanted to change anything later on.
    I'll change `avatar_size` to `80`, make it a little bigger. The rest we can leave.
    These arguments will now get plugged into the `wp_list_comments()` function. Next,
    we'll pass in `args` and `comments`. So, that takes care of the comments. Now
    we need the form so that can also take some arguments.
  id: totrans-588
  prefs: []
  type: TYPE_NORMAL
- en: 'From the bottom I''ll grab this code, paste that in; it just needs a `php`
    tag. We''ll set another argument array, `comments_args`; actually let''s call
    this `form_args`, and then change `comments_args` to `form_args`. Let''s set the
    label of the submit button, what you want in the `title_reply` field, comment
    after, `comment_notes_after`, and then the `comment_field` itself; in this case,
    they give you a paragraph with the class of `comment-form-comment` as the label.
    I don''t think we really want to change anything here. For the text area, we''ll
    add in a couple of attributes; we''ll set `cols` to `45` and `rows` to `8`:'
  id: totrans-589
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE110]'
  id: totrans-590
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: 'We''ll save it and reload. This is good:'
  id: totrans-591
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/348d1011-cf94-4cc3-b74f-6d688d79ceda.png)'
  id: totrans-592
  prefs: []
  type: TYPE_IMG
- en: The rest of it we'll do in CSS.
  id: totrans-593
  prefs: []
  type: TYPE_NORMAL
- en: 'We''ll now go to `style.css`. Let''s go down to the bottom and paste this code
    in; this is going to be `comment-body`, we''ll give it a `border`, `margin`, and
    `padding`. We also want the meta which is this area here, the avatar, and then
    the date and all that stuff; let''s paste that in:'
  id: totrans-594
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE111]'
  id: totrans-595
  prefs: []
  type: TYPE_PRE
  zh: '[PRE111]'
- en: 'We''ll add a dark background, some padding, and for the image, I''ll float
    it to the left, add the time and some margin to that. Next, we''ll format reply-link
    to make it look like a button, and then the form itself:'
  id: totrans-596
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE112]'
  id: totrans-597
  prefs: []
  type: TYPE_PRE
  zh: '[PRE112]'
- en: 'For the form input and the text area, we''ll just set width to `100%`, and
    we''ll add some padding, border, and stuff like that:'
  id: totrans-598
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE113]'
  id: totrans-599
  prefs: []
  type: TYPE_PRE
  zh: '[PRE113]'
- en: 'Let''s save this and reload, we can see that it looks a lot better:'
  id: totrans-600
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/aff829c3-5901-4210-92cf-ae3c23783375.png)'
  id: totrans-601
  prefs: []
  type: TYPE_IMG
- en: 'Let''s type something here. If we''re logged out, then we also have the Name,
    Email, and Website fields:'
  id: totrans-602
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/adb2c84b-2db7-478e-b16f-76b16db74026.png)'
  id: totrans-603
  prefs: []
  type: TYPE_IMG
- en: 'I think that looks pretty good. It looks a lot better than the default. Let''s
    say `This is a great article` and click on Send:'
  id: totrans-604
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e434aa5a-2ca2-4c66-b97f-fa81fca9e992.png)'
  id: totrans-605
  prefs: []
  type: TYPE_IMG
- en: Since we weren't logged in, it just says it's awaiting moderation, and that's
    good; it's working great!
  id: totrans-606
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-607
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Great! So that was pretty much it. The purpose of this project wasn't to build
    a beautiful theme, it was to really get you familiar with the different files
    that we need to create the syntax, the different functions, and things like that.
  id: totrans-608
  prefs: []
  type: TYPE_NORMAL
- en: We saw different post formats and created design using HTML and CSS. We created
    a WordPress theme by learning how to display blog posts, single posts, custom
    archive pages, and different post formats. We also saw how to add an image to
    the post and dealt with pages, custom templates, and sub navigation. We also worked
    around theme widgets, custom homepages, and the comment functionality.
  id: totrans-609
  prefs: []
  type: TYPE_NORMAL
- en: So, hopefully you enjoyed this chapter.
  id: totrans-610
  prefs: []
  type: TYPE_NORMAL
- en: In our next chapter, we will build a WordPress theme for the photo gallery.
  id: totrans-611
  prefs: []
  type: TYPE_NORMAL
