["```php\n$ ./yii\n\n```", "```php\n#!/usr/bin/env php\n<?php\n/**\n * Yii console bootstrap file.\n */\n\n// Define our application_env variable as provided by nginx/apache\nif (!defined('APPLICATION_ENV'))\n{\n if (getenv('APPLICATION_ENV') != false)\n define('APPLICATION_ENV', getenv('APPLICATION_ENV'));\n else \n define('APPLICATION_ENV', 'prod');\n}\n\n$env = require(__DIR__ . '/config/env.php');\n\ndefined('YII_DEBUG') or define('YII_DEBUG', $env['debug']);\n\n// fcgi doesn't have STDIN and STDOUT defined by default\ndefined('STDIN') or define('STDIN', fopen('php://stdin', 'r'));\ndefined('STDOUT') or define('STDOUT', fopen('php://stdout', 'w'));\n\nrequire(__DIR__ . '/vendor/autoload.php');\nrequire(__DIR__ . '/vendor/yiisoft/yii2/Yii.php');\n\n$config = require(__DIR__ . '/config/console.php');\n\n$application = new yii\\console\\Application($config);\n$exitCode = $application->run();\nexit($exitCode);\n```", "```php\n<?php\n\nYii::setAlias('@tests', dirname(__DIR__) . '/tests');\n\nreturn [\n    'id' => 'basic-console',\n    'basePath' => dirname(__DIR__),\n    'bootstrap' => ['log'],\n    'controllerNamespace' => 'app\\commands',\n    'components' => [\n        'cache' => [\n            'class' => 'yii\\caching\\FileCache',\n        ],\n        'log' => [\n            'targets' => [\n                [\n                    'class' => 'yii\\log\\FileTarget',\n                    'levels' => ['error', 'warning'],\n                ],\n            ],\n        ],\n        'db' => require(__DIR__ . '/db.php'),\n    ],\n    'params' => require(__DIR__ . '/params.php'),\n];\n```", "```php\nexport APPLICATION_ENV=\"dev\"\n```", "```php\necho $APPLICATION_ENV\n\n```", "```php\ndev\n\n```", "```php\n$ ./yii\n\n```", "```php\n$ ./yii\n\n```", "```php\n$ ./yii help cache\n\n```", "```php\n$ ./yii <route> [--option1=value1 --option2=value2 ... \\\nargument1 argument2 ...]\n\n```", "```php\n$ ./yii cache/flush-all\n\n```", "```php\nThe following cache components were processed:\n * cache (yii\\caching\\FileCache)\n\n```", "```php\n$ ./yii <route> --appconfig=path/to/config.php\n\n```", "```php\n$ ./yii help\n\n```", "```php\n$ ./yii help <command>\n\n```", "```php\n$ ./yii help <command/sub>\n\n```", "```php\n$ ./yii asset/template path/to/asset.php\n\n```", "```php\n$ ./yii asset/compress path/to/asset.php path/to/asset-bundle.php\n\n```", "```php\n$ ./yii cache\n\n```", "```php\nThe following caches were found in the system:\n * cache (yii\\caching\\FileCache)\n\n```", "```php\n<cache_name> (<cache_type>)\n```", "```php\n./yii cache/flush cache\n\n```", "```php\nThe following cache components will be flushed:\n * cache\nThe following cache components were processed:\n * cache (yii\\caching\\FileCache)\n\n```", "```php\n$ ./yii cache/flush-all\n\n```", "```php\n$ ./yii cache/flush-schema\n\n```", "```php\n$ ./yii fixture/load <FixtureName>\n$ ./yii fixture/unload <FixtureName>\n\n```", "```php\n$ ./yii message/config /path/to/translation/config.php\n\n```", "```php\n$ ./yii message /path/to/translation/config.php\n\n```", "```php\nmkdir commands\n\n```", "```php\n    touch commands/BasicController.php\n\n    ```", "```php\n    <?php\n\n    namespace app\\commands;\n    ```", "```php\n    use \\yii\\console\\Controller;\n    ```", "```php\n    class BasicController extends Controller { }\n    ```", "```php\n    public function actionIndex()\n    {\n      echo \"HelloWorld\";\n      return 0;\n    }\n    ```", "```php\n$ ./yii help\n\n```", "```php\n$ ./yii basic\n\n```", "```php\nHelloWorld\n\n```", "```php\n/**\n * A basic controller for our Yii2 Application\n */\nclass BasicController extends \\yii\\console\\Controller {}\n```", "```php\n/**\n * Outputs HelloWorld\n */\npublic function actionIndex() {}\n```", "```php\n$ ./yii help basic\n\n```", "```php\n/**\n * Outputs \"$name lives in $city\"\n * @param string $name\t  The name of the person\n * @param string $city  The city $name lives in\n * @return 0\n */\npublic function actionLivesIn($name, $city=\"Chicago\")\n{\n  echo \"$name lives in $city.\\n\";\n  return 0;\n}\n```", "```php\n$ ./yii help basic/lives-in\n\n```", "```php\nError: Missing required arguments: name\n\n```", "```php\n$ ./yii basic/lives-in Alice\n\n```", "```php\nAlice lives in Chicago.\n\n```", "```php\n$ ./yii basic/lives-in Alice California\n\n```", "```php\nAlice lives in California.\n\n```", "```php\n/**\n * Outputs each element of the input $array on a new line\n * @param array $array A comma separated list of elements\n * @return 0\n */\npublic function actionListElements(array $array)\n{\n  foreach ($array as $$k)\n    echo \"$$k\\n\";\n\n  return 0;\n}\n```", "```php\n$ ./yii basic/list-elements these,are,separate,items\n\n```", "```php\nthese\nare\nseparate\nitems\n\n```", "```php\n/**\n * Returns successfully IFF $shouldRun is set to any \n * positive integer greater than 0\n *\n * @param integer $shouldRun\n * @return integer\n */\npublic function actionConditionalExit($shouldRun=0)\n{\n  if ((int)$shouldRun < 0)\n  {\n    echo 'The $shouldRun argument must be an positive non-zero integer' . \"\\n\";\n    return 1;\n  }\n\n  return 0;\n}\n```", "```php\n<?php\n\nnamespace app\\commands;\nuse yii\\helpers\\Console;\n```", "```php\n/**\n * Outputs text in bold and cyan\n * @return 0\n */\npublic function actionColors()\n{\n  $this->stdout(\"Waiting on important thing to happen...\\n\", Console::BOLD);\n\n  $yay = $this->ansiFormat('Yay', Console::FG_CYAN);\n  echo \"$yay! We're done!\\n\";\n  return 0;\n}\n```", "```php\n$ ./yii basic/colors\n\n```"]