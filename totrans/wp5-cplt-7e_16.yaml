- en: Creating a Non-Blog Website Part Two - E-Commerce Websites and Custom Content
    Elements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In the previous chapter, you saw different types of non-blog websites. This
    chapter is a continuation of that topic, so let''s do two things. First, let''s
    go through some of the more trendy uses of WordPress and focus on a step-by-step
    process for reaching a great final result. Then, let''s discuss some of the custom
    content elements you can create in WordPress, such as custom post types, custom
    taxonomies, and the process of customizing the admin display slightly. We will
    study the following topics in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: E-commerce stores
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Video blogs and photo blogs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Social networks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introducing custom post types
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: E-commerce stores
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: E-commerce stores, in general, are websites where anyone can browse through
    a number of products and then use a shopping cart to make a purchase. Also, most
    e-commerce stores offer some kind of online payment integration, which allows
    every visitor to make and complete a purchase quickly. Additionally, sometimes
    there's even a backend inventory management system (an online warehouse of sorts)
    to make backend business management easier and integrated with the website.
  prefs: []
  type: TYPE_NORMAL
- en: Is WordPress a good platform for an e-commerce store?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The best thing about e-commerce is that you can actually launch a fully functional
    online store with WordPress. This, in my opinion, is simply incredible! As a former
    website developer, I actually remember how expensive and time-consuming it was
    to build such a store from the ground up. And now, you can just install WordPress,
    get a proper theme, download a specialized e-commerce plugin, and you're good
    to go! This is a prime example of how technology helps you to run your business
    the modern way.
  prefs: []
  type: TYPE_NORMAL
- en: Okay, enough with the intro. Let's focus on the actual process of building a
    quality e-commerce store. First off, the thing with e-commerce stores on WordPress
    is that they are extremely plugin-driven, so to speak. What I mean is that if
    you want to launch such a website, you will need to get one main e-commerce plugin
    that's going to be responsible for the complete set of operations available in
    your store. In short, this plugin will run your store. For that reason, choosing
    the right plugin is extremely important, which is something I'm sure you understand.
  prefs: []
  type: TYPE_NORMAL
- en: Getting a good e-commerce plugin
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are numerous premium plugins on the market. They offer a ton of features
    and integrate with almost any online payment processing method available. But,
    what's actually quite surprising is that the most popular plugin of them all is
    100% free. It's called **WooCommerce**, and it has become the *de facto* standard
    for running an e-commerce store on WordPress.
  prefs: []
  type: TYPE_NORMAL
- en: WooCommerce (available either at [https://woocommerce.com/](https://woocommerce.com/)
    or [https://wordpress.org/plugins/woocommerce/](https://wordpress.org/plugins/woocommerce/))
    is beautifully designed and offers a truly exceptional range of features, which
    I will get into in a minute. The main reason why I like the WooCommerce plugin
    so much is because it can be integrated with any theme. And I really do mean *any*.
    However, for a real-life business website (not just a test website, like the one
    we're going to build in a minute), I still think that you should use an optimized
    e-commerce theme. Again, feel free to visit one of the popular theme stores to
    get something of top quality. I listed a number of them in [Chapter 7](ffd72a00-558a-4dfc-a5c2-83f6051196a7.xhtml),
    *Choosing and Installing Themes*.
  prefs: []
  type: TYPE_NORMAL
- en: 'In short, a good e-commerce theme should achieve the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Have a clear design
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Present the center content block in an attention-grabbing way (this is where
    the products are going to be displayed)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allow you to tune the number of sidebars you want to display
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Be responsive (that is, viewable on any device)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Have a good navigation structure that's ready to house hundreds, if not thousands,
    of subpages (usually product pages)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Handle multilingual content
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Provide some level of social media integration (to allow users to share product
    links on Twitter or Facebook)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Just to summarize this introduction, to give a head start in running an e-commerce
    store on WordPress, you need to pair the WooCommerce plugin with a good-looking
    WordPress theme that's optimized to work on an e-commerce website.
  prefs: []
  type: TYPE_NORMAL
- en: Plugin installation and initial setup
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now that we have our plugin chosen, perform the following steps to install
    and set it up:'
  prefs: []
  type: TYPE_NORMAL
- en: To get WooCommerce, you can either go to [https://wordpress.org/plugins/woocommerce/](https://wordpress.org/plugins/woocommerce/),
    or install it straight from the `wp-admin` panel when you go to Plugins | Add
    New.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Just input `WooCommerce` into the main search field. Most likely, the first
    plugin on the list is the one you're looking for.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on Install Now and when the process finishes, activate the plugin. The
    following screenshot shows what you''ll see afterward:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/3b86beed-f996-479b-9779-a225d65181f6.png)'
  prefs: []
  type: TYPE_IMG
- en: WooCommerce shows you the main page of the onscreen setup wizard. The best thing
    about it is that you're being guided through the whole process step by step.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Setting up the main store pages
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Among the first things that you need to do is create some of the mandatory
    pages that allow your website to transform into a fully-fledged e-commerce store.
    Luckily, WooCommerce takes care of this for you—all you have to do is click on
    the Continue button. You will get the following pages:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Shop: Your main shop page—this is where your products are going to appear'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Cart: The shopping cart area of the store'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Checkout: The area where your customers can finalize their orders'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'My Account: Profile pages for your registered customers'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Your store location
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The next step is setting up your store location. This is quite simple, since
    you only need to select where your store is based and which currency it will use.
    Additionally, if you''re going to be charging sales tax, you can set that up there
    too, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d64c3405-ea7f-41b9-8e93-8e04c169844b.png)'
  prefs: []
  type: TYPE_IMG
- en: Shipping and payments
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The next screen in the WooCommerce wizard is about setting up your shipping
    details, along with weight and dimension units. After that, you get to set the
    payment methods that your store will use. What you select there depends on your
    store type and the kinds of goods that you''re going to be selling. The following
    screenshot shows what''s available:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/bbfeb3e7-cd16-4b41-9d3d-ae80eb6734af.png)'
  prefs: []
  type: TYPE_IMG
- en: Usually, you will want to enable PayPal at the very least.
  prefs: []
  type: TYPE_NORMAL
- en: Adjusting your store design
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The next step in the process, a very important step, is picking a design for
    your store. One of the best ways to get started here is to go with the official
    WooCommerce theme, called Storefront. This theme can be installed with a click
    on the right from the WooCommerce wizard, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2e03bb3a-99dc-4a82-8356-812c21cbcf20.png)'
  prefs: []
  type: TYPE_IMG
- en: Once you get Storefront installed, the setup process is complete and the store
    is fully operational, as in, you can begin adding your first products.
  prefs: []
  type: TYPE_NORMAL
- en: Adding products
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'When it comes to products, WooCommerce follows the standard content organization
    method in WordPress. This means that you can manage products just like you''d
    manage any other piece of content (pages or posts). All you have to do is perform
    the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Go to Products | Add New and fill out the product fields. Notice that products
    also have their own categories and tags, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/46d198bc-93f1-4895-8133-6f090ead64d8.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Once you have a handful of products added, the following screenshot shows what
    the Products | All Products section of your `wp-admin` panel is going to look
    like:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/18207a5a-574e-4d68-a304-816e314ffeb0.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The following screenshot shows the main page of the store, with all the products
    available to your customers:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/4a6b3726-9b2d-45fe-aa02-c5d1ef7d0954.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Each individual product also looks quite nice when you view it. An example
    is shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/1141967f-6f7a-45a1-8c43-9db6970099fa.png)'
  prefs: []
  type: TYPE_IMG
- en: Stats – orders, coupons, and reports
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The last element of the plugin worth discussing here for a minute is the management
    backend—the orders, coupons, and reports.
  prefs: []
  type: TYPE_NORMAL
- en: 'Orders can be found in WooCommerce | Orders. You can manage them just like
    any other piece of WordPress content. There are a number of additional fields
    and parameters, though, so there might be a slight learning curve. But it is still
    a very friendly and easy-to-use environment. An example of what orders look like
    is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/1472b97c-3c35-4cec-b913-1111fd8b1342.png)'
  prefs: []
  type: TYPE_IMG
- en: To view and create new coupon codes, navigate to WooCommerce | Coupons. Coupons
    are a great way to bring new people to your store. Everyone loves a bargain, don't
    they? Or, you can make your coupon codes publicly available on the internet as
    a promotional method.
  prefs: []
  type: TYPE_NORMAL
- en: 'Lastly, to view reports, navigate to WooCommerce | Reports. There''s a nice
    graphical representation of what''s been going on in your store. You can view
    sales, coupons used, customer activity, and your current stock. Right now, I don''t
    have much going on in my store, so the graph looks like the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6c729ba8-e784-4779-b4b3-0f933a965fa9.png)'
  prefs: []
  type: TYPE_IMG
- en: 'To learn more about managing orders and coupons, look at these official pages
    in the WooCommerce docs:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://docs.woocommerce.com/document/managing-orders/](https://docs.woocommerce.com/document/managing-orders/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://docs.woocommerce.com/document/coupon-management/](https://docs.woocommerce.com/document/coupon-management/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: That's pretty much it on the topic of using WooCommerce and launching a nice
    e-commerce store on WordPress. The most remarkable thing here is how easy it is
    to actually do it. Just imagine how much time it would take to create something
    with similar functionality from the ground up. Or, better yet, the cost required
    to set it up. The possibilities that WordPress and various plugins deliver these
    days are really incredible. I'm sure that a couple of years ago, no one would
    even believe that launching a quality e-commerce store could be done this easily.
  prefs: []
  type: TYPE_NORMAL
- en: One last thing, WooCommerce is not entirely free all the time. If you want to
    install additional features, the official extensions are anything between $29
    and $99\. So, for some specific, real-world applications, investments might be
    required.
  prefs: []
  type: TYPE_NORMAL
- en: We've only scretched the surface here, and there's a lot more that WooCommerce
    can do. It is a truly impressive piece of software, and it's absolutely exceptional
    when it comes to giving you reliable e-commerce functionality that turns your
    otherwise standard WordPress website into a professional e-commerce store. If
    you want to learn more about building a store with WooCommerce from scratch, the
    best place to get your information is probably the official docs section at [https://docs.woocommerce.com/documentation/plugins/woocommerce/getting-started/](https://docs.woocommerce.com/documentation/plugins/woocommerce/getting-started/).
  prefs: []
  type: TYPE_NORMAL
- en: Video blogs and photo blogs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let's cover these two types of WordPress sites together because the individual
    goals for each are often very similar (although their designs may still be a bit
    different). In short, a video blog is one where the author mainly publishes videos,
    instead of traditional text-based posts. A photo blog, on the other hand, is essentially
    the same thing, the only difference being it revolves around photos.
  prefs: []
  type: TYPE_NORMAL
- en: Now, why would you even bother with a customized setup for a video blog or a
    photo blog in the first place when you can just use a standard WordPress installation
    with a traditional blogging-optimized theme? Well, to be honest here, you can
    indeed go with a standard setup, and your video/photo blog will be just about
    *fine*. But with some additional work (not much) put into building something that's
    tailor-made for multimedia blogs, your site can gain a big advantage over your
    competition, mostly in terms of usability and content presentation.
  prefs: []
  type: TYPE_NORMAL
- en: 'For instance, let''s focus on the following interesting features you can add
    to a video blog:'
  prefs: []
  type: TYPE_NORMAL
- en: A blog home page built on a grid layout with big thumbnails, so every visitor
    can see the snapshots of the videos right away
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Videos in the main listing presented as concise blocks containing the thumbnail
    and a small amount of text to convince people to click on the video
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A wide main blog listing with just a narrow sidebar on the left (or right)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Integrated social media features (including YouTube subscription buttons)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Social media comments fetched from the platform where the video was originally
    hosted
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A custom backend to host the videos on the blog (or on an external server)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A shareable embed code, so your visitors can embed the videos easily
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A custom player to replace the native YouTube or Vimeo players
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'You can have the following interesting features on a photo blog:'
  prefs: []
  type: TYPE_NORMAL
- en: A custom home page featuring one main photo (*a* *photo of the day*)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An automatic photo slider on the home page
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lightbox functionality for viewing the photos in full size
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A wide main blog listing with integrated social media features
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Social media comments
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A custom backend to host photos
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A shareable embed code
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Custom photo controls (such as *save*, *view full size*, *share*, and so on)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As you can see, most of these features can work equally well on both video blogs
    and photo blogs. As usual with WordPress, you can get most of them either by obtaining
    a quality theme, or using some third-party plugins. Let's cover both of these
    approaches.
  prefs: []
  type: TYPE_NORMAL
- en: Exploring themes for video and photo sites
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Being quite popular kinds of blogs, both video and photo blogs have a very wide
    range of themes available on the internet. But, be careful! Searching for a theme
    on Google can get you in trouble. Well, maybe not in *trouble* per se, but if
    you end up downloading a theme from a random site, you have no guarantee that
    it's a secure solution and that there's no malicious or encrypted code inside.
    A much better method is to either go to the official directory or to some of the
    recognized theme stores.
  prefs: []
  type: TYPE_NORMAL
- en: 'For starters, the following themes are available out there:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Shapely**, available at [https://wordpress.org/themes/shapely/](https://wordpress.org/themes/shapely/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**TheMotion Lite**, available at [https://wordpress.org/themes/themotion-lite/](https://wordpress.org/themes/themotion-lite/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**RokoPhoto Lite**, available at [https://wordpress.org/themes/rokophoto-lite/](https://wordpress.org/themes/rokophoto-lite/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Activello**, available at [https://wordpress.org/themes/activello/](https://wordpress.org/themes/activello/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These are all free, but you can also get a premium theme. However, this will
    require an investment, so only do it if you're devoted to creating a really high-quality
    multimedia blog.
  prefs: []
  type: TYPE_NORMAL
- en: Getting plugins for video and photo blogs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'As I said, apart from video and photo optimized themes, you can also get a
    number of plugins that will make your site more functional. The good news is that
    we''re only going to focus on free plugins:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Optimole** ([https://wordpress.org/plugins/optimole-wp/](https://wordpress.org/plugins/optimole-wp/)):
    This plugin doesn''t present any particular output on the frontend of your site,
    because what it actually does is automatically optimizes your images in the background.
    This is a great plugin for saving your bandwidth, especially if you''re publishing
    a lot of images. The installation process is quite standard. Once the plugin is
    activated and you''ve provided your free API key, it starts working in the background
    with no supervision required.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Simple Lightbox** ([https://wordpress.org/plugins/simple-lightbox/](https://wordpress.org/plugins/simple-lightbox/)):
    This plugin delivers a really good-looking lightbox functionality. The best thing
    about this plugin is that it''s ultra easy to use. All you have to do is activate
    it, and it will immediately start taking care of the images you''re displaying
    on your blog. The plugin will intercept image clicks and show the image file in
    a nice lightbox instead of loading them individually (on a blank page).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Envira Gallery** ([https://wordpress.org/plugins/envira-gallery-lite/](https://wordpress.org/plugins/envira-gallery-lite/)):
    This is one of the most popular gallery plugins for WordPress. It allows you to
    create responsive (optimized for desktop and mobile) photo and video galleries.
    The great thing about it is that you can build your galleries with drag and drop.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**10Web Instagram Feed** ([https://wordpress.org/plugins/wd-instagram-feed/](https://wordpress.org/plugins/wd-instagram-feed/)):
    Instagram is now a crucial part of any photographer or videographer''s presence
    on the web. This plugin offers you quick integration with everyone''s favorite
    photo platform. Use it to showcase your Instagram feed as a widget.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Just to sum up the topic of multimedia blogs, I have to point out that this
    is a very crowded area among both theme and plugin developers. The plugins mentioned
    here will give you a good start, but having your finger on the pulse and paying
    attention to what's new on the market (as in, cool new plugins and themes) is
    actually the best way to keep your photo or video blog on top of its game. That
    being said, getting and testing every new plugin out there is not the recommended
    approach. Still, from time to time, you can find a true gem that's going to help
    you take your blog to the next level.
  prefs: []
  type: TYPE_NORMAL
- en: Social networks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Finally, it's time to discuss one of the most surprising topics in relation
    to building various types of websites with WordPress. As it turns out, the platform
    can be used very well to run a fully functional social network. In other words,
    you can have your own Facebook if you want to, at least when it comes to functionality.
  prefs: []
  type: TYPE_NORMAL
- en: 'And speaking of functionality, in short, a social network built with WordPress
    can offer the following features:'
  prefs: []
  type: TYPE_NORMAL
- en: Support for any number of user accounts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Facebook-like publishing method for users (a *Wall* or an activity stream)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Forums
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Blogs and microblogs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Friends
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Groups
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Private messages
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Comments
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Photo and video content
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: That being said, building and then running a well-constructed social network,
    utilizing all of the available features, will require some serious work. This
    is way beyond the scope of this book. So, here, we're only going to focus on the
    basic setup process and getting started. If you're planning to launch an actual
    social network and make it available to the world, you should probably get more
    information, either by going to the official online documentation, or obtaining
    some more publications on the topic.
  prefs: []
  type: TYPE_NORMAL
- en: Essentially, social networking on WordPress works through one specific plugin—**BuddyPress**,
    although calling it just a plugin is a massive understatement. BuddyPress is a
    whole online publishing environment on its own, which integrates with WordPress.
    Unlike other plugins, it doesn't just display some custom content here and there.
    It actually changes the whole appearance (structure) of your WordPress site to
    make it look, and operate, like a social network.
  prefs: []
  type: TYPE_NORMAL
- en: Let's take the topic step by step, starting with installation.
  prefs: []
  type: TYPE_NORMAL
- en: Installing a social network
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'There''s nothing fancy here, to install a social network all you have to do
    is perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to [https://buddypress.org/](https://buddypress.org/), download the main
    plugin and then upload it to your WordPress site, or search for the plugin from
    within the `wp-admin` panel (Plugins | Add New) using the name `BuddyPress`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The installation process of the plugin itself is quite standard, meaning that
    after getting it on your server, you only have to click on the Activate button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'When the process finishes, visit the settings section under Settings | BuddyPress.
    First, pick the components you''d like to use in your new social network. For
    testing purposes, I just enabled all of them, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/cbd30f1b-9fe6-496d-b782-43d5cf928e6c.png)'
  prefs: []
  type: TYPE_IMG
- en: The second tab on this settings page, titled Options, is where you can adjust
    some of the other standard settings, such as the presence of the top toolbar,
    various profile settings, and group settings.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Finally, the third tab, Pages, lets you assign the pages that will house some
    standard areas of your social network, such as the activity stream, user groups,
    and member profiles.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can create new pages here or use the ones that BuddyPress created already during
    installation.
  prefs: []
  type: TYPE_NORMAL
- en: Designing your social network
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In its current form, BuddyPress can work with any WordPress theme. That's right,
    you don't have to have an optimized social networking design if you don't want
    to. BuddyPress will manage to display its contents inside either the main content
    block of your current theme, or the widget areas you have available.
  prefs: []
  type: TYPE_NORMAL
- en: However, as usual, if you want to make your social network look more professional,
    then you should probably look around and get something that's specifically optimized
    for social networks. The best rule of thumb when you're searching for such themes,
    in my opinion, is to compare them against the biggest social network of them all—Facebook.
    Although some people don't enjoy the design that Facebook offers, it is still
    the most successful social network around, so they are clearly doing something
    right. Treating it as a benchmark of sorts is, therefore, a very good idea.
  prefs: []
  type: TYPE_NORMAL
- en: If you want to find a nice list of BuddyPress-compatible themes, the WordPress
    directory comes to the rescue yet again. When you go to [https://wordpress.org/themes/search/buddypress/](https://wordpress.org/themes/search/buddypress/),
    you'll find a filtered list of themes that have been tested with BuddyPress and
    are optimized to work as a social network.
  prefs: []
  type: TYPE_NORMAL
- en: Once you've found yourself a nice-looking theme, you can go straight to working
    with your new social network without focusing any more on the setup. However,
    if you really want to get to know the platform and the way it's built, I advise
    you to go to the official documentation, which is one of the best BuddyPress resources
    available ([https://codex.buddypress.org/](https://codex.buddypress.org/)). It's
    also where you can learn all the ins and outs of BuddyPress development, creating
    your own themes, or even BuddyPress extension plugins.
  prefs: []
  type: TYPE_NORMAL
- en: Extending the functionality
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: BuddyPress is constructed in a way that provides the basic social networking
    functionality and site organization. If you want to extend your social media site
    and give it some new features, you can install a number of BuddyPress plugins.
    You can find them at [https://wordpress.org/plugins/search/buddypress/](https://wordpress.org/plugins/search/buddypress/).
    Basically, they are just like other WordPress plugins (the installation process
    is the same), but instead of delivering some new functionality to WordPress itself,
    they focus more on BuddyPress.
  prefs: []
  type: TYPE_NORMAL
- en: There is a lot more waiting for you inside BuddyPress, and I actually encourage
    you to do some researching and learning on your own, especially if you're planning
    to launch a social network at some point. But for now, I think that we've got
    the topic covered, at least when it comes to giving you an introduction to social
    networking with WordPress and getting started with the best social networking
    plugin available.
  prefs: []
  type: TYPE_NORMAL
- en: Introducing custom post types
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: While building some of the sites described in the current and the previous chapters,
    you may stumble upon what're called custom post types. Or you may even decide
    to create them yourself for the purpose of your individual projects. But let's
    take it from the top. The most commonly known types of content in WordPress are
    *posts* and *pages*. However, if we feel that the situation/project calls for
    it, we can create any number of new post types by taking advantage of the custom
    post type functionality and its wide versatility.
  prefs: []
  type: TYPE_NORMAL
- en: The need for custom post types can appear in many scenarios. For instance, when
    a writer is building a personal portfolio site, they might need a custom post
    type named `book` to present their publications in an attractive way, instead
    of just using standard posts. This is exactly what we're about to do in this section
    of the chapter. So, gear up to learn how custom post types work by building a
    new one.
  prefs: []
  type: TYPE_NORMAL
- en: For this purpose, we'll go back to our main cooking blog theme—*Daily Cooking
    Custom*. In its default form, it doesn't feature any custom post types, and that's
    a good thing as we've got a blank canvas to work on. To specify that you'd like
    to have a custom post type in your theme, you can add some code to your theme's
    `functions.php` file. This is what we'll be doing. However, keep in mind that
    you can also attach the custom post type to a plugin or a widget if you don't
    want it to be tied to a particular theme.
  prefs: []
  type: TYPE_NORMAL
- en: Registering a new post type
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To register a new post type, all you have to do is add some simple code to
    your theme''s `functions.php` file. It''s good practice to tie the creation of
    the new type to the `init` function of the theme so that it gets called at the
    right moment in the booting process. The following is the initial, blank, custom-post-type
    code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'The `register_post_type()` function takes an array as its second parameter,
    and in that array, you can specify whether the object is public or should be involved
    in rewriting the URL, what elements it supports on its editing page, and so on.
    Let''s set up an array of all the arguments and then pass it to the function,
    as shown in the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'I''ve chosen each of the following parameters because they make sense for the
    `book` custom post type:'
  prefs: []
  type: TYPE_NORMAL
- en: '`description`: This one''s pretty self-explanatory.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`public`: This means that the post type is available publicly, just as posts
    and pages are—rather than being hidden behind the scenes. It''ll get a user interface
    and can be shown in navigation menus, and so on.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`rewrite`: This specifies that the post type can be used in the rewrite rules
    for pretty permalinks.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`has_archive`: This enables post type archives (a classic index page, like
    we have for our standard posts).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`supports`: This is an array of the capabilities that users see when they''re
    creating or editing an item. For books, we''re including six items.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`show_in_rest`: This enables our new custom post type to work with the block
    editor introduced in WordPress 5.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The final function call, `flush_rewrite_rules()`, will allow us to show a standard
    archive listing of the books later on (just like a standard post listing, but
    for our custom post type).
  prefs: []
  type: TYPE_NORMAL
- en: These are just some of the arguments you can pass. Read about the others in
    the codex at [https://codex.wordpress.org/Function_Reference/register_post_type](https://codex.wordpress.org/Function_Reference/register_post_type).
  prefs: []
  type: TYPE_NORMAL
- en: Now that we've got the basic post type set up, let's add some labels.
  prefs: []
  type: TYPE_NORMAL
- en: Adding labels
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You can add labels to your custom post type so that WordPress knows what to
    say when talking about it. First, let''s simply create an array of all the labels.
    Put this as the first thing inside the `book_init()` function, as shown in the
    following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Then, add a single line of code to the `$args` array telling it to use the
    labels, as shown in the following snippet:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: The next step is to add messages, which is what WordPress tells the user when
    they are doing stuff with books.
  prefs: []
  type: TYPE_NORMAL
- en: Adding messages
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Whenever a user updates, previews, or does anything with a book, you''ll want
    them to see an accurate message. All we need to do is create an array of messages
    and then hook them to WordPress, as shown in the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: This code creates a function named `book_updated_messages()`, which sets up
    an array of messages and returns it. We call this using the filter for `post_updated_messages`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, our custom post type is ready to use! Go to your `wp-admin` panel and
    reload it. You''ll see that a new menu has appeared under Comments. It''s called
    Books. Let''s add a book, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d28bfca8-77a9-4b72-a3e9-aa3e15eada00.png)'
  prefs: []
  type: TYPE_IMG
- en: Note that I gave it a custom field named `book_author`, and I also uploaded
    a featured image for the book cover. Now, when you go to the main Books page,
    you'll see the book listed. If you click on the View link under the book's title,
    you'll see the book displayed using the `single.php` theme template, which won't
    be the most reader-friendly experience. Therefore, let's make some new template
    files to display our books.
  prefs: []
  type: TYPE_NORMAL
- en: Creating book template files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'WordPress needs to know how to display your new post type. You have to create
    a template for a single book, and one for the listing of books. Perform the following
    steps to do this:'
  prefs: []
  type: TYPE_NORMAL
- en: First, we'll make a book version of `single.php`. It must be named `single-POST_TYPE_NAME.php`,
    which in our case is `single-book.php`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Using `page.php` as our starting point (as it's already the closest to what
    we'd like our book page to look like), we're going to add the display of the custom
    field, `book_author`, and the featured image.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: So, let's start by taking our `page.php` file, making a copy of it, and renaming
    it `single-book.php`. Also, let's make a copy of `content-page.php` and call it
    `content-book.php`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, it''s time to include all the elements. Here''s what the two files look
    like. First, `single-book.php` looks like this:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: The only change that's been made to this file is the `get_template_part()` function
    call.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, the `content-book.php` file looks like the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, let''s take our custom field, `book_author`, and display it right below
    the featured image. We can do this by adding one new line of code in between the
    featured image code and the main content code, as shown in the following code
    snippet:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'At this point, when you visit a single book page, the author''s name is displayed
    and the book cover shows up automatically, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/7603568d-d5fa-4ba5-a2a1-8d8c8ddcb41d.png)'
  prefs: []
  type: TYPE_IMG
- en: Our next task is a page that will show a listing of the books, like what `index.php`
    does for the posts. By default, WordPress uses the `archive.php` file to show
    the listing of every new custom post type.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We can customize this by creating a new template file and calling it `archive-book.php`.
    To be more exact, every template file controlling the archive for any new custom
    post type has to be named `archive-POST_TYPE.php`. The easiest way to create such
    file is by making a copy of the standard `archive.php` file or the `index.php`
    file, and renaming it to `archive-book.php`. Then, we can take it from there and
    modify the file to fit our requirements. So, what I'm going to do here is use
    my `index.php` as the template and do some tuning up around it.
  prefs: []
  type: TYPE_NORMAL
- en: 'Right now, my new `archive-book.php` file doesn''t offer any custom way of
    displaying my books. What it looks like is shown in the following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: As you can see, the actual display is done by the `get_template_part('listing',
    'book')` function call. In order to make this line work, we have to create the
    listing file itself. The simplest way of doing this is by making a copy of `content.php`
    and modifying it slightly. First, rename it to `listing-book.php`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Right away, I'm going to erase the unnecessary sections and leave only those
    that can be used to make our book listing look great.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, I will also include a thumbnail display. Quite frankly, I don't have to
    do this, but I believe that the book listing will look better with smaller thumbnails.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Finally, I will also display the author of each book. The following code shows
    how the finished file will look:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot shows the final effect (I''ve added one more book
    just for demonstration purposes):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/3f3a98ac-405a-4f65-9659-c07713187cc3.png)'
  prefs: []
  type: TYPE_IMG
- en: Registering and using a custom taxonomy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Just to follow the example given a while ago with our custom post type for
    books, let''s now create a custom taxonomy. Why? You simply might not want to
    mix book categories and post categories, so we are going to create a custom taxonomy
    named Book Categories. Add the following code to your `functions.php` file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Like the `register_post_type()` function, the `register_taxonomy()` function
    allows you to register a new taxonomy within WordPress. You can read up on the
    details of all of the parameters you can add in the codex ([https://codex.wordpress.org/Function_Reference/register_taxonomy](https://codex.wordpress.org/Function_Reference/register_taxonomy)).
    For now, you can see that we're calling it `book_category`; it belongs to the 
    `book` object type and is hierarchical, and you can query it, too. It needs to
    be included in the rewrite of URLs with a custom slug, `available-books`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, we need to make this taxonomy available to books. Simply find the `$args`
    array we used while registering the book post type (the `book_init()` function)
    and add the `taxonomies` item to the array, as shown in the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'When you return to the `wp-admin` panel and edit a book, you''ll see that the
    book categories have appeared on the right, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/7fce5814-6677-4ce7-a737-694a7d027a28.png)'
  prefs: []
  type: TYPE_IMG
- en: 'After you''ve added some categories and assigned them to the books, let''s
    take a look at displaying those categories on the front of the website. First,
    we''ll add them to the single book display. Open `content-book.php` and add the
    following code in at an appropriate place within the loop (for example, you can
    add it right after the `the_content()` function call):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'You''re using the `get_the_term_list()` function , which takes the following
    arguments:'
  prefs: []
  type: TYPE_NORMAL
- en: The ID of the post (`$post->ID`)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The name of the taxonomy (`book_category`)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Print before the list (`<em>Categories:`)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Separate items in the list with (`,`)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Print after the list (`</em>`)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Also, now that you have categories, you can visit Appearance | Menus and add
    links to those categories to your header menu, and you can also create a custom
    menu with all the categories and add it to one of the sidebars.
  prefs: []
  type: TYPE_NORMAL
- en: If you get a 404 error from WordPress at any point during the creation of your
    custom post type and custom taxonomy when you don't think you should, then navigate
    to Settings | Permalinks and just save the changes without actually changing anything.
    Sometimes, WordPress needs to refresh the permalinks to make the new links work
    correctly.
  prefs: []
  type: TYPE_NORMAL
- en: Customizing the admin display
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The final thing you can do to fully realize your new book custom-post-type
    is to change its display in the `wp-admin` panel. You don''t need to know the
    WordPress user who created a given book, but you do want to see the book categories
    and the thumbnail. Let''s go back to `functions.php`. First, we''ll change the
    columns that are displayed, as shown in the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: The first function says, *don't show author, date, and categories, but do show
    book categories and thumbnail,* and the second function says, *for the book categories
    column, print the list of categories, and for the thumbnail column, print the
    `get_post_thumbnail()` function.*
  prefs: []
  type: TYPE_NORMAL
- en: 'Revisit the Books page in the `wp-admin` panel, and it now looks like the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/7da7895b-6217-4eba-aac8-c444f5b79fcc.png)'
  prefs: []
  type: TYPE_IMG
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter was part two of our non-blog website journey with WordPress. I
    hope you enjoyed the material. We went through the whole process of setting up
    e-commerce sites, video blogs, photo blogs, and social networks. Along the way,
    we took a closer look at some interesting plugins and their functionalities, just
    to make your life easier as a WordPress developer. Finally, we created a custom
    post type and a corresponding custom taxonomy.
  prefs: []
  type: TYPE_NORMAL
- en: I believe that, at this point, you are well equipped to work with WordPress
    and use it to build your next great website! WordPress is a top-notch CMS (Content
    Management System) that has matured tremendously over the years. The WordPress
    admin panel is designed to be user-friendly and is continuously being improved.
    The code that underlies WordPress is robust, and is the creation of a large community
    of dedicated developers. Additionally, the functionality of WordPress can be extended
    through the use of plugins and themes.
  prefs: []
  type: TYPE_NORMAL
- en: I hope you've enjoyed the information in this book and that you've already started
    working on your next (or perhaps first) WordPress website. Be sure to stay connected
    to the WordPress open source community! Thank you for reading; you rock!
  prefs: []
  type: TYPE_NORMAL
