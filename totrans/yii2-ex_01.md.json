["```php\ncurl -s http://getcomposer.org/installer | php\nphp composer.phar global require \"fxp/composer-asset-plugin:1.0.0\"\nphp composer.phar create-project --prefer-dist yiisoft/yii2-app-basic basic\n\n```", "```php\n<?php\n// comment out the following two lines when deployed to production\ndefined('YII_DEBUG') or define('YII_DEBUG', true);\ndefined('YII_ENV') or define('YII_ENV', 'dev');\n\nrequire(__DIR__ . '/../vendor/autoload.php');\nrequire(__DIR__ . '/../vendor/yiisoft/yii2/Yii.php');\n\n$config = require(__DIR__ . '/../config/web.php');\n\n(new yii\\web\\Application($config))->run();\n```", "```php\n    'request' => [\n    'cookieValidationKey' => 'hPpnJs7tvs0T4N2OGAY',\n    ],\n    ```", "```php\n    'cache' => [                     \n    'class' => 'yii\\caching\\FileCache',\n    ],\n    ```", "```php\n    'user' => [\n    'identityClass' => 'app\\models\\User',\n             'enableAutoLogin' => true,\n     ],\n    ```", "```php\n    'errorHandler' => [\n    'errorAction' => 'site/error',\n    ],\n    ```", "```php\n    'mailer' => [\n      'class' => 'yii\\swiftmailer\\Mailer',\n      // send all mails to a file by default. You have to set\n      // 'useFileTransport' to false and configure a transport\n         // for the mailer to send real emails.\n         'useFileTransport' => true,\n    ],\n    ```", "```php\n    'log' => [\n               'traceLevel' => YII_DEBUG ? 3 : 0,\n                'targets' => [\n                    [\n                        'class' => 'yii\\log\\FileTarget',\n                        'levels' => ['error', 'warning'],\n                    ],\n                ],\n     ],\n    ```", "```php\n    db => [\n        'class' => 'yii\\db\\Connection',\n        'dsn' => 'mysql:host=localhost;dbname=yii2basic',\n        'username' => 'dbuser'',\n        'password' => 'dbpassword',\n        'charset' => 'utf8',\n    ],\n    ```", "```php\n'db' => [\n  'class' => 'yii\\db\\Connection',\n  'dsn' => 'mysql:host=localhost;dbname=mydb',\n  'username' => 'dbuser',\n  'password' => 'dbpassword',\n  'charset' => 'utf8',\n\n  'on afterOpen' => function($event) {\n    $event->sender->createCommand(\"SET time_zone = '+00:00'\")->execute();\n       }\n  ],\n```", "```php\n'bootstrap' => ['debug'],\n'modules' => [\n  'debug' => 'yii\\debug\\Module',\n]\n```", "```php\nif (YII_ENV_DEV) {\n    // configuration adjustments for 'dev' environment\n    $config['bootstrap'][] = 'debug';\n    $config['modules']['debug'] = 'yii\\debug\\Module';\n    $config['bootstrap'][] = 'gii';\n    $config['modules']['gii'] = 'yii\\gii\\Module';\n}\n```", "```php\n$config['modules']['debug'] = [\n    'class' => 'yii\\debug\\Module',\n    'allowedIPs' => [ '127.0.0.1', '::1']\n];\n```", "```php\n$config['modules']['debug'] = [\n    'class' => 'yii\\debug\\Module',\n    'allowedIPs' => [ '127.0.0.1', '::1', '1.2.3.4']\n];\n```", "```php\nif (YII_ENV_DEV) {\n    // configuration adjustments for 'dev' environment\n    $config['bootstrap'][] = 'debug';\n    $config['modules']['debug'] = [\n        'class' => 'yii\\debug\\Module',\n            'allowedIPs' => [ '127.0.0.1', '::1', '1.2.3.4']\n    ];\n    $config['bootstrap'][] = 'gii';\n    $config['modules']['gii'] = 'yii\\gii\\Module';\n}\n```", "```php\n'log' => [\n  'traceLevel' => YII_DEBUG ? 3 : 0,\n      'targets' => [\n      [\n             'class' => 'yii\\log\\FileTarget',\n             'levels' => ['error', 'warning'],\n      ],\n    ],\n],\n```", "```php\n    curl -s http://getcomposer.org/installer | php\n    php composer.phar global require \"fxp/composer-asset-plugin:1.0.0\"\n    php composer.phar create-project --prefer-dist yiisoft/yii2-app-basic basic\n\n    ```", "```php\npublic function actionHelloWorld()\n{\n    echo 'hello world'\n}\n```", "```php\npublic function actionHelloWorld()\n{\n    return $this->render('helloWorld');\n}\n```", "```php\npublic function actionHelloWorld($nameToDisplay)\n{\n    return $this->render('helloWorld',\n  [ 'nameToDisplay' => $nameToDisplay ]\n    );\n}\n```", "```php\nHello World <?php echo $nameToDisplay ?>\n```", "```php\npublic function actionHelloWorld()\n{\n    $nameToDisplay = Yii::$app->request->get('nameToDisplay');\n    // Equivalent to\n// $nameToDisplay = isset($_GET['nameToDisplay'])?$_GET['nameToDisplay']:null;\n\n    return $this->render('helloWorld',\n    [ 'nameToDisplay' => $nameToDisplay ]\n    );\n}\n```"]