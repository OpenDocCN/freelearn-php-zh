["```php\nCREATE TABLE `articles`(\n`id`INT UNSIGNED NOT NULL AUTO_INCREMENT,\n`title` VARCHAR(255) NOT NULL,\n`body` TEXT NOT NULL,\nPRIMARY KEY(`id`)\n);\nCREATE TABLE `users`(\n`id` INT UNSIGNED NOT NULL AUTO_INCREMENT,\n`username` VARCHAR(255) NOT NULL,\nPRIMARY KEY(`id`)\n);\nCREATE TABLE `votes`(\n`id` INT UNSIGNED NOT NULL AUTO_INCREMENT,\n`article_id` INT NOT NULL,\n`user_id` INT NOT NULL,\n`vote` INT UNSIGNED NOT NULL,\nPRIMARY KEY(`id`),\nFOREIGN KEY `votes__articles`(`article_id`) REFERENCES `articles`(`id`),\nFOREIGN KEY `votes__users`(`user_id`) REFERENCES `users`(`id`)\n);\n\n```", "```php\n<?php\nclass ArticlesController extends AppController {\npublic function vote($id) {\nif (!empty($this->data)) {\nif ($this->Article->vote($id, $this->data)) {\n$this->Session->setFlash('Vote placed');\nreturn $this->redirect(array('action'=>'index'));\n} else {\n$this->Session->setFlash('Please correct the errors');\n}\n}\n}\npublic function view($id) {\n$article = $this->Article->get($id);\nif (empty($article)) {\n$this->Session->setFlash('Article not found');\nreturn $this->redirect(array('action' => 'index'));\n}\n$this->set(compact('article'));\n}\n}\n?>\n\n```", "```php\n<?php\nclass Article extends AppModel\n{\npublic $hasMany = array('Vote');\npublic function get($id)\n{\nreturn $this->find('first', array( 'fields' => array( 'Article.*', 'AVG(Vote.vote) AS vote' ),\n'joins' => array(\narray(\n'type' => 'LEFT',\n'table' => $this->Vote->getDataSource()- >fullTableName($this->Vote->table),\n'alias' => 'Vote',\n'conditions' => array(\n'Vote.article_id = Article.id'\n)\n)\n),\n'conditions' => array('Article.id' => $id),\n'group' => array(\n'Article.id'\n),\n'recursive' => -1\n));\n}\npublic function vote($id, $data = array()) {\nif (empty($data) || empty($data['Vote'])) {\nthrow new Exception(\"No data specified\");\n}\n$data['Vote']['article_id'] = $id;\n$this->Vote->create($data);\nif (!$this->Vote->validates()) {\nreturn false;\n}\n$conditions = array(\n'Vote.user_id' => $data['Vote']['user_id'],\n'Vote.article_id' => $data['Vote']['article_id']\n);\nif ($this->Vote->hasAny($conditions)) {\nreturn false;\n}\nreturn ($this->Vote->save($data) !== false);\n}\n}\n?>\n\n```", "```php\n<?php\nclass Vote extends AppModel {\npublic $belongsTo = array('Article', 'User');\npublic $validate = array(\n'article_id' => array('required' => true, 'rule' => 'notEmpty'),\n'user_id' => array('required' => true, 'rule' => 'notEmpty'),\n'vote' => array(\n'required' => array('required' => true, 'rule' => 'notEmpty'),\n'range' => array(\n'rule' => array('range', 0, 6),\n'allowEmpty' => true\n)\n)\n);\n}\n?>\n\n```", "```php\n<h1><?php echo $article['Article']['title']; ?></h1>\nVote: <span id=\"vote\"><?php echo number_format($article[0]['vote'], 1); ?></span>\n<p><?php echo $article['Article']['body']; ?></p>\n\n```", "```php\n    <?php\n    class ArticleFixture extends CakeTestFixture {\n    public $import = 'Article';\n    public $records = array(\n    array(\n    'id' => 1,\n    'title' => 'Article 1',\n    'body' => 'Body for Article 1'\n    ),\n    array(\n    'id' => 2,\n    'title' => 'Article 2',\n    'body' => 'Body for Article 2'\n    )\n    );\n    }\n    ?>\n\n    ```", "```php\n    <?php\n    class UserFixture extends CakeTestFixture {\n    public $table = 'users';\n    public $import = array('table' => 'users');\n    public $records = array(\n    array(\n    'id' => 1,\n    'username' => 'john.doe'\n    ),\n    array(\n    'id' => 2,\n    'username' => 'jane.doe'\n    ),\n    array(\n    'id' => 3,\n    'username' => 'mark.doe'\n    )\n    );\n    }\n    ?>\n\n    ```", "```php\n    <?php\n    class VoteFixture extends CakeTestFixture {\n    public $import = 'Vote';\n    public $records = array(\n    array(\n    'article_id' => 1,\n    'user_id' => 1,\n    'vote' => 4\n    ),\n    array(\n    'article_id' => 1,\n    'user_id' => 3,\n    'vote' => 5\n    ),\n    array(\n    'article_id' => 1,\n    'user_id' => 2,\n    'vote' => 4\n    ),\n    array(\n    'article_id' => 2,\n    'user_id' => 2,\n    'vote' => 3\n    ),\n    array(\n    'article_id' => 2,\n    'user_id' => 3,\n    'vote' => 4\n    )\n    );\n    }\n    ?>\n\n    ```", "```php\n    <?php\n    class ArticleTestCase extends CakeTestCase {\n    public $fixtures = array('app.article', 'app.user', 'app.vote');\n    public function startTest($method) {\n    parent::startTest($method);\n    $this->Article = ClassRegistry::init('Article');\n    }\n    public function endTest($method) {\n    parent::endTest($method);\n    ClassRegistry::flush();\n    }\n    public function testGet() {\n    $article = $this->Article->get(1);\n    $this->assertTrue(!empty($article) && !empty($article['Article']));\n    $this->assertTrue(!empty($article[0]) && !empty($article[0]['vote']));\n    $this->assertEqual(number_format($article[0]['vote'], 1), 4.3);\n    $article = $this->Article->get(2);\n    $this->assertTrue(!empty($article) && !empty($article['Article']));\n    $this->assertTrue(!empty($article[0]) && !empty($article[0]['vote']));\n    $this->assertEqual(number_format($article[0]['vote'], 1), 3.5);\n    }\n    public function testVote() {\n    $result = $this->Article->vote(2, array('Vote' => array(\n    'user_id' => 2\n    )));\n    $this->assertFalse($result);\n    $this->assertTrue(!empty($this->Article->Vote->validationErrors['vote']));\n    $result = $this->Article->vote(2, array('Vote' => array(\n    'user_id' => 2,\n    'vote' => 6\n    )));\n    $this->assertFalse($result);\n    $this->assertEqual($this->Article->Vote->validationErrors['vote'], 'range');\n    $result = $this->Article->vote(2, array('Vote' => array(\n    'user_id' => 2,\n    'vote' => 1\n    )));\n    $this->assertFalse($result);\n    $result = $this->Article->vote(2, array('Vote' => array(\n    $result = $this->Article->vote(2, array('Vote' => array(\n    'user_id' => 1,\n    'vote' => 1\n    )));\n    $this->assertTrue($result);\n    $article = $this->Article->get(2);\n    $this->assertTrue(!empty($article[0]) && !empty($article[0]['vote']));\n    $this->assertEqual(number_format($article[0]['vote'], 1), 2.7);\n    $this->expectException();\n    $this->Article->vote(2);\n    }\n    }\n    ?>\n\n    ```", "```php\n../cake/console/cake bake fixture article -count 2\n\n```", "```php\n..\\cake\\console\\cake.bat fixture article -count 2\n\n```", "```php\nApp::import('Model', array('Article', 'Vote'));\nclass TestArticle extends Article {\npublic $belongsTo = array();\npublic $hasOne = array();\npublic $hasMany = array(\n'Vote' => array('className' => 'TestVote')\n);\npublic $hasAndBelongsToMany = array();\npublic $alias = 'Article';\npublic $useTable = 'articles';\npublic $useDbConfig = 'test_suite';\n}\nclass TestVote extends Vote {\npublic $belongsTo = array();\npublic $hasOne = array();\npublic $hasMany = array();\npublic $hasAndBelongsToMany = array();\npublic $alias = 'Vote';\npublic $useTable = 'votes';\npublic $useDbConfig = 'test_suite';\n}\n\n```", "```php\npublic $fixtures = array('app.article', 'app.vote');\n\n```", "```php\npublic function startTest($method)\n{\nparent::startTest($method);\n$this->Article = ClassRegistry::init('TestArticle');\n}\n\n```", "```php\n<?php\nclass ArticlesControllerTestCase extends CakeTestCase {\npublic $fixtures = array('app.article', 'app.user', 'app.vote');\npublic function testView() {\n$result = $this->testAction('/articles/view/1', array('return'=>'vars'));\n$expected = array(\n'Article' => array(\n'id' => 1,\n'title' => 'Article 1',\n'body' => 'Body for Article 1'\n),\n0 => array(\n'vote' => 4.3333\n)\n);\n$this->assertTrue(!empty($result['article']));\n$this->assertEqual($result['article'], $expected);\n$result = $this->testAction('/articles/view/1', array('return'=>'view'));\n$this->assertTags($result, array(\narray('h1' => array()),\n'Article 1',\n'/h1',\n'Vote:',\narray('span' => array('id'=>'vote')),\n'4.3',\n'/span',\narray('p' => array()),\n'Body for Article 1',\n'/p'\n));\n}\n?>\n\n```", "```php\n    App::import('Controller', 'Articles');\n    class TestArticlesController extends ArticlesController {\n    public $name = 'Articles';\n    public $testRedirect = false;\n    public function __construct() {\n    parent::__construct();\n    Configure::write('controllers.'.$this->name, $this);\n    }\n    public function beforeFilter() {\n    if (isset($this->Session)) {\n    App::import('Component', 'Session');\n    Mock::generate('SessionComponent');\n    $this->Session = new MockSessionComponent();\n    }\n    parent::beforeFilter();\n    }\n    public function redirect($url, $status = null, $exit = true) {\n    $this->testRedirect = compact('url', 'status', 'exit');\n    if ($exit) {\n    $this->autoRender = false;\n    }\n    }\n    }\n\n    ```", "```php\n    public function testAction($url, $params = array()) {\n    $url = preg_replace('/^\\/articles\\//', '/test_articles/', $url);\n    $result = parent::testAction($url, $params);\n    $this->Articles = Configure::read('controllers.Articles');\n    return $result;\n    }\n\n    ```", "```php\n    $result = $this->testAction('/articles/view/0');\n    $this->assertTrue(!empty($this->Articles->testRedirect));\n    $this->assertEqual($this->Articles->testRedirect['url'], array('action' => 'index'));\n\n    ```", "```php\n    public function testVote() {\n    $result = $this->testAction('/articles/vote/2', array(\n    'data' => array(\n    'Vote' => array(\n    'user_id' => 1,\n    'vote' => 1\n    )\n    )\n    ));\n    $this->assertTrue(!empty($this->Articles->testRedirect));\n    $this->assertEqual($this->Articles->testRedirect['url'], array('action' => 'index'));\n    $this->Articles->Session->expectOnce('setFlash', array('Vote placed'));\n    $article = $this->Articles->Article->get(2);\n    $this->assertTrue(!empty($article) && !empty($article['Article']));\n    $this->assertTrue(!empty($article[0]) && !empty($article[0]['vote']));\n    $this->assertEqual(number_format($article[0]['vote'], 1), 2.7);\n    }\n\n    ```", "```php\nif (isset($this->Session)) {\nApp::import('Component', 'Session');\nMock::generate('SessionComponent');\n$this->Session = new MockSessionComponent();\n}\n\n```", "```php\n../cake/console/cake testsuite app case models/article\n\n```", "```php\n..\\cake\\console\\cake.bat testsuite app case models/article\n```"]