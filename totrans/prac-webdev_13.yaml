- en: Chapter 13. Foundation – A Responsive CSS/JavaScript Framework
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第13章。Foundation——一个响应式CSS/JavaScript框架
- en: I usually describe **Zurb Foundation** and **Twitter Bootstrap** to people as
    "the thing I always wanted to write but never found the time to do".
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我通常将**Zurb Foundation**和**Twitter Bootstrap**描述给人们，就像“我一直想写但从未找到时间去做的事情”。
- en: One could call them frameworks or not, but I recommend you check the websites
    of both to learn what they call themselves. I have used both and compared them
    and have decided to go with **Foundation**. It is a matter of taste. I always
    like to go with the bigger challenge. I preferred studying Finnish over learning
    Swedish. You may find Bootstrap easier to use, as it probably contains more widgets,
    but when I look at a website, it is, in my opinion, easier to recognize that it
    was developed with Bootstrap out of the box than with Foundation. I have included
    an overview of Bootstrap as an appendix.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 可以称它们为框架也可以不称，但我建议你检查一下这两个网站，了解它们如何称呼自己。我使用过它们，比较过它们，并决定选择**Foundation**。这取决于个人品味。我总是喜欢接受更大的挑战。我更喜欢学习芬兰语而不是瑞典语。你可能觉得Bootstrap更容易使用，因为它可能包含更多的组件，但在我看来，识别一个网站是否是用Bootstrap开发的比用Foundation开发的要容易得多。我已经在附录中包含了一个Bootstrap的概述。
- en: Our responsive toolkit – Foundation
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我们的响应式工具包——Foundation
- en: In the previous chapter, you learned all the pieces of the puzzle we need to
    develop a *mobile first*, progressive enhancement, responsive design web application.
    Mobile first is a way of thinking; for the progressive enhancement part, we used
    `enhance.js` and `modernizr.js`. So, we still need to know how to do the responsive
    part by writing a flexible grid, creating media queries, supporting flexible images,
    and then some.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，你学习了我们需要开发一个以**移动优先**、渐进增强、响应式设计为主的网页应用的所有拼图碎片。移动优先是一种思维方式；对于渐进增强部分，我们使用了`enhance.js`和`modernizr.js`。因此，我们仍然需要了解如何通过编写灵活的网格、创建媒体查询、支持灵活的图片以及一些其他操作来完成响应式部分。
- en: This is the part that Foundation has already done for us. In addition, it does
    have some cool User Interface (UI) components. One of them is *off-canvas*, an
    awesome feature to be used on mobiles and tablets that, since I have used it,
    I recognize on every major website or app, Facebook included. Check out the excellent
    Foundation documentation for the full list of features. In this chapter, we will
    describe the ones that I found particularly useful.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 这是Foundation已经为我们完成的部分。此外，它确实有一些酷的用户界面（UI）组件。其中之一是*off-canvas*，这是一个在移动设备和平板电脑上使用的出色功能，自从我使用它以来，我在每个主要网站或应用上都能认出它，包括Facebook。查看优秀的Foundation文档，以获取完整的功能列表。在本章中，我们将描述我认为特别有用的那些功能。
- en: Foundation components
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Foundation组件
- en: After you download Foundation from [http://foundation.zurb.com/](http://foundation.zurb.com/)
    (I recommend you go with the complete option), you will see that it contains CSS
    components and JavaScript components. I placed them all in a folder `foundation5`
    to make it easier to switch releases, or even to maintain a Bootstrap flavor of
    the site as well.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 下载Foundation后[http://foundation.zurb.com/](http://foundation.zurb.com/)（我推荐选择完整版），你会发现它包含CSS组件和JavaScript组件。我将它们都放在了一个名为`foundation5`的文件夹中，以便更容易切换版本，甚至维护一个Bootstrap风格的网站。
- en: 'Here is what you will get with the download:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是下载将获得的内容：
- en: '**index.html**: This is a web page that shows you the most common features
    of Foundation.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**index.html**：这是一个展示Foundation最常见功能的网页。'
- en: '**css**: This is a folder containing `foundation.css` and `foundation.min.css`,
    the Foundation stylesheet. Include one of these in the `<head>` section of your
    site. In addition, include your own stylesheet. We recommend that you do not modify
    `foundation.css`. Otherwise, if a new version comes along, you end up overwriting
    your code.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**css**：这是一个包含`foundation.css`和`foundation.min.css`的文件夹，是Foundation样式表。在你的网站`<head>`部分包含其中一个。此外，包含你自己的样式表。我们建议你不要修改`foundation.css`。否则，如果出现新版本，你最终会覆盖你的代码。'
- en: '**js/foundation.min.js**: This is all of the Foundation JavaScript. Put this
    right before the end of your `<body>` tag, after jQuery. Also, do not modify this
    file.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**js/foundation.min.js**：这是所有的Foundation JavaScript。将其放在你的`<body>`标签的末尾之前，jQuery之后。另外，不要修改此文件。'
- en: '**js/foundation**: This is a folder containing separate JavaScript source files
    for the foundation features in case you want to explore how they work. There is
    no need to include this in your web page.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**js/foundation**：这是一个包含Foundation功能的单独JavaScript源文件的文件夹，以防你想了解它们是如何工作的。不需要在你的网页中包含这个文件夹。'
- en: '**js/vendor**: This is a folder containing more useful JavaScript libraries
    such as jQuery and **Modernizr**.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**js/vendor**：这是一个包含更多有用JavaScript库的文件夹，例如jQuery和**Modernizr**。'
- en: Foundation uses Modernizr, so aren't you glad we already know what this is?
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 基础框架使用Modernizr，所以你很高兴我们已经知道这是什么了吧？
- en: 'Reference `modernizr.js` in the `<head>` section of your site so that all the
    tests can be performed before the page is loaded. Place `jQuery.js` right before
    the end of `<body>`, and before `foundation.min.js`. Then, add the following lines,
    which will start Foundation:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在你网站的`<head>`部分引用`modernizr.js`，以便在页面加载之前执行所有测试。将`jQuery.js`放在`<body>`的末尾之前，并在`foundation.min.js`之前。然后，添加以下行，这将启动基础框架：
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The grid system
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网格系统
- en: Foundation comes with a grid system that, by default, divides your working screen
    real estate into 12 columns. Using classes, you specify for every block on the
    screen how many columns wide you want it to be. There are different classes for
    different sizes; this is the Foundation way to make responsive design easy.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 基础框架自带一个网格系统，默认情况下，将你的工作屏幕区域分为12列。使用类，你可以为屏幕上的每个块指定你希望它有多宽。有不同的类用于不同的尺寸；这是基础框架使响应式设计变得简单的方法。
- en: Imagine a variety of screens and devices you want your website to look great
    on. Let's look at the larger ones and call them a canvas for a moment. Picture
    two vertical lines, about 1024px apart, centered on the canvas. These will be
    the vertical borders of our working area. Of course, once you reduce the size
    of your viewport, or if you are using a tablet or mobile, your working area is
    going to be the full width of your screen.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下你希望你的网站在各种屏幕和设备上看起来都很棒。让我们先看看较大的屏幕，暂时称它们为画布。想象两条垂直线，大约相隔1024像素，位于画布中心。这些将成为我们工作区域的垂直边界。当然，一旦你减小视口大小，或者如果你正在使用平板或手机，你的工作区域将是屏幕的全宽。
- en: 'Now, to build the layout of our web page, we are going to divide it into horizontal
    rows, inside which, we will place responsive blocks (`<div>`) of content. For
    those, there are classes we can use, indicating what size screen (think of it
    as what type of T-shirt) we are dealing with, and how many columns we want to
    fill. Look at the following example:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，为了构建我们网页的布局，我们将将其分为水平行，在其中，我们将放置响应式的内容块（`<div>`）。对于这些，我们可以使用类来指定我们正在处理哪种尺寸的屏幕（可以想象成哪种类型的T恤），以及我们希望填充多少列。看看下面的例子：
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'So, this was our first `row` of things, containing three responsive blocks.
    Now, we build mobile first, so the first class we used indicates how many columns
    wide we want that block to be on a mobile, our small T-shirt. We go for the max:
    12\. If you do not specify anything for sizes medium and large, they will implicitly
    inherit the same values. Always include the `columns` class as well.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，这是我们第一个“行”的内容，包含三个响应式块。现在，我们首先构建移动端，所以第一个类我们使用的是表示我们希望这个块在移动端（比如我们的T恤）上有多宽的列数。我们选择最大值：12。如果你没有为中等和大型尺寸指定任何内容，它们将隐式地继承相同的值。始终包含`columns`类。
- en: You've probably already figured out what will be going on here. When you display
    this on a small screen, every one of these three blocks will be 12 columns wide,
    which is as far as we can go, so they will be stacked on top of each other. When
    we switch to medium, like when turning our tablet from vertical to landscape,
    we will have a row of two and one below it. On large screens, they will all fit
    next to each other.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经猜到了这里会发生什么。当你在一个小屏幕上显示这些内容时，这三个块中的每一个都将有12列宽，这是我们能够达到的最大宽度，因此它们将堆叠在一起。当我们切换到中等屏幕，比如将平板电脑从纵向转为横向时，我们将有一行两个块，另一个块在其下方。在大屏幕上，它们将并排排列。
- en: Class end
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 类 end
- en: If you do not have enough items in a row to fill all columns, the last item
    will be placed on the right edge. If you want to override that, you can add a
    class called `end` for this, and it will appear where you expected it.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你一行中没有足够的项来填充所有列，最后一个项将被放置在右侧边缘。如果你想覆盖这一点，你可以为这个添加一个名为`end`的类，它将出现在你期望的位置。
- en: Visibility classes
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可见性类
- en: 'There is a whole collection of classes that fit right in here that I always
    had trouble finding in the documentation because they were described before the
    *Grid* section: **visibility classes**. Similar to determining how many columns
    wide you want something to be, you may want to decide whether to show it or not,
    depending on the device. The most popular example is probably the three bar menu
    icon you see on small screens replacing the horizontal navigation on "normal"
    size screens. You can choose between hiding and showing for a T-shirt size, or
    one size and up. The names should speak for themselves. It also shows that we
    have more sizes in our T-shirt shop.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一系列适合的类，我总是在文档中找不到它们，因为它们在*网格*部分之前就被描述了：**可见性类**。类似于确定某个东西想要有多宽的列宽，你可能想要根据设备决定是否显示它。最流行的例子可能是你在小屏幕上看到的三个条形菜单图标，它取代了“正常”尺寸屏幕上的水平导航。你可以选择为T恤尺寸或更大尺寸隐藏或显示。名字应该能说明一切。这也表明我们在T恤店有更多尺寸。
- en: 'Even more useful are the classes you can use to say yes or no to show things
    depending on the orientation of your screen, and whether or not it is a touch-screen
    device. This is one reason why you should not forget to include `modernizr.js`.
    Here is the list:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 更有用的是，你可以使用这些类来根据屏幕方向和是否为触摸屏设备来决定是否显示某些内容。这也是你不应该忘记包含`modernizr.js`的原因之一。以下是列表：
- en: '| `show-for-touch` | `show-for-medium-up` | `hide-for-small-only` |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| `show-for-touch` | `show-for-medium-up` | `hide-for-small-only` |'
- en: '| `hide-for-touch` | `show-for-large-only` | `hide-for-medium-only` |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| `hide-for-touch` | `show-for-large-only` | `hide-for-medium-only` |'
- en: '| `show-for-landscape` | `show-for-large-up` | `hide-for-medium-up` |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| `show-for-landscape` | `show-for-large-up` | `hide-for-medium-up` |'
- en: '| `hide-for-landscape` | `show-for-xlarge-only` | `hide-for-large-only` |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| `hide-for-landscape` | `show-for-xlarge-only` | `hide-for-large-only` |'
- en: '| `show-for-small-only` | `show-for-xlarge-up` | `hide-for-large-up` |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| `show-for-small-only` | `show-for-xlarge-up` | `hide-for-large-up` |'
- en: '| `show-for-medium-only` | `show-for-xxlarge-up` | `hide-for-xlarge-only` |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| `show-for-medium-only` | `show-for-xxlarge-up` | `hide-for-xlarge-only` |'
- en: '| `hide-for-xlarge-up` | `hide-for-xxlarge-up` |   |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| `hide-for-xlarge-up` | `hide-for-xxlarge-up` |   |'
- en: The block grid system
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 块状网格系统
- en: 'This made me pronounce words of wisdom that confused people and will confuse
    you until you have seen the example: having things that are the same size is not
    the same as having things be the same size.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这让我说出了一些让人困惑的智慧之言，直到你看到例子：拥有相同大小的东西并不等同于东西的大小是一样的。
- en: The classes that belong to the `block grid` system allow you to make sure that
    your item blocks are evenly spaced no matter what screen size. You can do so by
    specifying how many `items` you want in a row, not how many `columns` wide you
    want an item to be.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 属于`块状网格`系统的类允许你确保无论屏幕大小如何，你的项目块都是均匀分布的。你可以通过指定一行中想要的`项目`数量来实现这一点，而不是指定一个项目想要的列宽。
- en: As a consequence, your items will become smaller on smaller screens, so they
    are no longer the same size, but all items in a row will have an equal size, so
    they all have the same size. Got it? This is a great feature to use in simple
    photo galleries or blog posts.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在较小的屏幕上，你的项目会变得更小，所以它们不再是相同的大小，但一行中的所有项目将具有相同的大小，所以它们都有相同的大小。明白了吗？这是一个在简单相册或博客文章中使用的好功能。
- en: 'You can use the block grid by assigning the class(es) to a `<ul>` element,
    and your items are the `<li>` elements. A typical class name would be `size-block-grid-number`.
    For example:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过将类（们）分配给一个`<ul>`元素来使用块状网格，你的项目是`<li>`元素。一个典型的类名可能是`size-block-grid-number`。例如：
- en: '[PRE2]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Useful UI elements
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 有用的UI元素
- en: As mentioned before, Foundation is well-documented, and there are books available
    if you want to read and learn even more. In the remainder of this chapter, we
    will go over a select number of UI features I found to be very useful, with a
    few examples that combine them.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，Foundation有很好的文档，如果你想要阅读和学习更多，还有书籍可供选择。在本章的剩余部分，我们将介绍一些我认为非常有用的UI功能，并附带一些结合它们的例子。
- en: After that, we will finish the chapter with the Foundation way of doing navigation,
    **on-canvas** and **off-canvas**.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们将以Foundation的方式完成导航章节，**画布上**和**画布外**。
- en: Thumbnails – for simple galleries
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 缩略图 – 用于简单相册
- en: Foundation is changing, so at the time of writing this book, there were several
    UI features to produce image sliders or other cool things to do with photographs
    that were going to be majorly modified or replaced.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: Foundation正在变化，所以在撰写这本书的时候，有几个UI功能用于制作图片滑块或其他与照片相关的酷炫功能，这些功能将被大幅修改或替换。
- en: 'However, everybody needs to have thumbnails of their pictures to be part of
    the design. In Foundation, there is a simple class called `th` that you can use
    that will produce a nicely formatted responsive thumbnail with or without a caption.
    For example:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，每个人都需要他们的图片缩略图作为设计的一部分。在Foundation中，有一个简单的类名为`th`，您可以使用它来生成带有或没有标题的格式良好的响应式缩略图。例如：
- en: '[PRE3]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This puts nice styling around your thumbnail image and caption, but once you
    click on it, the larger image will be shown in a way decided by your browser.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这将为您的缩略图像和标题周围添加漂亮的样式，但一旦您点击它，较大的图像将以浏览器决定的方式显示。
- en: Reveal modals – your better pop-up
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 揭示模态 – 您更好的弹出窗口
- en: It would be a lot nicer if our larger image would show up in a nice pop-up.
    Pop-ups can be used anywhere on a site. Foundation offers what they call **reveal
    modals**. They are very simple to use.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们的较大图像能够在一个漂亮的弹出窗口中显示，那就更好了。弹出窗口可以在网站的任何地方使用。Foundation提供了他们所说的**揭示模态**。它们非常简单易用。
- en: There is the area on the site where you place something that gives access to
    the pop-up. In the example, it is a simple `<div>`, not even an `<a>` tag. You
    give the element a `data-reveal-id` attribute, with the ID of the element you
    want to reveal as a value.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 这是您在网站上放置以提供弹出窗口访问权限的区域。在示例中，它是一个简单的`<div>`，甚至不是一个`<a>`标签。您给元素一个`data-reveal-id`属性，其值为您想要揭示的元素的ID。
- en: 'Next, there is the element that has that ID and contains what you want shown
    in the pop-up. Note the `<a>` tag at its end with class `close-reveal-modal`.
    This will trigger the pop-up to disappear when clicked. If you forget this part,
    there is no way that the user can make the pop-up go away:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，有一个具有该ID的元素，其中包含您想要在弹出窗口中显示的内容。注意其末尾的带有`close-reveal-modal`类的`<a>`标签。当点击时，这将触发弹出窗口消失。如果您忘记这部分，用户将无法使弹出窗口消失：
- en: '[PRE4]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Dropdowns
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 下拉菜单
- en: 'Maybe you want a drop down (or drop up or drop left) instead of a pop-up. In
    this example, we introduce a `button`, Foundation style. We have also returned
    to the T-shirt shop: both the button and the actual drop down can be given a size
    class. When you include the `content` class, the drop down will be given some
    nice padding. There is also an option that you can use to make the drop down show
    up on hover:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 也许您想要一个下拉菜单（或向上下拉或向左下拉）而不是弹出窗口。在这个例子中，我们介绍了一个Foundation风格的`button`。我们还将返回到T恤店：按钮和实际的下拉菜单都可以给予一个大小类。当您包含`content`类时，下拉菜单将获得一些漂亮的填充。还有一个选项，您可以使用它来使下拉菜单在悬停时显示：
- en: '[PRE5]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Example – a simple photo gallery
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例 – 一个简单的照片画廊
- en: Let's now combine a block grid, thumbnails, reveal modals, and a drop down to
    produce a nice responsive photo gallery. We will use the modal to display the
    larger image and the drop down to display technical details of the photograph.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们现在结合一个块网格、缩略图、揭示模态和下拉菜单来制作一个漂亮的响应式照片画廊。我们将使用模态来显示较大的图像，并使用下拉菜单来显示照片的技术细节。
- en: 'This is the code fragment through the first photograph:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这是第一张照片的代码片段：
- en: '[PRE6]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Accordions
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 手风琴
- en: '**Accordions** are very useful when you have information that is divided into
    logical sections and you want to expand, and then collapse back, some of the content.
    I find it a great tool to be used in an online resume, for instance, for job history
    sections, or for FAQs. I have used it for years with jQuery UI. Since I discovered
    Foundation, I am using their accordion.'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**手风琴**在您有信息被划分为逻辑部分，并且想要展开某些内容，然后再折叠回原状时非常有用。我发现它是一个在在线简历中使用的极好工具，例如，用于工作历史部分或常见问题解答。我已经使用jQuery
    UI使用它多年了。自从我发现Foundation以来，我就开始使用他们的手风琴。'
- en: It is very easy to set up; you can use either a `<ul>` element or a `<dl>` element
    to create your accordion. We are using `<dl>` in our example.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 它的设置非常简单；您可以使用`<ul>`元素或`<dl>`元素来创建您的手风琴。在我们的示例中，我们使用`<dl>`。
- en: '[PRE7]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Awesome Font awesome
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 极佳的Font awesome
- en: 'In this example, we introduced not only accordions, but also an exciting feature
    that comes from outside Foundation: Font awesome ([www.fontawesome.io](http://www.fontawesome.io)).
    Long gone are the days where you need to have a `.gif`, `.png`, or `.jpg` file
    for every image that you need on your screen, and a separate one for every size
    you need.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们不仅介绍了手风琴，还介绍了一个来自外部Foundation的激动人心的特性：Font awesome ([www.fontawesome.io](http://www.fontawesome.io)).
    那些需要为屏幕上的每一张图片准备`.gif`、`.png`或`.jpg`文件，并且为每种大小都准备一个单独文件的日子已经一去不复返了。
- en: You can now use icons in your code as if they were HTML elements with a certain
    class. Under the hood, they are vector images, so they scale well, and as they
    are HTML elements with a class, you can style them with CSS. There are over 500
    icons to choose from. Font awesome uses the `<i>` tag, deprecated for its original
    use. So, by adding two classes, `fa` and `fa-caret-right`, your `<i>` becomes
    a cool right arrow that helps making the accordion more intuitive.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在可以在代码中使用图标，就像它们是具有特定类的HTML元素一样。在底层，它们是矢量图像，因此可以很好地缩放，并且由于它们是具有类的HTML元素，您可以使用CSS来样式化它们。有超过500个图标可供选择。Font
    awesome使用`<i>`标签，已弃用其原始用途。因此，通过添加两个类，`fa`和`fa-caret-right`，您的`<i>`变成一个酷炫的右箭头，有助于使手风琴更加直观。
- en: 'In the example, we gave it an additional class, `green`, with the matching
    color in our CSS file. If we click on an item to expand the accordion, we want
    it to be a blue down arrow. That we do in JavaScript, as follows:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在示例中，我们给它添加了一个额外的类，`green`，并在我们的CSS文件中匹配颜色。如果我们点击一个项目以展开手风琴，我们希望它变成一个蓝色的向下箭头。我们在JavaScript中这样做，如下所示：
- en: '[PRE8]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Foundation uses a class called `active` to indicate that a part of the accordion
    was expanded. So, we check for this class before changing the shape and color
    of our arrow. Of course, we do not know where we were at beforehand, so we started
    off by changing all arrows to `right` and `green` first.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 基础框架使用一个名为`active`的类来指示手风琴的一部分被展开。因此，我们在改变箭头的形状和颜色之前会检查这个类。当然，我们事先并不知道我们在哪里，所以我们首先将所有箭头都改为`right`和`green`。
- en: Equalizer – the hardest thing to do with two <div>s made easy
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 平衡器 – 使用两个<div>制作最困难的事情变得简单
- en: One of the things I find very hard to do is to make sure that two blocks of
    content that are sitting next to each other always have an equal height. You can,
    of course, give them an equal height in pixels, but what if the content in one
    part grows beyond your specified height, and what if that height is higher than
    the device itself? It would be better not to specify a fixed height and let your
    `<div>`s grow with the content, but then how do you make sure they stay aligned?
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我发现很难做到的一点是确保相邻的两个内容块始终具有相同的高度。当然，您可以以像素为单位给它们设置相同的高度，但如果内容的一部分超过了您指定的长度，或者如果这个长度高于设备本身呢？最好不指定固定的高度，让您的`<div>`随着内容增长，但这样如何确保它们保持对齐？
- en: '**Equalizer** in Foundation will take care of that for you. It may sound like
    the title of another Arnold Schwarzenegger movie but it is equally powerful. It
    uses HTML5 data-attributes to get the job done. Simply add `data-equalizer` to
    the parent container and `data-equalizer-watch` to all the containers you want
    to be of equal height.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '**平衡器**在基础框架中会为你处理这些。这可能听起来像是另一个阿诺德·施瓦辛格电影的标题，但它同样强大。它使用HTML5数据属性来完成工作。只需将`data-equalizer`添加到父容器中，将`data-equalizer-watch`添加到所有希望具有相同高度的容器中。'
- en: Navigation
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导航
- en: There are many more features with Foundation that you want to look at. My intention
    was to highlight the ones that attracted me so much that I decided to use the
    framework. One of them was **orbit**, a great slider for photographs, but that
    one is now deprecated. The Foundation team has recommended an alternative that
    is pretty cool, but either way, these things would be hard to explain in a textbook.
    We will give you the whole enchilada in a bonus chapter, which is available online
    only.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 基础框架还有许多其他功能，您可能想要查看。我的意图是突出那些让我如此着迷以至于我决定使用该框架的功能。其中之一是**orbit**，一个出色的照片滑块，但现在已被弃用。基础团队推荐了一个相当酷的替代方案，但无论如何，这些事情在教科书中很难解释。我们将在附录中提供整个内容，该附录仅在网上提供。
- en: 'We conclude this chapter with the two main navigation components Foundation
    offers: one for an **on-canvas menu bar** and another one for an **off-canvas
    menu**.'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 我们以基础框架提供的两个主要导航组件来结束这一章：一个用于**画布上菜单栏**，另一个用于**画布外菜单**。
- en: Top bar – not just your regular menu bar
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 顶部栏 – 不只是常规菜单栏
- en: Possibly the top shelf of menu bars, the top-bar of Foundation is a very complex
    piece that gives you everything you might need to create an easy to navigate horizontal
    menu bar.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 可能是菜单栏的顶层，基础框架的顶部栏是一个非常复杂的组件，它为您提供了创建易于导航的水平菜单栏所需的一切。
- en: 'Your top shelf is divided in three compartments: the *title* area end, the
    *left*, and the *right* list of menu items. Here is an example. For the sake of
    brevity, we did not include any `href` attributes inside the `<a>` tags:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 您的顶层货架分为三个部分：标题区域，*左侧*和*右侧*菜单项列表。以下是一个示例。为了简洁起见，我们没有在`<a>`标签内包含任何`href`属性：
- en: '[PRE9]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: As you can tell, it is relatively straightforward. As is often the case in classical
    website development, menus are `<ul>` elements, and menu items are `<li>` elements.
    If you want submenus, a class called `dropdown` can be used and another `<ul>`
    underneath. The order of left and right does not matter. This is very nice because
    that means you can use the same HTML for your basic version. Just add static HTML
    files as values of an `href` attribute and do your modern, responsive version
    with your own cool JavaScript magic.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，这相对简单直接。在经典的网站开发中，通常菜单是 `<ul>` 元素，菜单项是 `<li>` 元素。如果您想添加子菜单，可以使用名为 `dropdown`
    的类，并在其下方添加另一个 `<ul>`。左右顺序并不重要。这非常好，因为这意味着您可以为基本版本使用相同的 HTML。只需将静态 HTML 文件作为 `href`
    属性的值添加，然后使用您自己的酷炫 JavaScript 魔法制作现代、响应式的版本。
- en: Foundation created nice styling around top-bar with several shades of dark grey
    (not fifty), which, of course, you can change in your own CSS file.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: Foundation 在顶部栏周围创建了一些漂亮的样式，有几种深灰色（不是五十种），当然，您可以在自己的 CSS 文件中更改。
- en: Adding more magic
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加更多魔法
- en: 'It is magic. By simply adding one `<li>` element to the title area, you can
    have Foundation create an entire alternate menu for you for tiny screens. Just
    check this out. Add this to the example where indicated and see what happens when
    you make the viewing area very small:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是魔法。通过简单地在标题区域添加一个 `<li>` 元素，您就可以让 Foundation 为您创建一个适用于小屏幕的完整替代菜单。只需查看这个示例。按照指示添加到示例中，看看当您将查看区域缩小到非常小的时候会发生什么：
- en: '[PRE10]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: You can leave out the `<span>` element so that only the menu icon will show
    up or leave out the `menu-icon` class. Obviously, you should not leave out both,
    otherwise people will not have access to your magic.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以省略 `<span>` 元素，这样只会显示菜单图标，或者省略 `menu-icon` 类。显然，您不应该同时省略两者，否则人们将无法访问您的魔法。
- en: Yet more magic – off-canvas, the coolest thing
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多魔法——画布，最酷的东西
- en: '*Place your main menu to the left of your phone until you need it.*'
  id: totrans-89
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*将您的主菜单放在手机的左侧，直到您需要它。*'
- en: I find this the *piece de resistance*, excuse my French, of Foundation. The
    first time I used it, I was impressed. The next time I went to Facebook, I thought
    I recognized it in the Facebook app.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为这是 Foundation 的*精华所在*，请原谅我用法语的用法。第一次使用它时，我印象深刻。下次我去 Facebook 时，我觉得我在 Facebook
    应用中认出了它。
- en: The concept is quite simple. In your code, place the content of a menu that
    should be off-limits at first, to the left. The important thing to control is
    the section that it should be to the left side of. When a user clicks on the menu
    button, typically the menu bar icon, a menu will slide in from the left.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 这个概念相当简单。在您的代码中，将最初不应显示的菜单内容放置在左侧。重要的是要控制它应该位于左侧的哪个部分。当用户点击菜单按钮，通常是菜单栏图标时，菜单将从左侧滑入。
- en: 'This way, we can expand from the previous example. Rather than have Foundation
    give us a mobile version of our original menu, we can now specify a mobile first
    menu content. Here is a small example. There will be a larger one in the bonus
    chapter which we''ll be adding online. We also use the visibility classes to make
    sure that the full-width menu does not appear and is replaced by the menu with
    the icon. Once you click on it, the left off-canvas will appear next to your content.
    The height is determined by where you have placed the closing `<div>` tags for
    off-canvas-wrap and inner-wrap:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，我们可以从上一个示例扩展。我们不再让 Foundation 给我们原始菜单的移动版本，现在我们可以指定一个移动优先的菜单内容。这里有一个小示例。在附加章节中会有一个更大的示例，我们将在网上添加。我们还使用可见性类确保全宽菜单不会出现，而是被带有图标的菜单替换。一旦您点击它，左侧的画布将出现在内容旁边。高度由您放置关闭
    `<div>` 标签的位置决定，用于 `off-canvas-wrap` 和 `inner-wrap`：
- en: '[PRE11]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Summary
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we described the Foundation CSS/JavaScript framework. It allows
    us to create a mobile first, responsive design site or application without having
    to write any code for the responsive part. We only have to customize it to our
    needs.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们介绍了 Foundation CSS/JavaScript 框架。它允许我们创建一个移动优先、响应式设计的网站或应用程序，而无需编写任何响应式部分的代码。我们只需根据我们的需求进行定制。
- en: This concludes the part of the book that covers what I would like to call modern
    web development. In the final chapter, we advance to what most of us will seem
    *avant garde*, although by the time this book is printed, it will be very much
    *en vogue*. And it is all built around a JavaScript thing that is not written
    in JavaScript called **node.js**.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书涵盖了我想要称之为现代网络开发的这部分内容到此结束。在最后一章中，我们将前进到对我们大多数人来说似乎是*前卫*的内容，尽管到这本书印刷的时候，它将会非常*流行*。这一切都是围绕一个叫做**node.js**的JavaScript事物构建的，而这个事物并不是用JavaScript编写的。
