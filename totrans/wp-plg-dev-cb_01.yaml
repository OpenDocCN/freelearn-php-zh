- en: Preparing a Local Development Environment
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备本地开发环境
- en: 'We will cover the following topics in this chapter:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在本章中将涵盖以下主题：
- en: Installing a web server on your computer
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在您的计算机上安装Web服务器
- en: Downloading and configuring a local WordPress installation
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载和配置本地WordPress安装
- en: Creating a local Subversion repository
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在本地Subversion仓库中创建
- en: Importing initial files to a local Subversion repository
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将初始文件导入到本地Subversion仓库
- en: Checking out files from a Subversion repository
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从Subversion仓库检出文件
- en: Committing changes to a Subversion repository
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将更改提交到Subversion仓库
- en: Installing a dedicated code/text editor
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装专门的代码/文本编辑器
- en: Introduction
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: Before we start writing our first WordPress plugin, it is important to have
    a good set of tools in place that will allow you to work locally on your computer
    and be more efficient in your work. While it is possible to perform some development
    tasks with the built-in tools that are provided with the operating system, creating
    a solid local development environment will help you develop plugins quickly and
    have full control over your server settings to be able to test different configurations.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始编写第一个WordPress插件之前，拥有一个良好的工具集非常重要，这将使您能够在本地计算机上工作并提高工作效率。虽然使用操作系统提供的内置工具执行一些开发任务是可能的，但创建一个稳固的本地开发环境将帮助您快速开发插件，并能够完全控制服务器设置以测试不同的配置。
- en: This chapter proposes a set of free tools that can easily be installed on your
    computer, regardless of your preferred operating system, to facilitate the development
    of your future WordPress plugins. These tools include a local web server to speed
    up page access and avoid sending files constantly to a remote server, a version
    control system to keep incremental backups of your work, and a code editor to
    enhance your editing capabilities. In addition to installing and learning how
    to use these tools, this chapter also shows how to download and configure a local
    WordPress installation on a local web server.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本章提出了一套免费工具，可以轻松安装在您的计算机上，无论您首选的操作系统是什么，以方便您开发未来的WordPress插件。这些工具包括一个本地Web服务器，以加快页面访问速度并避免不断将文件发送到远程服务器，一个版本控制系统以保留您工作的增量备份，以及一个代码编辑器以增强您的编辑能力。除了安装和学习如何使用这些工具外，本章还展示了如何在本地Web服务器上下载和配置本地WordPress安装。
- en: Installing a web server on your computer
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在您的计算机上安装Web服务器
- en: The first step to configure a local development environment is to install a
    local web server on your computer. This will transform your computer into a system
    capable of displaying web pages and performing all tasks related to rendering
    a WordPress website locally.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 配置本地开发环境的第一个步骤是在您的计算机上安装一个本地Web服务器。这将使您的计算机成为一个能够显示网页并执行与本地渲染WordPress网站相关的所有任务的系统。
- en: 'Having a local web server has many benefits, as follows:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有本地Web服务器有许多好处，如下所示：
- en: It provides a quick response to the frequent page refreshes that are made as
    plugin code is written, tested, and refined, since all information is processed
    locally
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于所有信息都是本地处理的，因此它提供了对频繁页面刷新的快速响应，这些刷新是在编写、测试和改进插件代码时进行的
- en: It removes the need to constantly upload new plugin file versions to a remote
    web server to validate code changes
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它消除了不断将新的插件文件版本上传到远程Web服务器以验证代码更改的需求
- en: It allows development to take place when no internet connection is available
    (for example, when traveling on an airplane)
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它允许在没有互联网连接的情况下进行开发（例如，在乘坐飞机旅行时）
- en: It offers a worry-free programming environment, where you cannot bring down
    a live website with a programming error or an infinite loop
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它提供了一个无忧的编程环境，您不会因为编程错误或无限循环而使实时网站崩溃
- en: There are many free packages available online that contain all of the web server
    components necessary to run a WordPress installation. This recipe shows you how
    to easily install one of these packages.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在线有许多免费包，包含运行WordPress安装所需的所有Web服务器组件。本食谱向您展示了如何轻松安装这些包之一。
- en: How to do it...
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Visit the XAMPP website ([https://www.apachefriends.org/](https://www.apachefriends.org/))
    and download the appropriate XAMPP package for your computer.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问XAMPP网站([https://www.apachefriends.org/](https://www.apachefriends.org/))并下载适用于您的计算机的相应XAMPP包。
- en: XAMPP is available for Windows, macOS, and Linux platforms. The screenshots
    in this recipe were taken from XAMPP version 5.6.30 on Windows 10\. The installation
    steps and exact dialog content might vary based on your choice of platform.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: XAMPP适用于Windows、macOS和Linux平台。本食谱中的截图是在Windows 10上的XAMPP版本5.6.30中拍摄的。安装步骤和确切对话框内容可能因您选择的平台而异。
- en: 'Optional on Windows: Disable the Windows User Access Control (UAC) feature
    to give full permissions to XAMPP to install itself on your system (look up the
    steps to perform this procedure on your favorite search engine).'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Windows上可选：禁用Windows用户访问控制（UAC）功能，以便XAMPP可以完全权限安装到您的系统上（在您喜欢的搜索引擎中查找执行此步骤的步骤）。
- en: Launch the XAMPP installer (`xampp-win32-5.6.30-0-VC11-installer.exe` on the
    Windows platform).
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动XAMPP安装程序（Windows平台上的`xampp-win32-5.6.30-0-VC11-installer.exe`）。
- en: Acknowledge the warning message about **User Access Control** (**UAC**) and
    click on Next to start the installation process.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确认关于**用户访问控制**（**UAC**）的警告信息，然后点击“下一步”以开始安装过程。
- en: 'On the following screen, which lists all of the components that can be installed,
    uncheck the boxes for FileZilla FTP Server, Mercury Mail Server, Tomcat, Perl,
    and Webalizer, then click on Next:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一个屏幕上，列出了所有可以安装的组件，取消选中FileZilla FTP服务器、Mercury邮件服务器、Tomcat、Perl和Webalizer的复选框，然后点击“下一步”：
- en: '![](img/5e708416-ab07-4444-9826-c46ef72dd1b6.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/5e708416-ab07-4444-9826-c46ef72dd1b6.png)'
- en: On the Installation folder screen, leave the default value for the installation
    directory if possible (`c:\xampp`), since some references to this folder will
    be made in this book, then click on Next.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在安装文件夹屏幕上，如果可能，保留默认的安装目录值（`c:\xampp`），因为本书中会引用此文件夹，然后点击“下一步”。
- en: Click on the Next button to proceed with the web server installation.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“下一步”按钮以继续进行Web服务器的安装。
- en: Make sure that the option to start the Control Panel is checked and click on
    Finish once the installation is complete.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保已勾选启动控制面板的选项，并在安装完成后点击“完成”。
- en: Select your preferred language for the XAMPP Control Panel and click on Save
    to launch the application.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您首选的语言用于XAMPP控制面板，然后点击“保存”以启动应用程序。
- en: 'Click the Start buttons for Apache and MySQL to launch these modules. Their
    names will be highlighted in green once they have been successfully started, as
    shown in the following screenshot:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击Apache和MySQL的“启动”按钮以启动这些模块。一旦成功启动，它们的名称将如以下截图所示变为绿色高亮：
- en: '![](img/171eb4c5-79a9-40ed-8ffc-8a1c85584ae0.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/171eb4c5-79a9-40ed-8ffc-8a1c85584ae0.png)'
- en: 'Open a web browser and navigate to the address `http://localhost` to display
    your local web server''s welcome page:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个网页浏览器，导航到地址`http://localhost`以显示您本地Web服务器的欢迎页面：
- en: '![](img/ec4004db-b6e9-449b-b382-3685efba3188.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/ec4004db-b6e9-449b-b382-3685efba3188.png)'
- en: Open the `c:\xampp\apache\conf\httpd.conf` file in a text editor (for example,
    Notepad).
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文本编辑器中打开`c:\xampp\apache\conf\httpd.conf`文件（例如，记事本）。
- en: Search for the `DocumentRoot` configuration option and change its value to a
    different location on the disk to avoid keeping your project files under the original
    installation directory. For example, you could set it to a new directory designed
    to hold your local development installation of WordPress, such as `DocumentRoot
    "C:/WPDev"`.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 搜索`DocumentRoot`配置选项，并将其值更改为磁盘上的不同位置，以避免将项目文件保留在原始安装目录下。例如，您可以将其设置为一个新的目录，用于存放您的本地WordPress开发安装，如`DocumentRoot
    "C:/WPDev"`。
- en: Notice that forward slashes are used in this path. You should be careful if
    you copy and paste a path from a file explorer window.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 注意在这个路径中使用的是正斜杠。如果您从文件资源管理器窗口复制粘贴路径，请务必小心。
- en: Search for the `Directory` option and change it to the same path that was used
    for `DocumentRoot`, that is, `<Directory "C:/WPDev">`.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 搜索`Directory`选项，并将其更改为与`DocumentRoot`相同的路径，即`<Directory "C:/WPDev">`。
- en: Save and close the `httpd.conf` file.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存并关闭`httpd.conf`文件。
- en: Create the directory specified as `DocumentRoot`, if it does not already exist
    on your computer.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果指定的目录`DocumentRoot`在您的计算机上不存在，请创建该目录。
- en: Open XAMPP Control Panel.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开XAMPP控制面板。
- en: Stop and re-start the Apache service for the new configuration to take effect.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 停止并重新启动Apache服务，以便新配置生效。
- en: Trying to access the local web server's welcome page will no longer work after
    having performed steps 14 through 20, since the new directory specified is currently
    empty. This will be corrected in the next recipe.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在执行步骤14至20之后，尝试访问本地Web服务器的欢迎页面将不再工作，因为新指定的目录目前是空的。这将在下一个食谱中纠正。
- en: How it works...
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'The XAMPP package contains all of the components necessary to run a web server
    capable of hosting a WordPress website on your computer. These components include:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: XAMPP软件包包含运行Web服务器所需的所有组件，该服务器可以在您的计算机上托管WordPress网站。这些组件包括：
- en: Apache web server
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Apache Web服务器
- en: PHP interpreter
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PHP解释器
- en: MySQL database server
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MySQL数据库服务器
- en: phpMyAdmin database management interface
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: phpMyAdmin数据库管理界面
- en: The XAMPP package also includes other components, which are not required to
    run a local WordPress development site.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: XAMPP软件包还包括其他组件，这些组件不是运行本地WordPress开发站点所必需的。
- en: Once XAMPP is installed and started, the keyword `localhost` that we type in
    the web browser is recognized by the operating system as a request to communicate
    with the web server on the local computer and the Apache web server displays the
    welcome page from its documentation.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦XAMPP安装并启动，我们在网页浏览器中输入的`localhost`关键字就会被操作系统识别为与本地计算机上的Web服务器进行通信的请求，Apache
    Web服务器会显示其文档中的欢迎页面。
- en: The XAMPP documentation is a set of flat HTML files located in the `c:\xampp\htdocs`
    directory on the Windows platform. This is the web server's default working directory.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: XAMPP文档是一组位于Windows平台`c:\xampp\htdocs`目录中的平面HTML文件。这是Web服务器的默认工作目录。
- en: The last few steps of the recipe instruct the Apache web server to look for
    the local website's content in a new directory. This is a safety precaution to
    be sure that site files are not deleted inadvertently if XAMPP is uninstalled.
    It can also help in managing multiple sites on a single computer.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 该指南的最后几个步骤指示Apache Web服务器在新的目录中查找本地网站的文件内容。这是一个安全预防措施，以确保在XAMPP卸载时不会意外删除网站文件。它还可以帮助在单台计算机上管理多个网站。
- en: There's more...
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更多内容...
- en: 'While XAMPP is a full-featured local web server package and is available on
    the three major operating systems, there are many others available online. Most
    of these packages will run the required web services on the computer directly,
    while more advanced packages, such as **Varying Vagrant Vagrants** (**VVV**),
    will virtualize a Linux-based web server on your computer to create a more accurate
    replica of a final deployment environment optimized for WordPress. Here is a list
    of some of the most popular local web server packages:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然XAMPP是一个功能齐全的本地Web服务器软件包，并且可在三大操作系统上使用，但网上还有许多其他软件包。大多数这些软件包将直接在计算机上运行所需的Web服务，而更高级的软件包，如**Varying
    Vagrant Vagrants**（**VVV**），将在您的计算机上虚拟化基于Linux的Web服务器，以创建一个针对WordPress优化的最终部署环境的更精确副本。以下是其中一些最受欢迎的本地Web服务器软件包列表：
- en: 'For Windows:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Windows系统：
- en: WampServer ([http://www.wampserver.com/en/](http://www.wampserver.com/en/))
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WampServer ([http://www.wampserver.com/en/](http://www.wampserver.com/en/))
- en: EasyPHP ([http://www.easyphp.org/](http://www.easyphp.org/))
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: EasyPHP ([http://www.easyphp.org/](http://www.easyphp.org/))
- en: 'For macOS X:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 对于macOS X：
- en: MAMP ([https://www.mamp.info/en](https://www.mamp.info/en))
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MAMP ([https://www.mamp.info/en](https://www.mamp.info/en))
- en: 'For Windows, Mac, or Linux:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Windows、Mac或Linux系统：
- en: Varying Vagrant Vagrants ([https://varyingvagrantvagrants.org](https://varyingvagrantvagrants.org))
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Varying Vagrant Vagrants ([https://varyingvagrantvagrants.org](https://varyingvagrantvagrants.org))
- en: For a more complete list of web server packages, visit [https://en.wikipedia.org/wiki/List_of_AMP_packages](https://en.wikipedia.org/wiki/List_of_AMP_packages).
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取更完整的Web服务器软件包列表，请访问[https://en.wikipedia.org/wiki/List_of_AMP_packages](https://en.wikipedia.org/wiki/List_of_AMP_packages)。
- en: Creating a remote web development environment
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建远程Web开发环境
- en: If it's not possible for you to set up a local web server to develop WordPress
    plugins, or if you are planning to share the development tasks with one or more
    people, then an alternative to setting up a local web server is to create a remote
    development environment.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您无法设置本地Web服务器来开发WordPress插件，或者您计划与一或多人共享开发任务，那么设置本地Web服务器的替代方案是创建一个远程开发环境。
- en: The easiest way to create such an environment, assuming that you already have
    a web hosting account set up, is to create a sub-domain off your main domain.
    This will allow you to create a standalone test installation for WordPress that
    will still provide safety from affecting a live site, but will not carry the other
    benefits of a local installation.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您已经设置了Web托管账户，创建主域名的子域是创建此类环境的最简单方法。这将允许您创建一个独立的WordPress测试安装，同时仍然可以保护实时站点不受影响，但不会带来本地安装的其他好处。
- en: See also
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参见
- en: The *Downloading and configuring a local WordPress installation* recipe
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*下载和配置本地WordPress安装*指南'
- en: Downloading and configuring a local WordPress installation
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载和配置本地WordPress安装
- en: The next component of our local development environment is to install WordPress
    on your local web server to run a fully working website and have all of its files
    hosted locally.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我们本地开发环境的下一个组件是在您的本地网络服务器上安装 WordPress，以运行一个完全工作的网站，并且所有文件都本地托管。
- en: WordPress has always prided itself with its easy five minutes installation process.
    Installing it on a local web server is even easier and quicker than it would be
    on a live remote server. This recipe covers the creation of a MySQL database to
    store all data related to our new WordPress installation and the actual setup
    process.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: WordPress 一直以其简单的五分钟安装过程而自豪。在本地网络服务器上安装它甚至比在实时远程服务器上安装还要简单快捷。本配方涵盖了创建 MySQL
    数据库以存储与我们的新 WordPress 安装相关的所有数据的步骤，以及实际的设置过程。
- en: Getting ready
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: This recipe assumes that you have a local web server installed on your computer.
    This web server can be a fresh install performed using the previous recipe or
    can be from a previous installation. The steps in the following section are written
    with a focus on new local web servers. If you have created a new account to access
    the MySQL database or changed the root user's password, some of the steps will
    change slightly. The location of the phpMyAdmin tool might also be different if
    you are using a different web server than XAMPP. You should refer to your web
    server's documentation to find out what that address is.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 此配方假设您已经在计算机上安装了本地网络服务器。这个网络服务器可以是使用之前的配方执行的新安装，也可以是从之前的安装中来的。以下章节中的步骤是针对新本地网络服务器编写的。如果您为访问
    MySQL 数据库创建了新账户或更改了 root 用户的密码，一些步骤会有所变化。如果您使用的是不同于 XAMPP 的其他网络服务器，phpMyAdmin
    工具的位置也可能不同。您应该参考您的网络服务器文档以找出该地址。
- en: How to do it...
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: In the web browser, navigate to the address `http://localhost/phpmyadmin/` to
    access your web server's database administration tool.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在网络浏览器中，导航到地址 `http://localhost/phpmyadmin/` 以访问您的网络服务器数据库管理工具。
- en: Click on Databases tab in phpMyAdmin.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 phpMyAdmin 中点击“数据库”标签页。
- en: 'Type the name of the new database to be created in the empty field following
    to the words Create database. In this case, we will use the name `wordpressdev`:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“创建数据库”一词后面的空白字段中输入要创建的新数据库的名称。在本例中，我们将使用名称 `wordpressdev`：
- en: '![](img/0b20e030-7c28-4b60-acbb-bec3b044c3ec.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/0b20e030-7c28-4b60-acbb-bec3b044c3ec.png)'
- en: Click on the Create button to complete the database creation process.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“创建”按钮以完成数据库创建过程。
- en: Download the latest WordPress installation package from the official WordPress
    website ([https://wordpress.org](https://wordpress.org)). The download link can
    be found on the very first page of the website and the download package will work
    on any web server, local, or remote.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从官方 WordPress 网站下载最新的 WordPress 安装包（[https://wordpress.org](https://wordpress.org)）。下载链接可以在网站的首页找到，下载包可以在任何网络服务器上运行，无论是本地还是远程。
- en: The following instructions have been tested against WordPress version 4.8\.
    While the installation process does not usually change much between versions,
    there may be slight differences in these steps on newer versions.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 以下说明已在 WordPress 版本 4.8 上进行了测试。虽然安装过程在不同版本之间通常变化不大，但在较新版本中，这些步骤可能会有细微差异。
- en: Extract the WordPress archive file contents using your favorite file archiver
    utility or your operating system's built-in capabilities.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用您喜欢的文件归档实用程序或操作系统的内置功能提取 WordPress 归档文件的内容。
- en: Copy the contents of the resulting `wordpress` folder to your local web server's
    web content directory (`c:\WPDev`, if you followed the previous recipe). You should
    not copy the `wordpress` folder itself unless you want the address of your WordPress
    website to be `http://localhost/wordpress`.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将生成的 `wordpress` 文件夹的内容复制到您的本地网络服务器的网络内容目录（如果您遵循了之前的配方，则为 `c:\WPDev`）。除非您想使您的
    WordPress 网站地址为 `http://localhost/wordpress`，否则您不应该复制 `wordpress` 文件夹本身。
- en: Direct your web browser to `http://localhost` to start the WordPress installation
    process.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将您的网络浏览器指向 `http://localhost` 以启动 WordPress 安装过程。
- en: Select your preferred language and click on Continue.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您首选的语言并点击继续。
- en: On the next page, click on the Let's Go button to start your development site's
    configuration.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一页，点击“让我们开始”按钮以启动您开发网站的配置。
- en: Update the Database Name field to reflect the name of our newly-created database
    (`wordpressdev`).
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新数据库名称字段以反映我们新创建的数据库的名称（`wordpressdev`）。
- en: Set the MySQL User Name to `root`.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 MySQL 用户名设置为 `root`。
- en: Delete all the characters from MySQL Password to leave it empty, since local
    MySQL server root accounts are typically configured without any password.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将MySQL密码中的所有字符删除，使其为空，因为本地MySQL服务器root账户通常配置为没有任何密码。
- en: Leave the Database Host field with its default value (`localhost`).
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保持数据库主机字段使用其默认值（`localhost`）。
- en: 'Change the Table Prefix field from its default value to `wpdev_`:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将表前缀字段从其默认值更改为`wpdev_`：
- en: '![](img/9343216c-ad1b-4435-972b-e76ef7564c76.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/9343216c-ad1b-4435-972b-e76ef7564c76.png)'
- en: Click on the Submit button to validate the information entered. If any parameters
    are not entered correctly, or if the WordPress installation process cannot correctly
    access your database server, it will display an error page and give you an opportunity
    to make corrections.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“提交”按钮以验证输入的信息。如果任何参数输入不正确，或者WordPress安装过程无法正确访问您的数据库服务器，它将显示错误页面，并给您机会进行更正。
- en: Click on the Run the install button for WordPress to create the required table
    structure in the designated MySQL database.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“运行安装”按钮以创建在指定MySQL数据库中的所需表结构。
- en: Specify a Site Title (for example, `Development Site`).
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 指定站点标题（例如，`开发站点`）。
- en: Set Username for the admin user. For increased security, it's always best to
    choose a username that people would not be able to easily guess. Obvious names
    such as admin or administrator should be avoided.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为管理员用户设置用户名。为了提高安全性，最好选择一个人们难以轻易猜到的用户名。应避免使用明显的名称，如admin或administrator。
- en: Optionally, change the randomly generated password with a password of your own
    choice. If WordPress determines that your new password is weak, you will need
    to check the additional checkbox that appears to confirm that you want to use
    a weak password.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可选地，使用您自己的选择更改随机生成的密码。如果WordPress确定您的新密码较弱，您需要勾选出现的附加复选框以确认您想要使用弱密码。
- en: Enter your email address in the appropriate field (although no email will actually
    be sent on most local development installations).
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在相应的字段中输入您的电子邮件地址（尽管在大多数本地开发安装中实际上不会发送电子邮件）。
- en: If you are configuring a live external development server, check the Discourage
    search engines from indexing this site option, since we do not want this development
    site to appear anywhere.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您正在配置实时外部开发服务器，请勾选“阻止搜索引擎索引此站点”选项，因为我们不希望此开发站点出现在任何地方。
- en: Click on Install WordPress to complete the installation and you will be automatically
    logged in to the site's WordPress Dashboard.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“安装WordPress”以完成安装，您将自动登录到站点的WordPress仪表板。
- en: 'Click on the Development Site link in the Dashboard admin bar to see your new
    site:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在仪表板管理员栏中点击“开发站点”链接，以查看您的新站点：
- en: '![](img/fcb9d135-cdf3-4aaa-be1b-44ef220d1672.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/fcb9d135-cdf3-4aaa-be1b-44ef220d1672.png)'
- en: How it works...
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In the first few steps, the phpMyAdmin interface is used to create a database
    on the local MySQL server. This web-based database management tool comes bundled
    with XAMPP and most other web servers. The `http://localhost/phpmyadmin` address
    will always take you to the database administration tool, even if you relocate
    your web server's document root directory as documented in the previous recipe.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在前几个步骤中，使用phpMyAdmin界面在本地MySQL服务器上创建数据库。这个基于Web的数据库管理工具与XAMPP和其他大多数Web服务器捆绑在一起。`http://localhost/phpmyadmin`地址将始终带您到数据库管理工具，即使您已根据前一个食谱中的说明移动了Web服务器的文档根目录。
- en: Once a database is created and the WordPress files have been copied to the correct
    location, pointing your browser to the local web server gets it to search through
    the document root directory to find HTML files to send back to the browser or
    PHP files to execute. In the case of WordPress, the web server finds the `index.php`
    file and executes it using its PHP interpreter. As the WordPress code is executed,
    it checks if a configuration file is present and launches the installation process
    when it does not find one. The WordPress code does not see any difference between
    the local web server that we are running it on and a remote live web server that
    would be accessible anywhere online.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦创建数据库并将WordPress文件复制到正确的位置，将浏览器指向本地Web服务器，它将搜索文档根目录以查找要发送回浏览器的HTML文件或要执行的PHP文件。在WordPress的情况下，Web服务器找到`index.php`文件，并使用其PHP解释器执行它。当WordPress代码执行时，它会检查是否存在配置文件，如果找不到，则会启动安装过程。WordPress代码在我们运行的本地Web服务器和任何在线可访问的远程实时Web服务器之间看不到任何区别。
- en: While we specified an email address for the administrator during the installation,
    many local web servers are not configured to send out email messages so we will
    never receive any email communication in these cases. It is preferable to use
    a remote server when developing and testing email functionality in a plugin.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们在安装过程中指定了管理员的电子邮件地址，但许多本地 Web 服务器未配置为发送电子邮件消息，因此在这些情况下我们永远不会收到任何电子邮件通信。在插件开发和测试电子邮件功能时，使用远程服务器更为可取。
- en: Once this recipe has been completed, you will have a functional WordPress installation
    in place.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦完成这个菜谱，你将拥有一个功能齐全的 WordPress 安装。
- en: Creating a local Subversion repository
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建本地 Subversion 仓库
- en: Version control is an important part of any code development project, to keep
    track of a project's history, to have full and organized backups, and to be able
    to easily roll back changes to get back to a known working state. Version control
    is also the best and most efficient way to share code and other files when developing
    a project in a team environment. In addition to being a great version control
    system that is easy to use and configure, Subversion (often referred to as SVN)
    is also the technology that manages all submissions on the official WordPress
    plugin directory. Therefore, by setting up and using a local Subversion repository
    during your initial plugin development, you will immediately be ready to share
    your creations with the community.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 版本控制是任何代码开发项目的重要组成部分，用于跟踪项目的历史，拥有完整和有序的备份，以及能够轻松回滚更改以恢复到已知的工作状态。版本控制也是团队环境中开发项目时共享代码和其他文件的最佳和最高效的方式。除了是一个易于使用和配置的出色版本控制系统外，Subversion（通常称为
    SVN）还是管理官方 WordPress 插件目录上所有提交的技术。因此，在初始插件开发过程中设置并使用本地 Subversion 仓库，你将立即准备好与社区分享你的创作。
- en: How to do it...
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Visit the **TortoiseSVN** website ([https://tortoisesvn.net/downloads.html](https://tortoisesvn.net/downloads.html))
    and download the free Subversion client for your version of Windows (32-bit or
    64-bit).
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问 **TortoiseSVN** 网站 ([https://tortoisesvn.net/downloads.html](https://tortoisesvn.net/downloads.html))
    并下载适用于你 Windows 版本（32 位或 64 位）的免费 Subversion 客户端。
- en: While this recipe focuses on the creation of a local repository on the Windows
    platform, equivalent tools for other platforms are discussed after the recipe
    steps, in the *There's more...* section.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这个菜谱主要关注在 Windows 平台上创建本地仓库，但在菜谱步骤之后，在 *还有更多...* 部分讨论了其他平台的等效工具。
- en: Launch the TortoiseSVN installation program and install it using all the default
    installation options.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动 TortoiseSVN 安装程序，并使用所有默认安装选项进行安装。
- en: Create a new folder on your hard drive that will host the local Subversion repository
    (for example, `c:\WPSVN`).
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的硬盘上创建一个新的文件夹，该文件夹将托管本地 Subversion 仓库（例如，`c:\WPSVN`）。
- en: 'Right-click on the new folder and select the TortoiseSVN | Create repository
    here menu item, then click on Start Repobrowser. TortoiseSVN will create the required
    file structure in the target directory and display the contents of the repository,
    which is currently empty:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击新文件夹，选择 TortoiseSVN | 在此处创建仓库菜单项，然后点击启动 Repobrowser。TortoiseSVN 将在目标目录中创建所需的文件结构，并显示仓库的内容，目前为空：
- en: '![](img/a03a6d34-9dc9-4383-8989-2e9e7f977527.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/a03a6d34-9dc9-4383-8989-2e9e7f977527.png)'
- en: How it works...
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: Subversion is a free, open source version control system that is designed to
    keep file revisions organized and backed up over the course of a project's development,
    as well as provide access to older versions of all files at any time. If you have
    ever found yourself copying a directory on your computer and giving each copy
    sequentially numbered names or adding dates to their names, then you will recognize
    that version control is really just a more organized and efficient method of achieving
    the same goal of keeping backups of known working versions of code files and being
    able to access any older version of a file.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: Subversion 是一个免费的开源版本控制系统，旨在在项目开发过程中保持文件修订的有序和备份，并提供在任何时候访问所有文件的旧版本。如果你曾经发现自己复制电脑上的目录，并为每个副本赋予连续编号的名称或添加日期到它们的名称，那么你会认识到版本控制实际上只是实现相同目标的更组织和高效的方法，即保持已知工作版本的代码文件的备份，并能够访问文件的任何旧版本。
- en: While the default Subversion interface is a set of command-line utilities, TortoiseSVN
    and many other client applications provide graphical tools to create, access,
    and manage local and remote repositories.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然默认的Subversion界面是一套命令行工具，但TortoiseSVN和其他许多客户端应用程序提供了图形工具来创建、访问和管理本地和远程仓库。
- en: In addition to familiarizing yourself with this system for later use on [wordpress.org](http://wordpress.org),
    using a local Subversion repository will ensure that you will always have older
    versions of your plugins easily accessible in case a code change that you perform
    breaks your work and you cannot figure out how to get back to a working state.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 除了熟悉这个系统以便以后在[wordpress.org](http://wordpress.org)上使用外，使用本地Subversion仓库将确保您始终可以轻松访问旧版本的插件，以防您执行的代码更改破坏了您的工作，并且您无法找出如何恢复到工作状态。
- en: There's more...
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更多...
- en: While there are many Subversion clients available online to interact with a
    repository, not all of them include the necessary administration tools to easily
    create a repository, as shown in this recipe. You should look for these administration
    capabilities when searching for a Subversion client for non-Windows platforms.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然网上有许多Subversion客户端可以与仓库交互，但并非所有客户端都包含创建仓库所需的必要管理工具，正如本指南中所示。您在寻找非Windows平台的Subversion客户端时，应寻找这些管理功能。
- en: On macOS X, versions ([http://versionsapp.com/](http://versionsapp.com/)) and
    Cornerstone ([https://www.zennaware.com/cornerstone](https://www.zennaware.com/cornerstone))
    offer similar capabilities but are paid applications.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在macOS X上，versions（[http://versionsapp.com/](http://versionsapp.com/））和Cornerstone（[https://www.zennaware.com/cornerstone](https://www.zennaware.com/cornerstone)）提供类似的功能，但都是付费应用程序。
- en: On Linux, PagaVCS is a free TortoiseSVN clone ([https://code.google.com/p/pagavcs/](https://code.google.com/p/pagavcs/))
    while SmartSVN ([http://smartsvn.com](http://smartsvn.com)) is a paid SVN client.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux上，PagaVCS是免费的TortoiseSVN克隆版（[https://code.google.com/p/pagavcs/](https://code.google.com/p/pagavcs/）），而SmartSVN（[http://smartsvn.com](http://smartsvn.com)）是一个付费的SVN客户端。
- en: Manual repository creation
  id: totrans-126
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 手动创建仓库
- en: If your Subversion client does not offer the ability to create a local repository,
    you can download the Subversion command-line tools from the official Subversion
    website ([https://subversion.apache.org/packages.html](https://subversion.apache.org/packages.html))
    and create a repository manually following instructions found in the online Subversion
    reference manual ([http://svnbook.red-bean.com/](http://svnbook.red-bean.com/)).
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的Subversion客户端不提供创建本地仓库的功能，您可以从官方Subversion网站（[https://subversion.apache.org/packages.html](https://subversion.apache.org/packages.html)）下载Subversion命令行工具，并按照在线Subversion参考手册（[http://svnbook.red-bean.com/](http://svnbook.red-bean.com/））中的说明手动创建仓库。
- en: Other version control systems
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 其他版本控制系统
- en: While Subversion is easy to learn and is the system that is used by WordPress
    on its official plugin repository, other version control systems, such as Git
    ([https://git-scm.com/](https://git-scm.com/)) and Mercurial ([https://mercurial-scm.org/](https://mercurial-scm.org/)),
    are gaining traction in the open source development community and could also be
    considered to manage your plugin code.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然Subversion易于学习，并且是WordPress在其官方插件仓库中使用的系统，但其他版本控制系统，如Git（[https://git-scm.com/](https://git-scm.com/））和Mercurial（[https://mercurial-scm.org/](https://mercurial-scm.org/）），在开源开发社区中越来越受欢迎，也可以考虑用于管理您的插件代码。
- en: See also
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参见
- en: The *Importing initial files to a local Subversion repository* recipe
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*将初始文件导入本地Subversion仓库*指南'
- en: Importing initial files to a local Subversion repository
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将初始文件导入本地Subversion仓库
- en: Once you have a local repository in place, this recipe describes the steps required
    to add files and start tracking their revisions over time. To have the flexibility
    to create multiple plugins, as discussed throughout this cookbook, without having
    to worry about adding each of them to the repository individually, we will add
    the entire WordPress plugin directory to your local repository.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您已经设置好本地仓库，本指南将描述添加文件并开始跟踪其随时间变化的修订版本的步骤。为了在无需担心逐个将它们添加到仓库的情况下，灵活地创建多个插件，正如本指南中讨论的那样，我们将把整个WordPress插件目录添加到您的本地仓库中。
- en: Getting ready
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: You should have already installed a Subversion client on your computer and created
    a local repository, as described in the *Creating a local Subversion repository*
    recipe. These steps will be slightly different based on the Subversion client
    that you have selected and your operating system.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该已经在您的计算机上安装了 Subversion 客户端并创建了本地仓库，如“创建本地 Subversion 仓库”食谱中所述。这些步骤将根据您选择的
    Subversion 客户端和操作系统略有不同。
- en: How to do it...
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Navigate to the `wp-content/plugins` directory of your local WordPress installation
    (for example, `c:\WPDev\wp-content\plugins`, if you followed the previous recipe)
    with the file explorer.
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用文件资源管理器导航到您的本地 WordPress 安装的 `wp-content/plugins` 目录（例如，如果遵循了前面的食谱，则为 `c:\WPDev\wp-content\plugins`）。
- en: Right-click on the folder and select the TortoiseSVN | Import menu item.
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击文件夹并选择 TortoiseSVN | 导入菜单项。
- en: Enter the file location of your local Subversion repository in the URL of repository
    field (for example, `file:///c:/WPSVN`), if it is not already specified.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在仓库 URL 字段中输入您的本地 Subversion 仓库的文件位置（例如，`file:///c:/WPSVN`），如果尚未指定。
- en: 'Write a message in the Import message field that gives an overview of the files
    that are being imported into the repository:'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在导入消息字段中写一条消息，概述将要导入到仓库中的文件：
- en: '![](img/e17010c7-b90b-4e71-ad86-ff84fa7aadbb.png)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e17010c7-b90b-4e71-ad86-ff84fa7aadbb.png)'
- en: Click on the OK button to complete the import process.
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“确定”按钮以完成导入过程。
- en: Once the import operation has started, TortoiseSVN sends all the selected files
    to the repository, displaying each of their names in the process. At the end of
    the import operation, it also displays the revision number that it assigned to
    this first set of files.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦开始导入操作，TortoiseSVN 将所有选定的文件发送到仓库，并在过程中显示每个文件的名称。导入操作结束时，它还会显示分配给这组第一个文件的修订号。
- en: How it works...
  id: totrans-144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: Using the Import Subversion feature copies all the selected files to the repository.
    In addition to storing the files themselves, Subversion identifies each file with
    a revision number and an import message. The revision number is generated by Subversion
    and incremented every time a group of files is added. It is especially useful
    when searching through a file's history.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 使用导入 Subversion 功能将所有选定的文件复制到仓库中。除了存储文件本身外，Subversion 还使用修订号和导入消息标识每个文件。修订号由
    Subversion 生成，并在添加一组文件时递增。当搜索文件历史时特别有用。
- en: The import message is specified by the user and is actually optional. That being
    said, it is important to set meaningful import messages when adding files to a
    repository, as it will make it easier for you to identify what these files are,
    the state that they are in, and the reason they were added to the repository when
    performing future searches.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 导入消息由用户指定，实际上是可选的。尽管如此，当向仓库添加文件时设置有意义的导入消息很重要，因为它将使您在未来的搜索中更容易识别这些文件，了解它们的状态以及它们被添加到仓库的原因。
- en: While these steps have led to a successful import, you may be wondering why
    nothing changed in the plugin directory. The reason is that the import process
    only makes copies of the selected files to the Subversion repository. An additional
    step, called the checkout process, needs to take place to start keeping track
    of changes and file history.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这些步骤已经导致成功导入，您可能想知道为什么插件目录中没有发生变化。原因是导入过程仅将选定的文件复制到 Subversion 仓库中。还需要一个额外的步骤，称为检出过程，以开始跟踪更改和文件历史。
- en: See also
  id: totrans-148
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 相关内容
- en: The *Checking out files from a Subversion repository* recipe
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: “从 Subversion 仓库检出文件”食谱
- en: Checking out files from a Subversion repository
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从 Subversion 仓库检出文件
- en: After performing an initial import of the files to a Subversion repository,
    the files need to be checked out to really start working in a version control
    environment. This recipe explains how to check out files from your local repository
    and what the resulting file structure changes will be.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在将文件初步导入到 Subversion 仓库之后，需要将这些文件检出才能真正开始在版本控制环境中工作。本食谱解释了如何从您的本地仓库检出文件以及结果文件结构将发生哪些变化。
- en: Getting ready
  id: totrans-152
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: You should have already installed a Subversion client, created a local repository,
    and imported files before following this recipe. These steps will be slightly
    different based on the Subversion client that you have selected and the operating
    system you are using.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在遵循此食谱之前，您应该已经安装了 Subversion 客户端，创建了本地仓库，并导入了文件。这些步骤将根据您选择的 Subversion 客户端和所使用的操作系统略有不同。
- en: How to do it...
  id: totrans-154
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Navigate to the WordPress plugin directory of your local installation in the
    file explorer if you are not already there.
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Right-click in the white space of the directory window and select the SVN Checkout...
    menu item.
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the file location of your local Subversion repository in the URL of repository
    field (for example, `file:///c:/WPSVN`), if it is not already specified.
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set Checkout directory to the plugin folder of your local WordPress installation
    (for example, `C:\WPDev\wp-content\plugins`).
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: By default, the TortoiseSVN client adds the word `WPSVN` at the end of the path
    used when performing checkouts. Be sure to remove that last part of the path so
    that all files that are checked out go to the correct location.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
- en: Click Yes on the dialog asking if files should be checked in a folder that is
    not empty. At this time, TortoiseSVN will retrieve all the files that were added
    to the repository and copy them locally.
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the operation is complete, look back at the file listing in the `plugins`
    directory to see that it has changed from its previous state:'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/ec6c9a9c-4fa7-47ed-a123-7b0fb3365cf1.png)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
- en: How it works...
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Performing a checkout operation takes copies of all files from the repository
    and places them in the target directory. It also creates a `.svn` directory at
    the top level of the file hierarchy to store files that will support the version
    control functionality.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
- en: 'By default, most operating systems do not show folders that have a period at
    the beginning of their name, since this usually identifies hidden files and directories.
    To display hidden folders on the Windows 10 platform, carry out the following
    steps:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
- en: Open Windows Explorer.
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the View tab and check the option labeled Hidden Items.
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The `.svn` directory contains information on the address of the repository that
    is associated with the files in the current folder. It also contains an original
    version of each file that was checked out. These original files are used for Subversion
    to determine when changes have been made to each file relative to their state
    when they were checked out or updated. While it might seem a bit redundant to
    have an original copy of all the files in the `.svn` folders when our repository
    is locally hosted, this functionality allows Subversion to identify file changes
    when working on a remote repository, such as the official WordPress plugin server,
    even when your computer is not connected to the internet.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  id: totrans-169
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As you work with Subversion and TortoiseSVN, files that you create, modify,
    and delete will go through a number of different states. The following section
    explains what each of them represents.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
- en: Subversion file statuses
  id: totrans-171
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The green check mark indicator shown over each file icon, after performing
    this recipe, shows us that our files and directories have not been modified since
    they were last checked out or updated. These indicators will change over time
    as we start modifying existing files and creating new ones. The following is a
    list of the most common statuses that files will have as you work on a project,
    along with their associated TortoiseSVN icons:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
- en: '**Normal** (green check mark): The file or directory is in a normal state and
    has not changed since it was last checked out or updated.'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Modified** (red exclamation mark): The file or directory has been modified
    since it was last checked out or updated.'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Non-versioned** (blue question mark): The file or directory is not under
    version control.'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Added** (blue plus sign): The file or directory is new and has been marked
    to be committed to the repository in the next commit operation.'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Deleted** (red x icon): The directory has been deleted and will be removed
    from the repository in the next commit operation.'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Ignored** (grey do not pass symbol): This file or directory will never be
    sent to the repository and Subversion should stop checking for changes. This state
    is useful for keeping private files, such as personal documentation or to-do lists,
    in the same directory as the plugin but without uploading them to the repository
    and tracking their history over time.'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Conflicted** (yellow exclamation mark): This icon appears in situations of
    conflict, typically when more than one person works on the same repository and
    multiple users have made changes to the same file. While the Subversion client
    will normally try to merge these changes to create a single file, a conflicted
    state indicates that the system was not able to merge these changes automatically.
    Conflicted files need to be manually merged or the user needs to indicate if the
    file has priority over the version that is currently stored in the repository.'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: See also
  id: totrans-180
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The *Committing changes to a Subversion repository* recipe
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Committing changes to a Subversion repository
  id: totrans-182
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: During the course of a project, plugin files will typically be created, modified,
    or deleted. These changes should be transmitted regularly to the Subversion repository
    to have proper backups of all the files in a project. A good practice is to commit
    changes at least once a day, with more frequent commit operations taking place
    when specific milestones are reached in the implementation of a plugin's features.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
- en: This recipe indicates how to manage file creation, modification, and deletion
    operations to keep everything organized and mirrored in the Subversion repository.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  id: totrans-185
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You should have already installed a Subversion client, created a local repository,
    and imported and checked out files before performing the steps in this recipe.
    These steps will be slightly different based on the Subversion client that you
    have selected and the operating system you are using.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  id: totrans-187
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Navigate to the WordPress plugin directory of your local installation in the
    file explorer if you are not already there.
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Open the `hello.php` file in a text editor.
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Edit the plugin name on line 7 to change it from `Plugin Name: Hello Dolly`
    to `Plugin Name: Goodbye Dolly`.'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Save and close the file. You should now notice that the modified file is identified
    by a red exclamation mark icon in the file explorer, indicating that it has been
    modified.
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a new folder in the `plugins` directory named `chapter1`.
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Right-click on the new folder and select the TortoiseSVN | Add... menu item
    to bring up the Add dialog.
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the OK button to queue the file to be added to the repository when
    changes are next committed. You will see a blue plus sign appear over the folder
    name to indicate that it will be added to the repository on the next code commit.
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Navigate to the `chapter1` directory and create a new text document named `example.txt`.
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Navigate back to the `plugins` directory.
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Right-click on the `index.php` file and select the TortoiseSVN | Delete menu
    item. The selected file is immediately deleted and disappears from the file explorer.
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Right-click in an empty part of the `plugins` directory and select the SVN
    Commit... menu item. This last step will display the Commit dialog, with a top
    section to write a message detailing the changes that are being committed, and
    a bottom section containing a file listing. Notice that all files but one have
    check marks next to them, since they have either been recognized as being changed
    by the Subversion client or have been added or deleted through the TortoiseSVN
    interface. The file that does not have a check mark next to it is the text file
    that was created but not tagged to be included in the next commit operation using
    the TortoiseSVN contextual menu:'
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/6f3b8ee9-2751-43cd-9ccf-bb343d319558.png)'
  id: totrans-199
  prefs: []
  type: TYPE_IMG
- en: Type a message in the appropriate field indicating the reason for the operation.
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Right-click on the `chapter1/example.txt` file and select the Add menu item
    to add it to the operation.
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the OK button to send all the changes to the Subversion repository.
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  id: totrans-203
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Using the local data stored in the `.svn` folder, the Subversion client is able
    to analyze the directory contents and identify all the files that are new, have
    been modified, or are missing since the last checkout or update operation was
    performed, and then generate a list of these changes.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
- en: When the commit operation is performed, new files are added to the repository,
    modified files are uploaded and stored next to their previous versions, while
    deleted files are tagged as no longer being part of the current project version.
    While some of these behaviors might seem strange, it's by preserving previous
    versions of files and even keeping files that are no longer part of a project
    that Subversion is able to let us navigate through a project's entire history.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
- en: While it is preferable to use the TortoiseSVN menu to mark files and directories
    for addition and to delete items that are no longer needed, it is also possible
    to perform these operations when the commit is about to take place, as we saw
    in the recipe steps.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  id: totrans-207
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before files are committed to the repository, many programmers and developers
    want to see what changes were made to the modified files, especially in an environment
    that promotes peer reviews before committing code changes.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
- en: Viewing the differences in modified files
  id: totrans-209
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: By right-clicking on any modified file in the Commit dialog and selecting the
    Diff menu item, the TortoiseSVN client will display its built-in file difference
    viewer tool, highlighting the parts that are different between the last version
    of the file in the repository and the current version of this file. This allows
    users to see what changed at a glance and be sure that no code was modified inadvertently.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
- en: Updating files to latest repository version
  id: totrans-211
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you are the only person committing files to a repository and you are working
    on a single computer, then you will never need to use the SVN Update menu item.
    This function is designed to compare your local files with the repository and
    check if new files or new revisions are available in the repository that are not
    present locally. It will then apply all the necessary changes to the local versions
    of these files. Remember to use the SVN Update option in TortoiseSVN regularly
    if you are working in a team environment or are developing a project across multiple
    computers.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
- en: Reverting uncommitted file changes
  id: totrans-213
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Until a file is committed to a repository, it's possible to reverse all the
    changes made to it since the last checkout, update, or committal by using the
    Revert item in the TortoiseSVN menu. This can be useful if you made changes to
    the code that broke its functionality and want to get back to a known good state.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
- en: Viewing file history
  id: totrans-215
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As multiple versions of files are committed to a repository over time, Subversion
    keeps track of all the versions of these files along with the messages that were
    associated with each commit operation. The Show Log tool, accessible from the
    TortoiseSVN menu, allows you to see a full history of changes made to one more
    files, use the difference viewer to see changes between previous and current versions
    of each file, and easily restore a specific revision of these files.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
- en: Installing a dedicated code editor/text editor
  id: totrans-217
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Most operating systems provide a built-in text editor. While it is possible
    to create WordPress plugins using such a simple tool, it is highly recommended
    to install a dedicated code editor on your computer to simplify your plugin development
    work.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  id: totrans-219
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Of course, not all code editors are equal. Here are some of the features that
    you should look for when selecting a code editing application:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
- en: PHP syntax highlighting
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Completion of PHP function names
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ability to search in multiple files simultaneously
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ability to highlight all instances of search keyword(s) or selected text
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Line numbering
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ability to resize the editor text or specify a replacement font
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Possibility of opening multiple files simultaneously
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following editors contain most or all of these key features. Most are free
    tools, but some are paid applications:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
- en: 'On the Windows platform:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
- en: Programmer's Notepad ([http://www.pnotepad.org](http://www.pnotepad.org))
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Notepad++ ([https://notepad-plus-plus.org/](https://notepad-plus-plus.org/))
  id: totrans-231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Visual Studio Code ([https://code.visualstudio.com](https://code.visualstudio.com))
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'On the Mac platform:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
- en: TextMate ([https://macromates.com](https://macromates.com))
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: TextWrangler ([https://www.barebones.com/products/TextWrangler](https://www.barebones.com/products/TextWrangler))
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'On the Linux platform:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
- en: Screem ([http://www.screem.org/](http://www.screem.org/))
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Cross-platform:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
- en: Sublime Text ([https://www.sublimetext.com](https://www.sublimetext.com))
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This recipe explains how to install a dedicated code editor and shows basic
    editor operations. It provides detailed steps using Programmer's Notepad for Windows.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  id: totrans-241
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Download the installation package for one of the text editors listed previously.
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Run the installation program for the editor and select the default settings.
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Launch the text editor.
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Open the `hello.php` file from the `plugin` directory of your local WordPress
    installation. You will see that different parts of the code are displayed in different
    colors based on the type of code.
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Double-click on a word to select it. You will see any other instance of that
    same word highlighted across the file contents:'
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/1bdee61d-aa43-4819-ac4b-fec076814b39.png)'
  id: totrans-247
  prefs: []
  type: TYPE_IMG
- en: Select the View | Line Numbers menu item (or similarly named item based on your
    selected text editor) to display line numbers in the editor.
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  id: totrans-249
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Code editors have built-in parsers that enable them to identify the parts of
    the code that are comments, PHP language functions, text strings, and a variety
    of other elements. Having these elements colored on the screen makes it much easier
    to read through code and to see that a function's name is not spelled correctly,
    or to quickly identify comments.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
- en: Another functionality that is crucial when developing plugins for WordPress
    is the ability to see line numbers in the editor. This function comes in handy,
    especially when PHP code errors come up, since the filename and line of code that
    was being processed at the time of the error are normally displayed. In most code
    editors, the developer can either scroll to the specific line or enter the line
    number in a quick Go To dialog box to jump to that line right away.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
