- en: The Foundation E-Commerce Theme
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基础电子商务主题
- en: In this chapter, we'll build an e-commerce theme or an online shop theme. We'll
    not have full functionality to buy products, but just the theme, and we'll look
    at how to format it so that the posts look more like product pages.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将构建一个电子商务主题或在线商店主题。我们不会有购买产品的完整功能，只是主题，我们将看看如何格式化它，使帖子看起来更像产品页面。
- en: The following screenshot is of the home page we'll create. We have a header
    (MyShop), a spot for a custom image (this is going to be available through the
    theme customizer, so you can upload that), our menu over the top-right corner
    of the page, a showcase widget (which is the big rectangular space right below
    the header, MyShop with a heading—Discount Clothing, some texts, and Read more),
    and we'll see where we can actually edit that content. If we scroll down the page
    (below the showcase widget rectangle) we have the main post loop, but we have
    it formatted so that it looks more like an e-commerce site.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图是我们将要创建的首页。我们有一个页眉（MyShop），一个自定义图片的位置（这将通过主题自定义器提供，因此您可以上传它），页面的右上角是我们的菜单，一个展示小部件（这是位于页眉下方的大矩形空间，MyShop带有标题——折扣服装，一些文本和阅读更多），我们还可以看到我们实际上可以编辑哪些内容。如果我们滚动页面（在展示小部件矩形下方），我们有主要帖子循环，但我们将其格式化为看起来更像电子商务网站。
- en: 'Lastly, we have some side widgets which is to right-hand side of the page:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们在页面的右侧有一些侧边小部件：
- en: '![](img/2fa74405-e1ec-4045-b6fc-14ac8bebb317.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/2fa74405-e1ec-4045-b6fc-14ac8bebb317.png)'
- en: 'Now, if we click on Details for one of the products, for example, Black Shirt,
    it''s going to take us to the product page (as shown in the following screenshot).
    It has the image, title, text, price, and then a Buy Now button. Also, we have
    the tags below the Buy Now button as shown in the following screenshot:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果我们点击某个产品的详细信息，例如黑色衬衫，它将带我们到产品页面（如以下截图所示）。它有图片、标题、文本、价格，然后是一个立即购买按钮。此外，我们在立即购买按钮下方有标签，如以下截图所示：
- en: '![](img/901e6715-c845-4b2c-b624-140f1f80ffeb.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/901e6715-c845-4b2c-b624-140f1f80ffeb.png)'
- en: 'Also, if we go to Blue & White Shirt we can see we have some images, so we
    can include an image gallery as well, and we will see how to do that:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果我们转到蓝色与白色衬衫，我们可以看到我们有一些图片，因此我们可以包括一个图片库，我们将看到如何做到这一点：
- en: '![](img/32aa4ada-0df3-4dea-aaaf-acd5fd3860f9.png)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/32aa4ada-0df3-4dea-aaaf-acd5fd3860f9.png)'
- en: The pages themselves are very simple. We just have an About page with a title
    and heading, and it's the same with Sample Page. If we go to the backend of the
    page and go to Posts, we can see the different products we have. Click on the
    Pink Shirt product; we have included the text, the price, and the button. If we
    scroll down, on the bottom-right corner we can see we're using the featured image.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 页面本身非常简单。我们只有一个关于页面，包含标题和标题，样本页面也是如此。如果我们进入页面的后端并进入帖子，我们可以看到我们拥有的不同产品。点击粉色衬衫产品；我们包含了文本、价格和按钮。如果我们向下滚动，在右下角我们可以看到我们正在使用特色图片。
- en: 'For the showcase, if we go to Appearance | Widgets, we can see in Showcase
    we have a Showcase widget, which is actually a custom widget that we''ll create
    and use it in the theme. We also have our Sidebar at the right-hand side of the
    page with the Categories and then the Text widget. Now for the gallery, if we
    go to the Blue Shirt product and click on Add Media, we can go to Create Gallery
    and choose a bunch of images, go ahead, and upload that gallery. If we click on
    Visual, you can see that and we can edit it as a whole by clicking on the Edit
    icon as seen in the following screenshot:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 对于展示，如果我们前往外观 | 小部件，我们可以在展示中看到展示小部件，这实际上是一个我们创建并将在主题中使用的自定义小部件。我们还有页面的右侧边栏，包含分类和文本小部件。现在对于画廊，如果我们转到蓝色衬衫产品并点击添加媒体，我们可以转到创建画廊并选择一些图片，继续上传该画廊。如果我们点击视觉，您可以看到它，并且我们可以通过点击以下截图中的编辑图标来整体编辑它：
- en: '![](img/0a868f3f-1818-4dc8-a0c6-68cd62055f8e.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/0a868f3f-1818-4dc8-a0c6-68cd62055f8e.png)'
- en: That's pretty simple. It's not the best looking online shop you've ever seen,
    but it does have some features that are really important. For the logo, what we
    can do to switch that is go to Appearance | Customize | Site Identity and then
    you will see the Logo option from where we can remove it. We can also change it
    and update our title and tagline.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这非常简单。这并不是你见过的最好的在线商店，但它确实有一些非常重要的功能。对于标志，我们可以通过前往外观 | 自定义 | 网站身份来切换它，然后您将看到标志选项，我们可以从那里删除它。我们还可以更改它并更新我们的标题和标语。
- en: E-commerce HTML template – Part A
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 电子商务HTML模板 – 第一部分
- en: 'We''ll first build a flat-out HTML template and then move on to integrating
    it and making it a WordPress theme. Let''s go ahead and create a folder for this
    template, and we will call this `myshop_html`. Now let us download Foundation
    from [foundation.zurb.com](https://foundation.zurb.com/). Click on the Download
    Foundation 6 button which will take you to the downloads page. Now, click on Download
    Everything under Complete:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先构建一个直接的HTML模板，然后继续集成它，并使其成为一个WordPress主题。让我们继续创建一个用于此模板的文件夹，我们将称之为`myshop_html`。现在让我们从[foundation.zurb.com](https://foundation.zurb.com/)下载Foundation。点击“下载Foundation
    6”按钮，这将带您到下载页面。现在，点击“完整”下的“下载一切”：
- en: '![](img/46030c95-20c5-4b57-84f6-4f67cf209487.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/46030c95-20c5-4b57-84f6-4f67cf209487.png)'
- en: 'We''ll now open up the downloaded ZIP file and let''s just take everything
    out and move it to our `myshop_html` folder:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将打开下载的ZIP文件，将所有内容全部取出，移动到我们的`myshop_html`文件夹中：
- en: '![](img/e78cf83f-7170-49bd-b9ae-d59f2b67bf04.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e78cf83f-7170-49bd-b9ae-d59f2b67bf04.png)'
- en: 'Now if we open up `index.html` with our desired web browser, we will see that
    we pretty much have a boilerplate:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 现在如果我们用我们想要的网络浏览器打开`index.html`，我们将看到我们基本上有一个模板：
- en: '![](img/7f6b56ee-42a9-442a-aff1-490a35052adf.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/7f6b56ee-42a9-442a-aff1-490a35052adf.png)'
- en: The CSS is implemented and the JavaScript should be implemented, so let's go
    ahead and open up `index.html` in our editor. We will work through this code of
    `index.html` and replace what we need. Let's open up our CSS file, `app.css`,
    inside the `CSS` folder in the `myshop_html` folder that we have created. There's
    nothing inside our CSS file; the only styles are the core foundation styles.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: CSS已经实现，JavaScript也应该实现，所以让我们打开我们的编辑器中的`index.html`。我们将通过这个`index.html`的代码，并替换我们需要的内容。让我们打开我们创建的`myshop_html`文件夹中的`CSS`文件夹内的CSS文件`app.css`。我们的CSS文件中没有内容；唯一的样式是核心基础样式。
- en: We also have some images that we need to upload (you will get these images along
    with the code bundle), so we will create a new folder called `img` and paste these
    images inside the `img` folder. If we take a look at the images, we have our `logo.jpg`
    and a bunch of clothes.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有一些需要上传的图片（你将随代码包一起获得这些图片），因此我们将创建一个名为`img`的新文件夹，并将这些图片粘贴到`img`文件夹中。如果我们看一下这些图片，我们有`logo.jpg`和一些衣服。
- en: 'We have a bunch of shirts and a hat. The blue shirt has multiple images because
    we''ll implement a mini gallery, so these are all the images that we''ll be needing:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有一堆衬衫和一顶帽子。蓝色衬衫有多个图片，因为我们将实现一个迷你相册，所以这些都是我们需要的所有图片：
- en: '![](img/bb305434-873f-43a8-979d-1f90ea6c6495.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/bb305434-873f-43a8-979d-1f90ea6c6495.png)'
- en: 'Let''s go back to the `index.html` file. The head can stay how it is; we''re
    linking our CSS files and our viewport is already set. In the `<body>` tag, you
    will see that we are using the XY grid system. The first `<div>` tag has a class
    of `grid-container`. The grid will default to the full width of the available
    space. To contain it we use the `grid-container` class. Below this, we have a
    `<div>` tag with two classes—`grid-x` and `grid-padding-x`:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回到`index.html`文件。头部可以保持原样；我们正在链接我们的CSS文件，我们的视口已经设置。在`<body>`标签中，你会看到我们正在使用XY网格系统。第一个`<div>`标签有一个`grid-container`类。网格将默认为可用空间的全部宽度。为了包含它，我们使用`grid-container`类。在这下面，我们有一个带有两个类——`grid-x`和`grid-padding-x`的`<div>`标签：
- en: '[PRE0]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'We will change this `<div>` to `<header>` and change the `large-12` div to
    `large-6` div, as shown in the following code snippet:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将把这个`<div>`改为`<header>`，并将`large-12`的`div`改为`large-6`的`div`，如下面的代码片段所示：
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Reload the `index.html` page and you will see our logo:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 重新加载`index.html`页面，你将看到我们的标志：
- en: '![](img/8dca1791-7f84-455b-98cd-a5cc39d6d5be.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/8dca1791-7f84-455b-98cd-a5cc39d6d5be.png)'
- en: 'Next, add a second `<div>` tag. This will have our navigation menu:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，添加第二个`<div>`标签。这将包含我们的导航菜单：
- en: '[PRE2]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Let''s save that and reload the web page:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们保存它并重新加载网页：
- en: '![](img/1e2b80bd-21a8-4348-9818-aa0a5a814933.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/1e2b80bd-21a8-4348-9818-aa0a5a814933.png)'
- en: The style that the menu has is coming from the core foundation file. We'll add
    some other styles; for instance, we push it down, we push it over, but we'll get
    into the CSS after the HTML.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 菜单的样式来自核心基础文件。我们将添加一些其他样式；例如，我们将它向下推，将它推过去，但我们将在HTML之后进入CSS。
- en: 'Next, we have the showcase area which is going to change quite a bit. We''ll
    add the `showcase` class to the `<div>` tag with the `grid-x` and `grid-padding-x`
    classes. We''ll leave the 12-cells and `callout` div as it is, but we will add
    a class called `secondary`, which will make it gray. Get rid of everything inside
    that. Inside the `secondary` class div we''ll have an `h1`, and this will say
    `Discount Clothing`, and then we will paste in a paragraph and a `button` as seen
    in the following code:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将对展示区域进行相当大的改动。我们将向带有`grid-x`和`grid-padding-x`类的`<div>`标签添加`showcase`类。我们将保持12个单元格和`callout`
    div不变，但我们将添加一个名为`secondary`的类，这将使其变为灰色。移除其中的所有内容。在`secondary`类div内部，我们将有一个`h1`，上面写着`Discount
    Clothing`，然后我们将粘贴一个段落和一个`button`，如下面的代码所示：
- en: '[PRE3]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Now, you will see the showcase area which appears in the web page under the
    MyShop logo:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你将看到展示区域，它出现在网页中MyShop标志下方：
- en: '![](img/f3ac9fa3-0d8f-4264-86eb-a89a9d21a0fc.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f3ac9fa3-0d8f-4264-86eb-a89a9d21a0fc.png)'
- en: 'We''ll add some more styles to the paragraph afterwards so don''t worry about
    it. If we scroll down in our editor, we have another `grid-x grid-padding-x` div,
    this has an 8-cells `div`, which is the main area:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在段落之后添加一些更多样式，所以不用担心。如果我们滚动到我们的编辑器中，我们还有一个带有`grid-x grid-padding-x`类的div，这个div有一个8个单元格的`div`，这是主要区域：
- en: '![](img/a4710610-0b8e-4d75-ac39-75bab2ae79b3.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a4710610-0b8e-4d75-ac39-75bab2ae79b3.png)'
- en: 'Then, way down at the bottom there''s a 4-cells `div`, which is the sidebar:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在底部下方有一个4个单元格的`div`，这是侧边栏：
- en: '![](img/14111ed0-387b-4a84-98c7-8fc0908040fe.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](img/14111ed0-387b-4a84-98c7-8fc0908040fe.png)'
- en: We will clear these divs out completely. Now we have a cleared out 8-cells div
    and a sidebar of 4-cells div. Next, for the products we'll add a `<div>` tag inside
    the 8-cells div and give it a class of `products`.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将完全清除这些div。现在我们有一个清除的8个单元格div和一个4个单元格的侧边栏div。接下来，对于产品，我们将在8个单元格div内部添加一个`<div>`标签，并给它一个名为`products`的类。
- en: 'Inside this div, we will add 4-cell divs and give them a class of `large-4
    medium-4 small-12 columns product end`. We will add the title, price, and image
    and then we''ll put in a button. Here''s how our first product''s div looks like:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个div内部，我们将添加4个单元格的div，并给它们一个名为`large-4 medium-4 small-12 columns product end`的类。我们将添加标题、价格和图片，然后放入一个按钮。这就是我们第一个产品div的外观：
- en: '[PRE4]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: When we do the WordPress theme things might look a little different than the
    HTML theme because there's some limitation to where we can put the content. So
    just remember that there may be some minor differences.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们处理WordPress主题时，与HTML主题相比，可能会有一些不同，因为我们在放置内容的地方有一些限制。所以请记住，可能会有一些细微的差异。
- en: 'Now, let''s grab the 4-cell div and paste it in a bunch of times. We will just
    change the content a little bit to add all the shirts:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们复制4个单元格的div，多次粘贴它。我们只需稍微改变内容，以添加所有衬衫：
- en: '[PRE5]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Now reload the `index.html` page:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，重新加载`index.html`页面：
- en: '![](img/2eb10417-77c4-49bc-905b-db9e548429e4.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2eb10417-77c4-49bc-905b-db9e548429e4.png)'
- en: 'Now for the sidebar we''ll go down to the 4-cell div and add the following
    code:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 对于侧边栏，我们将向下移动到4个单元格的div，并添加以下代码：
- en: '[PRE6]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'We have given the div a class of `callout` that gives it a border and some
    padding. We have also added the `Categories` heading and the `<ul>` tag with the
    class of `menu` and `vertical`. We will have one more sidebar widget right below
    it with a heading and some text. This is how our sidebar will look like:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 我们给这个div添加了一个名为`callout`的类，它提供了边框和一些填充。我们还添加了`Categories`标题和带有`menu`和`vertical`类的`<ul>`标签。我们将在它下方再添加一个侧边栏小部件，带有标题和一些文本。这就是我们的侧边栏将看起来像的样子：
- en: '![](img/4ab17072-2896-4af6-9295-b1dd0a9c2edb.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4ab17072-2896-4af6-9295-b1dd0a9c2edb.png)'
- en: 'Now we''ll go down to the very bottom, right above the script tags, and create
    our footer. Our footer is just going to be a paragraph, we''ll put our copyright.
    The code for the footer is:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将向下移动到非常底部，紧挨着脚本标签上方，创建我们的页脚。我们的页脚将只是一个段落，我们将放置版权信息。页脚的代码如下：
- en: '[PRE7]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: That's it for the `index.html` page! Now we will move on to the details page,
    and obviously we'll fix rest of the index and details page in the second part
    where we'll do the CSS.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是`index.html`页面的全部内容！现在我们将继续到详情页面，显然我们将在第二部分修复index和详情页的其余部分，在那里我们将进行CSS设计。
- en: 'Let''s go back to our `myshop_html` folder and create a new file called `details.html`.
    Copy the code of `index.html` and paste it in the `details.html` file. Now go
    to the main area, the 8-cell div. We will change the `products` class to `single-product`,
    remove all the products, and change the 4-cell div to 12-cell div:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回到我们的`myshop_html`文件夹，创建一个名为`details.html`的新文件。复制`index.html`的代码并将其粘贴到`details.html`文件中。现在转到主区域，8单元格div。我们将把`products`类改为`single-product`，删除所有产品，并将4单元格div改为12单元格div：
- en: '[PRE8]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Now inside the 12-cell div that we just updated, we''ll have two more columns.
    Here''s the new code after some changes to the 12-column div:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 现在在刚刚更新的12单元格div内部，我们将再添加两个列。以下是12列div经过一些更改后的新代码：
- en: '[PRE9]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'As shown in the preceding code, we have a 5-cell div in which we will add the
    image and a 7-cell div which will contain the content. Here is how our final code
    will look like:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 如前述代码所示，我们有一个5单元格的div，我们将在此添加图片，以及一个7单元格的div，它将包含内容。以下是我们的最终代码将看起来像这样：
- en: '[PRE10]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: As we want the 5-cell and 7-cell div in a single row, we have added a div of
    classes `grid-x` and `grid-padding-x` in the 12-cell div.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们希望5单元格和7单元格的div在单行中，我们在12单元格的div中添加了一个具有`grid-x`和`grid-padding-x`类的div。
- en: 'Now, let''s reload the `details.html` page:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们重新加载`details.html`页面：
- en: '![](img/7985cd08-7396-49ce-a912-b62caef5b290.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/7985cd08-7396-49ce-a912-b62caef5b290.png)'
- en: That looks good so far in our web page.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们的网页看起来还不错。
- en: 'Now we''re also going to create an About page just to represent a normal page
    that''s not a product page. Let''s go to our `myshop_html` folder again and create
    a new file, and we''ll name it `about.html`. Open that up in our editor, and now
    we are going to copy everything that we have in the `details.html` file. Then
    we will go to the main area and instead of having a 5-cell and a 7-cell, we''ll
    just have the one 12-cell div. The code for the about section is:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们还将创建一个关于页面，只是为了表示一个不是产品页的正常页面。让我们再次回到我们的`myshop_html`文件夹，并创建一个新文件，我们将命名为`about.html`。在编辑器中打开它，现在我们将复制`details.html`文件中的所有内容。然后我们转到主区域，而不是有一个5单元格和一个7单元格，我们将只有一个12单元格的div。关于部分的代码如下：
- en: '[PRE11]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Let''s go to About section in our web page, and there we go, just some text
    and a heading:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们去网页的关于部分，我们就可以看到，只有一些文本和标题：
- en: '![](img/cb7bfa65-2a0e-435c-bbc8-d48b7c285bc4.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/cb7bfa65-2a0e-435c-bbc8-d48b7c285bc4.png)'
- en: E-commerce HTML template – Part B
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 电子商务HTML模板 – 第二部分
- en: We have the HTML done, but we need to do the CSS bit. Let's go ahead and open
    up `app.css` and if we take a look at the template, we'll have to start with the
    core styles.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经完成了HTML部分，但还需要处理CSS部分。让我们打开`app.css`文件，如果我们查看模板，我们需要从核心样式开始。
- en: 'Now we will notice that by default, the buttons and the links are blue. We
    actually want to change that to red. We''ll put `a` tag, let''s write `color`
    and that''s going to be a value of `ec2c2f`, which will give it the red color.
    Now we also want the buttons to have a background color of red. Let''s say, we
    also want to give the buttons a little border at the bottom. So, we''ll use `border-bottom:
    3px #333solid;`.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '现在我们将注意到，按钮和链接默认是蓝色的。我们实际上想将其改为红色。我们将`a`标签，写`color`，这将是一个值为`ec2c2f`的值，这将给它红色。现在我们还想让按钮有一个红色的背景色。比如说，我们还想给按钮底部加一点边框。所以，我们将使用`border-bottom:
    3px #333solid;`。'
- en: 'Now when we hover over the buttons, you''ll see it turns blue, same thing with
    the links:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 现在当我们将鼠标悬停在按钮上时，你会看到它变成了蓝色，链接也是如此：
- en: '![](img/75fbb932-9ab2-42ac-8f71-28f79dd8a5b1.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/75fbb932-9ab2-42ac-8f71-28f79dd8a5b1.png)'
- en: 'To fix this, let''s use the following code:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这个问题，让我们使用以下代码：
- en: '[PRE12]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Let''s save the file and reload the page. This is what you will now see with
    the buttons and links in red even when you hover over them:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们保存文件并重新加载页面。现在你会看到按钮和链接即使在悬停时也是红色的：
- en: '![](img/25c2c8e2-ad7c-41a0-bf92-0dba210f8b63.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/25c2c8e2-ad7c-41a0-bf92-0dba210f8b63.png)'
- en: 'Let''s now take care of the positions of the Home, About, and Services links.
    We want them to be at the top-right of the page. Here''s the code to do this with
    some font size modifications:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们现在处理主页、关于和服务的链接位置。我们希望它们在页面的右上角。以下是实现此目的并修改一些字体大小的代码：
- en: '[PRE13]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Let''s reload the page and see the changes:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们重新加载页面并查看更改：
- en: '![](img/58b82a9d-a4de-46f6-8249-67eedbb52430.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/58b82a9d-a4de-46f6-8249-67eedbb52430.png)'
- en: 'Let''s also give a little margin to the header on the bottom:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们也给底部的页眉留一点边距：
- en: '[PRE14]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Reload the page and this is what you should see:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 重新加载页面，你应该会看到这样的内容：
- en: '![](img/71f4a1b3-1928-4c41-9540-63162c8c8606.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/71f4a1b3-1928-4c41-9540-63162c8c8606.png)'
- en: 'Next, let''s do the showcase area. For this, use the following code:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们做展示区域。为此，使用以下代码：
- en: '[PRE15]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Here''s what you will see now:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你将看到以下内容：
- en: '![](img/08ba628a-01a8-4efb-b1d9-63a9eaa54be0.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/08ba628a-01a8-4efb-b1d9-63a9eaa54be0.png)'
- en: 'Now for the products area, we''ll write `products .columns`, we''re just going
    to add a `margin-bottom` and let''s do `product`, singular, and for that we want
    to `text-align` to the `center`. Let''s see, so for the button we want to add
    a little margin to the top, so let''s write `product .button``margin-top` and
    let''s use `10px`:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 现在对于产品区域，我们将编写`products .columns`，我们只是要添加一个`margin-bottom`，让我们为单数形式的`product`添加一个`text-align`到`center`。让我们看看，对于按钮，我们想在顶部添加一点边距，所以让我们写`product
    .button margin-top`并使用`10px`：
- en: '[PRE16]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Let''s save that and reload the page:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们保存并重新加载页面：
- en: '![](img/020c64b8-3ac4-4ae0-a893-7516686669f0.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/020c64b8-3ac4-4ae0-a893-7516686669f0.png)'
- en: 'Now for the menu on the right-hand side of our webpage (Categories), we will
    add a border underneath each list item. However, we don''t want to have a border
    for the last list item. Type the following code to execute this:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 现在对于网页右侧的菜单（分类），我们将为每个列表项下面添加一个边框。然而，我们不想为最后一个列表项添加边框。输入以下代码以执行此操作：
- en: '[PRE17]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Save that and reload the page:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 保存并重新加载页面：
- en: '![](img/1e633aa8-d4d0-4964-a12b-fb9bf42c71eb.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/1e633aa8-d4d0-4964-a12b-fb9bf42c71eb.png)'
- en: 'Lastly, let''s add the footer. We''ll set some properties and display the footer
    on the page using the following code:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，让我们添加页脚。我们将设置一些属性，并使用以下代码在页面上显示页脚：
- en: '[PRE18]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Save that and reload the page:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 保存并重新加载页面：
- en: '![](img/8439f67b-2632-43b8-b790-a4acb61b6d4d.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/8439f67b-2632-43b8-b790-a4acb61b6d4d.png)'
- en: Let's take a look at Details and About page on our webpage. You will see that
    the Details page looks good; however, the About page has the content center-aligned.
    To fix this, go to the `about.html` file and remove `product end` from the 12-column
    div. Reload the page, and the About page should look perfectly fine.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看网页上的详细信息页面和关于页面。你会看到详细信息页面看起来不错；然而，关于页面内容是居中对齐的。为了修复这个问题，转到`about.html`文件并从12列的div中移除`product
    end`。重新加载页面，关于页面应该看起来非常完美。
- en: In the next section, we'll jump into WordPress and we'll start to create a WordPress
    theme based on this design.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将进入WordPress，并开始根据这个设计创建WordPress主题。
- en: Theme setup, logo, and navigation
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 主题设置、标志和导航
- en: Now that the HTML template is done, we can now start to convert it into a WordPress
    theme.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 现在HTML模板已经完成，我们现在可以开始将其转换为WordPress主题。
- en: 'We have a default installation of WordPress. Let''s create a new theme folder.
    We will go to `wp-content` | `themes` and create a new folder, `MyShop`. Inside
    `MyShop`, we''ll create an `index.php` file and a `style.css` file. Let''s go
    ahead and put our declaration in our `style.css` file as shown in the following
    snippet:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有一个默认安装的WordPress。让我们创建一个新的主题文件夹。我们将进入`wp-content` | `themes`并创建一个新的文件夹，`MyShop`。在`MyShop`内部，我们将创建一个`index.php`文件和一个`style.css`文件。让我们继续在我们的`style.css`文件中放入我们的声明，如下面的代码片段所示：
- en: '[PRE19]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Let''s save that. Now if we go to the backend in our webpage and go to Appearance
    | Themes, we''ll see MyShop as seen in the following screenshot:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们保存。现在如果我们去网页的后端，进入外观 | 主题，我们将看到如下截图所示的MyShop：
- en: '![](img/6a31e264-b5f6-4649-bc06-68b467d8c340.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/6a31e264-b5f6-4649-bc06-68b467d8c340.png)'
- en: We have a screenshot that we can pop above the MyShop preview image in our project
    files. Paste this inside the `MyShop` folder. So now we have MyShop, let's go
    ahead and activate it. Obviously, right now if we go and reload the frontend,
    it'll just be blank.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有一个截图，可以将其放置在我们项目文件中的MyShop预览图片上方。将此内容粘贴到`MyShop`文件夹中。现在我们有了MyShop，让我们继续激活它。显然，如果我们现在去重新加载前端，它将只是空白。
- en: We'll open the `MyShop` and `myshop_html` folders, which is the HTML template
    that we created, and bring over the `css` and the `js` folders into the `MyShop`
    folder. Now we have a `style.css` in our WordPress site. We'll take everything
    out of the `app.css` file from our template, cut that out, put it into `style.css`,
    and save it. Then we can completely delete the `app.css`.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将打开`MyShop`和`myshop_html`文件夹，这是我们所创建的HTML模板，并将`css`和`js`文件夹移动到`MyShop`文件夹中。现在我们WordPress网站上有一个`style.css`文件。我们将从模板中的`app.css`文件中取出所有内容，将其剪切出来，放入`style.css`中，并保存。然后我们可以完全删除`app.css`。
- en: 'We''ll now put everything from our `index.html` folder into `index.php`. Let''s
    save that, and if we go to our website and reload the page, we can see all of
    our HTML there. The CSS isn''t connected yet so we''re not seeing that, but you
    can see the HTML:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将把`index.html`文件夹中的所有内容放入`index.php`。让我们保存它，如果我们去我们的网站并重新加载页面，我们可以看到所有的HTML都在那里。CSS还没有连接，所以我们看不到它，但你可以看到HTML：
- en: '![](img/0b1b2444-fe12-48a3-9b3a-23256a0a847a.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0b1b2444-fe12-48a3-9b3a-23256a0a847a.png)'
- en: 'Let''s go to the top of the file. We will add our title and fix the stylesheet
    declarations:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们去文件的顶部。我们将添加我们的标题并修复样式表声明：
- en: '[PRE20]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Let''s save that, reload our webpage, and now we can see that our CSS is in
    effect:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们保存它，重新加载我们的网页，现在我们可以看到我们的CSS正在生效：
- en: '![](img/a493e3c0-8871-4ffb-8483-ee08d6636006.png)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a493e3c0-8871-4ffb-8483-ee08d6636006.png)'
- en: We're just going to work from the top down. So next is the body! We also want
    to add our body class. So beside our `body` tag, let's add `<?php echo body_class()
    ?>`.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从顶部开始工作。所以接下来是body！我们还想添加我们的body类。所以在我们`body`标签旁边，让我们添加`<?php echo body_class()
    ?>`。
- en: 'Now for the logo, we''ll do something that we haven''t done yet; we''ll implement
    an image, a logo upload from the theme customizer. In order to do that, we need
    to create a `functions.php` file. So in our `themes` folder, let''s create a file
    called `functions.php` and create a function for `Theme Support`. Here''s what
    the code should look like inside `functions.php`:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 现在对于标志，我们将做一些我们还没有做的事情；我们将实现一个图像，一个从主题定制器上传的标志。为了做到这一点，我们需要创建一个`functions.php`文件。所以在我们“主题”文件夹中，让我们创建一个名为`functions.php`的文件，并创建一个名为“主题支持”的函数。以下是`functions.php`文件内代码的示例：
- en: '[PRE21]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Save that and let''s now go to the `index.php` file. Let''s remove `<img src="img/logo.jpg">`
    and replace it with the following code snippet:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 保存它，现在让我们转到`index.php`文件。让我们删除`<img src="img/logo.jpg">`并将其替换为以下代码片段：
- en: '[PRE22]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'We now go to our backend. In the Themes we''ll click on Customize, go to Site
    Identity, and now you should have the area as seen in the following screenshot
    for a logo:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在转到我们的后端。在“主题”中，我们将点击“定制”，转到“网站标识”，现在你应该可以看到如下截图所示的标志区域：
- en: '![](img/340094a9-8500-45db-ba43-e735e5d77a77.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![](img/340094a9-8500-45db-ba43-e735e5d77a77.png)'
- en: 'We are going to click on Select Logo and we''ll upload the `logo.jpg` file
    from the `myshop_html` folder, crop the image as per your preference, and click
    on Save and then Publish. Now let''s go to our frontend and reload, and we now
    have a logo:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将点击“选择标志”，然后从“myshop_html”文件夹上传`logo.jpg`文件，根据你的偏好裁剪图片，然后点击“保存”并发布。现在让我们去我们的前端并重新加载，现在我们有一个标志了：
- en: '![](img/67bee4d4-a079-4aac-9dce-e9b9bd80adba.png)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![](img/67bee4d4-a079-4aac-9dce-e9b9bd80adba.png)'
- en: 'Now let''s do the menu. We''ll go to the `functions.php` file and add the following
    code for `Nav Menus`:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们来做菜单。我们将转到`functions.php`文件，并添加以下代码用于“导航菜单”：
- en: '[PRE23]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Next we will go to `index.php` and we have our menu. We''ll get rid of it completely
    and add the following code:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将转到`index.php`，我们有了菜单。我们将完全删除它并添加以下代码：
- en: '[PRE24]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Now let''s go to our backend. First of all we''ll reload, click on the Menus
    option, and we will keep Sample Page. Make sure that we have the Primary Menu
    option checked:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们转到我们的后端。首先，我们将重新加载，点击“菜单”选项，我们将保持“样本页面”。确保我们勾选了“主菜单”选项：
- en: '![](img/03625545-0796-45ef-add0-9ea4b8ede24b.png)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![](img/03625545-0796-45ef-add0-9ea4b8ede24b.png)'
- en: 'We''ll click on Save Menu and reload our page. We can see that, now we have
    our menu and if we click on it we can see the link has changed. You won''t see
    it in the main area of the web page because we don''t have that area of the theme
    set up yet; it''s just static content for now, but the menu is working and the
    logo is there:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将点击“保存菜单”并重新加载我们的页面。我们可以看到，现在我们有了菜单，如果我们点击它，我们可以看到链接已经改变。你不会在网页的主要区域看到它，因为我们还没有设置这个主题区域；现在它只是静态内容，但菜单是正常工作的，标志也在那里：
- en: '![](img/19f18b59-5ef4-4f17-9c53-22ce8b2184f6.png)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![](img/19f18b59-5ef4-4f17-9c53-22ce8b2184f6.png)'
- en: 'The last thing we want to do in this section is to go to the `index.php` file
    and right underneath the `footer` tags, we''ll put `wp_footer` as shown in the
    following code snippet:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中我们想要做的最后一件事是转到`index.php`文件，并在`footer`标签下面直接放置`wp_footer`，如下面的代码片段所示：
- en: '[PRE25]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'That should give us the admin menu at the top of the web page:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该给我们网页顶部的管理员菜单：
- en: '![](img/71c04843-7303-49f5-85f4-0eb45dc5723c.png)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![](img/71c04843-7303-49f5-85f4-0eb45dc5723c.png)'
- en: In the next section we'll work with widgets. We will see how to create a custom
    widget for our showcase area.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将处理小工具。我们将看到如何为展示区域创建一个自定义小工具。
- en: The custom showcase widget plugin
  id: totrans-143
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自定义展示小工具插件
- en: In this section we'll create a custom widget for our theme. We have the showcase
    area on our web page and we will create a widget that can take in a title and
    some text, and will spit it out right in the widget position.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将为我们的主题创建一个自定义小部件。我们在网页上有展示区域，我们将创建一个可以接受标题和一些文本的小部件，并将其直接输出到小部件位置。
- en: If we look at the documentation page at [https://codex.wordpress.org/Widgets_API](https://codex.wordpress.org/Widgets_API)
    for the Widgets API, what we need to do basically is create a class that extends
    `WP_Widget`, and it's going to have a few different methods. It'll have a constructor
    to call the constructor of the parent class and also set up the title and description,
    the `widget` method that will output the content of the widget, the `form` method
    that will output the admin form, and `update` that will take care of updating
    any fields.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们查看[https://codex.wordpress.org/Widgets_API](https://codex.wordpress.org/Widgets_API)的Widgets
    API文档页面，我们基本上需要创建一个扩展`WP_Widget`的类，并且它将有几个不同的方法。它将有一个构造函数来调用父类的构造函数并设置标题和描述，一个`widget`方法将输出小部件的内容，一个`form`方法将输出管理表单，以及一个`update`方法将负责更新任何字段。
- en: We'll go into the `wp-content` | `plugins` folder and create a new folder there,
    `showcase-widget` (although it is a plugin, it's also a widget). Let's go ahead
    and create a new file in this folder, `showcase-widget.php`, and then one more
    file, which is going to be the class file, `class.showcase-widget.php`. The `showcase-widget.php`
    file is going to be the main file but the class file is going to be where we'll
    do most of the functionality.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将进入`wp-content` | `plugins`文件夹，并在那里创建一个新的文件夹，`showcase-widget`（尽管它是一个插件，但它也是一个小部件）。让我们继续在这个文件夹中创建一个新的文件，`showcase-widget.php`，然后还有一个文件，它将是类文件，`class.showcase-widget.php`。`showcase-widget.php`文件将是主文件，但类文件将是我们将进行大部分功能的地方。
- en: 'We''ll now add some code to the `showcase-widget.php` file:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将添加一些代码到`showcase-widget.php`文件中：
- en: '[PRE26]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '`Showcase_Widget` in the `register_widget(''Showcase_Widget'');` is our class
    name. This, in general, needs to be your class name, whatever you choose.'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 在`register_widget('Showcase_Widget');`中的`Showcase_Widget`是我们类的名称。这通常需要是你的类名，无论你选择什么。
- en: 'Let''s go into the `class.showcase-widget.php` file now. We''ll grab the Default
    Usage code from the documentation page ([https://codex.wordpress.org/Widgets_API](https://codex.wordpress.org/Widgets_API))
    and we''ll paste that in our editor with `php` tags. First of all we will have
    to change the name of the class from `My_Widget` to `Showcase_Widget`, and then
    let''s take a look at the constructor and replace our code in there:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们进入`class.showcase-widget.php`文件。我们将从文档页面（[https://codex.wordpress.org/Widgets_API](https://codex.wordpress.org/Widgets_API)）中获取默认用法代码，并将其粘贴到我们的编辑器中，使用`php`标签。首先，我们必须将类的名称从`My_Widget`更改为`Showcase_Widget`，然后让我们看看构造函数并替换那里的代码：
- en: '[PRE27]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The widget method will display the frontend of the widget, so we basically
    need three things which are as follows:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 小部件方法将显示小部件的前端，所以我们基本上需要以下三个东西：
- en: We need the title of the widget
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们需要小部件的标题
- en: We need the heading
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们需要标题
- en: We need a field for the text
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们需要一个用于文本的字段
- en: 'We are going to paste the following code:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将粘贴以下代码：
- en: '[PRE28]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'We''ll stay in the same method and paste some other stuff in:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将保持在同一个方法中，并粘贴一些其他内容：
- en: '[PRE29]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Before we move on to these let''s create `getContent`, which takes in the heading
    and text. Let''s use the following code snippet:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们继续之前，让我们创建`getContent`，它接受标题和文本。让我们使用以下代码片段：
- en: '[PRE30]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Now, we have a variable called `output` that we're sending it to a template
    with the `h1` and the text. Then we have a button and we are returning the output.
    So this `getContent` is actually going to display content's `echo $this->getContent($headng,
    $text);` where we're calling it.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们有一个名为`output`的变量，我们将它发送到一个带有`h1`和文本的模板中。然后我们有一个按钮，我们返回输出。所以这个`getContent`实际上将显示内容的`echo
    $this->getContent($headng, $text);`，我们在那里调用它。
- en: 'Next, let''s scroll down to `function form`. This represents the backend form
    where we can actually put the heading and the text and stuff like that. We will
    paste the following code in this function:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们滚动到`function form`。这代表后端表单，我们可以实际上放置标题和文本等。我们将在此函数中粘贴以下代码：
- en: '[PRE31]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'We''re checking to see if there''s a title, and if there is we''ll set it to
    the variable to whatever is in the instance. If there''s not, then we''re just
    going to set it to `Showcase_Widget`. Then we also need to get the heading and
    the text, which we''re pulling from the instances as well:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 我们检查是否有标题，如果有，我们将将其设置为实例中的变量。如果没有，我们就将其设置为 `Showcase_Widget`。然后我们还需要获取标题和文本，这些也是从实例中获取的：
- en: '[PRE32]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Now for the actual backend form it''s a lot of HTML. We will end the `php`
    tag after `$text = $instance` and start the `php` tag on the next line. We will
    then put all the HTML between these opening and closing `phg` tags. Let''s paste
    the following HTML code:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 现在实际的后端表单有很多 HTML。我们将在 `$text = $instance` 后结束 `php` 标签，并在下一行开始 `php` 标签。然后我们将所有
    HTML 代码放在这些开闭 `php` 标签之间。让我们粘贴以下 HTML 代码：
- en: '[PRE33]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Basically, we have a couple of paragraphs and they contain a label for each
    field and then the input. We can see for the label we can echo out `$this->get_field_id`
    and then what we want is the title. Then for the input we have an `id`, `get_field_id`,
    and then the name of the field which is title. Then for the name we have `get_field_name(
    'title' )`, and for the value we'll use the title variable. We'll escape it with
    the escape attribute, `escape_attr`. We'll do the same thing for the heading and
    for the text. It's really quite simple even although it looks like a lot of code.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上，我们有一些段落，每个字段都有一个标签和相应的输入。我们可以看到对于标签，我们可以输出 `$this->get_field_id`，然后我们想要的是标题。对于输入，我们有
    `id`、`get_field_id` 和字段的名称，即标题。对于名称，我们有 `get_field_name( 'title' )`，对于值，我们将使用标题变量。我们将使用
    `escape_attr` 属性来转义它。我们将对标题和文本做同样的事情。尽管看起来代码很多，但实际上非常简单。
- en: 'Next we want to go to the `update` method, when we add a heading and text in
    the backend and we click save, the `update` method is what saves it. Let us grab
    some code:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们想要进入 `update` 方法，当我们在后端添加标题和文本并点击保存时，`update` 方法就是用来保存它的。让我们抓取一些代码：
- en: '[PRE34]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: We have an instance that equals an empty array. We'll say `instance['title']`
    equals whatever is in the new instance saved as the title. It's the same thing
    with the heading; we'll set it to the new instance heading, and the same with
    the text, and we'll return that instance. This will update whatever we put in
    for the fields in the backend widget form.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有一个实例，它等于一个空数组。我们将说 `instance['title']` 等于新实例中保存的标题内容。标题也是一样，我们将它设置为新的实例标题，文本也是如此，然后我们将返回这个实例。这将更新我们在后端小部件表单中输入的字段。
- en: We'll make sure both files are saved and then we'll go in the backend and let's
    reload the webpage. Go to Plugins, and we can see in the following screenshot
    the Showcase Widget option; it has the description, version, and name, and we'll
    click on Activate.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 我们确保两个文件都已保存，然后进入后端并重新加载网页。转到插件，在下面的屏幕截图中我们可以看到 Showcase 小部件选项；它有描述、版本和名称，我们将点击激活。
- en: '![](img/ada496d6-f13e-4a6f-a875-6cf0f055dbc9.png)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ada496d6-f13e-4a6f-a875-6cf0f055dbc9.png)'
- en: 'Let''s set up a widget position by going into `functions.php` in our `themes`
    folder. We''ll set up our widget locations. So we''ll scroll down to the bottom
    of the file and paste the following code:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过进入 `themes` 文件夹中的 `functions.php` 来设置小部件位置。我们将设置我们的小部件位置。所以我们将滚动到文件底部并粘贴以下代码：
- en: '[PRE35]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'So we have a function called `ms_init_widgets` and we have two places where
    we want widgets: one is on the sidebar and the other in the showcase for the widget
    we just created. In our sidebar we want `div class="callout"` to wrap around the
    whole widget, we want the title to be an h3\. At the end, we''ll call our action
    on `widgets_init` and input the name of our function, `ms_init_widgets`.'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们有一个名为 `ms_init_widgets` 的函数，我们想在两个地方放置小部件：一个是在侧边栏，另一个是在我们刚刚创建的小部件的展示区域。在我们的侧边栏中，我们想要
    `div class="callout"` 包裹整个小部件，我们想要标题是 h3。最后，我们将在 `widgets_init` 上调用我们的动作并输入我们函数的名称，`ms_init_widgets`。
- en: 'Let''s save that, go back to the backend, and reload. Now under Appearance
    we can now see Widgets. If we click on that, we can see we have the Sidebar and
    the Showcase available, and if we scroll down the same page, we can see our Showcase
    Widget, which is the plugin we just created:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们保存它，回到后端，并重新加载。现在在“外观”下，我们可以看到小部件。如果我们点击它，我们可以看到我们有侧边栏和展示区域可用，并且如果我们滚动到同一页面的底部，我们可以看到我们的
    Showcase 小部件，这是我们刚刚创建的插件：
- en: '![](img/94e57734-c439-40c6-b393-2e8634345fe1.png)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
  zh: '![](img/94e57734-c439-40c6-b393-2e8634345fe1.png)'
- en: So let's go ahead and add the Showcase Widget to the showcase area. Here, we
    have our title, which we'll get rid of. For the heading we'll type `Discount Clothing`,
    and for the text we'll put some random text in there. Save that, go back. Well
    actually, the frontend is not going to change yet because we didn't implement
    it in the template, but we can see that the content has saved.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 所以让我们继续将展示小工具添加到展示区域。这里，我们有我们的标题，我们将把它去掉。对于标题，我们将输入`Discount Clothing`，对于文本，我们将放入一些随机文本。保存，返回。实际上，前端不会改变，因为我们没有在模板中实现它，但我们可以看到内容已经保存。
- en: 'What we need to do now is go into our `index.php` file and scroll down to where
    we have this showcase area. Before we actually show it we want to check to make
    sure that it''s enabled. So we''ll modify and put the following code:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要做的是进入我们的`index.php`文件，并向下滚动到我们展示区域的位置。在我们实际展示之前，我们想要检查确保它已经启用。所以我们将修改并放置以下代码：
- en: '[PRE36]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: Save that, let's go check out the frontend, and we see Discount Clothing on
    the web page, which is our title. Just to make sure that it's actually reading
    our widget, let's go and change the title to `Discount Clothings` and save it.
    Go to the frontend, reload, and we get Discount Clothings. So you know that this
    is coming from our custom plugin.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 保存后，让我们去检查前端，我们看到网页上有“Discount Clothing”，这是我们的标题。为了确保它实际上在读取我们的小工具，让我们去更改标题为“Discount
    Clothings”并保存。转到前端，重新加载，我们得到“Discount Clothings”。所以你知道这是来自我们的自定义插件。
- en: We created a plugin wherein we'll not only able to use it on this theme, but
    we can use it anywhere. Alright, so in the next section we'll take care of the
    sidebar widgets. We want the Categories section to actually come from WordPress
    categories.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 我们创建了一个插件，我们不仅可以在本主题中使用它，还可以在任何地方使用它。好吧，所以接下来我们将处理侧边栏小工具。我们希望分类部分实际上来自WordPress分类。
- en: The sidebar widget setup
  id: totrans-185
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 侧边栏小工具设置
- en: In the last section, we made a custom widget plugin for our showcase area. We'll
    now implement the sidebar.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 在最后一节中，我们为展示区域制作了一个自定义小工具插件。我们现在将实现侧边栏。
- en: We've already done half the work. If we look at `functions.php`, we already
    have registered our sidebar area.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经完成了一半的工作。如果我们查看`functions.php`文件，我们已经注册了我们的侧边栏区域。
- en: So what we need to do now is go to `index.php` and go down to where we have
    our sidebar. Before I get rid of this, let's make sure that we create our widgets.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们现在需要做的是去`index.php`文件，并向下滚动到我们的侧边栏位置。在我去掉它之前，让我们确保我们创建了我们的小工具。
- en: 'So we already have the Categories one; we don''t have to worry too much about
    that. But let''s create the sidebar heading:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们已经有了一个分类；我们不必太担心这一点。但让我们创建一个侧边栏标题：
- en: '![](img/2a3e9aa1-1307-4a24-a5c7-786023d0ef31.png)'
  id: totrans-190
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/2a3e9aa1-1307-4a24-a5c7-786023d0ef31.png)'
- en: OK, so if we go to our backend, we have Categories, we can bring that over to
    the sidebar at the right, enter the title as Categories and save that. Then we
    also want the custom text present at the bottom-left of the window; we'll put
    that right under Categories. Paste in our heading, `Sidebar heading`, and then
    our text and the button from the code. We'll save and now we can go ahead and
    replace this stuff. We remove both the `callout` divs.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，如果我们去后台，我们有分类，我们可以将其拖到右侧的侧边栏，输入标题为“分类”并保存。然后我们还想在窗口的左下角显示自定义文本；我们将它放在“分类”下面。粘贴我们的标题，“侧边栏标题”，然后是我们的文本和代码中的按钮。我们将保存，现在我们可以继续替换这些内容。我们移除两个`callout`
    div。
- en: 'We''ll then check to see if the sidebar is active, so we''ll put `if(is_active_sidebar)`
    and the position is also called sidebar:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将检查侧边栏是否激活，所以我们将放置`if(is_active_sidebar)`，位置也称为侧边栏：
- en: '[PRE37]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'In the preceding code, we''ll type in `php dynamic_sidebar` and save that.
    Let''s go to the frontend and reload. So there are our widgets, and these are
    coming from the backend:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的代码中，我们将输入`php dynamic_sidebar`并保存。让我们转到前端并重新加载。所以这些是我们的小工具，它们来自后端：
- en: '![](img/a82c5163-9df9-4a63-83a4-62b6438cba09.png)'
  id: totrans-195
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/a82c5163-9df9-4a63-83a4-62b6438cba09.png)'
- en: 'Now for the categories let''s create some. By default, it''s only going to
    show categories that have posts in them:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 现在对于分类，让我们创建一些。默认情况下，它只会显示包含帖子的分类：
- en: '![](img/19c51077-8706-4531-a6a8-f5762b2260f4.png)'
  id: totrans-197
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/19c51077-8706-4531-a6a8-f5762b2260f4.png)'
- en: 'Now these aren''t the ones we want at all. So we''ll get rid of these and then
    add Shirts, Hats, and Shoes:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 现在这些小工具根本不是我们想要的。所以我们将去掉这些，然后添加衬衫、帽子和鞋子：
- en: '![](img/ebd950a8-a66b-4bf9-b975-b6013232bc08.png)'
  id: totrans-199
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/ebd950a8-a66b-4bf9-b975-b6013232bc08.png)'
- en: If we go and reload, you still don't see them because we don't have anything
    in them.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们去重新加载，你仍然看不到它们，因为我们没有在它们里面放任何东西。
- en: 'Now just to make sure that the categories will show up, we''ll add this `Hello
    world` to all of the categories and reload them:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 现在只是为了确保分类会显示出来，我们将这个`Hello world`添加到所有分类中，并重新加载它们：
- en: '![](img/18807129-9a8d-4bf7-87e3-78b0c45c1375.png)'
  id: totrans-202
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/18807129-9a8d-4bf7-87e3-78b0c45c1375.png)'
- en: So now you can see they're showing up. That doesn't look great, so we want it
    to use some custom classes, Foundation classes. We'll create a `widgets` folder
    in the `themes` folder, and let's grab the `widgets` folder. We'll go to `wp-includes`
    | `widgets`, and grab the `class-wp-widget-categories.php` file, so we'll copy
    that and then bring it to the `widgets` in the `themes` folder.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以看到它们正在显示。这看起来不太好，所以我们希望它使用一些自定义类，即Foundation类。我们将在`themes`文件夹中创建一个`widgets`文件夹，然后让我们获取`widgets`文件夹。我们将进入`wp-includes`
    | `widgets`，并获取`class-wp-widget-categories.php`文件，所以我们将复制它，然后将其带到`themes`文件夹中的`widgets`文件夹。
- en: Then we can open that from within Sublime Text. We'll add `Custom` to the end
    of the class name and search for the `ul` tag. We will add some classes. OK, so
    `class="menu vertical"` and save it. Then we have to include that file in our
    `functions.php` file. We'll go to the top and let's type in `require_once` and
    then we'll pass in `widgets/class-wp-widget-categories.php`.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以在Sublime Text中打开它。我们将把`Custom`添加到类名末尾，并搜索`ul`标签。我们将添加一些类。好的，所以`class="menu
    vertical"`并保存它。然后我们必须在`functions.php`文件中包含该文件。我们将去到顶部，输入`require_once`，然后传递`widgets/class-wp-widget-categories.php`。
- en: '[PRE38]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'We''ll include that file now. Now we''ll have to register it. So, let''s go
    down to the bottom and create a function called `ms_register_widgets`. We will
    pass in the class name, `WP_Widget_Categories_Custom`. We''ll then add an action:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将包含该文件。现在我们必须注册它。所以，让我们向下到底部创建一个名为`ms_register_widgets`的函数。我们将传递类名，`WP_Widget_Categories_Custom`。然后我们将添加一个动作：
- en: '[PRE39]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Save it, and let''s just go and look at the frontend now. You can see that
    Categories has changed and looks a little better:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 保存它，现在让我们去看看前端。你可以看到分类已经改变，看起来好一些：
- en: '![](img/3114e8ed-6079-474e-b3b0-de8b4d235132.png)'
  id: totrans-209
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/3114e8ed-6079-474e-b3b0-de8b4d235132.png)'
- en: Now the next big thing we have to do is the main content area. We'll do that
    in the next section, but before we go there, we just want to split up the `index.php`
    file into our header and footer files. So we'll go from the very top of the file
    to the end of the `header` tag. We'll cut the code and in its place, we'll say
    `<?php get_header(); ?>`. We'll then create a file called `header.php` and paste
    that in there. We should see no change.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们接下来要做的最重要的事情是主要内容区域。我们将在下一节中做这件事，但在我们前往那里之前，我们只想将`index.php`文件拆分成我们的头部和尾部文件。所以我们将从文件的顶部到`header`标签的末尾。我们将剪切代码，并在其位置输入`<?php
    get_header(); ?>`。然后我们将创建一个名为`header.php`的文件，并将它粘贴进去。我们应该看不到任何变化。
- en: So we'll do the same thing with the footer. So in `index.php` we'll go from
    the bottom up to, let's see, till the `footer` tag, cut that out, and then we'll
    put in `get_footer`. We'll then create a file called `footer`, and paste that
    in, go back to the frontend, reload and everything's fine.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们将对页脚做同样的事情。所以在`index.php`中，我们将从底部向上到，看看，直到`footer`标签，剪切出来，然后我们将在其中放入`get_footer`。然后我们将创建一个名为`footer`的文件，并将它粘贴进去，回到前端，重新加载，一切正常。
- en: The main product post page
  id: totrans-212
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 主要产品帖子页面
- en: In this section, we'll work on this main content area, the area where the posts
    show up. Right now it's just a bunch of static HTML, so we'll go ahead and fix
    that.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将处理这个主要内容区域，即帖子显示的区域。现在它只是一堆静态HTML，所以我们将继续修复它。
- en: So let's go into the `index.php` file in the `MyShop` folder in themes. Let's
    go to `div class="products"` where we have 4-column divs to represent each product.
    We'll add a class of row on this `products` div and then get rid of all but one
    of these 4-column divs. We'll preserve the `div` tag with the black shirt details.
    We'll get rid of all the div tags and then inside the 4-column div we'll go right
    above it and create our `while` loop.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 所以让我们进入主题文件夹中`MyShop`文件夹的`index.php`文件。让我们去到`div class="products"`，这里有4列的div来表示每个产品。我们将在这个`products`div上添加一个`row`类，然后去掉除了一个之外的所有4列div。我们将保留带有黑色衬衫详情的`div`标签，去掉所有`div`标签，然后在4列div中，在其上方创建我们的`while`循环。
- en: 'Before we do the `while` loop, though, let''s make sure that there are some
    posts. So we''ll say `if(have_posts)` and then we''ll end it. Also, if there are
    some posts then we want our `while` loop:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们做`while`循环之前，让我们确保有一些帖子。所以我们将说`if(have_posts)`然后结束它。另外，如果有帖子，我们想要我们的`while`循环：
- en: '[PRE40]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'So we''ll say `php while`, and we''ll say `while(have_posts)` and then we have
    to just add the `_post`. Then we''ll do the `endwhile` on the bottom of this div.
    So we''ll say `php endwhile`. Now inside the `div` tag, we''ll have an `h3` and
    that''s going to be the title. So we can say `php the_title`. We''re also going
    to have the thumbnail, so let''s do `php` and check for the thumbnail first. We''ll
    say `if(has_post_thumbnail)`. If there''s a thumbnail, then we''ll say `php the_post_thumbnail`.
    Then, we''ll go right under the `endif` and we need our button, so it''s going
    to actually be a link formatted as a button. We''ll give is a class of button,
    and then this is going to go to `php echo the_permalink`. The text will just say
    `Details`. So let''s save that and let''s take a look:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们将输入 `php while`，然后输入 `while(have_posts)`，然后我们必须添加 `_post`。然后，我们将在这个 div
    的底部做 `endwhile`。所以我们将输入 `php endwhile`。现在在 `div` 标签内，我们将有一个 `h3`，这将作为标题。所以我们可以输入
    `php the_title`。我们还将有缩略图，所以让我们先检查缩略图。我们将输入 `if(has_post_thumbnail)`。如果有缩略图，那么我们将输入
    `php the_post_thumbnail`。然后，我们将直接在 `endif` 下方，我们需要我们的按钮，所以它实际上将是一个格式化为按钮的链接。我们将给它一个
    `button` 类，然后这将转到 `php echo the_permalink`。文本将只说 `Details`。所以让我们保存并查看一下：
- en: '![](img/fb4c461c-6d85-496c-a310-108d37d157cc.png)'
  id: totrans-218
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/fb4c461c-6d85-496c-a310-108d37d157cc.png)'
- en: 'The reason we don''t see anything here except for Hello world is that''s the
    only post we have. So we''ll go in and create some posts. Let us just log back
    in real quick. We''ll go to All Posts and you can see we only have Hello world.
    So let''s go ahead and click on Add New:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里看不到除了“Hello world”之外的内容，因为这是我们唯一的一篇帖子。所以我们将进去创建一些帖子。让我们快速重新登录。我们将转到所有帖子，你可以看到我们只有“Hello
    world”。所以让我们点击添加新帖子：
- en: '![](img/2cd376b1-07c0-4adc-bf4a-59ae3fafbaf1.png)'
  id: totrans-220
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/2cd376b1-07c0-4adc-bf4a-59ae3fafbaf1.png)'
- en: 'Now notice that there''s no area for the featured image down here, so we''ll
    have to make changes in `functions.php` file:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 现在请注意，这里没有特色图片的区域，所以我们必须在 `functions.php` 文件中做出更改：
- en: '[PRE41]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: To add that, let's go to `functions.php` and go into the `ms_theme_setup` function.
    We'll type in `add_theme_support`, and we want `post-thumbnails`. Let us now check
    the output.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，让我们转到 `functions.php` 文件并进入 `ms_theme_setup` 函数。我们将输入 `add_theme_support`，并希望有
    `post-thumbnails`。现在让我们检查输出。
- en: You can now see the Featured Image box at the bottom-right. So let's go ahead
    and click on the Featured Image box and upload a file.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在可以看到底右角的特色图片框。所以让我们点击特色图片框并上传一个文件。
- en: 'We have all these shirts. We''ll choose the blue and white one and set that
    as a featured image. Let''s call this `Blue & White Shirt`. For the description,
    we''ll get some sample text real quick:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有所有这些衬衫。我们将选择蓝色和白色的那一个，并将其设置为特色图片。让我们称这个为“蓝白衬衫”。对于描述，我们将快速获取一些示例文本：
- en: '![](img/190878db-44b7-4d24-ae31-ce951e66be90.png)'
  id: totrans-226
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/190878db-44b7-4d24-ae31-ce951e66be90.png)'
- en: We'll copy a couple of random sentences for the description and paste that in.
    We want the price as well. So we'll put that in an `h3` and say `$9.99`. We also
    want the button, so we'll give that a class of `button` and we'll just say `Buy
    Now`. It's not going to have actual e-commerce functionality. So this is what
    pretty much all of our product descriptions are going to look like. Let's copy
    that, and then let's choose the Shirts category. We can add some tags; we'll say
    `blue shirt`, `white shirt`, and `clothes`. We added those and that looks good,
    so let's go ahead and publish.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将复制一些随机的句子作为描述并粘贴进去。我们还需要价格。所以我们将它放在一个 `h3` 中，并说 `$9.99`。我们还想有按钮，所以我们将给它一个
    `button` 类，并简单地说“立即购买”。它不会具有实际的电子商务功能。所以这基本上就是我们的所有产品描述的样子。让我们复制这个，然后选择衬衫分类。我们可以添加一些标签；我们将输入
    `blue shirt`、`white shirt` 和 `clothes`。我们添加了这些，看起来不错，所以让我们发布它。
- en: 'We''ll go back to the home page and there''s our shirt. We''ll disable the
    Hello world post in the Posts by moving it to Trash. For the black shirt, we''ll
    go ahead an upload the image. We''ll grab the `shirt_black.jpg` image file, say
    `Black Shirt`, and then paste in what we had for the other one:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将回到主页，那里是我们的衬衫。我们将通过将“Hello world”帖子移动到回收站来禁用它。对于黑色衬衫，我们将上传图片。我们将获取 `shirt_black.jpg`
    图片文件，输入“Black Shirt”，然后粘贴我们之前的内容：
- en: '![](img/4bead5fc-f147-4477-b955-364bb925f77d.png)'
  id: totrans-229
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/4bead5fc-f147-4477-b955-364bb925f77d.png)'
- en: 'We''ll publish that and go ahead and add the rest of them. We went ahead and
    added the rest of the products. Let''s go to the frontend and reload, and there
    we go! It''s starting to look like a real shopping cart:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将发布它并继续添加其余的。我们添加了其余的产品。让我们转到前端并重新加载，看那里！它开始看起来像真正的购物车：
- en: '![](img/19815457-06ac-4676-bdb2-5d864895e146.png)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/19815457-06ac-4676-bdb2-5d864895e146.png)'
- en: Now if we go and click on one of the Details buttons, it takes us to the correct
    place, to the right product, but this isn't how we want it to set up. We want
    to have the description and look like a real shopping cart page.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 现在如果我们点击一个“详情”按钮，它将带我们到正确的位置，到正确的产品，但这不是我们想要的设置。我们想要描述看起来像真正的购物车页面。
- en: Another issue if we go to a regular page and not a post, like say the About
    page, is that it's formatted the same way as the main post page. So we don't want
    that either. So in the next section, we'll take care of that and get these pages
    looking correctly.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们访问一个普通页面而不是帖子，比如说是关于页面，那么它将以与主要帖子页面相同的方式格式化。所以我们也不想要这样。所以在下一个小节中，我们将处理这个问题，并确保这些页面看起来正确。
- en: Single product and single page
  id: totrans-234
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 单个产品和单页
- en: Up to this point we've done pretty well. We have our main post page or our homepage
    done, but if I click on one of these and we go to the single product page, it
    doesn't look too good. We're also missing a bunch of information.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们做得相当不错。我们已经完成了主要帖子页面或主页，但如果我点击其中一个，我们进入单个产品页面，它看起来不太好。我们还缺少很多信息。
- en: So we'll now create a new file inside the `MyShop` theme folder and save it
    as `single.php`. After creating this file if we go back to the single view and
    reload, it'll be blank because it's looking at the single file. So what we'll
    do is copy everything we have in the `index` page.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们现在将在`MyShop`主题文件夹内创建一个新文件，并将其保存为`single.php`。在创建此文件后，如果我们返回到单页视图并重新加载，它将是空的，因为它正在查看单个文件。所以我们将复制`index`页面上的所有内容。
- en: So we'll grab all of it, we'll paste it in, and get rid of the `showcase` part
    because we don't want that. We want the showcase on the homepage only. We'll put
    an `hr` tag in there.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们将抓取所有内容，将其粘贴进去，并删除`showcase`部分，因为我们不想要它。我们只想在主页上显示`showcase`。我们将在其中添加一个`hr`标签。
- en: 'We''ll do the same thing as far as checking for posts and looping through the
    post even though it''s a single post as we did in the previous section. But we''ll
    get rid of everything that''s in between the `while` loop:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将像上一节那样检查帖子并遍历帖子，即使它只有一个帖子。但我们将删除`while`循环中的所有内容：
- en: '[PRE42]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: We're just going to get that out and then we'll create a new `div` with a class.
    Let's create a div with the class of `row` and also `single-product`. Inside that,
    we'll have a 5-column div. Within this div, we'll have our `Go Back` link, and
    let's put a line break. Then we'll check for the featured image or the thumbnail.
    So we'll copy from the `index.php` file. We just want to check to see if it's
    there, and if it is then we'll display it. Then that should be it for the 5-column
    div. So that's just going to be the image.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将只删除这些内容，然后创建一个新的带有类的`div`。让我们创建一个带有`row`和`single-product`类的`div`。在这个`div`内部，我们将有一个`Go
    Back`链接，并添加一个换行符。然后我们将检查特色图片或缩略图。所以我们将从`index.php`文件中复制内容。我们只想检查它是否存在，如果存在，则显示它。然后5列`div`的内容应该就结束了。所以这只是一个图片。
- en: 'After that, we''ll have a 7-column div. This is going to have the title, which
    we''ll put in an `h2`. So we''ll say `php the_title` and right under that, we''ll
    put `the_content`. We''ll then put an `hr` tag. We want the tags and the following
    code snippet. We''re just checking for the tags, see if the function exists, and
    then spit them out:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们将有一个7列的`div`。这将包含标题，我们将将其放入一个`h2`中。所以我们将说`php the_title`，在其下方，我们将放置`the_content`。然后我们将放置一个`hr`标签。我们想要标签和随后的代码片段。我们只是在检查标签，看看函数是否存在，然后将其输出：
- en: '[PRE43]'
  id: totrans-242
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Let''s go ahead and save this. We''ll go back to our page and reload, and now
    we have a product page:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们保存这个。我们将返回到我们的页面并重新加载，现在我们有一个产品页面：
- en: '![](img/36738e39-39de-4de6-943e-dc6397255575.png)'
  id: totrans-244
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/36738e39-39de-4de6-943e-dc6397255575.png)'
- en: 'As for Go Back, right now it won''t do anything. Let''s have it go to the home
    page. We''ll say `php` and we should be able to say `echo site_url`:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 对于“返回”来说，现在它不会做任何事情。让我们让它回到主页。我们将说`php`，我们应该能够说`echo site_url`：
- en: '[PRE44]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Click on Go Back, and it brings us back to our homepage. So that looks good.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“返回”，它将带我们回到主页。所以看起来不错。
- en: Adding multiple images
  id: totrans-248
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加多个图片
- en: 'Now we also want to be able to have multiple images in here as well. Let''s
    go to our Posts in the backend, and let''s go to Blue & White Shirt. Click on
    Add Media and then Create Gallery. We''ll upload a couple more files. We have
    files in the folder as shown in the following screenshot. We''ll use those and
    create a new gallery:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们还希望在这里能够有多个图片。让我们进入后端的“文章”部分，然后点击“蓝色与白色衬衫”。点击“添加媒体”然后创建相册。我们将上传更多文件。文件夹中如以下截图所示有文件。我们将使用这些文件并创建一个新的相册：
- en: '![](img/36b36c00-b10b-4cff-987f-1d3fd22170ac.png)'
  id: totrans-250
  prefs: []
  type: TYPE_IMG
  zh: '![](img/36b36c00-b10b-4cff-987f-1d3fd22170ac.png)'
- en: For the link, we'll just say Media File and Insert gallery. Let's update, go
    back to the frontend, reload, and now we have some images for that product. That
    looks pretty much like a like a standard shopping cart details page!
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 对于链接，我们只需说“媒体文件”并插入相册。让我们更新，回到前端，重新加载，现在我们为该产品添加了一些图片。这看起来几乎就像一个标准的购物车详情页面！
- en: '![](img/9ef76707-5f6f-42ba-9ad6-8db6fb9b6ea9.png)'
  id: totrans-252
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9ef76707-5f6f-42ba-9ad6-8db6fb9b6ea9.png)'
- en: We're getting there! Now for the regular pages such as About, we obviously don't
    want this. We'll go into our folder and create a new file, `page.php`. Then if
    we go back and reload, it's going to be blank. Let's grab what we have in the
    `index` page, paste it right in there, and then we want to go down to where the
    `post` loop is.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在接近目标！现在对于常规页面，比如“关于”页面，我们显然不希望出现这种情况。我们将进入我们的文件夹并创建一个新的文件，`page.php`。然后如果我们返回并重新加载，它将是一片空白。让我们抓取我们在`index`页面上的内容，直接粘贴进去，然后我们想要找到`post`循环的位置。
- en: 'Let''s just take everything out from within the `while` loop and create a `div`
    and this will be a 12-column div, `large-12 columns`. Let''s then add an `h3`,
    which will have `the_title`. Under `the_title` let''s add the whole thumbnail
    thing. We''ll grab it from `single.php`. So if there''s an image it''ll show it,
    and then we just need `the_content`:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们只从`while`循环内部移除所有内容，创建一个`div`，这将是一个12列的`div`，`large-12 columns`。然后我们添加一个`h3`，它将包含`the_title`。在`the_title`下添加整个缩略图部分。我们将从`single.php`中获取它。如果有图片，它将显示出来，然后我们只需要`the_content`：
- en: '[PRE45]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Let''s save it, go back to About, and now we have just a standard page with
    a title and the body. It''s the same thing for Sample Page. We look pretty good
    at the moment:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们保存它，回到“关于”页面，现在我们有一个带有标题和正文的普通页面。对于“示例页面”也是如此。目前看起来相当不错：
- en: '![](img/34184408-4ad7-443f-a0c6-e5422dae557b.png)'
  id: totrans-257
  prefs: []
  type: TYPE_IMG
  zh: '![](img/34184408-4ad7-443f-a0c6-e5422dae557b.png)'
- en: 'Now if you want to have comments on your product or post pages, you could do
    that. We could go to `single.php`, go after the `div` tag, and just say `php comments_template`
    and save it. Go back, reload, and now we have our comments:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 现在如果你想在你产品或文章页面上添加评论，你可以这样做。我们可以进入`single.php`，在`div`标签之后添加，然后输入`php comments_template`并保存。返回，重新加载，现在我们有了评论：
- en: '[PRE46]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Let''s say `This is a test comment`. It will then leave comments:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 假设这是测试评论`This is a test comment`。它将留下以下评论：
- en: '![](img/c4305f0f-24b6-4b6e-8bac-25867f1986e1.png)'
  id: totrans-261
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c4305f0f-24b6-4b6e-8bac-25867f1986e1.png)'
- en: You could make your comments template look better as we have done it previously.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以像我们之前做的那样，让你的评论模板看起来更好。
- en: You may even re-brand it as reviews (product review).
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 你甚至可以将其重新命名为“评论”（产品评论）。
- en: Summary
  id: totrans-264
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: We introduced a few new aspects of WordPress theme development in this project,
    such as creating your own plugin widget and implementing the image, the logo,
    and the customizer, and so on.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，我们介绍了WordPress主题开发的一些新方面，比如创建自己的插件小工具，实现图片、标志和自定义器等。
- en: Conclusion
  id: totrans-266
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: That's the end of the book, and we have created five amazing WordPress-based
    themes. We hope that you liked the journey this book has taken you through to
    create them. We wish you all the success and hope that you continue to better
    your WordPress themes.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书就到这里结束了，我们创建了五个令人惊叹的基于WordPress的主题。我们希望你喜欢这本书带你走过的旅程，去创建它们。我们祝愿你一切顺利，并希望你能继续改进你的WordPress主题。
