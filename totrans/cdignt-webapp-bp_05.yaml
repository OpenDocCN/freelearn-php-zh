- en: Chapter 5. Creating a Newsletter Signup
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第5章 创建通讯订阅
- en: A newsletter signup is quite a handy application; you can adapt it quite easily
    to fit most applications without much fuss. It enables you to have a database
    of subscribers and manage them, editing their settings and removing them from
    the database should they choose to unsubscribe.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 通讯订阅是一个相当方便的应用程序；你可以很容易地适应它以适应大多数应用程序，而无需太多麻烦。它使你能够拥有一个订阅者数据库，并管理他们，编辑他们的设置，如果他们选择取消订阅，则从数据库中删除他们。
- en: 'In this chapter, we will cover:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖：
- en: Design and wireframes
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设计和线框图
- en: Creating a database
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建数据库
- en: Creating models
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建模型
- en: Creating views
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建视图
- en: Creating controllers
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建控制器
- en: Putting it all together
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 整合所有内容
- en: Introduction
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: In this project, we will create an application that will allow users to sign
    up for a newsletter. A form will be displayed, inviting a user to enter their
    e-mail address, and then it will define a couple of settings to submit that form.
    It will also let subscribers alter their settings and even unsubscribe entirely.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，我们将创建一个应用程序，允许用户注册订阅通讯。将显示一个表单，邀请用户输入他们的电子邮件地址，然后定义一些设置以提交该表单。它还将允许订阅者更改他们的设置，甚至完全取消订阅。
- en: 'To create this app, we will create one controller. This will handle all parts
    of the project: subscribing, editing settings, and unsubscribing.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建此应用程序，我们将创建一个控制器。这将处理项目的所有部分：订阅、编辑设置和取消订阅。
- en: We'll create a language file to store text, allowing you to have multiple language
    support should that be required.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将创建一个语言文件来存储文本，以便在需要时提供多语言支持。
- en: We'll create all the necessary view files and a model to interface with the
    database.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将创建所有必要的视图文件和一个与数据库交互的模型。
- en: However, this app, along with all the others in this book, relies on the basic
    setup we did in [Chapter 1](ch01.html "Chapter 1. Introduction and Shared Project
    Resources"), *Introduction and Shared Project Resources*. Although you can take
    large sections of the code and drop it into pretty much any app you might already
    have, please keep in mind that the setup done in the first chapter acts as a foundation
    for this chapter.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这个应用程序，以及本书中的所有其他应用程序，都依赖于我们在[第1章](ch01.html "第1章。简介和共享项目资源")中做的基本设置，*简介和共享项目资源*。虽然你可以将大量代码复制并粘贴到几乎任何你已有的应用程序中，但请记住，第一章中做的设置是这个章节的基础。
- en: So, without further ado, let's get on with it.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，无需多言，让我们开始吧。
- en: Design and wireframes
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设计和线框图
- en: As always, before we start building, we should take a look at what we plan to
    build.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 正如往常一样，在我们开始构建之前，我们应该看看我们计划构建的内容。
- en: 'First, let''s look at a brief description of our intent: we plan to build an
    app that will allow people to sign up for a database of contacts that will be
    used as a newsletter signup database. We will enable users to subscribe by registering
    their e-mail address and some options. These will be saved in a database.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们简要了解一下我们的意图：我们计划构建一个应用程序，允许人们注册一个联系人数据库，该数据库将用作通讯订阅数据库。我们将通过注册他们的电子邮件地址和一些选项来启用用户订阅。这些信息将被保存在数据库中。
- en: We will also enable people to amend their settings and even unsubscribe should
    they wish to.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将允许人们修改他们的设置，如果他们希望的话，甚至可以取消订阅。
- en: 'Anyway, to get a better idea of what''s happening, let''s take a look at the
    following site map:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，为了更好地了解正在发生的事情，让我们看一下以下网站地图：
- en: '![Design and wireframes](img/7093OS_05_01.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![设计和线框图](img/7093OS_05_01.jpg)'
- en: 'So, that''s the site map; the first thing to notice is how simple the site
    is. There are only three main areas in this project. Let''s go over each item
    and get a brief idea of what they do:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，这就是网站地图；首先要注意的是这个网站是多么简单。在这个项目中只有三个主要区域。让我们逐一了解每个项目，并简要了解它们的功能：
- en: '**Home**: This is the initial landing area. The `index()` function is responsible
    for displaying a form to the user, inviting them to subscribe.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**首页**：这是初始着陆区域。`index()` 函数负责向用户显示一个表单，邀请他们订阅。'
- en: '**Signup**: This processes the validation of the form input and passes that
    data (if validated successfully) to the `add()` model function.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**注册**：这个处理表单输入的验证，并将验证成功的数据（如果验证成功）传递给 `add()` 模型函数。'
- en: '**Settings/Unsubscribe**: This accepts the users'' e-mail address as the third
    and fourth `uri` parameters and displays a form to the subscriber. This form contains
    the settings assigned to the e-mail address supplied. The user is able to amend
    these settings and unsubscribe should they wish to.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**设置/取消订阅**：它接受用户的电子邮件地址作为第三个和第四个`uri`参数，并向订阅者显示一个表单。此表单包含分配给提供的电子邮件地址的设置。用户可以修改这些设置，如果他们希望的话，还可以取消订阅。'
- en: Now that we have a fairly good idea of the structure and form of the site, let's
    take a look at some wireframes of each page.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们对网站的结构和形式有了相当好的了解，让我们来看看每个页面的线框。
- en: The Home – index() and Signup – index() items
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 主页 – index() 和注册 – index() 项目
- en: The following screenshot shows you a wireframe from point **1** (the Home (`index()`)
    item) and point 2 (the Signup (`index()`) item) in the preceding diagram. The
    user is shown a textbox named `signup_email` in the HTML and two checkboxes named
    `signup_opt1` and `signup_opt2` in the HTML.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了前图中第**1**点（主页(`index()`)项目）和第2点（注册(`index()`)项目）的线框。用户在HTML中看到一个名为`signup_email`的文本框，以及两个名为`signup_opt1`和`signup_opt2`的复选框。
- en: Tip
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: These options are just an example; they can be removed or amended should you
    wish. They are intended to act as a filter to the newsletters. For example, you
    could include frequency options giving weekly, monthly, or quarterly options.
    When you come to send your newsletters, you would only send the subscriber a newsletter
    based on those options—as I say, you can change them, add more, or have none if
    you wish.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这些选项只是一个例子；如果你愿意，它们可以被删除或修改。它们旨在作为新闻通讯的过滤器。例如，你可以包括频率选项，提供每周、每月或每季度的选项。当你发送新闻通讯时，你只会根据这些选项向订阅者发送新闻通讯——就像我说的，你可以更改它们，添加更多，或者如果你愿意，可以不添加任何选项。
- en: The user can enter their e-mail address as shown in the following screenshot,
    apply any options they might wish to add, and submit the form. The form is submitted
    to the `signup` controller's `index()` function, which will then validate that
    data. On passing the validation, the `add()` function of `Signup_model` will create
    the record in the `signups` database table.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 用户可以像以下截图所示输入他们的电子邮件地址，应用他们可能希望添加的任何选项，并提交表单。表单将被提交到`signup`控制器的`index()`函数，该函数将验证这些数据。通过验证后，`Signup_model`的`add()`函数将在`signups`数据库表中创建记录。
- en: '![The Home – index() and Signup – index() items](img/7093OS_05_02.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![主页 – index() 和注册 – index() 项目](img/7093OS_05_02.jpg)'
- en: Settings/Unsubscribe – settings()
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置/取消订阅 – settings()
- en: The following screenshot shows you a wireframe from point **3** (the Settings/Unsubscribe
    (`settings()`) item) in the site map diagram. The user is presented with a form
    that is pre-populated with their settings.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了网站地图图中第**3**点（设置/取消订阅(`settings()`)项目）的线框。用户会看到一个预先填写了他们设置的表单。
- en: '![Settings/Unsubscribe – settings()](img/7093OS_05_03.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![设置/取消订阅 – settings()](img/7093OS_05_03.jpg)'
- en: We were able to fetch the correct details because of the URL. The user's e-mail
    address is in the URL as the third and fourth segments.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们能够获取正确的详细信息是因为URL。用户的电子邮件地址作为URL的第三和第四部分出现在其中。
- en: The page is loaded when a user clicks on an unsubscribe link—perhaps in an e-mail.
    The URL for this link would take the `http://www.domain.com/signup/settings/name/domain.com`
    format.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户点击取消订阅链接时，页面会被加载——可能是在一封电子邮件中。这个链接的URL将采用`http://www.domain.com/signup/settings/name/domain.com`格式。
- en: You'll notice that we don't use the `http://www.domain.com/signup/settings/name@domain.com`
    format.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到我们并没有使用`http://www.domain.com/signup/settings/name@domain.com`格式。
- en: In the second URL, you can see the `@` character; in the first, you can see
    that character replaced with a forward slash. In effect, we have turned the first
    part of the e-mail address (everything before `@`) into the third `uri` parameter,
    and the fourth parameter of the `uri` comes from the second part of the e-mail
    address (everything after `@`).
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在第二个URL中，你可以看到`@`字符；在第一个中，你可以看到该字符被斜杠替换。实际上，我们已经将电子邮件地址的第一部分（`@`之前的所有内容）转换成了第三个`uri`参数，而`uri`的第四个参数来自电子邮件地址的第二部分（`@`之后的所有内容）。
- en: 'For security reasons, we are unable to use the `@` character in the URL, so
    we cannot have `http://www.domain.com/signup/settings/name@domain.com` as the
    URL. This is default CodeIgniter behavior: certain characters are disallowed from
    URLs in an effort to reduce the chances of malicious scripts or commands being
    run.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 由于安全原因，我们无法在URL中使用`@`字符，因此不能有`http://www.domain.com/signup/settings/name@domain.com`这样的URL。这是CodeIgniter的默认行为：出于减少恶意脚本或命令运行机会的考虑，某些字符不允许出现在URL中。
- en: File overview
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文件概览
- en: 'This is a relatively small project, and all in all, we''re only going to create
    six files. These are as follows:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个相对较小的项目，总的来说，我们只需要创建六个文件。具体如下：
- en: '`/path/to/codeigniter/application/models/signup_model.php`: This provides read/write
    access to the database.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/path/to/codeigniter/application/models/signup_model.php`：这提供对数据库的读写访问。'
- en: '`/path/to/codeigniter/application/views/signup/signup.php`: This displays a
    small form to the user, inviting them to enter their e-mail address and to check
    two checkboxes: **Option 1** and **Option 2**. You can amend these options, adding
    more or removing them completely. The options are there to help the person who
    is signing up define what information they want from the application.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/path/to/codeigniter/application/views/signup/signup.php`：这向用户显示一个小表单，邀请他们输入他们的电子邮件地址并检查两个复选框：**选项1**和**选项2**。你可以修改这些选项，添加更多或完全删除它们。这些选项旨在帮助注册的人定义他们希望从应用程序中获得哪些信息。'
- en: '`/path/to/codeigniter/application/views/signup/settings.php`: This displays
    a small form to the user, showing their current settings with the application.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/path/to/codeigniter/application/views/signup/settings.php`：这向用户显示一个小表单，显示他们当前的应用程序设置。'
- en: '`/path/to/codeigniter/application/views/nav/top_nav.php`: This provides a navigation
    bar at the top of the page.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/path/to/codeigniter/application/views/nav/top_nav.php`：这为页面顶部提供导航栏。'
- en: '`/path/to/codeigniter/application/controllers/signup.php`: This contains all
    functions necessary to sign up new subscribers and amend their account details.
    This controller also handles any unsubscribe requests.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/path/to/codeigniter/application/controllers/signup.php`：这个文件包含所有必要的函数，用于注册新订阅者并修改他们的账户详情。此控制器还处理任何退订请求。'
- en: '`/path/to/codeigniter/application/language/english/en_admin_lang.php`: This
    provides language support for the application.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/path/to/codeigniter/application/language/english/en_admin_lang.php`：这为应用程序提供语言支持。'
- en: 'The file structure of the preceding six files is as follows:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 前六个文件的文件结构如下：
- en: '[PRE0]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Creating the database
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建数据库
- en: Okay, you should have already set up CodeIgniter and Bootstrap as described
    in [Chapter 1](ch01.html "Chapter 1. Introduction and Shared Project Resources"),
    *Introduction and Shared Project Resources*. If not, then you should know that
    the code in this chapter is specifically built with the setup from [Chapter 1](ch01.html
    "Chapter 1. Introduction and Shared Project Resources"), *Introduction and Shared
    Project Resources*, in mind. However it's not the end of the world if you haven't;
    the code can easily be applied to other situations.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，你应该已经按照[第1章](ch01.html "第1章。简介和共享项目资源")中描述的设置了CodeIgniter和Bootstrap，*简介和共享项目资源*。如果没有，那么你应该知道，本章中的代码是专门针对[第1章](ch01.html
    "第1章。简介和共享项目资源")中的设置编写的。然而，如果你没有这样做，也不是世界末日；代码可以轻松地应用于其他情况。
- en: 'First, we''ll build the database. Copy the following MySQL code to your database:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将构建数据库。将以下MySQL代码复制到你的数据库中：
- en: '[PRE1]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Right, let''s take a look at each item in the table and see what it means:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 对，让我们看一下表格中的每一项，看看它代表什么：
- en: '| Table: signups |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| 表格：注册信息 |'
- en: '| --- |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| --- |'
- en: '| **Element** | **Description** |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| **元素** | **描述** |'
- en: '| `signup_id` | This is the primary key. |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| `signup_id` | 这是主键。|'
- en: '| `signup_email` | This shows you the users'' e-mail addresses. |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| `signup_email` | 这显示了用户的电子邮件地址。|'
- en: '| `signup_opt1` | This stores the users option for option 1 in the `views/signup/signup.php`
    file. |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| `signup_opt1` | 这在`views/signup/signup.php`文件中存储用户对选项1的选择。|'
- en: '| `signup_opt2` | This stores the users option for option 2 in the `views/signup/signup.php`
    file. |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| `signup_opt2` | 这在`views/signup/signup.php`文件中存储用户对选项2的选择。|'
- en: '| `signup_active` | This is a sort of soft delete. It''s not currently supported
    in the application in this chapter, but is there should you wish to use it. |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| `signup_active` | 这是一种软删除。在本章的应用程序中目前不支持，但如果你希望使用它，可以这样做。|'
- en: '| `signup_created_at` | This is a MySQL timestamp for the date on which the
    row was created in the table. |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| `signup_created_at` | 这是表行创建日期的MySQL时间戳。|'
- en: 'We''ll also need to make amends to the `config/database.php` file, namely,
    setting the database access details, username password, and so on:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要对`config/database.php`文件进行修改，即设置数据库访问详情、用户名、密码等：
- en: 'Open the `config/database.php` file and find the following lines:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`config/database.php`文件，找到以下行：
- en: '[PRE2]'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Edit the values in the preceding lines, ensuring you substitute these values
    with ones more specific to your setup and situation—so enter your username, password,
    and so on.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑前面的值，确保用更具体于您设置和情况的值替换这些值——因此输入您的用户名、密码等。
- en: Adjusting the routes.php file
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调整routes.php文件
- en: We want to redirect the user to the `signup` controller rather than the default
    CodeIgniter `welcome` controller. To do this, we will need to amend the default
    controller setting in the `routes.php` file.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望将用户重定向到`signup`控制器而不是默认的CodeIgniter `welcome`控制器。为此，我们需要修改`routes.php`文件中的默认控制器设置。
- en: 'Open the `config/routes.php` file to edit and find the following lines (near
    the bottom of the file):'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 打开`config/routes.php`文件进行编辑，并找到以下行（文件底部附近）：
- en: '[PRE3]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'First, we need to change the default controller. Initially, in a CodeIgniter
    application the default controller is set to `welcome`. However, we don''t need
    this, instead we want the default controller to be `signup`. So, find the following
    line:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要更改默认控制器。最初，在CodeIgniter应用程序中，默认控制器设置为`welcome`。然而，我们不需要这个，我们希望默认控制器是`signup`。所以，找到以下行：
- en: '[PRE4]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Replace the preceding line with the following:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 将前面的行替换为以下内容：
- en: '[PRE5]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Creating the model
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建模型
- en: There is only one model in this project—`signup_model.php` that contains functions
    that are specific to adding a subscriber to the database, amending their settings
    and processing the removal of a subscriber should they unsubscribe.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在此项目中只有一个模型——`signup_model.php`，它包含将订阅者添加到数据库、修改其设置以及处理订阅者取消订阅时移除订阅者的特定功能。
- en: This is our one and only model for this project. Let's briefly go over each
    function in it to give us a general idea of what it does, and then we will go
    into more details of the code.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 这是本项目唯一的模型。让我们简要地回顾一下其中的每个函数，以了解其一般功能，然后我们将更详细地讨论代码。
- en: 'There are four main functions in this model, which are as follows:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在此模型中有四个主要功能，具体如下：
- en: '`add()`: This accepts one argument: the `$data` array sent by the `signup`
    controller''s `index()` function when a user successfully submits the form in
    `views/signup/signup.php`. The `add()` function takes the array and using the
    `$this->db->insert()`CodeIgniter Active Record function, it inserts the user''s
    signup data in the `signups` table.'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`add()`: 这个函数接受一个参数：当用户在`views/signup/signup.php`中的表单提交成功时，由`signup`控制器的`index()`函数发送的`$data`数组。`add()`函数接收数组，并使用`$this->db->insert()`CodeIgniter
    Active Record函数，将用户的注册数据插入到`signups`表中。'
- en: '`edit()`: This accepts one argument: the `$data` array sent by the `signup`
    controller''s `settings()` function. This function is called only if the user
    is editing their settings rather than unsubscribing. The `edit()` function will
    update a user''s profile.'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`edit()`: 这个函数接受一个参数：由`signup`控制器的`settings()`函数发送的`$data`数组。此函数仅在用户编辑设置而不是取消订阅时调用。`edit()`函数将更新用户的个人资料。'
- en: '`delete()`: This accepts one argument: the `$data` array sent by the `signup`
    controller''s `settings()` function. This function is called only if the user
    is unsubscribing rather than editing their settings. The function will return
    `true` if the delete was successful and `false` if not.'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`delete()`: 这个函数接受一个参数：由`signup`控制器的`settings()`函数发送的`$data`数组。此函数仅在用户取消订阅而不是编辑设置时调用。如果删除成功，函数将返回`true`，如果不成功，则返回`false`。'
- en: '`get_settings()`: This accepts one argument: the `$data` array sent by the
    `signup` controller''s `settings()` function. The settings form needs to be populated
    with the correct data for the required e-mail address, and `get_settings()` supplies
    this information.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_settings()`: 这个函数接受一个参数：由`signup`控制器的`settings()`函数发送的`$data`数组。设置表单需要用正确的数据填充所需的电子邮件地址，而`get_settings()`提供这些信息。'
- en: That's a quick overview, so let's create the model and discuss how it functions.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这只是一个简要概述，所以让我们创建模型并讨论其功能。
- en: 'Create the `/path/to/codeigniter/application/models/signup_model.php` file
    and add the following code to it:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 创建`/path/to/codeigniter/application/models/signup_model.php`文件，并将以下代码添加到其中：
- en: '[PRE6]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The following code snippet adds a subscriber to the database using the `$this->db->insert()`
    CodeIgniter Active Record function. This function is called by the `signup` controller''s
    `index()` function. It accepts an array called `$data`; this array is the validated
    form input submitted by the user in the `views/signup/signup.php` form. On successfully
    writing to the database, it will return `true`; it will return `false` if an error
    occurs:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段使用 `$this->db->insert()` CodeIgniter Active Record 函数将订阅者添加到数据库中。这个函数由
    `signup` 控制器的 `index()` 函数调用。它接受一个名为 `$data` 的数组；这个数组是用户在 `views/signup/signup.php`
    表单中提交的经过验证的表单输入。在成功写入数据库的情况下，它将返回 `true`；如果发生错误，它将返回 `false`：
- en: '[PRE7]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The following code snippet performs an update procedure on the `signups` database
    table using the `$this->db->update()` CodeIgniter Active Record function. It accepts
    an array called `$data`. This array is the validated form input submitted by the
    user in the `views/signup/settings.php` form. On a successful update, it will
    return `true`; it will return `false` if an error occurs:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段使用 `$this->db->update()` CodeIgniter Active Record 函数在 `signups` 数据库表上执行更新操作。它接受一个名为
    `$data` 的数组。这个数组是用户在 `views/signup/settings.php` 表单中提交的经过验证的表单输入。在成功更新的情况下，它将返回
    `true`；如果发生错误，它将返回 `false`：
- en: '[PRE8]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The following code snippet performs a delete procedure on the `signups` database
    table using the `$this->db->delete()` CodeIgniter Active Record function. It accepts
    an array called `$data`. This array is the validated form input submitted by the
    user in the `views/signup/settings.php` form and contains the subscribers'' e-mail
    addresses only. On a successful deletion, it will return `true`; it will return
    `false` if an error occurs:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段使用 `$this->db->delete()` CodeIgniter Active Record 函数在 `signups` 数据库表上执行删除操作。它接受一个名为
    `$data` 的数组。这个数组是用户在 `views/signup/settings.php` 表单中提交的经过验证的表单输入，只包含订阅者的电子邮件地址。在成功删除的情况下，它将返回
    `true`；如果发生错误，它将返回 `false`：
- en: '[PRE9]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The following code snippet performs a select procedure on the `signups` database
    table using the `$this->db->get()` CodeIgniter Active Record function. It accepts
    a variable called `$email`. This is the formatted e-mail address of the subscriber.
    This function returns a subscriber''s database record. It is required by the `signup`
    controller''s `settings()` function in order to pre-populate form items. On a
    successful selection, it will return a database result object; it will return
    `false` if an error occurs:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段使用 `$this->db->get()` CodeIgniter Active Record 函数在 `signups` 数据库表上执行选择操作。它接受一个名为
    `$email` 的变量。这是订阅者的格式化电子邮件地址。此函数返回一个订阅者的数据库记录。这是 `signup` 控制器的 `settings()` 函数所必需的，以便预先填充表单项。在成功选择的情况下，它将返回一个数据库结果对象；如果发生错误，它将返回
    `false`：
- en: '[PRE10]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: As you can see, the model is fairly straightforward and concise, so let's now
    take a look at the views.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，模型相当直接且简洁，因此现在让我们看看视图。
- en: Creating the views
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建视图
- en: 'There are three views in this project, and these are as follows:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，有三个视图，具体如下：
- en: '`/path/to/codeigniter/application/views/signup/signup.php`: This displays a
    form to the user, allowing them to sign up their e-mail address to the project.'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/path/to/codeigniter/application/views/signup/signup.php`：此文件向用户显示一个表单，允许他们将自己的电子邮件地址注册到项目中。'
- en: '`/path/to/codeigniter/application/views/signup/settings.php`: This displays
    a form to the user, allowing them to amend their preferences and also unsubscribe
    should they wish.'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/path/to/codeigniter/application/views/signup/settings.php`：此文件向用户显示一个表单，允许他们修改偏好设置，如果他们愿意，还可以取消订阅。'
- en: '`/path/to/codeigniter/application/views/nav/top_nav.php`: This displays the
    top-level menu. In this project, this file is very simple, and as such it just
    contains a link to return to the `index()` function.'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/path/to/codeigniter/application/views/nav/top_nav.php`：此文件显示顶层菜单。在这个项目中，这个文件非常简单，因此它只包含一个链接，用于返回到
    `index()` 函数。'
- en: 'This is a good overview of the views. Now let''s go over each one, build the
    code, and discuss how they function:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 这是对观点的良好概述。现在让我们逐一过目，构建代码，并讨论它们的功能：
- en: 'Create the `/path/to/codeigniter/application/views/signup/signup.php` file
    and add the following code to it:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建 `/path/to/codeigniter/application/views/signup/signup.php` 文件，并向其中添加以下代码：
- en: '[PRE11]'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The preceding HTML contains the form to enable a user to sign up to the application.
    The form also displays any validation errors.
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 前面的 HTML 包含一个表单，允许用户注册到应用程序。表单还显示了任何验证错误。
- en: 'Create the `/path/to/codeigniter/application/views/signup/settings.php` file
    and add the following code to it:'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建 `/path/to/codeigniter/application/views/signup/settings.php` 文件，并向其中添加以下代码：
- en: '[PRE12]'
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The preceding HTML contains the form to enable the subscriber to edit their
    settings or unsubscribe completely. The data for the form is fetched by the `get_settings()`
    function of `signup_model`.
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 前面的 HTML 包含一个表单，允许订阅者编辑他们的设置或完全取消订阅。表单的数据是通过 `signup_model` 的 `get_settings()`
    函数获取的。
- en: 'Create the `/path/to/codeigniter/application/views/nav/top_nav.php` file and
    add the following code to it:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建 `/path/to/codeigniter/application/views/nav/top_nav.php` 文件，并向其中添加以下代码：
- en: '[PRE13]'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Creating the controllers
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建控制器
- en: We're going to create only one controller in this project, which is `/path/to/codeigniter/application/controllers/signup.php`.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本项目创建仅一个控制器，即 `/path/to/codeigniter/application/controllers/signup.php`。
- en: Let's go over this controller now, look at the code, and discuss how it functions.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们现在来审查这个控制器，看看代码，并讨论它是如何工作的。
- en: 'Create the `/path/to/codeigniter/application/controllers/signup.php` file and
    add the following code to it:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 `/path/to/codeigniter/application/controllers/signup.php` 文件，并向其中添加以下代码：
- en: '[PRE14]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'This function creates a subscriber in the database, so the first thing we need
    to do is set the form validation rules:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数在数据库中创建一个订阅者，因此我们首先需要做的是设置表单验证规则：
- en: '[PRE15]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'If the form was submitted with errors, or if this is the first load instance
    of the function, then we will arrive at the following code. We define the following
    settings for the form elements in the `views/signup/signup.php` file:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 如果表单提交时出现错误，或者这是函数的第一次加载实例，那么我们将到达以下代码。我们在 `views/signup/signup.php` 文件中为表单元素定义以下设置：
- en: '[PRE16]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'However, if there were no errors with the validation, we will arrive at the
    following code. We package the data from the form elements into an array called
    `$data` and send it to the `add()` function of `signup_model`. This will perform
    the task of writing the subscriber to the database:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果没有验证错误，我们将到达以下代码。我们将表单元素的从数据打包到一个名为 `$data` 的数组中，并将其发送到 `signup_model`
    的 `add()` 函数。这将执行将订阅者写入数据库的任务：
- en: '[PRE17]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The following function is responsible for updating a subscriber''s settings,
    or handling an unsubscribe request. Before it can do either of these things, it
    needs the users'' e-mail address. The e-mail address is supplied when a subscriber
    clicks on a link (such as an unsubscribe link in an e-mail):'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 以下函数负责更新订阅者的设置或处理取消订阅请求。在它能够执行这两者中的任何一项之前，它需要用户的电子邮件地址。电子邮件地址是在订阅者点击链接（例如电子邮件中的取消订阅链接）时提供的：
- en: '[PRE18]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'If validation was unsuccessful, or the form is being accessed for the first
    time, then we arrive at the following code. The first thing we try to do is get
    the details of the subscriber so that we can display the correct settings in the
    form. We pass the third and fourth parameters of the `uri` segment to the `get_settings()`
    function of `signup_model`. We join them by writing the `@` symbol between the
    two `uri` segments, remembering that we cannot accept `@` symbols in the URL for
    security reasons. This can be done as follows:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 如果验证失败，或者表单是第一次被访问，那么我们将到达以下代码。我们首先尝试获取订阅者的详细信息，以便我们可以在表单中显示正确的设置。我们将 `uri`
    段落的第三个和第四个参数传递给 `signup_model` 的 `get_settings()` 函数。我们通过在两个 `uri` 段落之间写入 `@`
    符号来连接它们，记住出于安全原因我们不能在 URL 中接受 `@` 符号。这可以按以下方式完成：
- en: '[PRE19]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: The `get_settings()` function of `signup_model` will look in the `signups` table
    and return a result object.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '`signup_model` 的 `get_settings()` 函数将在 `signups` 表中查找并返回一个结果对象。'
- en: 'First, we test to see whether the number of records found is exactly `1`. Anything
    else and there''s a problem: either more than one record exists in the database
    belonging to the same e-mail address, or no e-mail address was found at all, in
    which case we redirect the users to the `index()` function.'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们测试找到的记录数是否正好是 `1`。如果不是这样，就存在问题：要么数据库中存在属于同一电子邮件地址的多个记录，要么根本找不到电子邮件地址，在这种情况下，我们将用户重定向到
    `index()` 函数。
- en: 'Anyway, if exactly one record was found, we then loop over the result object
    with a `foreach` loop and put the values that we will use to populate the form
    options into local variables: `$signup_opt1` and `$signup_opt2`.'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，如果正好找到一条记录，我们然后使用 `foreach` 循环遍历结果对象，并将我们将用于填充表单选项的值放入局部变量中：`$signup_opt1`
    和 `$signup_opt2`。
- en: 'We then define the settings for our form elements, passing `$signup_email`,
    `$signup_opt1` and `$signup_opt2` as well as settings for the unsubscribe checkbox
    to them:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们为我们的表单元素定义设置，将 `$signup_email`、`$signup_opt1` 和 `$signup_opt2` 以及取消订阅复选框的设置传递给它们：
- en: '[PRE20]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'These form element settings are then sent to the `views/signup/settings.php`
    file:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 这些表单元素设置随后被发送到`views/signup/settings.php`文件：
- en: '[PRE21]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'If the form is submitted without errors, then we arrive at the following code.
    The first thing we do is work out whether the user has indicated that they wish
    to unsubscribe. This is done by looking for the value of the `signup_unsub` form
    checkbox. If this has been checked by the user, then there is no need to update
    their settings. Instead, we delete the user by calling the `delete()` function
    of `signup_model`:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 如果表单提交没有错误，那么我们将到达以下代码。我们首先做的是确定用户是否表示他们希望取消订阅。这是通过查找`signup_unsub`表单复选框的值来完成的。如果用户已经勾选了这个复选框，那么就没有必要更新他们的设置。相反，我们通过调用`signup_model`的`delete()`函数来删除用户：
- en: '[PRE22]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'However, if they haven''t indicated that they want to unsubscribe by checking
    the form checkbox named `signup_unsub`, then we would want to update their details.
    We package up the values of the form inputs into an array called `$data` and make
    it ready to write to the database using the `edit()` function of `signup_model`:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果他们没有通过勾选名为`signup_unsub`的表单复选框来表示他们想要取消订阅，那么我们就会想要更新他们的详细信息。我们将表单输入的值打包到一个名为`$data`的数组中，并使用`signup_model`的`edit()`函数将其准备好写入数据库：
- en: '[PRE23]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: So, that was the `signup` controller. As you saw, it's a small, concise script
    that I'm sure you will be able to amend and extend as you wish.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，这就是`signup`控制器。正如你所看到的，它是一个小巧、简洁的脚本，我相信你将能够按照你的意愿对其进行修改和扩展。
- en: Creating the language file
  id: totrans-138
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建语言文件
- en: As with all the projects in this book, we're making use of the language file
    to serve text to users. This way, you can enable multiple region/multiple language
    support. Let's create the language file.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 与本书中的所有项目一样，我们正在使用语言文件来向用户提供文本。这样，你可以启用多区域/多语言支持。让我们创建语言文件。
- en: 'Create the `/path/to/codeigniter/application/language/english/en_admin_lang.php`
    file and add the following code to it:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 创建`/path/to/codeigniter/application/language/english/en_admin_lang.php`文件，并向其中添加以下代码：
- en: '[PRE24]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Putting it all together
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将所有这些放在一起
- en: Okay, here are a few examples that will help put everything together.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，这里有一些示例，将有助于将所有这些放在一起。
- en: User subscribes
  id: totrans-144
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用户订阅
- en: 'The sequence of events taking place when a user subscribes are as follows:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 用户订阅时发生的事件顺序如下：
- en: The user visits the application and CodeIgniter routes them to the `signup`
    controller.
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户访问应用程序，CodeIgniter将他们路由到`signup`控制器。
- en: The `index()` function in the `signup` controller displays the `views/signup/signup.php`
    view file.
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`signup`控制器中的`index()`函数显示`views/signup/signup.php`视图文件。'
- en: The user views the form in the browser, enters their e-mail address, and submits
    the form with no validation errors.
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户在浏览器中查看表单，输入他们的电子邮件地址，并且没有验证错误地提交表单。
- en: The `index()` function packages the users' input into an array called `$data`
    and passes it to the `add()` function of `Signup_model`.
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`index()`函数将用户的输入打包到一个名为`$data`的数组中，并将其传递给`Signup_model`的`add()`函数。'
- en: The `add()` function performs an Active Record insert to write the users' subscription
    to the `signups` database table.
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`add()`函数执行Active Record插入，将用户的订阅写入`signups`数据库表。'
- en: User updates their settings
  id: totrans-151
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用户更新他们的设置
- en: 'The following events take place when a user wants to update settings:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户想要更新设置时，以下事件会发生：
- en: The user clicks on a link in an e-mail they have been sent.
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户点击他们收到的电子邮件中的链接。
- en: The URL routes them to the `signup` controller's `settings()` function.
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: URL将它们路由到`signup`控制器的`settings()`函数。
- en: The `settings()` function takes the third and fourth parameters of the URL,
    joins the third and fourth segments with an `@` character, and passes this "rebuilt"
    e-mail address to the `signup` controller's `get_settings()` function.
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`settings()`函数将URL的第三和第四个参数合并，使用`@`字符连接第三和第四部分，并将这个“重建”的电子邮件地址传递给`signup`控制器的`get_settings()`函数。'
- en: The `get_settings()` function looks in the database for a matching record, and
    if exactly one record is found, it returns it as a database result object to the
    `settings()` function.
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`get_settings()`函数在数据库中查找匹配的记录，如果找到正好一条记录，它将作为数据库结果对象返回给`settings()`函数。'
- en: Now that the `settings()` function has a matching record, it takes various items
    from the result object and assigns them to local variables.
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在`settings()`函数有了匹配的记录，它从结果对象中取出各种项目，并将它们分配给局部变量。
- en: These are then used to prepopulate the form items in the `views/signup/settings.php`
    file.
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这些随后被用来预填充`views/signup/settings.php`文件中的表单项。
- en: The user sees the form displayed with whichever settings the records are filled
    in.
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户看到显示的表单，其中包含记录中填写的任何设置。
- en: The user wishes to check **Option 1** but leave **Option 2** unchecked. The
    user clicks on the checkbox of **Option 1**.
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户希望勾选**选项1**但保持**选项2**未勾选。用户点击了**选项1**的复选框。
- en: The user submits the form, the form is submitted to the `signup` controller's
    `settings()` function, and is validated successfully with no errors.
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户提交表单，表单提交到`signup`控制器的`settings()`函数，并且没有错误地成功验证。
- en: As there are no errors, the second part of the validation test (the rest) is
    run.
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于没有错误，验证测试的第二部分（其余部分）被运行。
- en: The value of the form element `signup_unsub` is checked. As the user is not
    unsubscribing, this will not equal `1`.
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查表单元素`signup_unsub`的值。由于用户没有取消订阅，这不会等于`1`。
- en: As `signup_unsub` does not equal `1`, the `edit()` function of `signup_model`
    is passed an array called `$data`. This `$data` array contains the contents of
    the posted form data.
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于`signup_unsub`不等于`1`，`signup_model`的`edit()`函数接收一个名为`$data`的数组。这个`$data`数组包含已提交表单的数据内容。
- en: The `edit()` function then performs a CodeIgniter Active Record update operation
    on the `$data` array.
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后`edit()`函数对`$data`数组执行CodeIgniter Active Record更新操作。
- en: User unsubscribes
  id: totrans-166
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用户取消订阅
- en: 'When a user wants to unsubscribe, the following events take place:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户想要取消订阅时，以下事件发生：
- en: The user clicks on a link in an e-mail they have been sent.
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户点击他们收到的电子邮件中的一个链接。
- en: The URL routes them to the `signup` controller's `settings()` function.
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: URL将他们路由到`signup`控制器的`settings()`函数。
- en: The `settings()` function takes the third and fourth parameters of the URL,
    joins the third and fourth segments with an `@` character, and passes this "rebuilt"
    e-mail address to the `signup` controller's `get_settings()` function.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`settings()`函数获取URL的第三和第四个参数，使用`@`字符连接第三和第四个段，并将这个“重建”的电子邮件地址传递给`signup`控制器的`get_settings()`函数。'
- en: The `get_settings()` function looks in the database for a matching record, and
    if exactly one record is found, it returns it as a database result object to the
    `settings()` function.
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`get_settings()`函数在数据库中查找匹配的记录，如果找到正好一条记录，它将作为数据库结果对象返回给`settings()`函数。'
- en: Now that the `settings()` function has a matching record, it takes various items
    from the result object and assigns them to local variables.
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在`settings()`函数有一个匹配的记录，它从结果对象中取出各种项目并将它们分配给局部变量。
- en: These are then used to pre-populate the form items in the `views/signup/settings.php`
    file.
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这些随后被用于在`views/signup/settings.php`文件中预填充表单项。
- en: The user sees the form displayed with whichever settings the records are filled
    in.
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户看到显示的表单，其中包含记录中填写的任何设置。
- en: The user wishes to unsubscribe from the service.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户希望取消该服务的订阅。
- en: The user checks Unsubscribe and submits the form. The form is submitted to the
    `signup` controller's `settings()` function and is validated successfully with
    no errors.
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户勾选取消订阅并提交表单。表单提交到`signup`控制器的`settings()`函数，并且没有错误地成功验证。
- en: As there are no errors, the second part of the validation test (the rest) is
    run.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于没有错误，验证测试的第二部分（其余部分）被运行。
- en: The value of the form element `signup_unsub` is checked. This equals `1` as
    the user is unsubscribing.
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查表单元素`signup_unsub`的值。由于用户正在取消订阅，这等于`1`。
- en: As `signup_unsub` equals `1`, the `delete()` function of `signup_model` is passed
    an array called `$data`. This `$data` array contains the subscribers' e-mail address.
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于`signup_unsub`等于`1`，`signup_model`的`delete()`函数接收一个名为`$data`的数组。这个`$data`数组包含订阅者的电子邮件地址。
- en: The `delete()` function then performs a CodeIgniter Active Record delete operation
    on the `$data` array.
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后`delete()`函数对`$data`数组执行CodeIgniter Active Record删除操作。
- en: Summary
  id: totrans-181
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: 'In this project, you''ll have the foundations of a useful signup application.
    As always, there are a few things you can do to expand upon the functionality,
    which do are as follows:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，你将拥有一个有用的注册应用程序的基础。像往常一样，有一些事情你可以做来扩展功能，具体如下：
- en: Add more options that a user might apply to their subscription
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加更多用户可能应用于其订阅的选项
- en: Add HTML/plaintext settings (and only send them what they've asked for)
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加HTML/纯文本设置（并且只发送他们所请求的内容）
- en: 'Add a signup sunset clause: allow someone to sign up for a certain time and
    once that time is arrived at, stop sending them newsletters.'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加一个注册日落条款：允许某人在特定时间内注册，一旦到达该时间，就停止向他们发送新闻通讯。
