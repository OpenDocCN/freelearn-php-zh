- en: '17'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Working with Moodle Admin Tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Moodle ships with several administration tools that have not been allocated
    to a particular topic; some are not even directly accessible via the familiar
    admin web interface.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 17.1 – Moodle admin tools ](img/Figure_17.01_B18779.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 17.1 – Moodle admin tools
  prefs: []
  type: TYPE_NORMAL
- en: 'We have grouped the admin tools into the following categories, each presented
    in a separate section:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Site admin presets**: Presets allow you to create backups of site settings
    that can be rolled back in case something goes wrong.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Database tools**: These tools let you apply specific database actions. In
    addition to the tools part of Moodle core, we will cover a useful external tool
    called **Adminer** that lets you manage the underlying database directly from
    within Moodle.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Command Line Interface (CLI)**: The CLI is a built-in mechanism that allows
    us to automate administrative processes via the command line or shell scripts.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Moosh**: A powerful alternative to the CLI, Moosh is the third-party Moodle
    Shell. We will learn how Moosh works and provide some practical examples.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Before we cover these admin tools in detail, let’s explore how they are organized
    in Moodle.
  prefs: []
  type: TYPE_NORMAL
- en: Exploring Moodle admin tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Moodle’s classification of what constitutes an admin tool is a little vague.
    When you navigate to **Site administration** | **Plugins** | **Admin tools** |
    **Manage admin tools**, a long list of plugins is shown:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 17.2 – Moodle admin tools ](img/Figure_17.02_B18779.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 17.2 – Moodle admin tools
  prefs: []
  type: TYPE_NORMAL
- en: 'We can group admin tools into the following categories:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Conversion tools**: These tools are usually only applied once to migrate
    a feature from an old state to its current counterpart. Examples are the **HTTPS
    conversion tool** (see [*Chapter 13*](B18779_13.xhtml#_idTextAnchor251), *Ensuring
    Moodle Security*) and **Multilang upgrade** (see [*Chapter 10*](B18779_10.xhtml#_idTextAnchor204),
    *Configuring* *Technical Features*).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Database tools**: These are tools to work with Moodle’s underlying database.
    We have dedicated an entire section to database tools in this chapter.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Development tools**: These tools are aimed at Moodle programmers – for instance,
    **Acceptance testing** (Behat), **PHPUnit tests**, and the **XMLDB****editor**.
    You came across a development tool in [*Chapter 15*](B18779_15.xhtml#_idTextAnchor289),
    *Optimizing Moodle Performance*, when we dealt with profiling and used the course
    generator. We are not going to deal with development tools here.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Design tools**: These tools are aimed at theme designers – for example, the
    **Template library** or the **UI component library**. We are not going to deal
    with design tools, either.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Standard Moodle features**: Some admin features have been implemented as
    admin tools, such as the recycling bin, learning plans, or the task scheduler.
    This way, they could be uninstalled from Moodle if not needed, though this is
    not recommended.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Many tools of the first four categories are hidden from the Moodle admin web
    interface and can only be accessed by calling them directly via the URL: `<yoursite>/admin/tool/<tool>`.
    All core admin tools are located in subdirectories in `$CFG->dirroot/admin/tool`.
    For details of mostly non-standard admin tools, refer to [docs.moodle.org/en/Admin_tools](http://docs.moodle.org/en/Admin_tools).'
  prefs: []
  type: TYPE_NORMAL
- en: We are not covering any admin tools classified as standard Moodle features,
    since they are either dealt with elsewhere in the book or are irrelevant in the
    administrator context. However, one exception are site admin presets, the only
    feature that does not belong to any category in the site administration menu.
    So, let’s get started with our first admin tool.
  prefs: []
  type: TYPE_NORMAL
- en: Site admin presets
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Presets allow you to create backups of site settings that can then be restored.
    There are several use cases where this facility comes in handy:'
  prefs: []
  type: TYPE_NORMAL
- en: Experimenting with a set of system settings and rolling back in case they didn’t
    work
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Applying the same set of configurations to multiple sites
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Migrating one Moodle site’s settings to another – for instance, your test instance
    to your production system
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The workflow of Moodle admin presets is illustrated in the following diagram
    – a straightforward but very powerful tool:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 17.3 – Site admin presets workflow ](img/Figure_17.03_B18779.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 17.3 – Site admin presets workflow
  prefs: []
  type: TYPE_NORMAL
- en: You find the **Site admin presets** tool in the **General** section of the **Site
    administration** area. It is the only Moodle feature that has not been placed
    in a menu category, hence its coverage in this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Moodle ships with two preconfigured presets that have been labelled **Starter**
    and **Full**. Details about its content are provided in the respective descriptions,
    as shown in the following screenshot, which contains a third preset that we will
    create in this section.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 17.4 – Site admin presets ](img/Figure_17.04_B18779.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 17.4 – Site admin presets
  prefs: []
  type: TYPE_NORMAL
- en: 'To make your first preset, click the **Create preset** button, and then you
    have to provide a name, an optional description, and an author, which is pre-populated
    with your name:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 17.5 – Creating a site admin preset ](img/Figure_17.05_B18779.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 17.5 – Creating a site admin preset
  prefs: []
  type: TYPE_NORMAL
- en: The **Include settings with passwords** option will add any sensitive information
    – passwords, keys, and IPs – of your site to the preset, so ensure that this will
    only be applied internally. You can view and modify the list of fields to be excluded
    in the **Settings with password** field in **Site administration** | **General**
    | **Security** | **Site** **security settings**.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the preset has been created, it will appear in the list alongside the
    two default presets. The following actions are available for each preset:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Review settings and apply**: Details about the preset are shown, which include
    information on who created the preset (author), when (date and time), where (site
    URL), and on which Moodle version. As soon as you apply the admin preset, any
    site settings that differ from the preset will be applied, as shown in the following
    list of setting changes.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 17.6 – Applying a site admin preset ](img/Figure_17.06_B18779.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 17.6 – Applying a site admin preset
  prefs: []
  type: TYPE_NORMAL
- en: '**Download**: Moodle exports the settings as an XML file. You can load an exported
    file via the **Import** **preset** button.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Delete**: Remove the preset permanently. The two default presets cannot be
    deleted.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Show version history**: If you change your mind after applying a preset,
    you can undo the setting changes via this action.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Site admin presets is a powerful tool during setup, maintenance, and when experimenting
    with new features.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: It is good practice to store the presets of your production site as part of
    your system documentation.
  prefs: []
  type: TYPE_NORMAL
- en: Admin presets deal with your site’s configuration, stored in the underlying
    database. A number of dedicated database tools are discussed in the following
    section.
  prefs: []
  type: TYPE_NORMAL
- en: Database tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Moodle’s database tools transfer databases from one server to another, perform
    search-and-replace operations on text strings in the entire database, and let
    you view or change any data in the database itself.
  prefs: []
  type: TYPE_NORMAL
- en: Transferring your Moodle database
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you have to move the database of a Moodle instance from one server to another
    or migrate to another Moodle system, you have two broad options. You can either
    create a database dump manually (or via the Adminer tool, which is covered later)
    or use the built-in **database** **transfer** facility.
  prefs: []
  type: TYPE_NORMAL
- en: The database migration tool is available at `<yoursite>/admin/tool/dbtransfer`.
    At the time of writing, the feature can also be accessed via **Site administration**
    | **Development** | **Experimental** | **Database migration**. As the category
    name suggests, the tool is experimental and might make it into core or might disappear
    again from the admin interface in future releases.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 17.7 – Database transfer ](img/Figure_17.07_B18779.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 17.7 – Database transfer
  prefs: []
  type: TYPE_NORMAL
- en: You must provide the details of the database to which the content of the current
    database will be copied. These settings are identical to the ones applied during
    installation (see [*Chapter 1*](B18779_01.xhtml#_idTextAnchor020), *Installing
    Moodle*).
  prefs: []
  type: TYPE_NORMAL
- en: You further have the `$CFG->dataroot/climaintenance.xhtml` file afterwards manually
    or via **Site administration** | **Server** | **Server** | **Maintenance mode**.
  prefs: []
  type: TYPE_NORMAL
- en: Searching and replacing database content
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A tool related to the database migration facility is `<yoursite>/admin/tool/replace`.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 17.8 – Database search and replace ](img/Figure_17.08_B18779.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 17.8 – Database search and replace
  prefs: []
  type: TYPE_NORMAL
- en: The last option, labeled **I understand the risks of this operation**, indicates
    the potential risk of the execution – unless you are 100% certain that the replacements
    will not have any impact on the system, you had better stay away from it. Once
    completed, the script will display all executed SQL queries.
  prefs: []
  type: TYPE_NORMAL
- en: Moodle Adminer
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Adminer is an open source tool to administer different types of SQL databases.
    A wrapper has been created that lets you access the tool directly from within
    Moodle. Moodle Adminer must be installed in your `local` plugins section (see
    [*Chapter 8*](B18779_08.xhtml#_idTextAnchor168), *Understanding Moodle Plugins*
    for details). You will find the installer at [moodle.org/plugins/local_adminer](http://moodle.org/plugins/local_adminer).
  prefs: []
  type: TYPE_NORMAL
- en: 'Once installed, you access the database management console via **Site administration**
    | **Server** | **Moodle Adminer**, which opens the tool in a modal window:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 17.9 – The Moodle Adminer interface ](img/Figure_17.09_B18779.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 17.9 – The Moodle Adminer interface
  prefs: []
  type: TYPE_NORMAL
- en: By default, you must select a database. However, you can skip this step if you
    enable the **Start adminer with current database** setting in **Site administration**
    | **Plugins** | **Local plugins** | **Moodle Adminer**.
  prefs: []
  type: TYPE_NORMAL
- en: Once a (Moodle) database has been opened, you can perform operations (such as
    querying, altering data, or creating an SQL dump) without any SQL knowledge.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: Ensure you only change data if you know what you are doing; otherwise, you might
    introduce database inconsistencies, and Moodle will not work as expected.
  prefs: []
  type: TYPE_NORMAL
- en: We will not go into using Adminer in detail since this is beyond the scope of
    this chapter. You can find all the information you are looking for at [www.adminer.org](http://www.adminer.org).
  prefs: []
  type: TYPE_NORMAL
- en: This concludes the database tools section, where we covered database transfer,
    database search and replace, and Moodle Adminer. We ignored one tool that only
    applies to MySQL/MariaDB and is only needed when migrating a database still using
    the legacy MyISAM format. This tool can be found at `<yoursite>/admin/tool/innodb`,
    which converts any tables from MyISAM to the InnoDB storage engine.
  prefs: []
  type: TYPE_NORMAL
- en: There are also CLI scripts supporting database-related operations, such as `mysql_engine`
    and `check_database_schema`. What’s a CLI script? Find out in the following section.
  prefs: []
  type: TYPE_NORMAL
- en: CLI
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We already encountered the CLI selectively throughout the book and during [*Chapter
    1*](B18779_01.xhtml#_idTextAnchor020), *Installing Moodle*, when we dealt with
    Moodle upgrades. However, the CLI has a few more tricks up its sleeve, which we
    will deal with in this section.
  prefs: []
  type: TYPE_NORMAL
- en: 'First, let’s look at how you call CLI scripts, which are either located in
    `admin/cli/*` or in the sub-folder of plugins that offer a CLI option – for example,
    `auth/ldap/cli`. To call a CLI script, follow the following notation:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Your `<apache_user>` is usually `www-data`, `httpd`, or `apache`.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: Always run Moodle CLI scripts under the identity of the web server user.
  prefs: []
  type: TYPE_NORMAL
- en: Every CLI script has a `--help` parameter that offers additional information
    and also describes calling options and parameters. The following is a list of
    some useful CLI commands and chapter numbers in which they have been covered.
    Look in their respective CLI directories or at [docs.moodle.org/en/Administration_via_command_line](http://docs.moodle.org/en/Administration_via_command_line)
    for all other commands. We do not list any parameters here, as these are explained
    well in the `--``help` options.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 17.10 – A selection of Moodle CLI scripts ](img/Figure_17.10_B18779.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 17.10 – A selection of Moodle CLI scripts
  prefs: []
  type: TYPE_NORMAL
- en: 'The real power of the CLI lies in the ability to embed CLI commands in shell
    scripts, which allows for powerful **automation** of otherwise time-consuming
    or error-prone routines. We presented a small installation script in [*Chapter
    1*](B18779_01.xhtml#_idTextAnchor020), *Installing Moodle*. Here is another sample
    script that kills all user sessions and clears caches, utilizing some CLI scripts:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 17.11 – A sample Bash script utilizing the Moodle CLI ](img/Figure_17.11_B18779.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 17.11 – A sample Bash script utilizing the Moodle CLI
  prefs: []
  type: TYPE_NORMAL
- en: While useful for the supported operations, the CLI provides a relatively restricted
    set of commands. Moosh, which we will cover next, overcomes this limitation.
  prefs: []
  type: TYPE_NORMAL
- en: Moosh – the Moodle Shell
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Moosh stands for Moodle Shell and is a command-line tool that allows you to
    perform the most common Moodle tasks.
  prefs: []
  type: TYPE_NORMAL
- en: Before you can make use of Moosh, you have to install it (see [*Chapter 8*](B18779_08.xhtml#_idTextAnchor168),
    *Understanding Moodle Plugins*). Once installed, you will have a vast number of
    commands (at the time of writing, over 150!) at your disposal.
  prefs: []
  type: TYPE_NORMAL
- en: 'The general syntax of Moosh is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'To give you an idea of the types of things you can do with Moosh, here are
    a few examples:'
  prefs: []
  type: TYPE_NORMAL
- en: '`moosh user-create test`: Creates a user with the username `test`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`moosh user-create test{1..10}`: Creates 10 users. This type of enumeration
    can be used with many Moosh commands.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`moosh user-create --email packt@openumlaut.com --city "Heidelberg" --country
    DE --firstname "Alex" --lastname "Büchner" packt`: All user profile values are
    supported; this is just a sample.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`moosh info-plugins`: Displays a list of all plugins installed and their locations.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`moosh file-list course=42`: Outputs information on all files in the course
    with the ID `42`. There are more file-related commands, such as showing the system
    path of a file or the ability to upload files directly.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`moosh plugin-install mod_videotime`: Downloads and installs the latest version
    of the versatile Videotime plugin. How cool is that?'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Once you combine Moosh commands with standard shell commands via pipes and streams,
    you have a powerful arsenal of commands at hand. For example, you might want to
    find all backups that are larger than 10 GB, archive them, and reclaim the space.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following example demonstrates the execution and output of three Moosh
    commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 17.12 – Playing with Moosh ](img/Figure_17.12_B18779.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 17.12 – Playing with Moosh
  prefs: []
  type: TYPE_NORMAL
- en: The first (`moosh course-list`) shows the information on all courses; the second
    (`moosh category-list`) does the same for categories; the last (`moosh user-create
    test{1..10}`) shows the IDs of the 10 user accounts after they have been created.
  prefs: []
  type: TYPE_NORMAL
- en: For a complete list of over 150 commands and hundreds of options, refer to the
    Moosh website at [moosh-online.com/commands](http://moosh-online.com/commands).
    The list is constantly growing, so ensure you have installed the latest version.
  prefs: []
  type: TYPE_NORMAL
- en: This concludes the section on Moosh and the chapter on Moodle admin tools. Hopefully,
    some facilities will streamline your day-to-day job and optimize some of the routine
    tasks you need to carry out.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we have covered a range of admin tools, some hidden and unsupported
    but nonetheless very useful. We first explored how admin tools are organized,
    before we covered site admin presets and some database tools, including the external
    Adminer, the Moodle CLI, and the powerful third-party Moosh tool.
  prefs: []
  type: TYPE_NORMAL
- en: Other ways to extend the reach of Moodle are web services, which we will cover
    in the following chapter.
  prefs: []
  type: TYPE_NORMAL
