["```php\nreturn [\n    // [...],\n    'bootstrap' => ['log'],\n\n    // [...],\n    'components' => [\n        // [...],\n        'log' => [\n 'targets' => [\n [\n 'class' => 'yii\\log\\FileTarget',\n 'levels' => ['error', 'warning'],\n ]\n ],\n ],\n    ],\n];\n```", "```php\nfunction($message, $category='application')\n\n```", "```php\napp\\components\\MyEvent\n```", "```php\napp\\components\\MyEvent::myMethod\n```", "```php\nreturn [\n    // [...],\n    'bootstrap' => ['log'],\n\n    // [...],\n    'components' => [\n        // [...],\n        'log' => [\n            'targets' => [\n                [\n                    'class' => 'yii\\log\\EmailTarget',\n                    'categories' => ['yii\\db\\*'],\n                    'message' => [\n                       'from' => ['systems@example.com'],\n                       'to' => ['administrator@example.com'],\n                       'subject' => 'Database errors for example.com',\n                    ],\n                ]\n            ],\n        ],\n    ],\n];\n\n```", "```php\nreturn [\n    // [...],\n    'bootstrap' => ['log'],\n\n    // [...],\n    'components' => [\n        // [...],\n        'log' => [\n            'targets' => [\n                [\n                'class' => 'yii\\log\\FileTarget',\n                'levels' => ['error', 'warning', 'info'],\n                'categories' => ['yii\\web\\HttpException:*'],\n                'except' => [\n                    'yii\\web\\HttpException:404',\n                ],\n            ]\n            ],\n        ],\n    ],\n];\n```", "```php\nreturn [\n    // [...],\n    'bootstrap' => ['log'],\n\n    // [...],\n    'components' => [\n        // [...],\n        'log' => [\n            'targets' => [\n                'file' => [\n 'class' => 'yii\\log\\FileTarget',\n 'levels' => ['error', 'warning', 'info'],\n 'categories' => ['yii\\web\\HttpException:*'],\n 'except' => [\n 'yii\\web\\HttpException:404',\n ],\n ]\n            ],\n        ],\n    ],\n];\n```", "```php\nYii::$app->log->targets['file']->enabled = false;\n```", "```php\nYii::beginProfile('myProfile');\n    // Code inside this will be profiled\nYii::endProfile('myProfile');\n```", "```php\nreturn [\n    // [...],\n    'components' => [\n        // [...],\n        'errorHandler' => [\n            'maxSourceLines' => 20,\n            'errorAction' => 'site/error',\n            'maxTraceSourceLines' => 13,\n            // [...]\n        ],\n    ],\n];\n```", "```php\n<?php\nnamespace app\\controllers;\n\nuse Yii;\nuse yii\\web\\Controller;\n\nclass SiteController extends Controller\n{\n    public function actions()\n    {\n        return [\n            'error' => [\n                'class' => 'yii\\web\\ErrorAction',\n            ],\n        ];\n    }\n\n   public function actionError()\n    {\n        $exception = Yii::$app->errorHandler->exception;\n        if ($exception !== null) {\n            return $this->render('error', ['exception' => $exception]);\n        }\n    }\n}\n```", "```php\n{\n    \"name\": \"Not Found Exception\",\n    \"message\": \"The requested resource was not found.\",\n    \"code\": 0,\n    \"status\": 404\n} \n```", "```php\n<?php \nreturn [\n    // [...],\n    'components' => [\n        // [...],\n        'response' => [\n            'format' => yii\\web\\Response::FORMAT_JSON,\n            'charset'        => 'UTF-8',\n            'on beforeSend'  => ['app\\components\\ResponseEvent', 'beforeSend']\n        ],\n        // [...]\n    ]\n];\n```", "```php\n<?php\n\nnamespace app\\components;\n\nuse Yii;\n\n/**\n * Event handler for response object\n */\nclass ResponseEvent extends yii\\base\\Event\n{\n    /**\n     * Before Send event handler\n     * @param yii\\base\\Event $event\n     */\n    public function beforeSend($event)\n    {\n        $response = $event->sender;\n\n        if (\\Yii::$app->request->getIsOptions())\n        {\n            $response->statusCode = 200;\n            $response->data = null;\n        }\n\n        if ($response->data !== null)\n        {\n            $return = ($response->statusCode == 200 ? $response->data : $response->data['message']);\n\n            $response->data = [\n                'data'  => $return\n            ];\n\n            // Handle and display errors in the API for easy debugging\n            $exception = \\Yii::$app->errorHandler->exception;\n            if ($exception && get_class($exception) !== \"yii\\web\\HttpException\" && !is_subclass_of($exception, 'yii\\web\\HttpException') && YII_DEBUG)\n            {\n                $response->data['success'] = false;\n                $response->data['exception'] = [\n                    'message'   => $exception->getMessage(),\n                    'file'      => $exception->getFile(),\n                    'line'      => $exception->getLine(),\n                    'trace'     => $exception->getTraceAsString()\n                ];\n            }\n        }\n    }\n}\n```", "```php\n{\n    \"data\": \"<message>\",\n    \"success\": false,\n    \"exception\": {\n        \"message\": \"Invalid\",\n        \"file\": \"/path/to/SiteController.php\",\n        \"line\": 48,\n        \"trace\": \"#0 [internal function]: app\\\\controllers\\\\SiteController->actionIndex()\\n# ... {main}\"\n    }\n}\n```", "```php\ncomposer require --dev --prefer-dist yiisoft/yii2-debug\n\n```", "```php\nif (YII_DEBUG)\n{ \n    $config['bootstrap'][] = 'debug';\n    $config['modules']['debug'] = [\n       'class' => 'yii\\debug\\Module',\n       'allowedIPs' => ['*']\n    ];\n}\n```"]