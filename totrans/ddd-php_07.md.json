["```php\n...\n\"autoload\": {\n    \"psr-0\": {\n        \"BuyIt\\\\\": \"src/BuyIt/\"\n    }\n},\n\"autoload-dev\": {\n    \"psr-0\": {\n        \"BuyIt\": \"tests/BuyIt/\"\n    }\n},\n...\n\n```", "```php\n...\n\"autoload\": {\n    \"psr-4\": {\n        \"BuyIt\\\\\": \"src/\"\n    }\n},\n\"autoload-dev\": {\n    \"psr-4\": {\n        \"BuyIt\\\\\": \"tests/\"\n    }\n},\n...\n\n```", "```php\n...\n\"autoload\": {\n    \"psr-4\": {\n        \"BuyIt\\\\\": \"src/BuyIt/\"\n    }\n},\n\"autoload-dev\": {\n    \"psr-4\": {\n        \"BuyIt\\\\\": \"tests/BuyIt/\"\n    }\n},\n...\n\n```", "```php\nnamespace BuyIt\\Billing\\Infrastructure\\FullTextSearching\\Elastica;\n\nuse BuyIt\\Billing\\Domain\\Model\\Order\\OrderRepository;\nuse BuyIt\\Billing\\Infrastructure\\Domain\\Model\\Order\\Doctrine\\\n    DoctrineOrderRepository;\n\nclass ElasticaOrderRepository implements OrderRepository \n{ \n    private $client;â€†\n    private $baseOrderRepository;\n\n    public function __construct(\n        Client $client,\n        DoctrineOrderRepository $baseOrderRepository\n    ) {\n        $this->client = $client;\n        $this->baseOrderRepository = $baseOrderRepository;\n    }\n\n    public function find($id) \n    {\n        return $this->baseOrderRepository->find($id);\n    }\n\n    public function findBy(array $criteria)\n    {\n        $search = new \\Elastica\\Search($this->client);\n        // ...\n        return $this->toOrder($search->search());\n    }\n\n    public function add($anOrder)\n    {\n        // First we attempt to add it to the Elastic index\n        $ordersIndex = $this->client->getIndex('orders');\n        $orderType = $ordersIndex->getType('order');\n        $orderType->addDocument(\n            new \\ElasticaDocument(\n                $anOrder->id(),\n                $this->toArray($anOrder)\n            )\n        );\n\n        $ordersIndex->refresh();\n\n        // When it is done, we attempt to add it to the RDBMS store\n        $this->baseOrderRepository->add($anOrder);\n    }\n}\n\n```"]