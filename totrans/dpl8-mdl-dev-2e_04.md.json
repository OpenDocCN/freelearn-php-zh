["```php\nreturn '<div class=\"wrapper\">' . $data . '</div>';\n```", "```php\nfunction hook_theme($existing, $type, $theme, $path) {\n  return [\n    'item_list' => array(\n      'variables' => array('items' => array(), 'title' => '', 'list_type' => 'ul', 'wrapper_attributes' => array(), 'attributes' => array(), 'empty' => NULL, 'context' => array()),\n    ),\n    'select' => array(\n      'render element' => 'element',\n    ),\n  ];\n}\n```", "```php\nfunction template_preprocess_component_box(&$variables) {\n  // Prepare variables.\n}\n```", "```php\nbase_theme_hook__some_context \n```", "```php\nreturn [\n  '#theme' => 'item_list__my_list',\n  '#items' => $items,\n];\n```", "```php\nreturn [\n '#markup' => $this->t('Hello World')\n];\n```", "```php\nmy-library:\n version: 1.x\n css:\n   theme:\n     css/my_library.css: {}\n js:\n   js/my_library.js: {}\n```", "```php\nangular.angularjs:\n   remote: https://github.com/angular/angular.js\n   version: 1.4.4\n   license:\n     name: MIT\n     url: https://github.com/angular/angular.js/blob/master/LICENSE\n     gpl-compatible: true\n   js:\n     https://ajax.googleapis.com/ajax/libs/angularjs/1.4.4/angular.min.js: { type: external, minified: true }\n```", "```php\ndependencies:\n  - core/jquery\n```", "```php\nreturn [\n  '#theme' => 'some_theme_hook',\n  '#some_variable' => $some_variable,\n  '#attached' => [\n    'library' => [\n      'my_module/my-library',\n     ],\n  ],\n];\n```", "```php\nfunction hook_page_attachments(array &$attachments) {\n  $attachments['#attached']['library'][] = 'my_module/my-library';\n}\n```", "```php\nfunction my_module_preprocess_theme_hook(&$variables) {\n  $variables['#attached']['library'][] =  'my_module/my_library';\n}\n```", "```php\n$items = [\n  'Item 1',\n  'Item 2'\n];\n```", "```php\nreturn [\n  '#theme' => 'item_list',\n  '#items' => $items\n];\n```", "```php\n$links = [\n  [\n    'title' => 'Link 1',\n    'url' => Url::fromRoute('<front>'),\n  ],\n  [\n    'title' => 'Link 1',\n    'url' => Url::fromRoute('hello_world.hello'),\n  ]\n];\n\nreturn [\n  '#theme' => 'links',\n  '#links' => $links,\n  '#set_active_class' => true,\n];\n```", "```php\n$header = ['Column 1', 'Column 2'];\n$rows = [\n  ['Row 1, Column 1', 'Row 1, Column 2'],\n  ['Row 2, Column 1', 'Row 2, Column 2']\n];\n\nreturn [\n  '#theme' => 'table',\n  '#header' => $header,\n  '#rows' => $rows,\n];\n```", "```php\n$attributes = [\n  'id' => 'my-id',\n  'class' => ['class-one', 'class-two'],\n  'data-custom' => 'my custom data value'\n];\n```", "```php\ntwo_column: \n  label: 'Two column' \n  category: 'My Layouts' \n  template: templates/two-column \n  regions: \n    left: \n      label: Left region \n    right: \n      label: Right region \n```", "```php\nlibrary: my_module/my_library\n```", "```php\n<div class=\"two-column\"> \n  <div class=\"left-region\"> \n    {{ content.left }} \n  </div> \n  <div class=\"right-region\"> \n    {{ content.right }} \n  </div> \n</div>\n```", "```php\n$layoutPluginManager = \\Drupal::service('plugin.manager.core.layout'); \n$layout = $layoutPluginManager->createInstance('two_column'); \n\n$regions = [ \n  'left' => [ \n    '#markup' => 'my left content', \n  ], \n  'right' => [ \n    '#markup' => 'my right content', \n  ], \n]; \n\nreturn $layout->build($regions); \n```", "```php\n<div class=\"salutation\">\n  Good morning <span class=\"salutation—target\">world</span>\n</div>\n```", "```php\n/**\n * Implements hook_theme().\n */\nfunction hello_world_theme($existing, $type, $theme, $path) {\n  return [\n    'hello_world_salutation' => [\n      'variables' => ['salutation' => NULL, 'target' => NULL, 'overridden' => FALSE],\n    ],\n  ];\n}\n```", "```php\n<div {{ attributes }}>\n  {{ salutation }}\n  {% if target %}\n    <span class=\"salutation—target\">{{ target }}</span>\n  {% endif %}\n</div>\n```", "```php\n/**\n * Default preprocessor function for the hello_world_salutation theme hook.\n */\nfunction template_preprocess_hello_world_salutation(&$variables) {\n  $variables['attributes'] = [\n    'class' => ['salutation'],\n  ];\n}\n```", "```php\n/**\n * Implements hook_theme_suggestions_HOOK().\n */\nfunction hello_world_theme_suggestions_hello_world_salutation($variables) {\n  $suggestions = [];\n\n  if ($variables['overridden'] == TRUE) {\n    $suggestions[] = 'hello_world_salutation__overridden';\n  }\n\n  return $suggestions;\n}\n```", "```php\n/**\n * Returns the Salutation render array.\n */\npublic function getSalutationComponent() {\n  $render = [\n    '#theme' => 'hello_world_salutation',\n  ];\n\n  $config = $this->configFactory->get('hello_world.custom_salutation');\n  $salutation = $config->get('salutation');\n\n  if ($salutation != \"\") {\n    $render['#salutation'] = $salutation;\n    $render['#overridden'] = TRUE;\n    return $render;\n  }\n\n  $time = new \\DateTime();\n  $render['#target'] = $this->t('world');\n\n  if ((int) $time->format('G') >= 00 && (int) $time->format('G') < 12) {\n    $render['#salutation'] = $this->t('Good morning');\n    return $render;\n  }\n\n  if ((int) $time->format('G') >= 12 && (int) $time->format('G') < 18) {\n    $render['#salutation'] = $this->t('Good afternoon');\n    return $render;\n  }\n\n  if ((int) $time->format('G') >= 18) {\n    $render['#salutation'] = $this->t('Good evening');\n    return $render;\n  }\n}\n```", "```php\n/**\n * Hello World.\n *\n * @return array\n */\npublic function helloWorld() {\n  return $this->salutation->getSalutationComponent();\n}\n```"]