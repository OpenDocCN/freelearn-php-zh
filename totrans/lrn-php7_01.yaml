- en: Chapter 1. Setting Up the Environment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You are about to start a journey—a long one, in which you will learn how to
    write web applications with PHP. However, first, you need to set up your environment,
    something that has proven to be tricky at times. This task includes installing
    PHP 7, the language of choice for this book; MySQL, the database that we will
    use in some chapters; Nginx, the web server that will allow us to visualize our
    applications with a browser; and Composer, the favorite PHP dependencies management
    tool. We will do all of this with Vagrant and also on three different platforms:
    Windows, OS X, and Ubuntu.'
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, you will learn about:'
  prefs: []
  type: TYPE_NORMAL
- en: Using Vagrant to set up a development environment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up your environment manually on the main platforms
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up the environment with Vagrant
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Not so long ago, every time you started working for a new company, you would
    spend an important part of your first few days setting up your new environment—that
    is, installing all the necessary tools on your new computer in order to be able
    to code. This was incredibly frustrating because even though the software to install
    was the same, there was always something that failed or was missing, and you would
    spend less time being productive.
  prefs: []
  type: TYPE_NORMAL
- en: Introducing Vagrant
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Luckily for us, people tried to fix this big problem. First, we have virtual
    machines, which are emulations of computers inside your own computer. With this,
    we can have Linux inside our MacBook, which allows developers to share environments.
    It was a good step, but it still had some problems; for example, VMs were quite
    big to move between different environments, and if developers wanted to make a
    change, they had to apply the same change to all the existing virtual machines
    in the organization.
  prefs: []
  type: TYPE_NORMAL
- en: 'After some deliberation, a group of engineers came up with a solution to these
    issues and we got **Vagrant**. This amazing software allows you to manage virtual
    machines with simple configuration files. The idea is simple: a configuration
    file specifies which base virtual machine we need to use from a set of available
    ones online and how you would like to customize it—that is, which commands you
    will want to run the first time you start the machine—this is called "provisioning".
    You will probably get the Vagrant configuration from a public repository, and
    if this configuration ever changes, you can get the changes and reprovision your
    machine. It''s easy, right?'
  prefs: []
  type: TYPE_NORMAL
- en: Installing Vagrant
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you still do not have Vagrant, installing it is quite easy. You will need
    to visit the Vagrant download page at [https://www.vagrantup.com/downloads.html](https://www.vagrantup.com/downloads.html)
    and select the operating system that you are working with. Execute the installer,
    which does not require any extra configuration, and you are good to go.
  prefs: []
  type: TYPE_NORMAL
- en: Using Vagrant
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Using Vagrant is quite easy. The most important piece is the `Vagrantfile` file.
    This file contains the name of the base image we want to use and the rest of the
    configuration that we want to apply. The following content is the configuration
    needed in order to get an Ubuntu VM with PHP 7, MySQL, Nginx, and Composer. Save
    it as `Vagrantfile` at the root of the directory for the examples of this book.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'As you can see, the file is quite small. The base image''s name is `ubuntu/trusty32`,
    messages to our port `8080` will be redirected to the port `80` of the virtual
    machine, and the provision will be based on the `provisioner.sh` script. You will
    need to create this file, which will be the one that contains all the setup of
    the different components that we need. This is what you need to add to this file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The file looks quite long, but we will do quite a lot of stuff with it. With
    the first part of the file, we will add the necessary repositories to be able
    to fetch PHP 7, as it does not come with the official ones, and then install it.
    Then, we will try to install MySQL, server and client. We will set the root password
    on this provisioning because we cannot introduce it manually with Vagrant. As
    this is a development machine, it is not really a problem, but you can always
    change the password once you are done. Finally, we will install and configure
    Nginx to listen to the port `8080`.
  prefs: []
  type: TYPE_NORMAL
- en: 'To start the virtual machine, you need to execute the following command in
    the same directory where `Vagrantfile` is:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'The first time you execute it, it will take some time as it will have to download
    the image from the repository, and then it will execute the `provisioner.sh` file.
    The output should be something similar to this one followed by some more output
    messages:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Using Vagrant](img/00002.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'In order to access your new VM, run the following command on the same directory
    where you have your `Vagrantfile` file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Vagrant will start an SSH session to the VM, which means that you are inside
    the VM. You can do anything you would do with the command line of an Ubuntu system.
    To exit, just press *Ctrl* + *D*.
  prefs: []
  type: TYPE_NORMAL
- en: Sharing files from your laptop to the VM is easy; just move or copy them to
    the same directory where your `Vagrantfile` file is, and they will "magically"
    appear on the `/vagrant` directory of your VM. They will be synchronized, so any
    changes that you make while in your VM will be reflected on the files of your
    laptop.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have a web application and you want to test it through a web browser,
    remember that we will forward the ports. This means that in order to access the
    port `80` of your VM, the common one for web applications, you will have to point
    to the port `8080` on your browsers; here''s an example: `http://localhost:8080`.'
  prefs: []
  type: TYPE_NORMAL
- en: Setting up the environment on OS X
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you are not convinced with Vagrant and prefer to use a Mac to develop PHP
    applications, this is your section. Installing all the necessary tools on a Mac
    might be a bit tricky, depending on the version of your OS X. At the time of writing
    this book, Oracle has not released a MySQL client that you can use via the command
    line that works with El Capitan, so we will describe how to install another tool
    that can do a similar job.
  prefs: []
  type: TYPE_NORMAL
- en: Installing PHP
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'If it is the first time you are using a Mac to develop applications of any
    kind, you will have to start by installing Xcode. You can find this application
    for free on the App Store:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing PHP](img/00003.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Another indispensable tool for Mac users is Brew. This is the package manager
    for OS X and will help us install PHP with almost no pain. To install it, run
    the following command on your command line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'If you already have Brew installed, you can make sure that everything works
    fine by running these two commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'It is time to install PHP 7 using Brew. To do so, you will just need to run
    one command, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'The result should be as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing PHP](img/00004.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Make sure to add the binary to your `PATH` environment variable by executing
    this command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: You can check whether your installation was successful by asking which version
    of PHP your system is using with the `$ php –v` command.
  prefs: []
  type: TYPE_NORMAL
- en: Installing MySQL
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'As pointed out at the beginning of this section, MySQL is a tricky one for
    Mac users. You need to download the MySQL server installer and MySQL Workbench
    as the client. The MySQL server installer can be found at [https://dev.mysql.com/downloads/mysql/](https://dev.mysql.com/downloads/mysql/).
    You should find a list of different options, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing MySQL](img/00005.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'The easiest way to go is to download **DMG Archive**. You will be asked to
    log in with your Oracle account; you can create one if you do not have any. After
    this, the download will start. As with any DMG package, just double-click on it
    and go through the options—in this case, just click on **Next** all the time.
    Be careful because at the end of the process, you will be prompted with a message
    similar to this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing MySQL](img/00006.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Make a note of it; otherwise, you will have to reset the root password. The
    next one is MySQL Workbench, which you can find at [http://www.mysql.com/products/workbench/](http://www.mysql.com/products/workbench/).
    The process is the same; you will be asked to log in, and then you will get a
    DMG file. Click on **Next** until the end of the installation wizard. Once done,
    you can launch the application; it should look similar to this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing MySQL](img/00007.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Installing Nginx
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In order to install Nginx, we will use Brew, as we did with PHP. The command
    is the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'If you want to make Nginx start every time you start your laptop, run the following
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: If you have to change the configuration of Nginx, you will find the file in
    `/usr/local/etc/nginx/nginx.conf`. You can change things, such as the port that
    Nginx is listening to or the root directory where your code is (the default directory
    is `/usr/local/Cellar/nginx/1.8.1/html/`). Remember to restart Nginx to apply
    the changes with the `sudo nginx` command.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Composer
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Installing Composer is as easy as downloading it with the `curl` command; move
    the binary to `/usr/local/bin/` with the following two commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Setting up the environment on Windows
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Even though it is not very professional to pick sides based on personal opinions,
    it is well known among developers how hard it can be to use Windows as a developer
    machine. They prove to be extremely tricky when it comes to installing all the
    software since the installation mode is always very different from OS X and Linux
    systems, and quite often, there are dependency or configuration problems. In addition,
    the command line has different interpreters than Unix systems, which makes things
    a bit more confusing. This is why most developers would recommend you use a virtual
    machine with Linux if you only have a Windows machine at your disposal.
  prefs: []
  type: TYPE_NORMAL
- en: However, to be fair, PHP 7 is the exception to the rule. It is surprisingly
    simple to install it, so if you are really comfortable with your Windows and would
    prefer not to use Vagrant, here you have a short explanation on how to set up
    your environment.
  prefs: []
  type: TYPE_NORMAL
- en: Installing PHP
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In order to install PHP 7, you will first download the installer from the official
    website. For this, go to [http://windows.php.net/download](http://windows.php.net/download).
    The options should be similar to the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing PHP](img/00008.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Choose **x86 Thread Safe** for Windows 32-bit or **x64 Thread Safe** for the
    64-bit one. Once downloaded, uncompress it in `C:\php7`. Yes, that is it!
  prefs: []
  type: TYPE_NORMAL
- en: Installing MySQL
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Installing MySQL is a little more complex. Download the installer from [http://dev.mysql.com/downloads/installer/](http://dev.mysql.com/downloads/installer/)
    and execute it. After accepting the license agreement, you will get a window similar
    to the following one:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing MySQL](img/00009.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'For the purposes of the book—and actually for any development environment—you
    should go for the first option: **Developer Default**. Keep going forward, leaving
    all the default options, until you get a window similar to this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing MySQL](img/00010.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Depending on your preferences, you can either just set a password for the root
    user, which is enough as it is only a development machine, or you can add an extra
    user by clicking on **Add User**. Make sure to set the correct name, password,
    and permissions. A user named `test` with administration permissions should look
    similar to the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing MySQL](img/00011.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: For the rest of the installation process, you can select all the default options.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Nginx
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The installation for Nginx is almost identical to the PHP 7 one. First, download
    the ZIP file from [http://nginx.org/en/download.html](http://nginx.org/en/download.html).
    At the time of writing, the versions available are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing Nginx](img/00012.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'You can safely download the mainline version 1.9.10 or a later one if it is
    stable. Once the file is downloaded, uncompress it in `C:\nginx` and run the following
    commands to start the web server:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Installing Composer
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To finish with the setup, we need to install Composer. To go for the automatic
    installation, just download the installer from [https://getcomposer.org/Composer-Setup.exe](https://getcomposer.org/Composer-Setup.exe).
    Once downloaded, execute it in order to install Composer on your system and to
    update your `PATH` environment variable.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up the environment on Ubuntu
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Setting up your environment on Ubuntu is the easiest of the three platforms.
    In fact, you could take the `provisioner.sh` script from the *Setting up the environment
    with Vagrant* section and execute it on your laptop. That should do the trick.
    However, just in case you already have some of the tools installed or you want
    to have a sense of control on what is going on, we will detail each step.
  prefs: []
  type: TYPE_NORMAL
- en: Installing PHP
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The only thing to consider in this section is to remove any previous PHP versions
    on your system. To do so, you can run the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'The next step is to add the necessary repositories in order to fetch the correct
    PHP version. The commands to add and update them are:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'Finally, we need to install PHP 7 together with the driver for MySQL. For this,
    just execute the following three commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Installing MySQL
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Installing MySQL manually can be slightly different than with the Vagrant script.
    As we can interact with the console, we do not have to specify the root password
    previously; instead, we can force MySQL to prompt for it. Run the following command
    and keep in mind that the installer will ask you for the password:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'Once done, if you need to start the MySQL server, you can do it with the following
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: Installing Nginx
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The first thing that you need to know is that you can only have one web server
    listening on the same port. As port `80` is the default one for web applications,
    if you are running Apache on your Ubuntu machine, you will not be able to start
    an Nginx web server listening on the same port `80`. To fix this, you can either
    change the ports for Nginx or Apache, stop Apache, or uninstall it. Either way,
    the installation command for Nginx is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, you will need to enable a site with Nginx. The sites are files under `/etc/nginx/sites-available`.
    There is already one file there, `default`, which you can safely replace with
    the following content:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'This configuration basically points the root directory of your web application
    to the `/var/www/html` directory. You can choose the one that you prefer, but
    make sure that it has the right permissions. It also listens on the port `80`,
    which you can change with the one you prefer; just keep this in mind that when
    you try to access your application via a browser. Finally, to apply all the changes,
    run the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Downloading the example code**'
  prefs: []
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [http://www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register to our website using your e-mail address and password.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hover the mouse pointer on the **SUPPORT** tab at the top.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Click on **Code Downloads & Errata**.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enter the name of the book in the **Search** box.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Select the book for which you're looking to download the code files.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Choose from the drop-down menu where you purchased this book from.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Click on **Code Download**.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR / 7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg / iZip / UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip / PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, you learned how easy it is to set up a development environment
    using Vagrant. If this did not convince you, you still got the chance to set up
    all the tools manually. Either way, now you are able to work on the next chapters.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will take a look at the idea of web applications with
    PHP, going from the protocols used to how the web server serves requests, thus
    setting the foundation for the following chapters.
  prefs: []
  type: TYPE_NORMAL
