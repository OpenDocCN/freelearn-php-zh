- en: '3'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '3'
- en: Displaying Content through Views
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过视图显示内容
- en: The **Views** module in Drupal is a visual query builder that enables you to
    build dynamic content displays without writing any code. We will walk through
    how to create a page to list blogs and a companion block to display five of the
    most recent blogs. Then, we will move into creating exposed filters to allow end
    users to control the view results. You will also learn some more advanced topics
    using contextual filters and custom entity reference widget output. Finally, we
    will cover how to use the **Charts** module to output a chart of data with Views.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Drupal 中的 **视图** 模块是一个可视化查询构建器，它允许您在不编写任何代码的情况下构建动态内容显示。我们将介绍如何创建一个列出博客的页面以及一个显示五个最新博客的伴随区块。然后，我们将转向创建公开筛选器，以便最终用户可以控制视图结果。您还将学习一些使用上下文筛选器和自定义实体引用小部件输出的高级主题。最后，我们将介绍如何使用
    **图表** 模块通过视图输出数据图表。
- en: 'In this chapter, we are going to cover the following recipes:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍以下菜谱：
- en: Creating a blog landing page
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建博客落地页面
- en: Creating a block of recent blogs
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个包含最近博客的区块
- en: Exposing filters and sorts to users to control listings
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向用户公开筛选和排序以控制列表
- en: Contextual filters for filtering by path parameters
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 上下文筛选器用于按路径参数筛选
- en: Adding related data in a view with relationships
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在具有关系的视图中添加相关数据
- en: Providing an entity reference result view
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供实体引用结果视图
- en: Displaying charts using Views
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用视图显示图表
- en: Creating a blog landing page
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建博客落地页面
- en: The Views module does one thing, and it does it well – listing content. The
    power behind the Views module is the amount of configurable power it gives to
    end users to display content in various forms. This recipe will cover the process
    of how to create a content listing and link it to the main menu. We will use the
    **Article** content type to create a blog landing page.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 视图模块只做一件事，而且做得很好——列出内容。视图模块背后的力量在于它给予最终用户大量可配置的权力，以各种形式显示内容。本菜谱将介绍如何创建内容列表并将其链接到主菜单。我们将使用
    **文章** 内容类型来创建博客落地页面。
- en: How to do it…
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Go to **Structure** and then **Views**. This will bring you to the administrative
    overview of all the views created. Click on **Add view** to create a new view:'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往**结构**然后**视图**。这将带您到所有创建的视图的管理概览。点击**添加视图**以创建一个新视图：
- en: '![Figure 3.1 – The Views listing overview](img/Figure_3.01_B18548.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.1 – 视图列表概述](img/Figure_3.01_B18548.jpg)'
- en: Figure 3.1 – The Views listing overview
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.1 – 视图列表概述
- en: The first step is to provide the view name of **Blog**, which will serve as
    the administrative and (by default) displayed title.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一步是提供**博客**视图的名称，它将作为管理标题（默认情况下）和显示标题。
- en: Next, we will modify the **View settings** section. We want to display **Content**
    of the **Article** type and leave the **tagged with** field empty. This will force
    the view to only show content of the **Article** content type.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将修改**视图设置**部分。我们想要显示**文章**类型的**内容**，并保留**标记为**字段为空。这将强制视图只显示**文章**内容类型的内容。
- en: 'Check the **Create a page** option. The **Page title** and **Path** fields
    will be automatically populated based on the view name and can be modified as
    desired. For now, leave the display and other settings at their default values:'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**创建页面**选项。**页面标题**和**路径**字段将根据视图名称自动填充，可以根据需要修改。现在，保留显示和其他设置为其默认值：
- en: '![Figure 3.2 – Overview of the view creation form](img/Figure_3.02_B18548.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.2 – 视图创建表单概述](img/Figure_3.02_B18548.jpg)'
- en: Figure 3.2 – Overview of the view creation form
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.2 – 视图创建表单概述
- en: Click on **Save and edit** to continue modifying your new view.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存并编辑**以继续修改您的新视图。
- en: In the middle column, under the **Page Settings** section, we will change the
    **Menu item** settings. Click on **No menu** to change the menu option.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在中间列的**页面设置**部分下，我们将更改**菜单项**设置。点击**无菜单**以更改菜单选项。
- en: 'Select **Normal menu entry**. Provide a menu link title and an optional description.
    Set **Parent** to **<****Main Navigation>**:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**常规菜单项**。提供菜单链接标题和可选描述。将**父项**设置为**<主导航>**：
- en: '![Figure 3.3 – The menu settings form for the view](img/Figure_3.03_B18548.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.3 – 视图的菜单设置表单](img/Figure_3.03_B18548.jpg)'
- en: Figure 3.3 – The menu settings form for the view
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.3 – 视图的菜单设置表单
- en: Click on **Apply** at the bottom of the form in the dialog.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在对话框表单底部点击**应用**。
- en: Click on **Save** to save your view.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存**以保存您的视图。
- en: Once your view has been saved, click on **Back to site** from the administrative
    menu. You will now see the link in your Drupal site’s main menu.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存你的视图后，从管理菜单点击**返回网站**。现在你将在Drupal网站的主菜单中看到链接。
- en: How it works…
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The first step for creating a view involves selecting the type of data you will
    be displaying. This is referred to as the base table, which can be any type of
    entity or data specifically exposed to Views.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 创建视图的第一步是选择你将要显示的数据类型。这被称为基础表，可以是任何类型的实体或专门暴露给视图的数据。
- en: Content and nodes
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 内容和节点
- en: '**Nodes** are labeled as **Content** in Views, and you will find this interchanged
    terminology throughout Drupal.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**节点**在视图中被标记为**内容**，你将在Drupal中找到这种术语的互换。'
- en: When creating a Views page, we add a menu path that can be accessed. It tells
    Drupal to invoke Views to render the page, which will load the view you created
    and render it. Then, the Views module registers that path as a route in Drupal’s
    routing system to a controller provided by itself, which renders the view display.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建视图页面时，我们添加了一个可访问的菜单路径。它告诉Drupal调用视图来渲染页面，这将加载你创建的视图并渲染它。然后，视图模块将此路径注册为Drupal路由系统中的一个路由，由它自己提供的控制器来渲染视图显示。
- en: There are display style and row plugins that format the data to be rendered.
    Our recipe used the unformatted list style to wrap each row in a simple `div`
    element. We could have changed this into a table for a formatted list. The row
    display controls how each row is outputted.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 有显示样式和行插件用于格式化要渲染的数据。我们的配方使用了未格式化的列表样式，将每一行包裹在一个简单的`div`元素中。我们本可以将它改为表格来显示格式化的列表。行显示控制了每一行的输出方式。
- en: There’s more…
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: The Views module is one of the most versatile and used modules in Drupal core.
    In the following section, we will dive further into some components of Views.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 视图模块是Drupal核心中最灵活和最常用的模块之一。在下一节中，我们将进一步探讨视图的一些组件。
- en: Views and displays
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 视图和显示
- en: 'When working with Views, you will see some different terminologies. One of
    the key concepts to be grasped is what a display is. A view can contain multiple
    displays. Each display is of a certain type. The Views module comes with the following
    display types:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用视图时，你会看到一些不同的术语。一个关键的概念是要理解什么是显示。一个视图可以包含多个显示。每个显示都是某种类型。视图模块提供了以下显示类型：
- en: '**Attachment**: This is a display that becomes attached to another display
    in the same view. These are placed in the Header or Footer sections of another
    view display.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**附件**：这是一个附加到同一视图中的另一个显示的显示。这些放置在另一个视图显示的页眉或页脚部分。'
- en: '**Block**: This allows you to place the view as a block on your Drupal site.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**块**：这允许你将视图作为块放置在你的Drupal网站上。'
- en: '**Embed**: The display is meant to be embedded programmatically.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**嵌入**：这个显示旨在通过编程嵌入。'
- en: '**Entity Reference**: This allows Views to provide results for an entity reference
    field.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**实体引用**：这允许视图为实体引用字段提供结果。'
- en: '**Feed**: This display returns an XML-based feed that can be attached to another
    display to render a feed icon so that users can subscribe to the content.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**订阅源**：这种显示返回一个基于XML的订阅源，可以附加到另一个显示以渲染一个订阅图标，让用户可以订阅内容。'
- en: '**Page**: This allows you to display the view from a specific path.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**页面**：这允许你显示特定路径的视图。'
- en: Each display can have its own configuration, too. However, each display will
    share the same base table (content, files, and more). This allows you to take
    the same data and present it in different ways within the same view.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 每个显示都可以有自己的配置。然而，每个显示将共享相同的基础表（内容、文件等）。这允许你在同一个视图中以不同的方式呈现相同的数据。
- en: Format style plugins – style and row
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 格式样式插件 – 样式和行
- en: 'Within Views, there are two types of style plugins that represent how your
    data is displayed: **style** and **row**:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在视图中，有两种类型的样式插件代表你的数据如何显示：**样式**和**行**：
- en: The style plugin represents the overall format of the view
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 样式插件代表视图的整体格式
- en: The row plugin represents the format of each row in the results for the view
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 行插件代表视图结果中每一行的格式
- en: For example, the **Responsive Grid** style will output the results in a grid
    using CSS grids and make it responsive for different screen sizes. At the same
    time, the Table style creates a tabular output with field labels used as table
    headings.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，**响应式网格**样式将使用CSS网格输出结果，并使其对不同屏幕尺寸做出响应。同时，表格样式创建了一个带有字段标签作为表头的表格输出。
- en: '**Row** plugins define how to render the row. The default type of **Content**
    will render the entity using a selected view mode. If you choose **Fields**, you
    can manually select which fields will be included in your view display results
    and the field formatters to use for each field.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**行**插件定义了如何渲染行。**内容**的默认类型将使用选定的视图模式渲染实体。如果你选择**字段**，你可以手动选择要包含在你的视图显示结果中的字段以及每个字段的字段格式化程序。'
- en: Each **style** plugin has a corresponding Twig template that is used to theme
    the output. Refer to the *Using Twig templates* section in your theme recipe of
    [*Chapter 10*](B18548_10.xhtml#_idTextAnchor319), *Theming and Frontend Development*,
    to learn more about Twig templates.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 每个**样式**插件都有一个对应的Twig模板，用于主题化输出。请参考[*第10章*](B18548_10.xhtml#_idTextAnchor319)中的*使用Twig模板*部分，*主题化和前端开发*，以了解更多关于Twig模板的信息。
- en: Using the Embed display
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用嵌入式显示
- en: Each of the available display types has a method to expose itself through the
    user interface, except for Embed. Often, contributed and custom modules use Views
    to render displays instead of manually writing queries and rendering the output.
    Drupal provides a special display type to simplify this.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 可用的每种显示类型都有一种方法可以通过用户界面暴露自己，除了嵌入式。通常，贡献和自定义模块使用视图来渲染显示，而不是手动编写查询和渲染输出。Drupal提供了一个特殊的显示类型来简化这个过程。
- en: 'If we were to add an **Embed** display to the view created in the recipe, we
    could use the following render array in custom code to output our view programmatically:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们要在菜谱中创建的视图中添加一个**嵌入式**显示，我们可以在自定义代码中使用以下渲染数组来程序化地输出我们的视图：
- en: '[PRE0]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: When rendered, the `#type` key tells Drupal that this is a view element. We
    then point it to our new display, `embed_1`. The **Embed** display type has no
    special functionality; it is a simplistic display plugin. The benefit of this
    is that it does not conduct additional operations for the sake of performance.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 当渲染时，`#type` 键告诉 Drupal 这是一个视图元素。然后我们将其指向我们新的显示，`embed_1`。**嵌入式**显示类型没有特殊功能；它是一个简单的显示插件。这种做法的好处是它不会为了性能而执行额外的操作。
- en: Using an **Embed** display is beneficial when you want to use a view in a custom
    page, block, or even form. For example, Drupal Commerce uses this pattern for
    its shopping cart block and the order summary at the checkout. A view is used
    to display the order information within a custom block and form.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 当你想在自定义页面、块或甚至表单中使用视图时，使用**嵌入式**显示是有益的。例如，Drupal Commerce使用这种模式为其购物车块和结账时的订单摘要。视图用于在自定义块和表单中显示订单信息。
- en: Creating a block of recent blogs
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个包含最新博客的块
- en: In the last recipe, we created a page using the Views module to list articles
    in the Drupal site to build a blog. A view can contain multiple displays. Each
    display inherits defaults, such as its style and row format, filters, sorts, pager,
    and more. Each display type might have unique settings, such as the page settings
    where the menu link was configured in the previous recipe. In this recipe, we
    will add a block display so that we can list the five most recent articles by
    title anywhere on the site.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一道菜谱中，我们使用视图模块创建了一个页面，用于在Drupal网站上列出文章以构建博客。视图可以包含多个显示。每个显示继承默认值，例如其样式和行格式、过滤器、排序、分页等。每种显示类型可能具有独特的设置，例如在上一道菜谱中配置菜单链接的页面设置。在这个菜谱中，我们将添加一个块显示，这样我们就可以在网站的任何地方按标题列出最新的五篇文章。
- en: How to do it…
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: Go to **Structure** and then **Views**. This will bring you to the administrative
    overview of all the views that are created.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往**结构**然后**视图**。这将带您到所有创建的视图的管理概览。
- en: Find the **Blog** view that was created in the previous recipe and click on
    **Edit**.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找到在上一道菜谱中创建的**博客**视图，并点击**编辑**。
- en: 'Under **Displays**, where it says **Page**, click on the **Add** button and
    select **Block** from the drop-down menu. This will create a new block display,
    which we can configure:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**显示**下，点击**页面**旁边的**添加**按钮，从下拉菜单中选择**块**。这将创建一个新的块显示，我们可以进行配置：
- en: '![Figure 3.4 – The menu for adding a new display](img/Figure_3.04_B18548.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![图3.4 – 添加新显示的菜单](img/Figure_3.04_B18548.jpg)'
- en: Figure 3.4 – The menu for adding a new display
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.4 – 添加新显示的菜单
- en: In the **Format** section, click on **Content** (next to **Show**) to configure
    the row format used.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**格式**部分，点击**内容**（位于**显示**旁边）以配置使用的行格式。
- en: In the dialog that opens, we need to make sure we only modify the row format
    for this display. In the **For** drop-down menu, select **This block (override)**
    so that the changes are only for this display.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在打开的对话框中，我们需要确保我们只修改此显示的行格式。在**对于**下拉菜单中，选择**此块（覆盖）**，以便更改仅适用于此显示。
- en: 'Select the **Fields** option from the radio buttons and click on **Apply (this
    display)** to set the row format to use individual fields instead of display modes:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从单选按钮中选择**字段**选项并点击**应用（此显示）**以设置行格式以使用单个字段而不是显示模式：
- en: '![Figure 3.5 – The style format form dialog](img/Figure_3.05_B18548.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![图3.5 – 样式格式表单对话框](img/Figure_3.05_B18548.jpg)'
- en: Figure 3.5 – The style format form dialog
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.5 – 样式格式表单对话框
- en: A new dialog will appear that allows you to configure options for this row format.
    Use the defaults and click on **Apply**.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将出现一个新对话框，允许您配置此行格式的选项。使用默认设置并点击**应用**。
- en: Important note
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Changing to using the **Fields** row format will automatically add the **Title**
    field, which has been configured to link to the piece of content.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 更改为使用**字段**行格式将自动添加**标题**字段，该字段已配置为链接到内容片段。
- en: We only want this block to display the five most recent blogs. Under the **Pager**
    section, click on the field next to **Use Pager** to launch the dialog for configuring
    the pager.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们只想让此块显示最近的五篇博客。在**分页器**部分，点击**使用分页器**旁边的字段以启动配置分页器的对话框。
- en: 'Just like the row format, select **This block (override)** from the **For**
    select list. Then, choose the **Display a specified number of items** option.
    Click on **Apply (****this display)**:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 就像行格式一样，从**对于**选择列表中选择**此块（覆盖）**。然后，选择**显示指定数量的项目**选项。点击**应用（此显示）**：
- en: '![Figure 3.6 – The pager selection form dialog](img/Figure_3.06_B18548.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![图3.6 – 分页器选择表单对话框](img/Figure_3.06_B18548.jpg)'
- en: Figure 3.6 – The pager selection form dialog
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.6 – 分页器选择表单对话框
- en: In the next dialog, which allows you to configure the pager settings, change
    **Items to display** to **5**. Click on **Apply** to finish changing the pager.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一个对话框中，允许您配置分页器设置，将**要显示的项目**更改为**5**。点击**应用**以完成更改分页器。
- en: Click on **Save** to save your changes to the view and create the block display.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存**以将您的更改保存到视图并创建块显示。
- en: Go to **Structure** and **Block layout** to place the block on your Drupal site.
    Click on **Place block** for the **Sidebar** **first** region.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往**结构**和**块布局**以将块放置在您的Drupal网站上。点击**放置块**以选择**侧边栏****第一个**区域。
- en: 'Filter the list by typing in your view’s name: **Blog**. Click on **Place block**
    to add your view’s block to the block layout.'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过输入您的视图名称：**博客**来过滤列表。点击**放置块**以将您的视图块添加到块布局。
- en: We do not want this block to display on our blog landing page. In the `/blog`
    to the **Pages** textbox. Change the radio option to **Hide for the** **listed
    pages**.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们不希望此块显示在我们的博客主页上。在`/blog`到**页面**文本框中。将单选选项更改为**隐藏对于****列出的页面**。
- en: This prevents the block from being displayed in the `/blog` path, which is our
    view for the list of articles.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这防止了块在`/blog`路径上显示，这是我们文章列表的视图。
- en: Finally, click on the **Save** block to commit your changes.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，点击**保存**块以提交您的更改。
- en: How it works…
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: '**Blocks**, in Drupal, are a type of plugin. These blocks can be embedded into
    the site layout and can be shown or hidden based on a variety of visibility settings.
    The Views module integrates with the block module to allow view displays to be
    placed as blocks. This empowers Drupal site builders to create dynamic content
    displays that can be used throughout a site.'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在Drupal中，**块**是一种插件类型。这些块可以嵌入到网站布局中，并且可以根据各种可见性设置显示或隐藏。视图模块与块模块集成，允许将视图显示放置为块。这使Drupal网站构建者能够创建可用于整个站点的动态内容显示。
- en: There’s more…
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容...
- en: Now, we will explore some of the other ways in which Views interacts with blocks.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将探讨视图与块交互的其他一些方式。
- en: Usage with Layout Builder
  id: totrans-91
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 与布局构建器一起使用
- en: In [*Chapter 2*](B18548_02.xhtml#_idTextAnchor059), *Content Building Experience*,
    in the *Using layouts to build landing pages* recipe, we used Layout Builder to
    place blocks that contained field values for content. You could place any kind
    of block using Layout Builder, including block displays in your view. Content
    creators can create landing pages using dynamic content provided by views.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第2章*](B18548_02.xhtml#_idTextAnchor059)，“内容构建体验”，在*使用布局构建着陆页*菜谱中，我们使用了布局构建器来放置包含内容字段值的块。您可以使用布局构建器放置任何类型的块，包括视图中的块显示。内容创建者可以使用视图提供的动态内容创建着陆页。
- en: Exposing filters and sorts to users to control listings
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向用户展示筛选和排序功能以控制列表
- en: The Views module supports exposing filters and sorts on a view display for users
    to interact with to adjust the results. This can be done to allow users to filter
    by text or adjust the ordering of the results. In this recipe, we will modify
    the view used to create a blog page. We will add an exposed search filter and
    allow the user to sort articles from newest or oldest.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 视图模块支持在视图显示中公开筛选器和排序，以便用户可以与之交互以调整结果。这可以通过允许用户通过文本筛选或调整结果排序顺序来实现。在本菜谱中，我们将修改用于创建博客页面的视图。我们将添加一个公开搜索筛选器，并允许用户按最新或最旧排序文章。
- en: How to do it…
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Go to **Structure** and then **Views**. This will bring you to an administrative
    overview of all the views that have been created.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往**结构**然后**视图**。这将带您到所有已创建视图的管理概览。
- en: Find the **Blog** view that was created in the first recipe and click on **Edit**.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找到在第一个菜谱中创建的**博客**视图，并点击**编辑**。
- en: Click on **Add** in the **Filter criteria** section of the form.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在表单的**筛选条件**部分点击**添加**。
- en: In the dialog that opens, we need to make sure we only modify the row format
    for this display. In the **For** drop-down menu, select **This page (override)**
    so that the changes are only for this page display and not the block display created
    in the previous recipe.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在打开的对话框中，我们需要确保我们只修改此显示的行格式。在**为**下拉菜单中，选择**此页面（覆盖**）以确保更改仅适用于此页面显示，而不是在先前的菜谱中创建的块显示。
- en: 'Select **Title** in the **Content** category and click on **Add (****this display)**:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**内容**类别中选择**标题**，并点击**添加（**此显示**）**：
- en: '![Figure 3.7 – The add filter form dialog](img/Figure_3.07_B18548.jpg)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![图3.7 – 添加筛选表单对话框](img/Figure_3.07_B18548.jpg)'
- en: Figure 3.7 – The add filter form dialog
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.7 – 添加筛选表单对话框
- en: Check the **Expose this filter to visitors, to allow them to change it** checkbox
    to make this an exposed filter. In the exposed filter configuration form, change
    **Operator** from **Is equal to** to **Contains**. This will allow for more flexible
    searching. Click on **Apply (this display)** to add the new filter.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选中**向访客展示此筛选器，允许他们更改它**复选框，使其成为一个公开筛选器。在公开筛选器配置表单中，将**操作符**从**等于**更改为**包含**。这将允许进行更灵活的搜索。点击**应用（此显示**）以添加新筛选器。
- en: 'In the **Sort** criteria section, click on **Content: Authored on (desc)**.
    Select **This page (override)** from the **For** select list.'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**排序**条件部分，点击**内容：作者时间（降序**）。从**为**选择列表中选择**此页面（覆盖**）。
- en: Check the **Expose this sort to visitors, to allow them to change it** checkbox
    to make this an exposed sort.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选中**向访客展示此排序，允许他们更改它**复选框，使其成为一个公开排序。
- en: Click on **Apply (this display)** to update the sorting configuration.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**应用（此显示**）以更新排序配置。
- en: Click on **Save** to save your changes to the view.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存**以保存对视图的更改。
- en: 'Now, when you view `/blog`, you can search the articles and change their sort
    order:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，当你查看`/blog`时，你可以搜索文章并更改它们的排序顺序：
- en: '![Figure 3.8 – The Blog landing page with exposed filters and sorts](img/Figure_3.08_B18548.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![图3.8 – 带有公开筛选器和排序的博客着陆页](img/Figure_3.08_B18548.jpg)'
- en: Figure 3.8 – The Blog landing page with exposed filters and sorts
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.8 – 带有公开筛选器和排序的博客着陆页
- en: How it works…
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: When a filter or sort is exposed, the Views module attaches a form to the view
    display. This form is controlled by the `\Drupal\views\Form\ViewsExposedForm`
    class. This reads query parameter values from the URL and maps them to known exposed
    filters and sorts. It applies the values to the filter and sort handlers, overriding
    their default values so that the query is adjusted.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 当筛选或排序被公开时，视图模块会将一个表单附加到视图显示。这个表单由`\Drupal\views\Form\ViewsExposedForm`类控制。它从URL中读取查询参数值，并将它们映射到已知的公开筛选器和排序。它将这些值应用到筛选器和排序处理程序，覆盖它们的默认值，以便调整查询。
- en: There’s more…
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: We will now explore the extra options that are available when using exposed
    filters and sorts.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将探讨使用暴露过滤器和排序时可用的一些额外选项。
- en: Exposed versus non-exposed filters and sorts
  id: totrans-115
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 暴露与非暴露过滤器和排序
- en: 'Filters allow you to narrow the scope of the data displayed in a view. Filters
    can either be exposed or not; by default, a filter is not exposed. An example
    would be using the **Content: Publishing status** option set to **Yes (published)**
    to ensure that a view always contains published content. This is an item you would
    configure to display content to site visitors. However, if it were for an administrative
    display, you might want to expose that filter. This way, content editors can easily
    view what content has not been published yet or has been unpublished.'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 过滤器允许您缩小视图显示的数据范围。过滤器可以是暴露的或不暴露的；默认情况下，过滤器不是暴露的。例如，使用**内容：发布状态**选项设置为**是（已发布**）以确保视图始终包含已发布的内容。这是一个您会配置以向网站访客显示内容的项。然而，如果是用于管理显示，您可能希望暴露该过滤器。这样，内容编辑者可以轻松查看尚未发布或已取消发布的内容。
- en: All filter and sort criteria can be marked as exposed.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 所有过滤和排序标准都可以标记为暴露。
- en: Filter identifiers
  id: totrans-118
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 过滤器标识符
- en: Exposed filters work by parsing query parameters in the URL. On our blog page,
    when you search by title and submit the exposed form, the URL will now have a
    query parameter for `title`, `sort_by`, and `sort_order`.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 暴露过滤器通过解析URL中的查询参数来工作。在我们的博客页面上，当您通过标题搜索并提交暴露表单时，URL现在将有一个`title`、`sort_by`和`sort_order`的查询参数。
- en: Exposed filters have a **Filter identifier** option that can change the URL
    component. This can be modified when editing your filter or sort.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 暴露过滤器有一个可以更改URL组件的**过滤器标识符**选项。这可以在编辑过滤器或排序时进行修改。
- en: Exposed forms as blocks
  id: totrans-121
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 作为块的暴露表单
- en: If your view utilizes exposed filters, you have the option to place the exposed
    form in a block. With this option enabled, you could place the block anywhere
    on the page, even pages not for your view.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的视图使用暴露过滤器，您可以选择将暴露表单放置在块中。启用此选项后，您可以在页面的任何位置放置该块，甚至是非视图页面。
- en: An example of using an exposed form in a block is for a search result view.
    You can add an exposed filter for keywords that control the search results. With
    the exposed filters in a block, you can easily place them within your site’s header.
    When an exposed filter block is submitted, it will direct users to your view’s
    display. In this recipe, it will allow users to search for articles without having
    to be on the `/``blog` page.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在块中使用暴露表单的一个例子是用于搜索结果视图。您可以添加一个用于控制搜索结果的暴露过滤器。在块中的暴露过滤器可以轻松地放置在您网站的页眉中。当提交暴露过滤器块时，它将引导用户到视图的显示。在这个菜谱中，它将允许用户搜索文章，而无需在`/``blog`页面上。
- en: To enable the exposed filters as a block, first, you must expand the **Advanced**
    section on the right-hand side of the Views edit form. Click on the **Exposed
    form in block** option from the **Advanced** section. In the options modal that
    opens, select the **Yes** radio button, and click on **Apply**. You can then place
    the block from the **Block** **layout** form.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 要将暴露的过滤器作为块启用，首先，您必须展开视图编辑表单右侧的**高级**部分。从**高级**部分点击**块中的暴露表单**选项。在打开的选项模态中，选择**是**单选按钮，然后点击**应用**。您可以将块放置在**块****布局**表单中。
- en: Contextual filters for filtering by path parameters
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 根据路径参数进行过滤的上下文过滤器
- en: Views can be configured to accept contextual filters, also known as arguments.
    Contextual filters allow you to provide a dynamic or fixed argument that modifies
    the view’s query. Think of it as the root condition in the query. By default,
    the value is expected to be provided from the URL; otherwise, a default operation
    can be chosen if it is not present.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 视图可以被配置为接受上下文过滤器，也称为参数。上下文过滤器允许您提供一个动态或固定的参数来修改视图的查询。将其视为查询中的根条件。默认情况下，期望从URL中提供值；如果没有提供，可以选择默认操作。
- en: In this recipe, we will create a new page called `/user/{user_id}/content` path.
    The value of `{user_id}` will be any user ID that is available in Drupal.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将创建一个名为`/user/{user_id}/content`的新页面路径。`{user_id}`的值将是Drupal中可用的任何用户ID。
- en: How to do it…
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: Go to **Structure** and then **Views**. This will bring you to an administrative
    overview of all the views that have been created. Click on **Add view** to create
    a new view.
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往**结构**然后**视图**。这将带您查看所有已创建视图的管理概览。点击**添加视图**以创建一个新的视图。
- en: Set **View name** to **My Content**.
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**视图名称**设置为**我的内容**。
- en: Next, we will modify the **View settings** section. We want to show **Content**
    of the **All** type and leave the **tagged with** field empty. This will allow
    all content types to be displayed.
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将修改**视图设置**部分。我们想显示**所有**类型的**内容**，并保持**标记为**字段为空。这将允许显示所有内容类型。
- en: 'Check the `user/%user/content`. Click on **Save and edit** to move to the next
    screen:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查`user/%user/content`。点击**保存并编辑**以转到下一屏幕：
- en: '![Figure 3.9 – Page settings with path variable](img/Figure_3.09_B18548.jpg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![图3.9 – 带路径变量的页面设置](img/Figure_3.09_B18548.jpg)'
- en: Figure 3.9 – Page settings with path variable
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.9 – 带路径变量的页面设置
- en: Percentages in the path
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 路径中的百分号
- en: When there is a percentage sign used in a view page display path, the Views
    module understands this as a placeholder for a value that will be used as a contextual
    filter. For example, given the `/user/1234/content` path, the value of `%user`
    will be `1234`.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 当在视图页面显示路径中使用百分号时，Views模块将其理解为上下文过滤器将使用的值的占位符。例如，给定`/user/1234/content`路径，`%user`的值将是`1234`。
- en: Toggle the **Advanced** portion of the form on the right-hand side of the page.
    Click on **Add** in the **Contextual** **filters** section.
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换页面右侧表单的**高级**部分。在**上下文****过滤器**部分点击**添加**。
- en: Select **Authored by** from the **Content** category and then click on the **Add
    and configure contextual** **filters** button.
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**内容**类别中选择**作者**，然后点击**添加并配置上下文****过滤器**按钮。
- en: 'Change the default value of **When the filter value is not in the URL** to
    **Display “Access denied”** to prevent all content from being displayed with an
    incorrect route value. Click on **Apply** to add the contextual filter and close
    the dialog:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**当过滤器值不在URL中时**的默认值更改为**显示“访问拒绝”**，以防止所有内容因错误的路由值而显示。点击**应用**以添加上下文过滤器并关闭对话框：
- en: '![Figure 3.10 – The contextual filter settings](img/Figure_3.10_B18548.jpg)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![图3.10 – 上下文过滤器设置](img/Figure_3.10_B18548.jpg)'
- en: Figure 3.10 – The contextual filter settings
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.10 – 上下文过滤器设置
- en: Under **Page settings**, the default access is for the **View published content**
    permission. Click on **View published content** to change the permission to **View
    user information**. Click on **Apply** to set the permissions for the page display.
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**页面设置**下，默认访问权限是**查看已发布内容**权限。点击**查看已发布内容**以将权限更改为**查看用户信息**。点击**应用**以设置页面显示的权限。
- en: Next, we will add the page as a menu tab on the user page. Click on **No Menu**
    from the **Menu** option.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将把页面添加到用户页面上的菜单标签。从**菜单**选项中点击**无菜单**。
- en: 'Select **Menu tab** and provide a **Menu link** title, such as **My Content**.
    Click on **Apply** to change the menu settings:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**菜单标签**并提供一个**菜单链接**标题，例如**我的内容**。点击**应用**以更改菜单设置：
- en: '![Figure 3.11 – Configured view overview](img/Figure_3.11_B18548.jpg)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![图3.11 – 配置的视图概述](img/Figure_3.11_B18548.jpg)'
- en: Figure 3.11 – Configured view overview
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.11 – 配置的视图概述
- en: Then, click on **Save** to save the view.
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，点击**保存**以保存视图。
- en: Go to `/user/1/content`, and you will see the content created by the first user.
    It will also be listed as a tab next to **View** and **Edit**.
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往 `/user/1/content`，你将看到第一个用户创建的内容。它也将作为标签显示在**查看**和**编辑**旁边。
- en: How it works…
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Contextual filters are similar to using route parameters in Drupal’s routing
    system, built on top of the routing component from Symfony. Route parameters are
    represented by percentage signs as placeholders in the view’s page display path.
    Views will match up each placeholder with the contextual filters by order of their
    placement. This allows you to have multiple contextual filters, so you just need
    to ensure they are ordered properly.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 上下文过滤器类似于在Drupal的路由系统中使用路由参数，该系统建立在Symfony的路由组件之上。路由参数在视图的页面显示路径中以百分号作为占位符。视图将按照它们放置的顺序将每个占位符与上下文过滤器匹配。这允许你拥有多个上下文过滤器，因此只需确保它们按正确顺序排列。
- en: Using contextual filters on other display types
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在其他显示类型上使用上下文过滤器
- en: When using other display types, such as blocks, you will need to use the **Provide
    a default** **value** option.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用其他显示类型，如块时，你需要使用**提供一个默认值****选项**。
- en: Most fields that can be used as regular filters are allowed as contextual filters.
    The benefit of this is that they can receive dynamic values without forcing them
    to be exposed filters to the end user.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数可以用作常规过滤器的字段都可以用作上下文过滤器。这种做法的好处是它们可以接收动态值，而无需强迫它们作为暴露给最终用户的过滤器。
- en: There’s more…
  id: totrans-154
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容…
- en: Now we will explore the extra options available when using contextual filters.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将探讨使用上下文过滤器时可用的一些额外选项。
- en: Previewing with contextual filters
  id: totrans-156
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用上下文过滤器预览
- en: You are still able to preview a view from the edit form. You can simply add
    the contextual filter values to the text form concatenated by a forward slash
    (`/`). In this recipe, you could replicate navigating to `/user/1/content` by
    simply inputting `1` into the preview form and updating the preview.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 您仍然可以从编辑表单预览视图。您只需将上下文过滤器值添加到由正斜杠（`/`）连接的文本表单中即可。在这个配方中，您可以通过在预览表单中输入`1`并更新预览来复制导航到`/user/1/content`。
- en: Providing a default value
  id: totrans-158
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提供默认值
- en: There is an option to provide a default value when the filter value is not available.
    For instance, a fixed value could be provided as a fallback, or the view can try
    to get the content ID from the current URL or use the currently logged-in user.
    Some of the options are always available, and some will differ based on the data
    being displayed in the view.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 当过滤器值不可用时，有一个选项可以提供默认值。例如，可以提供一个固定值作为后备，或者视图可以尝试从当前URL获取内容ID或使用当前登录用户。一些选项始终可用，而一些则取决于视图中显示的数据。
- en: When using a view with a block display, the default value option allows you
    to leverage contextual filters without a path being available to provide the parameter
    value. This is especially useful when creating landing pages with Layout Builder.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用具有块显示的视图时，默认值选项允许您在没有路径可用以提供参数值的情况下利用上下文过滤器。这在使用布局构建器创建落地页时特别有用。
- en: Altering the page title
  id: totrans-161
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 修改页面标题
- en: With contextual filters, you can manipulate the current page’s title. You can
    check the **Override title** option in the **When the filter value is present
    in the URL or a default is** **provided** section.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 使用上下文过滤器，您可以操作当前页面的标题。您可以在“**当过滤器值在URL中或提供默认值时**”部分中检查“**覆盖标题**”选项。
- en: This textbox allows you to enter a new title that will be displayed. The **Replacement
    patterns** section contains tokens that could be used for dynamic title content.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 此文本框允许您输入将显示的新标题。**替换模式**部分包含可用于动态标题内容的占位符。
- en: Validation of contextual filter arguments
  id: totrans-164
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 上下文过滤器参数的验证
- en: Contextual filters can have validation requirements attached. Without specifying
    extra validation, the Views module will take the expected argument and try to
    make it just work. You can add validation to help limit this scope and filter
    out invalid route parameters.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 上下文过滤器可以附加验证要求。如果没有指定额外的验证，视图模块将采用预期的参数并尝试使其正常工作。您可以添加验证来帮助限制此范围并过滤掉无效的路由参数。
- en: You can enable validation by checking **Specify validation criteria** from the
    **When the filter value is in the URL or a default is provided** section. The
    default is set to **Basic validation**, which allows you to specify how the view
    should react if the data becomes invalid. Based on our recipe, this would be if
    the user for the ID in the route parameter is not found.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过勾选“**指定验证标准**”从“**当过滤器值在URL中或提供默认值时**”部分来启用验证。默认设置为“**基本验证**”，这允许您指定视图在数据无效时应该如何反应。根据我们的配方，这将是如果找不到路由参数中的ID对应的用户。
- en: The list of **Validator** options is not filtered by the contextual filter item
    you selected. So, some might not be applicable. For our recipe, you might want
    the **User ID** option. This validator would make sure that the user ID exists.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '**验证器**选项列表不会被您选择的上下文过滤器项过滤。因此，其中一些可能不适用。对于我们的配方，您可能希望选择“**用户ID**”选项。此验证器将确保用户ID存在。'
- en: This gives you granular control over how the view operates and executes its
    query when using contextual filters.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 这为您提供了对视图如何操作以及在使用上下文过滤器时如何执行查询的细粒度控制。
- en: Multiple arguments and exclusion
  id: totrans-169
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 多个参数和排除
- en: You might configure the contextual filter to allow `AND` or `OR` operations,
    along with using the context filter value for exclusion rather than inclusion.
    These options are under the **More** section when adding or editing a contextual
    filter.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能配置上下文过滤器以允许“**AND**”或“**OR**”操作，同时使用上下文过滤器值进行排除而不是包含。这些选项在添加或编辑上下文过滤器时位于“**更多**”部分。
- en: The `AND` or `OR` operations. If the contextual filter argument contains a series
    of values concatenated by plus (`+`) signs, it acts as an `OR` operation. If the
    values are concatenated by commas (`,`) it acts like an `AND` operation.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: “**AND**”或“**OR**”操作。如果上下文过滤器参数包含由加号（`+`）连接的一系列值，则它充当“**OR**”操作。如果值由逗号（`,`）连接，则它类似于“**AND**”操作。
- en: When the `Exclude` option has been checked, the value will be excluded from
    the results rather than limiting results based on that value. For example, with
    the user ID provided in this recipe, we could exclude content created by that
    user to display content created by all other users.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 当勾选了`排除`选项时，值将被排除在结果之外，而不是基于该值限制结果。例如，使用本菜谱中提供的用户ID，我们可以排除该用户创建的内容，以显示其他所有用户创建的内容。
- en: Adding related data in a view with relationships
  id: totrans-173
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在具有关系的视图中添加相关数据
- en: As stated at the beginning of the chapter, Views is a visual query builder.
    When you first create a view, a base table is specified from which to pull data.
    The Views module automatically knows how to join tables for field data, such as
    body text or custom-attached fields.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 如本章开头所述，视图是一个可视化查询构建器。当你首次创建视图时，会指定一个基础表，从中提取数据。视图模块会自动知道如何连接字段数据表，例如正文文本或自定义附加字段。
- en: When using an entity reference field, you can display the value as the identifier,
    the referenced entity’s label, or the entire rendered entity. However, if you
    add a relationship based on a reference field, you will have access to display
    any of that entity’s available fields.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用实体引用字段时，你可以将值显示为标识符、引用实体的标签或整个渲染的实体。然而，如果你基于引用字段添加关系，你将能够显示该实体可用的任何字段。
- en: In this recipe, we will update the **Files** view, used for administering files,
    to display the username of the user who uploaded the file.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 在本菜谱中，我们将更新用于管理文件的**文件**视图，以显示上传文件的用户的用户名。
- en: How to do it…
  id: totrans-177
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: Go to **Structure** and then **Views**. This will bring you to the administrative
    overview of all the views that have been created.
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往**结构**然后**视图**。这将带您到所有已创建视图的管理概览。
- en: 'Find the **Files** view and click on **Edit**:'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找到**文件**视图并点击**编辑**：
- en: '![Figure 3.12 – The Files view in the Views listing](img/Figure_3.12_B18548.jpg)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.12 – 视图列表中的文件视图](img/Figure_3.12_B18548.jpg)'
- en: Figure 3.12 – The Files view in the Views listing
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.12 – 视图列表中的文件视图
- en: Click on **Advanced** to expand the section and then click on **Add**, which
    is next to **Relationships**.
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**高级**以展开该部分，然后点击**添加**，它位于**关系**旁边。
- en: Search for **User**. Select the **User who uploaded** relationship option and
    click on **Apply (****this display)**.
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 搜索**用户**。选择**上传用户**的关系选项，然后点击**应用（**此显示**）**。
- en: Next, we will be presented with a configuration form for the relationship. Click
    on **Apply (this display)** to use the defaults.
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将看到一个关系配置表单。点击**应用（此显示）**以使用默认值。
- en: Add a new field by clicking on **Add** in the **Fields** section.
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在**字段**部分点击**添加**来添加一个新字段。
- en: 'Search for **Name** and select the **Name** field from the **User** category.
    Then, click on **Apply (****all displays)**:'
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 搜索**名称**并从**用户**类别中选择**名称**字段。然后，点击**应用（**所有显示**）**：
- en: '![Figure 3.13 – The Name field from the User category](img/Figure_3.13_B18548.jpg)'
  id: totrans-187
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.13 – 用户类别中的名称字段](img/Figure_3.13_B18548.jpg)'
- en: Figure 3.13 – The Name field from the User category
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.13 – 用户类别中的名称字段
- en: This view uses aggregation, which presents a new configuration form when you
    first add a field. Click on **Apply and continue** to use the aggregation defaults.
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此视图使用聚合，当你首次添加字段时，会显示一个新的配置表单。点击**应用并继续**以使用聚合默认值。
- en: We will use the default field settings that will provide the label **Name**
    and format as the username and link to the user’s profile. Click on **Apply (****all
    displays)**.
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将使用默认字段设置，这将提供**名称**标签，并以用户名和链接到用户个人资料的方式格式化。点击**应用（**所有显示**）**。
- en: Click on **Save** to finish editing the view and commit your changes.
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存**以完成编辑视图并提交您的更改。
- en: When viewing the files list in `/admin/content/files`, the username of the user
    that uploaded the file will now be displayed.
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当在`/admin/content/files`中查看文件列表时，现在将显示上传文件的用户的用户名。
- en: How it works…
  id: totrans-193
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Drupal stores data in a normalized format. In short, database normalization
    involves the organization of data in specifically related tables. Each entity
    type has its own database table, and all fields have their own database table.
    When you create a view and specify what kind of data will be shown, you are specifying
    a base table in the database that Views will query. Views will automatically associate
    fields that belong to the entity and its relationship to those tables for you.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: Drupal以规范化的格式存储数据。简而言之，数据库规范化涉及将数据组织到特定相关的表中。每种实体类型都有自己的数据库表，所有字段也都有各自的数据库表。当你创建一个视图并指定将显示哪种数据时，你实际上是在指定数据库中的一个基础表，视图将查询这个表。视图会自动将属于实体及其关系的字段与那些表关联起来。
- en: When an entity has an entity reference field, you can add a relationship to
    the referenced entity type’s table. This is an explicit definition, whereas fields
    are implicit. When the relationship is explicitly defined, all the referenced
    entity type’s fields come into scope. The fields on the referenced entity type
    can then be displayed, filtered, and sorted.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 当一个实体有一个实体引用字段时，你可以向引用的实体类型表添加一个关系。这是一个显式定义，而字段是隐式的。当关系被显式定义时，所有引用的实体类型的字段都会进入作用域。然后可以在引用的实体类型上显示、过滤和排序字段。
- en: There’s more…
  id: totrans-196
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容...
- en: Using relationships in Views allows you to create some powerful displays. Now
    we will discuss additional information about relationships.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 使用视图中的关系可以创建一些强大的显示效果。现在我们将讨论关于关系的一些附加信息。
- en: Relationships provided by entity reference fields
  id: totrans-198
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 通过实体引用字段提供的关系
- en: The Views module uses a series of hooks to retrieve data that it then uses to
    represent ways to interact with the database. One of these is the `hook_field_views_data`
    hook, which processes a field storage configuration entity and registers its data
    with Views. The Views module implements this on behalf of the Drupal core to add
    relationships and reverse relationships, for Entity reference fields.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: Views模块使用一系列钩子来检索数据，然后使用这些数据来表示与数据库交互的方式。其中之一是`hook_field_views_data`钩子，它处理字段存储配置实体并将其数据注册到Views中。Views模块代表Drupal核心实现此钩子，以添加实体引用字段的正向和反向关系。
- en: Since Entity reference fields have set schema information, Views can dynamically
    generate these relationships by understanding the field’s table name, the destination
    entity’s table name, and the destination entity’s identifier column.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 由于实体引用字段具有固定的模式信息，Views可以通过理解字段表名、目标实体表名和目标实体标识列来动态生成这些关系。
- en: Relationships provided through custom code
  id: totrans-201
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 通过自定义代码提供的关系
- en: There are times when you will need to define a relation in the database with
    your own custom code. One example of exposing a database table to the Views module
    is in the `hook_views_data` hook to expose information about its database to the
    Views module.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候，你需要使用自己的自定义代码在数据库中定义一个关系。将数据库表暴露给Views模块的一个例子是在`hook_views_data`钩子中，用于向Views模块暴露其数据库信息。
- en: 'For instance, the `dblog_schema` hook implementation returns a `uid` column
    for the watchdog database table. This is a foreign key to the user table to associate
    the log with a user. That column is then exposed to Views using the following
    definition:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，`dblog_schema`钩子实现返回watchdog数据库表的`uid`列。这是用户表的键外键，用于将日志与用户关联起来。该列随后通过以下定义暴露给视图：
- en: '[PRE1]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This array tells Views that the `watchdog` table has a column named `uid`. It
    is numeric in nature for its display, filtering capabilities, and sorting capabilities.
    The relationship key is an array of information that instructs Views how to use
    this to provide a relationship (`LEFT JOIN`) on the `users` table. The user entity
    uses the `users` table and has a primary key of `uid`.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 这个数组告诉Views，`watchdog`表有一个名为`uid`的列。它在显示、过滤和排序方面是数值型的。关系键是一个信息数组，指导Views如何使用它来在`users`表上提供关系（`LEFT
    JOIN`）。用户实体使用`users`表，其主键为`uid`。
- en: Providing an entity reference result view
  id: totrans-206
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提供实体引用结果视图
- en: Entity reference fields allow you to reference other entities. Often, this is
    used with content to reference taxonomy terms or related content. By default,
    the entity reference will display all the available entities that can be referenced.
    However, using the Views module and its entity reference view display type, you
    can provide a more controlled result.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 实体引用字段允许您引用其他实体。通常，这与内容一起使用，以引用分类术语或相关内容。默认情况下，实体引用将显示所有可引用的实体。然而，使用视图模块及其实体引用视图显示类型，您可以提供更受控的结果。
- en: In this recipe, we will create an entity reference view that filters references
    based on content created by the current author. We will then add a field to the
    user account form, allowing users to select their favorite contributed content.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将创建一个实体引用视图，该视图根据当前作者创建的内容过滤引用。然后，我们将向用户账户表单添加一个字段，允许用户选择他们最喜欢的贡献内容。
- en: How to do it…
  id: totrans-209
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: Go to **Structure** and then **Views**. This will bring you to the administrative
    overview of all the views that have been created. Click on **Add view** to create
    a new view.
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往**结构**然后**视图**。这将带您到所有已创建视图的管理概览。点击**添加视图**以创建新的视图。
- en: Set **View name** to **My Content Reference View** and keep the current **View**
    **settings** configuration.
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**视图名称**设置为**我的内容引用视图**并保持当前的**视图设置**配置。
- en: Do not choose to create a page or block. Click on **Save and edit** to continue
    working on your view.
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不要选择创建页面或块。点击**保存并编辑**以继续编辑您的视图。
- en: 'Click on the **Add** button to create a new display. Select the **Entity Reference**
    option to create the new display:'
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**添加**按钮以创建新的显示。选择**实体引用**选项以创建新的显示：
- en: '![Figure 3.14 – The Add a display drop-down menu](img/Figure_3.14_B18548.jpg)'
  id: totrans-214
  prefs: []
  type: TYPE_IMG
  zh: '![图3.14 – 添加显示的下拉菜单](img/Figure_3.14_B18548.jpg)'
- en: Figure 3.14 – The Add a display drop-down menu
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.14 – 添加显示的下拉菜单
- en: The style format will automatically be set to `Settings` next to **Entity Reference
    List** to modify the style format settings.
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 样式格式将自动设置为**实体引用列表**旁边的**设置**以修改样式格式设置。
- en: 'For **Search Fields**, check the **Content: Title** option and then click on
    **Apply**. This is what the field will perform the autocomplete search on:'
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于**搜索字段**，勾选**内容：标题**选项，然后点击**应用**。这就是该字段将执行自动完成搜索的内容：
- en: '![Figure 3.15 – Entity reference style options](img/Figure_3.15_B18548.jpg)'
  id: totrans-218
  prefs: []
  type: TYPE_IMG
  zh: '![图3.15 – 实体引用样式选项](img/Figure_3.15_B18548.jpg)'
- en: Figure 3.15 – Entity reference style options
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.15 – 实体引用样式选项
- en: We will then use a contextual filter to limit the results to the currently logged-in
    user. Click on **Add** from **Contextual filters** in the **Advanced** section.
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们将使用上下文过滤器来限制结果仅限于当前登录用户。在**高级**部分点击**上下文过滤器**中的**添加**。
- en: Select the **Authored by** option in the **Content** category and click on **Add
    and configure** **contextual filters**.
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**内容**类别中选择**作者**选项，然后点击**添加和配置上下文过滤器**。
- en: 'Change the **When the filter value is not available** setting to **Provide
    a default value**. Select **User ID from the logged in user** from the **Type**
    select list. Click on **Apply** to add the contextual filter:'
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**当过滤器值不可用**设置更改为**提供默认值**。从**类型**选择列表中选择**从登录用户获取用户ID**。点击**应用**以添加上下文过滤器：
- en: '![Figure 3.16 – User contextual filter with the default value provided](img/Figure_3.16_B18548.jpg)'
  id: totrans-223
  prefs: []
  type: TYPE_IMG
  zh: '![图3.16 – 带有默认值的用户上下文过滤器](img/Figure_3.16_B18548.jpg)'
- en: Figure 3.16 – User contextual filter with the default value provided
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.16 – 带有默认值的用户上下文过滤器
- en: Click on **Save** to save the view.
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存**以保存视图。
- en: Go to **Configuration** in the administrative toolbar, then **Account settings**
    to click on **Manage Fields** to configure fields on user accounts.
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在管理工具栏中转到**配置**，然后点击**账户设置**以点击**管理字段**来配置用户账户上的字段。
- en: Add a new **Reference** field that references **Content**. Call it **Highlighted
    Contributions** and allow it to have unlimited values. Click on the **Save field**
    **settings** button.
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加一个新的**引用**字段，该字段引用**内容**。命名为**突出贡献**并允许其具有无限值。点击**保存字段设置**按钮。
- en: 'Change the **Reference type** method to use **View: Filter by an entity reference
    view** and select the view we have just created. Click on the **Save** **settings**
    button.'
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**引用类型**方法更改为使用**视图：通过实体引用视图过滤**并选择我们刚刚创建的视图。点击**保存设置**按钮。
- en: Now, when a user edits their account, they can only reference content that they
    have created as values for this reference field.
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，当用户编辑他们的账户时，他们只能引用他们创建的内容作为此引用字段的值。
- en: How it works…
  id: totrans-230
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: The entity reference field definition provides selection plugins. The Views
    module provides an entity reference selection plugin. This allows entity reference
    to gather data into a view to receive available results.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 实体引用字段定义提供了选择插件。视图模块提供了一个实体引用选择插件。这允许实体引用将数据收集到视图中以接收可用结果。
- en: The display type for Views requires you to select which fields will be used
    to search against when using the autocomplete widget. If you are not using the
    autocomplete widget and instead use the select list or checkboxes and radio buttons,
    then it will return the view display’s entire results.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 视图的显示类型要求您选择在使用自动完成小部件时将使用哪些字段进行搜索。如果您不使用自动完成小部件，而是使用选择列表或复选框和单选按钮，则它将返回视图显示的全部结果。
- en: Displaying charts using Views
  id: totrans-233
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用视图显示图表
- en: In this recipe, we will use the **Charts** module to create graphs using the
    Views module. The Charts module integrates different graphing libraries with the
    Views module. The view created in this recipe will display a graph based on statistics
    generated from the Statistic modules to graph visits to content on the Drupal
    site.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 在本食谱中，我们将使用**图表**模块通过视图模块创建图表。图表模块将不同的绘图库与视图模块集成。本食谱中创建的视图将根据从统计模块生成的统计数据显示图表，以图表化Drupal站点上的内容访问。
- en: Leverage the Charts module to create a view that renders a chart of data.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 利用图表模块创建一个渲染数据图表的视图。
- en: Getting ready
  id: totrans-236
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: This recipe requires having enough data available to put into a graph. We will
    be using data available from the Statistics module, which tracks content page
    views. To generate content and view statistics, we will use the **Devel** (for
    Development) module. This module provides the means of generating sample content
    and populating statistics.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 本食谱需要足够的数据来放入图表中。我们将使用来自统计模块的数据，该模块跟踪内容页面浏览量。为了生成内容和查看统计信息，我们将使用**Devel**（开发）模块。此模块提供了生成示例内容和填充统计信息的方法。
- en: 'To use `Devel` to generate content, we must add it with Composer and install
    it with **Drush**:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用`Devel`生成内容，我们必须使用Composer添加它，并使用**Drush**安装它：
- en: '[PRE2]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Now, we can generate content. Log in to your Drupal site and visit `/admin/config/development/generate/content`.
    Check the checkbox for **Article** to generate articles. Ensure the **Add statistics
    for each node (node_counter table)** checkbox is checked so that statistics are
    generated. Press **Generate** to generate the sample content.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以生成内容。登录到您的Drupal站点并访问`/admin/config/development/generate/content`。勾选**文章**复选框以生成文章。确保勾选**为每个节点（node_counter表）添加统计信息**复选框，以便生成统计信息。按**生成**以生成示例内容。
- en: How to do it…
  id: totrans-241
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'First, we must add the Charts module to the Drupal site using Composer and
    install it along with its Google Charts submodule with `Drush`:'
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们必须使用Composer将图表模块添加到Drupal站点，并使用`Drush`安装它及其Google图表子模块：
- en: '[PRE3]'
  id: totrans-243
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-244
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Go to **Structure** and then **Views**. This will bring you to the administrative
    overview of all the views that have been created. Click on **Add view** to create
    a new view.
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往**结构**然后**视图**。这将带您到所有已创建视图的管理概览。点击**添加视图**以创建新的视图。
- en: Set **View name** to **Content Statistics** and keep the default **View** **settings**
    values.
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**视图名称**设置为**内容统计**，并保留默认的**视图****设置**值。
- en: 'Check the **Create a page** checkbox to create a page. Use the default values
    provided. Under **Page display settings**, change the display format to **Chart**
    of **fields**:'
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开**创建页面**复选框以创建页面。使用提供的默认值。在**页面显示设置**下，将显示格式更改为**字段**的**图表**：
- en: '![Figure 3.17 – Page settings for the chart view](img/Figure_3.17_B18548.jpg)'
  id: totrans-248
  prefs: []
  type: TYPE_IMG
  zh: '![图3.17 – 图表视图的页面设置](img/Figure_3.17_B18548.jpg)'
- en: Figure 3.17 – Page settings for the chart view
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.17 – 图表视图的页面设置
- en: Click on **Save and edit** to continue working on your view.
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存并编辑**以继续对视图进行工作。
- en: In the **Fields** section, click on **Add**. Search for **Total views** under
    the **Content statistics** category. Click on **Add and configure fields** to
    continue.
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**字段**部分，点击**添加**。在**内容统计**类别下搜索**总浏览量**。点击**添加和配置字段**以继续。
- en: Check the **Create a label** checkbox and set the **Label** to **Total views**.
    Click on **Apply** to finish adding the field.
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开**创建标签**复选框，并将**标签**设置为**总浏览量**。点击**应用**以完成字段的添加。
- en: Next, we need to configure the chart to use our **Total views** field as the
    data for the chart. In the **Format** section, click on **Settings** next to **Chart**.
  id: totrans-253
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要配置图表以使用我们的**总浏览量**字段作为图表的数据。在**格式**部分，点击**图表**旁边的**设置**。
- en: Select **Google** from the **Charting library** drop-down menu.
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**图表库**下拉菜单中选择**Google**。
- en: 'Keep the **Label field** option set to **Content: Title**. In the **Provides
    data** column, check the **totalcount** checkbox:'
  id: totrans-255
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保持**标签字段**选项设置为**内容：标题**。在**提供数据**列中，勾选**totalcount**复选框：
- en: '![Figure 3.18 – Chart style settings](img/Figure_3.18_B18548.jpg)'
  id: totrans-256
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.18 – 图表样式设置](img/Figure_3.18_B18548.jpg)'
- en: Figure 3.18 – Chart style settings
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.18 – 图表样式设置
- en: Click on **Apply** to set the chart settings.
  id: totrans-258
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**应用**以设置图表设置。
- en: Click on **Save** to save your view.
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存**以保存您的视图。
- en: Visit `/content-statistics` to see the chart of usage statistics.
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问`/content-statistics`以查看使用统计图表。
- en: How it works…
  id: totrans-261
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: The Charts module provides an API to integrate with various charting libraries
    such as Google Charts, Highcharts, and more. Developers can create charts with
    custom code, but one of the greatest features is its integration with Views.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 图表模块提供了一个API，可以与各种图表库（如Google Charts、Highcharts等）集成。开发者可以使用自定义代码创建图表，但其中一个最伟大的功能是它与视图的集成。
- en: The Charts module allows you to display values as various chart types. It also
    allows you to provide multiple data types to create advanced graphs. Each chart
    library has various settings that can be configured.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 图表模块允许您以各种图表类型显示值。它还允许您提供多种数据类型以创建高级图表。每个图表库都有各种可配置的设置。
- en: See also
  id: totrans-264
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: 'The Charts module project page on Drupal.org: [https://www.drupal.org/project/charts](https://www.drupal.org/project/charts)'
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Drupal.org上的图表模块项目页面：[https://www.drupal.org/project/charts](https://www.drupal.org/project/charts)
- en: 'Charts module documentation: [https://www.drupal.org/docs/contributed-modules/charts](https://www.drupal.org/docs/contributed-modules/charts)'
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图表模块文档：[https://www.drupal.org/docs/contributed-modules/charts](https://www.drupal.org/docs/contributed-modules/charts)
