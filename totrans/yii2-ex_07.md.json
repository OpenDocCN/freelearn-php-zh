["```php\n<?php\nnamespace app\\controllers;\n\nuse Yii;\nuse yii\\web\\Controller;\n\nclass ThreeColumnsController extends Controller\n{\n    public function actionIndex()\n    {\n        return $this->render('index.php');\n    }\n}\n```", "```php\n<div id=\"layout\">\n    <div id=\"colSx\" class=\"column\">\n            Content of SX Column\n    </div>\n    <div id=\"colCenter\" class=\"column\">\n            Content of Central Column\n    </div>\n    <div id=\"colDx\" class=\"column\">\n            Content of DX Column\n    </div>\n</div>\n```", "```php\n<?php\n\n$this->registerCss( <<< EOT_CSS\n\n    .column\n    {\n            border:1px solid black;\n    }\n\n    #layout\n    {\n        position:relative;\n        margin:0pt auto;\n        width:1400px;\n    }\n\n    #colSx\n    {\n        width:200px;\n        float:left;\n    }\n\n    #colCenter\n    {\n        width:1000px;\n        float:left;\n    }\n\n    #colDx\n    {\n        width:200px;\n        float:left;\n    }\n\nEOT_CSS\n);\n\n?>\n```", "```php\n<?php\n$this->registerJs( <<< EOT_JS\n\n    function resizeLayout()\n    {\n        var windowWidth = $(window).width();\n\n        if(windowWidth > 1400)\n        {\n            $('#colSx').css('display', 'block');\n            $('#colCenter').css('display', 'block');\n            $('#colDx').css('display', 'block');\n            $('#layout').css('width', 1400);\n        }\n        else if((windowWidth>1200)&&(windowWidth<=1400))\n        {\n            $('#colSx').css('display', 'block');\n            $('#colCenter').css('display', 'block');\n            $('#colDx').css('display', 'none');\n            $('#layout').css('width', 1200);\n        }\n        else if(windowWidth<1200)\n        {\n            $('#colSx').css('display', 'none');\n            $('#colCenter').css('display', 'block');\n            $('#colDx').css('display', 'none');\n            $('#layout').css('width', 1000);\n        }\n\n    }\n\n    $(window).resize(function() {\n            resizeLayout();\n    });\n\n    $(function() {\n            resizeLayout();\n    });\n\nEOT_JS\n);\n?>\n```", "```php\n<?php\n$this->registerJs( <<< EOT_JS\n\n     // using GET method\n$.get({\n  url: url,\n  data: data,\n  success: success,\n  dataType: dataType\n});\n\n     // using POST method\n$.post({\n  url: url,\n  data: data,\n  success: success,\n  dataType: dataType\n});\n\nEOT_JS\n);\n?>\n```", "```php\n    public function actionDetailDependentDropdown()\n    {\n        $showDetail = false;\n\n        $model = new Reservation();\n\n        if(isset($_POST['Reservation']))\n        {\n          $model->load( Yii::$app->request->post() );\n\n          if(isset($_POST['Reservation']['id'])&&($_POST['Reservation']['id']!=null))\n            {\n               $model = Reservation::findOne($_POST['Reservation']['id']);\n               $showDetail = true;\n            }\n        }\n\n        return $this->render('detailDependentDropdown', [ 'model' => $model, 'showDetail' => $showDetail ]);\n    }\n```", "```php\n    public function actionAjaxDropDownListByCustomerId($customer_id)\n    {\n        $output = '';\n\n        $items = Reservation::findAll(['customer_id' => $customer_id]);\n        foreach($items as $item)\n        {\n            $content = sprintf('reservation #%s at %s', $item->id, date('Y-m-d H:i:s', strtotime($item->reservation_date)));\n            $output .= \\yii\\helpers\\Html::tag('option', $content, ['value' => $item->id]);\n        }\n\n        return $output;\n    }\n```", "```php\n<?php\nuse yii\\helpers\\Html;\nuse yii\\widgets\\ActiveForm;\nuse yii\\helpers\\ArrayHelper;\nuse yii\\helpers\\Url;\nuse app\\models\\Customer;\nuse app\\models\\Reservation;\n\n$urlReservationsByCustomer = Url::to(['reservations/ajax-drop-down-list-by-customer-id']);\n$this->registerJs( <<< EOT_JS\n\n    $(document).on('change', '#reservation-customer_id', function(ev) {\n\n        $('#detail').hide(); \n\n        var customerId = $(this).val();    \n\n        $.get(\n            '{$urlReservationsByCustomer}',\n            { 'customer_id' : customerId },\n            function(data) {\n                data = '<option value=\"\">--- choose</option>'+data;\n                $('#reservation-id').html(data);\n            }\n        )\n        ev.preventDefault();\n    });\n\n    $(document).on('change', '#reservation-id', function(ev) {\n        $(this).parents('form').submit();\n        ev.preventDefault();\n    });\n\nEOT_JS\n);\n\n?>\n\n<div class=\"customer-form\">\n    <?php $form = ActiveForm::begin(['enableAjaxValidation' => false, 'enableClientValidation' => false, 'options' => ['data-pjax' => '']]); ?>\n\n    <?php $customers = Customer::find()->all(); ?>\n    <?= $form->field($model, 'customer_id')->dropDownList(ArrayHelper::map( $customers, 'id', 'nameAndSurname'), [ 'prompt' => '--- choose' ]) ?>\n\n    <?php $reservations = Reservation::findAll(['customer_id' => $model->customer_id]); ?>\n    <?= $form->field($model, 'id')->label('Reservation ID')->dropDownList(ArrayHelper::map( $reservations, 'id', function($temp, $defaultValue) {\n      $content = sprintf('reservation #%s at %s', $temp->id, date('Y-m-d H:i:s', strtotime($temp->reservation_date)));\n        return $content;\n    }), [ 'prompt' => '--- choose' ]); ?>\n\n    <div id=\"detail\">\n    <?php if($showDetail) { ?>\n        <hr />\n        <h2>Reservation Detail:</h2>\n        <table>\n            <tr>\n                <td>Price per day</td>\n                <td><?php echo $model->price_per_day ?></td>\n            </tr>\n        </table>\n    <?php } ?>\n    </div>\n\n    <?php ActiveForm::end(); ?>\n\n</div>\n```", "```php\npublic function getDescription()\n{\n$content = sprintf('reservation #%s at %s', $this>id, date('Y-m-d H:i:s', strtotime($this>reservation_date)));\n            return $content;\n}\n```", "```php\n    <?= $form->field($model, 'id')->dropDownList(ArrayHelper::map( $reservations, 'id', 'description'), [ 'prompt' => '--- choose' ]); ?>\n```", "```php\n        <?php\n            NavBar::begin([\n                'brandLabel' => 'My Company',\n                'brandUrl' => Yii::$app->homeUrl,\n                'options' => [\n                    'class' => 'navbar-inverse navbar-fixed-top',\n                ],\n            ]);\n            echo Nav::widget([\n                'options' => ['class' => 'navbar-nav navbar-right'],\n                'items' => [\n                    ['label' => 'Home', 'url' => ['/site/index']],\n                    ['label' => 'About', 'url' => ['/site/about']],\n                    ['label' => 'Contact', 'url' => ['/site/contact']],\n                    Yii::$app->user->isGuest ?\n                        ['label' => 'Login', 'url' => ['/site/login']] :\n                        ['label' => 'Logout (' . Yii::$app->user->identity->username . ')',\n                            'url' => ['/site/logout'],\n                            'linkOptions' => ['data-method' => 'post']],\n                ],\n            ]);\n            NavBar::end();\n        ?>\n```", "```php\nphp composer.phar require --prefer-dist yiisoft/yii2-jui\n\n```", "```php\necho DatePicker::widget([\n    'model' => $model,\n    'attribute' => 'from_date',\n    //'language' => 'it',\n    //'dateFormat' => 'yyyy-MM-dd',\n]);\n```", "```php\necho DatePicker::widget([\n    'name'  => 'from_date',\n    'value'  => $value,\n    //'language' => 'it',\n    //'dateFormat' => 'yyyy-MM-dd',\n]);\n```", "```php\n<?php\n\nnamespace app\\controllers;\n\nuse Yii;\nuse yii\\web\\Controller;\nuse app\\models\\Reservation;\n\nclass JuiWidgetsController extends Controller\n{\n    public function actionDatePicker()\n    {\n        $reservationUpdated = false;\n\n        $reservation = Reservation::findOne(1);\n\n        if(isset($_POST['Reservation']))\n        {\n            $reservation->load( Yii::$app->request->post() );\n\n            $reservation->date_from = Yii::$app->formatter->asDate(  date_create_from_format('d/m/Y', $reservation->date_from), 'php:Y-m-d' );\n            $reservation->date_to = Yii::$app->formatter->asDate(  date_create_from_format('d/m/Y', $reservation->date_to), 'php:Y-m-d' );\n\n            $reservationUpdated = $reservation->save();\n        }\n\n        return $this->render('datePicker', ['reservation' => $reservation, 'reservationUpdated' => $reservationUpdated]);\n    }\n}\n```", "```php\n<?php\n\nuse yii\\helpers\\Html;\nuse yii\\widgets\\ActiveForm;\nuse yii\\jui\\DatePicker;\n\n?>\n\n<div class=\"row\">\n    <div class=\"col-lg-6\">\n        <h3>Date Picker from Value<br />(using MM/dd/yyyy format and English language)</h3>\n        <?php\n            $value = date('Y-m-d');\n\n        echo DatePicker::widget([\n            'name'  => 'from_date',\n            'value'  => $value,\n            'language' => 'en',\n            'dateFormat' => 'MM/dd/yyyy',\n        ]);\n        ?>\n    </div>\n    <div class=\"col-lg-6\">\n\n        <?php if($reservationUpdated) { ?>\n            <?php\n            echo yii\\bootstrap\\Alert::widget([\n                'options' => [\n                    'class' => 'alert-success',\n                ],\n                'body' => 'Reservation successfully updated',\n            ]);   \n            ?>         \n        <?php } ?>\n\n        <?php $form = ActiveForm::begin(); ?>\n\n        <h3>Date Picker from Model<br />(using dd/MM/yyyy format and italian language)</h3>\n\n        <br />\n\n        <label>Date from</label>\n        <?php\n        // First implementation of DatePicker Widget\n        echo DatePicker::widget([\n            'model'  => $reservation,\n            'attribute' => 'date_from',\n            'language' => 'it',\n            'dateFormat' => 'dd/MM/yyyy',\n        ]);\n        ?>\n\n        <br />\n        <br />\n\n        <?php\n        // Second implementation of DatePicker Widget\n        echo $form->field($reservation, 'date_to')->widget(\\yii\\jui\\DatePicker::classname(), [\n                'language' => 'it',\n                'dateFormat' => 'dd/MM/yyyy',\n        ]) ?>        \n\n        <?php     \n            echo Html::submitButton('Send', ['class' => 'btn btn-primary'])\n        ?>\n\n        <?php $form = ActiveForm::end(); ?>\n\n    </div>\n</div>\n```", "```php\nCustomer[0][attributeA_of_model_0]\nCustomer[0][attributeB_of_model_0]\n…\n…\n…\nCustomer[n][attributeA_of_model_n]\nCustomer[n][attributeB_of_model_n]\n```", "```php\n$form->field($model, '[0]attributeA_of_model')->textInput();\n$form->field($model, '[0]attributeB_of_model')->textInput();\n…\n…\n…\n$form->field($model, '[n]attributeA_of_model')->textInput();\n$form->field($model, '[n]attributeB_of_model')->textInput();\n```", "```php\n<?php\n\nuse yii\\helpers\\Html;\nuse yii\\widgets\\ActiveForm;\n\n/* @var $this yii\\web\\View */\n/* @var $model app\\models\\Room */\n/* @var $form yii\\widgets\\ActiveForm */\n?>\n\n<div class=\"room-form\">\n\n    <?php $form = ActiveForm::begin(); ?>\n\n    <div class=\"model\">\n\n      <?php for($k=0;$k<sizeof($models);$k++) { ?>\n          <?php $model = $models[$k]; ?>\n          <hr />\n          <label>Model #<?php echo $k+1 ?></label>\n          <?= $form->field($model, \"[$k]name\")->textInput() ?>\n          <?= $form->field($model, \"[$k]surname\")->textInput() ?>\n          <?= $form->field($model, \"[$k]phone_number\")->textInput() ?>\n      <?php } ?>\n\n    </div>\n\n<hr />\n\n    <div class=\"form-group\">\n      <?= Html::submitButton('Save', ['class' => 'btn btn-primary']) ?>\n    </div>\n\n    <?php ActiveForm::end(); ?>\n\n</div>\n```", "```php\n    public function actionCreateMultipleModels()\n    {\n        $models = [];\n\n        if(isset($_POST['Customer']))\n        {\n             $validateOK = true;\n\n            foreach($_POST['Customer'] as $postObj)\n            {\n                $model = new Customer();\n                $model->attributes = $postObj;\n                $models[] = $model;\n\n                $validateOK = ($validateOK && ($model->validate()));               \n            }\n\n            // All models are validated and will be saved\n            if($validateOK)\n            {\n                foreach($models as $model)\n                {\n                    $model->save();\n                }\n\n                // Redirect to grid after save\n                return $this->redirect(['grid']);\n            }\n        }\n        else\n        {\n            for($k=0;$k<3;$k++)\n            {\n                $models[] = new Customer();\n            }    \n        }\n\n        return $this->render('createMultipleModels', ['models' => $models]);\n    }\n```", "```php\n$dbTransaction = Yii::$app->db->beginTransaction();\n```", "```php\n$dbTransaction->commit();\n```", "```php\n$dbTransaction->rollback();\n```", "```php\n<?php\n\nuse yii\\helpers\\Html;\nuse yii\\widgets\\ActiveForm;\nuse yii\\helpers\\ArrayHelper;\nuse \\app\\models\\Room;\n?>\n\n<div class=\"room-form\">\n\n    <?php $form = ActiveForm::begin(); ?>\n\n    <div class=\"model\">\n\n      <?php echo $form->errorSummary([$customer, $reservation]); ?>\n\n      <h2>Customer</h2>        \n      <?= $form->field($customer, \"name\")->textInput() ?>\n      <?= $form->field($customer, \"surname\")->textInput() ?>\n      <?= $form->field($customer, \"phone_number\")->textInput() ?>\n\n      <h2>Reservation</h2>        \n      <?= $form->field($reservation, \"room_id\")->dropDownList(ArrayHelper::map(Room::find()->all(), 'id', function($room, $defaultValue) {\n          return sprintf('Room n.%d at floor %d', $room->room_number, $room->floor);\n      })); ?>\n      <?= $form->field($reservation, \"price_per_day\")->textInput() ?>\n      <?= $form->field($reservation, \"date_from\")->textInput() ?>\n      <?= $form->field($reservation, \"date_to\")->textInput() ?>\n\n    </div>\n\n    <div class=\"form-group\">\n        <?= Html::submitButton('Save customer and room', ['class' => 'btn btn-primary']) ?>\n    </div>\n\n    <?php ActiveForm::end(); ?>\n\n</div>\n```", "```php\n    public function actionCreateCustomerAndReservation()\n    {\n        $customer = new \\app\\models\\Customer();\n        $reservation = new \\app\\models\\Reservation();\n\n        // It is useful to set fake customer_id to reservation model to avoid validation error (because customer_id is mandatory)\n        $reservation->customer_id = 0;\n\n        if(\n            $customer->load(Yii::$app->request->post())\n            &&\n            $reservation->load(Yii::$app->request->post())\n            &&\n            $customer->validate()\n            &&\n            $reservation->validate()\n        )\n        {\n\n            $dbTrans = Yii::$app->db->beginTransaction();\n\n            $customerSaved = $customer->save();\n\n            if($customerSaved)\n            {\n                $reservation->customer_id = $customer->id;\n                $reservationSaved = $reservation->save();\n\n                if($reservationSaved)\n                {\n                    $dbTrans->commit();\n                }\n                else {\n                    $dbTrans->rollback();\n                }                \n            }\n            else {\n                $dbTrans->rollback();\n            }\n        }\n\n        return $this->render('createCustomerAndReservation', [ 'customer' => $customer, 'reservation' => $reservation ]);\n    }\n```"]