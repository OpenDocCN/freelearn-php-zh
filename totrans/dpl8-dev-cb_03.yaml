- en: Displaying Content through Views
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过Views显示内容
- en: 'This chapter will cover the Views module and how to use a variety of its major
    features. In this chapter, we will cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将介绍Views模块及其主要功能的用法。在本章中，我们将涵盖以下食谱：
- en: Listing content
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列出内容
- en: Editing the default admin interfaces
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编辑默认管理界面
- en: Creating a block from a View
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从视图创建块
- en: Utilizing dynamic arguments
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用动态参数
- en: Adding a relationship in a View
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在视图中添加关系
- en: Providing an Entity Reference result View
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供实体引用结果视图
- en: Introduction
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: For those who have used Drupal previously, Views is in core for Drupal 8\. If
    you are new to Drupal, note that Views has been one of the most used contributed
    projects for Drupal 6 and Drupal 7.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 对于之前使用过Drupal的用户，Views是Drupal 8的核心功能。如果你是Drupal的新用户，请注意，Views一直是Drupal 6和Drupal
    7中最常用的贡献项目之一。
- en: Briefly described, Views is a visual query builder that allows you to pull content
    from the database and render it in multiple formats. Select administrative areas
    and content listings provided out of the box by Drupal are all powered by Views.
    We'll dive into how to use Views to customize the administrative interface, customize
    ways to display your content, and interact with the entity reference field.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 简要来说，Views是一个可视化查询构建器，允许您从数据库中提取内容并以多种格式渲染。Drupal提供的所有内置管理区域和内容列表都是由Views驱动的。我们将深入了解如何使用Views自定义管理界面，自定义显示内容的方式，以及与实体引用字段交互。
- en: Listing content
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 列出内容
- en: Views does one thing, and it does it well--listing content. The power behind
    the Views module is the amount of configurable power it gives the end user to
    display content in various forms.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Views只做一件事，而且做得很好——列出内容。Views模块背后的力量在于它给予最终用户在多种形式中显示内容的可配置能力。
- en: This recipe will cover creating a content listing and linking it in the main
    menu. We will use the `Article` content type provided by the standard installation
    and make an article's landing page.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 本食谱将涵盖创建内容列表并将其链接到主菜单。我们将使用标准安装提供的`文章`内容类型，并创建一个文章的落地页面。
- en: Getting ready
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: The **Views UI** module must be installed to manipulate Views from the user
    interface. By default, this is enabled with the standard installation profile.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 必须安装**Views UI**模块才能从用户界面操作视图。默认情况下，这通过标准安装配置启用。
- en: How to do it...
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Let''s list the Views listing content:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们列出视图列出的内容：
- en: 'Go to Structure and then Views, as shown in the following screenshot; this
    will bring you to the administrative overview of all the views that have been
    created:'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往结构，然后是视图，如图所示；这将带您到所有已创建视图的管理概览：
- en: '![](img/17b25f88-a4a0-455e-8138-9e248898c692.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/17b25f88-a4a0-455e-8138-9e248898c692.png)'
- en: Click on Add view to create a new view.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击添加视图以创建一个新的视图。
- en: The first step is to provide the View name of articles, which will serve as
    the administrative and (by default) displayed title.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一步是提供文章视图的名称，这将作为管理和（默认）显示的标题。
- en: Next, we will modify the VIEW SETTINGS. We want to display Content of the type
    `Article` and leave the tagged with field empty. This will force the view to only
    show content of the `Article` content type.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将修改视图设置。我们希望显示类型为`文章`的内容，并将标记字段留空。这将强制视图只显示`文章`内容类型的内容。
- en: 'Check the Create a page option. The Page title and Path will be autopopulated
    based on the view name and can be modified as desired. For now, leave the display
    and other settings at their default values:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择创建页面选项。页面标题和路径将根据视图名称自动填充，可以根据需要修改。目前，请保留显示和其他设置为其默认值：
- en: '![](img/30ed2460-fc3c-4ff5-8bb1-23c474d7d0d5.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/30ed2460-fc3c-4ff5-8bb1-23c474d7d0d5.png)'
- en: Click on Save and edit to continue modifying your new view.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击保存并编辑以继续修改您的新视图。
- en: In the middle column, under the PAGE SETTINGS section, we will change the Menu
    item settings. Click on No menu to change the default.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在中间列的页面设置部分下，我们将更改菜单项设置。点击无菜单以更改默认设置。
- en: 'Select Normal menu entry. Provide a menu link title and an optional description.
    Set Parent to <Main Navigation>:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择正常菜单条目。提供菜单链接标题和可选描述。将父级设置为<主导航>：
- en: '![](img/e91c5b3c-4763-4af8-86f8-bfb802065cc3.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e91c5b3c-4763-4af8-86f8-bfb802065cc3.png)'
- en: Click on Apply at the bottom of the form.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击表单底部的应用按钮。
- en: Click on Save to save your view.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击保存以保存您的视图。
- en: Once your view is saved, click on Back to site from the administrative menu.
    You will now see the link in your Drupal site's main menu.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存你的视图后，从管理菜单中点击“返回站点”。现在你将在Drupal站点的主菜单中看到链接。
- en: How it works...
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The first step to create a view involves selecting the type of data you will
    be displaying. This is referred to as the base table, which can be any type of
    entity or data specifically exposed to Views.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 创建视图的第一步是选择你将显示的数据类型。这被称为基本表，可以是任何类型的实体或专门暴露给视图的数据。
- en: Nodes are labeled as **Content** in Views, and you will find this interchanged
    terminology throughout Drupal.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在视图中，节点被标记为**内容**，你将在Drupal中找到这种术语的互换。
- en: When creating a Views page, we add a menu path that can be accessed. It tells
    Drupal to invoke Views to render the page, which will load the view you create
    and render it.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 当创建视图页面时，我们添加一个可访问的菜单路径。它告诉Drupal调用视图以渲染页面，这将加载你创建的视图并将其渲染。
- en: There are display `style` and `row` plugins that format the data to be rendered.
    Our recipe used the unformatted list style to wrap each row in a simple `div`
    element. We could have changed this to a table for a formatted list. The row display
    controls how each row is outputted.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 有显示`样式`和`行`插件，它们格式化要渲染的数据。我们的配方使用了未格式化的列表样式，将每一行包裹在一个简单的`div`元素中。我们可以将其更改为表格以形成格式化列表。行显示控制每行如何输出。
- en: There's more...
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更多...
- en: The Views module has been one of the must-use modules since it first debuted,
    to the point that almost every Drupal 7 site used this module. In the following
    section, we will dive further into Views.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 视图模块自首次推出以来一直是必用模块之一，以至于几乎每个Drupal 7站点都使用了此模块。在下一节中，我们将进一步深入了解视图。
- en: Views in Drupal core initiative
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Drupal核心中的视图倡议
- en: The Views module has been a contributed module up until Drupal 8\. In fact,
    it was one of the most used modules. Although the module is now part of Drupal
    core, it still has many improvements that are needed, and are being committed.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 视图模块直到Drupal 8都是一个贡献模块。事实上，它是最常用的模块之一。尽管该模块现在是Drupal核心的一部分，但它仍然需要许多改进，并且正在被提交。
- en: Through their 8.1, 8.2, and 8.3 releases, there have been many improvements.
    We will continue to see this pattern with each future minor release.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 通过它们的8.1、8.2和8.3版本发布，已经进行了许多改进。我们将在每个未来的小版本更新中继续看到这种模式。
- en: Views and displays
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 视图和显示
- en: 'When working with Views, you will see some different terminologies. One of
    the key items to be grasped is what a display is. A view can contain multiple
    displays. Each display is of a certain type. Views comes with the following display
    types:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 当与视图一起工作时，你会看到一些不同的术语。其中需要掌握的关键项目之一是了解什么是显示。一个视图可以包含多个显示。每个显示都是某种类型。视图包含以下显示类型：
- en: '**Attachment**: This is a display that becomes attached to another display
    in the same view'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**附件**：这是一个附加到同一视图中的另一个显示的显示'
- en: '**Block**: This allows you to place the view as a block'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**块**：这允许你将视图作为一个块放置'
- en: '**Embed**: The display is meant to be embedded programmatically'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**嵌入**：此显示旨在以编程方式嵌入'
- en: '**Entity Reference**: This allows Views to provide results for an entity reference
    field'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**实体引用**：这允许视图为实体引用字段提供结果'
- en: '**Feed**: This display returns a XML-based feed and can be attached to another
    display to render a feed icon'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Feed**：此显示返回基于XML的feed，可以附加到另一个显示以渲染feed图标'
- en: '**Page**: This allows you to display the view from a specific route'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**页面**：这允许你从特定的路由显示视图'
- en: Each display can have its own configuration, too. However, each display will
    share the same base table (content, files, and so on). This allows you to take
    the same data and represent it in different ways.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 每个显示也可以有自己的配置。然而，每个显示将共享相同的基本表（内容、文件等）。这允许你以不同的方式表示相同的数据。
- en: Format style plugins - style and row
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 格式样式插件 - 样式和行
- en: 'Within Views, there are two types of style plugins that represent how your
    data is displayed: style and row:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在视图内部，有两种类型的样式插件代表你的数据如何显示：样式和行：
- en: The **style** plugin represents the overall format
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**样式**插件代表整体格式'
- en: The **row** plugin represents each result row's format
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**行**插件代表每行结果的格式'
- en: For example, the `grid` style will output multiple `div` elements with specified
    classes to create a responsive `grid`. At the same time, the `table` style creates
    a tabular output with labels used as table headings.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，`网格`样式将输出多个具有指定类的`div`元素以创建响应式`网格`。同时，`表格`样式创建带有标签的表格输出，用作表格标题。
- en: Row plugins define how to render the row. The default content will render the
    entity as defined by its selected display mode. If you choose Fields, you can
    manually select which fields to include in your view.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 行插件定义了如何渲染行。默认内容将根据其选定的显示模式渲染实体。如果你选择字段，你可以手动选择要包含在你的视图中的字段。
- en: Each format style plugin has a corresponding `Twig` file that the theme layer
    uses. Refer to the *Twig templating* recipe of [*Chapter 5*](991ad206-3a73-4c3a-b6b7-c680a0a74a53.xhtml),
    *Frontend for the Win* to learn more about Twig in Drupal 8.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 每个格式样式插件都有一个对应的`Twig`文件，主题层使用它。请参阅[*第5章*](991ad206-3a73-4c3a-b6b7-c680a0a74a53.xhtml)，*前端为王*，以了解更多关于Drupal
    8中的Twig的信息。
- en: You can define new plugins in custom modules or use contributed modules to access
    different options.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在自定义模块中定义新插件或使用贡献模块来访问不同的选项。
- en: Using the Embed display
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用嵌入显示
- en: Each of the available display types has a method to expose itself through the
    user interface, except for Embed. Often, contributed and custom modules use Views
    to render displays instead of manually writing queries and rendering the output.
    Drupal 8 provides a special display type to simplify this.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 可用的每种显示类型都有一种方法可以通过用户界面暴露自己，除了嵌入。通常，贡献和自定义模块使用视图来渲染显示，而不是手动编写查询和渲染输出。Drupal
    8提供了一个特殊的显示类型来简化这一点。
- en: 'If we were to add an Embed display to the view created in the recipe, we could
    pass the following render array to output our view programmatically:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们要在菜谱中创建的视图中添加嵌入显示，我们可以传递以下渲染数组来程序化地输出我们的视图：
- en: '[PRE0]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: When rendered, the `#type` key tells Drupal that this is a view element. We
    then point it to our new display `embed_1`. The Embed display type has no special
    functionality, in fact, it is a simplistic display plugin. The benefit is that
    it does not have additional operations conducted for the sake of performance.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 当渲染时，`#type`键告诉Drupal这是一个视图元素。然后我们将其指向我们新的显示`embed_1`。嵌入显示类型没有特殊功能，实际上，它是一个简单的显示插件。好处是它没有为了性能而进行的额外操作。
- en: Using an Embed display is beneficial when you want to use a View in a custom
    page, block, or even form. For example, Drupal Commerce uses this pattern for
    its shopping cart block and the order summary in the checkout. A view is used
    to display the order information within a custom block and form.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 当你想在自定义页面、块或甚至表单中使用视图时，使用嵌入显示是有益的。例如，Drupal Commerce使用这种模式为其购物车块和结账中的订单摘要。视图用于在自定义块和表单中显示订单信息。
- en: See also
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参见
- en: Refer to the VDC initiative at [https://www.drupal.org/community-initiatives/drupal-core/vdc](https://www.drupal.org/community-initiatives/drupal-core/vdc).
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 参考VDC倡议[https://www.drupal.org/community-initiatives/drupal-core/vdc](https://www.drupal.org/community-initiatives/drupal-core/vdc)。
- en: Refer to [*Chapter 7*](3994173f-3d31-4f01-b808-99e01368564b.xhtml), *Plug and
    Play with Plugins*, to learn more about plugins.
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 参考第[*第7章*](3994173f-3d31-4f01-b808-99e01368564b.xhtml)，*插件即插即用*，以了解更多关于插件的信息。
- en: Editing the default admin interfaces
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编辑默认管理界面
- en: With the addition of Views in Drupal core, many of the administrative interfaces
    are powered by Views. This allows customization of default admin interfaces to
    enhance site management and content authoring experiences.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在Drupal核心中添加视图后，许多管理界面都由视图提供支持。这允许自定义默认管理界面，以增强网站管理和内容创作体验。
- en: In Drupal 6 and 7, there was the Administrative Views contributed module, which
    provided a way to override administrative pages with Views. This module is no
    longer required, as the functionality comes with Drupal core out of the box.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在Drupal 6和7中，有一个名为“Administrative Views”的贡献模块，它提供了一种使用视图覆盖管理页面的方法。由于该功能现在直接包含在Drupal核心中，因此不再需要此模块。
- en: In this recipe, we will modify the default content overview form that is used
    to find and edit content. We will add the ability to filter content by the user
    who authored it.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将修改默认的内容概览表单，该表单用于查找和编辑内容。我们将添加按作者过滤内容的能力。
- en: How to do it...
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Go to Structure and then Views. This will bring you to the administrative overview
    of all existing views.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往结构，然后是视图。这将带您到所有现有视图的管理概览。
- en: From the Enabled section, select the Edit option from the operations column
    for the Content view. This is the view displayed on `/admin/content` when managing
    content.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从“已启用”部分，在操作列中选择内容视图的编辑选项。这是在管理内容时在`/admin/content`上显示的视图。
- en: 'To filter by the content author, we must add a FILTER CRITERIA to our view,
    where we will expose the following for users to modify:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要按内容作者进行筛选，我们必须向我们的视图添加一个过滤器标准，我们将公开以下内容供用户修改：
- en: '![](img/48fb308c-2061-4b8f-a2ed-45ea404cc44b.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/48fb308c-2061-4b8f-a2ed-45ea404cc44b.png)'
- en: 'Click on Add in the FILTER CRITERIA section to add a new filter. In the search
    textbox, type Authored by to search the available options. Select Authored by
    for the Content category. Click on Add and configure filter criteria:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在过滤器标准部分点击添加以添加新的过滤器。在搜索框中输入“由...创建”以搜索可用选项。为内容类别选择“由...创建”。点击添加并配置过滤器标准：
- en: '![](img/5cfdd734-81a1-43fc-ba87-a1e5df3011c0.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/5cfdd734-81a1-43fc-ba87-a1e5df3011c0.png)'
- en: Check the Expose this filter to visitors to allow them to change it checkbox.
    This will allow users to modify the data for the filter.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择“允许访客公开此过滤器以允许他们更改它”复选框。这将允许用户修改过滤器数据。
- en: You may modify the Label and add a Description to improve the usability of the
    filter option for your use case.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以修改标签并添加描述来提高过滤器选项在您用例中的可用性。
- en: Click on Apply once more to finish configuring the filter. It will now show
    up in the list of filter criteria. You will also see the new filter in the preview
    below the form.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次点击应用以完成配置过滤器。现在它将显示在过滤器标准列表中。您还会在表单下方的预览中看到新的过滤器。
- en: Click on Save to commit all changes to the view.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击保存以提交对视图的所有更改。
- en: 'Take a look at `/admin/content`, and you will have your filter. Content editors
    will be able to search for content authored by a user through autocompleted username
    searches:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看 `/admin/content`，您将找到您的过滤器。内容编辑员将能够通过自动完成的用户名搜索搜索由用户创建的内容：
- en: '![](img/298a6694-4ed4-4e67-89ae-aea0288d12f8.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/298a6694-4ed4-4e67-89ae-aea0288d12f8.png)'
- en: How it works...
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: When a view is created that has a path matching an existing route, it will override
    it and present itself. That is how the `/admin/content` and other administrative
    pages are able to be powered by Views.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 当创建的视图路径与现有路由匹配时，它将覆盖它并显示自己。这就是`/admin/content`和其他管理页面能够由视图提供动力的原因。
- en: If you were to disable the Views module, you can still manage content and users.
    The default forms are tables that do not provide filters or other extra features.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您禁用了视图模块，您仍然可以管理内容和用户。默认表单是表格，不提供过滤器或其他额外功能。
- en: Drupal uses the overridden route and uses Views to render the page. From that
    point on, the page is handled like any other Views page would be rendered.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: Drupal使用覆盖的路由并使用视图来渲染页面。从那时起，页面就像任何其他视图页面一样被渲染。
- en: There's more...
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更多...
- en: We will dive into additional features available through Views that can enhance
    the way you use Views and present them on your Drupal site.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将深入了解通过视图提供的其他功能，这些功能可以增强您使用视图的方式，并在您的Drupal网站上展示它们。
- en: Exposed versus non-exposed
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 公开与非公开
- en: 'Filters allow you to narrow the scope of the data displayed in a view. Filters
    can either be exposed or not; by default, a filter is not exposed. An example
    would be using the Content: Publishing status set to Yes (published) to ensure
    that a view always contains published content. This is an item you would configure
    to display content to site visitors. However, if it were for an administrative
    display, you may want to expose that filter. This way, content editors can view,
    easily, what content has not been published yet or been unpublished.'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '过滤器允许您缩小视图显示的数据范围。过滤器可以是公开的或不公开的；默认情况下，过滤器不是公开的。一个例子是使用内容：发布状态设置为“是”（已发布）以确保视图始终包含发布的内容。这是一项您会配置以向网站访客显示内容的设置。然而，如果是用于管理显示，您可能希望公开该过滤器。这样，内容编辑员可以轻松地查看尚未发布或已取消发布的内容。 '
- en: All filter and sort criteria can be marked as exposed.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 所有过滤和排序标准都可以标记为公开。
- en: Filter identifiers
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 过滤器标识符
- en: Exposed filters work by parsing query parameters in the URL. For instance, on
    the content management form, changing the `Type` filter will add `type=Article`,
    among others to the current URL.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 公开的过滤器通过解析URL中的查询参数来工作。例如，在内容管理表单中，更改`类型`过滤器将添加`type=Article`等参数到当前URL中。
- en: With this recipe, the author filter would show up as uid in the URL. Exposed
    filters have a
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此配方，作者过滤器将显示为URL中的uid。公开的过滤器有
- en: 'Filter identifier option that can change the URL component:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 可以更改URL组件的过滤器标识符选项：
- en: '![](img/20463777-4e06-45ef-b4f7-0b1556142cf7.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/20463777-4e06-45ef-b4f7-0b1556142cf7.png)'
- en: This could be changed to `author` or some other value to enhance the user experience
    behind the URL, or mask the Drupal-ness of it.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以更改为`作者`或其他值，以增强URL背后的用户体验，或掩盖Drupal的特性。
- en: Overriding routes with Views
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用视图覆盖路由
- en: Views can replace administrative pages with enhanced versions due to the way
    the route and module system works in Drupal. Modules are executed in order of
    the module's weight or alphabetical order if weights are the same. Naturally,
    in the English alphabet, the letter *V* comes toward the end of the alphabet.
    That means any route that Views provides will be added toward the end of the route
    discovery cycle.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Drupal中路由和模块系统的工作方式，视图可以替换管理页面，以增强版本。模块按照模块的权重顺序执行，如果权重相同，则按字母顺序执行。自然地，在英文字母表中，字母*V*位于字母表的末尾。这意味着任何由视图提供的路由都将添加到路由发现周期的末尾。
- en: If a view is created and it provides a route path, it will override any that
    exist on that path. There is no collision checking mechanism (and there was not
    one present in Views before merging into Drupal core) that prevents this.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 如果创建了一个视图并提供了一个路由路径，它将覆盖该路径上存在的任何视图。没有碰撞检查机制（在合并到Drupal核心之前，视图中没有这样的机制）来防止这种情况。
- en: This allows you to easily customize most existing routes, but, beware that you
    could easily have conflicting routes, and Views will normally override the other.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 这允许您轻松地自定义大多数现有路由，但请注意，您可能会轻易地遇到冲突的路由，并且视图通常会覆盖其他路由。
- en: Creating a block from a View
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从视图创建块
- en: Previous recipes have shown how to create and manipulate a page created by a
    view. Views provides different display types that can be created, such as a block.
    In this recipe, we will create a block powered by Views. The Views block will
    list all Tag taxonomy terms that have been added to the `Article` content type.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的配方已经展示了如何创建和操作由视图创建的页面。视图提供了不同的显示类型，可以创建，例如块。在这个配方中，我们将创建一个由视图驱动的块。视图块将列出已添加到`文章`内容类型的所有标签分类术语。
- en: Getting ready
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: This recipe assumes that you have installed the standard installation profile
    and have the default node content types available for use.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 此配方假设您已安装标准安装配置文件，并且有默认节点内容类型可供使用。
- en: How to do it...
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: Go to Structure and then Views. This will bring you to the administrative overview
    of all the views that are created.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往结构然后视图。这将带您到所有创建的视图的管理概览。
- en: Click on Add view to create a new view.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击添加视图以创建新视图。
- en: The first step is to provide the View name of Tags, which will serve as the
    administrative and (by default) displayed title.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一步是提供标签的视图名称，这将作为管理标题和（默认情况下）显示标题。
- en: Next, we will modify the VIEW SETTINGS. We want to display Taxonomy terms of
    the type Tags. This will make the view default to only displaying taxonomy terms
    created under the Tags vocabulary.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将修改视图设置。我们希望显示类型为标签的分类术语。这将使视图默认只显示在标签词汇表下创建的分类术语。
- en: Check the Create a block checkbox in the BLOCK SETTINGS section.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在块设置部分勾选创建块复选框。
- en: 'Select the HTML List option from the Display format choices. Leave the style
    as Fields:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从显示格式选择中，选择HTML列表选项。保留样式为字段：
- en: '![](img/ab2627b8-ca4e-4313-8622-92438f51f138.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/ab2627b8-ca4e-4313-8622-92438f51f138.png)'
- en: Click on Save and edit to create the view.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击保存并编辑以创建视图。
- en: We want to display all the available tags. Under the PAGER section, click on
    the field next to Use Pager and select Display all items and click on Apply.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们希望显示所有可用的标签。在分页部分，点击使用分页旁边的字段，选择显示所有项目并点击应用。
- en: 'Next, we will sort the view by tag name instead of order of creation. Click
    on Add on the SORT CRITERIA section.Select the checkbox where Name : Taxonomy
    term and click on Add and configure sort criteria to use the default, that is,
    ascending. Click on Apply:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将按标签名称而不是创建顺序对视图进行排序。在排序标准部分点击添加。选择名称：分类术语的复选框，点击添加并配置排序标准以使用默认设置，即升序。点击应用：
- en: '![](img/e5ba86c9-5461-4924-a973-1cd5918eed60.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e5ba86c9-5461-4924-a973-1cd5918eed60.png)'
- en: Click on Save to save the view.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击保存以保存视图。
- en: Go to Structure and Block layout to place the block on your Drupal site. Click
    on Place block for the Sidebar first region in the Bartik theme.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往结构并布局块，将块放置在您的Drupal网站上。在Bartik主题中，首先点击侧边栏第一个区域的放置块。
- en: Filter the list by typing your view's name (`Tags`). Click on Place block to
    add your view's block to the block layout.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过输入您的视图名称（`标签`）来过滤列表。点击放置块以将您的视图块添加到布局中。
- en: Finally, click on Save block to commit your changes.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，点击保存块以提交您的更改。
- en: How it works...
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In the Drupal 8 plugin system, there is a concept called Derivatives. Plugins
    are small pieces of swappable functionality within Drupal 8\. Plugins and plugin
    development are covered in [*Chapter 7*](3994173f-3d31-4f01-b808-99e01368564b.xhtml),
    *Plug and Play with Plugins*. A derivative allows a module to present multiple
    variations of a plugin dynamically. In the case of Views, it allows the module
    to provide variations of a `ViewsBlock` plugin for each view that has a block
    display. Views implements the `\Drupal\views\Plugin\Block\ViewsBlock\ViewsBlock`
    class, providing the base for the dynamic availability of these blocks. Each derived
    block is an instance of this class.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在Drupal 8插件系统中，有一个称为派生的概念。插件是Drupal 8中可互换功能的小块。插件和插件开发在[*第7章*](3994173f-3d31-4f01-b808-99e01368564b.xhtml)，*插件即插即用*中有所介绍。派生允许模块动态地提供插件的多个变体。在视图的情况下，它允许模块为每个具有块显示的视图提供
    `ViewsBlock` 插件的变体。视图实现了 `\Drupal\views\Plugin\Block\ViewsBlock\ViewsBlock` 类，为这些块的动态可用性提供了基础。每个派生块是这个类的一个实例。
- en: When Drupal initiates the block, Views passes the proper configuration required.
    The view is then executed and the display is rendered whenever the block is displayed.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 当Drupal初始化块时，视图传递所需的正确配置。然后视图被执行，并在块显示时渲染显示。
- en: There's more...
  id: totrans-127
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更多内容...
- en: We will now explore some of the other ways in which Views interacts with blocks.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将探讨视图与块交互的其他一些方式。
- en: Exposed forms as blocks
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 暴露表单作为块
- en: If your view utilizes exposed filters, you have the option to place the exposed
    form in a block. With this option enabled, you may place the block anywhere on
    the page, even pages not for your view.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的视图使用了暴露的过滤器，您可以选择将暴露的表单放置在块中。启用此选项后，您可以将块放置在页面的任何位置，甚至是非您视图的页面。
- en: An example of using an exposed form in a block is for a search result view.
    You will add an exposed filter for keywords that control the search results. With
    the exposed filters in a block, you can easily place it in your site's header.
    When an exposed filter block is submitted, it will direct users to your view's
    display.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在块中使用暴露表单的一个例子是用于搜索结果视图。您将为控制搜索结果的关键字添加一个暴露的过滤器。在块中的暴露过滤器，您可以轻松地将它放置在您网站的页眉中。当提交暴露的过滤器块时，它将用户引导到视图的显示。
- en: 'To enable the exposed filters as a block, you must first expand the Advanced
    section on the right side of the Views edit form. Click on the Exposed form in
    block option from the Advanced section. In the options modal that opens, select
    the Yes radio button, and click on Apply. You can then place the block from the
    Block layout form:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 要启用作为块的暴露过滤器，您必须首先展开视图编辑表单右侧的高级部分。从高级部分点击暴露表单在块中的选项。在打开的选项对话框中，选择是单选按钮，然后点击应用。然后您可以从块布局表单放置块：
- en: '![](img/59c6d702-44b6-4d89-bd44-718dd7510e01.png)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/59c6d702-44b6-4d89-bd44-718dd7510e01.png)'
- en: See also
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 相关内容
- en: Refer to [*Chapter 7*](3994173f-3d31-4f01-b808-99e01368564b.xhtml), *Plug and
    Play with Plugins*, to learn more about derivatives
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 参考[*第7章*](3994173f-3d31-4f01-b808-99e01368564b.xhtml)，*插件即插即用*，了解更多关于派生的信息
- en: Utilizing dynamic arguments
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 利用动态参数
- en: Views can be configured to accept **contextual filters**. Contextual filters
    allow you to provide a dynamic argument that modifies the view's output. The value
    is expected to be passed from the URL; however, if it is not present, there are
    ways to provide a default value.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 视图可以被配置为接受**上下文过滤器**。上下文过滤器允许您提供一个动态参数，该参数修改视图的输出。值应从URL传递；然而，如果它不存在，有方法可以提供默认值。
- en: In this recipe, we will create a new page called `My Content`, which will display
    a user's authored content on the `/user/%/content` route.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将创建一个名为 `My Content` 的新页面，该页面将在 `/user/%/content` 路由上显示用户的创作内容。
- en: How to do it...
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: Go to Structure and then Views. This will bring you to the administrative overview
    of all the views created. Click on Add view to create a new view.
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往结构，然后是视图。这将带您查看所有创建的视图的行政概览。点击添加视图以创建一个新的视图。
- en: Set the View name to My Content.
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将视图名称设置为My Content。
- en: Next, we will modify the View settings. We want to display Content of the type
    All and leave the Tagged with empty. This will allow all content to be displayed.
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将修改视图设置。我们希望显示类型为所有内容的条目，并将标记为空。这将允许显示所有内容。
- en: Select Create a page. Keep the page title the same. We will need to change the
    path to `user/%user/content`. Click on Save and edit to move to the next screen
    and add the contextual filter.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择“创建页面”。保持页面标题不变。我们需要将路径更改为 `user/%user/content`。点击“保存并编辑”以移动到下一个屏幕并添加上下文过滤器。
- en: When building a views page, adding a percent sign to the path identifies a route
    variable. By adding an entity type's name, Drupal will match the input as an identifier
    to an entity of that type.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在构建视图页面时，在路径中添加百分号标识一个路由变量。通过添加实体类型的名称，Drupal 将将输入匹配为该类型的实体标识符。
- en: Toggle the Advanced portion of the form on the right-hand side of the page.
    Click on Add in the Contextual filters section.
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在页面右侧的表单的“高级”部分切换。在上下文过滤器部分点击“添加”。
- en: 'Select Authored by: Content and then click on Add and configure contextual
    filters.'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择“作者：内容”，然后点击“添加”并配置上下文过滤器。
- en: 'Change the default value of WHEN THE FILTER VALUE IS *NOT* IN THE URL to Display
    "Access Denied" to prevent all content from being displayed with a bad route value:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将“当过滤器值不在 URL 中时”的默认值更改为“显示“访问被拒绝””，以防止所有内容都显示为具有不良路由值的错误：
- en: '![](img/b6b8c9ed-d4b7-4df9-b355-1b1ad1ef1d55.png)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/b6b8c9ed-d4b7-4df9-b355-1b1ad1ef1d55.png)'
- en: Click on Apply and then click on Save to save the view.
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“应用”，然后点击“保存”以保存视图。
- en: Go to `/user/1/content`, and you will see content created by the first user.
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往 `/user/1/content`，您将看到由第一个用户创建的内容。
- en: How it works...
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Contextual filters mimic the route variables found in the Drupal routing system.
    Variables are represented by percentage signs as placeholders in the view's path.
    Views will match up each placeholder with contextual filters by order of their
    placement. This allows you to have multiple contextual filters; you just need
    to ensure that they are ordered properly.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 上下文过滤器模仿 Drupal 路由系统中找到的路由变量。变量由百分号作为视图路径中的占位符表示。视图将根据它们的放置顺序将每个占位符与上下文过滤器匹配。这允许您有多个上下文过滤器；您只需确保它们按正确顺序排列。
- en: The Views module is aware of how to handle the placeholder because the type
    of data is selected when you add the filter. Once the contextual filter is added,
    there are extra options available for handling the route variable.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 视图模块知道如何处理占位符，因为您在添加过滤器时选择了数据类型。一旦添加了上下文过滤器，就会有额外的选项来处理路由变量。
- en: There's more...
  id: totrans-154
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更多内容...
- en: We will now explore the extra options available when using contextual filters.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将探索使用上下文过滤器时可用的一些额外选项。
- en: Previewing with contextual filters
  id: totrans-156
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用上下文过滤器预览
- en: You are still able to preview a view from the edit form. You simply add the
    contextual filter values to the text form concatenated by a forward slash (`/`).
    In this recipe, you could
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 您仍然可以从编辑表单预览视图。您只需将上下文过滤器值添加到由正斜杠（`/`）连接的文本表单中。在这个配方中，您可以
- en: replace navigating to `/user/1/content` with simply inputting `1` into the preview
    form and updating the preview.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 将导航到 `/user/1/content` 的操作替换为在预览表单中简单地输入 `1` 并更新预览。
- en: Displaying as a tab on the user page
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在用户页面上显示为标签页
- en: Even though the view created in the recipe follows a route under `/user`, it
    will not show up as a local task tab until it has a menu entry defined.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 即使在配方中创建的视图遵循 `/user` 下的路由，它也不会作为本地任务标签显示，直到它有一个菜单条目定义。
- en: Go back and edit the My Content view. From the Page settings section, you will
    need to change No menu from the Menu option. Clicking on that link will open the
    menu link settings dialog.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 返回并编辑“我的内容”视图。在页面设置部分，您需要将菜单选项中的“无菜单”更改为“菜单”。点击该链接将打开菜单链接设置对话框。
- en: Select Menu tab and provide a Menu link title, such as My Content. Select <User
    account menu> for the Parent. Click on Apply and save your view. When you go to
    the `/user` page again, it will have the My Content page available.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 选择“菜单”标签页，提供一个菜单链接标题，例如“我的内容”。选择“<用户账户菜单）”作为父级。点击“应用”并保存您的视图。当您再次访问 `/user`
    页面时，它将提供“我的内容”页面。
- en: You may need to rebuild Drupal's caches in order for the routing system to be
    rebuilt, making Drupal aware of the menu tab.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能需要重建 Drupal 的缓存，以便重新构建路由系统，使 Drupal 能够意识到菜单标签。
- en: Altering the page title
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 修改页面标题
- en: With contextual filters, you have the ability to manipulate the current page's
    title. When adding or editing a contextual filter, you can modify the page title.
    You may check the Override title option in When the filter value is present in
    the URL or a default is provided section.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 使用上下文过滤器，您有权操作当前页面的标题。当添加或编辑上下文过滤器时，您可以修改页面标题。您可以在“当过滤器值存在于URL中或提供默认值”部分中检查“覆盖标题”选项。
- en: This textbox allows you to enter in a new title that will be displayed. Additionally,
    you can use the information passed from the route context using the format of
    `%#`, where `#` is the argument order.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 此文本框允许您输入将显示的新标题。此外，您可以使用格式为`%#`的路由上下文传递的信息，其中`#`是参数顺序。
- en: Validation
  id: totrans-167
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 验证
- en: Contextual filters can have validation attached. Without specifying extra validation,
    Views will take the expected argument and try to make it *just work*. You can
    add validation to help limit this scope and filter out invalid route variables.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 上下文过滤器可以附加验证。如果不指定额外的验证，视图将采用预期的参数并尝试使其“正常工作”。您可以通过添加验证来帮助限制此范围并过滤掉无效的路由变量。
- en: You can enable validation by checking Specify validation criteria from the When
    the filter value is present in the URL or a default is provided section. The default
    is set to Basic Validation, which allows you to specify how the view should react
    if the data is invalid; based on our recipe, this would be if the user is not
    found.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过勾选“当过滤器值存在于URL中或提供默认值”部分中的“指定验证标准”来启用验证。默认设置为基本验证，这允许您指定如果数据无效，视图应该如何反应；根据我们的配方，这将是如果用户未找到。
- en: 'The list of Validator options is not filtered by the contextual filter item
    you selected, so some may not apply. For our recipe, one might want User ID and
    select the Validate user has access to the *User*. This validator would make sure
    that the current user is able to view the route''s user''s profile. Additionally,
    it can be restricted further based on its role:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 验证器选项列表不会被您选择的上下文过滤器项过滤，因此其中一些可能不适用。对于我们的配方，可能需要选择“用户ID”并验证用户是否有权访问“用户”。此验证器将确保当前用户能够查看路由的用户配置文件。此外，还可以根据其角色进一步限制：
- en: '![](img/00213ac7-0123-44b5-9a34-ef43aa6edb25.png)'
  id: totrans-171
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00213ac7-0123-44b5-9a34-ef43aa6edb25.png)'
- en: This gives you more granular control over how the view operates when using contextual
    filters for route arguments.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 这为您提供了更细粒度的控制，当使用上下文过滤器进行路由参数时，视图如何操作。
- en: Multiple and exclusion
  id: totrans-173
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 多重和排除
- en: You may also configure the contextual filter to allow `AND` or `OR` operations
    along with exclusion. These options are under the More section when adding or
    editing a contextual filter.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以配置上下文过滤器以允许“AND”或“OR”操作以及排除。这些选项在添加或编辑上下文过滤器时位于“更多”部分。
- en: The Allow multiple values option can be checked to enable `AND` or `OR` operations.
    If the contextual filter argument contains a series of values concatenated by
    plus (`+`) signs, it acts as an `OR` operation. If the values are concatenated
    by commas (`,`) it acts as an `AND` operation.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 可以勾选“允许多个值”选项以启用“AND”或“OR”操作。如果上下文过滤器参数包含由加号（`+`）连接的值系列，则它充当“OR”操作。如果值由逗号（`,`）连接，则它充当“AND”操作。
- en: When the Exclude option is checked, the value will be excluded from the results
    rather than the view being limited by it.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 当勾选“排除”选项时，值将被排除在结果之外，而不是视图被其限制。
- en: Adding a relationship in a View
  id: totrans-177
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在视图中添加关系
- en: As stated at the beginning of the chapter, Views is a visual query builder.
    When you first create a view, a base table is specified from which to pull data.
    Views automatically knows how to join tables for field data, such as body text
    or custom-attached fields.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 如本章开头所述，视图是一个可视化查询构建器。当您首次创建视图时，会指定一个基础表，从中提取数据。视图自动知道如何连接表以获取字段数据，例如正文文本或自定义附加字段。
- en: When using an entity reference field, you can display the value as the raw identifier,
    the referenced entity's label, or the entire rendered entity. However, if you
    add a relationship based on a reference field, you will have access to display
    any of that entity's available fields.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用实体引用字段时，您可以显示原始标识符、引用实体的标签或整个渲染的实体。然而，如果您基于引用字段添加关系，您将能够显示该实体可用的任何字段。
- en: In this recipe, we will update the Files view, used for administering files,
    to display the username of the user who uploaded the file.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 在本配方中，我们将更新用于管理文件的“文件”视图，以显示上传文件的用户的用户名。
- en: How to do it...
  id: totrans-181
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: Got to Structure and then Views. This will bring you to the administrative overview
    of all the views that have been created
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往结构然后是视图。这将带您到所有已创建视图的管理概览
- en: Find the Files view and click on Edit.
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找到文件视图并点击编辑。
- en: Click on Advanced to expand the section and then click on Add that is next to
    Relationships.
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击高级以展开该部分，然后点击位于关系旁边的添加。
- en: 'Search for user. Select the User who uploaded relationship option and click
    on Apply (this display):'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 搜索用户。选择上传关系的用户选项，然后点击应用（此显示）：
- en: '![](img/2db21e32-514a-4203-a6e3-43cf5c55c7da.png)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/2db21e32-514a-4203-a6e3-43cf5c55c7da.png)'
- en: Next, we will be presented with a configuration form for the relationship. Click
    on Apply (this display) to use the defaults.
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将看到一个关系的配置表单。点击应用（此显示）以使用默认设置。
- en: Add a new field by clicking on Add in the Fields section.
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在字段部分点击添加以添加新字段。
- en: 'Search for name and select the Name: User field and, click on Apply (all display).'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 搜索名称并选择名称：用户字段，然后点击应用（所有显示）。
- en: This view uses aggregation, which presents a new configuration form when you
    first add a field. Click on Apply and continue to use the defaults.
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此视图使用聚合，当您第一次添加字段时，将显示一个新的配置表单。点击应用并继续使用默认设置。
- en: We will discuss Views and aggregation in the *There's more...* section of this
    recipe.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本食谱的*更多内容...*部分讨论视图和聚合。
- en: We will use the default field settings that will provide the label Name and
    format it as the username and link to the user's profile. Click on Apply (this
    display).
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将使用默认的字段设置，这将提供名称标签并将其格式化为用户名并链接到用户的个人资料。点击应用（此显示）。
- en: '![](img/5a59ff8f-241a-48c7-bcb8-15d46501a728.png)'
  id: totrans-193
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/5a59ff8f-241a-48c7-bcb8-15d46501a728.png)'
- en: Click on Save to finish editing the view and commit your changes.
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击保存以完成编辑视图并提交您的更改。
- en: 'When viewing the Files list in `/admin/content/files`, the username that uploaded
    the file will now be displayed:'
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当在`/admin/content/files`中查看文件列表时，现在将显示上传文件的用户名：
- en: '![](img/41305fde-09c3-4f24-a263-460316587ab1.png)'
  id: totrans-196
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/41305fde-09c3-4f24-a263-460316587ab1.png)'
- en: How it works...
  id: totrans-197
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Drupal stores data in a normalized format. Database normalization, in short,
    involves the organization of data in specifically related tables. Each entity
    type has its own database table, and all fields have their own database table.
    When you create a view and specify what kind of data will be shown, you are specifying
    a base table in the database that Views will query. Views will automatically associate
    fields that belong to the entity and it's relationship to those tables for you.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: Drupal以规范化的格式存储数据。简而言之，数据库规范化涉及在特定相关表中组织数据。每个实体类型都有自己的数据库表，所有字段都有自己的数据库表。当您创建一个视图并指定将显示哪种数据时，您正在指定数据库中的基础表，视图将查询此表。视图将自动为您关联属于实体及其关系的字段到那些表。
- en: When an entity has an entity reference field, you can add a relationship to
    the referenced entity type's table. This is an explicit definition, whereas fields
    are implicit. When the relationship is explicitly defined, all the referenced
    entity type's fields come into scope. The fields on the referenced entity type
    can then be displayed, filtered, and sorted.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 当一个实体有一个实体引用字段时，您可以将关系添加到引用实体类型的表中。这是一个显式定义，而字段是隐式的。当关系被显式定义时，所有引用实体类型的字段都将进入作用域。然后可以显示、过滤和排序引用实体类型上的字段。
- en: There's more...
  id: totrans-200
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更多内容...
- en: Using relationships in Views allows you to create some powerful displays. We
    will discuss aggregation and additional information about relationships.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 在视图中使用关系允许您创建一些强大的显示。我们将讨论聚合和关于关系的附加信息。
- en: Relationships provided by entity reference fields
  id: totrans-202
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实体引用字段提供的关系
- en: The Views module uses a series of hooks to retrieve data that it then uses to
    represent ways to interact with the database. One of these is the `hook_field_views_data`
    hook, which processes a field storage configuration entity and registers its data
    with Views. The Views module implements this on behalf of the Drupal core to add
    relationships and reverse relationship, for Entity reference fields.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 视图模块使用一系列钩子来检索数据，然后使用这些数据来表示与数据库交互的方式。其中之一是`hook_field_views_data`钩子，它处理字段存储配置实体并将其数据注册到视图中。视图模块代表Drupal核心实现这一点，以添加关系和反向关系，用于实体引用字段。
- en: Since Entity reference fields have set schema information, Views can dynamically
    generate these relationships by understanding the field's table name, destination
    entity's table name, and the destination entity's identifier column.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 由于实体引用字段已设置架构信息，视图可以通过理解字段表名、目标实体表名和目标实体标识列来动态生成这些关系。
- en: Relationships provided through custom code
  id: totrans-205
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过自定义代码提供的关联
- en: There are times where you will need to define a relation on your own with custom
    code. Typically, when working with custom data in Drupal, you would more than
    likely create a new entity type; this topic is covered in [*Chapter 9*](b2659986-a8dc-4503-a043-6071ab7b6722.xhtml),
    *Configuration Management - Deploying in Drupal 8*. This is not always the case,
    however, and you may just need a simple method of storing data. An example can
    be found in the Database Logging module. The Database Logging module defines a
    schema for a database table and then uses `hook_views_data` to expose its database
    table to Views.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候您需要自己定义一个关系，使用自定义代码。通常，当在 Drupal 中处理自定义数据时，您更有可能创建一个新的实体类型；这个主题在[*第 9 章*](b2659986-a8dc-4503-a043-6071ab7b6722.xhtml)，*配置管理
    - 在 Drupal 8 中部署*中有所涉及。然而，这并不总是情况，您可能只需要一种简单的方法来存储数据。一个例子可以在数据库日志模块中找到。数据库日志模块定义了一个数据库表的架构，然后使用
    `hook_views_data` 将其数据库表暴露给视图。
- en: 'The `dblog_schema` hook implementation returns a `uid` column on the watchdog
    database table created by the module. That column is then exposed to Views using
    the following definition:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '`dblog_schema` 钩子实现返回由模块创建的监视数据库表上的 `uid` 列。然后，该列通过以下定义暴露给视图：'
- en: '[PRE1]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This array tells Views that the `watchdog` table has a column named `uid`. It
    is numeric in nature for its display, filtering capabilities, and sorting capabilities.
    The `relationship`
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 此数组告诉视图，`watchdog` 表有一个名为 `uid` 的列。它具有数字性质，用于显示、过滤和排序能力。关系
- en: key is an array of information that instructs Views how to use this to provide
    a relationship (`LEFT JOIN`) on the `users` table. The `User` entity uses the
    `users` table and has the primary key of `uid`.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 键是一个信息数组，指示视图如何使用它来在 `users` 表上提供关系（`LEFT JOIN`）。`User` 实体使用 `users` 表，其主键为
    `uid`。
- en: Using aggregation and views.
  id: totrans-211
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用聚合和视图。
- en: There is a view setting under the Advanced section that allows you to enable
    aggregation.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 在高级部分有一个视图设置，允许您启用聚合。
- en: This feature allows you to enable the usage of SQL aggregate functions, such
    as `MIN`, `MAX`, `SUM`, `AVG`, and `COUNT`. In this recipe, the Files view uses
    aggregation to sum the usage counts of each file on the Drupal site.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 此功能允许您启用使用 SQL 聚合函数，例如 `MIN`、`MAX`、`SUM`、`AVG` 和 `COUNT`。在本食谱中，文件视图使用聚合来汇总 Drupal
    网站上每个文件的用法计数。
- en: 'Aggregation settings are set for each field, and when enabled, they have their
    own link to configure these settings:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 聚合设置针对每个字段设置，启用时，它们有自己的链接来配置这些设置：
- en: '![](img/1afe7dec-0b03-4960-8afd-5b5909f5e0fb.png)'
  id: totrans-215
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1afe7dec-0b03-4960-8afd-5b5909f5e0fb.png)'
- en: Providing an Entity Reference result View
  id: totrans-216
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提供实体引用结果视图
- en: The Entity reference field, covered in [*Chapter 2*](953ad256-0342-45c8-84d9-5cda80d2d099.xhtml),
    *The Content Authoring Experience*, can utilize a custom view for providing the
    available field values. The default entity reference field will display all available
    entities of the type it can reference. The only available filter is based on the
    entity bundle, such as only returning `Article` nodes. Using an entity reference
    view, you can provide more filters, such as only returning the content that your
    user has authored.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第 2 章*](953ad256-0342-45c8-84d9-5cda80d2d099.xhtml)，*内容创作体验*中介绍的实体引用字段可以利用自定义视图来提供可用的字段值。默认的实体引用字段将显示它可以引用的所有类型的实体。唯一可用的过滤器是基于实体捆绑，例如仅返回
    `Article` 节点。使用实体引用视图，您可以提供更多过滤器，例如仅返回用户创作的内容。
- en: In this recipe, we will create an entity reference view that filters content
    by the author. We will add the field to the user account form, allowing users
    to select their favorite contributed content.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 在本食谱中，我们将创建一个实体引用视图，通过作者过滤内容。我们将添加字段到用户账户表单中，允许用户选择他们喜欢的贡献内容。
- en: How to do it...
  id: totrans-219
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: Go to Structure and then Views. This will bring you to the administrative overview
    of all the views that have been created. Click on Add view to create a new view.
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往结构，然后是视图。这将带您到所有已创建视图的管理概览。点击添加视图以创建一个新的视图。
- en: Set the View name to My Content Reference View, and retain the current View
    settings configuration.
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将视图名称设置为“我的内容引用视图”，并保留当前的视图设置配置。
- en: Do not choose to create a page or block. Click on Save and edit to continue
    working on your view.
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不要选择创建页面或块。点击保存并编辑以继续编辑视图。
- en: 'Click on the Add button to create a new display. Select the Entity Reference
    option to create the display:'
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击添加按钮创建新的显示。选择实体引用选项以创建显示：
- en: '![](img/21b255ab-9329-4014-9ab6-9256db61bc7c.png)'
  id: totrans-224
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/21b255ab-9329-4014-9ab6-9256db61bc7c.png)'
- en: The Format will be automatically set to Entity Reference List, which utilizes
    fields. Click on Settings next to it to modify the style format.
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 格式将自动设置为实体引用列表，它使用字段。点击旁边的设置来修改样式格式。
- en: 'For Search Fields, check the Content: Title option and then click on Apply.
    This is what the field will perform the autocomplete search on.'
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于搜索字段，勾选“内容：标题”选项，然后点击应用。这就是字段将执行自动完成搜索的地方。
- en: 'You will need to modify the Content: Title field to stop it from wrapping the
    result as a link. Click on the field label and uncheck Link to the Content. Click
    on Apply to save the field settings:'
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您需要修改“内容：标题”字段以停止将其作为链接包装结果。点击字段标签并取消选中链接到内容。点击应用以保存字段设置：
- en: '![](img/963ae57c-96a3-432a-8f2b-cf27921827fa.png)'
  id: totrans-228
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/963ae57c-96a3-432a-8f2b-cf27921827fa.png)'
- en: We will then use a contextual filter to limit the results to the currently loggedin
    user. Click on Add from Contextual Filters in the Advanced section.
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们将使用上下文筛选器来限制结果仅限于当前登录用户。在高级部分点击上下文筛选器的添加。
- en: 'Select the Authored by: Content option and click on Add and configure contextual
    filters.'
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择“由谁创建：内容”选项，然后点击添加并配置上下文筛选器。
- en: Change the When the filter value is not available setting to Provide a default
    value. Select User ID from the logged in user for the type value. Click on Apply
    to configure the contextual filter.
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将“当筛选器值不可用时的设置”更改为“提供默认值”。从登录用户中选择用户ID作为类型值。点击应用以配置上下文筛选器。
- en: Click on Save to save the view.
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击保存以保存视图。
- en: Go to Configuration and then Account settings to be able to manage fields on
    user accounts.
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往配置然后账户设置，以便能够管理用户账户上的字段。
- en: Add a new Entity Reference field that references Content, call it Highlighted
    Contributions, and allow it to have unlimited values. Click on the Save field
    settings button.
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加一个新的实体引用字段，引用内容，命名为“突出贡献”，并允许它有无限值。点击保存字段设置按钮。
- en: 'Change the Reference type method to use View: Filter by an entity reference
    view and select the view we have just created:'
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将引用类型方法更改为使用视图：通过实体引用视图进行筛选并选择我们刚刚创建的视图：
- en: '![](img/378d90f3-c07c-4bcb-82e4-60c58f92f1a0.png)'
  id: totrans-236
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/378d90f3-c07c-4bcb-82e4-60c58f92f1a0.png)'
- en: Now, when a user edits their account, they can reference only content that they
    have created in this reference field.
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，当用户编辑他们的账户时，他们只能引用在此引用字段中创建的内容。
- en: How it works...
  id: totrans-238
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The entity reference field definition provides selection plugins. The Views
    module provides an entity reference selection plugin. This allows entity reference
    to gather data into a view to receive available results.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 实体引用字段定义提供了选择插件。视图模块提供了一个实体引用选择插件。这允许实体引用将数据收集到视图中以接收可用结果。
- en: The display type for Views requires you to select which fields will be used
    to search against when using the autocomplete widget. If you are not using the
    autocomplete widget and instead use the select list or checkboxes and radio buttons,
    then it will return the view's entire results.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 视图的显示类型要求您选择在使用自动完成小部件时用于搜索的字段。如果您不使用自动完成小部件，而是使用选择列表或复选框和单选按钮，则它将返回视图的所有结果。
- en: See also
  id: totrans-241
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参见
- en: Refer to [*Chapter 7*](3994173f-3d31-4f01-b808-99e01368564b.xhtml), *Plug and
    Play with Plugins*, to learn more about plugins
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 参考第[*第7章*](3994173f-3d31-4f01-b808-99e01368564b.xhtml)，*插件即插即用*，了解更多关于插件的信息。
