- en: Appendix
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Frequently Asked Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Through the years of helping developers adapt to Liquid, specific situations
    and questions have arisen to which answers are not so easy to come by. We will
    now list the most frequent situations and offer some advice that will help improve
    your knowledge of both Shopify and Liquid and make your work that much easier:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Is it possible to find the location of some particular code inside the code
    editor without manually searching every template, section, or snippet?*'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: One of the biggest problems that the developers have when starting to work with
    **Shopify** is that they have trouble finding a specific piece of code across
    different templates, sections, and snippets. While after some time, we do get
    used to finding things more efficiently, it can be pretty troublesome at the start.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: To help us with this, we can use a nifty little **Chrome** addon called **Shopify
    Theme Search by Bold**. This little addon provides us with a search input inside
    the code editor to type in any string that we are looking for. After a few seconds,
    it will highlight every directory and file that contains any occurrence of the
    searched string. You can read more about it at [https://chrome.google.com/webstore/detail/shopify-theme-search-by-b/epbnmkionkpliaiogpemfkclmcnbdfle](https://chrome.google.com/webstore/detail/shopify-theme-search-by-b/epbnmkionkpliaiogpemfkclmcnbdfle).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '*No matter how many new duplicate themes we create, for some reason, the duplicate
    theme does not have any of the previous customizations saved.* *What should we
    do in this case?*'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The second most problematic issue happens during the theme duplication process.
    After creating a theme duplicate, we may notice that the duplicate theme has reset
    entirely. It does not contain any of the customizations that we had previously
    set inside the theme editor.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The problem lies inside the `settings_data.json` file, which, if we open it,
    we will see is empty, and in some instances, the file might be missing altogether.
    The reason for this occurrence is apparent – Shopify did not copy the file's content
    correctly – but the question is *why?* If we were to navigate to the theme from
    which we initially created a duplicate, open the `settings_data.json` file, and
    try to copy its content to the new duplicate theme, we would not be able to save
    the file due to an error inside the JSON file. If we try to save the copied content
    to a new file, Shopify will not allow it and instead provide us with an error
    code of the problematic value.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: To resolve this, we will need to manually search for every value that we received
    inside the error and update it accordingly. Possible issues could be that we have
    entirely deleted a particular section block without first removing the block from
    inside the theme editor. Shopify will keep trying to load the block. However,
    since we have deleted it, it will not be able to, and it will break the JSON file.
    The second most frequent issue comes up when using the `range` input type, where
    the current value of the input exceeds the range between the min and max values.
    Only after resolving all of these issues will we be able to save the file correctly.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '*Is it possible to recover a deleted theme?*'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Each store allows us to keep up to 20 duplicate themes as a backup and up to
    50 duplicate themes on the **Shopify Plus** plan. If we delete a theme file for
    any reason and do not have a backup file saved on GitHub or somewhere locally,
    the file will be permanently lost, and we will not be able to recover it in any
    way.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '*How can we find which app is being used by a particular store?*'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'While it is not possible to see every type of app that a store is using, we
    can retrieve the names of most of the apps by using the **Shopify App Detector
    by Fera.ai** or **Koala Inspector - Inspect Shopify Shops** Chrome addons. You
    can find more info on Shopify App Detector by Fera.ai using the following link:
    [https://chrome.google.com/webstore/detail/shopify-app-detector-by-f/lhfdhjladfcmghahdbcmlceajdlbkale](https://chrome.google.com/webstore/detail/shopify-app-detector-by-f/lhfdhjladfcmghahdbcmlceajdlbkale).'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'You can find more info on Koala Inspector - Inspect Shopify Shops using the
    following link: [https://chrome.google.com/webstore/detail/koala-inspector-inspect-s/hjbfbllnfhppnhjdhhbmjabikmkfekgf](https://chrome.google.com/webstore/detail/koala-inspector-inspect-s/hjbfbllnfhppnhjdhhbmjabikmkfekgf).'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '*How can we easily identify the Liquid code that is slowing down the store?*'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'To help us with this, Shopify has introduced an addon named **Shopify Theme
    Inspector for Chrome**, which we can use to retrieve a detailed analysis render
    profiling and help us narrow down which files are causing the most significant
    delay. We can find more info on Shopify Theme Inspector for Chrome using the following
    link: [https://chrome.google.com/webstore/detail/shopify-theme-inspector-f/fndnankcflemoafdeboboehphmiijkgp](https://chrome.google.com/webstore/detail/shopify-theme-inspector-f/fndnankcflemoafdeboboehphmiijkgp).'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '*When we try to send a collaborator account request to the client using the
    Shopify partners platform, for some reason, we keep getting the message that the
    store URL is not associated to a shop.* *How can we resolve this?*'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The reason for this is that in most cases, store owners have set up a custom
    domain whose URL is quite different than the [myshopify.com](http://myshopify.com)
    URL that we require to send them a collaborator account request, so replacing
    the `.com` with `.myshopify.com` will not resolve our problem. We can easily resolve
    this by simply navigating to the URL they have provided us by opening the inspector
    and typing `Shopify` inside the console, which will prompt a set of various information
    about the store. Among that, we will find a correct [myshopify.com](http://myshopify.com)
    URL. Note that the `Shopify` keyword is case-sensitive.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '*Does the Shopify code editor have a dark mode?*'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answer is yes! But it is pretty hidden. In order to reveal it, navigate
    to the code editor and click on the button to expand the editor screen. We can
    find it in the top-right corner of the editor screen. Once we have expanded the
    editor screen, we will notice that we now have two scroll bars on our right. If
    we scroll down to the bottom of the page, we will find the **White** and **Black**
    buttons allowing us to change the color mode of the editor. However, note that
    the editor will revert to its default color when we close the expanded editor
    view.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '*Is there a way to automatically format the code inside the Liquid files?*'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*The answer is yes!* We can highlight the entire Liquid file inside the code
    editor using the *CTRL + A* and then press *Shift + Tab*, automatically formatting
    the entire file accordingly. However, while auto-formatting will be helpful with
    most files, note that automatic formatting does not work on the `section` schema
    tag and its content.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
