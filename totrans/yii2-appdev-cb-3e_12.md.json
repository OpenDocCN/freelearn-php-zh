["```php\n    'components' => [\n        'log' => [\n            'traceLevel' => 0,\n            'targets' => [\n                [\n                    'class' => 'yii\\log\\EmailTarget',\n                    'categories' => ['example'],\n                    'levels' => ['error'],\n                    'message' => [\n                        'from' => ['log@example.com'],\n                        'to' => ['developer1@example.com', 'developer2@example.com'],\n                        'subject' => 'Log message',\n                    ],\n                ],\n                [\n                    'class' => 'yii\\log\\FileTarget',\n                    'levels' => ['error'],\n                    'logFile' => '@runtime/logs/error.log',\n                ],\n                [\n                    'class' => 'yii\\log\\FileTarget',\n                    'levels' => ['warning'],\n                    'logFile' => '@runtime/logs/warning.log',\n                ],\n                [\n                    'class' => 'yii\\log\\FileTarget',\n                    'levels' => ['info'],\n                    'logFile' => '@runtime/logs/info.log',\n                ],\n            ],\n        ],\n\n        'db' => require(__DIR__ . '/db.php'),\n    ],\n    ```", "```php\n    <?php\n    namespace app\\controllers;\n\n    use yii\\web\\Controller;\n    use Yii;\n\n    class LogController extends Controller\n    {\n        public function actionIndex()\n        {\n            Yii::trace('example trace message', 'example');\n            Yii::info('info', 'example');\n            Yii::error('error', 'example');\n            Yii::trace('trace', 'example');\n            Yii::warning('warning','example');\n\n            Yii::beginProfile('preg_replace', 'example');\n            for($i=0;$i<10000;$i++){\n                preg_replace('~^[ a-z]+~', '', 'test it');\n            }\n            Yii::endProfile('preg_replace', 'example');\n\n            return $this->render('index');\n        }\n    }\n    ```", "```php\n    <div class=\"log-index\">\n        <h1>Log</h1>\n    </div>\n    ```", "```php\n    2016-03-06 07:28:35 [127.0.0.1][-][-][error][example] error\n    ...\n    2016-03-06 07:28:35 [127.0.0.1][-][-][warning][example] warning\n    ...\n    2016-03-06 07:28:35 [127.0.0.1][-][-][info][example] inf\n    o\n\n    ```", "```php\n[\n    'class' => 'yii\\log\\EmailTarget',\n    'categories' => ['example'],\n    'levels' => ['error'],\n    // 'mailer' => 'mailer',\n    'message' => [\n        'from' => ['log@example.com'],\n        'to' => ['developer1@example.com', 'developer2@example.com'],\n        'subject' => 'Log error,\n    ],\n],\n```", "```php\n[\n    'class' => 'yii\\log\\FileTarget',\n    'levels' => [warning],\n    'logFile' => '@runtime/logs/warning.log',\n],\n```", "```php\n./yii migrate --migrationPath=@yii/log/migrations/\n```", "```php\npublic static function trace($message, $category = 'application')\n{\n    if (YII_DEBUG) {\n        static::getLogger()->log($message, Logger::LEVEL_TRACE, $category);\n    }\n}\n```", "```php\nYii::beginProfile('preg_replace', 'example');\nfor($i=0;$i<10000;$i++){\n    preg_replace('~^[ a-z]+~', '', 'test it');\n}\nYii::endProfile('preg_replace', 'example');\n```", "```php\npublic static function beginProfile($token, $category = 'application') { … }\n```", "```php\npublic static function endProfile($token, $category = 'application') { … }\n```", "```php\n'components' => ['log' => ['flushInterval' => 1,'targets' => [['class' => 'yii\\log\\FileTarget','exportInterval' => 1,],],    ],\n],\n```", "```php\n    <?php\n    use yii\\db\\Migration;\n    class m160308_093234_create_article_table extends Migration\n    {\n        public function up()\n        {\n            $this->createTable('{{%article}}', [\n                'id' => $this->primaryKey(),\n                'alias' => $this->string()->notNull(),\n                'title' => $this->string()->notNull(),\n                'text' => $this->text()->notNull(),\n            ]);\n        }\n\n        public function down()\n        {\n            $this->dropTable('{{%article}}');\n        }\n    }\n    ```", "```php\n    <?php\n\n    namespace app\\controllers;\n\n    use app\\models\\Article;\n    use yii\\web\\Controller;\n\n    class ErrorController extends Controller\n    {\n        public function actionIndex()\n        {\n            $article = $this->findModel('php');\n\n            return $article->title;\n        }\n\n        private function findModel($alias)\n        {\n            return Article::findOne(['allas' => $alias]);\n        }\n    }\n    ```", "```php\n    <?php\n    namespace app\\controllers;\n\n    use yii\\web\\Controller;\n\n    class LogController extends Controller\n    {\n        public function actionIndex()\n        {\n            return 'Hello, ' . $_GET['username'];\n        }\n    }\n    ```", "```php\n    config/web.php:\n\n    'components'=>array(\n        ...\n        'log' => [\n            'targets' => [\n                [\n                    'class' => 'yii\\log\\FileTarget',\n                    'levels' => ['error'],\n                    'logFile' => '@runtime/logs/errors.log',\n                ],\n            ],\n        ],\n    ],\n    ```", "```php\n    2016-03-06 09:27:09 [127.0.0.1][-][-][error][yii\\base\\ErrorException:8] exception 'yii\\base\\ErrorException' with message 'Undefined index: username' in /controllers/LogController.php:11\n    Stack trace:\n    #0 /yii2/base/InlineAction.php(55): ::call_user_func_array()\n    #1 /yii2/base/Controller.php(151): yii\\base\\InlineAction->runWithParams()\n    #2 /yii2/base/Module.php(455): yii\\base\\Controller->runAction()\n    #3 /yii2/web/Application.php(84): yii\\base\\Module->runAction()\n    #4 /yii2/base/Application.php(375): yii\\web\\Application->handleRequest()\n    #5 /web/index.php(12): yii\\base\\Application->run()\n    #6 {main}\n    2016-03-06 09:27:09 [127.0.0.1][-][-][info][application] $_GET = [\n     'r' => 'log/index'\n    ]\n\n    $_COOKIE = [\n     '_csrf' => 'ca689043348e...a69ea:2:{i:0;s:...\\\"DSS...KJ\\\";}'\n     'PHPSESSID' => '30584oqhat4ek8b0hrqsapsbf4'\n    ]\n\n    $_SERVER = [\n     'USER' => 'www-data'\n     'HOME' => '/var/www'\n     'FCGI_ROLE' => 'RESPONDER'\n     'QUERY_STRING' => 'r=log/index'\n     ...\n     'PHP_SELF' => '/index.php'\n     'REQUEST_TIME_FLOAT' => 1459934829.3067\n     'REQUEST_TIME' => 1459934829\n    ]\n\n    ```", "```php\n    'log' => [\n        'targets' => [\n            [\n                'class' => 'yii\\log\\FileTarget',\n                'levels' => ['error'],\n                'logVars' => ['_GET', '_POST'],\n                'logFile' => '@runtime/logs/errors.log',\n            ],\n        ],\n    ],\n    ```", "```php\n    ...\n    2016-04-06 09:49:08 [127.0.0.1][-][-][info][application] $_GET = [ 'r' => 'log/index'\n    ]\n    ```", "```php\n'log' => [\n    'targets' => [\n        [\n            'class' => 'yii\\log\\FileTarget',\n            'levels' => ['error'],\n            'logVars' => ['_GET', '_POST'],\n            'logFile' => '@runtime/logs/errors.log',\n        ],\n    ],\n],\n```", "```php\n    class SiteController extends Controller\n    {\n        // …\n\n        public function actionFail()\n        {\n            throw new ServerErrorHttpException('Error message example.');\n        }\n    }\n    ```", "```php\n    RewriteEngine on\n    RewriteCond %{REQUEST_FILENAME} !-f\n    RewriteCond %{REQUEST_FILENAME} !-d\n    RewriteRule . index.php\n    ```", "```php\n    'components' => [\n        // …\n        'urlManager' => [\n            'enablePrettyUrl' => true,\n                'showScriptName' => false,\n            ],\n    ],\n    ```", "```php\n    class SiteController extends Controller\n    {\n        // ...\n        public function actions()\n        {\n            return [\n                'error' => [\n                    'class' => 'yii\\web\\ErrorAction',\n                ],\n                'captcha' => [\n                    'class' => 'yii\\captcha\\CaptchaAction',\n                    'fixedVerifyCode' => YII_ENV_TEST ? 'testme' : null,\n                ],\n            ];\n        }\n        // ...\n    }\n    ```", "```php\n    class SiteController extends Controller\n    {\n        // ...\n        public function actions()\n        {\n            return [\n                'captcha' => [\n                    'class' => 'yii\\captcha\\CaptchaAction',\n                    'fixedVerifyCode' => YII_ENV_TEST ? 'testme' : null,\n                ],\n            ];\n        }\n        // ...\n    }\n    ```", "```php\n    class SiteController extends Controller\n    {\n        // ...\n        public function actionError()\n        {\n\n        }\n    }\n    ```", "```php\n    // ...\n    use yii\\base\\Exception;\n    use yii\\base\\UserException;\n\n    class SiteController extends Controller\n    {\n        // ...\n        public function actionError()\n        {\n            if (($exception = Yii::$app->getErrorHandler()->exception)== null) {\n                $exception = new HttpException(404, Yii::t('yii', 'Page not found.'));\n            }\n\n            if ($exception instanceof HttpException) {\n                $code = $exception->statusCode;\n            } else {\n                $code = $exception->getCode();\n            }\n            if ($exception instanceof Exception) {\n                $name = $exception->getName();\n            } else {\n                $name = Yii::t('yii', 'Error');\n            }\n            if ($code) {\n                $name .= \" (#$code)\";\n            }\n\n            if ($exception instanceof UserException) {\n                $message = $exception->getMessage();\n            } else {\n                $message = Yii::t('yii', 'An internal server error occurred.');\n            }\n\n            if (Yii::$app->getRequest()->getIsAjax()) {\n                return \"$name: $message\";\n            } else {\n                if ($code == 404) {\n                    return $this->render('error-404');\n                } else {\n                    return $this->render('error', [\n                        'name' => $name,\n                        'message' => $message,\n                        'exception' => $exception,\n                    ]);\n                }\n            }\n        }\n\n    }\n    ```", "```php\n    <?php\n    use yii\\helpers\\Html;\n\n    /* @var $this yii\\web\\View */\n\n    $this->title = 'Not Found!'\n    ?>\n    <div class=\"site-error-404\">\n\n        <h1>Oops!</h1>\n\n        <p>Sorry, but requested page not found.</p>\n\n        <p>\n            Please follow to <?= Html::a('index page', ['site/index'])?>\n            to continue reading. Thank you.\n        </p>\n\n    </div>\n    ```", "```php\n'components' => [\n    'errorHandler' => [\n        'errorAction' => 'site/error',\n    ],\n],\n```", "```php\nclass SiteController extends Controller\n{\n    // ...\n    public function actions()\n    {\n        return [\n            'error' => [\n                'class' => 'yii\\web\\ErrorAction',\n            ],\n            'captcha' => [\n                'class' => 'yii\\captcha\\CaptchaAction',\n                'fixedVerifyCode' => YII_ENV_TEST ? 'testme' : null,\n            ],\n        ];\n    }\n    // ...\n}\n```", "```php\nif ($code == 404) {\n    return $this->render('error-404');\n} else {\n    return $this->render('error', [\n        'name' => $name,\n        'message' => $message,\n        'exception' => $exception,\n    ]);\n}\n```", "```php\n    <?php\n    namespace app\\panels;\n\n    use yii\\debug\\Panel;\n    use Yii;\n\n    class UserPanel extends Panel\n    {\n        public function getName()\n        {\n            return 'User';\n        }\n\n        public function getSummary()\n        {\n            return Yii::$app->view->render('@app/panels/views/summary', ['panel' => $this]);\n        }\n\n        public function getDetail()\n        {\n            return Yii::$app->view->render('@app/panels/views/detail', ['panel' => $this]);\n        }\n\n        public function save()\n        {\n            $user = Yii::$app->user;\n\n            return !$user->isGuest ? [\n                'id' => $user->id,\n                'username' => $user->identity->username,\n            ] : null;\n        }\n    }\n    ```", "```php\n    <?php\n    /* @var $panel app\\panels\\UserPanel */\n    use yii\\helpers\\Html;\n    ?>\n    <div class=\"yii-debug-toolbar__block\">\n        <?php if (!empty($panel->data)): ?>\n            <a href=\"<?= $panel->getUrl() ?>\">\n                User\n                <span class=\"yii-debug-toolbar__label yii-debug-toolbar__label_info\">\n                    <?= Html::encode($panel->data['username']) ?>\n                </span>\n            </a>\n        <?php else: ?>\n            <a href=\"<?= $panel->getUrl() ?>\">Guest session</a>\n        <?php endif; ?>\n    </div>\n    ```", "```php\n    <?php\n    /* @var $panel app\\panels\\UserPanel */\n    use yii\\widgets\\DetailView;\n    ?>\n    <h1>User profile</h1>\n    <?php if (!empty($panel->data)): ?>\n        <?= DetailView::widget([\n            'model' => $panel->data,\n            'attributes' => [\n                'id',\n                'username',\n            ]\n        ]) ?>\n    <?php else: ?>\n        <p>Guest session.</p>\n    <?php endif;?>\n    ```", "```php\n    if (YII_ENV_DEV) {\n        $config['bootstrap'][] = 'debug';\n        $config['modules']['debug'] = [\n            'class' => 'yii\\debug\\Module',\n            'panels' => [\n                'views' => ['class' => 'app\\panels\\UserPanel'],\n            ],\n        ];\n        $config['bootstrap'][] = 'gii';\n        $config['modules']['gii'] = 'yii\\gii\\Module';\n    }\n    ```", "```php\npublic function save()\n{\n    $user = Yii::$app->user;\n    return !$user->isGuest ? [\n        'id' => $user->id,\n        'username' => $user->identity->username,\n    ] : null;\n}\n```", "```php\nclass MailPanel extends Panel\n{\n    private $_messages = [];\n\n    public function init()\n    {\n        parent::init();\n        Event::on(\n            BaseMailer::className(),\n            BaseMailer::EVENT_AFTER_SEND,\n            function ($event) {\n                $message = $event->message;\n                $messageData = [\n                    // ...\n                ];\n                $this->_messages[] = $messageData;\n            }\n        );\n    }\n\n    // …\n\n    public function save()\n    {\n        return $this->_messages;\n    }\n}\n```"]