- en: Chapter 6. Using PhpStorm in a Team
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章。在团队中使用PhpStorm
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下食谱：
- en: Getting a VCS server
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取版本控制系统服务器
- en: Creating a VCS repository
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建版本控制系统仓库
- en: Connecting PhpStorm to a VCS repository
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将PhpStorm连接到版本控制系统仓库
- en: Storing a PhpStorm project in a VCS repository
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将PhpStorm项目存储在版本控制系统仓库中
- en: Committing files to the VCS repository
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将文件提交到版本控制系统仓库
- en: Updating code from a VCS repository
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从版本控制系统仓库更新代码
- en: Synchronizing your code with the VCS repository
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将你的代码与VCS仓库同步
- en: Examining the VCS repository
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查版本控制系统仓库
- en: Checking projects out of a VCS repository
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从版本控制系统仓库检出项目
- en: Creating code patches
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建代码补丁
- en: Creating VCS tags or branches
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建VCS标签或分支
- en: Creating a task for the team
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为团队创建任务
- en: Introduction
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: '*Rome wasn''t built in a day. Nor by a single person...*'
  id: totrans-15
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*罗马不是一天建成的。也不是由一个人...*'
- en: 'Whichever sport you play or wherever you go, it has always been a team game.
    They have always kept on saying that united you stand and divided you fall. A
    PhpStorm cookbook author also used to say that reinventing the wheel is an action
    that should be avoided. Thus, you should always work in a team. The reason is
    obvious: a task divided among a team is completed faster.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你玩什么运动或去哪里，它始终是一项团队运动。他们总是说团结就是力量，分裂就是失败。一个PhpStorm食谱作者也曾说过，重新发明轮子是一种应该避免的行为。因此，你应该始终在团队中工作。原因很明显：将任务分配给团队可以更快地完成。
- en: According to a principle of software engineering, you should program in a team
    of two. This way, both of you will be able to discover errors in each other's
    code in the development phase itself.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 根据软件工程的一个原则，你应该在两个人的团队中编程。这样，你们两个人都将在开发阶段本身发现彼此代码中的错误。
- en: So, when you work in a team, how will you work on an application development
    in which someone else is working on another module? One way is to use that same
    machine to code so that you can continue from the point where the other person
    stops working. But, is it wise to wait? It's OK that you work in a different shift.
    But, what if that person is geographically remote from you? Even if everything
    is favorable and if you need a third person to join the team, where will that
    person work? If you work for 8 hours, there can be a maximum of three people working
    on a project at any instant. Such inefficient usage of infrastructure!
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，当你在一个团队中工作时，你将如何在一个其他人正在另一个模块上工作的应用程序开发中进行工作？一种方法是用同一台机器编码，这样你就可以从另一个人停止工作的地方继续。但是，等待是否明智？如果你在不同的班次工作，这是可以接受的。但是，如果那个人地理位置上离你很远呢？即使一切都很顺利，如果你需要第三个人加入团队，那个人在哪里工作？如果你工作8小时，在任何时刻最多有三个人在项目上工作。这种基础设施的低效使用！
- en: How do you feel about the code repository? What do you think when someone says
    **version control** or **source control** before you? What do you know about VCS...
    VCS as in **version control system**?
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 你对代码仓库有什么看法？当有人在你面前说**版本控制**或**源控制**时，你有什么想法？你对VCS... VCS作为**版本控制系统**有什么了解？
- en: What is meant by a version of software?
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 软件版本是什么意思？
- en: To get the answer, you have stepped into the world of version control systems.
    Welcome!
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 为了得到答案，你已经步入了版本控制系统的世界。欢迎！
- en: Getting a VCS server
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取版本控制系统服务器
- en: The first action that you have to undertake is to decide which version of VCS
    you are going to use. There are a number of systems available, such as Git and
    Subversion (commonly known as SVN). It is free and open source software that you
    can download and install on your development server. There is another system named
    **concurrent versions system** (**CVS**). Both are meant to provide a code versioning
    service to you. SVN is newer and supposedly faster than CVS. Since SVN is the
    newer system and in order to provide information to you on the latest matters,
    this text will concentrate on the features of Subversion only.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 你必须采取的第一个行动是决定你要使用哪个版本的VCS。有几种系统可供选择，例如Git和Subversion（通常称为SVN）。这是一款免费的开源软件，你可以下载并安装在你的开发服务器上。还有一个名为**并发版本系统**（**CVS**）的系统。两者都旨在为你提供代码版本控制服务。SVN比CVS新，据说比CVS快。由于SVN是较新的系统，并且为了向你提供有关最新事项的信息，本文将仅关注Subversion的功能。
- en: Getting ready
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'So, finally that moment has arrived when you will start off working in a team
    by getting a VCS system for you and your team. The installation of SVN on the
    development system can be done in two ways: easy and difficult. The difficult
    step can be skipped without consideration because that is for the developers who
    want to contribute to the Subversion system. Since you are dealing with PhpStorm,
    you need to remember the easier way because you have a lot more to do.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，最终那个时刻已经到来，你将通过为你的团队获取一个 VCS 系统来开始团队合作。在开发系统上安装 SVN 可以有两种方式：简单和困难。困难步骤可以不考虑而跳过，因为那是为想要为
    Subversion 系统做出贡献的开发者准备的。由于你正在处理 PhpStorm，你需要记住更简单的方法，因为你还有更多的事情要做。
- en: How to do it...
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'The installation step is very easy. There is this **aptitude** utility available
    with Debian-based systems, and there is the Yum utility available with Red Hat-based
    systems. Perform the following steps:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 安装步骤非常简单。在基于 Debian 的系统中，有这个 **aptitude** 工具可用，而在基于 Red Hat 的系统中，有 Yum 工具可用。执行以下步骤：
- en: You just need to issue the command `apt-get install subversion`. The operating
    system's package manager will do the remaining work for you. In a very short time,
    after flooding the command-line console with messages, you will have the Subversion
    system installed.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你只需要发出命令 `apt-get install subversion`。操作系统的包管理器将为你完成剩余的工作。在很短的时间内，在命令行控制台充斥着消息之后，你将安装好
    Subversion 系统。
- en: To check whether the installation was successful, you need to issue the command
    `whereis svn`. If there is a message, it means that you installed Subversion successfully.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要检查安装是否成功，你需要发出命令 `whereis svn`。如果有消息，则意味着你已成功安装 Subversion。
- en: Note
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you do not want to bear the load of installing Subversion on your development
    system, you can use commercial third-party servers. But that is more of a layman's
    approach to solving problems, and no PhpStorm cookbook author will recommend that
    you do that. You are a software engineer; you should not let go easily.
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你不想在你的开发系统上承担安装 Subversion 的负担，你可以使用商业第三方服务器。但这更多的是一种解决问题的门外汉方法，而且没有任何 PhpStorm
    烹饪书作者会推荐你这样做。你是一名软件工程师；你不应该轻易放弃。
- en: How it works...
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: When you install the version control system, you actually install a server that
    provides the version control service to a version control client. The subversion
    control service listens for incoming connections from remote clients on port number
    `3690` by default.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 当你安装版本控制系统时，你实际上是在安装一个服务器，该服务器为版本控制客户端提供版本控制服务。默认情况下，版本控制服务监听端口 `3690` 的远程客户端的传入连接。
- en: There's more...
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'If you want to install the older companion, CVS, you can do that in a similar
    way, as shown in the following steps:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想要安装较旧的配套软件，CVS，你可以用类似的方式安装，如下面的步骤所示：
- en: You need to download the archive for the CVS server software.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你需要下载 CVS 服务器软件的存档。
- en: You need to unpack it from the archive using your favorite unpacking software.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你需要使用你喜欢的解压缩软件将其从存档中解压出来。
- en: You can move it to another convenient location since you will not need to disturb
    this folder in the future.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以将其移动到另一个方便的位置，因为你将来不需要打扰这个文件夹。
- en: You then need to move into the directory, and there will start your compilation
    process. You need to do `#. /configure` to create the make targets. Having made
    the target, you need to enter `#make install` to complete the installation procedure.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后你需要进入目录，编译过程将从这里开始。你需要执行 `#. /configure` 来创建构建目标。创建目标后，你需要输入 `#make install`
    以完成安装过程。
- en: Due to it being older software, you might have to compile from the source code
    as the only alternative.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 由于它是较旧的软件，你可能不得不从源代码编译，作为唯一的替代方案。
- en: Creating a VCS repository
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建 VCS 仓库
- en: More often than not, a PHP programmer is expected to know some system concepts
    because it is often required to change settings for the PHP interpreter. The changes
    could be in the form of, say, changing the execution time or adding/removing modules,
    and so on. In order to start working in a team, you are going to get your hands
    dirty with system actions.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 更多时候，期望 PHP 程序员了解一些系统概念，因为经常需要更改 PHP 解释器的设置。这些更改可能是改变执行时间或添加/删除模块等形式。为了开始团队合作，你将不得不通过系统操作来亲自动手。
- en: Getting ready
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'You will have to create a new repository on the development server so that
    PhpStorm can act as a client and get connected. Here, it is important to note
    the difference between an SVN client and an SVN server—an SVN client can be any
    of these: a standalone client or an embedded client such as an IDE. The SVN server,
    on the other hand, is a single item. It is a continuously running process on a
    server of your choice.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要在开发服务器上创建一个新的仓库，这样PhpStorm才能作为客户端进行连接。在这里，重要的是要注意SVN客户端和SVN服务器之间的区别——SVN客户端可以是以下任何一种：独立客户端或IDE等嵌入式客户端。另一方面，SVN服务器是一个单一的项目。它是在您选择的服务器上持续运行的过程。
- en: How to do it...
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'You need to be careful while performing this activity as a single mistake can
    ruin your efforts. Perform the following steps:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在执行此活动时请务必小心，因为一个错误可能会毁掉您的努力。请按照以下步骤操作：
- en: 'There is a command `svnadmin` that you need to know. Using this command, you
    can create a new directory on the server that will contain the code base in it.
    Again, you should be careful when selecting a directory on the server as it will
    appear in your SVN URL for the rest part of your life. The command should be executed
    as:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您需要了解一个名为`svnadmin`的命令。使用此命令，您可以在服务器上创建一个新的目录，其中将包含代码库。再次提醒，在选择服务器上的目录时请务必小心，因为它将出现在您SVN
    URL的其余部分中。该命令应按以下方式执行：
- en: '[PRE0]'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Having created a new repository on the server, you need to make certain settings
    for the server. This is just a normal phenomenon because every server requires
    a configuration.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在服务器上创建了一个新的仓库后，您需要对服务器进行一些设置。这只是正常现象，因为每个服务器都需要配置。
- en: 'The SVN server configuration is located under `/path/to/your/repo/conf/` with
    the name `svnserve.conf`. Inside the file, you need to make three changes. You
    need to add these lines at the bottom of the file:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: SVN服务器配置位于`/path/to/your/repo/conf/`下，文件名为`svnserve.conf`。在文件内部，您需要做出三项更改。您需要在文件底部添加以下行：
- en: '[PRE1]'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: There has to be a password file to authorize a list of users who will be allowed
    to use the repository. The password file in this case will be named `passwd` (the
    default filename). The contents in the file will be a number of lines, each containing
    a username and the corresponding password in the form of `username = password`.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 必须有一个密码文件来授权允许使用仓库的用户列表。在这种情况下，密码文件将被命名为`passwd`（默认文件名）。文件中的内容将是多行，每行包含一个用户名和相应的密码，格式为`username
    = password`。
- en: Note
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Since these files are scanned by the server according to a particular algorithm,
    you don't have the freedom to leave deliberate spaces in the file—there will be
    error messages displayed in those cases.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这些文件是按照特定的算法由服务器扫描的，因此您不能在文件中留下故意空格——在这些情况下将显示错误消息。
- en: Having made the appropriate settings, you can now make the SVN service run so
    that an SVN client can access it.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行了适当的设置后，现在您可以启动SVN服务，以便SVN客户端可以访问它。
- en: You need to issue the command `svnserve -d` to do that.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要发出命令`svnserve -d`来完成此操作。
- en: Tip
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: It is always good practice to keep checking whether what you do is correct.
    To validate proper installation, you need to issue the command `svn ls svn://user@host/path/to/subversion/repo/`.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 总是检查您所做的是否正确是一个好习惯。为了验证正确的安装，您需要发出命令`svn ls svn://user@host/path/to/subversion/repo/`。
- en: 'The output will be as shown in the following screenshot:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将如以下截图所示：
- en: '![How to do it...](img/3878OT_06_01.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作...](img/3878OT_06_01.jpg)'
- en: How it works...
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The `svnadmin` command is used to perform admin tasks on the Subversion server.
    The `create` option creates a new folder on the server that acts as the repository
    for access from Subversion clients.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '`svnadmin`命令用于在Subversion服务器上执行管理任务。`create`选项在服务器上创建一个新的文件夹，该文件夹作为Subversion客户端的仓库。'
- en: The configuration file is created by default at the time of server installation.
    The contents that are added to the file are actually the configuration directives
    that control the behavior of the Subversion server. Thus, the settings mentioned
    prevent anonymous access and restrict the write operations to certain users whose
    access details are mentioned in a file.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器安装时默认创建配置文件。添加到文件中的内容实际上是控制Subversion服务器行为的配置指令。因此，所提到的设置防止了匿名访问并限制了某些用户的写操作，这些用户的访问详情在文件中提及。
- en: The command `svnserve` is again a command that needs to be run on the server
    side and which starts the instance of the server. The `-d` switch mentions that
    the server should be run as a daemon (system process). This also means that your
    server will continue running until you manually stop it or the entire system goes
    down.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 命令`svnserve`又是一个需要在服务器端运行的命令，用于启动服务器实例。`-d`开关表示服务器应以守护进程（系统进程）的方式运行。这也意味着您的服务器将继续运行，直到您手动停止它或整个系统崩溃。
- en: Tip
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Again, you can skip this section if you have opted for a third-party version
    control service provider.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 再次提醒，如果您选择了第三方版本控制服务提供商，您可以跳过这一部分。
- en: Connecting PhpStorm to a VCS repository
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将PhpStorm连接到VCS仓库
- en: The real utility of software is when you use it. So, having installed the version
    control system, you need to be prepared to use it.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 软件的实际效用在于您使用它。因此，在安装了版本控制系统后，您需要准备好使用它。
- en: Getting ready
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: With SVN being client-server software, having installed the server, you now
    need a client. Again, you will have difficulty searching for a good SVN client.
    Don't worry; the client has been factory-provided to you inside PhpStorm. The
    PhpStorm SVN client provides you with features that accelerate your development
    task by providing you detailed information about the changes made to the code.
    So, go ahead and connect PhpStorm to the Subversion repository you created.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 由于SVN是客户端-服务器软件，您已经安装了服务器，现在您需要一个客户端。再次提醒，您可能会很难找到好的SVN客户端。别担心；客户端已经由工厂内置在PhpStorm中。PhpStorm的SVN客户端通过提供有关代码更改的详细信息，为您提供了加速开发任务的功能。所以，继续将PhpStorm连接到您创建的Subversion仓库。
- en: How to do it...
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: In order to connect PhpStorm to the Subversion repository, you need to activate
    the Subversion view.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将PhpStorm连接到Subversion仓库，您需要激活Subversion视图。
- en: 'It is available at **View** | **Tool Windows** | **Svn Repositories**. Perform
    the following steps to activate the Subversion view:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 它位于**视图** | **工具窗口** | **Svn仓库**。按照以下步骤激活Subversion视图：
- en: Having activated the Subversion view, you now need to add the repository location
    to PhpStorm.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在激活了Subversion视图后，您现在需要将仓库位置添加到PhpStorm中。
- en: To do that, you need to use the **+** symbol in the top-left corner in the view
    you have opened, as shown in the following screenshot:![How to do it...](img/3878OT_06_02.jpg)
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要做到这一点，您需要在您打开的视图的左上角使用**+**符号，如下面的截图所示：![如何操作...](img/3878OT_06_02.jpg)
- en: Upon selecting the **Add** option, there is a question asked by PhpStorm about
    the location of the repository. You need to provide the full location of the repository.
    Once you provide the location, you will be able to see the repository in the same
    Subversion view in which you have pressed the **Add** button.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在选择**添加**选项时，PhpStorm会询问仓库的位置。您需要提供仓库的完整位置。一旦您提供了位置，您将能够在按下**添加**按钮的同一Subversion视图中看到仓库。
- en: Here, you should always keep in mind the correct protocol to use. This depends
    on the way you installed the Subversion system on the development machine.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，您应该始终牢记正确的协议。这取决于您在开发机上安装Subversion系统的方式。
- en: Note
  id: totrans-78
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you used the default installation by installing from the installer utility
    (`apt-get` or `aptitude`), you need to specify `svn://`. If you have configured
    SVN to be accessible via `SSH`, you need to specify `svn+ssh://`. If you have
    explicitly configured SVN to be used with the Apache web server, you need to specify
    `http://`. If you configured SVN with Apache over the secure protocol, you need
    to specify `https://`.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您通过安装程序实用程序（`apt-get`或`aptitude`）进行了默认安装，您需要指定`svn://`。如果您已配置SVN通过`SSH`访问，您需要指定`svn+ssh://`。如果您已明确配置SVN与Apache
    Web服务器一起使用，您需要指定`http://`。如果您使用Apache通过安全协议配置了SVN，您需要指定`https://`。
- en: Storing a PhpStorm project in a VCS repository
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将PhpStorm项目存储在VCS仓库中
- en: Here comes the actual start of the teamwork. Even if you and your other team
    members have connected to the repository, what advantage does it serve? What is
    the purpose solved by merely connecting to the version control repository? Correct.
    The actual thing is the code that you work on. It is the code that earns you your
    bread.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是团队合作的实际开始。即使您和其他团队成员已经连接到仓库，这又有什么优势呢？仅仅连接到版本控制仓库能解决什么问题？正确。真正重要的是您正在工作的代码。正是这些代码让您得以谋生。
- en: Getting ready
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: You should now store a project in the Subversion repository so that the other
    team members can work and add more features to your code. It is time to add a
    project to version control. It is not that you need to start a new project from
    scratch to add to the repository. Any project, any work that you have done and
    you wish to have the team work on now can be added to the repository. Since the
    most relevant project in the current context is the cooking project, you can try
    adding that.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你应该将项目存储在Subversion仓库中，以便其他团队成员可以工作并添加更多功能到你的代码。是时候将项目添加到版本控制了。并不是说你需要从头开始创建一个新的项目来添加到仓库。任何项目，任何你已完成并希望团队现在一起工作的项目都可以添加到仓库。鉴于当前环境中最相关的项目是烹饪项目，你可以尝试添加该项目。
- en: There you go.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样。
- en: How to do it...
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'In order to add a project to the repository, perform the following steps:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将项目添加到仓库，请执行以下步骤：
- en: You need to use the menu item provided at **VCS** | **Import into version control**
    | **Share project (subversion)**. PhpStorm will ask you a question, as shown in
    the following screenshot:![How to do it...](img/3878OT_06_03.jpg)
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你需要使用提供的菜单项**VCS** | **导入到版本控制** | **共享项目（Subversion）**。PhpStorm会询问你一个问题，如下面的截图所示：![如何操作...](img/3878OT_06_03.jpg)
- en: Select the correct hierarchy to define the share target—the correct location
    where your project will be saved.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择正确的层次结构来定义共享目标——你的项目将被保存的正确位置。
- en: If you wish to create the tags and branches in the code base, you need to select
    the checkbox for the same. It is good practice to provide comments to the commits
    that you make.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你希望在代码库中创建标签和分支，你需要选择相应的复选框。对提交的更改提供注释是良好的实践。
- en: 'The reason behind this is apparent when you sit down to create a release document.
    It also makes the change more understandable for the other team members. PhpStorm
    then asks you the format you want the working copy to be in. This is related to
    the version of the version control software. You just need to smile and select
    the latest version number and proceed, as shown in the following screenshot:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 当你坐下来创建发布文档时，背后的原因就显而易见了。这也使得变更对其他团队成员来说更容易理解。PhpStorm会询问你希望工作副本的格式。这与版本控制软件的版本有关。你只需微笑并选择最新的版本号，然后继续，如下面的截图所示：
- en: '![How to do it...](img/3878OT_06_04.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作...](img/3878OT_06_04.jpg)'
- en: Having done that, PhpStorm will now ask you to enter your credentials.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 完成这些操作后，PhpStorm现在会要求你输入你的凭据。
- en: 'You need to enter the same credentials that you saved in the configuration
    file (see the *Creating a VCS repository* recipe) or the credentials that your
    service provider gave you. You can ask PhpStorm to save the credentials for you,
    as shown in the following screenshot:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要输入配置文件中保存的相同凭据（参见*创建VCS仓库*配方）或服务提供商给你的凭据。你可以让PhpStorm为你保存凭据，如下面的截图所示：
- en: '![How to do it...](img/3878OT_06_05.jpg)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作...](img/3878OT_06_05.jpg)'
- en: How it works...
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Here it is worth understanding what is going on behind the curtains. When you
    do any Subversion related task in PhpStorm, there is an inbuilt SVN client that
    executes the commands for you. Thus, when you add a project to version control,
    the code is given a version number. This makes the version system remember the
    state of the code base. In other words, when you add the code base to version
    control, you add a checkpoint that you can revisit at any point in future for
    the time the code base is under the same version control system.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 这里值得理解幕后的情况。当你使用PhpStorm中的任何Subversion相关任务时，有一个内置的SVN客户端会为你执行命令。因此，当你将项目添加到版本控制时，代码会被赋予一个版本号。这使得版本控制系统记住代码库的状态。换句话说，当你将代码库添加到版本控制时，你添加了一个检查点，你可以在未来的任何时间点重新访问它，前提是代码库处于相同的版本控制系统下。
- en: Interesting phenomenon, isn't it?
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个有趣的现象，不是吗？
- en: There's more...
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'If you have installed the version control software yourself and if you did
    not make the setting to store the password in encrypted text, PhpStorm will provide
    you a warning about it, as shown in the following screenshot:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你自己安装了版本控制软件，并且你没有设置将密码以加密文本的形式存储，PhpStorm会提供一个警告，如下面的截图所示：
- en: '![There''s more...](img/3878OT_06_06.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![还有更多...](img/3878OT_06_06.jpg)'
- en: Committing files to the VCS repository
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将文件提交到版本控制系统
- en: Let's get back to a use case. By now, the memories of the `Dish` class must
    be under a thick layer of dust since it has not been used for a while now. Go
    ahead, mate. Remove the dust, shred the laziness, and set off looking at things
    from a different perspective.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回到一个用例。到目前为止，`Dish`类的记忆可能已经被厚厚的灰尘覆盖，因为它已经有一段时间没有使用了。向前走，伙计。擦去灰尘，撕掉懒惰，从不同的角度看待事物。
- en: Getting ready
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: A small amount of strain on your brain (and obviously reading documentation)
    will make you remember that you created the `Dish` class in a hurry. Now that
    you have matured enough to use PhpStorm as an IDE, you need to prove your might
    in programming as well. You need to make the `Dish` class more functional.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的大脑上施加一点压力（并且显然是阅读文档）会让你记住你匆忙中创建了`Dish`类。现在，你已经足够成熟，可以使用PhpStorm作为IDE，你需要证明你在编程方面的实力。你需要使`Dish`类更加功能化。
- en: How to do it...
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'You can begin by peeping into the only method inside the `Dish` class. Once
    you do, you will clearly see that there is a `FIXME` tag. As stated in the `FIXME`
    tag, you should check for a valid ingredient name before allowing it to be added
    to the dish. This will prevent any unwanted ingredients from getting added to
    your dish and thus spoiling it. You need to specify two changes:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从查看`Dish`类中的唯一方法开始。一旦你这样做，你将清楚地看到有一个`FIXME`标签。正如`FIXME`标签所述，在允许将其添加到菜肴之前，你应该检查有效的配料名称。这将防止任何不想要的配料被添加到你的菜肴中，从而破坏它。你需要指定两个更改：
- en: You need to make the parameter default to a value in the method signature
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你需要将参数默认值设置在方法签名中的某个值。
- en: You need to check if the name is valid, that is, non-empty and not containing
    invalid elements
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你需要检查名称是否有效，即非空且不包含无效元素。
- en: 'Thus the change you will make in the `Dish` class will be something like the
    following screenshot:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，你将在`Dish`类中做出的更改将类似于以下截图：
- en: '![How to do it...](img/3878OT_06_07.jpg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](img/3878OT_06_07.jpg)'
- en: How it works...
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: One of the main utilities of using an IDE such as PhpStorm is that the objects
    are shown in such a way that you get more information out of them. When you make
    the changes, PhpStorm starts indicating to you the changes using colors. If you
    add a line, it is shown in green, and when you delete a line, it is indicated
    by a gray triangle pointing to your right-hand side. When you make changes to
    a line of code, it is shown in blue. Besides this, when you commit your code,
    the version control number attaches another piece of information with it, which
    is quite important in itself. The information contains the user who committed
    the date, the time of the commit, and the revision number. The revision number
    denotes information as to how many times that particular file has been changed.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 使用像PhpStorm这样的IDE的一个主要好处是，对象以这种方式显示，你可以从中获得更多信息。当你进行更改时，PhpStorm开始使用颜色向你指示更改。如果你添加一行，它将以绿色显示，当你删除一行时，它将以一个指向你右侧的灰色三角形表示。当你更改代码中的一行时，它将以蓝色显示。除此之外，当你提交代码时，版本控制编号会附加另一条信息，这条信息本身也非常重要。该信息包含提交代码的用户、提交日期、提交时间和修订号。修订号表示特定文件被更改的次数。
- en: There's more...
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: PhpStorm, being a careful system, provides you with a number of options to choose
    from. You can tell PhpStorm to automatically update the code/directory after you
    commit if you enable **Auto-update after commit**.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: PhpStorm作为一个谨慎的系统，为你提供了许多可供选择的功能。如果你启用**提交后自动更新代码/目录**，你可以告诉PhpStorm在提交后自动更新代码/目录。
- en: If you want to keep the files locked during the commit process, you can enable
    this checkbox next to **Keep files locked**.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想在提交过程中保持文件锁定，可以在**保持文件锁定**旁边的复选框中启用此功能。
- en: There are certain programming-related tasks before the commit action.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在提交操作之前，有一些与编程相关的任务。
- en: You can reformat the code you are about to commit by enabling the **Reformat
    Code** option.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过启用**重新格式化代码**选项来重新格式化你即将提交的代码。
- en: You can remove unused imports/includes/requires from the code about to be committed
    by selecting the **Optimize Imports** option.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过选择**优化导入**选项从即将提交的代码中删除未使用的导入/包含/要求。
- en: You can perform an analysis of the code you are about to commit by selecting
    the option **Perform Code Analysis**.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过选择**执行代码分析**选项来分析你即将提交的代码。
- en: PhpStorm can warn you if you happen to push a TODO in your code to version control
    by enabling the **Check TODO** option. You can configure which TODO you want to
    view by clicking on **Configure**. Thus, before committing, PhpStorm will show
    you the TODOs you have created in the file/project you are about to commit.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不小心将代码中的TODO推送到版本控制，启用**检查TODO**选项，PhpStorm可以警告你。你可以通过点击**配置**来配置你想要查看的TODO。因此，在提交之前，PhpStorm将显示你即将提交的文件/项目中创建的TODO。
- en: You can even upload the committed files to an FTP server that you might have
    configured. Thus, PhpStorm can also deploy the code for you!
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 你甚至可以将提交的文件上传到你可能已经配置的FTP服务器。因此，PhpStorm也可以为你部署代码！
- en: PhpStorm keeps informing you about all the files you have changed. The names
    of the files that have been changed locally since the last commit are shown in
    blue. The files that have not been changed are shown in black by default. If you
    are making changes to a file and another team member happens to make changes in
    the same file, there will be a text conflict, and such files are shown in red.
    However, such conflicts occur mostly during the update process.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: PhpStorm会持续通知你所有你更改的文件。自上次提交以来在本地更改的文件名称以蓝色显示。默认情况下，未更改的文件以黑色显示。如果你正在更改一个文件，而另一个团队成员恰好也在同一文件中进行了更改，将出现文本冲突，此类文件以红色显示。然而，此类冲突主要发生在更新过程中。
- en: Note
  id: totrans-123
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can change the color scheme to one of your choice. For that, you need to
    go to **File** | **Settings** | **Editor** | **Colors & Fonts** | **Diff**.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以更改配色方案为你喜欢的样式。为此，你需要转到**文件** | **设置** | **编辑器** | **颜色与字体** | **差异**。
- en: Now that your changes are done, you need to commit the code so that it is made
    available to other team members. You need to access the right-click context menu,
    select **Subversion** | **Commit**. There is a dialog box that opens up and provides
    you with a view of what you are going to do. Once you are convinced that the changes
    are OK, you can proceed to commit the file. The file will again become black,
    indicating that it is in sync with the version control system.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你的更改已完成，你需要提交代码以便其他团队成员可以使用。你需要访问右键点击的上下文菜单，选择**Subversion** | **Commit**。会弹出一个对话框，显示你将要执行的操作。一旦你确认更改没有问题，你可以继续提交文件。文件将再次变为黑色，表示它与版本控制系统同步。
- en: Tip
  id: totrans-126
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Avoid problems**'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '**避免问题**'
- en: It is not that you can commit and commit without problems. If another team member
    has committed in the same section of code in which you have made changes, the
    version control system prevents inconsistency in the code by providing you with
    a warning and disallowing you from committing the code. It throws a message that
    the file you are working is out of date. To avoid this problem from occurring,
    you always need to work on the most recent code base. Thus, always update before
    you commit.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 并非你可以无问题地提交和提交。如果另一个团队成员在你更改的同一代码段中提交了代码，版本控制系统将通过提供警告并禁止你提交代码来防止代码的不一致性。它会显示一个消息，指出你正在工作的文件已过时。为了避免这个问题发生，你始终需要基于最新的代码库进行工作。因此，在提交之前，始终要更新。
- en: Updating code from a VCS repository
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从VCS仓库更新代码
- en: You have always thought about your team. You have always thought that you will
    work in such a way that you are the strongest link in your team.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 你总是考虑你的团队。你总是认为你会以这种方式工作，成为你团队中最强的纽带。
- en: Getting ready
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: You will act as a filter to clean the poor code written by a fellow team member.
    You will be the peer reviewer of the code that your peers write. You will add
    documentation to the spaghetti code that someone in the team is so used to writing.
    All said and done, how will you achieve these targets? You will have to take updates
    from the version control system every time you plan to start off being the James
    Bond in your team.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 你将充当过滤器，清理团队成员编写的糟糕代码。你将成为你同伴编写的代码的同行评审员。你将为团队中某些人习惯编写的乱糟糟的代码添加文档。所有这些说完，你将如何实现这些目标？每次你计划开始成为团队中的詹姆斯·邦德时，你都必须从版本控制系统获取更新。
- en: How to do it...
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Unfortunately, in order to receive updates from the version control system,
    there is no automatic push notification system provided with PhpStorm. However,
    you can perform the following steps:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，为了从版本控制系统中接收更新，PhpStorm没有提供自动推送通知系统。然而，你可以执行以下步骤：
- en: You have to manually check for updates. But do not worry. You just need to remember
    a few navigation links, and you will be able to update a particular code, a particular
    folder, or the entire project.
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您必须手动检查更新。但请放心，您只需记住几个导航链接，就能更新特定的代码、特定的文件夹或整个项目。
- en: The update link is available at **VCS** | **Subversion** | **Update file**.
    If you want to update the current file you are working on, use the option shown
    in the following screenshot:![How to do it...](img/3878OT_06_08.jpg)
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新链接可在**版本控制系统** | **Subversion** | **更新文件**中找到。如果您想更新当前正在工作的文件，请使用以下截图所示的选项：![如何操作...](img/3878OT_06_08.jpg)
- en: Here, there are certain optional choices for you to make.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，您有一些可选的选项可以做出选择。
- en: 'There can be a number of branches of development versions of the project you
    are working on. Suppose the management has made a provision for separate branches
    or versions of the project—probably one would be a new theme so that there can
    be testing, or there would be a separate branch to optimize the code, or any such
    permutation that is possible. Perform the following steps:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 您正在工作的项目可能有许多开发版本的分支。假设管理层已经为项目的单独分支或版本做出了规定——可能其中一个分支是一个新主题，以便进行测试，或者有一个单独的分支来优化代码，或者任何可能的排列组合。请执行以下步骤：
- en: You can update to a specific branch of version control by selecting the **Update/Switch
    to a specific URL** option.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以通过选择**更新/切换到特定URL**选项来更新到版本控制的特定分支。
- en: When you select this option, you can specify a branch. You can specify the URL
    as well.
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当您选择此选项时，您可以指定一个分支。您也可以指定URL。
- en: This text box is populated by default with the Subversion path of the current
    file.
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此文本框默认填充了当前文件的Subversion路径。
- en: 'If you want to go back in time knowing that an algorithm used to exist in the
    past but has been removed now, PhpStorm provides you with an option for that as
    well. Perform the following steps to achieve that end:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想回到过去，知道曾经存在但现在已被删除的算法，PhpStorm也为您提供了相应的选项。为了达到这个目的，请执行以下步骤：
- en: You can select the **Update/switch to specific revision** checkbox.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以选择**更新/切换到特定修订版本**复选框。
- en: There is a **Force update** option available to you that will force an update
    of the selected file.
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您有一个**强制更新**选项可供选择，该选项将强制更新所选文件。
- en: When you enable the **Update administrative information only in changed subtrees**
    option, the PhpStorm SVN client will only update administrative information, such
    as the version number, previous revision, and file checksums-related versioning
    information for those files/directories that have been affected by the update
    operation. Enabling this option might improve the performance of the update operation
    because there are fewer files to be updated, following the simple rule to do less
    in less time. Please note that under certain circumstances, you might have to
    perform a *normal* update.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 当您启用**仅在更改的子树中更新管理信息**选项时，PhpStorm SVN客户端将只更新受更新操作影响的管理信息，例如版本号、前一个修订版本和文件校验和相关的版本信息。启用此选项可能会提高更新操作的性能，因为要更新的文件更少，遵循在更短的时间内做更少的简单规则。请注意，在特定情况下，您可能必须执行一个**正常**的更新。
- en: Note
  id: totrans-146
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you enable the **Ignore Externals** checkbox, the update will ignore all
    the external definitions from the update in the current file.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您启用**忽略外部**复选框，更新将忽略当前文件中更新的所有外部定义。
- en: 'Similarly, you can update a directory that you select. In order to do that,
    perform the following steps:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，您可以更新您选择的目录。为了做到这一点，请执行以下步骤：
- en: You need to select the directory you wish to update, access the right-click
    context menu, and select **Subversion** | **Update**.
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您需要选择要更新的目录，访问右键单击上下文菜单，并选择**Subversion** | **更新**。
- en: The same options will be available this time as well, but with the context changed
    to directory from file. Thus, when you force update, the *unversioned* changes
    inside the directory will be automatically added to version control, and the entire
    directory will be updated to match the repository copy.
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这次将提供相同的选项，但上下文已从文件更改为目录。因此，当您强制更新时，目录内的**未版本化**更改将自动添加到版本控制中，整个目录将更新以匹配存储库副本。
- en: Tip
  id: totrans-151
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Since a project is also a directory, you can update an entire project as well.
    The method is exactly the same as that of updating a directory.
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 由于项目也是一个目录，您也可以更新整个项目。方法与更新目录的方法完全相同。
- en: How it works...
  id: totrans-153
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The update action is quite simple to understand. Subversion (and other version
    control systems) maintains a working copy of the project. This working copy is
    created using a number of criteria, such as the date of modification, text that
    was changed, and version number. When you update the file/directory, all this
    and other necessary information is added to the working copy on your machine.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 更新操作非常简单易懂。Subversion（以及其他版本控制系统）维护项目的副本。这个工作副本是根据一系列标准创建的，例如修改日期、更改的文本和版本号。当你更新文件/目录时，所有这些以及其他必要的信息都会添加到你的机器上的工作副本中。
- en: There's more...
  id: totrans-155
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'If you wish to update your local copy with the copy under version control from
    the repository, there can be two possibilities, as follows:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你希望将本地副本与存储库中的版本控制副本更新，有两种可能性，如下所示：
- en: You are attempting to update a file/directory in which you have not made any
    changes. In this scenario, the update will happen normally.
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你正在尝试更新一个你没有做任何更改的文件/目录。在这种情况下，更新将正常进行。
- en: In the other possibility, if you are performing a normal update, there will
    be conflicts.
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在另一种可能性中，如果你正在进行常规更新，将会有冲突。
- en: 'The version control system will tell you that it is getting confused as to
    which copy to keep under version control: yours or theirs? Select **Accept Theirs**,
    as in, the other team members, as shown in the following screenshot:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 版本控制系统会告诉你它正在困惑，不知道应该保留哪个副本进行版本控制：是你的还是他们的？选择**接受他们的**，即其他团队成员，如以下截图所示：
- en: '![There''s more...](img/3878OT_06_09.jpg)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![还有更多...](img/3878OT_06_09.jpg)'
- en: 'You need to calm down the version control system by merging the files and resolving
    conflicts. The conflicts are shown by PhpStorm in bright colors. Obviously, you
    can modify the colors as well. The red color is the conflict line, the blue color
    is the changed line, and the green color is the added line. You need to use the
    guiding arrows to send the content between the files, as shown in the following
    screenshot:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要通过合并文件和解决冲突来平息版本控制系统。冲突在PhpStorm中以鲜艳的颜色显示。显然，你也可以修改颜色。红色是冲突行，蓝色是更改行，绿色是新增行。你需要使用引导箭头来在文件之间发送内容，如以下截图所示：
- en: '![There''s more...](img/3878OT_06_10.jpg)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![还有更多...](img/3878OT_06_10.jpg)'
- en: Synchronizing your code with the VCS repository
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将你的代码与VCS存储库同步
- en: 'You cannot control where you were born. And you also cannot control which profession
    you choose: you just have to keep yourself up to date with the challenges the
    job presents to you.'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 你无法控制你出生的地方。你也不能控制你选择的职业：你只需要保持自己与工作带来的挑战同步。
- en: Getting ready
  id: totrans-165
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: One of the biggest challenges programmers face is to match up with the team.
    Due to a phobia of something unknown happening, programmers often end up in an
    unsynchronized version of the project on their development systems. They tend
    to follow Sir Isaac Newton's very first law of motion. The state of uniform motion
    is already described. The external force is the change in the business requirement
    and thus a new task assignment.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 程序员面临的最大挑战之一是与团队保持同步。由于对未知发生事情的恐惧，程序员往往会在他们的开发系统中遇到项目版本不匹配的情况。他们倾向于遵循艾萨克·牛顿的第一运动定律。匀速运动的状态已经描述。外部力量是业务需求的变化以及新的任务分配。
- en: A short and simple solution to this problem is to always synchronize your code
    base with version control.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 解决这个问题的简单方法是始终将你的代码库与版本控制同步。
- en: How to do it...
  id: totrans-168
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'Code synchronization needs more care than any other action. The reason is obvious—you
    might end up accepting the incorrect version of the code and thus ending up asking
    for more time for development. You can synchronize the code in a number of ways,
    and the following steps help you with one of the ways:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 代码同步需要比其他任何操作都更加小心。原因很明显——你可能会接受错误的代码版本，从而需要更多的时间进行开发。你可以通过多种方式同步代码，以下步骤帮助你了解其中一种方法：
- en: You need to know the version control history as to which change was made.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你需要了解版本控制历史，以确定哪些更改被做出。
- en: You can do that when you select the project, access the right-click context
    menu, and select the **Subversion** | **Show History** option.
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你选择项目，访问右键单击上下文菜单，并选择**Subversion** | **显示历史**选项时，你可以这样做。
- en: Select a version number that you want to synchronize your code base with. Access
    the right-click context menu and select the "**Show all affected files**" option.![How
    to do it...](img/3878OT_06_11.jpg)
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择你想要与代码库同步的版本号。访问右键点击上下文菜单并选择**显示所有受影响文件**选项。![如何操作...](img/3878OT_06_11.jpg)
- en: You now need to select the **Show diff with local** option, and PhpStorm will
    show you the list of files in a hierarchical way, as shown in the preceding screenshot.
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你现在需要选择**显示与本地差异**选项，PhpStorm将按层次结构方式显示文件列表，如图所示的前一个屏幕截图。
- en: 'You need to select this button to see the list of files changed since your
    selected revision, as shown in the following screenshot:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要选择此按钮以查看自所选修订以来更改的文件列表，如图所示的下一个屏幕截图：
- en: '![How to do it...](img/3878OT_06_12.jpg)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作...](img/3878OT_06_12.jpg)'
- en: You can now proceed to view the individual differences in the file. You can
    select the changes you want to accept and skip the changes you don't want.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在可以继续查看文件中的个别差异。你可以选择你想要接受的更改，并跳过你不想接受的更改。
- en: This can be a useful option if you know the effect well in advance, or else
    don't opt for this facility—it can prove to be annoying if the change list is
    large.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你提前很好地了解效果，这可以是一个有用的选项；否则，不要选择这个功能——如果变更列表很大，可能会很烦人。
- en: How it works...
  id: totrans-178
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'When you synchronize, you are just performing an update operation—this time,
    manually and selectively. Thus, a synchronization process is copying the changes
    to your local working copy. The change can be anything: a new line of code written,
    removed, or changed.'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 当你同步时，你只是在执行一个更新操作——这次是手动和有选择性的。因此，同步过程是将更改复制到你的本地工作副本。更改可以是任何东西：新写的一行代码、删除或更改。
- en: Examining the VCS repository
  id: totrans-180
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查版本控制系统（VCS）仓库
- en: '*The more you know, the more you know*'
  id: totrans-181
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*知道的越多，知道的越多*'
- en: More often than not, there are scenarios in which you need to see what is going
    on inside to be able to make decisions.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 更常见的情况是，你需要看到内部的情况才能做出决定。
- en: Getting ready
  id: totrans-183
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Having extra information always helps you to turn that last stone, which often
    proves decisive in the fate of a project. Thus, you might want to know what the
    structure of the code base is, what files are inside a particular directory, or
    even what directories are inside the project as a whole. Such wish-lists are endless.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有额外信息总是帮助你转动最后一颗棋子，这通常在项目的命运中起到决定性作用。因此，你可能想了解代码库的结构，特定目录中的文件，甚至整个项目中的目录。这样的愿望清单是无穷无尽的。
- en: Better work than just plan.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 做比仅仅计划更好。
- en: How to do it...
  id: totrans-186
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'When you are determined enough that you will browse the repository, you can
    resort to PhpStorm. To start viewing what is going on inside, perform the following
    steps:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 当你下定决心要浏览仓库时，你可以求助于PhpStorm。要开始查看内部的情况，请执行以下步骤：
- en: You need to select **VCS** | **Browse VCS Repository** | **Browse Subversion
    Repository**. Once you do that, you will be able to see all of the repositories
    you added while you were working with PhpStorm irrespective of the project, as
    shown in the following screenshot:![How to do it...](img/3878OT_06_13.jpg)
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你需要选择**版本控制** | **浏览VCS仓库** | **浏览Subversion仓库**。一旦你这样做，你将能够看到你在使用PhpStorm时添加的所有仓库，无论项目如何，如图所示的下一个屏幕截图：![如何操作...](img/3878OT_06_13.jpg)
- en: You can select the desired repository location from the list of available locations.
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你可以从可用位置列表中选择所需的仓库位置。
- en: Once you select a location, you can browse the repository by double-clicking
    on the selected entry. Besides this, you can do a lot more. There are a number
    of options available to you once you right-click and access the context menu.
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你选择了一个位置，你可以通过双击选中的条目来浏览仓库。除此之外，你还可以做更多的事情。一旦你右键点击并访问上下文菜单，就会有多个选项可供你选择。
- en: You can create a new repository location if you select the **New** | **Repository**
    **Location**.
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你选择**新建** | **仓库位置**，你可以创建一个新的仓库位置。
- en: You can create a new folder in the selected repository if you select the **New**
    | **Remote Folder** option. You need to specify the name that the folder will
    be known by and a message to be displayed for this addition to the repository.
    Remember teamwork? Here's how **New** | **Remote Folder** looks:![How to do it...](img/3878OT_06_14.jpg)
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你选择**新建** | **远程文件夹**选项，你可以在选定的仓库中创建一个新文件夹。你需要指定文件夹将被知晓的名称以及要显示给此添加到仓库的消息。记得团队合作吗？这就是**新建**
    | **远程文件夹**的外观：![如何操作...](img/3878OT_06_14.jpg)
- en: You can view the revision history for the selected repository location if you
    select the **Show History** option. Can you recall which other way you can view
    the Subversion history?
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你选择**Show History**选项，你可以查看所选仓库位置的修订历史。你能回忆起还有其他查看Subversion历史的方法吗？
- en: If you want to check out the project on your local machine, PhpStorm allows
    you to do that by providing you with an option with the name **Checkout**. This
    is similar to a hotel checkout, where you leave the hotel, taking all the luggage
    with you. Here, the analogy to a hotel is the Subversion server, and the luggage
    is the actual code. However, it is not a 100 percent analogy as you don't tend
    to check out someone else's luggage when you check out of a hotel room. Those
    are stunts performed by experienced professionals (pun intended). Don't try this
    at home (no pun intended).
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想在本地机器上检出项目，PhpStorm允许你通过提供一个名为**Checkout**的选项来完成。这类似于酒店结账，你离开酒店时带着所有的行李。在这里，将Subversion服务器比作酒店，将实际代码比作行李。然而，这并不是一个100%的类比，因为你通常不会在酒店房间结账时检查别人的行李。那些是经验丰富的专业人士（有意为之）表演的特技。不要在家里尝试（无意为之）。
- en: When you are browsing, you might need to find out what is different in another
    code base version in a branched or tagged version; you have the option to do that
    using the **Compare with** option. Once selected, PhpStorm provides you with an
    information box that you can use to view information the way you like. You can
    select the version you want to compare with. It is important to note here that
    the order of comparison matters because you also have the option to do a reverse
    comparison. You can do that by enabling the **Reverse diff** option.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在浏览时，可能需要找出在分支或标记版本中另一个代码库版本的不同之处；你可以使用**Compare with**选项来完成这个操作。一旦选择，PhpStorm会提供一个信息框，你可以用它以你喜欢的任何方式查看信息。你可以选择你想要比较的版本。在此需要注意的是，比较的顺序很重要，因为你也有进行反向比较的选项。你可以通过启用**Reverse
    diff**选项来实现这一点。
- en: PhpStorm provides you with two options to choose from while obtaining the difference
    between files. You can provide a visual treat to your eyes if you select the **Graphical
    Compare** option, or else you can save the difference to a text file with the
    default name `diff.txt` in the current directory that contains your project.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 在获取文件差异时，PhpStorm为你提供了两种选择。如果你选择**Graphical Compare**选项，你可以为你的眼睛提供视觉享受，或者你也可以将差异保存到当前目录中名为`diff.txt`的文本文件中。
- en: You can search across the currently selected repository as well.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以在当前选定的仓库中进行搜索。
- en: If you wish to search for the changes made by a particular author, you need
    to enable the **Author** option and provide the name of a valid author.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你希望搜索特定作者所做的更改，你需要启用**Author**选项并提供有效作者的姓名。
- en: If you wish to search for changes made after a certain date, you can enable
    the **After** option and set the required date from a date-picker window available
    on clicking the button next to this option.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你希望搜索在某个特定日期之后所做的更改，你可以启用**After**选项，并从点击此选项旁边的日期选择器窗口中设置所需的日期。
- en: The same is the case when you want to search for changes made until a certain
    date. You need to enable the **Before** option. The date-picker window is available
    in the same way as in the previous case.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 当你想搜索到某个特定日期之前所做的更改时，你需要启用**Before**选项。日期选择器窗口的显示方式与之前的情况相同。
- en: Tip
  id: totrans-201
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: If you remember the version number, you can browse the changes by revision number.
    You can select the changes with revision number greater than the **From** option
    and less than the **To** option.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你记得版本号，你可以通过修订号浏览更改。你可以选择修订号大于**From**选项且小于**To**选项的更改。
- en: How it works...
  id: totrans-203
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: When you are done with specifying the search criteria, PhpStorm presents you
    with the list of changes that match your selected criteria.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 当你完成指定搜索条件后，PhpStorm会向你展示符合你选择标准的变化列表。
- en: PhpStorm says that you can do a lot more with this information and makes a provision
    for you to modify the search criteria, apply groupings on the basis of the date
    of change or the author of the change, and perform a regular expression-based
    search in this result. To see what options are available, you just need to right-click
    and access the context menu on the selected item. You will be provided with a
    number of self-explanatory options, such as **Refresh** to reload the search result;
    **Filter** to specify the search criteria again; **Show Details** to see the revision
    details quickly; **Create patch** to create a patch file of the differences in
    a selected revision; **Revert changes** to undo the changes made in the selected
    revision and to roll back the file/directory to the immediately previous state;
    and **Edit Revision comment** to modify the comment passed on to the version control
    system when making the selected revision.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: PhpStorm 表示你可以利用这些信息做更多的事情，并为你提供了修改搜索条件、基于更改日期或更改作者进行分组，以及在此结果中执行基于正则表达式的搜索的选项。要查看可用的选项，你只需右键单击并访问所选项目的上下文菜单。你将获得一系列一目了然的选择，例如**刷新**以重新加载搜索结果；**过滤**以再次指定搜索条件；**显示详细信息**以快速查看修订详情；**创建补丁**以创建所选修订的差异补丁文件；**撤销更改**以撤销所选修订中做出的更改，并将文件/目录回滚到立即之前的状态；以及**编辑修订注释**以修改在创建所选修订时传递给版本控制系统的注释。
- en: Art is long and life is short, isn't it?
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 艺术是长久的，而生命是短暂的，对吧？
- en: Checking projects out of a VCS repository
  id: totrans-207
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从 VCS 仓库检出项目
- en: 'The phenomenon of checking out is quite interesting. You (usually) check out
    your luggage from a hotel room; you (most of the times) tell your friend: "Dude,
    check out my new Phablet"; you (are hesitant to) check out code from version control.
    What exactly does checking out mean? This seems more like a buzz word... checkout,
    checkout, and checkout!'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 检出的现象非常有趣。你（通常）从酒店房间中检出你的行李；你（大多数时候）告诉你的朋友：“伙计，看看我的新大屏手机”；你（犹豫着）从版本控制中检出代码。检出究竟意味着什么？这似乎更像是一个时髦词...检出，检出，再检出！
- en: Getting ready
  id: totrans-209
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Context is what you need to understand. The meaning of a word changes with a
    change in context. In the current context, you need to do what you are hesitant
    to do. Thus, checking out code is a phenomenon provided for version control systems,
    in which you take out the latest versions of the code base and download it onto
    your development computer. This download is not merely a simple download, it provides
    you with the latest version of code available under version control and makes
    you aware of the list of changes that have been made to the code base up until
    the current date. Thus, when you check out a piece of code, you become aware of
    the history of the code as well.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 理解上下文是你需要明白的。一个词的意义会随着上下文的变化而变化。在当前上下文中，你需要做你犹豫不决的事情。因此，检出代码是版本控制系统提供的一种现象，其中你取出代码库的最新版本并将其下载到你的开发计算机上。这种下载不仅仅是简单的下载，它为你提供了在版本控制下可用的最新代码版本，并使你了解截至当前日期对代码库所做的更改列表。因此，当你检出一段代码时，你也会了解到代码的历史。
- en: This time, before you get the answer in the *How to do it...* section, you need
    to know why you should do it. The team is what you were talking about when you
    started thinking version control. So, if a team has a new member, the only way
    to let the new member start working on the existing project is checkout. If your
    development machine has changed and you wish to resume working from where you
    left off, you can even use checkout for this.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 在你得到*如何做到这一点...*部分中的答案之前，你需要知道为什么你应该这样做。团队是你开始思考版本控制时谈论的内容。因此，如果团队有新成员加入，让新成员开始处理现有项目的唯一方法就是检出。如果你的开发机器已经改变，并且你希望从你离开的地方继续工作，你甚至可以使用检出。
- en: How to do it...
  id: totrans-212
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'To check out code from version control is everyone''s cup of tea. Perform the
    following steps:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 从版本控制中检出代码是每个人的最爱。请执行以下步骤：
- en: You can do it extremely easily by visiting the menu item **VCS** | **Checkout**
    from **Version Control** | **Subversion**.
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以通过访问**版本控制** | **检出**的**VCS** | **Subversion**菜单项来极其容易地做到这一点。
- en: Once you select that, you will be provided with a new window with the list of
    Subversion repositories you connected in PhpStorm irrespective of the project,
    as shown in the following screenshot:![How to do it...](img/3878OT_06_15.jpg)
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你选择了这个选项，你将看到一个新窗口，其中列出了你在 PhpStorm 中连接的 Subversion 仓库列表，无论项目如何，如下截图所示：![如何做到这一点...](img/3878OT_06_15.jpg)
- en: 'Having selected the appropriate version, on proceeding, PhpStorm asks you where
    it should keep the checked out code base. You need to specify that, as shown in
    the following screenshot:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 在选择了适当的版本后，继续操作时，PhpStorm会询问它应该将检出的代码库保存在哪里。你需要指定这一点，如下面的截图所示：
- en: '![How to do it...](img/3878OT_06_16.jpg)'
  id: totrans-217
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作...](img/3878OT_06_16.jpg)'
- en: 'When you set the target location, PhpStorm remains inquisitive. It will ask
    you general checkout options, such as the depth to which you want to check out
    the code, whether you want to check out the latest code or only until a revision,
    and whether you want to select the externals definition, as shown in the following
    screenshot:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 当你设置目标位置时，PhpStorm会保持好奇。它会询问你一般的检出选项，例如你想要检出代码的深度，你是否想要检出最新代码或只检出至某个修订，以及你是否想要选择外部定义，如下面的截图所示：
- en: '![How to do it...](img/3878OT_06_17.jpg)'
  id: totrans-219
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作...](img/3878OT_06_17.jpg)'
- en: How it works...
  id: totrans-220
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Having set all the options, you can now easily sit back and enjoy the view.
    PhpStorm will check out the code and keep it in an organized way on your local
    (development) machine.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 在设置完所有选项后，你现在可以轻松地坐下来享受美景。PhpStorm会检查代码，并在你的本地（开发）机器上以有组织的方式保存。
- en: Creating code patches
  id: totrans-222
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建代码补丁
- en: 'It is often stated in three simple statements:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 这通常用三个简单的陈述来说明：
- en: Do it
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 做它
- en: Do it right
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 做对它
- en: Do it right now
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 立即行动
- en: 'The statement is simple, but the intent is not. Every manager wants the task
    to be done, and it is you, the programmer''s, headache to do it somehow. You often
    end up writing erroneous code. The misery does not end here; you happen to push
    it to Subversion at the end of the day to tell your manager what you worked on
    during the day. In this rush, you happened to push some bugs to version control.
    Thus, any fellow member working in another time zone will end up screwing his
    working copy by taking updates from version control. Now, there will be two types
    of resource wastage:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 语句很简单，但意图并非如此。每个经理都希望任务能被完成，而作为程序员的你，如何完成这个任务成了你的头疼问题。你常常会写出错误的代码。不幸的是，痛苦并没有结束；你会在一天结束时偶然将错误代码推送到Subversion，告诉你的经理你一天的工作内容。在这场匆忙中，你意外地将一些错误推送到版本控制。现在，将有两种类型的资源浪费：
- en: That member (and any other member who's done the same) will spend time in locating
    the bug—a waste of person hours
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该成员（以及任何其他做过同样事情的成员）将花费时间来定位错误——浪费了人力
- en: Having located the bug, you will have to undo the changes and make a few other
    changes—a waste of the previous person's day (when you pushed the buggy code)
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 找到错误后，你必须撤销更改并做一些其他更改——浪费了前一个人的时间（当你推送有错误的代码时）
- en: Not only this, it will be an abuse of the version control system as when the
    bug entered version control, the very purpose of using version control was defeated—multiple
    people will be doing the same task—again, reinventing the wheel.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 不仅如此，这还会滥用版本控制系统，因为当错误进入版本控制时，使用版本控制的初衷就被抵消了——多个人会做相同的工作——再次，重蹈覆辙。
- en: Getting ready
  id: totrans-231
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: So, being the cause of this wastage, you must think of a solution to this problem.
    The solution will be to use an SVN patch. A patch is a file that is created when
    you create it. Obviously! SO, a patch, is a file that contains the differential
    text only and the details about the file where the changes were made. Thus, a
    patch can be applied to files and can be undone later. So, the code changes are
    visible only to the person to whom you have given this patch file. The advantage?
    The other person applying the patch can review the changes that you intend to
    make, and if some bugs are visible, the patch can be removed from the code base,
    and you can be informed that you need to do more work to create bug-free code.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，作为这种浪费的源头，你必须考虑一个解决方案来解决这个问题。解决方案将是使用SVN补丁。补丁是在你创建它时生成的文件。显然！所以，补丁是一个只包含差异文本和关于更改所做的文件细节的文件。因此，补丁可以应用于文件，并且可以在以后撤销。因此，代码更改只有你给过这个补丁文件的人才能看到。优势？应用补丁的人可以审查你打算做出的更改，如果有些错误可见，补丁可以从代码库中移除，并且你可以被告知你需要做更多工作来创建无错误的代码。
- en: You can view the applying of a patch file as an analogy to tailoring. When you
    happened to burn your shirt while cooking pizza (a business requirement has changed),
    you went to the tailor to get your shirt fixed (the business team comes to you
    to get the new functionality running). The tailor (you) finds a similar piece
    of cloth and shows you how by stitching it to cover the burnt part of your shirt
    (the code base). If you don't like the patchwork (the reviewer has found errors
    in the code), you can ask the tailor to remove the patch and try another color
    (the reviewer will ask you to make and implement another algorithm). The tailor
    easily rips off the patch and tries another color (you/reviewer remove/s the patch
    from the code base). This process goes on until you are satisfied with the patch
    (until the reviewer finds that your code is working fine). The tailor finally
    finishes the stitching properly and hands over the shirt to you (you commit the
    code and hand it over to the release engineer to proceed).
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以将补丁文件的应用过程比作裁缝。当你做饭披萨时不小心烧坏了衬衫（业务需求发生了变化），你去找裁缝修补你的衬衫（业务团队来找你以使新功能运行）。裁缝（你）找到一块类似的布料，通过缝合它来覆盖你衬衫烧毁的部分（代码库）。如果你不喜欢补丁（审查员在代码中发现了错误），你可以要求裁缝移除补丁并尝试另一种颜色（审查员会要求你制作并实施另一种算法）。裁缝很容易撕掉补丁并尝试另一种颜色（你/审查员从代码库中移除补丁）。这个过程会一直进行，直到你对补丁满意（直到审查员发现你的代码运行良好）。裁缝最终正确地完成缝合并将衬衫交给你（你提交代码并将其交给发布工程师继续处理）。
- en: To sum up, you can create a code patch in PhpStorm.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 总结一下，你可以在PhpStorm中创建代码补丁。
- en: How to do it...
  id: totrans-235
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'If you want to create a Subversion patch in PhpStorm, perform the following
    steps:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想在PhpStorm中创建Subversion补丁，请执行以下步骤：
- en: You need to look up (in the top menu), find the menu item, **VCS**, click on
    it, and find the **Create Patch** option, and PhpStorm will show you a window
    that you might be familiar with.
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你需要在顶部菜单中查找（查找菜单项），找到**版本控制**，点击它，然后找到**创建补丁**选项，PhpStorm会显示你可能熟悉的窗口。
- en: Yes, it is a window similar to the **Commit** window, with the difference that
    the **Commit** button is replaced with a **Create Patch** button.
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的，这是一个类似于**提交**窗口的窗口，不同之处在于将**提交**按钮替换为**创建补丁**按钮。
- en: 'And yes, the functionality is also different. You need to specify a comment
    that eventually acts as the name of the patch file (spaces replaced with a hyphen),
    as shown in the following screenshot:'
  id: totrans-239
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 并且，功能也有所不同。你需要指定一个注释，该注释最终将作为补丁文件的名称（空格用连字符替换），如下面的截图所示：
- en: '![How to do it...](img/3878OT_06_18.jpg)'
  id: totrans-240
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作...](img/3878OT_06_18.jpg)'
- en: The default option is the easiest to understand and execute. Once you specify
    the (name and the) location where the patch information will be created, PhpStorm
    creates a patch right at that location, as shown in the following screenshot:![How
    to do it...](img/3878OT_06_19.jpg)
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 默认选项最容易理解和执行。一旦你指定了补丁信息将要创建的位置（名称和位置），PhpStorm就会在那个位置创建补丁，如下面的截图所示：![如何操作...](img/3878OT_06_19.jpg)
- en: If you select the **Reverse patch** option, PhpStorm will reverse the comparison
    criteria—in the default case, it kept the latest version (**Head**) as the basis
    of comparison and considered the changes in this version as new.
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你选择**反向补丁**选项，PhpStorm将反转比较标准——在默认情况下，它保持了最新版本（**Head**）作为比较的基础，并将这个版本中的更改视为新的。
- en: While creating a reverse patch, PhpStorm will consider the immediately previous
    revision as the basis and consider the changes in this revision as new.
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在创建反向补丁时，PhpStorm会将立即前一个版本作为基础，并将这个版本中的更改视为新的。
- en: If you choose to **Select base revision text(s) into patch file**, it means
    you are asking PhpStorm to put in the contents of the file in the current revision.
    Thus, the file length of the patch file will be increased. Here, it is important
    to note that you can choose the file base revision you wish to include in the
    patch file.
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你选择**将基版本文本（们）选入补丁文件**，这意味着你要求PhpStorm将当前版本中的文件内容放入补丁文件中。因此，补丁文件的大小将会增加。在这里，重要的是要注意，你可以选择你希望在补丁文件中包含的文件基版本。
- en: 'Having made the necessary options and initiated the patch file creation process,
    PhpStorm will show you a success message along with an option to go to the location
    of the patch file now, as shown in the following screenshot:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 在完成必要的选项并启动补丁文件创建过程后，PhpStorm会显示一个成功消息，并附带一个选项，现在可以转到补丁文件的位置，如下面的截图所示：
- en: '![How to do it...](img/3878OT_06_20.jpg)'
  id: totrans-246
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作...](img/3878OT_06_20.jpg)'
- en: You can now pass on this patch file to the code reviewer, shut down your machine,
    and safely drive home without worrying about wasting any resources.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以将这个补丁文件传递给代码审查员，关闭你的机器，安全地开车回家，无需担心浪费任何资源。
- en: How it works...
  id: totrans-248
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'When you create a patch file, you actually create a file that contains the
    difference between two files, or more precisely, revisions: the base revision
    and the would-be, next revision. So, a patch file contains the following information:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 当你创建补丁文件时，你实际上创建了一个包含两个文件或更精确地说，修订版本之间差异的文件：基本修订版本和即将到来的修订版本。因此，补丁文件包含以下信息：
- en: the name of the file and the base revision
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件名和基本修订版本
- en: the line numbers that have been modified
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 被修改的行号
- en: the difference in the content
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内容的差异
- en: 'A typical patch file looks like the following:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 一个典型的补丁文件看起来如下：
- en: '[PRE2]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The changes are made to this file and the specified revision, as follows:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 变更是对此文件和指定的修订版本进行的，如下所示：
- en: '[PRE3]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The line number changed is `871,` `13` have been removed and, `20` have been
    added. Take a look at the following code:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 修改的行号是 `871,` 删除了 `13` 行，并增加了 `20` 行。看看下面的代码：
- en: '[PRE4]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The `-` sign denotes that content has been removed. Take a look at the following
    code:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: '`-` 符号表示内容已被删除。看看下面的代码：'
- en: '[PRE5]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The `+` sign denotes that content has been added. Take a look at the following
    code:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: '`+` 符号表示内容已被添加。看看下面的代码：'
- en: '[PRE6]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Happy patching.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 快乐地打补丁。
- en: Creating VCS tags or branches
  id: totrans-264
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建 VCS 标签或分支
- en: The human brain is an overloaded machine. It tends to forget events or things
    or plans very easily. It requires continuous effort to make the brain remember
    things. Since a major part of the brain is dedicated to the visual sense, the
    most widespread usage to keep the brain on its toes is providing visual hints.
    Visual hints act in the same way as regular bookmarks would do in a PhpStorm cookbook
    they let you remember what section you were reading and when.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 人类大脑是一个超负荷的机器。它很容易忘记事件、事物或计划。需要持续的努力来让大脑记住事物。由于大脑的大部分区域都用于视觉感知，最普遍的使用方法是提供视觉提示。视觉提示的作用与在
    PhpStorm 烹饪书中的常规书签相同，它们让你记住你正在阅读的章节以及何时阅读。
- en: Getting ready
  id: totrans-266
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: PhpStorm provides you with a feature wherein you can create visually appealing
    labels, that is, tags.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: PhpStorm 提供了一个功能，你可以创建视觉上吸引人的标签，即标签。
- en: Tags are visual labels that let you and your team know which revision was special
    for you. Thus, you can create visually appealing labels or tags to denote special
    events, such as `Release Version 2.3` or `Bug fixes for V2.2`, and so on. So,
    where is the hint then? The hint is the name. Why visual? Because you can remember
    names and visuals easily.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 标签是视觉标签，让你和你的团队能够知道哪个修订版本对你来说特别。因此，你可以创建视觉上吸引人的标签或标签来表示特殊事件，例如 `Release Version
    2.3` 或 `Bug fixes for V2.2` 等。那么，提示在哪里呢？提示就是名字。为什么是视觉的？因为你可以轻松记住名字和视觉元素。
- en: How to do it...
  id: totrans-269
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: The labeling process starts from the time that you decide to create a tag.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 标签过程从你决定创建标签的时间开始。
- en: 'It should be a descriptive label because if you are not fully awake at the
    time of creating the label, you can end up with names such as `Tag 1` and `My
    Tag`. It leads to wastage of resources and abuse of technology as well. To create
    a tag, perform the following steps:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 它应该是一个描述性的标签，因为如果你在创建标签的时候没有完全清醒，你可能会得到像 `Tag 1` 和 `My Tag` 这样的名字。这会导致资源浪费和技术滥用。要创建一个标签，请执行以下步骤：
- en: Anyway, if you want to create a new tag, you need to select the **Branch or
    Tag** option available when you select the **VCS** | **VCS Operations** pop up,
    as shown in the following screenshot:![How to do it...](img/3878OT_06_21.jpg)
  id: totrans-272
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 无论如何，如果你想创建一个新的标签，你需要在选择 **VCS** | **VCS Operations** 弹出菜单时选择可用的 **Branch or
    Tag** 选项，如下面的截图所示：![如何操作...](img/3878OT_06_21.jpg)
- en: 'When you do so, you see PhpStorm asking questions in order to make you feel
    at home, as shown in the following screenshot:'
  id: totrans-273
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当你这样做时，你会看到 PhpStorm 会提出问题，让你感到宾至如归，如下面的截图所示：
- en: '![How to do it...](img/3878OT_06_22.jpg)'
  id: totrans-274
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作...](img/3878OT_06_22.jpg)'
- en: You need to specify the source on your development machine you wish to copy
    the file or folder from to label by enabling the **Working Copy** option and specifying
    the source file path.
  id: totrans-275
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你需要在你的开发机器上指定你希望从标签中复制文件或文件夹的源，通过启用 **Working Copy** 选项并指定源文件路径来实现。
- en: If you need to specify a file or folder to copy from, you need to select the
    **Repository Location** option and specify the exact location in the current repository
    and the desired revision number or **Head** (the latest revision).
  id: totrans-276
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您需要指定要复制的文件或文件夹，您需要选择**仓库位置**选项，并指定当前仓库中的确切位置和所需的修订号或**Head**（最新修订）。
- en: Then you need to specify the target where you will save the labeled version.
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，您需要指定目标位置，您将在那里保存标记版本。
- en: You can specify a location in the repository by specifying the base URL and
    the label name. This label name will be the visual hint for you.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过指定基础 URL 和标签名称来在仓库中指定位置。这个标签名称将为您提供一个视觉提示。
- en: Note
  id: totrans-279
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can also specify an arbitrary location such as a repository location or
    even a location on your development machine.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 您也可以指定一个任意位置，例如仓库位置，甚至是您的开发机器上的位置。
- en: How it works...
  id: totrans-281
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'Once you are convinced that something works, it will be a great experience
    to go one step ahead and find out what goes on behind the curtains and what makes
    that thing work. So, the branch or tag creation process functions in the same
    way—when you create a tag or a branch in your repository, you just copy files
    from one location to another. Yes, it is the same copy that most of the engineers
    are experts at (no pun intended). Thus, there are four combinations available:'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您确信某件事是可行的，那么进一步探索幕后的情况以及是什么让这件事工作，将会是一次极好的体验。所以，分支或标签创建过程以相同的方式运作——当您在仓库中创建标签或分支时，您只是从一处复制文件到另一处。是的，这就是大多数工程师都擅长的复制（无意中开玩笑）。因此，有四种组合可用：
- en: You copy from your local working copy to your local working copy
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您从本地工作副本复制到本地工作副本
- en: You copy from your local working copy to another location in the same repository
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您从本地工作副本复制到同一仓库中的另一个位置
- en: You copy from another repository location to a location in your local working
    copy
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您从另一个仓库位置复制到您的本地工作副本中的位置
- en: You copy from another repository location to another location in the same repository
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您从另一个仓库位置复制到同一仓库中的另一个位置
- en: Tip
  id: totrans-287
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: It is not mandatory, but it is always recommended that you add comments while
    doing anything—you can add descriptive comments so that you are able to relate
    this change to an action in the future.
  id: totrans-288
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这不是强制性的，但始终建议您在进行任何操作时添加注释——您可以添加描述性注释，以便您能够将此更改与未来的某个操作联系起来。
- en: There's more...
  id: totrans-289
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Having learned how to label a change in the repository, you can move deeper
    into the ocean of knowledge by proceeding to create branches. The similarity between
    a tag and a branch is that both are just folders with certain names. They are
    different in the purposes they serve. While a tag might be useful for small changes,
    a branch forms part of a bigger picture.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 在学习了如何在仓库中标记更改后，您可以通过继续创建分支来更深入地探索知识海洋。标签和分支之间的相似之处在于它们都是具有特定名称的文件夹。它们在所服务的目的上有所不同。虽然标签可能对小的更改有用，但分支是更大图景的一部分。
- en: A use case will make the scenario clearer to you, and you will be able to differentiate
    between the two of them. Suppose the technology team has made a release, and they
    believe this is the last new development done for this version. So, you can make
    a tag named `Version 2.3 final`, add content to it, and leave it forever. Thus,
    at any time in the future, whenever you need to revisit your project, you will
    be able to recognize that "Version 2.3 final" meant such and such a release with
    such and such changes.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 一个用例将使场景对您更清晰，您将能够区分这两者。假设技术团队已经发布了一个版本，并且他们认为这是该版本最后的新开发。因此，您可以创建一个名为`Version
    2.3 final`的标签，向其中添加内容，并永远保留它。因此，在未来任何时候，无论何时您需要回顾您的项目，您都将能够识别出“Version 2.3 final”意味着这样的一个版本，具有这样的变化。
- en: 'Creating a branch is similar to creating a tag since both are just repository
    directories. Perform the following steps:'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 创建分支与创建标签类似，因为它们都是仓库目录。执行以下步骤：
- en: To create a new branch, you need to go to the **Subversion** view, select the
    appropriate directory from the project view, and access the right-click context
    menu.
  id: totrans-293
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要创建一个新的分支，您需要转到**Subversion**视图，从项目视图中选择适当的目录，并访问右键单击上下文菜单。
- en: 'Select the **Subversion** menu item and select the **Branch or Tag** option.
    A familiar window will pop-up once you have done that. You need to fill in the
    basic information for the branch creation to proceed, such as:'
  id: totrans-294
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**Subversion**菜单项，然后选择**分支或标签**选项。一旦您这样做，就会弹出一个熟悉的窗口。您需要填写创建分支所需的基本信息，例如：
- en: 'The source from where you access the files to be pushed into the Subversion:
    This source can be somewhere in your local development system (the file/folder
    you selected by default) or a repository location (you can specify the revision
    number as well).'
  id: totrans-295
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你从哪里获取要推送到Subversion的文件：这个源可以在你的本地开发系统中的某个地方（你默认选择的文件/文件夹）或仓库位置（你也可以指定修订号）。
- en: 'The destination where you will put the branch to be: This, again, needs to
    be a full pathname on your local development machine or a URL pointing to a repository
    location. It is important to note here that the repository location must be the
    same repository where your source resides.'
  id: totrans-296
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你将放置分支的目的地：这同样需要在你的本地开发机器上的完整路径名或指向仓库位置的URL。在此需要注意的是，仓库位置必须与你的源代码所在的同一仓库。
- en: The comment you wish to add so you and the team remember the purpose of the
    branch creation.
  id: totrans-297
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你希望添加的注释，以便你和团队记住分支创建的目的。
- en: So, you create a label to make a revision safe in the repository forever. You
    create a branch to make a safe and stable version of the code—a branch is created;
    you work on it, get it tested and approved, and merge it to the trunk.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，你创建一个标签来确保修订在仓库中永远安全。你创建一个分支来制作一个安全稳定的代码版本——分支被创建；你在上面工作，进行测试并获得批准，然后将它合并到主分支。
- en: '*It all is a matter of perception*'
  id: totrans-299
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*这一切都是感知的问题*'
- en: Creating a task for the team
  id: totrans-300
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为团队创建任务
- en: Have you ever imagined how big things are created? How have people successfully
    managed to build large systems that function so well? What must have been their
    thinking and mindset when they decided to step out and attempt that extra mile?
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 你是否曾经想过如何创造伟大事物？人们是如何成功构建出如此高效的大型系统的？当他们决定迈出一步，尝试额外努力时，他们的思维和心态是怎样的？
- en: The answer to this is quite simple. A journey of a thousand miles begins with
    a single step. So, when you started thinking about working with your team, you
    decided to work with version control. You went ahead and learned the tricks of
    the trade while working with version control. Now, it's the time for you to step
    out and try out that extra mile. Combine the knowledge you have gained, and get
    ready to explore one of the ways in which you can create a team task.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 这个问题的答案相当简单。千里之行，始于足下。所以，当你开始思考与团队一起工作时，你决定使用版本控制。你继续前进，在版本控制中学习技巧。现在，是你迈出一步，尝试额外努力的时候了。结合你所获得的知识，准备好探索你可以创建团队任务的一种方式。
- en: Getting ready
  id: totrans-303
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: You want to create a team task so that you can set which section of code needs
    the attention of which programmer in your team. You can do that by combining the
    power of TODO (remember creating TODO tasks?) and version control. Thus, any fellow
    programmer will be able to know quite easily that such and such a task has now
    been assigned and there needs to be a proper development plan. A great help to
    the team—you will guide them through the correct way.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 你想要创建一个团队任务，以便你可以设定你的团队中哪个程序员需要关注代码的哪个部分。你可以通过结合TODO（还记得创建TODO任务吗？）和版本控制的强大功能来实现这一点。因此，任何程序员都可以很容易地知道某个任务已经被分配，并且需要有一个适当的发展计划。这对团队大有裨益——你将引导他们走向正确的道路。
- en: This also has a role to play in the peer code review process in the **eXtreme
    Programming** paradigm of software engineering, wherein you write code and your
    peer reviews your code. The peer then points out the probably buggy section in
    your code. Thus, once you push your code to version control with a task for your
    peer, the peer can push the changes they have made along with tasks for you to
    fix or consider or any changes that might appear as the need of the hour.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 这在软件工程中的极限编程（**eXtreme Programming**）范式中的同行代码审查过程中也扮演着一定的角色，其中你编写代码，你的同行审查你的代码。然后，同行会指出你代码中可能存在问题的部分。因此，一旦你将带有任务给你的代码推送到版本控制，同行就可以推送他们所做的更改，包括需要你修复或考虑的任务，或者任何可能出现的即时需求。
- en: How to do it...
  id: totrans-306
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'To create a task is not a difficult task (pun intended). So, if you want to
    point to another member in your team, perform the following steps:'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个任务并不是一个困难的任务（有意为之）。所以，如果你想指向你团队中的另一个成员，请执行以下步骤：
- en: 'You just need to continue your old style of programming but with a small modification:
    wherever you feel that more work needs to be done.'
  id: totrans-308
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你只需要继续你旧的编程风格，但稍作修改：无论何时你觉得需要做更多的工作。
- en: 'You just need to put a TODO followed by the description of the task you wish
    to bring to the attention of the team. The actual flow to create a general team
    task while reviewing code is as follows:'
  id: totrans-309
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你只需要添加一个TODO，然后描述你希望引起团队注意的任务。在审查代码时创建一般团队任务的实际流程如下：
- en: Find a piece of code
  id: totrans-310
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 找到一段代码
- en: Have a thorough read
  id: totrans-311
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仔细阅读
- en: Write `// TODO <followed by the task to be done, for example, Add Documentation,
    team>`
  id: totrans-312
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 写`// TODO <随后是待完成的任务，例如添加文档，团队>`
- en: Commit the code to version control
  id: totrans-313
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将代码提交到版本控制
- en: 'When you are writing code yourself, you can add a TODO to create a task to
    set the team thinking in a particular direction. The flow will be as follows:'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 当你自己在编写代码时，你可以添加一个TODO来创建一个任务，让团队思考特定的方向。流程如下：
- en: Write (refined) code—you cannot afford to make mistakes
  id: totrans-315
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编写（精炼）的代码——你无法承担犯错的代价
- en: Find a logic that you think is not completely implemented
  id: totrans-316
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 找到一个你认为没有完全实现的逻辑
- en: Write `//TODO <followed by the task to be done, e.g. find some fool proof regular
    expression, team>`
  id: totrans-317
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 写`//TODO <随后是待完成的任务，例如找到一些万无一失的正则表达式，团队>`
- en: Commit the code to version control
  id: totrans-318
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将代码提交到版本控制
- en: 'When you want to divide the task among the team, you can use the TODO user
    followed by the name of the programmer you think would be the most apt choice
    in getting the work done. The flow becomes as follows:'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 当你想将任务分配给团队时，可以使用TODO用户后跟你认为最适合完成工作的程序员的姓名。流程如下：
- en: Read the changed code thoroughly.
  id: totrans-320
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仔细阅读更改后的代码。
- en: Test the code on your development system.
  id: totrans-321
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在你的开发系统上测试代码。
- en: Find possible improvements that can be made, and group them according to the
    caliber of the team members.
  id: totrans-322
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 找出可以进行的改进，并根据团队成员的能力分组。
- en: 'Write TODO and the name of the target programmer, followed by the comment for
    each of the possible improvements that you found out. Some sample TODOs could
    be as follows:'
  id: totrans-323
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 写TODO和目标程序员的姓名，然后针对你发现的每个可能的改进写上注释。一些示例TODO如下：
- en: '`//TODO Alice`: This section needs to have the unnecessary variables removed'
  id: totrans-324
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`//TODO Alice`: 这个部分需要移除不必要的变量'
- en: '`//TODO Bob`: The actions inside a for-loop can be done outside the loop for
    lower execution time'
  id: totrans-325
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`//TODO Bob`: 循环内的操作可以移到循环外以降低执行时间'
- en: Commit the code to version control.
  id: totrans-326
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将代码提交到版本控制。
- en: Tip
  id: totrans-327
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: This is just one of the ways—you are the person who will find out more and more
    ways of using version control.
  id: totrans-328
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这只是其中一种方法——你将是那个发现越来越多版本控制使用方法的人。
- en: How it works...
  id: totrans-329
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: When you create a team task, you just create a TODO task and push it to version
    control. Thus, in a real sense, you are making use of the PhpStorm TODO feature.
    So, your TODO is actually passed on to the team members with the help of PhpStorm
    because it is the parser built with PhpStorm that recognizes the TODO keyword.
    Thus, when the team takes the update from version control, along with the other
    revision text, this TODO will also get included in your working copy. So, when
    a fellow programmer selects the TODO view, the intention is visible.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 当你创建团队任务时，你只需创建一个TODO任务并将其推送到版本控制。因此，从实际意义上讲，你是在利用PhpStorm的TODO功能。所以，你的TODO实际上是通过PhpStorm的帮助传递给团队成员的，因为它是用PhpStorm构建的解析器，可以识别TODO关键字。因此，当团队从版本控制中获取更新时，这个TODO也会包含在你的工作副本中。所以，当其他程序员选择TODO视图时，意图是显而易见的。
- en: The same is the case when you create a TODO task for a particular programmer
    in your team. So, when everyone in the team takes updates from version control,
    the same TODO now contains the name of the programmer. This enables team members
    to focus on their task properly.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 当你为团队中的特定程序员创建TODO任务时，情况也是如此。因此，当团队中的每个人都从版本控制中获取更新时，同样的TODO现在包含了程序员的姓名。这使得团队成员能够正确地专注于他们的任务。
- en: A team task not only helps the team to be more focused on the assigned task
    and put in more energy thereby, but also attempts to ease some pressure from the
    cumbersome task of allocating work to the team.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 团队任务不仅帮助团队更专注于分配的任务并投入更多精力，还试图减轻分配工作的繁琐任务带来的压力。
- en: PhpStorm again to your rescue!
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: PhpStorm再次来拯救你！
