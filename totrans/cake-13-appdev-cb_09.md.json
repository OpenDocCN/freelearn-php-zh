["```php\nCREATE TABLE `articles`(\n`id` INT UNSIGNED AUTO_INCREMENT NOT NULL,\n`title` VARCHAR(255) NOT NULL,\n`body` TEXT NOT NULL,\n`created` DATETIME NOT NULL,\n`modified` DATETIME NOT NULL,\nPRIMARY KEY(`id`)\n);\n\n```", "```php\nINSERT INTO `articles`(`title`, `body`, `created`, `modified`) VALUES\n('First Article', 'Body for first article', NOW(), NOW()),\n('Second Article', 'Body for second article', NOW(), NOW()),\n('Third Article', 'Body for third article', NOW(), NOW());\n\n```", "```php\n<?php\nclass ArticlesController extends AppController {\npublic function index() {\n$this->paginate['limit'] = 2;\n$articles = $this->paginate();\n$this->set(compact('articles'));\n}\npublic function add() {\nif (!empty($this->data)) {\n$this->Article->create();\nif ($this->Article->save($this->data)) {\n$this->Session->setFlash('Article saved');\n$this->redirect(array('action'=>'index'));\n} else {\n$this->Session->setFlash('Please correct the errors');\n}\n}\n}\npublic function view($id) {\n$article = $this->Article->find('first', array(\n'conditions' => array('Article.id' => $id)\n));\nif (empty($article)) {\n$this->cakeError('error404');\n}\n$this->set(compact('article'));\n}\n}\n?>\n\n```", "```php\n<?php\nclass Article extends AppModel {\npublic $validate = array(\n'title' => 'notEmpty',\n'body' => 'notEmpty'\n);\n}\n?>\n\n```", "```php\n<h1>Articles</h1>\n<p>\n<?php echo $this->Paginator->counter(); ?>\n&nbsp;-&nbsp;\n<?php echo $this->Paginator->prev(); ?>\n&nbsp;\n<?php echo $this->Paginator->numbers(); ?>\n&nbsp;\n<?php echo $this->Paginator->next(); ?>\n</p>\n<p>\n<?php echo count($articles) . ' articles: '; ?>\n</p>\n<ul>\n<?php foreach($articles as $article) { ?>\n<li><?php echo $this->Html->link(\n$article['Article']['title'],\narray('action'=>'view', $article['Article']['id'])\n); ?></li>\n<?php } ?>\n</ul>\n<p><?php echo $this->Html->link('Create article', array('action'=>'add')); ?></p>\n\n```", "```php\n<?php\necho $this->Form->create();\necho $this->Form->inputs(array(\n'title',\n'body'\n));\necho $this->Form->end('Save');\n?>\n\n```", "```php\n<h1><?php echo $article['Article']['title']; ?></h1>\n<?php echo $article['Article']['body']; ?>\n\n```", "```php\n    public function add() {\n    if (!empty($this->data)) {\n    $this->Article->create();\n    if ($this->Article->save($this->data)) {\n    $this->Session->setFlash(__('Article saved', true));\n    $this->redirect(array('action'=>'index'));\n    } else {\n    $this->Session->setFlash(__('Please correct the errors', true));\n    }\n    }\n    }\n\n    ```", "```php\n    <?php\n    echo $this->Form->create();\n    echo $this->Form->inputs(array(\n    'legend' => __('New Article', true),\n    'title' => array('label' => __('Title:', true)),\n    'body' => array('label' => __('Body:', true))\n    ));\n    echo $this->Form->end(__('Save', true));\n    ?>\n\n    ```", "```php\n    <h1><?php __('Articles'); ?></h1>\n    <p>\n    <?php echo $this->Paginator->counter(__('Showing records %start%-%end% in page %page% out of %pages%', true)); ?>\n    &nbsp;-&nbsp;\n    <?php echo $this->Paginator->prev(__('<< Previous', true)); ?>\n    &nbsp;\n    <?php echo $this->Paginator->numbers(); ?>\n    &nbsp;\n    <?php echo $this->Paginator->next(__('Next >>', true)); ?>\n    </p>\n    <p>\n    <?php\n    $count = count($articles);\n    echo $count . ' ' . __n('article', 'articles', $count, true) . ': ';\n    ?>\n    </p>\n    <ul>\n    <?php foreach($articles as $article) { ?>\n    <li><?php echo $this->Html->link(\n    $article['Article']['title'],\n    array('action'=>'view', $article['Article']['id'])\n    ); ?></li>\n    <?php } ?>\n    </ul>\n    <p><?php echo $this->Html->link(__('Create article', true), array('action'=>'add')); ?></p>\n\n    ```", "```php\n$translated = __d('my_plugin', 'Hello World', true);\n\n```", "```php\n$translated = __dc('default', 'Hello World', 6, true);\n\n```", "```php\npublic $validate = array(\n'title' => array(\n'required' => 'notEmpty'\n),\n'body' => array(\n'required' => 'notEmpty'\n)\n);\n\n```", "```php\npublic function __construct($id = false, $table = null, $ds = null) {\nforeach($this->validate as $field => $rules) {\nif (!is_array($rules)) {\n$rules = (array) $rules;\n}\nforeach($rules as $key => $rule) {\nif (!is_array($rule)) {\n$rules[$key] = compact('rule');\n}\n}\n$this->validate[$field] = $rules;\n}\n$this->validate = Set::merge($this->validate, array(\n'title' => array(\n'required' => array('message' => __('A title must be specified', true))\n),\n'body' => array(\n'required' => array('message' => __('You must define the body', true))\n)\n));\nparent::__construct($id, $table, $ds);\n}\n\n```", "```php\n<?php\necho $this->Form->create();\necho $this->Form->inputs(array(\n'title' => array(\n'label' => __('Title:', true),\n'error' => array(\n'required' => __('A title must be specified', true)\n)\n),\n'body' => array(\n'label' => __('Body:', true),\n'error' => array(\n'required' => __('You must define the body', true)\n)\n)\n));\necho $this->Form->end(__('Save', true));\n?>\n\n```", "```php\npublic $validate = array(\n'title' => array(\n'required' => array(\n'rule' => 'notEmpty',\n'message' => __('Nothing defined!', true) // SYNTAX ERROR\n)\n)\n);\n\n```", "```php\n    public function add() {\n    if (!empty($this->data)) {\n    $this->Article->create();\n    if ($this->Article->save($this->data)) {\n    $this->Session->setFlash(\n    sprintf(__('Article \"%s\" saved', true), $this->Article->field('title'))\n    );\n    $this->redirect(array('action'=>'index'));\n    } else {\n    $this->Session->setFlash('Please correct the errors');\n    }\n    }\n    }\n\n    ```", "```php\n    <h1><?php __('Articles'); ?></h1>\n    <p>\n    <?php echo $this->Paginator->counter(__('Showing records %start%-%end% in page %page% out of %pages%', true)); ?>\n    &nbsp;-&nbsp;\n    <?php echo $this->Paginator->prev(__('<< Previous', true)); ?>\n    &nbsp;\n    <?php echo $this->Paginator->numbers(); ?>\n    &nbsp;\n    <?php echo $this->Paginator->next(__('Next >>', true)); ?>\n    </p>\n    <p>\n    <?php\n    $count = count($articles);\n    printf(__n('%d article', '%d articles', $count, true), $count);\n    ?>\n    </p>\n    <ul>\n    <?php foreach($articles as $article) { ?>\n    <li><?php echo $this->Html->link(\n    $article['Article']['title'],\n    array('action'=>'view', $article['Article']['id'])\n    ); ?></li>\n    <?php } ?>\n    </ul>\n    <p><?php echo $this->Html->link(__('Create article', true), array('action'=>'add')); ?></p>\n\n    ```", "```php\n$translated = __('Hello ' . $name, true); // This is wrong\n\n```", "```php\nprintf('Your name is %s and your country is %s', $name, $country);\n\n```", "```php\nprintf('You are from %2$s and your name is %1$s', $name, $country);\n\n```", "```php\nprintf('You are from %2$s and your name is %1$s . Welcome %1$s!', $name, $country);\n\n```", "```php\n../cake/console/cake i18n extract\n\n```", "```php\n..\\cake\\console\\cake.bat i18n extract\n\n```", "```php\nnplurals=2; plural=(n != 1);\n\n```", "```php\n../cake/console/cake i18n initdb\n\n```", "```php\n..\\cake\\console\\cake.bat i18n initdb\n\n```", "```php\n<?php\nclass Article extends AppModel {\npublic $validate = array(\n'title' => 'notEmpty',\n'body' => 'notEmpty'\n);\npublic $actsAs = array(\n'Translate' => array('title', 'body')\n);\n}\n?>\n\n```", "```php\nINSERT INTO `i18n`(`locale`, `model`, `foreign_key`, `field`, `content`)\nSELECT 'eng', 'Article', `articles`.`id`, 'title', `articles`.`title`\nFROM `articles`;\nINSERT INTO `i18n`(`locale`, `model`, `foreign_key`, `field`, `content`)\nSELECT 'eng', 'Article', `articles`.`id`, 'body', `articles`.`body`\nFROM `articles`;\nALTER TABLE `articles`\nDROP COLUMN `title`,\nDROP COLUMN `body`;\n\n```", "```php\nINSERT INTO `i18n`(`locale`, `model`, `foreign_key`, `field`, `content`) VALUES\n('spa', 'Article', 1, 'title', 'Primer Artículo'),\n('spa', 'Article', 1, 'body', 'Cuerpo para el primer Artículo'),\n('spa', 'Article', 2, 'title', 'Segundo Artículo'),\n('spa', 'Article', 2, 'body', 'Cuerpo para el segundo Artículo'),\n('spa', 'Article', 3, 'title', 'Tercer Artículo'),\n('spa', 'Article', 3, 'body', 'Cuerpo para el tercer Artículo');\n\n```", "```php\nConfigure::write('Config.language', 'eng');\n\n```", "```php\nCREATE TABLE `article_translations`(\n`id` INT UNSIGNED AUTO_INCREMENT NOT NULL,\n`model` VARCHAR(255) NOT NULL,\n`foreign_key` INT UNSIGNED NOT NULL,\n`locale` VARCHAR(6) NOT NULL,\n`field` VARCHAR(255) NOT NULL,\n`content` TEXT default NULL,\nKEY `model__foreign_key`(`model`, `foreign_key`),\nKEY `model__foreign_key__locale`(`model`, `foreign_key`, `locale`),\nPRIMARY KEY(`id`)\n);\nINSERT INTO `article_translations`\nSELECT `id`, `model`, `foreign_key`, `locale`, `field`, `content`\nFROM `i18n`;\n\n```", "```php\n<?php\nclass ArticleTranslation extends AppModel {\npublic $displayField = 'field';\n}\n?>\n\n```", "```php\n<?php\nclass Article extends AppModel {\npublic $validate = array(\n'title' => 'notEmpty',\n'body' => 'notEmpty'\n);\npublic $actsAs = array(\n'Translate' => array('title', 'body')\n);\npublic $translateModel = 'ArticleTranslation';\n}\n?>\n\n```", "```php\n    Configure::write('Config.languages', array(\n    'eng' => __('English', true),\n    'spa' => __('Spanish', true)\n    ));\n\n    ```", "```php\n    <div style=\"float: right\">\n    <?php\n    $links = array();\n    $currentLanguage = Configure::read('Config.language');\n    foreach(Configure::read('Config.languages') as $code => $language) {\n    if ($code == $currentLanguage) {\n    $links[] = $language;\n    } else {\n    $links[] = $this->Html->link($language, array('lang' => $code));\n    }\n    }\n    echo implode(' - ', $links);\n    ?>\n    </div>\n\n    ```", "```php\n    <?php\n    class AppController extends Controller {\n    public $components = array('Language', 'Session');\n    }\n    ?>\n\n    ```", "```php\n    <?php\n    class LanguageComponent extends Object {\n    public $controller = null;\n    public $components = array('Cookie');\n    public $languages = array();\n    public function initialize($controller) {\n    $this->controller = $controller;\n    if (empty($languages)) {\n    $this->languages = Configure::read('Config.languages');\n    }\n    $this->set();\n    }\n    public function set($language = null) {\n    $saveCookie = false;\n    if (empty($language) && isset($this->controller)) {\n    if (!empty($this->controller->params['named']['lang'])) {\n    $language = $this->controller->params['named']['lang'];\n    } elseif (!empty($this->controller->params['url']['lang'])) {\n    $language = $this->controller->params['url']['lang'];\n    }\n    if (!empty($language)) {\n    $saveCookie = true;\n    }\n    }\n    if (empty($language)) {\n    $language = $this->Cookie->read('language');\n    if (empty($language)) {\n    $saveCookie = true;\n    }\n    }\n    if (empty($language) && !array_key_exists($language, $this->languages)) {\n    $language = Configure::read('Config.language');\n    }\n    Configure::write('Config.language', $language);\n    if ($saveCookie) {\n    $this->Cookie->write('language', $language, false, '1 year');\n    }\n    }\n    }\n    ?>\n\n    ```"]