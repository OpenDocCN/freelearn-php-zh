["```php\nyii <route> [--option1=value1 --option2=value2 ... argument1 argument2 ...]\n\n```", "```php\n$ ./yii help\n\n```", "```php\nThis is Yii version 2.0.4.\n\nThe following commands are available:\n\n- asset                         Allows you to combine and compress your JavaScript and CSS files.\n asset/compress (default)    Combines and compresses the asset files according to the given configuration.\n asset/template              Creates template of configuration file for [[actionCompress]].\n\n- cache                         Allows you to flush cache.\n cache/flush                 Flushes given cache components.\n cache/flush-all             Flushes all caches registered in the system.\n cache/flush-schema          Clears DB schema cache for a given connection component.\n cache/index (default)       Lists the caches that can be flushed.\n…\n…\n\n```", "```php\n$ ./yii help message\n\n```", "```php\n$ ./yii help message/config\n\n```", "```php\nDESCRIPTION\n\nCreates a configuration file for the \"extract\" command.\n\nThe generated configuration file contains detailed instructions on\nhow to customize it to fit for your needs. After customization,\nyou may use this configuration file with the \"extract\" command.\n\nUSAGE\n\nyii message/config <filePath> [...options...]\n\n- filePath (required): string\n output file name or alias.\n\nOPTIONS\n\n--appconfig: string\n custom application configuration file path.\n If not set, default application configuration is used.\n\n--color: boolean, 0 or 1\n whether to enable ANSI color in the output.\n If not set, ANSI color will only be enabled for terminals that support it.\n\n--interactive: boolean, 0 or 1 (defaults to 1)\n whether to run the command interactively.\n\n```", "```php\n<?php\n\nnamespace console\\controllers;\n\nuse \\yii\\console\\Controller;\n\n/**\n * This is an example controller\n */\nclass MyExampleController extends Controller\n{\n    public $option1;\n    public $option2;\n\n    public function options($action)\n    {\n        return ['option1'];\n    }\n\n    /**\n     * Simply return a welcome text\n     */\n    public function actionTest($param1)\n    {\n        echo 'this is my first controller using console application';\n        echo \"\\n\";\n        echo \"You have passed param1 with value: \".$param1;\n        echo \"\\n\";\n        echo \"Value of option1 is: \".$this->option1;\n        echo \"\\n\";\n\n        // equivalent to return 0;\n        return Controller::EXIT_CODE_NORMAL;\n    }\n\n}\n\n?>\n```", "```php\n$ ./yii help my-example\n\n```", "```php\nDESCRIPTION\n\nThis is an example controller\n\nSUB-COMMANDS\n\n- my-example/test  Simply return a welcome text\n\nTo see the detailed information about individual sub-commands, enter:\n\n yii help <sub-command>\n\n```", "```php\n$ ./yii help my-example/test\n\n```", "```php\n$ ./yii my-example/test\n\n```", "```php\n$ ./yii my-example/test \"this is value for param1\"\n\n```", "```php\nthis is my first controller using console application\nYou have passed param1 with value: this is value for param1\nValue of option1 is:.\n\n```", "```php\n$ ./yii my-example/test \"this is value for param1\" --option1=\"this is value for option1\"\n\n```", "```php\nthis is my first controller using console application\nYou have passed param1 with value: this is value for param1\nValue of option1 is: this is value for option1\n\n```", "```php\nCREATE TABLE `reservation` (\n `id` int(11) NOT NULL AUTO_INCREMENT,\n `room_id` int(11) NOT NULL,\n `customer_id` int(11) NOT NULL,\n `price_per_day` decimal(20,2) NOT NULL,\n `date_from` date NOT NULL,\n `date_to` date NOT NULL,\n `reservation_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,\n `expired` int(1) NOT NULL DEFAULT '0',\n PRIMARY KEY (`id`)\n )\n```", "```php\nINSERT INTO `reservation` (`id`, `room_id`, `customer_id`, `price_per_day`, `date_from`, `date_to`, `reservation_date`, `expired`) VALUES\n(1, 2, 1, 90.00, '2015-02-10', '2015-05-23', '2015-05-24 22:45:37', 0),\n(2, 2, 1, 48.00, '2019-08-27', '2019-08-31', '2015-05-24 22:45:37', 0),\n(3, 1, 2, 105.00, '2015-09-24', '2015-10-06', '2015-06-03 00:21:14', 0),\n(4, 1, 2, 150.00, '2015-06-22', '2015-06-28', '2015-06-21 22:24:25', 0),\n(5, 1, 2, 150.00, '2015-07-22', '2015-08-28', '2015-06-21 22:24:34', 0);\n```", "```php\n<?php\n\nnamespace console\\controllers;\n\nuse \\yii\\console\\Controller;\n\n/**\n * Manage reservations\n */\nclass ReservationsController extends Controller\n{\n    /**\n     * Update 'expired' field of reservations\n     */\n    public function actionUpdateExpired()\n    {\n        $models = \\common\\models\\Reservation::find()->all();\n\n        foreach($models as $m)\n        {\n            echo sprintf('Check reservation #%d - date_to = %s - status : %s', $m->id, $m->date_to, (strtotime($m->date_to)<=time())?'OK':'Expired');\n            echo \"\\n\";\n            // Set expired field. I'll for every model because if we could have changed 'date_to' value.\n            $m->expired = (strtotime($m->date_to)<=time())?0:1;\n            $m->save();\n        }\n        // equivalent to return 0;\n        return Controller::EXIT_CODE_NORMAL;\n    }\n}\n?>\n```", "```php\n$ ./yii reservations/update-expired\n\n```", "```php\nCheck reservation #1 - date_to = 2015-05-23 - status : OK\nCheck reservation #2 - date_to = 2019-08-31 - status : Expired\nCheck reservation #3 - date_to = 2015-10-06 - status : Expired\nCheck reservation #4 - date_to = 2015-06-28 - status : OK\nCheck reservation #5 - date_to = 2015-08-28 - status : OK\n\n```", "```php\n$this->stdout(\"Hello?\\n\", Console::BOLD);\n```", "```php\n<?php\n\nnamespace console\\controllers;\n\nuse \\yii\\console\\Controller;\nuse \\yii\\helpers\\Console;\n\n/**\n * Colors dedicated controller\n */\nclass ColorController extends Controller\n{\n    /**\n     * Simply return a welcome text\n     */\n    public function actionIsClientEnabled()\n    {\n        if($this->isColorEnabled())\n        {\n            $this->stdout('OK, terminal supports colors!');\n        }\n        else\n        {\n            $this->stdout('NOT OK, terminal does not support colors!'); \n\n        }\n\n        $this->stdOut(\"\\n\");        \n\n        // equivalent to return 0;\n        return Controller::EXIT_CODE_NORMAL;\n    }\n\n    public function actionPrintColouredText()\n    {\n        $colouredText = $this->ansiFormat('This text is coloured', Console::FG_RED);\n        $normalText =\"This text is normal\";\n\n        $this->stdout(sprintf(\"%s - %s\\n\", $normalText, $colouredText));\n    }\n\n}\n\n?>\n```", "```php\n$ ./yii color/is-client-enabled\n\n```", "```php\n$ ./yii color/print-coloured-text\n\n```", "```php\n    'components' => [\n    ..\n    ..\n\n        'mailer' => [\n            'class' => 'yii\\swiftmailer\\Mailer',\n            'viewPath' => '@common/mail',\n            // send all mails to a file by default. You have to set\n            // 'useFileTransport' to false and configure a transport\n            // for the mailer to send real emails.\n            'useFileTransport' => true,\n        ],\n..\n..\n    ],\n];\n```", "```php\n    public function actionReservationsOfTheDay($currentDate=null)\n    {\n        if($currentDate == null) $currentDate = date('Y-m-d');\n        $models = \\common\\models\\Reservation::find()->where('DATE(reservation_date) = \"'.$currentDate.'\"')->all(); \n        \\Yii::$app->mailer->compose(['html' => 'reservationsOfTheDay-html', 'text' => 'reservationsOfTheDay-text'], ['models' => $models, 'currentDate' => $currentDate])\n            ->setFrom('myemail@example.com')\n            ->setTo('administrator@example.com')\n            ->setSubject('Reservations of the day: '.$currentDate)\n            ->send();\n\n    }\n```", "```php\nThere are <?= count($models) ?> reservations for the date <?= $currentDate ?>\n\n<br /><br />\n\n<?php if(count($models)>0) { ?>\n    <b>This is a summary:</b>\n\n    <br />\n\n    <table>\n        <tr>\n            <td>Reservation #</td>\n            <td>Room</td>\n            <td>Customer</td>\n            <td>Price per day</td>\n            <td>Date from</td>\n            <td>Date to</td>\n        </tr>\n\n        <?php foreach($models as $m) { ?>\n        <tr>\n            <td><?= $m->id ?></td>\n            <td><?= $m->room->floor.' '.$m->room->number ?></td>\n            <td><?= $m->customer->surname.' '.$m->customer->name ?></td>\n            <td><?= $m->price_per_day ?></td>\n            <td><?= $m->date_from ?></td>\n            <td><?= $m->date_to ?></td>\n        </tr>    \n        <?php } ?>\n\n    </table>\n<?php } else { ?>\n    <i>There is no summary for current date</i>\n<?php } ?>    \n```", "```php\nThere are <?= count($models) ?> reservations for the date <?= $currentDate ?>\n\n<?php if(count($models)>0) { ?>\n    This is a summary\n\n    <?php foreach($models as $m) { ?>\n        Reservation #: <?= $m->id ?> - Room: <?= $m->room->floor.' '.$m->room->number ?> - Customer: <?= $m->customer->surname.' '.$m->customer->name ?> - Price per day: <?= $m->price_per_day ?> - Date from: <?= $m->date_from ?> - Date to: <?= $m->date_to ?>\n    <?php } ?>\n<?php } else { ?>\n    There is no summary for the current date\n<?php } ?>\n```", "```php\n$ ./yii reservations/reservations-of-the-day\n\n```", "```php\n$ ./yii reservations/reservations-of-the-day \"2015-08-05\"\n\n```"]