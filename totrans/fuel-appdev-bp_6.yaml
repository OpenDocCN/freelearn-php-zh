- en: Chapter 6. Building a Website Using Novius OS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we will introduce you to **Novius** **OS**, an open source
    **Content Management System** (or **CMS**) based on FuelPHP. Using Novius OS can
    greatly simplify the implementation and management of a website. Its back office
    includes important and user-friendly features such as web page, menu, template,
    applications, user, and rights management; it is currently available in six languages
    (English, French, Japanese, Russian, Spanish, and Interlingua). It is an excellent
    tool if you want to build a complex website easily manageable by non-programmer
    users.
  prefs: []
  type: TYPE_NORMAL
- en: 'By the end of this chapter, you will know:'
  prefs: []
  type: TYPE_NORMAL
- en: How to install and configure Novius OS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Basic features of Novius OS and how to use them to create your website
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Novius OS filesystem hierarchy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What is a Novius OS application, how to generate one, and what are its main
    components
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: About Novius OS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Novius OS is an open source CMS based on FuelPHP and powered by the jQuery UI
    and Wijmo libraries. It was officially launched in December 2011 by Novius, a
    small web agency based in Lyon, France. The core team that designed and implemented
    this project is comprised of one UX designer - Antoine Lefeuvre - and three engineers
    - Gilles Félix, Julian Espérat, and me. However, the software has also received
    numerous contributions from the open-source community.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we will assume that you use the Version 5.0.1 (Elche) of Novius
    OS (the current stable version at the time of writing). The official website of
    this CMS can be found at [http://www.novius-os.org/](http://www.novius-os.org/).
  prefs: []
  type: TYPE_NORMAL
- en: 'Its official documentation is available at the following URLs:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://docs.novius-os.org/en/elche/](http://docs.novius-os.org/en/elche/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[http://docs-api.novius-os.org/en/elche](http://docs-api.novius-os.org/en/elche)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: I included an introduction to Novius OS in this book as it is based on FuelPHP
    and I think some of you could find this system useful. Though, since I took part
    in the project, I am aware my opinion could be biased about it, and that is why
    this chapter is a rather short introduction about it.
  prefs: []
  type: TYPE_NORMAL
- en: Getting Novius OS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The requirements of Novius OS are similar to those of FuelPHP:'
  prefs: []
  type: TYPE_NORMAL
- en: PHP 5.3 or greater
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MySQL
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Apache with mod_rewrite enabled
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Windows (> Vista), Linux or Mac OS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Installation instructions can be found at the following URL:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://docs.novius-os.org/en/elche/install/install.html](http://docs.novius-os.org/en/elche/install/install.html)'
  prefs: []
  type: TYPE_NORMAL
- en: You are recommended to follow the instructions in the **Installation via Zip
    file** section (simplest and general solution). If you are developing on Linux
    or Mac OS, you might want to follow the instructions in the **Installation** section
    as it will download the latest fixes of this version.
  prefs: []
  type: TYPE_NORMAL
- en: You can also configure a virtual host as we did in the previous chapters for
    FuelPHP (refer to the **Advanced installation** section). However, we will assume
    that you only downloaded and unzipped Novius OS in the `novius-os` folder of your
    web server's root directory (`DOCUMENT_ROOT/novius-os`).
  prefs: []
  type: TYPE_NORMAL
- en: Configuring Novius OS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you enter the URL `http://localhost/novius-os`, the Novius OS installation
    wizard will appear. Follow the directions; it will first check whether your server
    configuration is compatible with Novius OS, secondly ask for your database configuration
    (you will need to first create a database), then ask for some information to create
    the first user account (necessary to connect to the Novius OS' back office), and
    finally, ask you which languages you want your website to be available in.
  prefs: []
  type: TYPE_NORMAL
- en: You can now click on **Go to the back-office and sign-in**.
  prefs: []
  type: TYPE_NORMAL
- en: Exploring Novius OS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, you will learn about the main Novius OS features by exploring
    the interface. This step is important if you have never used Novius OS earlier,
    because implementation details can't be understood if you don't know how to use
    the CMS.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following sign-in webpage will be displayed:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Exploring Novius OS](img/5401OS_06_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Enter the credentials you defined in the installation step.
  prefs: []
  type: TYPE_NORMAL
- en: The applications manager
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Once connected, the applications manager will show up:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The applications manager](img/5401OS_06_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Applications allow you to add new features to Novius OS. For instance, the
    **Blog** application extends the Novius OS core functionalities to add a complete
    blog solution to your website. If you have already used another CMS, Novius OS''s
    applications are synonymous with their modules or extensions. You are recommended
    to read the official documentation about applications and the application manager
    available at the following URLs:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://docs.novius-os.org/en/elche/understand/applications.html](http://docs.novius-os.org/en/elche/understand/applications.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[http://docs.novius-os.org/en/elche/manage/install_app.html](http://docs.novius-os.org/en/elche/manage/install_app.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When you install Novius OS, several applications are already available. However,
    we will see later that it is possible to add other applications or create your
    own. Most Novius OS core features are implemented by native applications, which
    are applications directly included in the core. You can now understand that applications
    are a key feature of Novius OS and that they do most of the work.
  prefs: []
  type: TYPE_NORMAL
- en: 'Right now, most applications are only available but not installed. If you want
    to activate the features of an available application, you have to install it.
    Click on the **Install** button next to **Blog** in order to activate the blog''s
    features. The following message will appear in the upper right corner of the screen:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The applications manager](img/5401OS_06_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Under the **Installed application** section, the following three applications
    will now be displayed:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The applications manager](img/5401OS_06_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: You can see that the **Blog** application was installed, but **BlogNews** and
    **Comments** were also installed along with it. This is because these applications
    are dependencies; the **Blog** application needs both of them. Novius OS allows
    applications to depend on each other and the system tries to manage any potential
    conflict. For instance, you can't uninstall the **BlogNews** application without
    uninstalling the **Blog** application first.
  prefs: []
  type: TYPE_NORMAL
- en: The Novius OS desktop
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To leave the applications manager, click on the Novius OS icon in the upper
    left corner of the screen:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Novius OS desktop](img/5401OS_06_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The Novius OS desktop will now be displayed:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Novius OS desktop](img/5401OS_06_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The desktop displays icons called *launchers* that can be clicked on; they generally
    allow you to access an application. For instance, if you click on **Applications
    manager**, you will return to the screen we saw earlier.
  prefs: []
  type: TYPE_NORMAL
- en: Novius OS' front and the default homepage
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'If you access your website home page (`http://localhost/novius-os`), you will
    only see the default Novius OS homepage, since we didn''t define any content.
    Go back to the administration panel by requesting:'
  prefs: []
  type: TYPE_NORMAL
- en: The Webpages application
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Another important feature of Novius OS is the ability to manage your web pages.
    In order to do this, click on the **Webpages** launcher which will display the
    web pages administration panel. An empty table will appear, with a few buttons
    at the bottom. Click on the **Add a page** button to create your first page. The
    web page creation form will then appear:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Webpages application](img/5401OS_06_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: In this instance, the three fields you should change are the title, content,
    and publication setting.
  prefs: []
  type: TYPE_NORMAL
- en: The title field will define the metadata title of your web page . Generally,
    this title will also be displayed over the web page's content.
  prefs: []
  type: TYPE_NORMAL
- en: The content field will define the core content of your web page. It is a WYSIWYG
    field, so you can also format the text or add images, among other functions.
  prefs: []
  type: TYPE_NORMAL
- en: 'The publication setting allows you to define whether or not the content should
    be visible to visitors. It can be changed using the three small icons under the
    **Title** field:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Webpages application](img/5401OS_06_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'If the left button is set in an active state, as shown in the preceding screenshot,
    the web page won''t be published; that is to say the web page will be invisible
    to visitors. The right button allows you to immediately publish the content (as
    soon as you click on the **Save**/**Add** button). The middle button allows you
    to schedule when your content should be published. Now click on the right button:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Webpages application](img/5401OS_06_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Click on the **Add** button to save the changes and create the new web page.
  prefs: []
  type: TYPE_NORMAL
- en: 'You probably noticed that new tabs appeared in the upper part of the screen
    since we clicked on the **Webpages** launcher:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Webpages application](img/5401OS_06_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The Novius OS interface is designed around tabs. Just like browsers' tabs, Novius
    OS tabs allow you to open multiple administration pages. Though it can be destabilizing
    for new users, this tabs navigation system can be handy when you have to manage
    multiple elements at the same time.
  prefs: []
  type: TYPE_NORMAL
- en: The first tab contains the **Applications manager** application. As we won't
    need it anymore, click on it, and then click on the cross to close it.
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the new first tab (the one without any title), you will now be back
    at the web page administration panel. However, your newly created page will now
    be visible inside the table:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Webpages application](img/5401OS_06_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The house icon next to the web page title indicates that it is the home page.
    We did not specify it, but Novius OS automatically chooses the first created web
    page as the home page.
  prefs: []
  type: TYPE_NORMAL
- en: For each row in the table, you can see there are small buttons in the right
    corner. These buttons allow you to apply individual actions. In our instance,
    the first button allows you to edit the web page, the second to visualize it,
    and the third displays a drop-down that will show even more actions.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you now request the home page (`http://localhost/novius-os`), you will see
    the following screen:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Webpages application](img/5401OS_06_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Our content is visible at the bottom, but there is a lot of sample content too,
    which we would naturally like to remove.
  prefs: []
  type: TYPE_NORMAL
- en: Novius OS templates
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The content you define in a web page is displayed inside a template, in a similar
    way to the views that are displayed inside templates when using the **Template**
    controller in FuelPHP. If you go back to the web page edition form, you will notice
    that there is a field named **Template variations** with its value set to **Bootstrap
    customisable template**. Thus, to remove the sample content, we have to edit the
    **Bootstrap customisable template**.
  prefs: []
  type: TYPE_NORMAL
- en: In order to do this, go back to Novius OS desktop (by clicking on the **NOS**
    icon in the upper left corner of the screen), and then click on the **Template
    Variations** launcher.
  prefs: []
  type: TYPE_NORMAL
- en: '![Novius OS templates](img/5401OS_06_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'We will discuss this administration interface in the next section. First, click
    on the edit button (represented by a pencil icon) in the **Bootstrap customisable
    template** item. A new tab will open, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Novius OS templates](img/5401OS_06_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Each gear icon allows you to edit a specific part of the template. Feel free
    to adapt the template as you wish.
  prefs: []
  type: TYPE_NORMAL
- en: You can also add other template models by installing the **Novius OS default
    templates** application (this one is less configurable), external applications,
    or creating your own application.
  prefs: []
  type: TYPE_NORMAL
- en: 'You will notice that some template parts display the following menu field:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Novius OS templates](img/5401OS_06_15.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The menu field allows you to generate a menu on your website. By default, that
    is to say if no menu is selected, a default menu will be constructed from the
    web pages having the **Shows in the menu** configuration checked (you can change
    this configuration in the web page edition form). You can also create custom menus
    by clicking on the **Website menus** launcher on the administration desktop.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When you are finished changing the template, you will probably need to refresh
    the pages' cache. This can be done by clicking on the link **Renew pages' cache**
    inside the Webpages administration interface. In a general manner, if you see
    that your webpages don't change though you updated their content in the back office,
    it is a good idea to refresh this cache.
  prefs: []
  type: TYPE_NORMAL
- en: The App Desk
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'If you go back to the **Template variations** administration interface (you
    can do this using tabs or by clicking on the **NOS** icon and then clicking on
    the **Template variations** launcher), you will see that the administration panel
    is separated into three parts:'
  prefs: []
  type: TYPE_NORMAL
- en: The upper left part lists all original models of templates.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The upper right part lists all the variations, that is to say the templates
    we adapted for our website.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The bottom part contains the action buttons.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'You can even change how the upper right part is displayed by clicking on the
    top buttons:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The App Desk](img/5401OS_06_16.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Here is how the administration panel is displayed when clicking on the list
    button:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The App Desk](img/5401OS_06_17.jpg)'
  prefs: []
  type: TYPE_IMG
- en: You can notice that the user interface is quite similar to the **Webpages**
    administration interface. Indeed, most applications of Novius OS will have a common
    user interface, as the core provides generic components that can be easily reused.
    The main administration interface, the one you are looking at right now, extends
    the **App Desk** component. With minimal configuration, you can display and manage
    your application's data in an organized and standardized way. For the sake of
    convenience, such administration interfaces are also called App Desk.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is the current standard layout of an App Desk:'
  prefs: []
  type: TYPE_NORMAL
- en: '![The App Desk](img/5401OS_06_18.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'You can notice that there are 3 components, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: The main content is displayed in the main grid. As we saw earlier, it is generally
    possible to display the main grid in different ways (list, thumbnails, hierarchy,
    and so on).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: At the left, the inspectors display related content (categories for blog posts
    for example), and filters the content of the main grid (for example, it can filter
    the blog posts belonging to a specific category).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: At the bottom, buttons allow the user to execute general actions such as creating
    a new item or refreshing a cache. The language select box might also be displayed
    if the content depends on the language (for instance, a blog post will have different
    content in English, French, Spanish, and so on).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You are recommended to take a look at the official documentation about UI guidelines,
    available at [http://docs.novius-os.org/en/elche/understand/ergonomy.html](http://docs.novius-os.org/en/elche/understand/ergonomy.html).
  prefs: []
  type: TYPE_NORMAL
- en: Inserting enhancers in your webpages
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You might recall we installed the **Blog** application earlier. This application
    allows you to insert a complete blog solution in your website. Let's see how it
    is done in Novius OS.
  prefs: []
  type: TYPE_NORMAL
- en: 'First, go back to the **Webpages** administration tab and create a new page
    with its title set to **Blog**. Save and publish it. If you click on the **URL
    (page address)** tab inside the right menu (or accordion), you will see this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Inserting enhancers in your webpages](img/5401OS_06_19.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'This field specifies the relative URL of the web page. In this instance, the
    web page you created can be accessed by entering the following URL:'
  prefs: []
  type: TYPE_NORMAL
- en: '`http://localhost/novius-os/blog.html`'
  prefs: []
  type: TYPE_NORMAL
- en: 'The **Blog** application, as with most Novius OS applications that are displayed
    in the website frontend, can be inserted inside a web page''s content. For doing
    this, click on the **Content** WYSIWYG input. You will see a toolbar appear on
    the top:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Inserting enhancers in your webpages](img/5401OS_06_20.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Click on the **Applications** button, and then on **Blog**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Inserting enhancers in your webpages](img/5401OS_06_21.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'A configuration box will then appear; you don''t have to change anything:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Inserting enhancers in your webpages](img/5401OS_06_22.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'When you click on the **Insert** button, the following box will appear inside
    the WYSIWYG field:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Inserting enhancers in your webpages](img/5401OS_06_23.jpg)'
  prefs: []
  type: TYPE_IMG
- en: This box indicates that the **Blog** application has been inserted into your
    web page. To use the correct term, you inserted the **Blog enhancer**. An enhancer
    is an application component that can be inserted in most WYSIWYG fields in order
    to allow the application to display content in the frontend. There can be several
    enhancers for a single application, as you saw earlier when clicking on the **Applications**
    button; you could choose between **Links to blog posts (e.g. for side column)**
    or **Blog**. Both of these enhancers belong to the **Blog** application, but they
    display the blog differently.
  prefs: []
  type: TYPE_NORMAL
- en: If you request the URL `http://localhost/novius-os/blog.html` again, you will
    not see any changes, and this is normal; you have to create blog posts first.
    In the Novius OS administration panel, go back to the desktop, click on the **Blog**
    launcher, and add several blog posts (don't forget to publish them).
  prefs: []
  type: TYPE_NORMAL
- en: 'If you request the blog web page again, you will see these posts:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Inserting enhancers in your webpages](img/5401OS_06_24.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'You can view a specific blog post by clicking on its title. If you do, you
    will see a more complete view of the post, and the URL will look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`http://localhost/novius-os/blog/POST_TITLE.html`'
  prefs: []
  type: TYPE_NORMAL
- en: As you can see, the **Blog enhancer** not only displays content, but also creates
    additional URLs. This is because it is an URL enhancer, a special type of enhancer
    that can respond to additional URLs. In concrete terms, if an URL enhancer is
    hosted on a webpage located at `http://localhost/novius-os/PAGE.html`, it can
    also respond to any URL similar to `http://localhost/novius-os/PAGE/ANY_STRING.html`.
  prefs: []
  type: TYPE_NORMAL
- en: Of course, the URL enhancer can respond differently to each URL, depending on
    its implementation and configuration.
  prefs: []
  type: TYPE_NORMAL
- en: The Novius OS file system hierarchy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now that we have looked at the basics of Novius OS and its interface, let''s
    dive into the directory in which we have installed Novius OS. At the time of writing,
    the current version of Novius OS (Elche) has the following directory hierarchy:'
  prefs: []
  type: TYPE_NORMAL
- en: '`/local`: This folder contains all code, configuration, and applications that
    are specific to the website. It contains the following folders:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/local/applications`: This folder contains all available non-core applications.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/local/cache`: All files here allows Novius OS and its applications to cache
    data in order to improve the website''s performance.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/local/classes`: This includes classes used by the website that don''t belong
    to the core or any application.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/local/config`: This includes configuration files, including the FuelPHP main
    configuration file and the database configuration file.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/local/data`: These are data files created by Novius OS and its applications.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/local/metadata`: These are files created by Novius OS. Unlike in `/local/data`,
    files inside this folder are only changed when applications are installed, upgraded,
    or uninstalled.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/local/views`: These are the views used by the website. It is possible to
    override applications views by creating files inside this folder.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/logs`: This contain the log files. It is similar to the logs folder of FuelPHP.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/novius-os`: This is the Novius OS core, you should not change anything inside
    it. Among other things, it contains FuelPHP core and packages.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/public`: This directory is accessible by external visitors. You can add publicly
    available files here (CSS, JS...).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Applications folder structure
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Inside the `/local/applications` directory, each folder is an application.
    For your information, you should know that what Novius OS calls applications are,
    in fact, improved FuelPHP modules. If you look inside these folders, you will
    see the following structure:'
  prefs: []
  type: TYPE_NORMAL
- en: '`/classes`: These are the classes used by the application.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/classes/controller`: Application''s controllers.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/classes/menu`: Application''s information about menus.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/classes/model`: Application''s models.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/config`: These are the application''s configuration files. The following
    are the most important ones:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/config/metadata.config.php`: This is the metadata configuration file. It
    contains all the key information about the application: name, icon, description,
    dependencies, launchers, enhancers, and so on.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/config/permissions.config.php`: This allows the application to handle custom
    permissions.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/lang`: Application''s translations files.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/migrations`: Application''s migrations files.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/static`: This is the equivalent of the public folder but specific to the
    application. For instance, if the **Blog** application (located at `local/applications/noviusos_blog`)
    is installed, the `local/applications/noviusos_blog/static/img/blog-16.png` file
    can be accessed at `http://localhost/novius-os/static/apps/noviusos_blog/img/blog-16.png`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/views`: Application''s view files.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Files extensions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You might have noticed that some files have the following suffixes:'
  prefs: []
  type: TYPE_NORMAL
- en: Models' filenames end in `.model.php`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Controllers' filenames end in `.ctrl.php`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configurations' filenames end in `.config.php`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Views' filenames end in `.view.php`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This is a Novius OS convention to enhance the developer's experience. It was
    implemented because often developers named their files using the same filename
    (for instance, a `post.php` controller, a `post.php` view, and a `post.php` configuration
    file) and, if they opened them on multiple tabs on their IDE, most of the time
    they wouldn't know on which tab the file they were looking for was. This is an
    optional convention and it doesn't change the way files are executed.
  prefs: []
  type: TYPE_NORMAL
- en: Configurations and classes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Another important convention involves the configuration and class file's locations.
    As developers very often have to write a configuration for controllers and models,
    the configuration file paths are related to the class file paths. For instance,
    in an application, the `classes/controller/front.ctrl.php` controller can be configured
    using the `config/controller/front.config.php` configuration file. If the controller
    extends one of the default Novius OS controllers, the configuration file will
    will be automatically loaded.
  prefs: []
  type: TYPE_NORMAL
- en: In a general manner, the `config/FILE_PATH` configuration file will be associated
    with the `classes/FILE_PATH` class file. This way, when you want to understand
    an application someone else implemented, you can easily know to which class each
    configuration file is associated with.
  prefs: []
  type: TYPE_NORMAL
- en: Creating an application
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The only way to understand how Novius OS works further is to create an application.
    First, we will generate one application using the Novius OS **'Build you app'**
    wizard, which tries to fulfill the same objective as the `oil generate` utility,
    except it generates Novius OS applications instead of FuelPHP scaffolds. Then,
    we will take a look at most files that were generated and see what happens when
    we tweak them.
  prefs: []
  type: TYPE_NORMAL
- en: Installing the 'Build your app' wizard
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The application is available but needs to be installed. To do this, go to the
    Novius OS desktop, click on the **Applications manager** launcher and, under **Available**
    applications, click on the **Install** button next to **'Build your app' wizard**.
  prefs: []
  type: TYPE_NORMAL
- en: Generating the application
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Go back to the Novius OS desktop and click on the **'Build your app' wizard**
    launcher. A form will appear. As in [Chapter 1](ch01.html "Chapter 1. Building
    Your First FuelPHP Application"), *Building Your First FuelPHP Application*, we
    will generate an application that will manage monkeys in our zoo.
  prefs: []
  type: TYPE_NORMAL
- en: First, under **About the application**, set the **Application name** field's
    value to **My first application**. The **Application** folder and **Application
    namespace** fields should be automatically completed but you can always change
    them if you want.
  prefs: []
  type: TYPE_NORMAL
- en: Next, under **Model**, set the **Name** field to `Monkey`, as we want to generate
    a `Monkey` model. The **Table name** and **Column prefix** fields should be automatically
    completed.
  prefs: []
  type: TYPE_NORMAL
- en: As we want to publish the application's content, check the **URL enhancer**
    checkbox. We also want to choose precisely which monkey we want to display on
    our website, as some might be in the zoo temporarily, so check the **Publishable
    behavior** checkbox. Finally, we want to know which user entered the monkey into
    the application, so check the **Author behavior** checkbox.
  prefs: []
  type: TYPE_NORMAL
- en: 'The form will now look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Generating the application](img/5401OS_06_25.jpg)'
  prefs: []
  type: TYPE_IMG
- en: You can now click on **Next step**.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here, we will define the layout of the administration form (the one we will
    use when creating and editing monkeys). The layout is defined by **Fields** **groups**,
    which can be split into two types:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Main column fields groups**: These contain the most important information
    (or the information that requires the most space) of your model, and thus they
    will always be visible and take most of the form area. Generally, these fields
    groups will contain WYSIWYG editors or very important fields.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Side column fields groups**: These contain secondary information that doesn''t
    need a lot of space. They will appear in the menu (or accordion) on the right
    part of the screen.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The first main column field group named `Properties` is created by default.
    Create a new field group by clicking on **Add another fields group** next to the
    **Next Step** button. Set its **Title** field to `Additional informations` and
    its type to `Side column`. The form should now look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Generating the application](img/5401OS_06_26.jpg)'
  prefs: []
  type: TYPE_IMG
- en: You can now click on **Next step**.
  prefs: []
  type: TYPE_NORMAL
- en: We will now define our model fields and properties. For the first field, define
    its **Label** attribute as `Name`, the **column name** attribute should be autocompleted,
    then check the **Is the form title** checkbox (as this field will be used as a
    title).
  prefs: []
  type: TYPE_NORMAL
- en: Click on **Add another field**. For the new field, define the **Label** attribute
    to `Still here`, select **Checkbox** in the **Type** select box, check the **Shows
    in the** **App Desk** checkbox, and then select **Additional informations (Side
    column)** in the **Fields** group select box.
  prefs: []
  type: TYPE_NORMAL
- en: Click on **Add another field**. For the new field, define the **Label** attribute
    as `Height`, check **Shows in the App Desk** checkbox, and then select **Additional
    informations (Side column)** in the **Fields** group select box.
  prefs: []
  type: TYPE_NORMAL
- en: Click on **Add another field**. For the new field, define the **Label** attribute
    as `Description` and then select **WYSIWYG text editor** in the **Type** select
    box.
  prefs: []
  type: TYPE_NORMAL
- en: 'The end of the form should look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Generating the application](img/5401OS_06_27.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'You can now click on **Next step**. The following dialog box will appear:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Generating the application](img/5401OS_06_28.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Since we want to install this application, don't change anything.
  prefs: []
  type: TYPE_NORMAL
- en: Click on the **Generate** button. You will see a confirmation message appear
    with various links to the documentation to help you improve your generated application.
    You are recommended to take a look at this documentation.
  prefs: []
  type: TYPE_NORMAL
- en: Testing your generated application
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Go back to the Novius OS desktop and click on the **Monkey** launcher. You will
    see an empty **App Desk** appear. Click on the **Add Monkey** button, and the
    creation form will appear as you configured it in the **'Build your app' wizard**
    form. Create as many monkeys as you want and you will see the **App Desk** progressively
    fill up.
  prefs: []
  type: TYPE_NORMAL
- en: Since we checked the **URL enhancer** checkbox, our content is displayable on
    a web page. Go back to Novius OS desktop, click on the **Webpages** launcher,
    and then on the **Add a page** button. Set the web page's title to `Monkey`, set
    its publication status to **Published**. Next, in order to add our application's
    URL enhancer, click on the **Content** WYSIWYG. Next, click on **Applications**,
    and then click on **My first application Monkey**. Finally, save the web page
    by clicking on the **Add** button.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, if you check the URL `http://localhost/novius-os/monkey.html`, you will
    see your list of monkeys:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Testing your generated application](img/5401OS_06_29.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'If you click on an item of the list, a more detailed view will appear:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Testing your generated application](img/5401OS_06_30.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The detailed view''s URL in this case will be as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`http://localhost/novius-os/monkey/my-first-monkey.html`'
  prefs: []
  type: TYPE_NORMAL
- en: As you can see, by using the **'Build your app' wizard** option and by filling
    very few inputs, we created a complete application scaffold. As with the `oil
    generate` utility, you should use the wizard every time you want to implement
    an application because it will speed up your development process and you will
    start on good foundations.
  prefs: []
  type: TYPE_NORMAL
- en: Application basics
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We will use this generated application to describe how an application works
    in Novius OS. We won't go too much into detail, but it should be enough for you
    to get started and know where to look for more information.
  prefs: []
  type: TYPE_NORMAL
- en: The application we generated can be found at the `local/applications/my_first_application`
    directory. All the files we will look into are located inside the folder.
  prefs: []
  type: TYPE_NORMAL
- en: The metadata configuration file
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Where is defined the application's name, its dependencies, icons, launchers,
    enhancers?
  prefs: []
  type: TYPE_NORMAL
- en: All this basic information is contained inside `config/metadata.config.php`.
    This is the only file required to create an application. If you open this configuration
    file, the application's name is defined by the `name` key, its namespace by the
    `namespace` key, its launchers by the `launchers` key. It is pretty straightforward,
    and you can read about it in the official documentation available at [http://docs-api.novius-os.org/en/elche/php/configuration/application/metadata.html](http://docs-api.novius-os.org/en/elche/php/configuration/application/metadata.html).
  prefs: []
  type: TYPE_NORMAL
- en: The migration files
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The migration files are located inside the `migrations` folder, and are executed
    when the application is installed. They can be implemented as normal FuelPHP migration
    files but, if you open `migrations/001_install.php`, you will see that it is empty:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: This is because the `migration` file extends `\Nos\Migration`. By default, the
    `up` method will try to execute a SQL file with a similar filename to the `migration`
    file, in our case `migrations/001_install.sql`. If you open this SQL file, you
    will see that it simply creates the `monkeys` table.
  prefs: []
  type: TYPE_NORMAL
- en: The App desk
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Your application''s App Desk is loaded from the following URL (you can check
    using your browser''s developer tools if you want to):'
  prefs: []
  type: TYPE_NORMAL
- en: '`http://localhost/novius-os/admin/my_first_application/monkey/appdesk`'
  prefs: []
  type: TYPE_NORMAL
- en: In a general manner, when you enter `http://WEBSITE/admin/APPLICATION_FOLDER/CONTROLLER_PATH(/ACTION)`,
    the `ACTION` action of the controller located at `local/applications/APPLICATION_FOLDER/classes/controller/admin/CONTROLLER_PATH`
    will be executed.
  prefs: []
  type: TYPE_NORMAL
- en: 'Thus, in our case, the URL executes the `index` action (because as you may
    recall, when no action is defined in the URL, FuelPHP executes the `index` action)
    of the `controller/admin/monkey/appdesk.ctrl.php` controller inside the `my_first_application`
    application. Let''s open this controller:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Once again, you can see an empty class. All the actions are defined inside the
    `\Nos\Controller_Admin_Appdesk` class that is extended by our controller. Though,
    the returned listing is not automatically generated by some sort of magic process,
    it is generated from configuration files.
  prefs: []
  type: TYPE_NORMAL
- en: 'As you might recall, we wrote earlier that configuration file paths are related
    to the class file paths. Thus, we can find our controller''s configuration file
    at `config/controller/admin/monkey/appdesk.config.php`. If you open this file,
    you will see the following code snippet (comments have been stripped):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'It defines the model that must be displayed by the **App Desk** and which column
    to scan when writing something in the **Search** bar. You can define more keys,
    as inspectors or queries. You are recommended to read the official documentation
    to learn more about this configuration file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://docs-api.novius-os.org/en/elche/php/configuration/application/appdesk.html](http://docs-api.novius-os.org/en/elche/php/configuration/application/appdesk.html)'
  prefs: []
  type: TYPE_NORMAL
- en: 'The configuration defined here is a start, but certainly not sufficient to
    display the whole **App Desk**. Most of the necessary information is defined inside
    the `config/common/monkey.config.php` configuration file (comments have been stripped):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'As you can see, displayed columns are defined inside the `data_mapping` key.
    Each column''s title is defined by the `title` key, except for `publication_status`,
    which is a particular case. The row values are either determined from the key
    or from the `value` callback. In concrete terms, each row of the App Desk will
    display the following properties:'
  prefs: []
  type: TYPE_NORMAL
- en: Under the **Name** column, the `monk_name` property
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Under the **Still here** column, **Yes** or **No** depending on the `monk_still_here`
    property
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Under the **Height** column, the `monk_height` property
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In order to train yourself, try to change a column title or add a `value` callback.
  prefs: []
  type: TYPE_NORMAL
- en: We are just scratching the surface here, it is recommended that you read the
    official documentation at [http://docs-api.novius-os.org/en/elche/php/configuration/application/common.html](http://docs-api.novius-os.org/en/elche/php/configuration/application/common.html).
  prefs: []
  type: TYPE_NORMAL
- en: The edition and creation forms
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If you create or edit a monkey, you will see that Novius OS will request the
    following URL:'
  prefs: []
  type: TYPE_NORMAL
- en: '`http://localhost/novius-os/admin/my_first_application/monkey/crud/insert_update(/ID)`'
  prefs: []
  type: TYPE_NORMAL
- en: Therefore, we can deduce that the `insert_update` action of the `classes/controller/admin/monkey/crud.ctrl.php`
    controller is called. If you open the controller, you will see, you guessed it,
    an empty class. Again, everything is defined inside the extended `\Nos\Controller_Admin_Crud`
    controller.
  prefs: []
  type: TYPE_NORMAL
- en: If you read the associated `config/controller/admin/monkey/crud.config.php`
    configuration file, you will see that it defines the layout and fields of the
    edition and creation forms. All the fields are defined inside the `fields` key.
  prefs: []
  type: TYPE_NORMAL
- en: In order to train yourself, you can change some field labels by editing their
    `label` key.
  prefs: []
  type: TYPE_NORMAL
- en: Again, we are just scratching the surface. It is recommended that you read the
    official documentation at [http://docs-api.novius-os.org/en/elche/php/configuration/application/crud.html](http://docs-api.novius-os.org/en/elche/php/configuration/application/crud.html).
  prefs: []
  type: TYPE_NORMAL
- en: The front controller
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Now that we have seen how things work in the back office, we have to see how
    our URL enhancer works.
  prefs: []
  type: TYPE_NORMAL
- en: 'As you might recall, enhancers are declared inside the `config/metadata.config.php`
    configuration file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Once again, it is recommended that you read the official documentation about
    metadata. The interesting key here is `urlEnhancer`; if you insert an enhancer
    into a web page, each time the web page will be displayed, Novius OS will trigger
    an internal HMVC request to `urlEnhancer` and display the returned content. In
    our case, when you display the `http://localhost/novius-os/monkey.html` web page
    (and the monkey enhancer inside it), Novius OS will internally request `my_first_application/front/monkey/main`
    and display the returned content.
  prefs: []
  type: TYPE_NORMAL
- en: 'As you might have guessed, it calls the `main` action of the `Front_Monkey`
    controller. Open `classes/controller/front/monkey.ctrl.php`, and take a look at
    its `action_main` method. You will see that the method returns either a single
    monkey view or a listing, depending on the `$enhancer_url` variable. This variable
    is defined at the beginning of the action:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s illustrate what the `$this->main_controller->getEnhancerUrl()` method
    returns in our example:'
  prefs: []
  type: TYPE_NORMAL
- en: If you request `http://localhost/novius-os/monkey.html`, it will return an empty
    string
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you request `http://localhost/novius-os/monkey/first.html`, it will return
    `first`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you request `http://localhost/novius-os/monkey/one/two.html`, it will return
    `one/two`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You got it; it allows the controller to know which URL relative to the web page
    URL is being requested when displaying the enhancer. It now makes sense; if you
    request the `monkey.html` root web page, the action will return the listing, otherwise
    it will try to find a monkey with a similar URL.
  prefs: []
  type: TYPE_NORMAL
- en: If you take a look at the `display_list_monkey` and `display_monkey` methods,
    you will hopefully not feel lost, as they contain only FuelPHP code (`ORM`, `View::forge`,
    and so on). You can see that they display the `front/monkey_list` and `front/monkey_item`
    views, respectively, located at `views/front/monkey_list.view.php` and `views/front/monkey_item.view.php`.
    In order to train yourself, you can try to tweak them a little bit.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you edit your views, refresh the web page and nothing happens, you might
    need to refresh the Novius OS web page cache. To do this, go back to the back
    office of Novius OS, open the Webpages App Desk, and click on **Renew pages' cache**
    next to the **Add a page** button.
  prefs: []
  type: TYPE_NORMAL
- en: The `getUrlEnhanced` method inside the Front_Monkey controller allows Novius
    OS to map monkey instances to URL.
  prefs: []
  type: TYPE_NORMAL
- en: Again, we are just scratching the surface here. It is recommended that you read
    the official documentation at [http://docs.novius-os.org/en/latest/app_create/enhancer.html](http://docs.novius-os.org/en/latest/app_create/enhancer.html).
  prefs: []
  type: TYPE_NORMAL
- en: More about Novius OS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We didn''t tackle a lot of very important features such as application extensions,
    behaviors, the twinnable behavior, data sharers, and permissions, but it would
    require writing another book entirely about Novius OS. It is again recommended
    that you read the official documentation to learn more about these features:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://www.novius-os.org/](http://www.novius-os.org/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[http://docs.novius-os.org/en/elche/](http://docs.novius-os.org/en/elche/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[http://docs-api.novius-os.org/en/elche/](http://docs-api.novius-os.org/en/elche/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'If you have any question or encounter issues, you can also seek help in the
    community forum at:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://forums.novius-os.org/en/](http://forums.novius-os.org/en/)'
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You should now have an idea of what you can do using Novius OS. Please note
    that this was just a small introduction: you should read the documentation in
    order to have a better understanding of this promising CMS.'
  prefs: []
  type: TYPE_NORMAL
- en: During this journey, by implementing various projects, we illustrated how we
    can use the main FuelPHP features to build robust, complex and yet efficient applications.
  prefs: []
  type: TYPE_NORMAL
- en: Most of all, I hope you enjoyed reading this book and learned some valuable
    skills.
  prefs: []
  type: TYPE_NORMAL
- en: Don't hesitate to send me an e-mail or tweet me if you need help on anything
    from the book or the FuelPHP framework.
  prefs: []
  type: TYPE_NORMAL
- en: Thank you very much for your interest.
  prefs: []
  type: TYPE_NORMAL
