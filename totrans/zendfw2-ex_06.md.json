["```php\n    \"require\": {\n        \"php\": \">=5.3.3\",\n        \"zendframework/zendframework\": \"2.0.*\",\n        \"webino/webino-image-thumb\": \"1.*\",\n    }\n    ```", "```php\n    $ php composer.phar update\n    Loading composer repositories with package information\n    Updating dependencies\n     - Installing webino/webino-image-thumb (1.0.0)\n     Downloading: 100%\n\n    Writing lock file\n    Generating autoload files\n\n    ```", "```php\n    return array(\n        'modules' => array(\n            'Application',\n          'WebinoImageThumb',\n        'Users',\n        ),\n    ```", "```php\n          CREATE TABLE IF NOT EXISTS image_uploads (\n            id INT NOT NULL AUTO_INCREMENT PRIMARY KEY ,\n            filename VARCHAR( 255 ) NOT NULL ,\n            thumbnail VARCHAR( 255 ) NOT NULL ,\n            label VARCHAR( 255 ) NOT NULL ,\n            user_id INT NOT NULL,\n            UNIQUE KEY (filename)\n          );\n    ```", "```php\n        public function generateThumbnail($imageFileName) \n        {\n          $path = $this->getFileUploadLocation();\n          $sourceImageFileName = $path . '/' . $imageFileName;\n          $thumbnailFileName = 'tn_' . $imageFileName;\n\n          $imageThumb = $this->getServiceLocator()\n                ->get('WebinoImageThumb');\n          $thumb = $imageThumb->create($sourceImageFileName, $options = array());\n     $thumb->resize(75, 75);\n     $thumb->save($path . '/' . $thumbnailFileName);\n\n          return $thumbnailFileName;\n      }\n    ```", "```php\n        'media' => array(\n          'type'    => 'Segment',\n          'options' => array(\n     'route'    => '/media[/:action[/:id[/:subaction]]]',\n            'constraints' => array(\n     'action'     => '[a-zA-Z][a-zA-Z0-9_-]*',\n     'id'     => '[a-zA-Z0-9_-]*',\n     'subaction'     => '[a-zA-Z][a-zA-Z0-9_-]*',\n\n            ),\n            'defaults' => array(\n              'controller' => 'Users\\Controller\\MediaManager',\n              'action'     => 'index',\n            ),\n          ),\n        ),   \n    ```", "```php\n        public function showImageAction()\n        {  \n          $uploadId = $this->params()->fromRoute('id');\n          $uploadTable = $this->getServiceLocator()\n              ->get('ImageUploadTable');\n          $upload = $uploadTable->getUpload($uploadId);\n\n          // Fetch Configuration from Module Config\n          $uploadPath    = $this->getFileUploadLocation();\n     if ($this->params()->fromRoute('subaction') == 'thumb') \n     {\n     $filename = $uploadPath .\"/\" . $upload->thumbnail;\n     } else {\n     $filename = $uploadPath .\"/\" . $upload->filename;\n     }\n          $file = file_get_contents($filename);\n\n          // Directly return the Response \n          $response = $this->getEvent()->getResponse();\n          $response->getHeaders()->addHeaders(array(\n            'Content-Type' => 'application/octet-stream',\n            'Content-Disposition' => 'attachment;filename=\"' .$upload->filename . '\"',\n\n          ));\n          $response->setContent($file);\n          return $response;\t    \n        }\n    ```", "```php\n        <section class=\"upload\">\n        <h2><?php echo $this->escapeHtml($upload->label);?></h2>\n        <h4><?php echo $this->escapeHtml($upload->filename);?></h4>\n     <img src=\"<?php echo $this->url('users/media',\n     array('action'=>'showImage', \n     'id' => $upload->id, \n     'subaction' => 'full'));?>\" />\n        </section>\n        <a href=\"<?php echo $this->url('users/media');?>\">\n              &raquo; Show Gallery</a>\n    ```", "```php\n    \"zendframework/zendgdata\": \"2.*\"\n\n    ```", "```php\n    $ php composer.phar update\n\n    ```", "```php\n\"zendframework/zendgdata\": \"2.*\"\n$ php composer.phar update\n\n```", "```php\n        $adapter = new \\Zend\\Http\\Client\\Adapter\\Curl();\n        $adapter->setOptions(array(\n          'curloptions' => array(\n            CURLOPT_SSL_VERIFYPEER => false,\n          )\n        ));\n\n        $httpClient = new \\ZendGData\\HttpClient();\n        $httpClient->setAdapter($adapter);\n\n        $client = \\ZendGData\\ClientLogin::getHttpClient(\n                self::GOOGLE_USER_ID, \n                self::GOOGLE_PASSWORD, \n                \\ZendGData\\Photos::AUTH_SERVICE_NAME, \n                $httpClient);\n    ```", "```php\n        $gp = new \\ZendGData\\Photos($client);\n    ```", "```php\n        $userFeed = $gp->getUserFeed( self::GOOGLE_USER_ID );\n        foreach ($userFeed as $userEntry) {\n\n          $albumId = $userEntry->getGphotoId()->getText();\n          $gAlbums[$albumId]['label'] = $userEntry->getTitle()->getText();\n\n          $query = $gp->newAlbumQuery();\n          $query->setUser( self::GOOGLE_USER_ID );\n          $query->setAlbumId( $albumId  );\n          $albumFeed = $gp->getAlbumFeed($query);\n          foreach ($albumFeed as $photoEntry) {\n            $photoId = $photoEntry->getGphotoId()->getText();\n            if ($photoEntry->getMediaGroup()->getContent() != null) {\n              $mediaContentArray = $photoEntry->getMediaGroup()->getContent();\n              $photoUrl = $mediaContentArray[0]->getUrl();\n            }\n\n            if ($photoEntry->getMediaGroup()->getThumbnail() != null) {\n              $mediaThumbnailArray = $photoEntry->getMediaGroup()->getThumbnail();\n              $thumbUrl = $mediaThumbnailArray[0]->getUrl();\n            }\n\n            $albumPhoto = array();\n            $albumPhoto['id'] = $photoId;\n            $albumPhoto['photoUrl'] = $photoUrl;\n            $albumPhoto['thumbUrl'] = $thumbUrl;\n\n            $gAlbums[$albumId]['photos'][] =$albumPhoto;   \n          }\n        }\n    // Return the consolidated array back to the view for rendering\n    return $gAlbums;\n    ```", "```php\n        <?php foreach ($googleAlbums as $googleAlbum) : ?>\n        <h4> <?php echo $this->escapeHtml($googleAlbum['label']);?> </h4>\n        <?php foreach ($googleAlbum['photos'] as $googleAlbumPhoto) : ?>\n          <div class = \"googleAlbumPhoto\" style=\"padding:10px; display:inline\">\n            <a href=\"<?php echo $this->escapeHtml($googleAlbumPhoto['photoUrl']);?>\">\n            <img src=\"img/<?php echo $this->escapeHtml($googleAlbumPhoto['thumbUrl']);?>\" />\n            </a> \n          </div>\n          <?php endforeach; ?>\n        <?php endforeach; ?>\n        <hr />\n    ```", "```php\n      $adapter = new \\Zend\\Http\\Client\\Adapter\\Curl();\n      $adapter->setOptions(array(\n        'curloptions' => array(\n          CURLOPT_SSL_VERIFYPEER => false,\n        )\n      ));\n\n      $httpClient = new \\ZendGData\\HttpClient();\n      $httpClient->setAdapter($adapter);\n\n      $client = \\ZendGData\\ClientLogin::getHttpClient(\n        self::GOOGLE_USER_ID,\n        self::GOOGLE_PASSWORD,\n        \\ZendGData\\YouTube::AUTH_SERVICE_NAME,\n        $httpClient);      \n    ```", "```php\n      $yt = new \\ZendGData\\YouTube($client);\n      $yt->setMajorProtocolVersion(2);\n      $query = $yt->newVideoQuery();\n      $query->setOrderBy('relevance');\n      $query->setSafeSearch('none');\n      $query->setVideoQuery('Zend Framework');    \n    ```", "```php\n      $videoFeed = $yt->getVideoFeed($query->getQueryUrl(2));\n\n      $yVideos = array();\n      foreach ($videoFeed as $videoEntry) {\n         $yVideo = array();\n         $yVideo['videoTitle'] = $videoEntry->getVideoTitle();\n         $yVideo['videoDescription'] = $videoEntry->getVideoDescription();\n         $yVideo['watchPage'] = $videoEntry->getVideoWatchPageUrl();\n         $yVideo['duration'] = $videoEntry->getVideoDuration();\n         $videoThumbnails = $videoEntry->getVideoThumbnails();\n\n         $yVideo['thumbnailUrl'] = $videoThumbnails[0]['url'];\n         $yVideos[] = $yVideo;\n      }\n      return $yVideos;\n    ```"]