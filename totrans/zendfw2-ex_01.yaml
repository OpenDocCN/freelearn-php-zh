- en: Chapter 1. Getting Started with Zend Framework 2.0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*In this chapter we will get our development environment set up and configured
    in order to start development with Zend Framework 2.0\. We will set up a PHP Application
    Server, install MySQL, and create a development database that will be used in
    subsequent chapters for our Zend Framework learning exercises. So, let''s get
    started.*'
  prefs: []
  type: TYPE_NORMAL
- en: Zend Framework 2.0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The last major release of Zend Framework, which happened in 2007, was version
    1.0; during the last five years, Zend Framework has undergone a lot of changes
    to be a successful PHP-based framework. But by merely updating the framework,
    Zend Framework has retained some of the issues that were inherently present in
    Zend Framework 1.0.
  prefs: []
  type: TYPE_NORMAL
- en: 'Zend Framework 2.0 is an attempt to make Zend Framework better by rearchitecting
    the framework right from the core. Some of the key features of Zend Framework
    2.0 over its previous version are listed as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: PHP 5.3 features such as namespaces and closures
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A modular application architecture
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Event manager
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dependency Injection (DI)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We will get to know about implementing the new features of Zend Framework 2.0
    in the coming chapters.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter we will cover the installation and configuration of some of
    the prerequisites of Zend Framework 2.0\. ZF2 can be installed on most PHP-enabled
    web servers that support PHP 5.3.3 or later.
  prefs: []
  type: TYPE_NORMAL
- en: We have used Zend Server Community Edition as our default web server; however,
    any other PHP stack that supports PHP 5.3.3 can be used. Alternatively, you can
    also download Apache and PHP separately and install PHP over Apache.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To simplify the installation process, I am using Linux as the primary development
    environment in this book. All the tools used in this book are available for Windows
    and can be used to perform the same activity.
  prefs: []
  type: TYPE_NORMAL
- en: Introduction to Zend Server Community Edition (CE)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Zend Server Community Edition is the free version of the popular Zend Server
    stack. The Zend Server stack provides a pre-integrated PHP application stack that
    could be used across development, testing, and production. This enables application
    development teams to have a consistent environment across all stages of development.
  prefs: []
  type: TYPE_NORMAL
- en: Zend Server CE also provides features such as Zend Optimizer+ for PHP bytecode
    caching and Zend Guard for encoding files.
  prefs: []
  type: TYPE_NORMAL
- en: Zend Server CE – system requirements
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Zend Server offers installers for Windows, Mac OS X, and a universal installation
    package compatible with most Linux distributions.
  prefs: []
  type: TYPE_NORMAL
- en: More details on the installation requirements can be found at [http://www.zend.com/en/products/server/system-requirements](http://www.zend.com/en/products/server/system-requirements).
  prefs: []
  type: TYPE_NORMAL
- en: Time for action – installing Zend Server CE
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Our next step will be to download and install Zend Server CE; I am running
    Ubuntu 12.04 Precise Pangolin. The installation procedure for other operating
    systems could be different; you can always refer to the Zend Server website for
    installation instructions. The following are the steps to install the Zend Server
    CE:'
  prefs: []
  type: TYPE_NORMAL
- en: Visit the Zend Server Community Edition website ([http://www.zend.com/en/community/zend-server-ce](http://www.zend.com/en/community/zend-server-ce))
    and download the latest version of Zend Server that is applicable to your operating
    system. In this case, we will be downloading the Linux installer.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the installer is downloaded, extract the contents of the installer to
    a temporary location:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'After extracting, the installer needs to be started with administrator privileges:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: We are passing two parameters to the installer. The first one is the version
    of PHP that needs to be installed; in this case it is `5.3`. The second parameter
    identifies the edition of Zend Server that needs to be installed; in this case
    it is `ce` for Community Edition.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: During the installation, the installer will request you to download various
    packages:![Time for action – installing Zend Server CE](img/1929_01_01_1.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Zend Server will be installed into `/usr/local/zend` by default; the default
    document root will point to `/var/www`. You can use the following files to make
    configuration changes to the Zend Server instance:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Apache master configuration is available in `/etc/apache2/apache2.conf`
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: PHP configuration is controlled by `/var/local/zend/etc/php.ini`
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following screenshot shows the installed location of Zend Server:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Time for action – installing Zend Server CE](img/1929_01_02_1.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Once the installation is completed, you should be able to open `http://localhost`
    on your web browser. This should take you to a test page like the one shown in
    the following screenshot:![Time for action – installing Zend Server CE](img/1929_01_03_1.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To restart Zend Server, use the `$ sudo service zend-server restart` command.
  prefs: []
  type: TYPE_NORMAL
- en: '*What just happened?*'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Zend Server CE is installed and ready to be used. Now we have a web server and
    a compatible version of PHP running—this satisfies the core requirements for running
    Zend Framework 2.0.
  prefs: []
  type: TYPE_NORMAL
- en: Have a go hero
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We will be using Git to check out Zend Framework from Github; one of the major
    changes that happened to Zend Framework 2.0 is that the source control has changed
    from SVN to Git.
  prefs: []
  type: TYPE_NORMAL
- en: Your next task will be to install Git. We will be making use of Git when we
    are setting up our Zend Framework project.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Git binaries can either be downloaded from [http://www.git-scm.com/](http://www.git-scm.com/)
    or installed from your operating system's repositories.
  prefs: []
  type: TYPE_NORMAL
- en: 'Installation instructions for Git can be found at the following link:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://git-scm.com/book/en/Getting-Started-Installing-Git](http://git-scm.com/book/en/Getting-Started-Installing-Git)'
  prefs: []
  type: TYPE_NORMAL
- en: Configuring Zend Server CE
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Our next step will be to set up Zend Server CE and make some configuration changes
    that will enable us to run other PHP applications.
  prefs: []
  type: TYPE_NORMAL
- en: Zend Server CE – Administration Interface
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Zend Server CE''s Administration Interface is a web-based user interface that
    provides the following features:'
  prefs: []
  type: TYPE_NORMAL
- en: Managing PHP extensions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring PHP directives
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Managing Zend Server components
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Monitoring PHP status, extension status, and application/server logs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In our next task, we will be making a configuration change to Zend Server by
    using its Administration Interface.
  prefs: []
  type: TYPE_NORMAL
- en: Time for action – configuring Zend Server CE
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Zend Server needs to be configured after the installation is completed.
    The following are the steps for configuring Zend Server CE:'
  prefs: []
  type: TYPE_NORMAL
- en: Open the admin console of Zend Server in your default browser (`http://localhost:10081/`).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: The Zend Server UI console runs on port 10081 while the web server runs on port
    80\. This is why we need to implicitly specify the port number in the URL for
    accessing the UI console.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: When opening the Zend Server Administration Interface for the first time, you
    will be presented with a configuration wizard. Review and accept the terms and
    conditions of Zend's **End User License Agreement** page:![Time for action – configuring
    Zend Server CE](img/1929_01_04_1.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: As shown in the following screenshot, you will be asked to set the password
    for the Zend Server installation:![Time for action – configuring Zend Server CE](img/1929_01_05_1.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After the initial configuration wizard is completed, you will be redirected
    to the Zend Server Administration Interface's home page.![Time for action – configuring
    Zend Server CE](img/1929_01_06_1.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'We need to set the session save path. In order to do this, perform the following
    steps:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Navigate to **Directives** in **Server Setup**.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Search for `session.save_path`.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Set the value to `/tmp`.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Save Changes** and then **Restart PHP**.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Time for action – configuring Zend Server CE](img/1929_01_07_1.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '*What just happened?*'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We have successfully modified a server configuration using Zend Server's Administration
    Interface and we have restarted the PHP instance running on Zend Server.
  prefs: []
  type: TYPE_NORMAL
- en: MySQL
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: MySQL doesn't need an introduction—it is the world's most widely used open source
    database application. It's free and is available on the Internet to individuals
    and businesses that wish to develop their websites and applications using the
    MySQL database.
  prefs: []
  type: TYPE_NORMAL
- en: Zend Framework 2.0 has driver support for MySQL along with SQLite, PostgreSQL,
    and Microsoft SQL Server.
  prefs: []
  type: TYPE_NORMAL
- en: Our next exercise will be to install MySQL on our development machine. MySQL
    is available for download from all Linux repositories. Windows and Mac users will
    have to download the installer from the MySQL website ([http://dev.mysql.com/downloads/](http://dev.mysql.com/downloads/)).
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Windows and Mac users can skip this section if they have chosen to install MySQL
    Server as a part of their Zend Server CE installation. The Zend Server installer
    allows Windows and Mac users to download and install MySQL Server as a part of
    the installation.
  prefs: []
  type: TYPE_NORMAL
- en: Time for action – installing MySQL
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'MySQL Server and Client need to be installed using the following steps; we
    will be using MySQL as our primary database in this book:'
  prefs: []
  type: TYPE_NORMAL
- en: 'In a standard Ubuntu installation, MySQL can be installed by executing the
    following command in the shell prompt:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'After the installation is complete, MySQL Server will start automatically.
    To check if MySQL Server is running, run the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The command should give an output that is similar to the following; this means
    that the MySQL daemon is running:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'If, for some reason, MySQL Server is not running, you can start the server
    by running the `restart` command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '*What just happened?*'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We have just installed MySQL; we have the LAMP stack ready too. Our next step
    will be to create a database in MySQL Server.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Since we are using Zend Server, we don't need to install the `php5-mysql` package.
    If you are using a stack that doesn't have MySQL support enabled by default, you
    will have to install the necessary packages manually.
  prefs: []
  type: TYPE_NORMAL
- en: Have a go hero
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Having gone through this section, feel free to attempt the task in the following
    section.
  prefs: []
  type: TYPE_NORMAL
- en: phpMyAdmin
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: phpMyAdmin is a free, open source web-based database administration tool written
    in PHP. phpMyAdmin provides a web-based UI to manage MySQL Database Server; add
    / remove / manage databases, users, privileges; and so on. In this book, we will
    be using phpMyAdmin as the database Administration Interface for managing our
    database(s).
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have Apache, PHP, and MySQL installed, our next step will be to
    create a blank database in MySQL Server.
  prefs: []
  type: TYPE_NORMAL
- en: For doing this, we need to install and configure phpMyAdmin in the Zend Server.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: phpMyAdmin can either be downloaded from [http://www.phpmyadmin.net/](http://www.phpmyadmin.net/)
    or installed from your operating system's repositories.
  prefs: []
  type: TYPE_NORMAL
- en: 'Installation instructions for phpMyAdmin can be found at the following link:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://docs.phpmyadmin.net/en/latest/setup.html](http://docs.phpmyadmin.net/en/latest/setup.html)'
  prefs: []
  type: TYPE_NORMAL
- en: In our next task we will be creating a MySQL database, creating users in the
    MySQL server and also grant them access permissions to connect to the database
    and perform database operations.
  prefs: []
  type: TYPE_NORMAL
- en: Time for action – creating a database
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To create a new database, open an instance of phpMyAdmin in your web browser
    and follow the steps described here:'
  prefs: []
  type: TYPE_NORMAL
- en: Open phpMyAdmin in your web browser by visiting `http://localhost/phpmyadmin`:![Time
    for action – creating a database](img/1929_01_09_1.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choose **Databases**, enter the name of the new database as `zf_app` in **Create
    new database**, and click on **Create**:![Time for action – creating a database](img/1929_01_10_1.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'After creating the database, create a database user for this database; this
    can be done by selecting **Add a new user** from **Privileges**. Provide the following
    details:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '| User field | Value |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| --- | --- |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| **User** **name** | `zf_user` |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| **Host** | `localhost` |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| **Password** | `zf_pass` |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: 'After doing this you will get the following screen:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Time for action – creating a database](img/1929_01_11_1.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: After the user is created, go to the **Privileges** section and choose **Edit
    Privileges** for the `zf_user`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the **Database-specific privileges** section, select the `zf_app` database.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You will be redirected to the privileges section of the `zf_app` database for
    the `zf_user` user. Choose **Check All** and click on **Go**.![Time for action
    – creating a database](img/1929_01_12_1.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can now test the database by logging out of phpMyAdmin and logging in again
    with the user credentials of `zf_user`. You should now be able to see only the
    `zf_app` database.
  prefs: []
  type: TYPE_NORMAL
- en: '*What just happened?*'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We just created our first database in MySQL. We have also created a user in
    the database and mapped the user to the database with administrative rights; we
    can now use these credentials in the application that we will be building in our
    next chapters.
  prefs: []
  type: TYPE_NORMAL
- en: Have a go hero
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now that you have the PHP web server up and running and also have a MySQL database,
    create a simple table called `Students` and add a few records to the table using
    phpMyAdmin.
  prefs: []
  type: TYPE_NORMAL
- en: Your task will be to create a simple PHP web page that will display all the
    records in the `Students` table in the page.
  prefs: []
  type: TYPE_NORMAL
- en: Pop quiz – Zend Framework 2.0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Q1\. What is the minimum version of PHP needed to run Zend Framework 2.0?
  prefs: []
  type: TYPE_NORMAL
- en: PHP 4.3 and above
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: PHP 5.2.0 and above
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: PHP 5.3.3 and above
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: PHP 5.4.7 and above
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Q2\. What is the default location of `php.ini` in the new Zend Server installation?
  prefs: []
  type: TYPE_NORMAL
- en: '`/home/<user>/etc/php/php.inc`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`/etc/php/php.ini`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`/var/www/php.ini`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`/usr/local/zend/etc/php.ini`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter we have learned the setup and configuration of Zend Server's
    PHP application stack. We went on to install MySQL Server and created our first
    database. In your exercises, you have learned about the installation of Git and
    phpMyAdmin.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will learn about the structure of a Zend Framework project
    and core MVC components such as views and controllers.
  prefs: []
  type: TYPE_NORMAL
