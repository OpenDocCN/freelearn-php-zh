["```php\n    $this->load->model('some_model');\n    $this->load->library('some_library', $keyed_array);\n    $this->load->helper('some_helper');\n    ```", "```php\n        public function get_something () {\n          $some_data= $this->_get_it ();\n          }\n        private function _get_it () {\n          return= 'hello';\n          }\n        ```", "```php\n        $status= $this->some_model->save_data($table, $row);$rows= $this->some_model->get_table($table_name);\n        ```", "```php\n        $another_data = $this->some_library->method($some_data);\n        ```", "```php\n        $your_ip =get_your_ip();  // myhtml_helper function\n        // NOTE: a helper defines regular functions!\n\n        ```", "```php\n    http://mydomain.com/my_ci_project.\n\n    ```", "```php\n    $route ['default_controller'] = \"maincontroller\";\n\n    ```", "```php\n    http://mydomain.com/my_ci_project will be routed by the CI routes \n    ```", "```php\n    http://mydomain.com/my_ci_project/maincontroller\n    ```", "```php\n    <?PHP echo anchor \n        'Navigate me to page B'); ?>\n\n    ```", "```php\n    <script type=\"text/javascript\">\n    function autocomplete(clue_val) {\n      varurl = '<?php echo site_url(); ?>/AJAX_controller/autocomplete_name';\n      $AJAX ({type: \"POST\", url: url, data: {clue: clue_val},\n        dataType: \"json\", success: function(data) {\n          // show the data of matching names\n          }\n        return;\n        });\n    ```", "```php\n    <?PHP\n    function file_get_contents_curl($url) {\n      $ch = curl_init();\n      curl_setopt($ch, CURLOPT_HEADER, 0);\n      curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n      curl_setopt($ch, CURLOPT_URL, $url);\n      $data = curl_exec($ch);\n      curl_close($ch);\n      return $data;\n      }\n    $http_to_execut='http://myCIproject/mycontroller/mymethod';\n    $result = file_get_contents_curl ($http_to_execute);\n    ```", "```php\n<?php\nclass Home_page extends CI_Controller\n{\n  function __construct() {\n    parent::__construct();\n    $this->load->helper ('validators_helper');\n    $this->load->helper ('dates_time_helper');\n    }\n  public function index() {\n    $data = array ();\n    $data ['email'] = $email = \"the@email.com\";\n    // validators_helpercalls\n    $data ['email_valid'] = isValidEmail($email);\n    $data ['url'] = $url = \"http://cnn.com\";\n    $data ['url_valid'] = isValidURL($url);\n    $data ['url_exist'] = isURLExists($url);\n    $this->load->view('home_page_view', $data);\n    }\n  publicfunction page_b () {\n    $data = array ();\n    $myqsl_date = \"1970-01-01\";\n    // dates_time_helper calls\n    $data ['since'] = ui_date ($myqsl_date);\n    $data ['past'] = getAgeAccurate ($myqsl_date, $percision = 2);\n    $this->load->view ('page_b_view', $data);\n    }\n  }\n// End controller\n```", "```php\n<!DOCTYPE html>\n<meta content=\"text/html; charset=utf-8\"/>\n<?PHP\n/* data from controller\n$email, $email_valid, $url, $url_valid , $url_exist\n*/\n$validation_text = ($email_valid) ? \"Is Valid \": \"Is Not Valid!\";\n$validation_url = ($url_valid) ? \"Is Valid \": \"Is Not Valid!\";\n$exist_url = ($url_exist) ? \"Exist \": \"Not exist!\"; ?>\n<body style=\"text-align: left; color: blue;\">\n<H1>Main Page</H1>\n<HR></HR>\n<div style = \"float: left\">\nThe Email: <? = $email; ?><? = $validation_text; ?>\n</div>\n<div style = \"clear: both;\"></div>\n<HR></HR>\n<div>\nThe url: <? = $url; ?><? = $validation_url; ?> and <? = $exist_url; ?>\n<? = anchor ($url, '[visit the url]', array (\"target\" => \"_blank\", \"title\" => \"opens a new Tab\")); ?>\n</div>\n<div style = \"clear: both;\"></div>\n<HR></HR>\n<?php echo anchor ('home_page/page_b', 'Navigate me to page B') ?>\n</body>\n</html>\n```", "```php\n<!DOCTYPE html>\n<meta content=\"text/html; charset=utf-8\" />\n<?PHP\n/* data from controller $since, $past */ ?>\n<body style = \"text-align: left; color: blue;\">\n<H1>Page B</H1>\n<HR></HR>\n<div style = \"float: left\">\n<!We render the provided controller parameters $since & $past>\nSince: <? = $since; ?> past<? = $past; ?> years</div>\n<div style = \"clear: both;\"></div>\n<HR></HR>\n<?php echo anchor ('home_page', 'Back to Home Page') ?>\n</body>\n</html>\n```", "```php\nFor example, $route['default_controller'] = \"home_page\";.\n```", "```php\nclass Email extends CI_Controller\n// The controller/email.php file will contain this class\n{\n  function __construct()\n  {\n // call the parent constructor to inherit all its services\n    parent::__construct();\n // Loads the CI e-mail library, so that it will be instantiated // and its methods will be accessed, as $this->mail->METHOD_NAME.\n    $this->load->library('email');\n    }\n // Define the controller methodindex (the default method), so that referring to the URI mydomain.com/myproject/email will execute the index method call\n  function index() {\n // Configure the library to work with UTF-8 strings // multi-language support, as well as enable HTML content body.\n    $config['charset'] = 'utf-8';\n    $config['mailtype'] = 'html';\n\n // Loads the configuration settings by initialize method\n    $this->email->initialize($config);\n // Since the mail body is HTML, define CR/LF to be // replaced with HTML <BR/>\n    $this->email->set_newline(\"<BR/>\");\n // Define the 'From' Email address\n    $this->email->from('eliorr@phpmyqsl.com', 'Eli Orr');\n\n // Define the 'To' Email/s\n    $this->email->to (array('\"Name 1\" <name1@name.com>', '\"Name 2\" <name2@name.com>'));\n // Set the e-mail subject\n    $this->email->subject (\"This is the Subject â€“ can be ANY UTF-8 chars\");\n // Define the e-mail body in HTML format, as we set the message to be HTML typed\n    $this->email->message\n    ('<H1>Hello there!<H1/>\n    <p>\n    This Email is sent from CI via its cool e-mail library)<BR/>\n    <font color=green size=3><b>See Attached Files</b></font><BR/>\n    Attachedfiles: <BR/>\n    <ul>\n    <li> 1 - File One.</li>\n    <li> 2 - Second File </li>\n    </p>\n    );\n\n // Load the attachments\n    $path = $this->doc_root_path ();\n // Doc root For example, /home/yourdomain.com/public_html\n // Let say attachment under public_html as /attachments\n    $attachment_path1 = $path.\"/attachments/file1.jpg\";\n    $attachment_path2 = $path.\"/attachments/file2.php\";\n\n // Set the two attachment file paths\n    $this->email->attach($attachment_path1);\n    $this->email->attach($attachment_path2);\n\n // We have the e-mail object ready! Let us send it!\n // execute send and check the result status\n    if ($this->email->send())\n    {\n // The e-mail was sent successfully.\n      echo 'Your email was sent!';\n      }\n    else {\n // We had some problems, let's show what was wrong\n      echo $this->email->print_debugger();\n      }\n    }\n  functiondoc_root_path () {\n    // An auxiliary method for calculating attachment // file path in our server \n    return $doc_root = $_SERVER[\"DOCUMENT_ROOT\"];\n    }\n  }\n```", "```php\n$config['sess_use_database'] = TRUE;\n/* Enforce storing sessions data in the database */\n\n```", "```php\n$autoload['libraries'] = array('database', 'session', 'xmlrpc');\n\n```", "```php\nclass Auth extends CI_Controller {\n  function __construct() {\n    parent::__construct\n    $this->load->helper ('form');\n    $this->load->model ('users_model');\n    }\n  // called with auth is called with no specific method and // simply calls the login method\n  function index() {\n    $this->login();\n    }\n  functionlogin()\n  {\n    // The message to user in case of login failure\n    $msg = \"\";\n    if ($this->input->post('password'))\n    {\n      // The caller is from the form submission \n      // we will check credentials validity using the local method // check_login.\n      $stat = $this->check_login();\n      // Extract failure message to user if any\n      $msg = $stat ['msg' ];\n      if($stat['result'] == 'ok')\n      {\n        // Successful login!\n        // See what We have\n        // admin_user or regular user?\n        if ($this->session->userdata ('role') == 'admin_user')\n        // Issue the controller for admin user main menu\n        redirect('auth/admin_main_menu');\n        else\n        // Issue regular user main menu controller\n        redirect('auth/user_main_menu');\n        return;\n        }\n      }\n    else {\n      // rendered with no submission \n      // let's destroy any previous session and challenge again // the user\n      $this->session->sess_destroy();\n      }\n    // We can get here due to login failure or referring to auth // controller without any active submission.\n    // Keep the msg return from the model into view view_setup\n    ['msg'] = $msg; \n    // render the login view to challenge the user\n    $this->load->view('login_view.php', $view_setup);\n    }\n  functioncheck_login() {\n    // Extract the credentials from the submitted login_viewform\n    $user_name = $this->input->post('user_name');\n    $password = $this->input->post('password');\n    // init an array to return\n    $ret = array ();\n    // Check if login is ok and get the $row using the loaded // users_model model.\n    $user_record = $this->users_model->check_login ($user_name, $password);\n    if ($user_record) {\n      // User passed credentials checkup successfully\n      // We have the user record. Let's use it to extract info // for the logged session buildup\n      $this->session->set_userdata ('user_id', $user_record->id);\n      $this->session->set_userdata ('user_name', $user_record->user_name);\n      $this->session->set_userdata ('role', $user_record->role);\n      $ret ['result'] = 'ok'; $ret ['msg' ] = 'Logged-in!';\n      }\n    else {\n    // login failed!\n    $ret ['result'] = 'notok';\n    // inform the login form to alert user for the failure\n    $ret ['msg' ] = 'Invalid User/Pass - Try Again!';\n    }\n  return $ret;\n  }\n// logout method called auth/logout\nfunction logout() {\n  // destroy the current session\n  $this->session->sess_destroy();\n  redirect('auth');\n  }\nfunctionadmin_main_menu() {\n  // Shall render an admin main menu page\n  $view_setup ['uid'] = $this->session->userdata ('user_id');\n  $view_setup ['user_name'] = $this->session->userdata ('user_name');\n  $view_setup ['role'] = $this->session->userdata ('role');\n  $view_setup ['menu'] = \"Add User/Modify User/Delete User\";\n  $this->load->view ('logged_in_view.php', $view_setup);\n  }\n\nfunctionuser_main_menu() {\n  // Shall render a regular user\n  $view_setup ['uid'] = $this->session->userdata ('user_id');\n  $view_setup ['user_name']= $this->session->userdata ('user_name');\n  $view_setup ['role']= $this->session->userdata ('role');\n  $view_setup ['menu']= \"View Content/Modify Your Account/Logout\";\n  $this->load->view ('logged_in_view.php', $view_setup);\n  }\n}\n```", "```php\nclass Users_model extends CI_Model {\n  function __construct()\n  {\n    parent::__construct();\n    }\n  functioncheck_login ($user, $pass)\n  {\n // Important notice.\n // Since the model extends the base CI model, it already got the // instance. However, we can use the $ci = &get_instance(); instead // $this-> anywhere in helpers, libraries, and so on.\n  // convert the typed password in the login form to md5, same as // we do, when opening a user account.\n  $md5_pass = md5($pass);\n  // build up the query \n  $sql = \"SELECT * FROM users WHERE user_name = '$user' AND password = '$md5_pass' \";\n  $q = $this->db->query($sql);\n  if ($q->num_rows()) {\n    foreach ($q->result() as $row)\n    return $row;\n    }\n  // In case no num_rows: return NULL;\n  }\n}\n```", "```php\n-- phpMyAdmin SQL Dump\n-- http://www.phpmyadmin.net\nSET SQL_MODE=\"NO_AUTO_VALUE_ON_ZERO\";\nSET time_zone = \"+00:00\";\n--\n-- Table structure for table `users`\n--\nCREATE TABLE IF NOT EXISTS `users` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `user_name` varchar(128) NOT NULL,\n  `password` varchar(128) NOT NULL,\n  `role` varchar(128) NOT NULL,\n  PRIMARY KEY (`id`)\n  ) ENGINE=MyISAM DEFAULT CHARSET = utf8 AUTO_INCREMENT = 3;\n--\n-- Dumping data for table users\n--\nINSERT INTO `users` (`id`, `user_name`, `password`, `role`)\nVALUES (1, 'reg_user', 'bbb8aae57c104cda40c93843ad5e6db8', 'regular_user'), (2, 'admin_user', '0d777e9e30b918e9034ab610712c90cf', 'admin_user');\n```", "```php\n<!DOCTYPE html\">\n<meta http-equiv = \"Content-type\" content = \"text/html; charset=utf-8\"/>\n<html>\n<head>\n<script src = http://code.jquery.com/jquery-latest.js type = 'text/javascript'></script>\n</head>\n<body>\n<H1>Login Here</H1>\n<!â€”Building the login form using the form helper-->\n<?php\n// Define the form attributes\n// We will use the 'form' helper 'auth' will // be called on submission only, if check_if_valid()// will return true!\n$submit_attributes = array('onsubmit' =>\"return check_if_valid();\", 'id' => 'auth');\nechoform_open('auth', $submit_attributes);\necho \"<table><tr><td>\";\n// The attributes of the <input tag>\nechoform_label(\"User Name\");\necho \"</td><td>\";\nechoform_input(array('name' => 'user_name', 'value' => ''));\necho \"</td><td>\";\n\n// The error message holders â€“ hidden by default echo\n<label id='user_name_err' style = 'color:red; display:none'>name is too short </label>\";\necho \"</td></tr><tr><td>';\nechoform_label(\"Password\");\necho \"</td><td>\";\nechoform_password(\"password\",\"\");\necho \"</td><td>\";\n// The error message holders â€“ hidden by default echo\n<label id='password_err' style = 'color: red; display: none'> password is too short </label>\";\necho \"</td></tr>\";\necho \"</table>\";\n// The submit button echo\nform_input(array('type' => 'submit', 'value' =>'Login'));\nechoform_close(); ?>\n<HR></HR>\n<!-- Server Credentials failure message -->\n<p style = \"color: red\"><?php echo $msg; ?></p>\n</body>\n<!-- Local JavaScript service -->\n<script type='text/javascript'>\nfunctioncheck_if_valid() {\n  var submit = true;\n  varuser_name = $('[name=\"user_name\"]').val();\n  var password = $('[name=\"password\"]').val();\n  if (user_name.length< 2) {\n    $('#user_name_err').show();\n    submit = false;\n    }\n  else $('#user_name_err').hide();\n  if (password.length< 6) {\n    $('#password_err').show();\n    submit = false;\n    }\n  else $('#password_err').hide();\n  return submit;\n  }\n</script>\n</html>\n```", "```php\n<!DOCTYPE html\">\n<meta http-equiv = \"Content-type\" content = \"text/html; charset<!DOCTYPE html\">\n<meta http-equiv = \"Content-type\" content = \"text/html; charset=utf-8\"/>\n<html>\n<body>\n<H1>Welcome <? = $user_name; ?>!</H1>\n<H1>You are logged in!</H1>\n<HR></HR>\n<H3>Your User ID is: <? = $uid; ?></H3>\n<H3>Your System Role is:<? = $role; ?></H3>\n<H3>Your Menu options: <? = $menu; ?></H3>\n<?php echo anchor ('auth/logout', 'Logout') ?>\n</body>\n</html>\n```"]