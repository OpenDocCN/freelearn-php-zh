- en: Building a WordPress Theme for Photo Gallery
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we''ll build a WordPress theme for a photo gallery. We''ll
    use just the core WordPress post system, and we''ll not need any kind of third-party
    photo gallery. The following image is what it''s going to look like; it''s called
    *PhotoGenik*. This is the theme we are going to work on:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/b3bcc05b-6c6f-4ef3-a0d4-1261eb244e19.png)'
  prefs: []
  type: TYPE_IMG
- en: 'As shown in the preceding screenshot, you can see on the home page we have
    some images. If we hover over them we get a nice effect, and if we click on one
    it brings us to the single image page where it has a little animation that comes
    in. It also gives us the title, description, and then we have some meta info as
    shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/fd789a60-23f4-47d6-9b91-3782901e4cb2.png)'
  prefs: []
  type: TYPE_IMG
- en: On the left-hand side at the top in the preceding screenshot, we have the core
    categories module. When we click on that, and you can see it only shows the pictures
    from that category, and they have a nice fade-in effect. We also have the Search
    bar on the right-hand side at the top. In the search box we can just type in,
    let's say one of the titles of the images, and search; that particular image will
    come up.
  prefs: []
  type: TYPE_NORMAL
- en: For this project, we are going to be using the W3.CSS framework ([https://www.w3schools.com/w3css/default.asp](https://www.w3schools.com/w3css/default.asp)),
    which is pretty similar to Bootstrap. It's really easy to work with, and it provides
    a lot of nice-looking elements that you can see on the W3.CSS page. The animations
    that we have is actually coming from this framework, and there are some JavaScript
    widgets that we'll get into.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the backend (refer to the following screenshot), if we look at our Posts,
    you can see we have each photo has its own post:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/7c512409-9d41-4f6d-9ed3-f0f3c59fa2ec.png)'
  prefs: []
  type: TYPE_IMG
- en: 'If we click on the post, we''ll find what we''re using is the featured image:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/bafa2fd4-e1b5-4663-aa50-d0dfb39ba5ae.png)'
  prefs: []
  type: TYPE_IMG
- en: 'So all we have to do is upload a feature image, give it a title, description,
    and choose the Gallery format, and it''ll show up:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/29986edd-17f6-447c-ab3e-48aed90e5c4f.png)'
  prefs: []
  type: TYPE_IMG
- en: In our case, we'll have a custom gallery post format, and you can also use the
    standard format for just regular posts as well.
  prefs: []
  type: TYPE_NORMAL
- en: That's what we'll be doing. Let's go ahead and get started.
  prefs: []
  type: TYPE_NORMAL
- en: Creating the layout of the home page in HTML and CSS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now before we get into building a photo gallery theme for WordPress, we''ll
    create the layout in HTML. As explained in the introduction, we''ll use the W3.CSS
    framework to create this layout. For this, first we''ll create a new folder and
    call it `photogenik_html`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/fc70e369-a743-4c47-9bbf-d56ddd6e41bc.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Next, inside the folder, we''ll create a couple of files and folders. We''ll
    create the `index.html`, `style.css`, and `single.html` files and also have a
    folder called `images`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/0d87501e-9645-46bb-b08a-8316f1a5b025.png)'
  prefs: []
  type: TYPE_IMG
- en: The `single.html` file is going to represent the single image. Once we click
    on one of the images in the gallery, it'll take us into this folder.
  prefs: []
  type: TYPE_NORMAL
- en: Creating the HTML layout
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now, let''s open up the `index.html` file with Sublime Text, or of course,
    whichever editor you''d like, and we''ll get a base HTML structure in the editor:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, in this HTML layout first, we''ll add `PhotoGenik` in the title:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Since we''re using the W3.CSS framework, we have to include the stylesheet.
    So we''re just going to use the CDN here. For this, we''ll add the following style
    sheet link next to the title in the HTML layout:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'We also want to include our own CSS file as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: So that's `style.css`. Now that's all we need in the head.
  prefs: []
  type: TYPE_NORMAL
- en: Creating the header
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The next thing we want to do is to create the header. To create this, follow
    these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'First, we''ll use the HTML5 `<header>` tag as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Some of this HTML layout might change once we are actually building the WordPress
    theme, just to adapt to the WordPress conventions.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, we''ll give this header a class. If we take a look at the documentation
    page ([https://www.w3schools.com/w3css/default.asp](https://www.w3schools.com/w3css/default.asp))
    for the framework and go to W3.CSS Containers, it should have headers class as
    shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/bc40e50e-3174-48fc-a534-bc247fedecb3.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now to make the header a class, copy the header class syntax from the containers
    documentation page ([https://www.w3schools.com/w3css/w3css_containers.asp](https://www.w3schools.com/w3css/w3css_containers.asp))
    and paste it in our HTML header as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s make sure that everything is actually working so far. For this, we''ll
    open the `index.html` file with Chrome, and as shown in the following screenshot,
    we''ll find our `Heading`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/738fe134-c6c8-4b7c-86f7-3b691a233c22.png)'
  prefs: []
  type: TYPE_IMG
- en: So we have our heading. In the next subsection, we will use the grid system.
  prefs: []
  type: TYPE_NORMAL
- en: Adding the title and search box
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you've used Bootstrap, Foundation, or any one of those CSS HTML frameworks,
    then you know what the grid system is. Basically, the **grid system** gives us
    12 columns across, and we can set certain divs or certain elements to span across
    a certain amount of columns.
  prefs: []
  type: TYPE_NORMAL
- en: 'If we go to our documentation page and then go to W3.CSS Grid ([https://www.w3schools.com/w3css/w3css_grid.asp](https://www.w3schools.com/w3css/w3css_grid.asp)),
    you''ll see the syntax we''d need as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/221e0de3-ffc4-43fe-8f89-025fd3d17ab2.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Copy the example row shown in the preceding screenshot, and paste this right
    in the header as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Firstly, for the first `w3-col` class, we''ll change `l3` to `l9` (this is
    for **large 9**). We use `l9` for large screens and `m4` for medium screens. However,
    here we''ll just keep the same for both—9 columns. The second `w3-col` class will
    have `m3` and `l3` as shown in the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, we can get rid of the paragraphs inside of the `w3-col` classes as shown
    here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Inside the first `w3-col` class, we are going to add the heading, so this will
    be `<h1>` and say `PhotoGenik`, and put a `<span>` tag around the word `Photo`
    because we''ll make that a different color:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Then inside of the second `w3-col` class, we''ll have our input, and that''s
    going to have its own class of `w3-input`. We''ll give it a `type` of `text` and
    then give it a placeholder—`Search...`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s take a look at that by reloading the page:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/8c9b4421-6362-4ac7-bec1-c7e32a18b6cd.png)'
  prefs: []
  type: TYPE_IMG
- en: Shifting the search box
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now, I want to bring the search box down. For this, we''ll go to our `style.css`
    file. In the `style.css` file, we''ll add `header input` with `margin-top` of
    value `15px`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, reload our WordPress page and you can see our header as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/40bfd0e7-ed6a-4f98-8fec-f4c81e591f7f.png)'
  prefs: []
  type: TYPE_IMG
- en: Adding the sidebar and main area
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Next we want the sidebar and main area, so we'll use the grid for that as well.
    First, we'll look into the sidebar and then get into the main area.
  prefs: []
  type: TYPE_NORMAL
- en: Adding the sidebar
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In the `index.html` file, copy the `w3-col` classes and put that down under
    the header as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'Because we want the sidebar on the left, we''ll switch the columns, and then
    we can just get rid of the content inside as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'For the three columns (the first `w3-col` class in the preceding code), we''ll
    add a list of categories. So let''s add `<ul>` and give it a class of `w3-ul`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'Then inside `<ul>`, we''ll have the `<li>` tags with links. The first one will
    say `Nature` and these are just going to be categories. Similarly, we''ll add
    `Animals`, `Objects`, `People`, and `Abstract` as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s save this, take a look at the page, and we can see our categories:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/3a1e6190-6f44-4bd3-a48e-27c23763a688.png)'
  prefs: []
  type: TYPE_IMG
- en: Changing the color of the background and text of the sidebar
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now we want the background to be black and the text to be white, so let''s
    go to our stylesheet and just add some core styles there. The first thing we''ll
    add is `body`, and we''ll give it a background of black and a color of white:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'Then for the links I want to take the underline away, so we''ll add `text-decoration:
    none`. For the list items (`li`), we don''t want to have any bullets so we''ll
    add `list-style: none`. For the input, we want the text to be in a dark color,
    so let''s add `color: #333` as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s save this, and we can see the changes as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4a0485fd-750a-43e1-9181-45466c31d6f9.png)'
  prefs: []
  type: TYPE_IMG
- en: Adding the main area
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For the main area, we''ll put another grid inside of the present grid. We''ll
    add three images in a row. In the `index.html` file, we''ll copy the `w3-row`
    class with the columns and paste this inside of the second `w3-col` class in the
    header:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, we''ll get rid of the `<h1>` and `<input>` content. Then we''ll change
    both of the columns to `m4` and `l4` as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 'We''ll need one more column, so I''m going to copy one of the `w3-col` classes
    and paste that in as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: Adding images to the column
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now, we have three columns, so we need an image inside there and then also
    text underneath the images. Now as far as the images go, you should have those
    in your project files. So, I have added some black and white images and they''re
    named `1.jpg` through `6.jpg` as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c96bf3aa-6520-41a8-92b8-65c35a7f9b9c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Let''s go back to our code editor and add the `<image>` tag. We''ll point to
    each one, so add `src` and then that''s going to go to `images/1.jpg`. We''ll
    also have a paragraph underneath with some sample text as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: 'We''ll need to do this for all of our columns as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 'We''ll save it, reload our page, and can see the images as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c1a83ee7-3aee-4630-b042-eaed9f55ccc9.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now we need to set the width of these images to a 100% of their container because
    as shown in the preceding screenshot, they''re busting out of their container.
    So in the `style.css` sheet, we''ll add the image and set `width` to `100%`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'If we go and reload our page, we''ll see the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/790560b5-491d-4a18-a074-739f9d023b68.png)'
  prefs: []
  type: TYPE_IMG
- en: 'These are all fit nice and neat. In order for us to get more images, we have
    to put in some more rows. In the `index.html` file, copy the three divs we have
    defined and just put that right underneath the previously added `<img>` tags.
    We''ll then change the image source filenames to `4.jpg`, `5.jpg`, and `6.jpg`.
    We also want to center the text underneath the images as well. So in each `<div>`
    tag, we''ll also going to add a class of `pic`, so that each picture div has its
    own class as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, in the `style.css`, we''ll add `.pic` and `text-align: center`, as shown
    in this code, so that the text below the images look aligned:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: 'If we now go and reload our page, we can see in the following screenshot that
    we have six images and our text is aligned:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4be41467-281b-41f3-8ff2-28c10806be0c.png)'
  prefs: []
  type: TYPE_IMG
- en: Adding a footer in the main area
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now down at the bottom of the page, we want a simple footer. To add this, in
    the `index.html` file, we''ll go after the last div, add `<footer>`, and then
    add a paragraph. We''ll add `PhotoGenik` and a copyright symbol 2017 as shown
    here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s save this. In the stylesheet, add `footer` with the `text-align`, `margin-top`,
    and `border-top` properties set to appropriate values, as shown in the following
    code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: 'Save and reload the page, and now we have our footer as shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/907304b6-ad6b-4457-bc2f-2420be43808d.png)'
  prefs: []
  type: TYPE_IMG
- en: In the next section, we'll implement animation and also create our `single.html`
    page.
  prefs: []
  type: TYPE_NORMAL
- en: Implementing the animation and single.html page
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we want to implement the animation, which is going to be very
    simple. We're using the W3.CSS framework that has built-in animation.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s take a look at the W3.CSS animation page ([https://www.w3schools.com/w3css/w3css_animate.asp](https://www.w3schools.com/w3css/w3css_animate.asp))
    as shown in the following screenshot. We can see the different types of animations:'
  prefs: []
  type: TYPE_NORMAL
- en: Top
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bottom
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Left
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Right
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fade In
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zoom
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Spin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/c4c57a5e-fa48-428c-9b84-fb35c12ca65d.png)'
  prefs: []
  type: TYPE_IMG
- en: Implementing the Fade In animation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now using the different type of animations, we want to change the theme of
    our WordPress home page. First, we want to fade in the photos on the home page.
    For this, we will need the fade in class shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9636e04d-236e-495a-88d4-c2aec17817be.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Let''s copy `class="w3-animate-opacity"` and go to the `index.html` page, and
    on each `<image>` tag paste this in as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: Let's refresh the home page, and you will see that the images just fade in.
  prefs: []
  type: TYPE_NORMAL
- en: Creating animation on the single page
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now, we will use an animation on the `single.html` page. Open the `single.html`
    file with the Sublime Text editor.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, we will link each of the images on the home page to the `single.html`
    page. We''ll just link the first one here. In the `index.html` page, put the `<a>`
    tag that will go to `single.html` as shown in the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: You could put this tag for the rest of the images if you want, but it doesn't
    really matter. This is just the HTML; this isn't the actual theme.
  prefs: []
  type: TYPE_NORMAL
- en: Refresh the home page and click on the first image. This will take us to the
    `single.html` page. We will now copy the code that's in `index.html` and put it
    in the `single.html` page.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, we will empty up the 9-column div, everything else is going to stay the
    same. After removing the 9-column div, our code will look like this in the `single.html`
    page:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: Adding a single image for animation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now, in the 9-column div in the `single.html` page, we will put our single
    image. For this, first we will put an `<article>` tag and give it a class of `post`.
    Then add a paragraph with the class of `meta`, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, add `Posted at 2:00pm on 03-29-2017 by Brad` in the `meta` class:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: 'After this, put `<hr />` and then the actual image by adding `src="img/1.jpg"`.
    As we want this image to animate, we will give it a class of `w3-animate-right`,
    as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: 'Then under this image, we will add another row, `w3-row`, and a column, `w3-col`,
    with `l2`; this column is where we will put the `Back` button. Then we''ll add
    a column with `l10` as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: 'Now in column `l2`, let''s put a line break `<br />` and then add a link that
    will go back to the `index.html` page. We will give the link the `w3-btn` and
    `w3-red` classes to format it as a button as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: 'Then in column `l10`, we''ll add `Photo Title` and also the description. In
    the description, just paste a sample text in as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s save this code and go back to `single.html` in the browser. We can see
    the image comes in from the right-hand side:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/77f5eedf-25dd-46b1-bffb-24c3b6739cdf.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now, as shown in the preceding screenshot, we can find that the columns are
    too close. You can see they''re up against each other. So, we will add some padding
    to the `post` class that we specified for the `<article>` element. For this, add
    `padding:20px` in the `style.css` file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: 'Also, we will add the class of `pic` to that main image as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: 'Now you can see that the photo actually fits in there, and we''re not right
    up against the side column:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/5dd444ff-429b-4ff3-b2c8-4b99160d34f0.png)'
  prefs: []
  type: TYPE_IMG
- en: So we have the title, description, and the Back button on the main image. In
    the next section, we're ready to start creating our WordPress theme.
  prefs: []
  type: TYPE_NORMAL
- en: Adding the theme header and footer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In the previous section, we went ahead and finished up the HTML template. We''re
    now ready to convert that template into a WordPress theme. Here we have a fresh
    installation of WordPress:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/22bd8f10-3c63-4a1d-9cd3-627453bfe88d.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We''ll use this as our starting point. In the editor, open the `wpthemes` folder
    as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9e3bf629-31f7-4713-9c1f-734cc73a4b36.png)'
  prefs: []
  type: TYPE_IMG
- en: Creating a theme inside the wpthemes folder
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We''ll start with creating a theme inside the `themes` folder, which is inside
    the `wp-content` folder, called `photogenik`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/dbd89cee-1ccc-40ff-9a39-61934d4408a5.png)'
  prefs: []
  type: TYPE_IMG
- en: Adding a theme
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The first thing we will create in the `photogenik` folder is a `style.css`
    file. This is where we will put all of our theme data. In the `style.css` file,
    we will put a comment and format it like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/df65882a-a3f2-47c1-b3bd-bf3a4be31f3f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Add a few details in this comment. These are:'
  prefs: []
  type: TYPE_NORMAL
- en: '`Theme Name`: This will be `PhotoGenik`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Author`: You can put your own name here'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Author URI`: You can put whatever you want here. Here we will put `http://eduonix.com`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Description`: For the description we''ll add `Photo gallery theme`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Version`: This will be `1.0.0`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: 'After this create an `index.php` file. Save this and we will now be able to
    see it inside our admin area. Let''s now reload and go to Appearance | Themes
    as shown in the following screenshot. You can see we have the theme PhotoGenik:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/27ff635f-e9f2-49fd-9c64-1a28313968b0.png)'
  prefs: []
  type: TYPE_IMG
- en: Next, we will upload a screenshot for the theme. For this, go to the `xampp`
    folder or wherever your WordPress installation is.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here, we''ll go to `wpthemes\wp-content\themes\photogenik` and paste it. When
    you want to use a screenshot, it should be named as `screenshot.png`. Reload the
    Themes page, and you will see a little screenshot as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/68fa7e93-3697-4a50-95d5-c46f1e178ee9.png)'
  prefs: []
  type: TYPE_IMG
- en: Activating the theme
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now, let's activate this theme by pressing the Activate button on the theme.
    If we go to the frontend page and reload it, we're obviously not going to get
    anything there.
  prefs: []
  type: TYPE_NORMAL
- en: 'The first thing to do in this case is to put in the style, the CSS. We will
    open the stylesheet (`style.css`) from our HTML template, copy its code, and then
    put it right under the comment we have added earlier:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: If we go to the frontend page and reload it, it's still not going to make any
    change in our frontend page because we have nothing in our `index.php` file.
  prefs: []
  type: TYPE_NORMAL
- en: 'Open the `index.php` file, paste everything that we have in our `index.html`
    file, and save it. After this, if we go and reload the frontend page, it will
    show us the static HTML:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c11cef38-8c34-42e5-81da-bd6e907340e9.png)'
  prefs: []
  type: TYPE_IMG
- en: Now, none of this static HTML is coming from WordPress. We will slowly convert
    it from static markup to WordPress.
  prefs: []
  type: TYPE_NORMAL
- en: Converting static markup to WordPress
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let''s go to the top of the `index.php` page, and the first thing will do is
    include the correct style sheets in the code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: 'We will take out the `style.css` from the `href` link in the preceding code
    and replace it with `php bloginfo();`. In the parentheses, we''ll add `stylesheet_url`
    as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: 'Save this, go to the frontend page, and reload it. You will now see the stylesheet
    is included as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/0ef1279a-ff97-4bd3-8ce3-a523d4563b32.png)'
  prefs: []
  type: TYPE_IMG
- en: You might not see the images because the path is wrong. We'll look into that
    in a later section.
  prefs: []
  type: TYPE_NORMAL
- en: Adding the wp_head function
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now another thing we want to put in the head is the `wp_head` function. Here,
    we can add any head content that we need, for example an extra style sheet for
    a WordPress plugin. So we will add `<?php wp_head(); ?>` as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: 'We also want the character set. In the head, we will add `<meta charset="<?php
    bloginfo(); ?>">`. Then inside the parentheses, we''ll add `charset` as shown
    here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, we will make `<h1>` inside the header dynamic. We''ll add `<?php bloginfo('''');
    ?>` and pass in `name` as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s save that and see what that gives us by reloading the frontend page:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/8ba59cb8-21d1-4257-94ad-a0f0103fd0ae.png)'
  prefs: []
  type: TYPE_IMG
- en: As shown in the preceding screenshot, our code is going to give us whatever
    the site name is; in our case, it is WordPress Themes, which we can change inside
    the admin area.
  prefs: []
  type: TYPE_NORMAL
- en: Adding the body_class function
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For the body, we''ll include the `body_class` function:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: For now, we will leave the main content as it is.
  prefs: []
  type: TYPE_NORMAL
- en: Adding the footer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We will add `<?php bloginfo(''name''); ?>` to the footer, as we did in `<h1>`.
    This will give whatever the name of the blog is; in our case, it is `WordPress
    Themes`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: Splitting the header and footer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now, we will split our `index.php` file into a header and footer file. Inside
    the `photogenik` folder, we will create two new files called `header.php` and
    `footer.php`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s figure out what we need to put in the `header.php` file. We will add
    the following code from our `index.php` file into the `header.php` file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: 'For the footer, we will cut the following code from `index.php`, put that in
    `footer.php`, and save it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: 'After splitting the header and footer code, the remaining code inside the `index.php`
    file will look like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: 'If we reload now, you can see as shown in the following screenshot that all
    we''re getting is the `index.php` file:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/1600537d-2230-4978-83d7-0b1e403717fd.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We need to include the header and footer in the `index.php` file, so let''s
    do that next. For header, we need to add `<?php get_header(); ?>` at the top of
    the code as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs: []
  type: TYPE_PRE
- en: 'Then we will do the same thing for the footer. We will add `<?php get_footer();
    ?>` at the end of the code as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs: []
  type: TYPE_PRE
- en: 'If we go back and reload our frontend page, you can see that it''s back to
    normal:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/07a0bbd7-7dd2-48a6-9fe5-3a9de0d1e099.png)'
  prefs: []
  type: TYPE_IMG
- en: Changing the site name
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To change the name of the site, in the backend page, we''ll go to the Settings
    section and select General:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f1c20dcd-9dc5-4983-ab2e-1f08ea313482.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Here, we''ll change Site Title from `Wordpress Themes` to `PhotoGenik` and
    save the changes. When we reload the frontend page, and the changes should reflect
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/8154c80c-448f-47c7-a0ae-058210f3b2d6.png)'
  prefs: []
  type: TYPE_IMG
- en: In the next section, we will look at the content in the posts because that's
    what we want the post to be showing in the index. Okay, so we'll get to that next.
  prefs: []
  type: TYPE_NORMAL
- en: The post loop
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In the previous section, we created the header and footer files and included
    them in the `index.php` file. In this section, we will work on the main post area.
    So far, we have a bunch of static HTML which we need to change. We will have two
    types of posts:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Regular post**: This will be a standard blog post with a title and paragraph'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Gallery post**: This will have the image with the description underneath'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We will add support for content or post formats. So what we need to do is create
    a `functions.php` file inside our `photogenik` theme.
  prefs: []
  type: TYPE_NORMAL
- en: Adding the theme support function
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We will create a function to set up certain support for our theme. For instance,
    to be able to use the featured image or thumbnails. In `function.php`, we''ll
    add a comment `Theme Support` and declare the `theme_setup` function as shown
    here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE53]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, when we go to a post as shown in the following screenshot, we don''t have
    a Featured Image box below the Tags section. That''s what we will add inside the
    function:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/8e8be39a-c8ab-493f-a74d-cb432a2d703a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'To set up the featured image support, we''ll add `add_theme_support` inside
    the `theme_setup` function. Then, inside the parentheses, we will add `post-thumbnails`
    as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs: []
  type: TYPE_PRE
- en: 'For the thumbnail size, we will put the max image size because we''ll use CSS
    to shrink the images down. Next, to the `theme_setup` function we''ll add `set_post_thumbnail_size`
    with size 900 x 600, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE55]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, we will add our gallery post format support. We will use the same `add_theme_support`
    function we used earlier, except we will replace `post-thumbnails` with `post-formats`.
    Then for the second parameter, we will put in an array of the formats we want
    to include. All we want besides the standard format is the `gallery` format, so
    we will put in `gallery` as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE56]'
  prefs: []
  type: TYPE_PRE
- en: Passing the function into action
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now that we have the `theme_setup` function, we need to pass this function
    into an action. So let''s add `add_action` and the action will be `after_setup_theme`.
    The second parameter will be the function we want to run, which is `theme_setup`
    as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE57]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, let''s save this code and reload the backend page. As shown in the following
    screenshot, you will now see that we have the Featured Image section under the
    Tags section, and we also have support for the gallery format:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/b7df0c39-7e24-453e-bd18-dd5f10ee9e74.png)'
  prefs: []
  type: TYPE_IMG
- en: Now since we have both standard and gallery formats, we need to create the two
    different files for the content. In the `photogenik` folder create one file for
    content, as `content.php`, and another for gallery, as `content-gallery.php`.
  prefs: []
  type: TYPE_NORMAL
- en: Before we actually work on these files, we will simplify our `index.php` file.
  prefs: []
  type: TYPE_NORMAL
- en: Working on index.php for the content post
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To simplify the `index.php` file, open the file in the editor and get rid of
    all the code present in it except the `<?php get_header(); ?>` and `<?php get_footer();
    ?>` lines. This is how our `index.php` will look like:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE58]'
  prefs: []
  type: TYPE_PRE
- en: 'We will then check for posts and if there are posts, loop through them and
    spit out the correct content file. Now, we will add `<?php if(have_posts()) :
    ?>` and then we''ll use the shorthand syntax as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE59]'
  prefs: []
  type: TYPE_PRE
- en: Adding the while loop for the post
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If there are posts then we want to loop through them. We can use a `while`
    loop to do that. So, inside the `if` statement, we''ll add `<?php while(have_posts())
    : the_post(); ?>`. Then end the `while` loop by adding `<?php endwhile; ?>` as
    shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE60]'
  prefs: []
  type: TYPE_PRE
- en: 'While it has post, we want to spit out the content file, whether it''s `content.php`
    or `content-gallery.php` that pertains to whatever format we choose in the post.
    So, we''ll add `<?php get_template_part(); ?>` inside the `while` loop. Next,
    pass in `content` and for the second parameter, pass `get_post_format()`. This
    will determine whether the post is a gallery or just a standard post. Here is
    how our code will look like:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE61]'
  prefs: []
  type: TYPE_PRE
- en: Adding an else statement
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Next, we will add an `else` statement to the `if` statement we have defined,
    which will come into the picture if there are no posts. If there are no posts,
    we will echo a message saying `Sorry, there are no posts`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE62]'
  prefs: []
  type: TYPE_PRE
- en: 'Now let''s save the `index.php` file. For the content files, we''ll add `STANDARD
    CONTENT` in the `content.php` file as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/bee23ffb-471c-4391-818d-598d2621289d.png)'
  prefs: []
  type: TYPE_IMG
- en: 'And add `PHOTO` in the `content-gallery.php` file, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/875bf6ae-77da-4b27-8ff7-5ad0e98a5ae4.png)'
  prefs: []
  type: TYPE_IMG
- en: 'If we go to the frontend page and reload it, we get STANDARD CONTENT because
    if we look at our posts, we just have one post, `Hello world!`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9bafc8ed-d870-4d18-bdb9-66cac6432529.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now add another post named `Test`, choose the Gallery format for this post,
    and publish it:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/5c104456-2026-4871-828d-2594690d323a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Reload the frontend page, and you can now see that we get PHOTO STANDARD CONTENT:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/42965e50-ac68-4090-9568-671012da986b.png)'
  prefs: []
  type: TYPE_IMG
- en: So that's our two posts. They're on the same line but this is actually two different
    posts. We now know that our code is working. In the next section, we'll work on
    both of the photo and standard content files so that we can output the posts correctly.
  prefs: []
  type: TYPE_NORMAL
- en: Displaying the post content
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we'll work on the content pages, both the regular post content
    and also the gallery.
  prefs: []
  type: TYPE_NORMAL
- en: Adding a regular post content
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For adding a regular post, we''ll start with the `content.php` file in the
    editor. We''ll add title, metadata, thumbnail, and lastly, the main content to
    the post. To start with, we will create an `article` tag and give it a class of
    `post`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE63]'
  prefs: []
  type: TYPE_PRE
- en: Adding a title to the regular post content
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Next, we need the title. We will put the title inside of an `<h2></h2>` tag.
    We can get the title by adding `<?php echo the_title(); ?>`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE64]'
  prefs: []
  type: TYPE_PRE
- en: 'Just to check, reload the main page and you can see with the regular content
    posts we actually get the title:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e8a04887-6898-4836-9bdc-b232a0755759.png)'
  prefs: []
  type: TYPE_IMG
- en: Adding metadata
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Next, we will add the metadata. Let''s put that in a paragraph with a class
    called `meta` as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE65]'
  prefs: []
  type: TYPE_PRE
- en: 'In the `meta` class, we will add `Posted at` and then get the date and time.
    To get the date and time, we will add `<?php the_time(); ?>` and `<?php the_data();
    ?>` respectively:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE66]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, we want to add the user''s name, and we will put that in a link. For
    this, we will add `<a href=""> </a>`, add the `php` tag, and echo out `get_author_posts_url()`
    as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE67]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, we need to put the ID for the author, which we can add with `get_the_author_meta()`
    and pass in `ID`. This will get us the author''s ID. Then for the actual text,
    we will add `<?php the_author(); ?>`, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE68]'
  prefs: []
  type: TYPE_PRE
- en: 'If we check it out, we''ll see the page as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/24f7a976-8d6b-4409-8ff1-e666d68681ee.png)'
  prefs: []
  type: TYPE_IMG
- en: This shows Posted at 1:55 am on December 22, 2017 by admin.
  prefs: []
  type: TYPE_NORMAL
- en: Checking the thumbnail in content post
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Next, what we''ll do is check to see if there''s a thumbnail or a featured
    image. For this, we''ll add an `if` statement:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE69]'
  prefs: []
  type: TYPE_PRE
- en: 'In the `if` statement, add `has_post_thumbnail()` and let''s end the `if` statement
    as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE70]'
  prefs: []
  type: TYPE_PRE
- en: 'If there''s a thumbnail, we''ll create `<div>` and give it a class of `post-thumbnail`.
    In `<div>` we''ll add `<?php the_post_thumbnail(); ?>` as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE71]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, under the `if` block add a `<br />` tag, and then we will need the main
    content which is really easy; we can just add `<?php the_content(); ?>` as shown
    here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE72]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s save this and reload the home page, and you can see that we have the
    title, metadata, and content of that post as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/78a24b73-c0ee-48fc-863b-c06cf5635fe7.png)'
  prefs: []
  type: TYPE_IMG
- en: Adding a gallery post
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For the gallery post, the code is going to be a little different. We will start
    with the `content-gallery.php` page.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s just take a look at our `index.html` page that we created in the earlier
    section. Similar to the `index.html` page, we will add a 4-column `<div>` in the
    `content-gallery.php` page. We will give `<div>` a class of `w3-col m4 l4 pic`
    as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE73]'
  prefs: []
  type: TYPE_PRE
- en: Checking the thumbnail in the gallery post
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'As we want to check for the thumbnail, as we did in the previous section, we
    will use the same code in the `content-gallery.php` page:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE74]'
  prefs: []
  type: TYPE_PRE
- en: 'This is going to be a little different than the regular content post. We will
    remove the `<?php the_post_thumbnail(); ?>` line. After removing it, the code
    should look like the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE75]'
  prefs: []
  type: TYPE_PRE
- en: Thumbnail or featured images mean the same thing.
  prefs: []
  type: TYPE_NORMAL
- en: Creating an array of attributes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We want to do a little extra in the `content-gallery.php` file. We will add
    a class to the images so that we can do the animation and stuff like that. For
    this, we will create an array of attributes. In the div, let''s add the following
    code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE76]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, in the array, we will put in `class` and we want that to be `w3-animate-opacity`
    class. Then, we also want a hover effect for which we can use `w3-hover-opacity`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE77]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, each image is going to have a link around it. So, after the array of attribute,
    we will add `<a href="php echo the_permalink()"></a>`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE78]'
  prefs: []
  type: TYPE_PRE
- en: 'This link will take us to the single post. Then to show the thumbnail we will
    add `<?php echo get_the_post_thumbnail(); ?>` in the anchor tag as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE79]'
  prefs: []
  type: TYPE_PRE
- en: 'In the `get_the_post_thumbnail()` function, we will pass in ID, the size which
    will be `large`, and then the attributes as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE80]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, underneath the `endif` statement, we will put the content:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE81]'
  prefs: []
  type: TYPE_PRE
- en: 'Now save the code and reload the home page. We will not see anything because
    we didn''t actually add any content to that photo post:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f2ad62be-a88f-4b23-8846-d8666b01a114.png)'
  prefs: []
  type: TYPE_IMG
- en: Adding a new post
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Before adding a new post, delete the post we created in the previous sections.
    As shown in the following screenshot, go to the Posts section in our WordPress
    page, select both the posts, and move them to trash:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/b0cdb2a2-d031-4bc0-a158-c9543605852e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now, we will create a new post. For this, we want to make sure to add a few
    sections. These are:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Title section**: First, we''ll add a title. Let''s call it `Photo One`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Description section**: Add a small paragraph or some sample content which
    will be the description:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/e1310a7e-07b4-46d6-968a-e28edacdac92.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Format**: Make sure to choose Gallery as our post format:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/06ccab90-f814-43e3-9922-8f09d7985069.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Categories:** We will create a few categories. We''ll add `Nature`, `Objects`,
    `People`, `Places`, and `Abstract` categories. After creating the categories,
    choose `Nature`:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/52277e99-a9ab-417d-95d2-c24cafa42999.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Featured Image**: To add a featured image, follow these steps:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'When we click on the Set featured image, it''ll lead us to the following page:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/abc7df06-c465-4dfe-8386-439527073ab9.png)'
  prefs: []
  type: TYPE_IMG
- en: To upload a file, we'll click on the Select Files button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'We will go to our `photogenik_html` folder, then the `images` folder, and choose
    the first image:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/12e7282d-240b-4b7d-8c3d-e271cf5fdbe9.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We can give the image a title, `Photo One`, and add a caption and description
    as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/09ace2fb-c8b3-492a-8cde-33ea9b32551f.png)'
  prefs: []
  type: TYPE_IMG
- en: Then we'll click on the Set featured image button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now, hit the Publish button and take a look at the frontend. It should look
    like this:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/a00460ed-1bab-458b-8fe9-8891f8082115.png)'
  prefs: []
  type: TYPE_IMG
- en: So there's our image, it fades in, but the proportion is incorrect.
  prefs: []
  type: TYPE_NORMAL
- en: Adding proper proportions to the image
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To fix the proportions of the image, we''ll go to our `style.css` page and
    go down to pic. In our case, we want the actual image, so we will add `.pic img`
    and set the `width` to `100%` and make that important. Then we will set `height`
    to `100%` as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE82]'
  prefs: []
  type: TYPE_PRE
- en: 'Reload the home page, and this time we should see something like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/b5b5a6b2-29bc-4428-9ccf-5b493600c52d.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now, that looks good! Similarly, we will upload the rest of the images we have
    in the `photogenik_html\images` folder:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/fb8ef422-9ad9-44ef-b250-a4e01d704ecc.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We can see that we have our six photos at the backend in the Posts area as
    shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/cff06eb3-0be9-483e-b63e-88cabbbb1f67.png)'
  prefs: []
  type: TYPE_IMG
- en: So we now have that functionality down. In the next section, we'll work on the
    categories, and we want it to be a WordPress widget.
  prefs: []
  type: TYPE_NORMAL
- en: Adding the category widget and search option
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this section, we will work on the categories widget shown on the left-hand
    side of the following screenshot. Right now, we just have a static HTML unordered
    list:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f5fbd428-4d64-4932-b9e6-cbbce651c53a.png)'
  prefs: []
  type: TYPE_IMG
- en: Adding a function to use the category widget
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In order to use widgets, first we have to include the initialization code in
    our `functions.php` file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE83]'
  prefs: []
  type: TYPE_PRE
- en: Specifying the widget locations
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In the `function.php` file, underneath the `add_action` function, we will specify
    the locations. For this, we will add a function called `init_widgets`, pass in
    `&id`, and then add `register_sidebar` as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE84]'
  prefs: []
  type: TYPE_PRE
- en: The `register_sidebar` function is used for creating any kind of widget position.
    Even though it says sidebar, it doesn't have to be in the sidebar; in our case,
    it is but it doesn't have to be.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, we will pass in an array to the `register_sidebar` function. Add a name,
    `Sidebar`, and an ID, `sidebar`, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE85]'
  prefs: []
  type: TYPE_PRE
- en: 'Then we will declare the action using `add_action`. The hook we will use is
    `widgets_init` and put in the function we just created, which is `init_widgets`,
    as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE86]'
  prefs: []
  type: TYPE_PRE
- en: Next, we will register the widgets.
  prefs: []
  type: TYPE_NORMAL
- en: Registering the widgets
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let''s now register the widgets. We will only have the sidebar in this particular
    template. Add a function, `custom_register_widgets`, and call `register_widget`
    as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE87]'
  prefs: []
  type: TYPE_PRE
- en: 'Here, we will use the categories widget, but we will create a custom version
    of it and put it in our template in our `themes` folder. So in the `register_widget`
    parentheses, we''ll add `WP_Widget_Categories_Custom` as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE88]'
  prefs: []
  type: TYPE_PRE
- en: 'Then we will add the action using `add_action`, pass in `widgets_init` as we
    want this to run, and then add the `custom_register_widgets` function as shown
    here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE89]'
  prefs: []
  type: TYPE_PRE
- en: Next, we will style our widgets.
  prefs: []
  type: TYPE_NORMAL
- en: Styling our category widgets
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section we will style our widgets. In our `photogenik` theme folder,
    we will create a new folder called `widgets`. Inside the `widgets` folder, we
    will create a new file named `class-wp-widget-categories.php`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now we will go into the core `widgets` folder, which is present in the `wp-includes`
    folder. Open the categories widget file called `class-wp-widget-categories.php`
    and copy-paste its code into the file that we have created:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9ef3dce2-c0d5-4f8c-aabe-c94bbd20c6b3.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now, in the code shown in the preceding screenshot, we will change the class
    name. Remember in our `functions.php` file, we called this class `WP_Widget_Categories_Custom`,
    so that''s what we want here in the `class-wp-widget-categories.php` file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE90]'
  prefs: []
  type: TYPE_PRE
- en: 'Now in order to use this we have to include the `class-wp-widget-categories.php`
    file in our `functions.php` file. We are including this file to style the widget
    as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/bc286b58-effb-424e-b8dd-c571a26c2c12.png)'
  prefs: []
  type: TYPE_IMG
- en: 'In `functions.php`, we will add `require_once` and then we''ll add `widgets/class-wp-widget-categories.php`
    as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE91]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s save this and then go into our admin area. Now you will be able to go
    to the Appearance section and then will see a Widgets item as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c8753c97-c4f7-4c18-9387-10bf0e161f3e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'OK, and you can see we have our sidebar. We''ll drag and drop Categories over
    Sidebar and click on Save:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/52aa56df-8946-474a-b42c-3845a588e619.png)'
  prefs: []
  type: TYPE_IMG
- en: Adding the widget to the code
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now, go into `header.php` where we have the unordered list:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE92]'
  prefs: []
  type: TYPE_PRE
- en: 'We will just get rid of this list and replace it with the following highlighted
    code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE93]'
  prefs: []
  type: TYPE_PRE
- en: 'This is how we add a widget to our code. The first thing we do is check whether
    `sidebar` is active by using the `is_active_sidebar` Boolean function. If it is
    active, then we will call `dynamic_sidebar` and pass in the `sidebar` position.
    This could be anything you wanted it to be, but in our case we named it `sidebar`.
    Let''s reload the home page, and there we go, there''s the Categories widget:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6b3856cf-0474-4c00-8a76-3e8c44991cf7.png)'
  prefs: []
  type: TYPE_IMG
- en: If we click on one of the categories, it will show us the images that are in
    that particular category.
  prefs: []
  type: TYPE_NORMAL
- en: You can see in the preceding screenshot that the appearance of the widget did
    change. That's why we need to put it in our own file here to edit because you
    never want to edit any other core widget files.
  prefs: []
  type: TYPE_NORMAL
- en: Removing the title
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Ensure that it''s actually reading it from the current file. Let''s add some
    changes. We will get rid of the title. For that, we will comment out the highlighted
    code shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE94]'
  prefs: []
  type: TYPE_PRE
- en: 'Now reload the frontend, and you will see that the Categories title is gone:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/af1cac3e-43b1-4d50-a217-5015d0981253.png)'
  prefs: []
  type: TYPE_IMG
- en: Adding the class
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Next, we will add our class. So we need to find where `ul` starts:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE95]'
  prefs: []
  type: TYPE_PRE
- en: 'In this line, we will add `class="w3-ul"`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE96]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, reload the frontend page, and now it looks like it did before as shown
    in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4541d170-74fe-460b-81f3-f62cffc58417.png)'
  prefs: []
  type: TYPE_IMG
- en: Adding a link at the top of the widgets
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Next, we will add a link at the top of the widgets in our WordPress page. That
    link is named `All Photos` so we can go back to just seeing all the photos.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will go right under that `<ul>` and let''s put an `<li>` tag. Then add the
    `href` link and specify the name of the folder (whatever your folder is called);
    in our case, this is `wpthemes`. Then we will name the link as `All Photos` as
    shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE97]'
  prefs: []
  type: TYPE_PRE
- en: 'Reload the page and now we have an All Photos link at the top of the widgets
    as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/000cb997-3c56-4717-b8cb-3527f18a739a.png)'
  prefs: []
  type: TYPE_IMG
- en: Changing the top margin of the page
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'One other thing we want to take care of is the top margin above the title of
    the post, as shown in the following screenshot. The reason it is like this is
    because it''s making room for the admin bar which isn''t showing right now:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4c46c844-ba28-431e-a91f-3b304355a849.png)'
  prefs: []
  type: TYPE_IMG
- en: 'In order for the admin bar to show, we have to call `wp_footer` inside of our
    `footer.php` file. So let''s go there and add `<?php wp_footer(); ?>`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE98]'
  prefs: []
  type: TYPE_PRE
- en: 'Reload the frontend page and now you can see we have our admin bar, and of
    course, this only shows two people that are logged in as an admin:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/3bbafb9c-ec3c-4d01-bce5-1f035fe6b020.png)'
  prefs: []
  type: TYPE_IMG
- en: Making the search bar functional
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Lastly, we will make the search bar functional. Right now if we put something
    in the `Search...` box here and press *Enter*, it''s not doing anything. We know
    the search bar should be in the `header.php` file, so let''s open it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE99]'
  prefs: []
  type: TYPE_PRE
- en: 'In the preceding code, right now we have a simple `<input>` tag. We will turn
    this input into a form, so put the `<form>` tags around it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE100]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, we will put in a `get` method in the `<form>` tag. Then specify an action
    by adding `action="<?php echo esc_url(); ?>">`. Inside the `esc_url` parentheses
    we will add the `home_url` function and pass in a parameter of `/`. Also, we should
    give this input a name of `s` for search as shown in this code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE101]'
  prefs: []
  type: TYPE_PRE
- en: 'Reload the frontend page and search for `photo two`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/acb54477-1f23-4b87-9164-039a6bc587c4.png)'
  prefs: []
  type: TYPE_IMG
- en: 'If we hit *Enter*, we can see it''s giving us `2.jpg` as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/aa72051f-8e86-4651-93e8-ddf61da1f034.png)'
  prefs: []
  type: TYPE_IMG
- en: Similarly, we can search the remaining photos. In the next section, we will
    work on the single page.
  prefs: []
  type: TYPE_NORMAL
- en: Working on the single post theme
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Next, we want to do now is the single page that''s what we have left of this
    theme. When we click on one of the images, it takes us to the correct place as
    shown here, but it doesn''t look too good:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/04ac5260-d8c7-42b9-9897-5806694290b2.png)'
  prefs: []
  type: TYPE_IMG
- en: We want this image to look like the single HTML page that we created. For this,
    we need to follow the steps discussed in the following subsections.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a single HTML page
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'First, in our `photogenik` theme folder we will create a new file named `single.php`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c4b02cd9-a1be-49ab-bf6c-5cb8373eeeda.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Next, we will go into the `index.php` file and copy and paste its code it in
    the `single.php` file as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE102]'
  prefs: []
  type: TYPE_PRE
- en: 'We will now remove `get_template_part` in this code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE103]'
  prefs: []
  type: TYPE_PRE
- en: 'And in place of the `while` loop, we will put our article, which we have created
    in our `single.html` file. Open the `single.html` file and copy the entire `<article>`
    section. Now paste this code in the `while` loop in the `single.php` file as show
    here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE104]'
  prefs: []
  type: TYPE_PRE
- en: Making metadata dynamic
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now we need to make the fields in the preceding code dynamic. We''ll start
    with the `meta` class since that''s at the top. Let''s replace `2:00pm` with `<?php
    the_time ();?>` and `03-29-2017` with `<?php the_date(); ?>`, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE105]'
  prefs: []
  type: TYPE_PRE
- en: One of the best things about WordPress is the ease of including dynamic content.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now to replace the author name (`Brad`, in our case), we will grab the following
    code from the `content.php` file and add it in place of `Brad`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE106]'
  prefs: []
  type: TYPE_PRE
- en: So this makes the metadata dynamic.
  prefs: []
  type: TYPE_NORMAL
- en: Changing the static image
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now, in the `single.php` file, we just have a static image:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE107]'
  prefs: []
  type: TYPE_PRE
- en: 'To change the static image, let''s copy the `if` statement we have in the `content-gallery.php`
    file and paste that in place of the `<img>` tag as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE108]'
  prefs: []
  type: TYPE_PRE
- en: 'In this code, we will change `w3-animate-opacity` to `w3-animate-right` and
    remove `w3-hover-opacity` as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE109]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, we don''t need to have a link, so we''ll remove the `permalink` statement:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE110]'
  prefs: []
  type: TYPE_PRE
- en: 'After removing the link, the code will look like the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE111]'
  prefs: []
  type: TYPE_PRE
- en: This looks good!
  prefs: []
  type: TYPE_NORMAL
- en: Changing the back button, title, and content
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now for the `Back` button we will change the `index.html` to `<?php echo site_url();
    ?>` as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE112]'
  prefs: []
  type: TYPE_PRE
- en: 'This will take us back, and for a dynamic title we can simply replace the `Photo
    Title` with `<?php the_title();?>` as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE113]'
  prefs: []
  type: TYPE_PRE
- en: 'Then for the dynamic content, we can replace the paragraph with `<?php the_content();
    ?>`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE114]'
  prefs: []
  type: TYPE_PRE
- en: 'With all the changes implemented in the code, let''s take a look at the image
    in the WordPress:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/7cb0685f-fdc6-4d13-9ac9-8f3a7c605978.png)'
  prefs: []
  type: TYPE_IMG
- en: As shown in the preceding screenshot, this looks good. The Back button should
    also work. If you click on any one of the images, you can see it just slides right
    in.
  prefs: []
  type: TYPE_NORMAL
- en: I think that does it for our theme. It's very simple but I think it's pretty
    elegant, and of course, if you wanted to add widgets in the sidebar you could
    do that; if you want to create regular posts you can also do that, it doesn't
    have to be photos.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we worked on the project to create a WordPress theme for a
    photo gallery. We created the HTML and CSS for our home page. Next, we have implemented
    the animation using the built-in W3.CSS-animation.
  prefs: []
  type: TYPE_NORMAL
- en: After this, we have templated the HTML into a WordPress theme, created header
    and footer files separately, and included them in the `index.php` file. Next,
    we have worked on the main post area and added `if` and `while` loops for the
    different post formats. Then, we have worked on the content pages, both the regular
    and gallery post content. Once this was done, we worked on the categories widget.
    Last, we worked on the theme of the single page.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will build a Twitter Bootstrap WordPress theme.
  prefs: []
  type: TYPE_NORMAL
