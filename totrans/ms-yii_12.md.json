["```php\n<?php return [\n    // [...],\n    'components' => [\n        // [...]\n        'cache' => [\n 'class' => 'yii\\caching\\FileCache',\n ]\n    ]\n];\n```", "```php\n$cache = Yii::$app->cache;\nif ($cache->exists('example'))\n    $data = $cache->get('example');\nelse\n{\n    // Generate data here...\n    $data = [];\n    // Cache the $data for 100 seconds\n    $cache->set('example', $data, 100);\n}\nreturn $data;\n```", "```php\n$cache = Yii::$app->cache;\nif ($cache->exists('example'))\n    $data = $cache->get('example');\nelse\n{\n    // Generate data here...\n    $data = [];\n\n    $dependency = new \\yii\\caching\\FileDependency(['fileName' => 'data.csv']);\n    // Cache $data for 100 seconds using the key \"example\" with a FileDependency\n   $cache->set('example', $data, 100, $dependency);\n}\nreturn $data;\n```", "```php\n<?php return [\n    // [...],\n    'components' => [\n        // [...]\n        'db' => [\n            'class'        => 'yii\\db\\Connection',\n            'dsn'          => 'mysql:host='127.0.0.1;dbname=masteringyii',\n            'username'     => '<username>,\n            'password'\t=> '<password>',\n            'charset' \t=> 'utf8',\n\n            'queryCacheEnabled'  => true,\n // 0 = Never expires\n 'queryCacheDuration' => 0,\n 'queryCache'      => 'cache'\n        ],\n\n    'cache' => [\n            'class' => 'yii\\caching\\FileCache',\n        ]\n    ]\n];\n```", "```php\n$duration = 100; // 100 seconds\n$results = $db->createCommand('SELECT * FROM users WHERE id=1;')->cache($duration)->queryOne();\n```", "```php\n$result = $db->cache(function ($db) {\n    $result = $db->createCommand('SELECT * FROM users WHERE id=1;')->queryOne();\n    return $result;\n}, $duration, $dependency);\n```", "```php\n$result = User::getDb()->cache(function ($db) {\n    return User::find()->where(['id' => 5])->one();\n}, $duration, $dependency);\n```", "```php\n$result = $db->cache(function ($db) {\n     // Cache queries in this block\n\n    $db->noCache(function ($db) {\n // Do not cache queries in this block\n });\n\n    // Don't cache this query either\n    $customer = $db->createCommand('SELECT * FROM users WHERE id=1')->noCache()->queryOne();\n    return $result;\n});\n```", "```php\n// $id = ...a unique key...\n// $this = ...instance of yii\\web\\View...;\n// Begin our cache and check to see if the data is already cached.\n// If content is found, beginCache will output data, otherwise\n// the conditional will execute.\nif ($this->beginCache($id))\n{\n    // Our cached content goes here\n    $this->endCache();\n}\n```", "```php\nif ($this->beginCache($id, [\n    // Time we want the fragment cache valid for\n    'duration' => 100,\n\n    // Any dependencies we want to add\n    'dependency' => [\n        'class' => 'yii\\caching\\DbDependency',\n        'sql' => 'SELECT MAX(updated_at) FROM user',\n    ],\n\n    // Conditionally enable the cache for any boolean value\n    'enabled' => Yii::$app->request->isGet,\n\n    // Have a variation of this page for every language\n    'variations' => Yii::$app->language\t\n\n]))\n{\n    // Our cached content goes here\n    $this->endCache();\n}\n```", "```php\npublic function behaviors()\n{\n    return [\n        [\n            'class' => 'yii\\filters\\PageCache',\n            'only' => ['article'],\n            'duration' => 60,\n            'variations' => [\n                Yii::$app->language,\n                Yii::$app->user->isGuest\n            ],\n            'dependency' => [\n                'class' => 'yii\\caching\\DbDependency',\n                'sql' => 'SELECT MAX(updated_at) FROM articles',\n            ],\n        ],\n    ];\n}\n```", "```php\npublic function behaviors()\n{\n    return [\n        [\n            'class' => 'yii\\filters\\HttpCache',\n            'only' => ['index'],\n            'lastModified' => function ($action, $params) {\n                $q = new \\yii\\db\\Query();\n                return $q->from('articles')->max('updated_at');\n            },\n            'etag' => function($action, $params) {\n                $article = Article::find()->where(['id' => \\Yii::$app->request->get('id')])->one();\n                return serialize([$article->title, $article->content]);\n            },\n            'cacheControlHeader' => 'public; max-age:3600'\n        ],\n    ];\n}\n```", "```php\n<?php return [\n    // [...],\n    'components' => [\n        // [...]\n        'db' => [\n            'class'        => 'yii\\db\\Connection',\n            'dsn'         => 'mysql:host='127.0.0.1;dbname=masteringyii',\n            'username'     => '<username>,\n            'password'\t=> '<password>',\n            'charset' \t=> 'utf8',\n\n            'enableSchemaCache'   => true,\n 'schemaCacheDuration' => 0,\n 'schemaCache' \t      => 'cache'\n        ],\n\n        'cache' => [\n            'class' => 'yii\\caching\\FileCache',\n        ]\n    ]\n];\n```", "```php\n$ php –m\n\n```", "```php\nzend_extension=opcache.so\nopcache.enable = true\nopcache.enable_cli = true\nopcache.save_comments = false\nopcache.enable_file_override = true\n```", "```php\n$ composer install --no-dev\n\n```", "```php\n$ composer install –o\n\n```", "```php\n$ composer dumpautoload -o\n\n```", "```php\nreturn [\n    // [...],\n    'components' => [\n        // [...]\n        'request' => [\n            'cookieValidationKey' => '<your secret key here>',\n        ],\n    ],\n];\n```", "```php\n<?php echo \\yii\\helpers\\Html::encode($data); ?>\n```", "```php\n<?php \\yii\\helpers\\HtmlPurifier::process($longData);\n```"]