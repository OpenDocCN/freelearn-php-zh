["```php\ngraph LR \n    A{Do you know how to write great PHP code?} --> B[No]\n    A --> C[Yes] \n    C --> E(Awesome!) \n    B --> D{Did you read Clean Code in PHP?} --> F[No] \n    D --> G[Yes] \n    G --> H(Please read it again) \n    F --> I(Please read it)\n```", "```php\nopenapi: 3.0.0\ninfo:\n  title: 'Product API'\n  version: '0.1'\npaths:\n  /product:\n    get:\n      operationId: getProductsUsingAnnotations\n      parameters:\n        -\n          name: limit\n          in: query\n          description: 'How many products to return'\n          required: false\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: 'Returns the product data'\n```", "```php\n/**\n * @OA\\Info(\n *     title=\"Product API\",\n *     version=\"0.1\"\n * )\n */\nclass ProductController\n{\n    /**\n     * @OA\\Get(\n     *     path=\"/product\",\n     *     operationId=\"getProducts\",\n     *     @OA\\Parameter(\n     *         name=\"limit\",\n     *         in=\"query\",\n     *         description=\"How many products to return\",\n     *         required=false,\n     *         @OA\\Schema(\n     *             type=\"integer\"\n     *         )\n     *     ),\n     *     @OA\\Response(\n     *         response=\"200\",\n     *         description=\"Returns the product data\"\n     *     )\n     * )\n     */\n    public function getProducts(): array\n    {\n        // ...\n    }\n}\n```", "```php\nuse OpenApi\\Attributes as OAT;\n#[OAT\\Info(\n    version: '0.1',\n    title: 'Product API',\n)]\nclass ProductController\n{\n    #[OAT\\Get(\n        path: '/v2/product',\n        operationId: 'getProducts',\n        parameters: [\n            new OAT\\Parameter(\n                name: 'limit',\n                description: 'How many products to return',\n                in: 'query',\n                required: false,\n                schema: new OAT\\Schema(\n                    type: 'integer'\n                ),\n            ),\n        ],\n        responses: [\n            new OAT\\Response(\n                response: 200,\n                description: 'Returns the product data',\n            ),\n        ]\n    )]\n    public function getProducts(): array\n    {\n        // ...\n    }\n}\n```", "```php\n// write the string to the log file\nfile_put_contents($logFileName, $someString)\n```", "```php\n// TODO refactor once new version of service XY is released\n```"]