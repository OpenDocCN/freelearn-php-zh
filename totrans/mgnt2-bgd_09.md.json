["```php\n//PART-1-1\nrequire __DIR__ . '/app/bootstrap.php';\n\n//PART-1-2\n$bootstrap = \\Magento\\Framework\\App\\Bootstrap::create(BP, $_SERVER);\n\n//PART-1-3\n$app = $bootstrap-> createApplication('Magento\\Framework\\App\\Http');\n\n//PART-1-4\n$bootstrap->run($app);\n```", "```php\npublic function run(\\Magento\\Framework\\AppInterface $application)\n{\n    //PART-2-1\n    $this->initErrorHandler();\n    $this->initObjectManager();\n    $this->assertMaintenance();\n    $this->assertInstalled();\n\n    //PART-2-2\n    $response = $application->launch();\n\n    //PART-2-3\n    $response->sendResponse();\n}\n```", "```php\npublic function launch()\n{\n    //PART-3-1\n    $frontController = $this->_objectManager->get ('Magento\\Framework\\App\\FrontControllerInterface');\n\n    //PART-3-2\n    $result = $frontController->dispatch($this->_request);\n\n    if ($result instanceof \\Magento\\Framework\\Controller \\ResultInterface) {\n        //PART-3-3\n        $result->renderResult($this->_response);\n    } elseif ($result instanceof \\Magento\\Framework\\App \\Response\\HttpInterface) {\n        $this->_response = $result;\n    } else {\n        throw new \\InvalidArgumentException('Invalid return type');\n    }\n\n    //PART-3-4\n    return $this->_response;\n}\n```", "```php\npublic function dispatch(\\Magento\\Framework\\App\\RequestInterface $request)\n{\n    //PART-4-1\n    while (!$request->isDispatched() && $routingCycleCounter++ < 100) {\n        //PART-4-2\n        foreach ($this->_routerList as $router) {\n            try {\n                //PART-4-3\n                $actionInstance = $router->match($request);\n                if ($actionInstance) {\n                    $request->setDispatched(true);\n                    //PART-4-4\n                    $result = $actionInstance->dispatch($request);\n                    break;\n                }\n            } catch (\\Magento\\Framework\\Exception \\NotFoundException $e) {}\n        }\n    }\n    //PART-4-4\n    return $result;\n}\n```", "```php\n/**\n * @var \\Magento\\Framework\\View\\Result\\PageFactory\n */\nprotected $resultPageFactory;\n\npublic function __construct(\n    \\Magento\\Framework\\App\\Action\\Context $context,\n    \\Magento\\Framework\\View\\Result\\PageFactory $resultPageFactory\n)\n{\n    $this->resultPageFactory = $resultPageFactory;\n    return parent::__construct($context);\n}\n\npublic function execute()\n{\n    $resultPage = $this->resultPageFactory->create();\n    //...\n    return $resultPage;\n}\n```", "```php\nnamespace Magento\\Framework\\View\\Element;\n\nuse Magento\\Framework\\View\\Element\\UiComponent\\ContextInterface;\n\ninterface UiComponentInterface extends BlockInterface\n{\n    public function getName();\n    public function getComponentName();\n    public function getConfiguration();\n    public function render();\n    public function addComponent($name, UiComponentInterface $component);\n    public function getComponent($name);\n    public function getChildComponents();\n    public function getTemplate();\n    public function getContext();\n    public function renderChildComponent($name);\n    public function setData($key, $value = null);\n    public function getData($key = '', $index = null);\n    public function prepare();\n    public function prepareDataSource(array & $dataSource);\n    public function getDataSourceData();\n}\n```", "```php\nnamespace Magento\\Framework\\View\\Element;\n\ninterface BlockInterface\n{\n    public function toHtml();\n}\n```", "```php\nprotected function _renderUiComponent($name)\n{\n    $uiComponent = $this->getUiComponent($name);\n    return $uiComponent ? $uiComponent->toHtml() : '';\n}\n```", "```php\n<page  xsi:noNamespaceSchemaLocation=\"urn:magento:framework:View/Layout /etc/page_configuration.xsd\">\n    <body>\n        <referenceContainer name=\"content\">\n            <uiComponent name=\"cms_block_listing\"/>\n        </referenceContainer>\n    </body>\n</page>\n```", "```php\nprotected function _renderContainer($name)\n{\n    $html = '';\n    $children = $this->getChildNames($name);\n    foreach ($children as $child) {\n        $html .= $this->renderElement($child);\n    }\n    if ($html == '' || !$this->structure->getAttribute($name, Element::CONTAINER_OPT_HTML_TAG)) {\n        return $html;\n    }\n\n    $htmlId = $this->structure->getAttribute($name, Element::CONTAINER_OPT_HTML_ID);\n    if ($htmlId) {\n        $htmlId = ' id=\"' . $htmlId . '\"';\n    }\n\n    $htmlClass = $this->structure->getAttribute($name, Element::CONTAINER_OPT_HTML_CLASS);\n    if ($htmlClass) {\n        $htmlClass = ' class=\"' . $htmlClass . '\"';\n    }\n\n    $htmlTag = $this->structure->getAttribute($name, Element::CONTAINER_OPT_HTML_TAG);\n\n    $html = sprintf('<%1$s%2$s%3$s>%4$s</%1$s>', $htmlTag, $htmlId, $htmlClass, $html);\n\n    return $html;\n}\n```", "```php\n<page  layout=\"1column\"\n      xsi:noNamespaceSchemaLocation=\"urn:magento:framework:View /Layout/etc/page_configuration.xsd\">\n    <head>\n        <title>Office CRUD #layout</title>\n    </head>\n    <body>\n        <container name=\"foobar\" htmlTag=\"div\" htmlClass=\"foo- bar\">\n            <block class=\"Magento\\Framework\\View\\Element\\Text\" name=\"foo\">\n                <action method=\"setText\">\n                    <argument name=\"text\" xsi:type=\"string\"> <![CDATA[<p>The Foo</p>]]></argument>\n                </action>\n            </block>\n            <block class=\"Magento\\Framework\\View\\Element\\Text\" name=\"bar\">\n                <action method=\"setText\">\n                    <argument name=\"text\" xsi:type=\"string\"> <![CDATA[<p>The Bar</p>]]></argument>\n                </action>\n            </block>\n        </container>\n    </body>\n</page>\n```", "```php\n<body>\n    <referenceContainer name=\"content\">\n        <container name=\"foobar\" htmlTag=\"div\" htmlClass=\"foo- bar\">\n```", "```php\n<type name=\"Magento\\Framework\\View\\Result\\Page\">\n    <arguments>\n        <argument name=\"layoutReaderPool\" xsi:type=\"object\">pageConfigRenderPool</argument>\n        <argument name=\"generatorPool\" xsi:type=\"object\">pageLayoutGeneratorPool</argument>\n        <argument name=\"template\" xsi:type=\"string\">Magento_Theme::root.phtml</argument>\n    </arguments>\n</type>\n```", "```php\n<!doctype html>\n<html <?php echo $htmlAttributes ?>>\n    <head <?php echo $headAttributes ?>>\n        <?php echo $requireJs ?>\n        <?php echo $headContent ?>\n        <?php echo $headAdditional ?>\n    </head>\n    <body data-container=\"body\" data-mage-init='{\"loaderAjax\": {}, \"loader\": { \"icon\": \"<?php echo $loaderIcon; ?>\"}}' <?php echo $bodyAttributes ?>>\n        <?php echo $layoutContent ?>\n    </body>\n</html>\n```", "```php\nprotected function render(ResponseInterface $response)\n{\n    $this->pageConfig->publicBuild();\n    if ($this->getPageLayout()) {\n        $config = $this->getConfig();\n        $this->addDefaultBodyClasses();\n        $addBlock = $this->getLayout()->getBlock ('head.additional');\n        $requireJs = $this->getLayout()->getBlock('require.js');\n        $this->assign([\n            'requireJs' => $requireJs ? $requireJs->toHtml() : null,\n            'headContent' => $this->pageConfigRenderer-> renderHeadContent(),\n            'headAdditional' => $addBlock ? $addBlock->toHtml() : null,\n            'htmlAttributes' => $this->pageConfigRenderer-> renderElementAttributes($config::ELEMENT_TYPE_HTML),\n            'headAttributes' => $this->pageConfigRenderer-> renderElementAttributes($config::ELEMENT_TYPE_HEAD),\n            'bodyAttributes' => $this->pageConfigRenderer-> renderElementAttributes($config::ELEMENT_TYPE_BODY),\n            'loaderIcon' => $this->getViewFileUrl('images/loader- 2.gif'),\n        ]);\n\n        $output = $this->getLayout()->getOutput();\n        $this->assign('layoutContent', $output);\n        $output = $this->renderPage();\n        $this->translateInline->processResponseBody($output);\n        $response->appendBody($output);\n    } else {\n        parent::render($response);\n    }\n    return $this;\n}\n```", "```php\n<block class=\"Magento\\Framework\\View\\Element\\Text\" name=\"example_1\">\n    <action method=\"setText\">\n        <argument name=\"text\" xsi:type=\"string\"><![CDATA[<p>Text_1</p>]]></argument>\n    </action>\n</block>\n```", "```php\n<block class=\"Magento\\Framework\\View\\Element\\Text\\ListText\" name=\"example_2\">\n    <block class=\"Magento\\Framework\\View\\Element\\Text\" name=\"example_2a\">\n        <action method=\"setText\">\n            <argument name=\"text\" xsi:type=\"string\"> <![CDATA[<p>Text_2A</p>]]></argument>\n        </action>\n    </block>\n    <block class=\"Magento\\Framework\\View\\Element\\Text\" name=\"example_2b\">\n        <action method=\"setText\">\n            <argument name=\"text\" xsi:type=\"string\"> <![CDATA[<p>Text_2B</p>]]></argument>\n        </action>\n    </block>\n</block>\n```", "```php\n<block class=\"Magento\\Framework\\View\\Element\\Messages\" name=\"example_3\">\n    <action method=\"addSuccess\">\n        <argument name=\"text\" xsi:type=\"string\"> <![CDATA[<p>Text_3A: Success</p>]]></argument>\n    </action>\n    <action method=\"addNotice\">\n        <argument name=\"text\" xsi:type=\"string\"> <![CDATA[<p>Text_3B: Notice</p>]]></argument>\n    </action>\n    <action method=\"addWarning\">\n        <argument name=\"text\" xsi:type=\"string\"> <![CDATA[<p>Text_3C: Warning</p>]]></argument>\n    </action>\n    <action method=\"addError\">\n        <argument name=\"text\" xsi:type=\"string\"> <![CDATA[<p>Text_3D: Error</p>]]></argument>\n    </action>\n</block>\n```", "```php\n<block class=\"Magento\\Framework\\View\\Element\\Template\"\n    name=\"example_4\" template=\"Foggyline_Office::office /no4/template.phtml\"/>\n```", "```php\n$block = $resultPage->getLayout()->createBlock(\n    'Magento\\Framework\\View\\Element\\Text',\n    'example_1'\n)->setText(\n    '<p>Text_1</p>'\n);\n\n$resultPage->getLayout()->setChild(\n    'content',\n    $block->getNameInLayout(),\n    'example_1_alias'\n);\n```", "```php\n$blockLT = $resultPage->getLayout()->createBlock(\n    'Magento\\Framework\\View\\Element\\Text\\ListText',\n    'example_2'\n);\n\n$resultPage->getLayout()->setChild(\n    'content',\n    $blockLT->getNameInLayout(),\n    'example_2_alias'\n);\n\n$block2A = $resultPage->getLayout()->createBlock(\n    'Magento\\Framework\\View\\Element\\Text',\n    'example_2a'\n)->setText(\n    '<p>Text_2A</p>'\n);\n\n$resultPage->getLayout()->setChild(\n    'example_2',\n    $block2A->getNameInLayout(),\n    'example_2a_alias'\n);\n\n$block2B = $resultPage->getLayout()->createBlock(\n    'Magento\\Framework\\View\\Element\\Text',\n    'example_2b'\n)->setText(\n    '<p>Text_2B</p>'\n);\n\n$resultPage->getLayout()->setChild(\n    'example_2',\n    $block2B->getNameInLayout(),\n    'example_2b_alias'\n);\n```", "```php\n$messagesBlock = $resultPage->getLayout()->createBlock(\n    'Magento\\Framework\\View\\Element\\Messages',\n    'example_3'\n);\n\n$messagesBlock->addSuccess('Text_3A: Success');\n$messagesBlock->addNotice('Text_3B: Notice');\n$messagesBlock->addWarning('Text_3C: Warning');\n$messagesBlock->addError('Text_3D: Error');\n\n$resultPage->getLayout()->setChild(\n    'content',\n    $messagesBlock->getNameInLayout(),\n    'example_3_alias'\n);\n```", "```php\n$templateBlock = $resultPage->getLayout()->createBlock(\n    'Magento\\Framework\\View\\Element\\Template',\n    'example_3'\n)->setTemplate(\n    'Foggyline_Office::office/no4/template.phtml'\n);\n\n$resultPage->getLayout()->setChild(\n    'content',\n    $templateBlock->getNameInLayout(),\n    'example_4_alias'\n);\n```", "```php\nnamespace Foggyline\\Office\\Block;\n\nclass Hello extends \\Magento\\Framework\\View\\Element\\Template\n{\n    public function helloPublic()\n    {\n        return 'Hello #1';\n    }\n\n    protected function helloProtected()\n    {\n        return 'Hello #2';\n    }\n\n    private function helloPrivate()\n    {\n        return 'Hello #3';\n    }\n}\n```", "```php\n<block class=\"Foggyline\\Office\\Block\\Hello\"\n    name=\"office.hello\" template=\"office/hello.phtml\"/>\n```", "```php\n<?php /* @var $block Foggyline\\Office\\Block\\Hello */ ?>\n<h1>Hello</h1>\n<p><?php echo $block->helloPublic() ?></p>\n<p><?php //echo $block->helloProtected() ?></p>\n<p><?php //echo $block->helloPrivate() ?></p>\n```", "```php\npublic function __call($method, $args)\n{\n    return call_user_func_array([$this->_currentBlock, $method], $args);\n}\n\npublic function __isset($name)\n{\n    return isset($this->_currentBlock->{$name});\n}\n\npublic function __get($name)\n{\n    return $this->_currentBlock->{$name};\n}\n```", "```php\n<xs:complexType name=\"linkType\">\n    <xs:attribute name=\"src\" type=\"xs:string\" use=\"required\"/>\n    <xs:attribute name=\"defer\" type=\"xs:string\"/>\n    <xs:attribute name=\"ie_condition\" type=\"xs:string\"/>\n    <xs:attribute name=\"charset\" type=\"xs:string\"/>\n    <xs:attribute name=\"hreflang\" type=\"xs:string\"/>\n    <xs:attribute name=\"media\" type=\"xs:string\"/>\n    <xs:attribute name=\"rel\" type=\"xs:string\"/>\n    <xs:attribute name=\"rev\" type=\"xs:string\"/>\n    <xs:attribute name=\"sizes\" type=\"xs:string\"/>\n    <xs:attribute name=\"target\" type=\"xs:string\"/>\n    <xs:attribute name=\"type\" type=\"xs:string\"/>\n    <xs:attribute name=\"src_type\" type=\"xs:string\"/>\n</xs:complexType>\n```", "```php\n    <?php\n    \\Magento\\Framework\\Component\\ComponentRegistrar::register(\n        \\Magento\\Framework\\Component\\ComponentRegistrar::THEME,\n        'frontend/Foggyline/jupiter',\n        __DIR__\n    );\n    ```", "```php\n    <theme  xsi:noNamespaceSchemaLocation=\"urn:magento: framework:Config/etc/theme.xsd\">\n        <title>Foggyline Jupiter</title>\n        <parent>Magento/blank</parent>\n        <media>\n            <preview_image>media/preview.jpg</preview_image>\n        </media>\n    </theme>\n    ```", "```php\n<div data-mage-init='{ \"<componentName>\": {...} }'></div>\n```", "```php\n<script type=\"text/x-magento-init\">\n    // specific element but no direct access to the element\n    \"<element_selector>\": {\n        \"<jsComponent1>\": ...,\n        \"<jsComponent2>\": ...\n    },\n    // without relation to any specific element\n    \"*\": {\n        \"<jsComponent3\">: ...\n    }\n</script>\n```", "```php\nvar config = {\n    map: {\n        '*': {\n            foggylineHello: 'Foggyline_Office/js/foggyline-hello'\n        }\n    }\n};\n```", "```php\ndefine([\n    \"jquery\",\n    \"jquery/ui\"\n], function($){\n    \"use strict\";\n\n    $.widget('mage.foggylineHello', {\n        options: {\n        },\n        _create: function () {\n            alert(this.options);\n            //my code here\n        }\n    });\n\n    return $.mage.foggylineHello;\n});\n```", "```php\n<div data-mage-init='{\"foggylineHello\":{\"myVar1\": \"myValue1\", \"myVar2\": \"myValue2\"}}'>Foggyline</div>\n```", "```php\n<page  xsi:noNamespaceSchemaLocation=\"urn:magento:framework:View/Layout /etc/page_configuration.xsd\">\n    <head>\n        <css src=\"img/styles-m.css\"/>\n        <css src=\"img/styles-l.css\" media=\"screen and (min-width: 768px)\"/>\n        <css src=\"img/print.css\" media=\"print\"/>\n    </head>\n</page>\n```"]