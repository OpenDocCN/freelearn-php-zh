["```php\n$ pear channel-discover pear.chiaraquartet.net\n$ pear install chiara/Chiara_PEAR_Server \n\n```", "```php\n$ pear config-set master_server pear.chiaraquartet.net\n$ pear install Chiara_PEAR_Server\n$ pear config-set master_server pear.php.net \n\n```", "```php\n$ pear install HTML_QuickForm\n$ pear config-set master_server pear.chiaraquartet.net\n$ pear install Chiara_PEAR_Server\n$ pear config-set master_server pear.php.net \n\n```", "```php\n$ pear upgrade LogXML \n\n```", "```php\n$ pear config-set master_server pear.chiaraquartet.net\n$ pear upgrade LogXML\n$ pear config-set master_server pear.php.net \n\n```", "```php\n$ pear remote-list \n\n```", "```php\n$ pear install PEAR\n$ pear install PEAR-stable\n$ pear install PEAR-1.4.3\n$ pear install channel://pear/PEAR\n$ pear install channel://pear.php.net/PEAR-1.4.3 \n\n```", "```php\n$ pear install http://pear.php.net/get/PEAR-1.4.3.tgz \n\n```", "```php\n$ pear upgrade PEAR-stable \n\n```", "```php\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<channel version=\"1.0\" \n\nxsi:schemaLocation=\"http://pear.php.net/channel-1.0\nhttp://pear.php.net/dtd/channel-1.0.xsd\">\n<name>pear.example.com</name>\n<summary>Example channel</summary>\n<suggestedalias>example</suggestedalias>\n<validatepackage version=\"1.0\">\nExample_Validate_Package</validatepackage>\n<servers>\n<primary ssl=\"yes\" port=\"81\">\n<xmlrpc path=\"myxmlrpc.php\">\n<function version=\"1.0\">logintest</function>\n<function version=\"1.0\">package.listLatestReleases</function>\n<function version=\"1.0\">package.listAll</function>\n<function version=\"1.0\">package.info</function>\n<function version=\"1.0\">package.getDownloadURL</function>\n<function version=\"1.1\">package.getDownloadURL</function>\n<function version=\"1.0\">package.getDepDownloadURL</function>\n<function version=\"1.1\">package.getDepDownloadURL</function>\n<function version=\"1.0\">package.search</function>\n<function version=\"1.0\">channel.listAll</function>\n</xmlrpc>\n<soap path=\"soap.pl\">\n<function version=\"1.0\">customSoapFunction</function>\n</soap>\n<rest>\n<baseurl type=\"REST1.0\">http://pear.example.com/rest/</baseurl>\n<baseurl type=\"REST1.1\">http://pear.example.com/rest/</baseurl>\n</rest>\n</primary>\n<mirror host=\"poor.example.com\" port=\"80\" ssl=\"no\">\n<xmlrpc>\n<function version=\"1.0\">logintest</function>\n<function version=\"1.0\">package.listLatestReleases</function>\n<function version=\"1.0\">package.listAll</function>\n<function version=\"1.0\">package.info</function>\n<function version=\"1.0\">package.getDownloadURL</function>\n<function version=\"1.1\">package.getDownloadURL</function>\n<function version=\"1.0\">package.getDepDownloadURL</function>\n<function version=\"1.1\">package.getDepDownloadURL</function>\n<function version=\"1.0\">package.search</function>\n<function version=\"1.0\">channel.listAll</function>\n</xmlrpc>\n<soap path=\"soap.php\">\n<function version=\"1.0\">customSoapFunction</function>\n</soap>\n<rest>\n<baseurl type=\"REST1.0\">http://poor.example.com/rest/</baseurl>\n<baseurl type=\"REST1.1\">http://poor.example.com/rest/</baseurl>\n</rest>\n</mirror>\n</servers>\n</channel>\n\n```", "```php\n$ pear install pear.example.com/subdirectory/Packagename \n\n```", "```php\n<dependencies>\n<required>\n...\n<package>\n<name>Packagename</name>\n<channel>pear.example.com/subdirectory</channel>\n</package>\n</required>\n</dependencies>\n\n```", "```php\n$ pear install pear/DB\n$ pear install chiara/Chiara_PEAR_Server \n\n```", "```php\n$ pear channel-alias pear.chiaraquartet.net c \n\n```", "```php\n$ pear install c/Chiara_PEAR_Server \n\n```", "```php\n<baseurl type=\"REST1.0\">http://pear.php.net/rest/</baseurl>\n\n```", "```php\nc/ [Categories] \nCategoryName1/\ninfo.xml [information on the \"CategoryName1\" category] \npackages.xml [list of packages in the CategoryName1 category] \nCategoryName2/\ninfo.xml [information on the \"CategoryName2\" category] \npackages.xml [list of packages in the CategoryName2 category] \nm/ [Maintainers] \njoe/\ninfo.xml [information about maintainer \"joe\"] \nfrank/\ninfo.xml [information about maintainer \"frank\"] \namy/\ninfo.xml [information about maintainer \"amy\"]\np/ [Packages]\npackages.xml [A list of all packages in this channel] \nPackageName1/\ninfo.xml [information on \"PackageName1\" package] \nmaintainers.xml [list of maintainers of this package] \nPackageName2/\ninfo.xml [information on \"PackageName2\" package] \nmaintainers.xml [list of maintainers of this package] \nPackageName3/\ninfo.xml [information on \"PackageName3\" package] \nmaintainers.xml [list of maintainers of this package] \nr/ [Releases]\nPackageName1/ [Releases of package PackageName1] \nallreleases.xml [A brief list of all releases available]\n1.0.0.xml [summary information about version 1.0.0] \npackage.1.0.0.xml [the complete package.xml of this release] \ndeps.1.0.0.txt [PHP-serialized dependencies of version 1.0.0] \n0.9.0.xml [summary information about version 0.9.0] \ndeps.0.9.0.txt [PHP-serialized dependencies of version 0.9.0] \npackage.0.9.0.xml [the complete package.xml of this release] \n...\n...\nlatest.txt [the latest version number, in text format] \nstable.txt [the latest stable version number, in text format] \nbeta.txt [the latest beta version number, in text format] \nPackageName2/ [Releases of package PackageName2] \nallreleases.xml [A brief list of all releases available] \n1.1.0.xml [summary information about version 1.1.0] \ndeps.1.1.0.txt[PHP-serialized dependencies of version 1.1.0] \npackage.1.1.0.xml [the complete package.xml of this release] \n1.0.4.xml [summary information about version 1.0.4] \ndeps.1.0.4.txt[PHP-serialized dependencies of version 1.0.4] \npackage.1.0.4.xml [the complete package.xml of this release] \n...\n...\nlatest.txt [the latest version number, in text format] \nstable.txt [the latest stable version number, in text format] \nbeta.txt [the latest beta version number, in text format] \nalpha.txt [the latest alpha version number, in text format] \ndevel.txt [the latest devel version number, in text format] \n\n```", "```php\nc/\ncategories.xml [list of all categories]\nCategoryName1/\npackagesinfo.xml [consolidated package/release info for the entire\ncategory]\nCategoryName2/\npackagesinfo.xml [consolidated package/release info for the entire\ncategory]\nm/\nallmaintainers.xml [list of all maintainers]\np/\nr/\n\n```", "```php\n$ cd php-5.1.0\n$ ./buildconf\n$ ./configure\n$ make cli\n$ make install-pear \n\n```", "```php\ngo-pear \n\n```", "```php\npear upgrade PEAR \n\n```", "```php\n$ pear channel-discover pear.chiaraquartet.net\n$ pear up Chiara_PEAR_Server-alpha \n\n```", "```php\n$ pear run-scripts chiara/Chiara_PEAR_Server \n\n```", "```php\n$ pear channel-discover pear.crtx.org\n$ pear upgrade crtx/Crtx_PEAR_Channel_Frontend \n\n```", "```php\n<?php\n/**\n* An example of Crtx_PEAR_Channel_Frontend Usage\n*\n* @copyright Copyright Â© David Shafik and Synaptic Media 2004.\n*All rights reserved.\n* @author Davey Shafik <davey@synapticmedia.net>\n* @link http://www.synapticmedia.net Synaptic Media\n* @version $Id: $\n* @package\n* @category Crtx\n*/\n/**\n* Crtx_PEAR_Channel_Frontend Class\n*/\nrequire_once 'Crtx/PEAR/Channel/Frontend.php';\n$frontend = new Crtx_PEAR_Channel_Frontend('localhost',\narray('database' => 'mysqli://user:pass@localhost/pearserver',\n'index' => 'index.php', 'admin' => 'admin_myfront.php'));\n?>\n<html>\n<head>\n<title>localhost Channel Server</title>\n<link rel=\"stylesheet\" type=\"text/css\"\nhref=\"pear_frontend.css\" />\n<?php\n$frontend->showLinks();\n?>\n</head>\n<body>\n<div id=\"top\">\n<h1><a href=\"index.php\">localhost Channel Server</a></h1>\n</div>\n<div id=\"menu\">\n<?php\n$frontend->showMenu();\n?>\n<div id=\"releases\">\n<?php\n$frontend->showLatestReleases();\n?>\n</div>\n</div>\n<div id=\"content\">\n<?php\nif (!$frontend->run()) {\n$frontend->welcome();\n}\n?>\n</div>\n</body>\n</html>\n\n```", "```php\n<Location /get>\nForceType application/x-httpd-php\n</Location>\n\n```", "```php\n<?php\n/**\n* Example restricted access file\n*\n*\n* This example requires Apache, PHP 4.3+, the mysqli extension, and\n* this code to be added to httpd.conf/.htaccess:\n* <pre>\n* <Location \"/get\">\n* ForceType application/x-httpd-php\n* </Location>\n* </pre>\n*\n* In addition, it assumes that a mysql database is set up with users\n* who have purchased the packages, and that database connection\n* info is set in php.ini\n* @package download\n*/\n// shut up or we risk getting corrupted tgz files\nerror_reporting(0);\nfunction error($message)\n{\nheader('HTTP/1.0 404 Not Found');\necho $message;\nexit;\n}\n/**\n* Downloader class, handles authentication and actual downloading\n* @package download\n*/\nclass Download\n{\nvar $user = false;\nvar $passwd = false;\n/**\n* A list of purchased versions that the current user may\n*download\n*\n* @var array\n*/\nvar $purchased = array();\n/**\n* MySQL database connection\n*\n* @var resource mysqli resource\n*/\nvar $db;\n/**\n* Full path to offline location of package releases\n*\n* @var string\n*/\nvar $path = '/path/to/releases/';\n/**\n* Hash of package names to demo versions\n*\n* This probably should be constructed from a database,\n* but for our simple example it will be hard-coded\n*\n* @var array\n*/\nvar $demo_versions = array(\n'Foo' => array('1.0demo'),\n'Bar' => array('1.1demo', '2.0demo'),\n);\n/**\n* Hash of package names to full versions\n*\n* This probably should be constructed from a database,\n* but for our simple example it will be hard-coded\n*\n* @var array\n*/\nvar $full_versions = array(\n'Foo' => array('1.0'),\n'Bar' => array('1.1', '2.0'),\n);\n/**\n* Connect to the database, authenticate the user,\n* and grab the list\n* of purchased packages for this user\n*/\nfunction Download()\n{\n// assume we have specified connection details in php.ini\n$this->db = mysqli_connect();\nif ($this->db) {\n// on database connect failure,\n// we can still download demos,\n// so fail silently\nif (isset($_SERVER['PHP_AUTH_USER']) &&\nisset($_SERVER['PHP_AUTH_PASSWD'])) {\n$this->user = $_SERVER['PHP_AUTH_USER'];\n$this->passwd = $_SERVER['PHP_AUTH_PASSWD'];\n// construct a list of purchased packages\n// for this user/pass combination\nif ($res = mysqli_query($this->db, '\nSELECT purchased_package FROM regusers\nWHERE user = \"' .\nmysqli_real_escape_string($this->db,\n$this->user) . '\", AND pass = \"' .\nmysqli_real_escape_string($this->db,\n$this->passwd) . '\"')) {\nwhile ($row = mysqli_fetch_row($res)) {\n$this->purchased[$row[0]] = true;\n}\n}\n}\n}\n}\n/**\n* Feed the file to the user, or display an error\n*\n* @param string $path\n*/\nfunction downloadPackage($path)\n{\n// note that we assume the case is correct\n// (the PEAR Installer always gets\n// this correct, only manual downloads will fail)\nif (!preg_match('/^([a-zA-Z0-9_]+)-(.+)\\.(tar|tgz)$/',\n$path, $matches)) {\nerror('invalid package/version: \"' . $path . '\"');\n}\nlist(, $package, $version, $ext) = $matches;\n// sanity check #1: does the release exist on the disk?\nif (!file_exists($this->path . $package . '-' . $version .\n'.' . $ext)) {\nerror('unknown package/release: \"' . $path . '\"');\n}\n// sanity check #2: do we know anything about this version?\nif (!isset($this->demo_versions[$package]) &&\n!isset($this->full_versions[$package])) {\nerror('unknown package: \"' . $package . '\"');\n}\n// check to see if it is a demo version, and return right\n// away if so\n// if you have more purchaser downloads than demos,\n// put this after\n// purchased check for slight speed increase\nif (isset($this->demo_versions[$package]) &&\nin_array($version, $this->demo_versions[$package],\ntrue)) {\n$this->_doDownload($package, $version, $ext);\n}\nif (isset($this->full_versions[$package]) &&\nin_array($version, $this->full_versions[$package],\ntrue)) {\nif (isset($this->purchased[$package])) {\n$this->_doDownload($package, $version, $ext);\n}\n// if we get here, the user has not purchased this\n// version\nerror('version \"' . $version . '\" is restricted and\nmust be purchased. ' .\n'Use \"pear login\" to set purchase key first');\n}\n// fall-through: this line of code should be unreachable\nerror('internal error, please report attempt to download \"\n' . $path . '\" failed');\n}\n/**\n* Do the actual downloading.\n*\n* @param string $package\n* @param string $version\n* @param string $ext this is either \"tar\" or \"tgz\"\n* @access private\n*/\nfunction _doDownload($package, $version, $ext)\n{\n// construct local path to the downloadable object\n$path = $this->path . $package . '-' . $version . '.' . $ext;\nheader('Last-modified: ' .\ngmdate('D, d M Y H:i:s \\G\\M\\T', filemtime($path)));\nheader('Content-type: application/octet-stream');\nheader('Content-disposition: attachment; filename=\"' .\n$path . '\"');\nheader('Content-length: ' . filesize($path));\nreadfile($path);\nexit;\n}\n}\nif (!isset($_SERVER['PATH_INFO']) || $_SERVER['PATH_INFO'] == '/') {\nerror('no package selected');\n}\n$info = explode('/', $_SERVER['PATH_INFO']);\nswitch (count($info)) {\ncase 2:\n$dl = new Download;\n$dl->downloadPackage($info[1]);\nbreak;\ndefault:\nerror('no package selected');\n}\n?>\n\n```", "```php\n$ pear -d \"default_channel=your.channel.com\" login\nLogging into your.channel.com\nUsername: myuser\nPassword: mypassword \n\n```", "```php\n$ pear install http://www.example.com/Package-1.0.0.tgz \n\n```", "```php\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<package packagerversion=\"1.4.3\" version=\"2.0\"\n\nxsi:schemaLocation=\"http://pear.php.net/dtd/tasks-1.0\nhttp://pear.php.net/dtd/tasks-1.0.xsd\nhttp://pear.php.net/dtd/package-2.0\nhttp://pear.php.net/dtd/package-2.0.xsd\">\n<name>Package</name>\n<uri>http://www.example.com/tarballs/Package-1.0.0</uri>\n\n```", "```php\n<package>\n<name>Package</name>\n<uri>http://www.example.com/tarballs/Package-1.0.0</uri>\n</package>\n\n```", "```php\nCHANNEL __URI INFORMATION:\n==========================\nName and Server __uri\nSummary Pseudo-channel for static packages\nValidation Package Name PEAR_Validate\nValidation Package default\nVersion\nSERVER CAPABILITIES\n===================\nTYPE VERSION/REST TYPE FUNCTION NAME/REST BASE\nNo supported protocols \n\n```", "```php\n$ pear install http://www.example.com/tarballs/Package-1.0.0.tgz \n\n```", "```php\n$ pear upgrade http://www.example.com/tarballs/Package-1.0.1.tgz \n\n```", "```php\n$ pear uninstall __uri/Package \n\n```", "```php\n$ pear list -c __uri \n\n```", "```php\n$ pear install http://www.example.com/tarballs/Foo-1.0.0.tgz\n$ pear upgrade http://www.notexample.com/Foo-1.2.3.tgz \n\n```", "```php\n$ pear install __uri/Foo\n$ pear upgrade __uri/Foo \n\n```", "```php\n$ pear package\n$ pear package -Z \n\n```", "```php\n$ pear info Packagename-1.0.0.tgz\n$ pear list-files Packagename-1.0.0.tgz \n\n```", "```php\n$ pear channel-update mychannel.example.com \n\n```", "```php\n$ pear help \n\n```"]