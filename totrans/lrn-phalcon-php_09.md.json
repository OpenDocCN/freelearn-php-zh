["```php\n<footer class=\"lp-footer\">\n    <p>Learning Phalcon</p>\n    <p>\n        <a href=\"#\">Back to top</a>\n    </p>\n</footer>\n```", "```php\n<nav>\n  <ul class=\"pager\">\n    <li><a href=\"?p={{ records['before'] }}\">Previous</a></li>\n    <li><a href=\"?p={{ records['next'] }}\">Next</a></li>\n  </ul>\n</nav>\n```", "```php\n<div class=\"lp-masthead\">\n  <div class=\"container\">\n    <nav class=\"lp-nav\">\n      <a class=\"lp-nav-item active\" href=\"{{ url('') }}\">Home</a>\n      {% for category in categories['items'] %}\n      <a class=\"lp-nav-item\" href=\"{{ url('categories/' ~ category['category_translations'][0]['category_translation_slug']) }}\">{{ category['category_translations'][0]['category_translation_name']}}</a>\n      {% endfor %}\n    </nav>\n  </div>\n</div>\n```", "```php\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<title>{% block pageTitle %}Learning Phalcon{% endblock %}</title>\n\n{{ stylesheetLink('../assets/default/bower_components/bootstrap/dist/css/bootstrap.min.css') }}\n{{ stylesheetLink('../assets/default/css/lp.css') }}\n\n<!--[if lt IE 9]>\n  <script src=\"img/html5shiv.min.js\">\n</script>\n  <script src=\"img/respond.min.js\">\n</script>\n<![endif]-->\n</head>\n<body>\n  {% block navbar %}\n    {% include 'common/navbar.volt' %}\n  {% endblock %}\n\n  <div class=\"container\">\n    <div class=\"lp-header\">\n      <h1 class=\"lp-title\">Learning Phalcon</h1>\n      <p class=\"lead lp-description\">The fastest PHP Framework</p>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-sm-12 lp-main\">\n        {% block body %}\n\n        {% endblock %}\n      </div>\n    </div>\n  </div>\n\n  {% block footer %}\n    {% include 'common/footer.volt' %}\n  {% endblock %}\n\n  {{ javascriptInclude(\"../assets/default/bower_components/jquery/dist/jquery.min.js\") }}\n  {{ javascriptInclude(\"../assets/default/bower_components/bootstrap/dist/js/bootstrap.min.js\") }}\n  {{ javascriptInclude(\"../assets/default/js/lp.js\") }}\n  {% block javascripts %} {% endblock %}\n</body>\n</html>\n```", "```php\n@import url(http://fonts.googleapis.com/css?family=News+Cycle:400,700);\n\nbody { font-family: \"News Cycle\"; color: #555; }\n\nh1, .h1, h2, .h2, h3, .h3, h4, .h4, h5, .h5, h6, .h6 {\n    margin-top: 0; font-family: \"News Cycle\"; font-weight: normal; color: #333;\n}\n\n.container {\n    width: 720px;\n}\n\n.lp-masthead { background-color: #356aa0; -webkit-box-shadow: inset 0 -2px 5px rgba(0, 0, 0, .1); box-shadow: inset 0 -2px 5px rgba(0, 0, 0, .1); }\n.lp-nav-item { position: relative; display: inline-block; padding: 10px; font-weight: 500; color: #cdddeb; }\n\n.lp-nav-item:hover,\n.lp-nav-item:focus {\n    color: #fff; text-decoration: none;\n}\n\n.lp-nav .active       { color: #fff; }\n.lp-nav .active:after { position: absolute; bottom: 0; left: 50%; width: 0; height: 0; margin-left: -5px; vertical-align: middle; content: \" \"; border-right: 5px solid transparent; border-bottom: 5px solid; border-left: 5px solid transparent; }\n.lp-header            { padding-top: 20px; padding-bottom: 20px; }\n\n.lp-title       { margin-top: 30px; margin-bottom: 0; font-size: 30px; font-weight: normal; }\n.lp-description { font-size: 16px; color: #999; }\n\n.lp-main            { font-size: 13px; line-height: 1.5; }\n\n.pager           { margin-bottom: 60px; text-align: left; }\n.pager>li>a      { width: 140px; padding: 10px 20px; text-align: center; border-radius: 30px; }\n\n.lp-post       { margin-bottom: 60px; }\n.lp-post-title { margin-bottom: 5px; font-size: 40px; }\n.lp-post-meta  { margin-bottom: 20px; color: #999; }\n\n.lp-footer              { padding: 40px 0; color: #999; text-align: center; background-color: #f9f9f9; border-top: 1px solid #e5e5e5; }\n.lp-footer p:last-child { margin-bottom: 0; }\n```", "```php\n<?php\nnamespace App\\Frontend\\Controllers;\n\nclass BaseController extends \\App\\Core\\Controllers\\BaseController\n{\n    public function afterExecuteRoute()\n    {\n        $this->view->categories = $this->apiGet('categories');\n    }\n}\n```", "```php\n  public function indexAction()\n  {\n      return $this->dispatcher->forward([\n    'controller' => 'article',\n    'action' => 'list'\n      ]);\n  }\n```", "```php\n{% for record in records['items'] %}\n{% if (record['article_is_published'] == 1) %}\n<div class=\"lp-post\">\n  <h2 class=\"lp-post-title\">{{ record['article_translations'][0]\n  ['article_translation_short_title'] }}</h2>\n  <p class=\"lp-post-meta\">\n  {{ record['article_created_at']|date(\"d M Y\") }} by\n    <a href=\"#\">\n  {{ record['article_author']['user_first_name']}}\n  {{ record['article_author']['user_last_name']}}\n    </a></p>\n  <p>\n  {{ record['article_translations'][0]\n  ['article_translation_long_title'] }}\n  <a href=\"{{ url('article/' ~ record['article_translations'][0]\n    ['article_translation_slug']) }}\">Read more</a>\n  </p>\n</div>\n{% endif %}\n{% endfor %}\n```", "```php\n{% extends 'layout.volt' %}\n{% block body %}\n    {% include 'article/common/list.item' with {'records':records} %}\n    {% if records['total_items'] > 2 %}\n    {% include 'common/paginator' with {'records':records} %}\n    {% endif %}\n{% endblock %}\n```", "```php\n<?php\nnamespace App\\Frontend\\Controllers;\n\nclass ArticleController extends BaseController{\n  public function listAction() {\n    $page = $this->request->getQuery('p', 'int', 1);\n\n    try {\n      $records = $this->apiGet('articles',['p' => $page, 'limit' => 2]);\n      $this->view->records = $records;\n    } catch (\\Exception $e) {\n      $this->flash->error($e->getMessage());\n    }\n  }\n}\n```", "```php\npublic function getBySlugAction($slug) {\n  try {\n    $manager = $this->getDI()->get('core_article_manager');\n\n    $st_output = $manager->restGet([\n      'article_translation_slug = :article_translation_slug:',\n      'bind' => [\n        'article_translation_slug' => $slug,\n      ],\n    ]);\n\n    return $this->render($st_output);\n  } catch (\\Exception $e) {\n    return $this->render([\n      'code' => $e->getCode(),\n      'message' => $e->getMessage(),\n    ], $e->getCode());\n  }\n}\n```", "```php\npublic function find($parameters = null) {\n  if (isset($parameters['bind']['article_translation_slug'])) {\n    $translation = ArticleTranslation::findFirst($parameters);\n    if ($translation->count() !== 1) {\n      return [$translation->getArticle()->toArray()];\n    } else {\n      throw new \\Exception('Article not found', 404);\n    }\n  } elseif (isset($parameters['bind']['category_translation_slug'])) {\n      $category_translation = CategoryTranslation::findFirst($parameters);\n      if ($category_translation->count() !== 1) {\n        return $category_translation->getCategory()->getArticles();\n      } else {\n        throw new \\Exception('Article not found', 404);\n      }\n  } else {\n    return Article::find($parameters);\n  }\n}\n```", "```php\n$result = $objects->filter(function ($object) {\n  return $object->toArray();\n});\n```", "```php\nif (is_array($objects)) {\n  $result = $objects;\n} else {\n  $result = $objects->filter(function ($object) {\n    return $object->toArray();\n  });\n}\n```", "```php\npublic function readAction($slug) {\n  try {\n    $records = $this->apiGet(\"articles/slug/$slug\");\n\n    $this->view->records = $records;\n  } catch (\\Exception $e) {\n    $this->flash->error($e->getMessage());\n  }\n}\n```", "```php\n$articles->addGet('/slug/{slug}', ['action' => 'getBySlug']);\n```", "```php\n$router->add('#^/articles/([a-zA-Z0-9\\-]+)[/]{0,1}$#', array(\n  'module' => 'frontend',\n  'controller' => 'article',\n  'action' => 'read',\n  'slug' => 1,\n));\n```", "```php\n{% for record in records['items'] %}\n{% if (record['article_is_published'] == 1) %}\n<div class=\"lp-post\">\n  <h2 class=\"lp-post-title\">{{ record['article_translations'][0]\n  ['article_translation_short_title'] }}</h2>\n  <p class=\"lp-post-meta\">{{ record['article_created_at']|date(\n    \"d M Y\") }} by <a href=\"#\">\n    {{ record['article_author']['user_first_name']}}\n    {{ record['article_author']['user_last_name'] }}</a></p>\n  <p>\n  <strong>{{ record['article_translations'][0]\n  ['article_translation_long_title'] }}</strong>\n  </p>\n  <p>\n    {{ record['article_translations'][0]\n    ['article_translation_description'] }}\n  </p>\n</div>\n{% endif %}\n{% endfor %}\n```", "```php\n{% extends 'layout.volt' %}\n{% block body %}\n{% include 'article/common/item' with {'records':records} %}\n{% endblock %}\n```", "```php\n    $articles->addGet('/category/{slug}', ['action' => 'getByCategorySlug']);\n    ```", "```php\n    public function getByCategorySlugAction($slug) {\n      try {\n        $manager = $this->getDI()->get('core_article_manager');\n\n        $st_output = $manager->restGet([\n          'category_translation_slug = :category_translation_slug:',\n            'bind' => [\n              'category_translation_slug' => $slug,\n            ],\n        ]);\n\n        return $this->render($st_output);\n      } catch (\\Exception $e) {\n        return $this->render([\n          'code' => $e->getCode(),\n          'message' => $e->getMessage(),\n        ], $e->getCode());\n      }\n    }\n    ```", "```php\n    $router->add('#^/categories/([a-zA-Z0-9\\-]+)[/]{0,1}$#', array(\n        'module' => 'frontend',\n        'controller' => 'article',\n        'action' => 'categories',\n        'slug' => 1,\n    ));\n    ```", "```php\n    public function categoriesAction($slug) {\n      $this->view->pick('article/list');\n\n      try {\n        $records = $this->apiGet(\"articles/category/$slug\");\n\n                $this->view->records = $records;\n            } catch (\\Exception $e) {\n                $this->flash->error($e->getMessage());\n            }\n        }\n    ```", "```php\n    $ wget -qO - https://packages.elasticsearch.org/GPG-KEY-elasticsearch | sudo apt-key add -\n    $ sudo add-apt-repository \"deb http://packages.elasticsearch.org/elasticsearch/1.4/debian stable main\"\n    $ sudo apt-get update && sudo apt-get install elasticsearch\n\n    ```", "```php\n    $ sudo update-rc.d elasticsearch defaults 95 10\n\n    ```", "```php\n    $ sudo service elasticsearch start\n\n    ```", "```php\n    $ curl -X GET http://localhost:9200/\n\n    ```", "```php\n    {\n      \"status\" : 200,\n      \"name\" : \"Lord Pumpkin\",\n      \"cluster_name\" : \"elasticsearch\",\n      \"version\" : {\n        \"number\" : \"1.4.4\",\n        \"build_hash\" : \"c88f77ffc81301dfa9dfd81ca2232f09588bd512\",\n        \"build_timestamp\" : \"2015-02-19T13:05:36Z\",\n        \"build_snapshot\" : false,\n        \"lucene_version\" : \"4.10.3\"\n      },\n      \"tagline\" : \"You Know, for Search\"\n    }\n    ```", "```php\n    $ php composer.phar require \"elasticsearch/elasticsearch\":\"1.3.3\"\n\n    ```", "```php\n$di['elastic'] = function() {\n    return new \\Elasticsearch\\Client();\n};\n```", "```php\nprotected function paginate($data, $limit, $page)\n{\n    $paginator = new \\Phalcon\\Paginator\\Adapter\\NativeArray(\n      array(\n          \"data\" => $data,\n          \"limit\"=> $show,\n          \"page\" => $page\n      )\n    );\n\n    $items = $paginator->getPaginate();\n\n    if ($items->total_items > 0) {\n      return $items;\n    }\n\n    return false;\n}\n```", "```php\nprotected function esNormalize($article) {\n  $body = json_decode(json_encode($article->toArray(),\n    JSON_NUMERIC_CHECK), true);\n  $body['article_created_at'] = str_replace(' ', 'T', \n  $body['article_created_at']);\n  if ($body['article_updated_at'] != '') {\n    $body['article_updated_at'] = str_replace(' ', 'T', \n    $body['article_updated_at']);\n  } else {\n    $body['article_updated_at'] = $body['article_created_at'];\n  }\n  return $body;\n}\n```", "```php\npublic function esIndex($article) {\n  $elastic_manager = $this->getDI()->get('elastic');\n\n  $params          = array();\n  $params['index'] = 'learningphalcon';\n  $params['type']  = 'article';\n  $params['id']    = 'article-' . $article->getId();\n  $params['body']  = $this->esNormalize($article);\n\n  $elastic_manager->index($params);\n\n  return true;\n}\n```", "```php\npublic function esindexAction() {\n  $article_manager = $this->getDI()->get('core_article_manager');\n\n  foreach ($article_manager->find() as $article) {\n    try {\n      $article_manager->esindex($article);\n      $this->consoleLog(\"Article {$article->getId()} has been indexed\");\n    } catch (\\Exception $e) {\n      $this->consoleLog(\"Article {$article->getId()} has not been indexed. Reason: {$e->getMessage()}\", \"red\");\n    }\n  }\n}\n```", "```php\n$ php modules/cli.php article esindex\n\n```", "```php\n    $this->persistent->set('es_add_to_index_id', $object_id);\n\n    ```", "```php\n    $this->flashSession->success('Object was updated successfully');\n\n    ```", "```php\n    public function editAction($id) {\n      $manager = $this->getDI()->\n        get('core_article_manager');\n      $object = $manager->findFirstById($id);\n      if (!$object) {\n        $this->flashSession->error('Object not found');\n        return $this->response->redirect('article/list');\n      }\n      if ($es_add_to_index_id = $this->persistent->\n        get('es_add_to_index_id')) {\n        $article = $manager->findFirstByid(\n          $es_add_to_index_id);\n          try {\n            $manager->esindex($article);\n          } catch (\\Exception $e) {\n            $this->flash->error(\"Article was not added to ES \n              index\");\n          }\n        }\n\n        $this->persistent->set('id', $id);\n        $this->view->form = $manager->getForm(\n          $object,['edit' => true]);\n    }\n    ```", "```php\n    public function esdelete($article_id)\n    {\n        $elastic_manager = $this->getDI()->get('elastic');\n\n        $params['index'] = 'learningphalcon';\n        $params['type']  = 'article';\n        $params['id']  = 'article-'.(int)$article_id;\n\n        try {\n            $elastic_manager->delete($params);\n        } catch (\\Exception $e) {\n\n        }\n    }\n```", "```php\n    public function elasticSearchByCategorySlug($categorySlug, $show, $page, $limit)\n    {\n        $elastic_manager = $this->getDI()->get('elastic');\n        $params['index'] = 'learningphalcon';\n        $params['type']  = 'article';\n\n        $params['body']['from'] = 0;\n        $params['body']['size'] = $limit;\n\n        $params['body']['query']['bool']['must'] = array(\n            array('match' => array('category_translation_slug' => $categorySlug))\n        );\n\n        $params['body']['sort'] = [\n            'post_id' => ['order' => 'desc']\n        ];\n\n        $queryResponse = $elastic_manager->search($params);\n\n        foreach ($queryResponse['hits']['hits'] as $hit) {\n            $tmp['items'][] = $hit['_source'];\n        }\n\n        return $this->paginate($tmp['items'], $show, $page);\n    }\n```", "```php\n<?php\nnamespace App\\Core\\Models\\Mongo;\n\nclass BaseCollection extends \\Phalcon\\Mvc\\Collection\n{\n}\n```", "```php\n<?php\nnamespace App\\Core\\Models\\Mongo;\n\nclass ArticleLog extends BaseCollection\n{\n    public $article_id;\n\n    public $client_ip;\n\n    public $user_agent;\n\n    public $timestamp;\n\n    public function getSource()\n    {\n        return 'article_log';\n    }\n\n    public function log($article_id, \\Phalcon\\Http\\Request $request)\n    {\n        $log = new self();\n        $log->article_id = (int) $article_id;\n        $log->client_ip  = $request->getClientAddress();\n        $log->user_agent = $request->getUserAgent();\n        $log->timestamp  = time();\n\n        $log->save();\n    }\n\n    public function countVisits($article_id, $unique = false)\n    {\n        if (false === $unique) {\n            return $this->count(array(\n                array(\n                    \"article_id\" => $article_id\n                )\n            ));\n        } else {\n            $result = $this->getConnection()->command(\n                array(\n                    'distinct' => 'article_log',\n                    'key' => 'client_ip',\n                    'query' => ['article_id' => $article_id],\n                )\n            );\n\n            return count($result['values']);\n        }\n    }\n\n    public function columnMap()\n    {\n        return [\n            'article_id' => 'article_id',\n            'client_ip'  => 'client_ip',\n            'user_agent' => 'user_agent',\n            'timestamp'  => 'timestamp',\n        ];\n    }\n}\n```", "```php\n    public function mongoLog($article_id, \\Phalcon\\Http\\Request $request)\n    {\n        $log = new ArticleLog();\n        $log->log($article_id, $request);\n    }\n\n    public function countVisits($article_id, $unique = false)\n    {\n        $alog = new ArticleLog();\n        return $alog->countVisits($article_id, $unique);\n    }\n```", "```php\npublic function readAction($slug){\n  try {\n    $records = $this->apiGet(\"articles/slug/$slug\");\n    $manager = $this->getDI()->get(\n      'core_article_manager');\n    $total_views = $manager->countVisits(\n      $records['items'][0]['id']);\n    $manager->mongoLog($records['items'][0]['id'],\n      $this->request);\n    $this->view->records = $records;\n    $this->view->total_views = $total_views;\n  } catch (\\Exception $e) {\n    $this->flash->error($e->getMessage());\n  }\n}\n```", "```php\n$total_views = $manager->countVisits($records['items'][0]['id'], true);\n\n```", "```php\n{% extends 'layout.volt' %}\n{% block body %}\n    {% include 'article/common/item' with {'records':records, 'total_views' : total_views} %}\n{% endblock %}\n```", "```php\n{% for record in records['items'] %}\n{% if (record['article_is_published'] == 1) %}\n<div class=\"lp-post\">\n  <h2 class=\"lp-post-title\">\n    {{ record['article_translations'][0]\n      ['article_translation_short_title'] }}</h2>\n  <p class=\"lp-post-meta\">\n    {{ record['article_created_at']|date(\"d M Y\") }}\n    by <a href=\"#\">\n    {{record['article_author']['user_first_name'] }}\n    {{ record['article_author']['user_last_name'] }}</a>\n    {% if dispatcher.getActionName() == 'read') %}\n    <span class=\"pull-right glyphicon glyphicon-eye-open\">\n    {{ total_views }}\n    </span>\n    {% endif %}\n  </p>\n  <p>\n    <strong>{{ record['article_translations'][0]\n    ['article_translation_long_title'] }}</strong>\n  </p>\n  <p>\n    {{ record['article_translations'][0]\n      ['article_translation_description'] }}\n  </p>\n</div>\n{% endif %}\n{% endfor %}\n```"]