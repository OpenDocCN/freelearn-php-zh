- en: Chapter 9. System Events and Advanced Configuration
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9章。系统事件和高级配置
- en: 'In this chapter we will cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我们将涵盖以下食谱：
- en: Declaring advanced configuration variables
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 声明高级配置变量
- en: Enabling events in concrete5
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用concrete5中的事件
- en: Listening to system events
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 监听系统事件
- en: Passing parameters to event handlers
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将参数传递给事件处理器
- en: Defining a page type event
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义页面类型事件
- en: Sending an e-mail when a user creates an account
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当用户创建账户时发送电子邮件
- en: Sending an e-mail when a file has been uploaded
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当文件被上传时发送电子邮件
- en: Creating a custom scheduled job
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建自定义计划任务
- en: Making your add-on translation ready
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使您的插件翻译准备就绪
- en: Rebranding concrete5 as a white label CMS
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将concrete5重命名为白标CMS
- en: Changing the dashboard background image
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更改仪表板背景图片
- en: Introduction
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: concrete5 contains a lot of miscellaneous advanced functionality for developers.
    Earlier in the book, we have touched on the concept of events in concrete5\. In
    this chapter, we will explore recipes to listen for system events and act upon
    them, as well as create customized configuration settings and even change the
    concrete5 branding to white label the CMS as your own.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: concrete5包含许多针对开发者的杂项高级功能。在本书早期，我们已经提到了concrete5中的事件概念。在本章中，我们将探讨监听系统事件并对其采取行动的食谱，以及创建自定义配置设置，甚至更改concrete5的品牌以实现白标CMS。
- en: About the code in this chapter
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关于本章中的代码
- en: This chapter will sometimes place code in places, such as `/config/site_post.php`,
    which can sometimes interrupt the normal operation of the website. Make sure you
    perform these recipes on a development server!
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 本章有时会在 `/config/site_post.php` 等位置放置代码，这可能会干扰网站的正常操作。请确保您在开发服务器上执行这些食谱！
- en: Declaring advanced configuration variables
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 声明高级配置变量
- en: concrete5 comes with a bunch of "secret" advanced configuration variables that
    developers can set to augment the behavior of concrete5\. In this recipe, we will
    set a hypothetical configuration setting.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: concrete5自带了许多“秘密”的高级配置变量，开发者可以设置这些变量以增强concrete5的行为。在本食谱中，我们将设置一个假设的配置设置。
- en: How to do it...
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'The steps for declaring advanced configuration variables are as follows:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 声明高级配置变量的步骤如下：
- en: Open the site configuration file, located at `/config/site.php` in your preferred
    code editor.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开位于 `/config/site.php` 的网站配置文件，使用您首选的代码编辑器打开。
- en: 'Declare a new constant variable called `FOO` and set its value to `BAR`, as
    follows:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 声明一个新的常量变量，名为 `FOO`，并将其值设置为 `BAR`，如下所示：
- en: '[PRE0]'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Save the `site.php` file.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存 `site.php` 文件。
- en: How it works...
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: concrete5 simply loads this file at the beginning of every page request. By
    defining configuration settings here, developers can override default concrete5
    settings and also create their own constant variables. If a developer were to
    dump the contents of the constant `FOO`, they would see the string `BAR`.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: concrete5在每次页面请求开始时简单地加载此文件。通过在此处定义配置设置，开发者可以覆盖默认的concrete5设置，并创建他们自己的常量变量。如果开发者导出常量
    `FOO` 的内容，他们将看到字符串 `BAR`。
- en: Enabling events in concrete5
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在concrete5中启用事件
- en: concrete5 comes with a publish/subscribe event model that makes it easy for
    developers to have their code respond to system events. If developers wish to
    declare events in `/config/site_events.php` (which we do in this chapter), they
    must be enabled in `site.php`.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: concrete5自带了一个发布/订阅事件模型，这使得开发者能够使他们的代码响应系统事件。如果开发者希望在 `/config/site_events.php`
    中声明事件（我们将在本章中这样做），则必须在 `site.php` 中启用它们。
- en: How to do it...
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'The steps to enable events are as follows:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 启用事件的步骤如下：
- en: Locate the file `/config/site.php` and open it in your preferred code editor.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定位文件 `/config/site.php` 并使用您首选的代码编辑器打开它。
- en: 'Add the following configuration setting to `config.php`:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下配置设置添加到 `config.php` 文件中：
- en: '[PRE1]'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Save the file.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件。
- en: Clear the concrete5 cache by visiting `/dashboard/system/optimization/clear_cache/`
    and clicking on the **Clear Cache** button.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过访问 `/dashboard/system/optimization/clear_cache/` 并点击 **清除缓存** 按钮来清除concrete5缓存。
- en: How it works...
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Before concrete5 allows developers to register event listeners in `/config/site_events.php`,
    it will check to see if this configuration setting is present and set to `true`.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在concrete5允许开发者在 `/config/site_events.php` 中注册事件监听器之前，它会检查此配置设置是否存在并设置为 `true`。
- en: There's more...
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容...
- en: In later concrete5 versions (Versions 5.5 and above) this step can be ignored,
    though this author's personal preference is to put the configuration in place
    anyway, so that events can be enabled or disabled (by setting the value to `false`)
    with ease.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在 later concrete5 版本（5.5 及以上版本）中，可以忽略此步骤，尽管作者的个人偏好是无论如何都要放置配置，以便可以轻松启用或禁用事件（通过将值设置为
    `false`）。
- en: See also
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The *Declaring advanced configuration variables* recipe
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*声明高级配置变量* 菜谱'
- en: The *Listening to system events* recipe
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*监听系统事件* 菜谱'
- en: Listening to system events
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 监听系统事件
- en: Once events have been enabled in concrete5, developers can write their own code
    to respond to the different events. In this recipe, we will create a basic "Hello
    World!" event that runs immediately when a page is visited and outputs a message
    to the screen.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦在 concrete5 中启用了事件，开发者就可以编写自己的代码来响应不同的事件。在本菜谱中，我们将创建一个基本的 "Hello World!" 事件，当访问页面时立即运行并输出一条消息到屏幕上。
- en: Getting ready
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Before you can register an event in `site_events.php`, concrete5 must be configured
    to enable the events system. Refer to the previous recipe to see how to enable
    events.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `site_events.php` 中注册一个事件之前，concrete5 必须配置为启用事件系统。请参考前面的菜谱了解如何启用事件。
- en: How to do it...
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'The steps are as follows:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 步骤如下：
- en: Create a new file in `/config` called `site_events.php`.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `/config` 目录下创建一个名为 `site_events.php` 的新文件。
- en: Open `site_events.php` in your preferred code editor.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你喜欢的代码编辑器中打开 `site_events.php`。
- en: Add the following code to listen to the `on_start` event.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下代码以监听 `on_start` 事件。
- en: '[PRE2]'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Create a new file in `/libraries` called `my_class.php`.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `/libraries` 目录下创建一个名为 `my_class.php` 的新文件。
- en: Define a new class called `MyClass` in `my_class.php`.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `my_class.php` 中定义一个名为 `MyClass` 的新类。
- en: '[PRE3]'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Add a method to `MyClass` called `onStartFired`.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向 `MyClass` 添加一个名为 `onStartFired` 的方法。
- en: '[PRE4]'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: In `onStartFired`, use the `die` function to output **hello world!**.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `onStartFired` 中，使用 `die` 函数输出 **hello world!**。
- en: '[PRE5]'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Visit any page on your site. You will see a white screen with the words **hello
    world!** as shown in the following screenshot:![How to do it...](img/4548OS_09_01.jpg)
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问你网站上的任何页面。你将看到一个带有文字 **hello world!** 的白色屏幕，如下截图所示：![如何操作...](img/4548OS_09_01.jpg)
- en: Feel free to comment out the `die` statement in the `onStartFired` function
    of `MyClass` to restore your site to proper working order.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 随意取消注释 `MyClass` 中 `onStartFired` 函数的 `die` 语句以恢复你的网站到正常工作状态。
- en: How it works...
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: concrete5 will automatically check for the presence of the `/config/site_events.php`
    file and execute any code contained within it while the site is loading (much
    like how `/config/site_post.php` behaves). This is the perfect place to experiment
    with our event registrations. When we call `Event::extend()`, we pass in arguments
    that specify which event we want to listen to, the class name that our event handler
    resides in (`MyClass`, in this example), the method within that class that will
    be executed when the event is fired (`onStartFired`, in this case), and finally
    the path to the file containing our handler class.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: concrete5 将在网站加载时自动检查 `/config/site_events.php` 文件的存在，并执行其中包含的任何代码（这与 `/config/site_post.php`
    的行为类似）。这是进行事件注册实验的完美地方。当我们调用 `Event::extend()` 时，我们传入的参数指定了我们想监听的事件、我们的事件处理器所在类的名称（在这个例子中是
    `MyClass`），当事件被触发时将在该类中执行的方法（在这种情况下是 `onStartFired`），以及包含我们的处理器类的文件路径。
- en: See also
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The *Enabling events in concrete5* recipe
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在 concrete5 中启用事件* 菜谱'
- en: The *Passing parameters to event handlers* recipe
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*向事件处理器传递参数* 菜谱'
- en: Passing parameters to event handlers
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向事件处理器传递参数
- en: Event handlers are the functions that concrete5 executes when events are fired.
    In the previous recipe, we used the custom class `MyClass` and its function `onStartFired`
    as the event handler. concrete5 allows developers to actually pass parameters
    to these handlers as well. In this recipe, we build upon the event handler from
    the previous recipe and pass a message to the `onStartFired` handler, which will
    output that message.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 事件处理器是 concrete5 在事件被触发时执行的功能。在先前的菜谱中，我们使用了自定义类 `MyClass` 和其函数 `onStartFired`
    作为事件处理器。concrete5 允许开发者向这些处理器传递参数。在本菜谱中，我们基于先前的事件处理器构建，并向 `onStartFired` 处理器传递一条消息，该消息将被输出。
- en: Getting ready
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: We will be using the code that we created in the previous recipe as the base
    for this one. Also, make sure that you have enabled events as described in the
    first recipe in this chapter.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用在先前的菜谱中创建的代码作为本菜谱的基础。同时，确保你已经按照本章第一菜谱中的描述启用了事件。
- en: How to do it...
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'The steps for passing parameters to event handlers are as follows:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 将参数传递给事件处理函数的步骤如下：
- en: Open the `site_events.php` file located in `/config` in your code editor.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在代码编辑器中打开位于`/config`的`site_events.php`文件。
- en: 'Add a new argument to the event registration code, so it looks like the following
    code:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在事件注册代码中添加一个新参数，使其看起来像以下代码：
- en: '[PRE6]'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Open `/libraries/my_class.php` and change `onStartFired` so that it looks like
    the following code:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`/libraries/my_class.php`，将`onStartFired`修改为以下代码：
- en: '[PRE7]'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: You will now be able to see the new message when you refresh your website as
    shown in the following screenshot:![How to do it...](img/4548OS_09_02.jpg)
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你现在可以在刷新你的网站时看到新的消息，如下面的截图所示：![如何做...](img/4548OS_09_02.jpg)
- en: Feel free to comment out the `die` statement to allow your site to function
    as normal.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 随意取消注释`die`语句以允许您的网站正常工作。
- en: How it works...
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: By adding a fifth parameter to the `Events::extend()` function call, we can
    send parameters to the event handler function. This new parameter needs to be
    an array, which contains the various parameters that we wish to send to the handler.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 通过向`Events::extend()`函数调用添加第五个参数，我们可以向事件处理函数发送参数。这个新参数需要是一个数组，它包含我们希望发送到处理函数的各种参数。
- en: You may notice that our handler function, `onStartFired`, has two parameters
    (`$view` and `$message`), when we only specified the message parameter. This is
    because concrete5 provides the current `View` object to the handler as a bit of
    context, which can be useful. If you are ever unsure of which parameters have
    been applied to your function, dump the result of the `func_get_args()` function
    of PHP to see an array of all of the parameters that have been sent, as they can
    vary between events.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会注意到，我们的处理函数`onStartFired`有两个参数（`$view`和`$message`），尽管我们只指定了消息参数。这是因为concrete5将当前的`View`对象作为一点上下文提供给处理函数，这可能很有用。如果你对函数应用了哪些参数不确定，可以将PHP的`func_get_args()`函数的结果输出，以查看所有已发送参数的数组，因为它们可以在事件之间有所不同。
- en: See also
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The *Enabling events in concrete5* recipe
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在concrete5中启用事件*的食谱'
- en: The *Listening to system events* recipe
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*监听系统事件*的食谱'
- en: Defining a page type event
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定义页面类型事件
- en: In addition to providing a variety of events that developers can hook into,
    concrete5 also provides an events system at the page type level. We discussed
    page types in detail in the first chapter of this book, but now we can add a custom
    event to our page types. In this recipe, we will create a page type called `blog_post`
    and hook into the `on_page_add` event for that page type.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 除了提供各种开发者可以挂钩的事件外，concrete5还在页面类型级别提供事件系统。我们在本书的第一章详细讨论了页面类型，但现在我们可以向我们的页面类型添加自定义事件。在本食谱中，我们将创建一个名为`blog_post`的页面类型，并挂钩该页面类型的`on_page_add`事件。
- en: Getting ready
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Page types and how to work with them are described in much more detail in [Chapter
    1](ch01.html "Chapter 1. Pages and Page Types"), *Pages and Page Types*. Make
    sure events are enabled in concrete5 and that your `/config/site_events.php` file
    exists.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 页面类型及其使用方法在[第1章](ch01.html "第1章。页面和页面类型")*页面和页面类型*中有更详细的描述。确保在concrete5中启用事件，并且你的`/config/site_events.php`文件存在。
- en: How to do it...
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'The steps for defining a page type event are as follows:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 定义页面类型事件的步骤如下：
- en: 'Register the event handler in `/config/site_events.php`:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`/config/site_events.php`中注册事件处理程序：
- en: '[PRE8]'
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: First, create a new page type file in `/page_types` called `blog_post.php`.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，在`/page_types`中创建一个名为`blog_post.php`的新页面类型文件。
- en: Next, create the controller file for the page type in `/controllers/page_types/blog_post.php`.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在`/controllers/page_types/blog_post.php`中为页面类型创建控制器文件。
- en: 'Create the controller class, extending the core `Controller` class:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建控制器类，扩展核心`Controller`类：
- en: '[PRE9]'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Add a method to the controller class called `on_page_add`:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在控制器类中添加一个名为`on_page_add`的方法：
- en: '[PRE10]'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'In the `on_page_add` function, create a simple `die` statement so we know that
    this event is working:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`on_page_add`函数中，创建一个简单的`die`语句，这样我们就能知道这个事件正在工作：
- en: '[PRE11]'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Install the page type by visiting `/dashboard/pages/types`.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过访问`/dashboard/pages/types`安装页面类型。
- en: Click on **Add a Page Type**.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**添加页面类型**。
- en: Give the page type a name and make sure the handle is set to `blog_post`.![How
    to do it...](img/4548OS_09_03.jpg)
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 给页面类型起一个名字，并确保处理程序设置为`blog_post`。![如何做...](img/4548OS_09_03.jpg)
- en: Now visit the sitemap, located at `/dashboard/sitemap/full/`.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，访问位于`/dashboard/sitemap/full/`的网站地图。
- en: Add a new page to the site, choose blog post as the page type.![How to do it...](img/4548OS_09_04.jpg)
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向网站添加一个新页面，选择博客文章作为页面类型。![如何做...](img/4548OS_09_04.jpg)
- en: Add a blog post as shown in the following screenshot:![How to do it...](img/4548OS_09_05.jpg)
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加一个博客文章，如下面的截图所示：![如何操作...](img/4548OS_09_05.jpg)
- en: When the page is added, you will see the message that you created in the event
    handler, as shown in the following screenshot:![How to do it...](img/4548OS_09_06.jpg)
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当页面添加时，您将看到事件处理器中创建的消息，如下面的截图所示：![如何操作...](img/4548OS_09_06.jpg)
- en: Don't forget to remove the `die` statement from your event handler so that your
    website returns to normal functionality.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不要忘记从事件处理器中删除`die`语句，以便您的网站恢复正常功能。
- en: How it works...
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: When adding events to page types, concrete5 removes the need for developers
    to manually specify the class name, function name, and file location of the event
    handler. Because page types follow a specific convention (the controller name
    is called `BlogPostPageTypeController`) and are usually located in the `/controllers/page_types`
    directory, concrete5 can automatically determine which file and class should be
    loaded to handle the event.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 当向页面类型添加事件时，concrete5消除了开发者手动指定事件处理器类名、函数名和文件位置的需求。因为页面类型遵循特定的约定（控制器名称称为`BlogPostPageTypeController`）并且通常位于`/controllers/page_types`目录中，所以concrete5可以自动确定应该加载哪个文件和类来处理事件。
- en: There's more...
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多...
- en: 'Parameters can be passed to page type event handlers just like they are in
    regular event handlers. Simply add a third parameter to the event declaration,
    an array containing each of the parameters to be passed onto the handler function
    as follows:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 参数可以像在常规事件处理器中一样传递给页面类型事件处理器。只需在事件声明中添加一个第三个参数，一个包含要传递给处理器函数的每个参数的数组，如下所示：
- en: '[PRE12]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The new parameter can then be accessed from the handler function:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 然后可以从处理器函数中访问新参数：
- en: '[PRE13]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: See also
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The *Enabling events in concrete5* recipe
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在concrete5中启用事件*配方'
- en: The *Listening to system events* recipe
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*监听系统事件*配方'
- en: The *Passing parameters to event handlers* recipe
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*传递参数到事件处理器*配方'
- en: Sending an e-mail when a user creates an account
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 当用户创建账户时发送电子邮件
- en: We have covered a number of recipes pertaining to events in concrete5 so far
    in this chapter. Now we can try out a common real-world example of using system
    events to execute custom code. In this recipe, we will send an e-mail to a site
    administrator whenever a user registers on the website.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们已经介绍了许多与concrete5事件相关的配方。现在我们可以尝试一个常见的现实世界示例，即使用系统事件来执行自定义代码。在这个配方中，每当用户在网站上注册时，我们将向网站管理员发送一封电子邮件。
- en: Getting ready
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Sending e-mails can be tricky business in PHP, as a lot of it can depend on
    individual server configuration. We will be using concrete5's Mail helper (discussed
    in more detail in [Chapter 4](ch04.html "Chapter 4. Using the Core Helpers"),
    Using the *Core Helpers*), which helps a little bit, but misconfigured servers
    can still have problems. We will assume that your server (development or otherwise)
    is capable of sending e-mails.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在PHP中发送电子邮件可能很棘手，因为很多都取决于服务器配置。我们将使用concrete5的邮件助手（在[第4章](ch04.html "第4章。使用核心助手")中更详细地讨论），这有助于一点，但配置错误的服务器仍然可能有问题。我们将假设您的服务器（开发或其他）能够发送电子邮件。
- en: Also, make sure that events are enabled in concrete5 as described in the *Declaring
    advanced configuration variables* recipe of this chapter!
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，确保在concrete5中启用事件，如本章中*声明高级配置变量*配方所述！
- en: How to do it...
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'The steps for sending an e-mail when a user creates an account, are as follows:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户创建账户时发送电子邮件的步骤如下：
- en: 'Declare the event listener in `/config/site_events.php`:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`/config/site_events.php`中声明事件监听器：
- en: '[PRE14]'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Create the `user_emailer.php` file mentioned in the event registration in /libraries:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建在事件注册中提到的`user_emailer.php`文件，位于/libraries：
- en: 'Define a new class in `user_emailer.php` called `UserEmailer`:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`user_emailer.php`中定义一个新的类，名为`UserEmailer`：
- en: '[PRE15]'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Add a method to `UserEmailer` called `newAccountCreated`, which accepts one
    parameter, a `UserInfo` object called `$user`:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向`UserEmailer`添加一个名为`newAccountCreated`的方法，该方法接受一个参数，一个名为`$user`的`UserInfo`对象：
- en: '[PRE16]'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'In the `newAccountCreated` function, load the Mail helper:'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`newAccountCreated`函数中，加载邮件助手：
- en: '[PRE17]'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Set the subject of the e-mail:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置电子邮件的主题：
- en: '[PRE18]'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Set the body of the e-mail:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置电子邮件正文：
- en: '[PRE19]'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Set the destination address of the e-mail (set this to an e-mail that you own,
    so you can make sure that it works):'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置电子邮件的目的地址（将其设置为您的电子邮件，以确保它能够正常工作）：
- en: '[PRE20]'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Set the `from` address to something appropriate for your own website:'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`from`地址设置为适合您自己网站的地址：
- en: '[PRE21]'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Send the e-mail:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 发送电子邮件：
- en: '[PRE22]'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Test that this event works by adding a new user to your website.
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过向您的网站添加新用户来测试此事件是否正常工作。
- en: Visit `/dashboard/users/add/` of your concrete5 website to add a new user.![How
    to do it...](img/4548OS_09_07.jpg)
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问您的 concrete5 网站的 `/dashboard/users/add/` 以添加新用户。[如何操作...](img/4548OS_09_07.jpg)
- en: Once the user has been added, you should receive an e-mail.![How to do it...](img/4548OS_09_08.jpg)
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户添加后，您应该会收到一封电子邮件。[如何操作...](img/4548OS_09_08.jpg)
- en: How it works...
  id: totrans-150
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: When the event listener gets defined in `site_events.php`, concrete5 will remember
    to execute the provided function when the relevant event is fired. In this case,
    concrete5 fires the `on_user_add` event once a new user is added to the database,
    thereby running our custom code that we created. Using the Mail helper, we are
    able to programmatically generate an e-mail and send it immediately.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 当事件监听器在 `site_events.php` 中定义时，concrete5 会记住在相关事件触发时执行提供的函数。在这种情况下，每当数据库中添加新用户时，concrete5
    会触发 `on_user_add` 事件，从而运行我们创建的自定义代码。使用邮件助手，我们可以程序化地生成电子邮件并立即发送。
- en: See also
  id: totrans-152
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 相关内容
- en: The *Sending e-mails with the Mail helper* recipe in [Chapter 4](ch04.html "Chapter 4. Using
    the Core Helpers"), *Using the Core Helpers*
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第 4 章](ch04.html "第 4 章。使用核心助手") *使用核心助手* 中的 *使用邮件助手发送电子邮件* 配方'
- en: The *Listening to system events* recipe
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*监听系统事件* 的配方'
- en: Sending an e-mail when a file has been uploaded
  id: totrans-155
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 当文件上传时发送电子邮件
- en: We are going to play around with sending e-mails again; this time we will send
    someone an e-mail whenever a file gets added to the file manager. The e-mail will
    contain a link to download the file.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将再次尝试发送电子邮件；这次，每当文件被添加到文件管理器时，我们将向某人发送电子邮件。电子邮件将包含下载文件的链接。
- en: How to do it...
  id: totrans-157
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'The steps for sending an e-mail when a file has been uploaded, are as follows:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 当文件上传时发送电子邮件的步骤如下：
- en: 'Set up the event listener in `/config/site_events.php`:'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `/config/site_events.php` 中设置事件监听器：
- en: '[PRE23]'
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Create a new library in `/libraries/file_emailer.php`:'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `/libraries/file_emailer.php` 中创建一个新的库：
- en: 'Declare the new `FileEmailer` class:'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 声明新的 `FileEmailer` 类：
- en: '[PRE24]'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Add a method to the class called `fileUploaded`:'
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向类中添加一个名为 `fileUploaded` 的方法：
- en: '[PRE25]'
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Load the Mail helper:'
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加载邮件助手：
- en: '[PRE26]'
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Set the subject of the message:'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置消息的主题：
- en: '[PRE27]'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Set the body of the message, including a link to download the file:'
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置消息正文，包括下载文件的链接：
- en: '[PRE28]'
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Add the recipient''s e-mail address (change this to an e-mail address that
    you have access to):'
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加收件人的电子邮件地址（将其更改为您可访问的电子邮件地址）：
- en: '[PRE29]'
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Set the return address:'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置回复地址：
- en: '[PRE30]'
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Send the e-mail:'
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 发送电子邮件：
- en: '[PRE31]'
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Visit your website's file manager at `/dashboard/files/search`.![How to do it...](img/4548OS_09_12.jpg)
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问您的网站文件管理器在 `/dashboard/files/search`。[如何操作...](img/4548OS_09_12.jpg)
- en: Upload a new file.
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 上传新文件。
- en: You will receive an e-mail containing a link to download the new file as shown
    in the following screenshot:![How to do it...](img/4548OS_09_13.jpg)
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将收到一封包含下载新文件链接的电子邮件，如下截图所示：[如何操作...](img/4548OS_09_13.jpg)
- en: How it works...
  id: totrans-181
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: When a file gets uploaded, concrete5 automatically fires off the `on_file_add`
    event, which we registered a listener for in `/config/site_events.php`. concrete5
    passes `File` and `FileVersion` objects as the two parameters in the event callback.
    The `FileVersion` object contains the method to get the download URL.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 当文件上传时，concrete5 会自动触发 `on_file_add` 事件，我们在 `/config/site_events.php` 中注册了监听器。concrete5
    将 `File` 和 `FileVersion` 对象作为事件回调的两个参数传递。`FileVersion` 对象包含获取下载 URL 的方法。
- en: See also
  id: totrans-183
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 相关内容
- en: The *Sending an e-mail when a user creates an account* recipe
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*当用户创建账户时发送电子邮件* 的配方'
- en: Creating a custom scheduled job
  id: totrans-185
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建自定义计划任务
- en: concrete5 allows developers to create special jobs to run automatically via
    scheduled tasks on the server. These jobs can be any sort of action that you wish
    to perform automatically on a regular basis. In this recipe, we will write a job
    that will send a good morning e-mail to every user on the website.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: concrete5 允许开发者创建特殊的任务，通过服务器上的计划任务自动运行。这些任务可以是您希望定期自动执行的各种操作。在这个配方中，我们将编写一个任务，将早上好电子邮件发送给网站上的每个用户。
- en: Getting ready
  id: totrans-187
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: It probably should go without saying, but please make sure to perform this recipe
    on a test server with test users and e-mail addresses. You don't want to annoy
    your entire user base with silly e-mails every morning.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 可能不需要说，但请确保在测试服务器上使用测试用户和电子邮件地址执行此配方。您不希望每天早上用愚蠢的电子邮件打扰整个用户群。
- en: How to do it...
  id: totrans-189
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'The steps for creating a custom scheduled job are as follows:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 创建自定义计划任务的步骤如下：
- en: Create a new file at `/jobs/email_everyone.php`.
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`/jobs/email_everyone.php`创建一个新文件。
- en: 'Declare a new class called `EmailEveryone`:'
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 声明一个名为`EmailEveryone`的新类：
- en: '[PRE32]'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Create a method in the class to return the job''s name:'
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在类中创建一个方法来返回工作的名称：
- en: '[PRE33]'
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Create another method to return the job''s description:'
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建另一个方法来返回工作的描述：
- en: '[PRE34]'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Create a function called `run`:'
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`run`的函数：
- en: '[PRE35]'
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Load the `UserList` model:'
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加载`UserList`模型：
- en: '[PRE36]'
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Create a new instance of the `UserList` class:'
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建`UserList`类的新实例：
- en: '[PRE37]'
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Get an array of all of the users on the website:'
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取网站上所有用户的数组：
- en: '[PRE38]'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Loop through the array:'
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 遍历数组：
- en: '[PRE39]'
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'In the loop, load the Mail helper:'
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在循环中，加载邮件助手：
- en: '[PRE40]'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Set the subject of the e-mail:'
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置电子邮件的主题：
- en: '[PRE41]'
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Set the reply address:'
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置回复地址：
- en: '[PRE42]'
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Set the destination address to the current user in the loop:'
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在循环中将目标地址设置为当前用户：
- en: '[PRE43]'
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Set the body of the e-mail, including the user''s username:'
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置电子邮件正文，包括用户的用户名：
- en: '[PRE44]'
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Send the e-mail:'
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 发送电子邮件：
- en: '[PRE45]'
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Return a message to display on the dashboard:'
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回要在仪表板上显示的消息：
- en: '[PRE46]'
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: Visit the **Automated Jobs** page of the dashboard, located at `/dashboard/system/optimization/jobs/`.
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问仪表板的**自动化任务**页面，位于`/dashboard/system/optimization/jobs/`。
- en: You will see your new job at the bottom of the list as shown in the following
    screenshot.![How to do it...](img/4548OS_09_14.jpg)
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将在列表底部看到你的新工作，如下面的截图所示。![如何操作...](img/4548OS_09_14.jpg)
- en: Click on the **Install** button as shown in the preceding screenshot.![How to
    do it...](img/4548OS_09_15.jpg)
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击前面的截图所示的**安装**按钮。![如何操作...](img/4548OS_09_15.jpg)
- en: Click on the triangle play icon to run your job. You will see a message showing
    how many users were mailed.![How to do it...](img/4548OS_09_17.jpg)
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击三角形播放图标来运行你的工作。你将看到一个显示已邮寄用户数量的消息。![如何操作...](img/4548OS_09_17.jpg)
- en: You will receive an e-mail in your inbox (if your e-mail address is assigned
    to one of the site members) as shown in the following screenshot:![How to do it...](img/4548OS_09_16.jpg)
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将在你的收件箱中收到一封电子邮件（如果你的电子邮件地址分配给了网站成员之一），如下面的截图所示：![如何操作...](img/4548OS_09_16.jpg)
- en: How it works...
  id: totrans-227
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: concrete5 will asynchronously run the new task once the "play" button is clicked.
    The task simply loads a list of all of the users on the site, and e-mails each
    of them. In production use, this is inefficient for a large amount of members
    and can even get your server blacklisted for spam.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: concrete5将在点击“播放”按钮后异步运行新任务。该任务简单地加载网站上所有用户的列表，并向他们中的每一个人发送电子邮件。在生产使用中，对于大量成员来说，这可能是低效的，甚至可能导致你的服务器因垃圾邮件而被列入黑名单。
- en: There's more...
  id: totrans-229
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多...
- en: You may be wondering how to automatically run something like this. The answer
    lies within server automated tasks. On most Linux web servers, site administrators
    will use the `cron` scheduler to manage automatic tasks, and possibly the `curl`
    command to send an HTTP request to the task runner. To run this task automatically,
    create a scheduled task to ping the URL listed at the bottom of the jobs page.
    This URL contains a token that will allow your system to access concrete5 without
    logging in. Make sure to keep this URL and its token private, otherwise unauthorized
    users could trigger your site's automated tasks.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能想知道如何自动运行这样的任务。答案在于服务器自动化任务。在大多数Linux Web服务器上，网站管理员将使用`cron`调度程序来管理自动化任务，并可能使用`curl`命令向任务运行器发送HTTP请求。要自动运行此任务，请创建一个计划任务来ping工作页面底部的URL。此URL包含一个令牌，将允许你的系统在不登录的情况下访问concrete5。请确保保持此URL及其令牌的私密性，否则未经授权的用户可能会触发你的网站的自动化任务。
- en: For more information on creating scheduled tasks on your Linux-based web server,
    see [https://en.wikipedia.org/wiki/Cron](https://en.wikipedia.org/wiki/Cron).
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 有关在基于Linux的Web服务器上创建计划任务的更多信息，请参阅[https://en.wikipedia.org/wiki/Cron](https://en.wikipedia.org/wiki/Cron)。
- en: Making your add-on translation ready
  id: totrans-232
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使你的附加翻译准备就绪
- en: concrete5 allows developers to take advanced steps to make sure that their code
    is compatible with concrete5 translations. In this recipe, we will show how to
    prepare a string for translation.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: concrete5允许开发者采取高级步骤以确保他们的代码与concrete5翻译兼容。在本菜谱中，我们将展示如何为翻译准备字符串。
- en: How to do it...
  id: totrans-234
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'The steps for making add-on translation ready are as follows:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 使附加翻译准备就绪的步骤如下：
- en: Open `/config/site_post.php` in your code editor.
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的代码编辑器中打开`/config/site_post.php`。
- en: 'Declare a string for testing:'
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 声明一个用于测试的字符串：
- en: '[PRE47]'
  id: totrans-238
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Use the translation function to output your string:'
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用翻译函数输出你的字符串：
- en: '[PRE48]'
  id: totrans-240
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: How it works...
  id: totrans-241
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: concrete5 makes use of the Zend translation library. concrete5 defines the global
    `t()` function as a shortcut to make strings available to various translations.
    Translators then will prepare translation files using a tool such as Poedit to
    assist with translating these strings. To learn more about Poedit and creating
    translation files, see [http://www.poedit.net](http://www.poedit.net).
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: concrete5 使用 Zend 翻译库。concrete5 定义全局 `t()` 函数作为字符串可用性的快捷方式，以便于各种翻译。然后翻译人员将使用
    Poedit 等工具准备翻译文件以辅助翻译这些字符串。要了解更多关于 Poedit 和创建翻译文件的信息，请参阅 [http://www.poedit.net](http://www.poedit.net)。
- en: Rebranding concrete5 as a white label CMS
  id: totrans-243
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 concrete5 重新品牌化为白色标签 CMS
- en: concrete5 allows developers to change the logo, title, and general branding
    information of the CMS to whatever they would prefer. Often larger organizations
    like to white label their products like this, and concrete5 makes it easy. In
    this recipe, we will white label concrete5 by changing the logo in the edit bar.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: concrete5 允许开发者将 CMS 的标志、标题和一般品牌信息更改为他们想要的任何内容。通常，像大型组织这样的客户喜欢以这种方式重新品牌化他们的产品，而
    concrete5 使这变得很容易。在这个配方中，我们将通过更改编辑栏中的标志来重新品牌化 concrete5。
- en: Getting ready
  id: totrans-245
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: You will need an image of your logo that is 49 x 49 pixels. We are using a sample
    logo in this recipe, which is included with the code download from this book's
    website.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要一个 49 x 49 像素的标志图像。我们在这个配方中使用了一个示例标志，它包含在此书的网站上的代码下载中。
- en: How to do it...
  id: totrans-247
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'The steps are as follows:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 步骤如下：
- en: Upload your new logo to your site. In this example, our logo is located at `/images/new-logo.png`
    (you may need to create the images directory)
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将您的新标志上传到您的网站。在此示例中，我们的标志位于 `/images/new-logo.png`（您可能需要创建图像目录）
- en: Open `/config/site.php` in your code editor.
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的代码编辑器中打开 `/config/site.php` 文件。
- en: 'Add the following configuration to the file:'
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下配置添加到文件中：
- en: '[PRE49]'
  id: totrans-252
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: Save the file. You will now see the new logo in the edit bar as shown in the
    following screenshot:![How to do it...](img/4548OS_09_09.jpg)
  id: totrans-253
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件。现在您将在以下截图所示的编辑栏中看到新的标志：![如何操作...](img/4548OS_09_09.jpg)
- en: How it works...
  id: totrans-254
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: concrete5 checks for the presence of this configuration variable and changes
    the logo source if that is present. concrete5 will also add a **Powered by concrete5**
    message to the edit bar if the logo has been changed.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: concrete5 会检查此配置变量的存在，如果存在，则会更改标志源。如果更改了标志，concrete5 还会在编辑栏中添加 **由 concrete5
    驱动** 的消息。
- en: There's more...
  id: totrans-256
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容...
- en: There are a few more white labeling aspects that are available for developers.
    There is a great list available at [http://www.concrete5.org/documentation/how-tos/developers/white-labelling/](http://www.concrete5.org/documentation/how-tos/developers/white-labelling/).
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 对于开发者来说，还有一些其他白色标签方面可供使用。在 [http://www.concrete5.org/documentation/how-tos/developers/white-labelling/](http://www.concrete5.org/documentation/how-tos/developers/white-labelling/)
    可以找到一份很好的列表。
- en: See also
  id: totrans-258
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The *Declaring advanced configuration variables* recipe
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*声明高级配置变量* 的配方'
- en: Changing the dashboard background image
  id: totrans-260
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更改仪表板背景图片
- en: By default, concrete5 displays big and bright photographs in the background
    of every dashboard page. These images are powered by a feed running on concrete5's
    official servers, and the image changes every day.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，concrete5 在每个仪表板页面的背景中显示大而明亮的照片。这些图像由在 concrete5 官方服务器上运行的源提供支持，并且图像每天都会更改。
- en: '![Changing the dashboard background image](img/4548OS_09_10.jpg)'
  id: totrans-262
  prefs: []
  type: TYPE_IMG
  zh: '![更改仪表板背景图片](img/4548OS_09_10.jpg)'
- en: It's a fun effect and brings a lot of color into the dashboard, but some clients
    and agencies might not like showing random photos on their site, especially if
    it is used for business. Fortunately, concrete5 makes it easy to change the background
    image.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个有趣的效果，为仪表板带来了很多色彩，但一些客户和代理可能不喜欢在他们的网站上显示随机的照片，尤其是如果它用于商业目的。幸运的是，concrete5
    使更改背景图片变得很容易。
- en: Getting ready
  id: totrans-264
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: You will need a new image to use for the background, with a size of at least
    1024 x 768 pixels. In this example, we will be using a subtle dark gradient that
    can be quickly created in Adobe Photoshop, but you can use any image you like.
    The background image is available with the code download of this book.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要一个新图像作为背景，其大小至少为 1024 x 768 像素。在此示例中，我们将使用 Adobe Photoshop 中可以快速创建的微妙深色渐变，但您可以使用任何喜欢的图像。背景图像包含在此书的代码下载中。
- en: How to do it...
  id: totrans-266
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'The steps for changing the background image of dashboard are as follows:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 更改仪表板背景图片的步骤如下：
- en: Open the `/config/site.php` file in your code editor.
  id: totrans-268
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的代码编辑器中打开 `/config/site.php` 文件。
- en: Add the following configuration to the file.
  id: totrans-269
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下配置添加到文件中。
- en: '[PRE50]'
  id: totrans-270
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: Save the file. The background of the dashboard will now be changed.![How to
    do it...](img/4548OS_09_11.jpg)
  id: totrans-271
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件。仪表板的背景现在将发生变化。![如何操作...](img/4548OS_09_11.jpg)
- en: How it works...
  id: totrans-272
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: concrete5 simply checks for the `WHITE_LABEL_DASHBOARD_BACKGROUND_SRC` configuration
    setting and replaces the daily image with the new background that you have provided.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: concrete5会检查`WHITE_LABEL_DASHBOARD_BACKGROUND_SRC`配置设置，并用您提供的新的背景图片替换每日图片。
- en: There's more...
  id: totrans-274
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容...
- en: Developers can get rid of the background picture entirely by setting the background
    source to "none".
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 开发者可以通过将背景源设置为"none"来完全去除背景图片。
- en: See also
  id: totrans-276
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The *Declaring advanced configuration variables* recipe.
  id: totrans-277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*声明高级配置变量*的配方。'
