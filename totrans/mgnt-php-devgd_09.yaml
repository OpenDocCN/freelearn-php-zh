- en: Appendix B. Understanding and Setting Up Our Development Environment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this appendix, we will go over the stack of technologies involved in running
    Magento and learn how to set up a proper environment for development. The following
    topics will be covered in this appendix:'
  prefs: []
  type: TYPE_NORMAL
- en: LAMP virtual machine
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up and using VirtualBox
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up and using Vagrant
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: IDEs and version control systems
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We will also learn how to set up a LAMP virtual machine from scratch and how
    to automate this process entirely using Vagrant and Chef.
  prefs: []
  type: TYPE_NORMAL
- en: LAMP from scratch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**LAMP** (**Linux, Apache, MySQL, and PHP**) is a solution stack of open source
    technologies that are used to build a web server and are the current standard
    for the running of Magento.'
  prefs: []
  type: TYPE_NORMAL
- en: For a more detailed list of requirements, refer to [www.magentocommerce.com/system-requirements](http://www.magentocommerce.com/system-requirements).
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Although nginx has seen a wider range of adoption among Magento developers,
    at the time of writing this book, Apache2 is still the community-accepted standard.
    We will focus on working with it.
  prefs: []
  type: TYPE_NORMAL
- en: 'As developers, there are multiple challenges and nuances of setting up and
    maintaining our development environment, such as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Matching your development and production environments
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maintaining a consistent environment between different platforms and team members
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up a new environment can take several hours
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Not all developers have the knowledge or experience required to set up a LAMP
    server on their own
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We can resolve the first two points with the help of Oracle's VirtualBox ([www.virtualbox.org](http://www.virtualbox.org)).
    VirtualBox is powerful and widely popular virtualization engine that will allow
    us to create virtual machines. VMs can also be shared between developers and across
    all major operating systems.
  prefs: []
  type: TYPE_NORMAL
- en: Getting VirtualBox
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: VirtualBox is open source, and it is supported across all platforms. It can
    be downloaded directly from [www.virtualbox.org/wiki/Downloads](http://www.virtualbox.org/wiki/Downloads).
  prefs: []
  type: TYPE_NORMAL
- en: Now, we will proceed to set up a Linux virtual machine. We have selected Ubuntu
    server 12.04.2 LTS for its ease of use and widely available support. First, download
    the ISO file from [www.ubuntu.com/download/server](http://www.ubuntu.com/download/server);
    either 64-bit or 32-bit versions will work.
  prefs: []
  type: TYPE_NORMAL
- en: 'To create a new Linux virtual machine, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Start the VirtualBox manager and click on the **New** button in the top-left
    corner:![Getting VirtualBox](img/4195OS_09_01.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'A wizard dialog will pop up and guide us through the steps to create a bare
    virtual machine. The wizard will ask us for the basic information to set up the
    virtual machine:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**VM Name**: This defines how we will name our virtual machine; let''s name
    it `Magento_dev 01`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Memory**: This is the value of system memory that will be assigned to the
    guest operating system when our VM starts, in order to run a full LAMP server;
    1 GB or more is recommended'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Operating System Type**: This is the type of OS that we will install later;
    in our case, we want to select **Linux/Ubuntu**, and depending on our selection,
    VirtualBox will enable or disable certain VM options'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Next, we need to specify a virtual hard disk. Select **Create a virtual hard
    drive now**.![Getting VirtualBox](img/4195OS_09_03.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: There are many hard disk options available, but for most purposes, selecting
    **VDI** (which is **VirtualBox Disk Image**) will suffice. This will create a
    single file on our host operating system.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'We now need to select the type of storage on the physical drive. We are provided
    with two options:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Dynamically allocated**: The disk image will grow automatically as the files
    and usage on our guest operating system grow'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Fixed Size**: This option will limit the size of the virtual disk from the
    start'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Next, we will need to specify the size of our virtual hard disk. We want to
    adjust the size depending on how many Magento installations we plan to use.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: In general, we want to keep at least 2 GB per Magento installation and another
    3 GB if we are running the database server on the same installation. This is not
    to say that all this space will be used at once or whether it will even be used
    at all, but Magento installations can use a lot of disk space once product images
    and cache files are factored in.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Finally, we just need to click on the **Create** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: The main difference between the fixed size hard disk and the dynamically allocated
    hard disk is that the fixed size hard disk will reserve the space on the physical
    hard drive right from the start, whereas the dynamically allocated hard disk will
    grow incrementally until it gets to the specified limits.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'The newly created box will appear on the left-hand side navigation menu, but
    before we start our recently created VM, we need to make some changes:'
  prefs: []
  type: TYPE_NORMAL
- en: Select our newly created VM and click on the **Settings** button on the top.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Open the **Network** menu and select **Adapter 2**. We want to set this box
    up as a bridged adapter to our main network interface. This will allow us to connect
    remotely using **SSH**.![Getting VirtualBox](img/4195OS_09_04.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Go to the **System** menu and change the **Boot Order** value, so that the CD/DVD-ROM
    boots first.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the **Storage** menu, select one of the empty IDE controllers and mount our
    previously downloaded Ubuntu ISO image.![Getting VirtualBox](img/4195OS_09_02.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Booting our virtual machine
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: At this point, we have successfully installed and configured our VirtualBox
    instance and are now ready to boot our new virtual machine for the first time.
    To do this, just select the VM in the left sidebar and click on the **Start**
    button at the top.
  prefs: []
  type: TYPE_NORMAL
- en: A new window will pop up with an interface to the VM. Ubuntu will take a few
    minutes to boot up.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once Ubuntu has finished booting up, we will see two menus. The first menu
    will allow us to select the language, and the second one is the main menu that
    provides several options. In our case, we just want to proceed with **Install
    Ubuntu Server**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Booting our virtual machine](img/4195OS_09_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: We should now see the Ubuntu installation wizard, which will ask for our language
    and keyboard settings. After selecting the appropriate settings for our country
    and language, the installer will proceed to load all the necessary packages in
    the memory. This can take a few minutes.
  prefs: []
  type: TYPE_NORMAL
- en: Ubuntu will proceed to configure our main network adapter, and once the automatic
    configuration is done, we will be asked to set up the hostname for the virtual
    machine. We can leave the hostname to the default settings.
  prefs: []
  type: TYPE_NORMAL
- en: '![Booting our virtual machine](img/4195OS_09_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The next screen will request that we enter the full name of our user; for this
    example, let's use `Magento Developer`.
  prefs: []
  type: TYPE_NORMAL
- en: '![Booting our virtual machine](img/4195OS_09_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Next, we will be asked to create a username and password. Let's use `magedev`
    as our username.
  prefs: []
  type: TYPE_NORMAL
- en: '![Booting our virtual machine](img/4195OS_09_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Let's set `magento2013` as our password.
  prefs: []
  type: TYPE_NORMAL
- en: '![Booting our virtual machine](img/4195OS_09_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'On the next screens, we will be asked to confirm our password and set up the
    correct time zone. After entering the right values, the installation wizard will
    show the following screen, asking about our partition settings:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Booting our virtual machine](img/4195OS_09_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: In our case, we want to select **Guided – use entire disk and set up LVM**;
    let's confirm that we are partitioning our virtual disk.
  prefs: []
  type: TYPE_NORMAL
- en: '![Booting our virtual machine](img/4195OS_09_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: We will be asked to confirm our changes a final time; select **Finish partitioning
    and Write changes to the disk**.
  prefs: []
  type: TYPE_NORMAL
- en: '![Booting our virtual machine](img/4195OS_09_15.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The installation wizard will ask us to select predefined packages to install;
    one of the available options is **LAMP server**.
  prefs: []
  type: TYPE_NORMAL
- en: Although this is highly convenient, we don't want to install the LAMP server
    that comes prepackaged with our Ubuntu CD; we will be installing all the LAMP
    components manually, to guarantee that they are set up to specific needs and are
    up to date with the latest patches.
  prefs: []
  type: TYPE_NORMAL
- en: However, for this, we will need an SSH server; select **OpenSSH server** from
    the list and click on **Continue**.
  prefs: []
  type: TYPE_NORMAL
- en: '![Booting our virtual machine](img/4195OS_09_15B.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The installation of Ubuntu is complete, and it will reboot into our newly installed
    virtual box.
  prefs: []
  type: TYPE_NORMAL
- en: 'We are almost ready to proceed with the installation of the rest of our environment,
    but first, we need to update our package manager repository definitions, log in
    to the console, and run the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '**APT** stands for **Advance Packaging Tool** and is one of the core libraries
    included with most Debian GNU/Linux distributions; `apt` greatly simplifies the
    process of installing and maintaining software on our systems.'
  prefs: []
  type: TYPE_NORMAL
- en: Once `apt-get` has finished updating all the repository sources, we can proceed
    with the installation of the other components of our LAMP server.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Apache2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Apache is an HTTP server. Currently, it is used to host over 60 percent of the
    websites on the Web and is the accepted standard for the running of Magento stores.
    There are many guides and tutorials available online in order to fine-tune and
    tweak Apache2 to increase Magento's performance.
  prefs: []
  type: TYPE_NORMAL
- en: 'Installing apache is as simple as running the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: This will take care of installing Apache2 and all the required dependencies
    for us. If everything has been installed correctly, we can now test it by opening
    our browser and entering `http://192.168.36.1/`.
  prefs: []
  type: TYPE_NORMAL
- en: 'By default, Apache runs as a service and can be controlled with the following
    commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: You should now see Apache's default web page with the **It Works!** message.
  prefs: []
  type: TYPE_NORMAL
- en: Installing PHP
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**PHP** is a server-side scripting language and stands for **PHP Hypertext
    Processor**. Magento is implemented on PHP5 and Zend Framework, and we would need
    to install PHP and some additional libraries in order to run it.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s use `apt-get` again and run the following commands in order to get PHP5
    and all the necessary libraries installed:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: The first command installed not only PHP5, but it also installed additional
    packages required by Magento in order to connect with our database and manipulate
    images.
  prefs: []
  type: TYPE_NORMAL
- en: The second command will install PEAR, a PHP package manager, and a PHP memcached
    adapter.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Memcached is high-performance, distributed memory caching system; this is an
    optional caching system for Magento.
  prefs: []
  type: TYPE_NORMAL
- en: The third command installs and sets up the PHP5 module for Apache.
  prefs: []
  type: TYPE_NORMAL
- en: 'We can finally test that our PHP installation is working by running the following
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Installing MySQL
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'MySQL is a popular choice of database for many web applications, and Magento
    is no exception. We will need to install and set up MySQL as part of the development
    stack:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'During the installation, we will be asked to enter a root password; use `magento2015`.
    Once the installation has finished, we should have a MySQL service instance running
    in the background. We can test it by trying to connect to the MySQL server:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'If everything is installed correctly, we should see the following `mysql` server
    prompt:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: At this point, we have a fully functional LAMP environment that can be used
    not only to develop and work on Magento websites, but also for any other kind
    of PHP development.
  prefs: []
  type: TYPE_NORMAL
- en: Putting everything together
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: At this point, we have a basic LAMP setup up and running. However, to work with
    Magento, we would need to perform some configuration changes and additional setup.
  prefs: []
  type: TYPE_NORMAL
- en: 'The first thing that we will need to do is create a location to store our development
    sites files, so we will run the following commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: This will create the necessary folder structure for our first Magento site.
    Now, we need to check out the latest version of Magento. We can quickly get the
    files using **SVN**.
  prefs: []
  type: TYPE_NORMAL
- en: 'We would need to install SVN first on our server with the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Once the installer has finished, open the `magento_dev` directory and run the
    `svn` command to get the latest version files:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'We will also need to fix some of the permissions on our new Magento copy:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, we need to create a new database for our Magento installation. Let''s
    open our `mysql` shell:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'Once in the mysql shell, we can use the create command, which should be followed
    by the type of entity (database or table) we want to create and the database name
    in order to create a new database:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'Although we could use the root credentials to access our development database,
    this is not a recommended practice to follow because it could compromise not only
    a single site, but also full database server. MySQL accounts are restricted based
    on privileges we want, in order to create a new set of credentials that has privileges
    limited to only our working database:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, we need to properly set up Apache2 and enable some additional modules;
    fortunately, this version of Apache comes with a set of useful commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '`a2ensite`: This creates symlinks between the `vhosts` files in the `site-available`
    folder and the `sites-enabled` folder in order to allow the Apache server to read
    these files.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`a2dissite`: This removes the symlinks created the by the `a2ensite` command.
    It effectively disables the site.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`a2enmod`: This is used to create symlinks between the `mods-enabled` directory
    and the module configuration files.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`a2dismod`: This will remove the symlinks from `mods-enabled`. This command
    will prevent the module from being loaded by Apache.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Magento uses the `mod_rewrite` module to generate URLs. The `mod_rewrite` module
    uses a rule-based rewriting engine to rewrite request URLs on the fly.
  prefs: []
  type: TYPE_NORMAL
- en: 'We can enable `mod_rewrite` with the `a2enmod` command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'The next step will require that we create a new virtual host file under the
    `site-available` directory:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'The `nano` command will open a shell text editor, where we can set up the configuration
    for our virtual domain:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'To save the new virtual host file, press *Ctrl* + *O* and then press *Ctrl*
    + *X*. The virtual host file will tell Apache where it can find the site files
    and what permissions are to be given to it. In order for the new configuration
    changes to take effect, we need to enable the new site and restart Apache. We
    can use the following commands to do this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'We are nearly ready to install Magento. We just need to set up a local mapping
    into our host system host file, using the following for Windows and Unix respectively:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Using Windows, we can do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Open `C:\system32\drivers\etc\hosts` in Notepad.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Add the following line at the end of this file: `192.168.36.1 magento.localhost.com`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Using Unix/Linux/OS X, we can do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Open `/etc/hosts` using nano:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Add the following line at the end of this file: `192.168.36.1 magento.localhost.com`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you are facing problems making the necessary changes on your `hosts` files,
    refer to [http://www.magedevguide.com/hostfile-help](http://www.magedevguide.com/hostfile-help).
  prefs: []
  type: TYPE_NORMAL
- en: We now can install Magento by opening `http://magento.localhost.com` in our
    browser. Toward the end, we should see the installer wizard. Follow the steps
    as indicated by the wizard, and you are set to go!
  prefs: []
  type: TYPE_NORMAL
- en: '![Putting everything together](img/4195OS_09_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Up and running with Vagrant
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Previously, we created a Magento installation wizard using a VM. Although using
    a VM gives us a reliable environment, setting our LAMP for each of our Magento
    staging installations can still be very complicated. This is especially true for
    developers who don't have experience working in a Unix/Linux environment.
  prefs: []
  type: TYPE_NORMAL
- en: What if we could get all the benefits of running a VM but with a completely
    automated setup process? What if we were able to have new VM instances created
    and configured on the fly for each of our staging websites?
  prefs: []
  type: TYPE_NORMAL
- en: This is possible using Vagrant in combination with Chef. We can create an automated
    VM without the need for extensive knowledge of Linux or the different LAMP components.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Currently, Vagrant supports VirtualBox 4.0.x, 4.1.x, and 4.2.x.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Vagrant
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Vagrant can be downloaded directly from [downloads.vagrantup.com](http://downloads.vagrantup.com).
    Furthermore, its packages and installers are available for multiple platforms.
    Once you have downloaded Vagrant, run the installation file.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once we have installed both Vagrant and VirtualBox, starting a base VM is as
    simple as typing the following lines in the terminal or Command Prompt depending
    on the OS you use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: These commands will start a new Vagrant box with Ubuntu Linux installed. From
    this point onward, we could start installing our LAMP server as per normal. But
    why should we spend an hour to configure and set up a LAMP server for each project
    when we can use Chef to automatically do it? Chef is a configuration management
    tool written in Ruby that integrates into Vagrant.
  prefs: []
  type: TYPE_NORMAL
- en: To make it easier for developers to start working with Magento, I have created
    a Vagrant repository in GitHub called `magento-vagrant` that includes all the
    necessary cookbooks and recipes for Chef. The `magento-vagrant` repository also
    includes a new cookbook that will take care of the specific Magento setup and
    configuration.
  prefs: []
  type: TYPE_NORMAL
- en: In order to start working with `magento-vagrant`, you will need a working copy
    of Git.
  prefs: []
  type: TYPE_NORMAL
- en: 'In Ubuntu, run this command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: In Windows, we can use the native tool found at [http://windows.github.com/](http://windows.github.com/)
    to download and manage our repositories.
  prefs: []
  type: TYPE_NORMAL
- en: 'Regardless of the operating system that you are using, we will need to check
    out a copy of this repository into our local filesystem. We will use `C:/Users/magedev/Documents/mage-vagrant/`
    to download our repository. Inside the `mage-vagrant` folder, we will find the
    following files and directories:'
  prefs: []
  type: TYPE_NORMAL
- en: '`cookbooks`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`data_bags`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Public`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`.vagrant`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Vagrantfile`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `magento-vagrant` repository includes cookbooks for each of the components
    of our development environment, which will be installed automatically as soon
    as we start our new VagrantBox.
  prefs: []
  type: TYPE_NORMAL
- en: The only thing left to do now is to set up our development sites. The process
    to add new Magento sites to our vagrant installation has been simplified through
    the use of Vagrant and Chef.
  prefs: []
  type: TYPE_NORMAL
- en: Inside the `data_bags` directory, we have one file for each Magento installation
    inside our VagrantBox; the default repository comes with an example installation
    of Magento CE 1.7.
  prefs: []
  type: TYPE_NORMAL
- en: For each site, we will need to create a new JSON file containing all the settings
    that Chef will need. Let's take a look at the `magento-vagrant` default file.
  prefs: []
  type: TYPE_NORMAL
- en: 'The file location is `C:/Users/magedev/Documents/mage-vagrant/data_bags/sites/default.json`.
    Here are the contents of the file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: This will automatically set up a Magento installation using the latest files
    from the Magento repository.
  prefs: []
  type: TYPE_NORMAL
- en: Adding new sites to our VagrantBox is just matter of adding a new JSON file
    to the corresponding site and restarting the VagrantBox.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have a running Magento installation, let's look into choosing a
    proper **Integrated Development Environment** (**IDE**).
  prefs: []
  type: TYPE_NORMAL
- en: Choosing an IDE
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Choosing the right IDE is mostly the matter of a developer's personal taste.
    However, choosing the right IDE can be critical for a Magento developer.
  prefs: []
  type: TYPE_NORMAL
- en: 'The challenge for the IDEs comes mostly from Magento''s extensive usage of
    factory names. This makes the implementation of certain features difficult, such
    as code completion, also known as IntelliSense. Currently, there are two IDEs
    that excel in their native support for Magento: **NetBeans** and **PhpStorm**.'
  prefs: []
  type: TYPE_NORMAL
- en: Although NetBeans is open source and has been around for a long time, PhpStorm
    has been taking the upper hand and gaining more support from the Magento Community.
  prefs: []
  type: TYPE_NORMAL
- en: Furthermore, the recent release of **Magicento**, a plugin specifically created
    to extend and integrate Magento into PhpStorm, has made it the best option currently
    available.
  prefs: []
  type: TYPE_NORMAL
- en: Working with a version control system
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Magento code base is very extensive and is comprised of over 7,000 files
    and close to a million and a half lines of code. For this reason, working with
    a version control system is not only good practice, but also a necessity.
  prefs: []
  type: TYPE_NORMAL
- en: Version control systems are used to keep track of changes across multiple files
    and by multiple developers. Using a version control system, we gain access to
    very powerful tools.
  prefs: []
  type: TYPE_NORMAL
- en: Of the several version control systems available **(git**, **svn**, **mercurial**),
    Git deserves special attention due to its simplicity and flexibility. By releasing
    the upcoming version 2 of Magento on GitHub, a Git hosting service, the Magento
    core development team has recognized the importance that Git has among the Magento
    community.
  prefs: []
  type: TYPE_NORMAL
- en: For more information on Magento2, refer to [https://github.com/magento/magento2](https://github.com/magento/magento2).
  prefs: []
  type: TYPE_NORMAL
- en: GitHub now specifically includes a .`gitignore` file for Magento, which will
    ignore all the files in the Magento core and only keep track of our own code.
  prefs: []
  type: TYPE_NORMAL
- en: 'That said, there are a several version control concepts that we need to keep
    in mind when working with our Magento projects:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Branching**: This allows us to work on new features without affecting our
    trunk (stable release).'
  prefs: []
  type: TYPE_NORMAL
- en: '**Merging**: This is used to move code from one place to another. Usually,
    this is done from a development brand in our trunk once the code is ready to be
    moved into production.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Tagging**: This is used to create snapshots of a release.'
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this appendix, we learned about:'
  prefs: []
  type: TYPE_NORMAL
- en: Setting up and working with LAMP environments
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting development environments across multiple platforms
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating and provisioning Vagrant virtual machines
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Working with Chef recipes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using version control systems for Magento development
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Having a proper environment is the first step toward starting development for
    Magento and is an integral part of our Magento toolbox.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have a development environment set up and ready to use, it's time
    to dive deep into Magento's fundamental concepts. These concepts will give us
    the necessary tools and knowledge required to develop with Magento.
  prefs: []
  type: TYPE_NORMAL
