["```php\n    CREATE TABLE IF NOT EXISTS store_products (\n      id int(11) NOT NULL AUTO_INCREMENT,\n      name varchar(255) NOT NULL,\n      desc varchar(255) NOT NULL,\n      cost float(9,2) NOT NULL,\n      PRIMARY KEY (id)\n    );\n\n    CREATE TABLE IF NOT EXISTS store_orders (\n      id int(11) NOT NULL AUTO_INCREMENT,\n      store_product_id int(11) NOT NULL,\n      qty int(11) NOT NULL,\n      total float(9,2) NOT NULL,\n      status enum('new', 'completed', \n            'shipped', 'cancelled')  DEFAULT NULL,\n      stamp timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,\n      first_name varchar(255) DEFAULT NULL,\n      last_name varchar(255) DEFAULT NULL,\n      email varchar(255) DEFAULT NULL,\n      ship_to_street varchar(255) DEFAULT NULL,\n      ship_to_city varchar(255) DEFAULT NULL,\n      ship_to_state varchar(2) DEFAULT NULL,\n      ship_to_zip int(11) DEFAULT NULL,\n      PRIMARY KEY (id)\n    );\n    ```", "```php\n    \"require\": {\n        \"php\": \">=5.3.3\",\n        \"zendframework/zendframework\": \"2.0.*\",\n        \"webino/webino-image-thumb\": \"1.0.0\",\n        \"zendframework/zendgdata\": \"2.*\",\n     \"speckcommerce/speck-paypal\": \"dev-master\"\n    }\n    ```", "```php\n    .\n    Loading composer repositories with package information\n    Updating dependencies\n     - Removing zendframework/zendframework (2.0.7)\n     - Installing zendframework/zendframework (2.0.8)\n     Downloading: 100%\n\n     - Installing speckcommerce/speck-paypal (dev-master d951518)\n     Cloning d951518fd2c98148da5609e23a41697e6cfca06e\n\n    Writing lock file\n    Generating autoload files\n\n    ```", "```php\n      'speck-paypal-api' => array(\n        'username'  => '',\n        'password'  => '',\n        'signature' => '',\n        'endpoint'  => 'https://api-3t.sandbox.paypal.com/nvp'\n      )\n    ```", "```php\n    protected function getPaypalRequest()\n    {\n      $config  = $this->getServiceLocator()->get('config');\n      $paypalConfig = new \\SpeckPaypal\\Element\\Config(\n                  $config['speck-paypal-api']);\n\n      $adapter = new \\Zend\\Http\\Client\\Adapter\\Curl();\n      $adapter->setOptions(array(\n        'curloptions' => array(\n          CURLOPT_SSL_VERIFYPEER => false,\n        )\n      ));\n\n      $client = new \\Zend\\Http\\Client;\n      $client->setMethod('POST');\n      $client->setAdapter($adapter);\n\n      $paypalRequest = new \\SpeckPaypal\\Service\\Request;\n      $paypalRequest->setClient($client);\n      $paypalRequest->setConfig($paypalConfig);\n\n      return $paypalRequest;\n    }\n    ```", "```php\n    public function paypalExpressCheckoutAction()\n    {\n      $request = $this->getRequest();\n      $orderId = $request->getPost()->get('orderId');\n\n      $orderTable = $this->getServiceLocator()->get('StoreOrdersTable');\n      $order = $orderTable->getOrder($orderId);\n\n      $paypalRequest = $this->getPaypalRequest();\n\n      $paymentDetails = new \\SpeckPaypal\\Element\\PaymentDetails\n      (array('amt' => $order->total\n      ));\n      $express = new \\SpeckPaypal\\Request\\SetExpressCheckout(\n          array('paymentDetails' => $paymentDetails)\n      );\n\n      $express->setReturnUrl(\n        'http://comm-app.local/users/store/paymentConfirm');\n      $express->setCancelUrl(\n        'http://comm-app.local/users/store/paymentCancel');\n\n      // Send Order information to PayPal   \n      $response = $paypalRequest->send($express);\n      $token = $response->getToken();\n\n      $paypalSession = new \\Zend\\Session\\Container('paypal');\n      $paypalSession->tokenId = $token; \n      $paypalSession->orderId = $orderId;\n\n      // Redirect user to PayPal Express Checkout\n      $this->redirect()->toUrl('https://www.sandbox.paypal.com/webscr?cmd=_express-checkout&token=' . $token);\n    }\n    ```", "```php\n        // To capture Payer Information from PayPal\n        $paypalSession = new \\Zend\\Session\\Container('paypal');\n        $paypalRequest = $this->getPaypalRequest();\n\n        $expressCheckoutInfo = \n         new \\SpeckPaypal\\Request\\GetExpressCheckoutDetails();\n        $expressCheckoutInfo->setToken($paypalSession->tokenId);\n        $response = $paypalRequest->send($expressCheckoutInfo);\n\n        ```", "```php\n        //To capture express payment\n        $orderTable = $this->getServiceLocator()->get('StoreOrdersTable');\n        $order = $orderTable->getOrder($paypalSession->orderId);\n        $paymentDetails = new \\SpeckPaypal\\Element\\PaymentDetails(array(\n         'amt' => $order->total\n        ));\n\n        $token = $response->getToken();\n        $payerId = $response->getPayerId();\n\n        $captureExpress = new \\SpeckPaypal\\Request\\DoExpressCheckoutPayment(\n         array(\n         'token'             => $token,\n         'payerId'           => $payerId,\n         'paymentDetails'    => $paymentDetails\n         ));\n        $confirmPaymentResponse = $paypalRequest->send($captureExpress);\n\n        ```", "```php\n        //To Save Order Information\n        $order->first_name = $response->getFirstName();\n        $order->last_name = $response->getLastName();\n        $order->ship_to_street = $response->getShipToStreet();\n        $order->ship_to_city = $response->getShipToCity();\n        $order->ship_to_state = $response->getShipToState();\n        $order->ship_to_zip = $response->getShipToZip();\n        $order->email = $response->getEmail();\n        $order->store_order_id = $paypalSession->orderId;\n        $order->status = 'completed';\n        $orderTable->saveOrder($order);\n\n        ```", "```php\n    public function paymentCancelAction()\n    {\n      $paypalSession = new \\Zend\\Session\\Container('paypal');\n\n      $storeOrdersTG = $this->getServiceLocator()\n                          ->get('StoreOrdersTableGateway');\n      $storeOrdersTG->update(\n                array('status' => 'cancelled'), \n                array('id' => $paypalSession->orderId));\n      $paypalSession->orderId = NULL;\n      $paypalSession->tokenId = NULL;  \n      $view = new ViewModel();\n      return $view;\n    }\n    ```"]