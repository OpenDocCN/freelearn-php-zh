["```php\n<element>\n    <property attr=\"some attribute\">value</property>\n    <items>\n        <item>some value</item>\n        <item>some other value</item>\n    </items>\n</element>\n```", "```php\n{\n    \"property\": \"value\",\n    \"some array\": [\n        \"item 1\": \"some value\",\n        \"item 2\": \"some other value\"\n]\n}\n```", "```php\n    <?php\n    class MailingListRecipient\n    {\n        public $email;\n        public $firstName;\n        public $lastName;\n\n        public function __construct($email, $firstName, $lastName)\n        {\n            $this->email = $email;\n            $this->firstName = $firstName;\n            $this->lastName = $lastName;\n        }\n    }\n    ```", "```php\n    <?php\n    require ' MailingListRecipient.php';\n    ```", "```php\n    $recipient = new MailingListRecipient('jdoe@acme.com','John','Doe');\n    ```", "```php\n    $requestBody = json_encode($recipient);\n    echo $requestBody.PHP_EOL;\n    ```", "```php\n    mkdir guzzle-example\n    ```", "```php\n    composer init\n    composer require guzzlehttp/guzzle\n    ```", "```php\n    <?php\n    require 'vendor/autoload.php';\n    ```", "```php\n    use GuzzleHttp\\Client;\n    $client = new Client(['base_uri'=>'https://api.ipify.org']);\n    ```", "```php\n    $response = $client->request('GET', '/'),['query'=>['format'=>'json']]);\n    ```", "```php\n    $responseObject = json_decode($response->getBody()->getContent());\n    ```", "```php\n    echo \"Your public facing ip address is {$responseObject->ip}\".PHP_EOL;\n    ```", "```php\n    <?php\n    require 'vendor/autoload.php';\n    use GuzzleHttp\\Client;\n    $email = 'test@test.com';\n    ```", "```php\n    $client = new client(['base_uri'=>'https://spamcheck.postmarkapp.com/']);\n    ```", "```php\n    $requestBody = json_encode(['email'=>$email, 'options'=>'short']);\n    ```", "```php\n    try\n    {\n        $response = $client->request('POST','/filter'),[\n            'headers' => [\n                'Accept'=>'application/json'\n                'Content-Type'=>'application/json'\n                ],\n                'body'=>$requestBody\n                ]);\n    ```", "```php\n    if($response->getStatusCode()!==200){\n            throw new Exception(\"Status code was {$response->getStatusCode()},           not 200\");\n        }\n    ```", "```php\n    $responseObject = json_decode($response->getBody()->getContents());\n    ```", "```php\n    if($responseObject->success!== true){\n            throw new Exception(\"Service returned an unsuccessful respose:           {$responseObject->message}\");\n        }\n    ```", "```php\n    echo \"The SpamAssassin score for email {$email} is   {$responseObject->score}\".PHP_EOL;\n    ```", "```php\n    catch\n    {\n        echo \"An error occurred: \".$ex->getMessage().PHP_EOL;\n    }\n    ```"]