["```php\n/**\n * Implements hook_schema().\n */\nfunction sports_schema() {\n  $schema = [];\n\n  $schema['teams'] = [\n    'description' => 'The table that holds team data.',\n    'fields' => [\n      'id' => [\n        'description' => 'The primary identifier.',\n        'type' => 'serial',\n        'unsigned' => TRUE,\n        'not null' => TRUE,\n      ],\n      'name' => [\n        'description' => 'The team name.',\n        'type' => 'varchar',\n        'length' => 255,\n        'not null' => TRUE,\n      ],\n      'description' => [\n        'description' => 'The team description.',\n        'type' => 'text',\n        'size' => 'normal',\n      ],\n    ],\n    'primary key' => ['id'],\n  ];\n\n  $schema['players'] = [\n    'description' => 'The table that holds player data.',\n    'fields' => [\n      'id' => [\n        'description' => 'The primary identifier.',\n        'type' => 'serial',\n        'unsigned' => TRUE,\n        'not null' => TRUE,\n      ],\n      'team_id' => [\n        'description' => 'The ID of the team it belongs to.',\n        'type' => 'int',\n        'unsigned' => TRUE,\n      ],\n      'name' => [\n        'description' => 'The player name.',\n        'type' => 'varchar',\n        'length' => 255,\n        'not null' => TRUE,\n      ],\n      'data' => [\n        'description' => 'Arbitrary data about the player.',\n        'type' => 'blob',\n        'size' => 'big',\n      ],\n    ],\n    'primary key' => ['id'],\n  ];\n\n  return $schema;\n}\n```", "```php\ndrupal_install_schema('sports');  \n```", "```php\n$database = \\Drupal::database();  \n```", "```php\ndatabase:\n  class: Drupal\\Core\\Database\\Connection\n  factory: Drupal\\Core\\Database\\Database::getConnection\n  arguments: [default]\n```", "```php\n$database = \\Drupal::database();\n$result = $database->query(\"SELECT * FROM {players} WHERE id = :id\", [':id' => 1]);\n```", "```php\n$result = $database->select('players', 'p')\n   ->fields('p')\n   ->condition('id', 1)\n   ->execute();\n```", "```php\nforeach ($result as $record) {\n  $id = $record->id;\n  $team_id = $record->team_id;\n  $name = $record->name;\n  $data = $record->data;\n}\n```", "```php\n$records = $result->fetchAll();  \n```", "```php\n$records = $result->fetchAllAssoc('id');\n```", "```php\n$result = $database->query(\"SELECT * FROM {players} p JOIN {teams} t ON t.id = p.team_id WHERE p.id = :id\", [':id' => 1]);  \n```", "```php\n$result = $database->query(\"SELECT p.id, p.name as player_name, t.name as team_name, t.description as team_description, p.data FROM {players} p JOIN {teams} t ON t.id = p.team_id WHERE p.id = :id\", [':id' => 1]); \n```", "```php\n$query = $database->select('players', 'p');\n$query->join('teams', 't');\n$query->addField('p', 'name', 'player_name');\n$query->addField('t', 'name', 'team_name');\n$query->addField('t', 'description', 'team_description');\n$result = $query\n  ->fields('p', ['id', 'data'])\n  ->condition('p.id', 1)\n  ->execute();\n\n$records = $result->fetchAll();\n```", "```php\n $result = $database->queryRange(\"SELECT * FROM {players}\", 0, 10);  \n```", "```php\n$result = $database->select('players', 'p')\n   ->fields('p')\n   ->range(0, 10)\n   ->execute();\n```", "```php\n/** \n * Renders a table of players. \n */ \npublic function players() { \n  $query = $this->database->select('players', 'p') \n    ->fields('p'); \n  $result = $query->execute()->fetchAll(); \n  $header = [$this->t('Name')]; \n  $rows = []; \n\n  foreach ($result as $row) { \n    $rows[] = [ \n      $row->name \n    ]; \n  } \n\n  $build = []; \n  $build[] = [ \n    '#theme' => 'table', \n    '#header' => $header, \n    '#rows' => $rows, \n  ]; \n\n  return $build; \n} \n```", "```php\npager_default_initialize($total, $limit, $element = 0);  \n```", "```php\n$limit = 5; // The number of items per page. \n$query = $this->database->select('players', 'p') \n  ->fields('p') \n  ->extend('\\Drupal\\Core\\Database\\Query\\PagerSelectExtender') \n  ->limit($limit); \n$result = $query->execute()->fetchAll();  \n```", "```php\n$build[] = [ \n  '#type' => 'pager' \n]; \n```", "```php\n$database->insert('players');\n$fields = ['name' => 'Diego M', 'data' => serialize(['known for' => 'Hand of God'])];\n$id = $database->insert('players')\n  ->fields($fields)\n  ->execute();\n```", "```php\n$values = [\n  ['name' => 'Novak D.', 'data' => serialize(['sport' => 'tennis'])],\n  ['name' => 'Micheal P.', 'data' => serialize(['sport' => 'swimming'])]\n];\n$fields = ['name', 'data'];\n$query =  $database->insert('players')\n  ->fields($fields);\nforeach ($values as $value) {\n  $query->values($value);\n}\n$result = $query->execute();\n```", "```php\n$result = $database->update('players')\n  ->fields(['data' => serialize([\n    'sport' => 'swimming', \n    'feature' => 'This guy can swim'\n  ])])\n  ->condition('name', 'Micheal P.')\n  ->execute();\n```", "```php\n$result = $database->delete('players')\n   ->condition('name', 'Micheal P.')\n   ->execute();\n```", "```php\n$transaction = $database->startTransaction();\ntry {\n  $database->update('players')\n    ->fields(['data' => serialize(['sport' => 'tennis', 'feature' => 'This guy can play tennis'])])\n    ->condition('name', 'Novak D.')\n    ->execute();\n}\ncatch (\\Exception $e) {\n  $transaction->rollback();\n  watchdog_exception('my_type', $e);\n}\n```", "```php\n$result = $database->select('players', 'p')\n   ->fields('p')\n   ->execute();\n```", "```php\n$result = $database->select('players', 'p')\n   ->fields('p')\n   ->addTag('player_query')\n   ->execute();\n```", "```php\n/**\n * Implements hook_query_alter().\n */\nfunction module_name_query_alter(Drupal\\Core\\Database\\Query\\AlterableInterface $query) {\n  if (!$query->hasTag('player_query')) {\n    return;\n  }\n\n  // Alter query\n}\n```", "```php\n$query->join('teams', 't', 't.id = p.team_id');\n$query->addField('t', 'name', 'team_name');\n$query->condition('t.name', 'My Team');\n```", "```php\n/**\n * Implements hook_query_TAG_alter().\n */\nfunction module_name_query_player_query_alter(Drupal\\Core\\Database\\Query\\AlterableInterface $query) {\n  // Sure to alter only the \"player_query\" tagged queries.\n}\n```", "```php\n/**\n * Update hook for performing an update task.\n */\nfunction my_module_update_8001(&$sandbox) {\n  // Do stuff\n}\n```", "```php\n'location' => [\n   'description' => 'The team location.',\n   'type' => 'varchar',\n   'length' => 255,\n ],\n```", "```php\n/**\n * Adds the \"location\" field to the teams table.\n */\nfunction sports_update_8001(&$sandbox) {\n  $field = [\n    'description' => 'The team location.',\n    'type' => 'varchar',\n    'length' => 255,\n  ];\n  $schema = \\Drupal::database()->schema();\n  $schema->addField('teams', 'location', $field);\n}\n```", "```php\n$schema->createTable('new_table', $table_definition);\n$schema->addField('teams', 'location', $field);\n$schema->dropTable('table_name');\n$schema->dropField('table_name', 'field_to_delete');\n$schema->changeField('table_name', 'field_name_to_change', 'new_field_name', $new_field_definition);\n```"]