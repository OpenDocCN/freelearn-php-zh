["```php\nCREATE TABLE `users`(\n`id` INT UNSIGNED AUTO_INCREMENT NOT NULL,\n`username` VARCHAR(255) NOT NULL,\n`password` CHAR(40) NOT NULL,\nPRIMARY KEY(`id`)\n);\n\n```", "```php\n    <?php\n    class UsersController extends AppController {\n    public function login() {\n    }\n    public function logout() {\n    $this->redirect($this->Auth->logout());\n    }\n    }\n    ?>\n\n    ```", "```php\n    <?php\n    echo $this->Form->create(array('action'=>'login'));\n    echo $this->Form->inputs(array(\n    'legend' => 'Login',\n    'username',\n    'password'\n    ));\n    echo $this->Form->end('Login');\n    ?>\n\n    ```", "```php\n    <?php\n    class AppController extends Controller {\n    public $components = array(\n    'Auth' => array(\n    'authorize' => 'controller'\n    ),\n    'Session'\n    );\n    public function isAuthorized() {\n    return true;\n    }\n    }\n    ?>\n\n    ```", "```php\n    public function beforeFilter() {\n    parent::beforeFilter();\n    $this->Auth->allow('add');\n    }\n    public function add() {\n    if (!empty($this->data)) {\n    $this->User->create();\n    if ($this->User->save($this->data)) {\n    $this->Session->setFlash('User created!');\n    $this->redirect(array('action'=>'login'));\n    } else {\n    $this->Session->setFlash('Please correct the errors');\n    }\n    }\n    }\n\n    ```", "```php\n    <?php\n    echo $this->Form->create();\n    echo $this->Form->inputs(array(\n    'legend' => 'Signup',\n    'username',\n    'password'\n    ));\n    echo $this->Form->end('Submit');\n    ?>\n\n    ```", "```php\nif (!empty($this->data)) {\n$this->data['User']['confirm_password'] = $this->Auth->password($this->data['User']['confirm_password']);\n// Continue with processing\n}\n\n```", "```php\nALTER TABLE `users`\nADD COLUMN `active` TINYINT UNSIGNED NOT NULL default 1;\n\n```", "```php\n    public $components = array(\n    'Auth' => array(\n    'authorize' => 'controller',\n    'loginRedirect' => array(\n    'admin' => false,\n    'controller' => 'users',\n    'action' => 'dashboard'\n    ),\n    'loginError' => 'Invalid account specified',\n    'authError' => 'You don\\'t have the right permission'\n    ),\n    'Session'\n    );\n\n    ```", "```php\n    public function beforeFilter() {\n    if ($this->Auth->getModel()->hasField('active'))\n    {$this->Auth->userScope = array('active' => 1);\n    }\n    }\n\n    ```", "```php\n    <?php echo $this->Session->flash('auth'); ?>\n\n    ```", "```php\n    public function dashboard() {\n    }\n\n    ```", "```php\n    <p>Welcome!</p>\n\n    ```", "```php\n'userModel' => 'Account'\n\n```", "```php\n$this->Auth->userModel = 'Account';\n\n```", "```php\nALTER TABLE `users`\nADD COLUMN `email` VARCHAR(255) NOT NULL;\n\n```", "```php\n<?php\necho $this->Form->create();\necho $this->Form->inputs(array(\n'legend' => 'Signup',\n'email',\n'username',\n'password'\n));\necho $this->Form->end('Submit');\n?>\n\n```", "```php\n    <?php\n    echo $this->Form->create(array('action'=>'login'));\n    echo $this->Form->inputs(array(\n    'legend' => 'Login',\n    'username' => array('label'=>'Username / Email'),\n    'password'\n    ));\n    echo $this->Form->end('Login');\n    ?>\n\n    ```", "```php\n    public function login() {\n    if (\n    !empty($this->data) &&\n    !empty($this->Auth->data['User']['username']) &&\n    !empty($this->Auth->data['User']['password'])\n    ) {\n    $user = $this->User->find('first', array(\n    'conditions' => array(\n    'User.email' => $this->Auth->data['User']['username'],\n    'User.password' => $this->Auth->data['User']['password']\n    ),\n    'recursive' => -1\n    ));\n    if (!empty($user) && $this->Auth->login($user)) {\n    if ($this->Auth->autoRedirect) {\n    $this->redirect($this->Auth->redirect());\n    }\n    } else {\n    $this->Session->setFlash($this->Auth->loginError, $this->Auth->flashElement, array(), 'auth');\n    }\n    }\n    }\n\n    ```", "```php\n    public $components = array(\n    'Auth' => array(\n    'authorize' => 'controller',\n    'autoRedirect' => false\n    ),\n    'Cookie',\n    'Session'\n    );\n\n    ```", "```php\n    <?php\n    echo $this->Form->create(array('action'=>'login'));\n    echo $this->Form->inputs(array(\n    'legend' => 'Login',\n    'username',\n    'password',\n    'remember' => array('type' => 'checkbox', 'label' => 'Remember me')\n    ));\n    echo $this->Form->end('Login');\n    ?>\n\n    ```", "```php\n    if (!empty($this->data)) {\n    $userId = $this->Auth->user('id');\n    if (!empty($userId)) {\n    if (!empty($this->data['User']['remember'])) {\n    $user = $this->User->find('first', array(\n    'conditions' => array('id' => $userId),\n    'recursive' => -1,\n    'fields' => array('username', 'password')\n    ));\n    $this->Cookie->write('User', array_intersect_key(\n    $user[$this->Auth->userModel],\n    array('username'=>null, 'password'=>null)\n    ));\n    } elseif ($this->Cookie->read('User') != null) {\n    $this->Cookie->delete('User');\n    }\n    $this->redirect($this->Auth->redirect());\n    }\n    }\n\n    ```", "```php\n    if ($this->Cookie->read('User') != null) {\n    $this->Cookie->delete('User');\n    }\n\n    ```", "```php\n    public function beforeFilter() {\n    if ($this->Auth->user() == null) {\n    $user = $this->Cookie->read('User');\n    if (!empty($user)) {\n    $user = $this->Auth->getModel()->find('first', array(\n    'conditions' => array(\n    $this->Auth->fields['username'] => $user[$this->Auth->fields['username']],\n    $this->Auth->fields['password'] => $user[$this->Auth->fields['password']]\n    ),\n    'recursive' => -1\n    ));\n    if (!empty($user) && $this->Auth->login($user)) {\n    $this->redirect($this->Auth->redirect());\n    }\n    }\n    }\n    }\n\n    ```", "```php\n    public function beforeFilter() {\n    $user = $this->Auth->user();\n    if (!empty($user)) {\n    Configure::write('User', $user[$this->Auth->getModel()->alias]);\n    }\n    }\n\n    ```", "```php\n    public function beforeRender() {\n    $user = $this->Auth->user();\n    if (!empty($user)) {\n    $user = $user[$this->Auth->getModel()->alias];\n    }\n    $this->set(compact('user'));\n    }\n\n    ```", "```php\n    <?php if (!empty($user)) { ?>\n    Welcome back <?php echo $user['username']; ?>!\n    <?php\n    echo $this->Html->link('Log out', array('plugin'=>null, 'admin'=>false, 'controller'=>'users', 'action'=>'logout'));\n    } else {\n    echo $this->Html->link('Log in', array('plugin'=>null, 'admin'=>false, 'controller'=>'users', 'action'=>'login'));\n    }\n    ?>\n\n    ```", "```php\n    <?php\n    class User extends AppModel {\n    public static function get($field = null) {\n    $user = Configure::read('User');\n    if (empty($user) || (!empty($field) && !array_key_exists($field, $user))) {\n    return false;\n    }\n    return !empty($field) ? $user[$field] : $user;\n    }\n    }\n    ?>\n\n    ```", "```php\n$userName = User::get('username');\n\n```", "```php\nALTER TABLE `users`\nADD COLUMN `role` VARCHAR(255) DEFAULT NULL AFTER `password`;\n\n```", "```php\n    Configure::write('Routing.prefixes', array('admin', 'manager'));\n\n    ```", "```php\n    public function dashboard() {\n    $role = $this->Auth->user('role');\n    if (!empty($role)) {\n    $this->redirect(array($role => true, 'action' => 'dashboard'));\n    }\n    }\n    public function admin_dashboard() {\n    }\n    public function manager_dashboard() {\n    }\n\n    ```", "```php\n    <h1>Dashboard (User)</h1>\n\n    ```", "```php\n    public $components = array(\n    'Auth' => array(\n    'authorize' => 'controller',\n    'loginRedirect' => array(\n    'admin' => false,\n    'controller' => 'users',\n    'action' => 'dashboard'\n    )\n    ),\n    'Session'\n    );\n\n    ```", "```php\n    public function isAuthorized() {\n    $role = $this->Auth->user('role');\n    $neededRole = null;\n    $prefix = !empty($this->params['prefix']) ?\n    $this->params['prefix'] :\n    null;\n    if (\n    !empty($prefix) &&\n    in_array($prefix, Configure::read('Routing.prefixes'))\n    ) {\n    $neededRole = $prefix;\n    }\n    return (\n    empty($neededRole) ||\n    strcasecmp($role, 'admin') == 0 ||\n    strcasecmp($role, $neededRole) == 0\n    );\n    }\n\n    ```", "```php\n    <?php\n    $dashboardUrl = array('controller'=>'users', 'action'=>'dashboard');\n    if (!empty($user['role'])) {\n    $dashboardUrl[$user['role']] = true;\n    }\n    echo $this->Html->link('My Dashboard', $dashboardUrl);\n    ?>\n\n    ```", "```php\narray(\n'manager' => true,\n'controller' => 'users',\n'action' => 'dashboard'\n);\n\n```", "```php\nCREATE TABLE `groups`(\n`id` INT NOT NULL AUTO_INCREMENT,\n`name` VARCHAR(255) NOT NULL,\nPRIMARY KEY(`id`)\n);\n\n```", "```php\nINSERT INTO `groups`(`id`, `name`) VALUES\n(1, 'Administrator'),\n(2, 'Manager'),\n(3, 'User');\n\n```", "```php\nCREATE TABLE `users`(\n`id` INT NOT NULL AUTO_INCREMENT,\n`group_id` INT NOT NULL,\n`username` VARCHAR(255) NOT NULL,\n`password` CHAR(40) NOT NULL,\nPRIMARY KEY(`id`),\nKEY `group_id`(`group_id`),\nCONSTRAINT `users__groups` FOREIGN KEY(`group_id`) REFERENCES `groups`(`id`)\n);\n\n```", "```php\n    ../cake/console/cake schema create DbAcl\n\n    ```", "```php\n    ..\\cake\\console\\cake.bat schema create DbAcl\n\n    ```", "```php\n    <?php\n    class UsersController extends AppController {\n    public function login() {\n    }\n    public function logout() {\n    $this->redirect($this->Auth->logout());\n    }\n    }\n    ?>\n\n    ```", "```php\n    <?php\n    echo $this->Form->create(array('action'=>'login'));\n    echo $this->Form->inputs(array(\n    'legend' => 'Login',\n    'username',\n    'password'\n    ));\n    echo $this->Form->end('Login');\n    ?>\n\n    ```", "```php\n    <?php\n    class AppController extends Controller {\n    public $components = array(\n    'Acl',\n    'Auth' => array(\n    'authorize' => 'actions',\n    'loginRedirect' => array(\n    'admin' => false,\n    'controller' => 'users',\n    'action' => 'dashboard'\n    )\n    ),\n    'Session'\n    );\n    }\n    ?>\n\n    ```", "```php\n    public function beforeFilter() {\n    parent::beforeFilter();\n    $this->Auth->allow('add');\n    }\n    public function add() {\n    if (!empty($this->data)) {\n    $this->User->create();\n    if ($this->User->save($this->data)) {\n    $this->Session->setFlash('User created!');\n    $this->redirect(array('action'=>'login'));\n    } else {\n    $this->Session->setFlash('Please correct the errors');\n    }\n    }\n    $this->set('groups', $this->User->Group->find('list'));\n    }\n\n    ```", "```php\n    <?php\n    echo $this->Form->create();\n    echo $this->Form->inputs(array(\n    'legend' => 'Signup',\n    'username',\n    'password',\n    'group_id'\n    ));\n    echo $this->Form->end('Submit');\n    ?>\n\n    ```", "```php\n    <?php\n    class Group extends AppModel {\n    public $actsAs = array('Acl' => 'requester');\n    public function parentNode() {\n    if (empty($this->id) && empty($this->data)) {\n    return null;\n    }\n    $data = $this->data;\n    if (empty($data)) {\n    $data = $this->find('first', array(\n    'conditions' => array('id' => $this->id),\n    'fields' => array('parent_id'),\n    'recursive' => -1\n    ));\n    }\n    if (!empty($data[$this->alias]['parent_id'])) {\n    return $data[$this->alias]['parent_id'];\n    }\n    return null;\n    }\n    }\n    ?>\n\n    ```", "```php\n    <?php\n    class User extends AppModel {\n    public $belongsTo = array('Group');\n    public $actsAs = array('Acl' => 'requester');\n    public function parentNode() {\n    }\n    public function bindNode($object) {\n    if (!empty($object[$this->alias]['group_id'])) {\n    return array(\n    'model' => 'Group',\n    'foreign_key' => $object[$this->alias]['group_id']\n    );\n    }\n    }\n    }\n    ?>\n\n    ```", "```php\n        ../cake/console/cake acl create aro root Groups\n        ../cake/console/cake acl create aro Groups Group.1\n        ../cake/console/cake acl create aro Groups Group.2\n        ../cake/console/cake acl create aro Groups Group.3\n\n        ```", "```php\n        ..\\cake\\console\\cake.bat acl create aro root Groups\n        ..\\cake\\console\\cake.bat acl create aro Groups Group.1\n        ..\\cake\\console\\cake.bat acl create aro Groups Group.2\n        ..\\cake\\console\\cake.bat acl create aro Groups Group.3\n\n        ```", "```php\n    public function dashboard() {\n    $groupName = $this->User->Group->field('name',\n    array('Group.id'=>$this->Auth->user('group_id'))\n    );\n    $this->redirect(array('action'=>strtolower($groupName)));\n    }\n    public function user() {\n    }\n    public function manager() {\n    }\n    public function administrator() {\n    }\n\n    ```", "```php\n    <h1>Dashboard (User)</h1>\n\n    ```", "```php\n        ../cake/console/cake acl create aco root controllers\n        ../cake/console/cake acl create aco controllers Users\n        ../cake/console/cake acl create aco controllers/Users logout\n        ../cake/console/cake acl create aco controllers/Users user\n        ../cake/console/cake acl create aco controllers/Users manager\n        ../cake/console/cake acl create aco controllers/Users administrator\n\n        ```", "```php\n        ..\\cake\\console\\cake.bat acl create aco root controllers\n        ..\\cake\\console\\cake.bat acl create aco controllers Users\n        ..\\cake\\console\\cake.bat acl create aco controllers/Users logout\n        ..\\cake\\console\\cake.bat acl create aco controllers/Users user\n        ..\\cake\\console\\cake.bat acl create aco controllers/Users manager\n        ..\\cake\\console\\cake.bat acl create aco controllers/Users administrator\n\n        ```", "```php\n        ../cake/console/cake acl grant Group.1 controllers/Users all\n        ../cake/console/cake acl grant Group.2 controllers/Users/logout all\n        ../cake/console/cake acl grant Group.2 controllers/Users/manager all\n        ../cake/console/cake acl grant Group.3 controllers/Users/logout all\n        ../cake/console/cake acl grant Group.3 controllers/Users/user all\n\n        ```", "```php\n        ..\\cake\\console\\cake.bat acl grant Group.1 controllers/Users all\n        ..\\cake\\console\\cake.bat acl grant Group.2 controllers/Users/logout all\n        ..\\cake\\console\\cake.bat acl grant Group.2 controllers/Users/manager all\n        ..\\cake\\console\\cake.bat acl grant Group.3 controllers/Users/logout all\n        ..\\cake\\console\\cake.bat acl grant Group.3 controllers/Users/user all\n\n        ```", "```php\n    public $components = array(\n    'Openid.OpenAuth' => array(\n    'authorize' => 'controller'\n    ),\n    'Session'\n    );\n\n    ```", "```php\n    <?php\n    echo $this->Form->create(array('action'=>'login'));\n    echo $this->Form->inputs(array(\n    'legend' => 'Login',\n    'openid' => array('label' => 'OpenID URL'),\n    'username',\n    'password'\n    ));\n    echo $this->Form->end('Login');\n    ?>\n\n    ```"]