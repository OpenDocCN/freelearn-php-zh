- en: Chapter 1. Building Your First FuelPHP Application
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章。构建您的第一个FuelPHP应用程序
- en: Throughout the book, we will use the **FuelPHP** framework to build different
    types of projects. The objective of this chapter is to make you familiar with
    the basics of the framework and create your first project as quickly as possible.
    We won't create anything exceptional in this chapter and there will be very little
    coding, but we will go through the whole process from installing FuelPHP to publishing
    your project on a production server. You will learn the necessary basics for the
    other projects as well.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在整本书中，我们将使用**FuelPHP**框架构建不同类型的项目。本章的目标是让您尽快熟悉框架的基本知识并创建您的第一个项目。在本章中，我们不会创建任何特别的东西，并且代码量将非常少，但我们将从安装FuelPHP到在生产服务器上发布您的项目的过程进行讲解。您将学习其他项目所需的基本知识。
- en: 'By the end of the chapter, you should know the following:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，您应该了解以下内容：
- en: A common development process of a FuelPHP application
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: FuelPHP应用程序的常见开发流程
- en: How to install FuelPHP (the latest or a specific version)
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何安装FuelPHP（最新版本或特定版本）
- en: The FuelPHP file system hierarchy
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: FuelPHP的文件系统层次结构
- en: Two different ways to configure Apache to access your application
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置Apache以访问您的应用程序的两种不同方式
- en: How to configure FuelPHP to connect to a database
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何配置FuelPHP以连接到数据库
- en: The oil command line and how to use it for scaffolding your application
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: oil命令行及其如何用于构建您的应用程序的脚手架
- en: How does an application respond to a URL requested by a visitor
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序如何响应用户请求的URL
- en: What are the FuelPHP templates
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是FuelPHP模板
- en: How to publish your project to a host
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何将您的项目发布到主机
- en: Since this book is intended for intermediate developers, we will assume that
    you have already installed Apache and MySQL on your system. Some prior knowledge
    of Git and Composer is an added advantage as you might need it, but you should
    be fine in this book if you are not familiar with these tools. However, for advanced
    applications that need collaboration between several developers mastering them
    is highly recommended.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 由于本书面向中级开发者，我们假设您已经在系统上安装了Apache和MySQL。一些关于Git和Composer的先验知识是一个额外的优势，因为您可能需要它们，但即使您不熟悉这些工具，在这本书中您也应该能够顺利。然而，对于需要多个开发者协作的高级应用程序，熟练掌握它们是非常推荐的。
- en: In this chapter, we will go from installing the FuelPHP framework to having
    a functional – though limited – web application. As our objective here is to introduce
    the framework and create a sample application as quickly as possible, we won't
    address important topics such as the ORM, which will be addressed in [Chapter
    2](ch02.html "Chapter 2. Building a To-do List Application"), *Building a To-do
    List Application*.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将从安装FuelPHP框架开始，直到拥有一个功能性的——尽管有限的——网络应用程序。由于我们的目标是尽快介绍框架并创建一个示例应用程序，因此我们不会涉及诸如ORM等重要主题，这些将在[第2章](ch02.html
    "第2章。构建待办事项列表应用程序")*构建待办事项列表应用程序*中介绍。
- en: About FuelPHP
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于FuelPHP
- en: Dan Horrigan started the FuelPHP framework in late 2010, and was later joined
    by Phil Sturgeon, Jelmer Schreuder, Harro Verton, Frank de Jonge, Steve West and
    Márk Sági-Kazár. The first stable version was released on July 31st, 2011 and
    this book is based on FuelPHP 1.7.2, the latest stable version available as of
    writing this book. With over 300 contributors, its community is large and active.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 丹·霍里根在2010年底启动了FuelPHP框架，后来菲尔·斯特林、杰尔默·施吕德、哈罗·韦顿、弗兰克·德·容格、史蒂夫·韦斯特和马克·萨吉-卡扎尔加入了进来。第一个稳定版本于2011年7月31日发布，本书基于FuelPHP
    1.7.2，这是撰写本书时的最新稳定版本。拥有超过300位贡献者，其社区庞大且活跃。
- en: The core team is currently working on the second version of FuelPHP; several
    alpha versions of it have already been released.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 核心团队目前正在开发FuelPHP的第二个版本；已经发布了几个alpha版本。
- en: 'If you want to know more about the FuelPHP team and the framework philosophy,
    I recommend you to read the **About FuelPHP** section of the official website
    at:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想了解更多关于FuelPHP团队和框架哲学的信息，我建议您阅读官方网站上的**关于FuelPHP**部分：
- en: '[http://fuelphp.com/about](http://fuelphp.com/about)'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://fuelphp.com/about](http://fuelphp.com/about)'
- en: 'You can read the latest news about the framework on its official blog at:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在其官方博客上阅读有关框架的最新消息：
- en: '[http://fuelphp.com/blogs](http://fuelphp.com/blogs)'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://fuelphp.com/blogs](http://fuelphp.com/blogs)'
- en: 'The official documentation can be found at: [http://fuelphp.com/docs/](http://fuelphp.com/docs/)'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 官方文档可以在以下网址找到：[http://fuelphp.com/docs/](http://fuelphp.com/docs/)
- en: If you have any questions about FuelPHP or encounter any issues, you can search
    the official forum ([http://fuelphp.com/forums/](http://fuelphp.com/forums/))
    and start a new discussion if you don't find any answer. In a general manner,
    the official website ([http://fuelphp.com](http://fuelphp.com)) is an excellent
    resource.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您对FuelPHP有任何疑问或遇到任何问题，您可以在官方论坛([http://fuelphp.com/forums/](http://fuelphp.com/forums/))上搜索并开始新的讨论，如果您找不到任何答案。一般来说，官方网站([http://fuelphp.com](http://fuelphp.com))是一个极好的资源。
- en: Development process of a FuelPHP application
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: FuelPHP应用程序的开发过程
- en: 'The development process of a FuelPHP application generally contains the steps
    shown in the following image:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: FuelPHP应用程序的开发过程通常包含以下图像中显示的步骤：
- en: '![Development process of a FuelPHP application](img/5401OS_01_01.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![FuelPHP应用程序的开发过程](img/5401OS_01_01.jpg)'
- en: '**Install FuelPHP**: Since we are using this framework, this first step is
    quite obvious.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安装FuelPHP**: 由于我们正在使用这个框架，这一步非常明显。'
- en: '**Config** (**configuration**): At the beginning, you will generally need to
    specify how to connect to the database and which package you will use. Later on,
    you might also need to create and use your own configuration files to improve
    the maintainability of your application.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Config** (**配置**): 在开始时，您通常需要指定如何连接到数据库以及您将使用哪个包。稍后，您可能还需要创建和使用自己的配置文件来提高您应用程序的可维护性。'
- en: '**Scaffold**: The oil command line of FuelPHP allows you to easily generate
    code files ready to be used. This step is not necessary, but we will often use
    this functionality in this book because it really speeds up the implementation
    of your application.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Scaffold**: FuelPHP的命令行工具允许您轻松生成可用的代码文件。这一步不是必需的，但在这本书中，我们经常会使用这一功能，因为它确实能加快您应用程序的实现速度。'
- en: '**Dev** (**development**): This is where you, as a developer, step in. You
    customize the generated code to get exactly what you want. When you want to add
    new features (for instance a new model), you go back to the scaffolding step.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Dev** (**开发**): 这就是您作为开发者介入的地方。您将生成的代码定制为得到您想要的确切结果。当您想要添加新功能（例如，一个新的模型）时，您将回到scaffold步骤。'
- en: '**Tests**: Functional and unit testing are important if you want large applications
    to stay maintainable. When bugs are discovered, you go back to the development
    step in order to fix them. Unlike the other steps, we won''t approach this subject
    in this chapter for the sake of its conciseness. It will be addressed in [Chapter
    5](ch05.html "Chapter 5. Building Your Own Restful API"), *Building Your Own RESTful
    API*.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**测试**: 如果您想要大型应用程序保持可维护性，功能测试和单元测试非常重要。当发现错误时，您将回到开发步骤以修复它们。与其他步骤不同，为了简洁起见，我们不会在本章中讨论这个主题。它将在[第5章](ch05.html
    "第5章。构建您的RESTful API") *构建您的RESTful API* 中讨论。'
- en: '**Prod** (**production**): Having a project working locally is nice, but the
    final objective is generally to publish it online. We will give you some directions
    about this step at the end of this chapter, but we won''t get too much into the
    details, given the diversity of available hosting services.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Prod** (**生产**): 在本地运行一个项目是件好事，但最终目标通常是将其发布到线上。我们将在本章末尾为您提供一些关于这一步骤的指导，但由于可用的托管服务种类繁多，我们不会深入细节。'
- en: Just to be clear, this is a very general guideline, and of course the order
    of the steps is not rigid. For instance, developers using the test-driven development
    process could merge the fourth and fifth steps, or a preproduction step could
    be added. The development process should only depend on each developer and institution's
    standards.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 为了明确起见，这是一个非常通用的指南，当然，步骤的顺序并不是固定的。例如，使用测试驱动开发过程的开发者可以将第四步和第五步合并，或者添加一个预生产步骤。开发过程应仅取决于每个开发者和机构的标准。
- en: Installing the environment
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装环境
- en: 'The FuelPHP framework needs the following three components:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: FuelPHP框架需要以下三个组件：
- en: '**Web server**: The most common solution is Apache'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Web服务器**: 最常见的解决方案是Apache'
- en: '**PHP interpreter**: The 5.3.3 version or greater'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PHP解释器**: 5.3.3版本或更高'
- en: '**Database**: We will use MySQL'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据库**: 我们将使用MySQL'
- en: FuelPHP works on **Unix-like** and **Windows** operating systems, but the installation
    and configuration procedures of these components will depend on the operating
    system used. In the following sections we will provide some directions to get
    you started in case you are not used to installing your development environment.
    Please note that these are very generic guidelines, so you might need to search
    the web for complimentary information. There are countless resources on the topic.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: FuelPHP 在 **Unix-like** 和 **Windows** 操作系统上运行，但这些组件的安装和配置过程将取决于所使用的操作系统。在接下来的章节中，我们将提供一些指导，帮助你开始，如果你不习惯安装你的开发环境。请注意，这些是非常通用的指南，所以你可能需要在网上搜索补充信息。关于这个主题有无数的资源。
- en: Windows
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Windows
- en: A complete and very popular solution is to install **WAMP**. This will install
    Apache, MySQL, and PHP, in other words everything you need to get started. It
    can be accessed at [http://www.wampserver.com/en/](http://www.wampserver.com/en/).
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 一个完整且非常流行的解决方案是安装 **WAMP**。这将安装 Apache、MySQL 和 PHP，换句话说，你需要的一切来开始。它可以在 [http://www.wampserver.com/en/](http://www.wampserver.com/en/)
    访问。
- en: Mac
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Mac
- en: PHP and Apache are generally installed on the latest version of the OS, so you
    just have to install MySQL. To do this, you are recommended to read the official
    documentation at [http://dev.mysql.com/doc/refman/5.1/en/macosx-installation.html](http://dev.mysql.com/doc/refman/5.1/en/macosx-installation.html).
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: PHP 和 Apache 通常安装在操作系统的最新版本上，所以你只需要安装 MySQL。为此，建议你阅读官方文档 [http://dev.mysql.com/doc/refman/5.1/en/macosx-installation.html](http://dev.mysql.com/doc/refman/5.1/en/macosx-installation.html)。
- en: A very convenient solution for those who have the least system administration
    skills is to install **MAMP**, the equivalent of WAMP, but for the Mac operating
    system. It can be downloaded from [http://www.mamp.info/en/downloads/](http://www.mamp.info/en/downloads/).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 对于系统管理技能最少的人来说，一个非常方便的解决方案是安装 **MAMP**，这是 WAMP 的等价物，但适用于 Mac 操作系统。可以从 [http://www.mamp.info/en/downloads/](http://www.mamp.info/en/downloads/)
    下载。
- en: Ubuntu
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Ubuntu
- en: As this is the most popular Linux distribution, we will limit our instructions
    to Ubuntu.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这是最受欢迎的 Linux 发行版，我们将我们的说明限制在 Ubuntu 上。
- en: 'You can install a complete environment by executing the following command lines:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过执行以下命令行来安装一个完整的环境：
- en: '[PRE0]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Recommended modules and extensions
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 推荐的模块和扩展
- en: 'The Apache **mod_rewrite** module and some additional PHP extensions are also
    recommended, but not required:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: Apache 的 **mod_rewrite** 模块和一些额外的 PHP 扩展也被推荐，但不是必需的：
- en: '[http://fuelphp.com/docs/requirements.html](http://fuelphp.com/docs/requirements.html)
    (can be accessed through the FuelPHP website by navigating to **DOCS** | **TABLE
    OF CONTENTS** | **FuelPHP** | **Basic** | **Requirements**)'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://fuelphp.com/docs/requirements.html](http://fuelphp.com/docs/requirements.html)（可以通过访问
    FuelPHP 网站并通过导航到 **DOCS** | **TABLE OF CONTENTS** | **FuelPHP** | **Basic** |
    **Requirements**）访问）'
- en: Getting the FuelPHP framework
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 获取 FuelPHP 框架
- en: 'As this book is being written, there are four common ways to download FuelPHP:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本书时，有四种常见的下载 FuelPHP 的方法：
- en: Downloading and unzipping the compressed package which can be found on the FuelPHP
    website.
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载并解压在 FuelPHP 网站上可以找到的压缩包。
- en: Executing the FuelPHP quick command-line installer.
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行 FuelPHP 的快速命令行安装器。
- en: Downloading and installing FuelPHP using Composer.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Composer 下载和安装 FuelPHP。
- en: Cloning the FuelPHP GitHub repository, it is a little bit more complicated but
    allows you to select exactly the version (or even the commit) you want to install.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 克隆 FuelPHP 的 GitHub 仓库，这稍微复杂一些，但允许你选择你想要安装的确切版本（甚至提交）。
- en: These approaches are very well-documented on the website installation instructions
    page at [http://fuelphp.com/docs/installation/instructions.html](http://fuelphp.com/docs/installation/instructions.html)
    (It can be accessed through the FuelPHP website by navigating to **DOCS** | **TABLE
    OF CONTENTS** | **FuelPHP** | **Installation** | **Instructions**)
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这些方法在网站上的安装说明页面上有很好的文档记录 [http://fuelphp.com/docs/installation/instructions.html](http://fuelphp.com/docs/installation/instructions.html)（可以通过访问
    FuelPHP 网站并通过导航到 **DOCS** | **TABLE OF CONTENTS** | **FuelPHP** | **Installation**
    | **Instructions**）访问）
- en: Installing FuelPHP 1.7.2
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 FuelPHP 1.7.2
- en: FuelPHP is always evolving and will continue to evolve even after this book
    is published. As we used FuelPHP 1.7.2 in this book, you might want to install
    the same version in order to prevent any conflict. You can do this by either downloading
    the appropriate ZIP file, cloning the 1.7/master branch of the GitHub repository,
    or using Composer.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: FuelPHP始终在发展，并且即使在这本书出版后也会继续发展。由于我们在本书中使用了FuelPHP 1.7.2，您可能想要安装相同的版本以防止任何冲突。您可以通过下载合适的ZIP文件、克隆GitHub仓库的1.7/master分支或使用Composer来实现这一点。
- en: Downloading the appropriate ZIP file
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 下载合适的ZIP文件
- en: This is the simplest solution. You should be able to download it by requesting
    the URL [http://fuelphp.com/files/download/28](http://fuelphp.com/files/download/28).
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 这是最简单的方法。您应该可以通过请求以下URL来下载它：[http://fuelphp.com/files/download/28](http://fuelphp.com/files/download/28)。
- en: Alternatively, you can access all the compressed packages of important FuelPHP
    releases at [http://fuelphp.com/docs/installation/download.html](http://fuelphp.com/docs/installation/download.html)
    (It can be accessed through the FuelPHP website by navigating to **DOCS** | **TABLE
    OF CONTENTS** | **FuelPHP** | **Installation** | **Download**)
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，您可以在FuelPHP网站上通过导航到**DOCS** | **目录** | **FuelPHP** | **安装** | **下载**来访问所有重要的FuelPHP版本压缩包：[http://fuelphp.com/docs/installation/download.html](http://fuelphp.com/docs/installation/download.html)（通过FuelPHP网站导航到**DOCS**
    | **目录** | **FuelPHP** | **安装** | **下载**可以访问）
- en: Using Composer
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Composer
- en: First, if you didn't do it yet, you need to install **Composer**. You can find
    out how by reading the official website at [https://getcomposer.org/](https://getcomposer.org/).
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，如果您还没有这样做，您需要安装**Composer**。您可以通过阅读官方网站了解如何操作：[https://getcomposer.org/](https://getcomposer.org/)。
- en: The installation instructions for major operating systems are given in the **Getting
    Started** guide. Please note that you can install Composer either globally or
    locally.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 主要操作系统的安装说明在**入门指南**中给出。请注意，您可以将Composer全局或本地安装。
- en: From now on, we will generally assume that you have installed Composer globally.
    If Composer is installed locally into your working directory, our instructions
    will work if you replace `composer` by `php composer.phar`.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 从现在开始，我们将假设您已经全局安装了Composer。如果Composer被安装到您的工作目录中，只要将`composer`替换为`php composer.phar`，我们的说明将同样适用。
- en: 'In order to specifically install FuelPHP 1.7, you can simply execute the following
    command line (replace `TARGET` by the directory in which you want to download
    FuelPHP):'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 为了具体安装FuelPHP 1.7，您可以简单地执行以下命令行（将`TARGET`替换为您想要下载FuelPHP的目录）：
- en: '[PRE1]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Updating FuelPHP
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更新FuelPHP
- en: 'If you have downloaded FuelPHP by cloning the GitHub repository, or if you
    simply want to update FuelPHP and its dependencies, you have to enter the following
    command line at the location you installed your instance of FuelPHP:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您通过克隆GitHub仓库下载了FuelPHP，或者您只是想更新FuelPHP及其依赖项，您必须在安装FuelPHP实例的位置输入以下命令行：
- en: '[PRE2]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: As you can see, Composer is locally installed in the FuelPHP root directory.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，Composer已在本地的FuelPHP根目录中安装。
- en: Installation directory and apache configuration
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装目录和Apache配置
- en: Now that you know how to install FuelPHP in a given directory, we will give
    you the two main ways you can integrate the framework in your environment.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经知道了如何在给定目录中安装FuelPHP，我们将向您介绍两种主要的方法，您可以在环境中集成此框架。
- en: The simplest way
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 最简单的方法
- en: 'Assuming you have activated the **mod_rewrite** Apache module, the simplest
    way is to install FuelPHP in the root folder of your web server (generally the
    `/var/www directory` on Linux systems). If you install FuelPHP in the `DIR` directory
    of the root folder (`/var/www/DIR`), you will be able to access your project at
    the following URL:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您已经激活了Apache模块的**mod_rewrite**，最简单的方法是在您的Web服务器的根目录中安装FuelPHP（通常在Linux系统上的`/var/www`目录）。如果您在根目录的`DIR`目录（`/var/www/DIR`）中安装FuelPHP，您将能够通过以下URL访问您的项目：
- en: '`http://localhost/DIR/public/`'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://localhost/DIR/public/`'
- en: However, be warned that FuelPHP has not been implemented to support this, and
    if you publish your project this way in the production server, it will introduce
    security issues you will have to handle. In such cases, you are recommended to
    use the second way we will explain in the upcoming section, although, for instance
    if you plan to use a shared host to publish your project, you might not have the
    choice. A complete and up-to-date documentation about this issue can be found
    in the FuelPHP installation instruction page at [http://fuelphp.com/docs/installation/instructions.html](http://fuelphp.com/docs/installation/instructions.html)
    (It can be accessed through the FuelPHP website by navigating to **DOCS** | **TABLE
    OF CONTENTS** | **FuelPHP** | **Installation** | **Instructions**)
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，请注意，FuelPHP尚未实现支持此功能，如果您以这种方式在生产服务器上发布项目，将会引入您必须处理的安全问题。在这种情况下，建议您使用我们将在下一节中解释的第二种方法，尽管，例如，如果您计划使用共享主机来发布项目，您可能没有选择。关于此问题的完整和最新文档可以在FuelPHP安装说明页面[http://fuelphp.com/docs/installation/instructions.html](http://fuelphp.com/docs/installation/instructions.html)（可以通过导航到FuelPHP网站上的**DOCS**
    | **目录** | **FuelPHP** | **安装** | **说明**）找到。
- en: By setting up a virtual host
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 通过设置虚拟主机
- en: 'Another way is to create a virtual host to access your application. You will
    need a little bit more Apache and system administration skills, but the benefit
    is that it is more secure and you will be able to choose your working directory.
    You will need to change two files:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种方法是创建一个虚拟主机来访问您的应用程序。您需要一些Apache和系统管理的技能，但好处是它更安全，您将能够选择您的工作目录。您需要更改两个文件：
- en: Your Apache virtual host file(s) in order to link a virtual host to your application
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您的Apache虚拟主机文件，以便将虚拟主机链接到您的应用程序
- en: Your system host file in order to redirect the wanted URL to your virtual host
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您的系统主机文件，以便将所需的URL重定向到您的虚拟主机
- en: In both cases, the files' location will be dependent on your operating system
    and the server environment you are using; therefore, you will have to figure out
    their location yourself (if you are using a common configuration, you won't have
    any problem to finding instructions on your preferred search engine).
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在这两种情况下，文件的存储位置将取决于您使用的操作系统和服务器环境；因此，您将不得不自己找出它们的位置（如果您使用的是常见的配置，您不会在您首选的搜索引擎上找到任何问题）。
- en: In the following example, we will set up your system to call your application
    when requesting the `my.app` URL on your local environment (*nix system recommended).
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下示例中，我们将设置您的系统，以便在本地环境中请求`my.app` URL时调用您的应用程序（推荐使用*nix系统）。
- en: 'Let''s first edit the virtual host file(s). Add the following code at the end:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先编辑虚拟主机文件。在末尾添加以下代码：
- en: '[PRE3]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Then, open your system host file and add the following line at the end:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，打开您的系统主机文件，并在末尾添加以下行：
- en: '[PRE4]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Depending on your environment, you might need to restart Apache after this.
    You can now access your website at: `http://my.app/`.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 根据您的环境，您可能需要在之后重启Apache。现在您可以通过`http://my.app/`访问您的网站。
- en: '![By setting up a virtual host](img/5401OS_01_02.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![通过设置虚拟主机](img/5401OS_01_02.jpg)'
- en: Congratulations! You just have successfully installed the FuelPHP framework.
    The welcome page shows some recommended directions to continue your project.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！您已成功安装FuelPHP框架。欢迎页面显示了一些推荐的继续项目的方向。
- en: FuelPHP basics
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: FuelPHP基础知识
- en: 'Now that we have installed a working version of FuelPHP, let''s analyze, on
    a very basic level, how the framework works. We won''t go into the details here;
    the idea is to only understand the necessary information to use the framework.
    In this section, you are recommended to follow and check our explanations on your
    installed instance; don''t hesitate to explore files and folders, this will make
    you more comfortable when we will begin our project''s implementation. In this
    section, we will approach the following:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经安装了一个FuelPHP的工作版本，让我们从非常基础的水平分析一下框架是如何工作的。我们不会在这里深入细节；目的是只了解使用框架所需的信息。在本节中，建议您跟随并检查我们关于您已安装实例的解释；不要犹豫去探索文件和文件夹，这将使我们在开始项目的实现时感到更加舒适。在本节中，我们将探讨以下内容：
- en: The FuelPHP file system hierarchy
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: FuelPHP的文件系统层次结构
- en: MVC, HMVC, and how it works on FuelPHP
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MVC、HMVC及其在FuelPHP中的工作原理
- en: The oil utility
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Oil工具
- en: The FuelPHP file system hierarchy
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: FuelPHP的文件系统层次结构
- en: 'Let''s dive into the directory where we have installed FuelPHP. You might want
    to follow along using a file browser. As this book is being written, the current
    version of FuelPHP has the following directory hierarchy:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们深入了解我们已安装FuelPHP的目录。你可能想使用文件浏览器来跟随。由于本书正在编写中，FuelPHP的当前版本具有以下目录层次结构：
- en: '`/docs`: contains an HTML version of the framework documentation'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/``docs`: 包含框架文档的HTML版本'
- en: '/`fuel`, which contains:'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/``fuel`，其中包含：'
- en: '/`fuel/app`: Everything related to your application. This is where you will
    work most of the time. We will look into this directory in the upcoming *The app
    directory* section.'
  id: totrans-101
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/``fuel/app`: 与你的应用程序相关的所有内容。你将大部分时间在这里工作。我们将在即将到来的*应用程序目录*部分中查看此目录。'
- en: '/`fuel/core`: The core classes and configuration. You should not change anything
    inside it, unless of course you want to contribute to the FuelPHP core.'
  id: totrans-102
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/``fuel/core`: 核心类和配置。你不应该更改其中的任何内容，除非当然你想为FuelPHP核心做出贡献。'
- en: '/`fuel/packages`: Packages are core extensions, they are bundles containing
    reusable classes and configuration files. Using the FuelPHP default configuration,
    this is the only directory where you can install packages (your own as well as
    from external sources). Notice that there are already five installed packages.
    We will use each of them in this book.'
  id: totrans-103
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/``fuel/packages`: 包是核心扩展，它们是包含可重用类和配置文件的包。使用FuelPHP默认配置，这是你可以安装包的唯一目录（包括你自己的以及来自外部来源的）。注意，已经有五个已安装的包。我们将在本书中使用它们中的每一个。'
- en: '/`vendor`: This directory contains third-party packages and libraries that
    are generally not FuelPHP-specific.'
  id: totrans-104
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/``vendor`: 此目录包含通常不是FuelPHP特定的第三方包和库。'
- en: '/`public`: This directory is accessible by external visitors. You want to put
    here files publicly available, as CSS or JS files for instance.'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/``public`: 此目录可供外部访客访问。你希望在这里放置公开可用的文件，例如CSS或JS文件。'
- en: The app directory
  id: totrans-106
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 应用程序目录
- en: 'As written earlier, the app directory is where you will work most of the time.
    Thus, you should be familiar with its hierarchy, which is given as follows:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，应用程序目录是你将大部分时间工作的地方。因此，你应该熟悉其层次结构，如下所示：
- en: '/`cache`: This directory is used to store cache files that improve your application''s
    performance.'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/``cache`: 此目录用于存储提高应用程序性能的缓存文件。'
- en: '/`classes`: Classes used by your application:'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/``classes`: 供你的应用程序使用的类：'
- en: '/`classes/controller`: Where you have to implement your controllers (see the
    *MVC, HMVC, and how it works on FuelPHP* section)'
  id: totrans-110
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/``classes/controller`: 你必须实现你的控制器的地方（参见*MVC, HMVC以及如何在FuelPHP上工作*部分）'
- en: '/`classes/model`: Where you have to implement your models (see the *MVC, HMVC,
    and how it works on FuelPHP* section)'
  id: totrans-111
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/``classes/model`: 你必须实现你的模型的地方（参见*MVC, HMVC以及如何在FuelPHP上工作*部分）'
- en: '/`classes/presenter`: Where you have to implement your presenters (see the
    *MVC, HMVC, and how it works on FuelPHP* section).'
  id: totrans-112
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/``classes/presenter`: 你必须实现你的演示者（参见*MVC, HMVC以及如何在FuelPHP上工作*部分）。'
- en: '/`config`: Every configuration file. Since some files are important, we will
    list them as well:'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/``config`: 每个配置文件。由于一些文件很重要，我们也将它们列出：'
- en: '/`config/config.php`: Defines important FuelPHP configuration items such as
    activated packages or security settings.'
  id: totrans-114
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/``config/config.php`: 定义重要的FuelPHP配置项，例如激活的包或安全设置。'
- en: '/`config/db.php`: Defines database connection information.'
  id: totrans-115
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/``config/db.php`: 定义数据库连接信息。'
- en: '/`config/routes.php`: Defines the application''s routes (we will approach them
    later in this chapter).'
  id: totrans-116
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/``config/routes.php`: 定义应用程序的路由（我们将在本章后面讨论它们）。'
- en: '/`config/development`, `config/production`, `config/staging`, `config/test`:
    All configuration files in the `config/ENV` directory, `ENV` being the current
    environment, are merged with the ones in the `config` folder. For instance, if
    the FuelPHP environment is set to `development` (as it is by default), the `config/development/db.php`
    file will be recursively merged with the `config/db.php` file. In concrete terms,
    this means that configuration items defined in the `config/ENV/db.php` file overwrite
    those in the `config/db.php` file. We will illustrate this through an example
    in *The oil utility and the oil console* section.'
  id: totrans-117
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/``config/development`，`config/production`，`config/staging`，`config/test`:
    `config/ENV`目录中的所有配置文件（`ENV`是当前环境）与`config`文件夹中的文件合并。例如，如果FuelPHP环境设置为`development`（默认情况下是这样），则`config/development/db.php`文件将递归地与`config/db.php`文件合并。具体来说，这意味着在`config/ENV/db.php`文件中定义的配置项将覆盖`config/db.php`文件中的配置项。我们将在*油工具和油控制台*部分通过一个示例来说明这一点。'
- en: '/`lang`: Contains the translation files.'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/``lang`: 包含翻译文件。'
- en: '/`logs`: Contains the log files. The log file path depends on the day it is
    written. For instance, if you log a message on July 1, 2015, it will be saved
    in the file located in `logs/2015/07/01.php`.'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: /`logs`：包含日志文件。日志文件路径取决于其写入的日期。例如，如果您在 2015 年 7 月 1 日记录一条消息，它将被保存在 `logs/2015/07/01.php`
    中的文件中。
- en: '/`migrations`: Contains the migration files, which allow you to easily alter
    your database in a structured manner. For instance, if many people are working
    on the same project, or if there are many instances of the same project (development/production),
    they make the database change easier. We will often use them in the book.'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: /`migrations`：包含迁移文件，这些文件允许您以结构化的方式轻松更改您的数据库。例如，如果有很多人在同一个项目上工作，或者有多个相同项目的实例（开发/生产），它们使数据库更改变得更容易。我们将在本书中经常使用它们。
- en: '/`modules`: Contains your application''s modules. Each module can be described
    as a bundle of code that can respond to requests and be easily reused on other
    projects. We will create a module for the blog project in [Chapter 3](ch03.html
    "Chapter 3. Building a Blog Application"), *Building a Blog Application*.'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: /`modules`：包含您的应用程序的模块。每个模块都可以描述为一组可以响应请求并易于在其他项目中重用的代码。我们将在 [第 3 章](ch03.html
    "第 3 章。构建博客应用程序")，*Building a Blog Application* 中为博客项目创建一个模块。
- en: '/`tasks`: Contains task files, which are classes that can be executed from
    the command line (for cron jobs for instance).'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: /`tasks`：包含任务文件，这些是可以通过命令行执行（例如，用于 cron 作业）的类。
- en: '/`tests`: Contains test files, which can be used to automatically test your
    application. We will approach them in [Chapter 5](ch05.html "Chapter 5. Building
    Your Own Restful API"), *Building Your Own RESTful API*, to test our application.'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: /`tests`：包含测试文件，这些文件可以用来自动测试您的应用程序。我们将在 [第 5 章](ch05.html "第 5 章。构建您的自己的 Restful
    API")，*Building Your Own RESTful API* 中处理它们，以测试我们的应用程序。
- en: '/`tmp`: Contains temporary files.'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: /`tmp`：包含临时文件。
- en: '/`vendor`: This directory contains third-party libraries and packages only
    used by your application.'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: /`vendor`：此目录仅包含由您的应用程序使用的第三方库和包。
- en: '/`views`: Contains the view files used by your application (see the *MVC, HMVC,
    and how it works on FuelPHP* section).'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: /`views`：包含您的应用程序使用的视图文件（请参阅 *MVC, HMVC, and how it works on FuelPHP* 部分）。
- en: The packages
  id: totrans-127
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 包含文件
- en: 'The `fuel/packages` directory contains five default packages that, when activated,
    can add interesting features to FuelPHP:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '`fuel/packages` 目录包含五个默认包，当激活时，可以为 FuelPHP 添加有趣的功能：'
- en: The `auth` package provides a standardized interface for user authentication.
    We will use this package in [Chapter 5](ch05.html "Chapter 5. Building Your Own
    Restful API"), *Building Your Own RESTful API*.
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`auth` 包提供了一个用于用户身份验证的标准接口。我们将在 [第 5 章](ch05.html "第 5 章。构建您的自己的 Restful API")，*Building
    Your Own RESTful API* 中使用此包。'
- en: The `email` package provides an interface to send e-mails using different drivers.
    We will use this package in [Chapter 3](ch03.html "Chapter 3. Building a Blog
    Application"), *Building a Blog Application*.
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`email` 包提供了一个使用不同驱动程序发送电子邮件的接口。我们将在 [第 3 章](ch03.html "第 3 章。构建博客应用程序")，*Building
    a Blog Application* 中使用此包。'
- en: The `oil` package allows you to speed up your application's implementation by
    generating code files, launching tests and tasks, or providing a CLI PHP console.
    We will use this package in all chapters and we will explore its features in *The
    oil utility and the oil console* section.
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`oil` 包允许您通过生成代码文件、启动测试和任务或提供 CLI PHP 控制台来加速您应用程序的实现。我们将在这个包的所有章节中使用它，并在 *The
    oil utility and the oil console* 部分中探索其功能。'
- en: 'The `orm`: This package is an improvement of the FuelPHP''s core models; it
    allows them to fetch complex queries and to define the relations between them.
    We will use this package in [Chapter 2](ch02.html "Chapter 2. Building a To-do
    List Application"), *Building a To-do List Application*.'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`orm`：此包是 FuelPHP 核心模型的改进；它允许它们执行复杂查询并定义它们之间的关系。我们将在 [第 2 章](ch02.html "第 2
    章。构建待办事项列表应用程序")，*Building a To-do List Application* 中使用此包。'
- en: 'The `parser`: This package allows your application to render view files in
    common template systems such as Twig or Smarty. We will use this package in [Chapter
    5](ch05.html "Chapter 5. Building Your Own Restful API"), *Building Your Own RESTful
    API*.'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`parser`：此包允许您的应用程序在常见的模板系统（如 Twig 或 Smarty）中渲染视图文件。我们将在 [第 5 章](ch05.html
    "第 5 章。构建您的自己的 Restful API")，*Building Your Own RESTful API* 中使用此包。'
- en: We will also create our own package in [Chapter 4](ch04.html "Chapter 4. Creating
    and Using Packages"), *Creating and Using Packages*.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将在 [第 4 章](ch04.html "第 4 章。创建和使用包")，*Creating and Using Packages* 中创建我们自己的包。
- en: Class name, paths, and coding standard
  id: totrans-135
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 类名、路径和编码标准
- en: 'In FuelPHP, there are five constants that define the location of the most important
    directories as follows:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在FuelPHP中，有五个常量定义了最重要的目录的位置，如下所示：
- en: '**APPPATH**: The application directory (`fuel/app`)'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**APPPATH**: 应用目录（`fuel/app`）'
- en: '**COREPATH**: The core directory (`fuel/core`)'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**COREPATH**: 核心目录（`fuel/core`）'
- en: '**PKGPATH**: The packages directory (`fuel/packages`)'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PKGPATH**: 包含目录（`fuel/packages`）'
- en: '**DOCROOT**: The public directory (`public`)'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**DOCROOT**: 公共目录（`public`）'
- en: '**VENDORPATH**: The vendor directory (`fuel/vendor`)'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**VENDORPATH**: 供应商目录（`fuel/vendor`）'
- en: You are recommended to read the official documentation about these constants
    at [http://fuelphp.com/docs/general/constants.html](http://fuelphp.com/docs/general/constants.html)
    (It can be accessed through the FuelPHP website by navigating to **DOCS** | **TABLE
    OF CONTENTS** | **FuelPHP** | **General** | **Constants**)
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 建议您阅读有关这些常量的官方文档，网址为 [http://fuelphp.com/docs/general/constants.html](http://fuelphp.com/docs/general/constants.html)（可以通过导航到FuelPHP网站上的**DOCS**
    | **目录** | **FuelPHP** | **通用** | **常量**来访问）。
- en: Please keep in mind, that we will often use these constants in the book to shorten
    file paths.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，在本书中，我们经常会使用这些常量来缩短文件路径。
- en: 'An interesting point is that FuelPHP allows you to change quite easily the
    folder structure: for instance, you can change in the `public/index.php` file
    the value of the constants that we just introduced, or you can change the directory
    where FuelPHP will load modules by changing the `module_paths` key in the `APPPATH/config/config.php`
    configuration file.'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 一个有趣的观点是，FuelPHP允许您非常容易地更改文件夹结构：例如，您可以在 `public/index.php` 文件中更改我们刚刚介绍的常量的值，或者您可以通过更改
    `APPPATH/config/config.php` 配置文件中的 `module_paths` 键来更改FuelPHP将加载模块的目录。
- en: 'You might also have noticed that class names are related to their own path,
    as given in the following:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能也注意到了，类名与它们自己的路径相关，如下所示：
- en: In the app directory, the `classes/controller/welcome.php` class is named `Controller_Welcome`
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在应用目录中，`classes/controller/welcome.php` 类被命名为 `Controller_Welcome`
- en: The `classes/model/welcome.php` class is named `Model_Welcome`
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`classes/model/welcome.php` 类被命名为 `Model_Welcome`'
- en: You can notice that classes are named the same way in the `fuel/core` directory
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以注意到在 `fuel/core` 目录中类的命名方式相同
- en: This result was not achieved by accident; FuelPHP follows by default the PSR-0
    standard. You are recommended to read the official documentation about this standard
    at [http://www.php-fig.org/psr/psr-0/](http://www.php-fig.org/psr/psr-0/).
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 这个结果并非偶然得到；FuelPHP 默认遵循 PSR-0 标准。建议您阅读有关此标准的官方文档，网址为 [http://www.php-fig.org/psr/psr-0/](http://www.php-fig.org/psr/psr-0/)。
- en: MVC, HMVC, and how it works on FuelPHP
  id: totrans-150
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: MVC、HMVC以及它们在FuelPHP中的工作原理
- en: We will now look into one major aspect of the FuelPHP framework – the MVC and
    HMVC software architecture patterns.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将探讨FuelPHP框架的一个主要方面——MVC和HMVC软件架构模式。
- en: What is MVC?
  id: totrans-152
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 什么是MVC？
- en: '**Model-view-controller** (**MVC**) is a software architecture pattern that
    states that the code should be separated in three categories: models, views, and
    controllers.'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '**模型-视图-控制器**（**MVC**）是一种软件架构模式，它指出代码应该分为三个类别：模型、视图和控制器。'
- en: 'For those who are not familiar with it, let''s illustrate this through an example:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 对于不熟悉的人来说，我们可以通过以下示例来说明：
- en: '![What is MVC?](img/5401OS_01_03.jpg)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![什么是MVC?](img/5401OS_01_03.jpg)'
- en: 'Suppose a user tries to access your website. The following are some URLs he/she
    might request:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 假设一个用户试图访问您的网站。以下是他/她可能请求的一些URL：
- en: '`http://my.app/`'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://my.app/`'
- en: '`http://my.app/welcome/`'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://my.app/welcome/`'
- en: '`http://my.app/welcome/hello`'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://my.app/welcome/hello`'
- en: Depending on the requested URL, your website is generally expected to return
    some HTML code and it also sometimes needs to update the database, for instance
    when you want to save the users' comments.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 根据请求的URL，您的网站通常需要返回一些HTML代码，有时还需要更新数据库，例如当您想要保存用户的评论时。
- en: The returned HTML code is generated by the views, because this is what is received
    by the browser and indirectly seen by the user.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 返回的HTML代码是由视图生成的，因为这是浏览器接收到的，并且用户间接看到的内容。
- en: 'The database is generally updated through models. In concrete terms, instead
    of executing raw SQL code to access and update the database, the best practice
    is to use classes and instances to do so. Each class represents a model that is
    related to a specific table: for example, the `car` model would access the `cars`
    table. Each class'' instance is a model instance linked to a specific row in a
    table: for example, your car''s information can be saved as a `car` instance that
    will be linked to a specific row in the `cars` table. As we use classes instead
    of raw SQL code, the framework has already implemented frequently needed features
    such as reading, creating, saving, or deleting model''s instances. A further advantage
    is that, as we used packaged and well-implemented methods to access our database,
    it can prevent most unintended security breaches that we can create when requesting
    the database using raw SQL.'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库通常通过模型进行更新。具体来说，我们不是通过执行原始SQL代码来访问和更新数据库，而是最佳实践是使用类和实例来这样做。每个类代表一个与特定表相关的模型：例如，`car`模型会访问`cars`表。每个类的实例是一个与表中特定行链接的模型实例：例如，你的汽车信息可以保存为一个`car`实例，该实例将与`cars`表中的特定行相关联。由于我们使用类而不是原始SQL代码，框架已经实现了频繁需要的功能，例如读取、创建、保存或删除模型实例。另一个优点是，由于我们使用了打包和良好实现的访问数据库的方法，它可以防止我们在使用原始SQL请求数据库时可能创建的大多数意外安全漏洞。
- en: 'The controllers allow the website to handle the user''s request by selecting
    the correct view to send back (the response) and updating the database (through
    models) if necessary. Controllers handle a specific section of the website: for
    instance, the `car` controller will handle everything that is related to cars.
    Controllers are subdivided by actions that will handle specific features: for
    instance, the `list` action of the `car` controller will return a list of cars
    in HTML code. In practice, controllers are classes and actions are methods.'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 控制器允许网站通过选择正确的视图来处理用户的请求并返回（响应），并在必要时通过模型更新数据库。控制器处理网站的特定部分：例如，`car`控制器将处理与汽车相关的一切。控制器通过动作细分，动作将处理特定的功能：例如，`car`控制器的`list`动作将返回一个汽车的列表。在实践中，控制器是类，动作是方法。
- en: When the user requests a URL, the framework will select an action inside a controller
    to handle it. Those are generally chosen by convention; for instance, when requesting
    `http://my.app/welcome/hello`, the framework will choose the `hello` action inside
    the `welcome` controller. Sometimes, they can also be chosen using a routes configuration
    file that matches URLs to actions and controllers.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户请求一个URL时，框架将选择控制器中的一个动作来处理它。这些通常是通过约定选择的；例如，当请求`http://my.app/welcome/hello`时，框架将选择`welcome`控制器中的`hello`动作。有时，它们也可以通过一个路由配置文件来选择，该文件将URL与动作和控制器匹配。
- en: The views sometimes need to access models; for example, we need to access the
    `car` model's instances when we want to display a list of cars. However, views
    should never update models or the database; only the controllers and preferably
    models should do that.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 视图有时需要访问模型；例如，当我们想要显示汽车列表时，我们需要访问`car`模型的实例。然而，视图不应更新模型或数据库；只有控制器和最好是模型应该这样做。
- en: Please note that additional code components as helpers or presenters can be
    added to ease the development process, but if you understood this section, you
    got the most important points.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，可以添加额外的代码组件作为辅助工具或演示者以简化开发过程，但如果你理解了这一部分，你就掌握了最重要的要点。
- en: How it works on FuelPHP
  id: totrans-167
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在FuelPHP中的工作原理
- en: 'Let''s illustrate how it works by testing our newly created website. We suppose
    that your application is available at the following URL:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过测试我们新创建的网站来说明它是如何工作的。我们假设你的应用程序在以下URL上可用：
- en: '`http://my.app/`'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://my.app/`'
- en: Actions and controllers
  id: totrans-170
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 动作和控制器
- en: 'If you request a random URL, you will probably get a 404 exception. For instance:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你请求一个随机的URL，你可能会得到一个404异常。例如：
- en: '`http://my.app/should_display_404`'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://my.app/should_display_404`'
- en: 'But, if you request the following URL, you will display the same page as the
    home page:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，如果你请求以下URL，你将显示与主页相同的页面：
- en: '`http://my.app/welcome/index`'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://my.app/welcome/index`'
- en: 'If you request the following URL, you will display a different page:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你请求以下URL，你将显示不同的页面：
- en: '`http://my.app/welcome/hello`'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://my.app/welcome/hello`'
- en: 'Let''s first explain how the last two requests worked. You can notice that
    both URLs contain the *welcome* word just after the base URL. You can also find
    this word in the file name `fuel/app/classes/controller/welcome.php`; it turns
    out that *welcome* is a controller. Now, open this file using your preferred text
    editor. You will then read the following:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先解释一下最后两个请求是如何工作的。你可以注意到，这两个URL在基本URL之后都包含 *welcome* 这个词。你还可以在文件名 `fuel/app/classes/controller/welcome.php`
    中找到这个词；结果是 *welcome* 是一个控制器。现在，使用你喜欢的文本编辑器打开这个文件。然后你会读到以下内容：
- en: '[PRE5]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'You can notice the `action_index` and `action_hello` methods. These functions
    are called actions. Now, as you have probably guessed, when you request `http://my.app/welcome/index`,
    the `action_index` method will be called. In a more general manner, if you request
    `http://my.app/CONTROLLER/ACTION`, the `action_ACTION` method of the `CONTROLLER`
    controller will be called. Let''s test that. Edit the `action_index` function
    to add a simple echo at the beginning:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以注意到 `action_index` 和 `action_hello` 方法。这些函数被称为动作。现在，正如你可能已经猜到的，当你请求 `http://my.app/welcome/index`
    时，将调用 `action_index` 方法。更一般地说，如果你请求 `http://my.app/CONTROLLER/ACTION`，将调用 `CONTROLLER`
    控制器的 `action_ACTION` 方法。让我们来测试一下。编辑 `action_index` 函数，在开始处添加一个简单的echo语句：
- en: '[PRE6]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Now, if you request `http://my.app/welcome/index`, you will read the printed
    content at the beginning of the web page. Though this is an easy way to test how
    things work, never print anything in your action or controller. When you print
    a message, you are already implementing the view entity; thus, printing something
    in the controller breaks the MVC pattern.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果你请求 `http://my.app/welcome/index`，你将阅读网页开头的打印内容。尽管这是一种测试事物如何工作的简单方法，但永远不要在你的动作或控制器中打印任何内容。当你打印一条消息时，你已经在实现视图实体；因此，在控制器中打印内容会破坏MVC模式。
- en: Views
  id: totrans-182
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 视图
- en: 'But then how are the pages rendered? Let''s analyze the only line of code in
    our `index` action:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 但然后页面是如何渲染的呢？让我们分析 `index` 动作中的唯一一行代码：
- en: '[PRE7]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '`View::forge(''welcome/index'')` returns a `View` object generated from the
    `fuel/app/views/welcome/index.php` view file. We will use this function a lot
    in this chapter and this book, and will cover all its parameters, but you can
    read its official documentation in the FuelPHP website:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '`View::forge(''welcome/index'')` 返回一个由 `fuel/app/views/welcome/index.php` 视图文件生成的
    `View` 对象。我们将在本章和本书中多次使用此函数，并将涵盖所有其参数，但你可以在FuelPHP网站上阅读其官方文档：[http://fuelphp.com/docs/classes/view.html](http://fuelphp.com/docs/classes/view.html)。'
- en: '[http://fuelphp.com/docs/classes/view.html#/method_forge](http://fuelphp.com/docs/classes/view.html#/method_forge).
    (It can be accessed through the FuelPHP website by navigating to **DOCS** | **TABLE
    OF CONTENTS** | **Core** | **View**)'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://fuelphp.com/docs/classes/view.html#/method_forge](http://fuelphp.com/docs/classes/view.html#/method_forge)。（可以通过在FuelPHP网站上导航到**DOCS**
    | **TABLE OF CONTENTS** | **Core** | **View**来访问）。'
- en: '`Response::forge(View::forge(''welcome/index''));` returns a response object
    created from the `View` object. Additional parameters allow us to change headers
    or the page status. A response object contains all the necessary information that
    will be sent to the browser: the headers and the body (generally the HTML code).
    You are recommended to read the official documentation on the FuelPHP website
    at [http://fuelphp.com/docs/classes/response.html#method_forge](http://fuelphp.com/docs/classes/response.html#method_forge)
    (It can be accessed through the FuelPHP website navigating to **DOCS** | **TABLE
    OF CONTENTS** | **Core** | **Response**)'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '`Response::forge(View::forge(''welcome/index''));` 返回一个由 `View` 对象创建的响应对象。额外的参数允许我们更改头部或页面状态。响应对象包含将被发送到浏览器所需的所有信息：头部和主体（通常是HTML代码）。建议你阅读FuelPHP网站上的官方文档[http://fuelphp.com/docs/classes/response.html#method_forge](http://fuelphp.com/docs/classes/response.html#method_forge)（可以通过在FuelPHP网站上导航到**DOCS**
    | **TABLE OF CONTENTS** | **Core** | **Response**来访问）。'
- en: Since the view is generated from the `fuel/app/views/welcome/index.php` file,
    open it to discover its content. You can notice that this is the same HTML code
    as the one displayed when requesting the URL. Just after `<h1>Welcome!</h1>`,
    add `<p>This is my first view change.</p>`. Now, if you refresh your browser,
    you will see this message appear under the **Welcome!** title.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 由于视图是从 `fuel/app/views/welcome/index.php` 文件生成的，打开它以查看其内容。你可以注意到这与请求URL时显示的HTML代码相同。在
    `<h1>Welcome!</h1>` 之后，添加 `<p>This is my first view change.</p>`。现在，如果你刷新浏览器，你将看到这条消息出现在
    **Welcome!** 标题下。
- en: Parameters
  id: totrans-189
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 参数
- en: 'It is possible to indicate parameters, both to the actions and to the views.
    For instance, replace your `index` action by the following code:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 可以向动作和视图指示参数。例如，将你的 `index` 动作替换为以下代码：
- en: '[PRE8]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: And in the `fuel/app/views/welcome/index.php` view file, replace
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 并且在`fuel/app/views/welcome/index.php`视图文件中，替换
- en: '[PRE9]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: by
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 通过
- en: '[PRE10]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Now, if you request the following URL:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果你请求以下URL：
- en: '`http://my.app/welcome/index`'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://my.app/welcome/index`'
- en: 'the title will display **Welcome user (id: 0)!**'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: '标题将显示 **欢迎用户（id: 0）**！'
- en: 'If you request the following URL:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你请求以下URL：
- en: '`http://my.app/welcome/index/Jane`'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://my.app/welcome/index/Jane`'
- en: 'the title will display **Welcome Jane (id: 0)!**'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '标题将显示 **欢迎简妮（id: 0）**！'
- en: 'And if you request the following URL:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你请求以下URL：
- en: '`http://my.app/welcome/index/Jane/34`'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://my.app/welcome/index/Jane/34`'
- en: 'the title will display **Welcome Jane (id: 34)!**'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '标题将显示 **欢迎简妮（id: 34）**！'
- en: 'You might have understood that if you request the following URL:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经理解了，如果你请求以下URL：
- en: '`http://my.app/CONTROLLER/ACTION/PARAM_1/PARAM_2/PARAM3`'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://my.app/CONTROLLER/ACTION/PARAM_1/PARAM_2/PARAM3`'
- en: The `action_ACTION` method of `CONTROLLER` will be called with the `PARAM_1`,
    `PARAM_2`, and `PARAM_3` parameters. If there are less parameters defined in the
    URL than required in the method, either, if defined, the parameters take their
    default values (as illustrated previously), or, if no default value is defined,
    it will trigger a 404 error.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '`CONTROLLER`的`action_ACTION`方法将使用`PARAM_1`、`PARAM_2`和`PARAM_3`参数被调用。如果URL中定义的参数少于方法中所需的参数，要么，如果已定义，参数将采用其默认值（如前所述），要么，如果没有定义默认值，它将触发404错误。'
- en: You can notice that we replaced
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以注意到我们替换了
- en: '[PRE11]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: By
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 通过
- en: '[PRE12]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: View parameters are sent by the second parameter of `\View::forge` in an associative
    array. Here, the associative array has two keys, `name` and `id`, and their values
    are available inside the view file through the `$name` and `$id` variables.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 视图参数是通过`\View::forge`的第二个参数以关联数组的形式发送的。在这里，关联数组有两个键，`name`和`id`，它们的值可以通过视图文件中的`$name`和`$id`变量访问。
- en: 'In a more general manner, if you call the following:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 以更通用的方式，如果你调用以下：
- en: '[PRE13]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: When the view file will be executed, parameters will be available through the
    `$param_1` and `$param_2` variables.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 当视图文件被执行时，参数将通过`$param_1`和`$param_2`变量可用。
- en: Routes
  id: totrans-216
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 路由
- en: Though what we previously observed explains how the standard cases operate
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们之前观察到的解释了标准情况是如何操作的
- en: '`http://my.app/CONTROLLER/ACTION`'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://my.app/CONTROLLER/ACTION`'
- en: 'we haven''t explained why the two following URLs return content though no associated
    controller and action can be found:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们没有解释为什么以下两个URL返回内容，尽管找不到相关的控制器和动作：
- en: '`http://my.app/`'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://my.app/`'
- en: '`http://my.app/should_display_404`'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://my.app/should_display_404`'
- en: 'For understanding why we have to open the `fuel/app/config/routes.php` configuration
    file:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 为了理解为什么我们必须打开`fuel/app/config/routes.php`配置文件：
- en: '[PRE14]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'You can first notice the following two special keys:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 你首先可以注意到以下两个特殊键：
- en: '`_root_`: This defines which controller and action should be called when requesting
    the website root URL. Note that the value is `welcome/index`, you can now understand
    why `http://my.app` and `http://my.app/welcome/index` are returning the same content.'
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`_root_`：这定义了在请求网站根URL时应调用哪个控制器和动作。请注意，值是`welcome/index`，你现在可以理解为什么`http://my.app`和`http://my.app/welcome/index`返回相同的内容。'
- en: '`_404_`: This defines which controller and action should be called when throwing
    a 404 error.'
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`_404_`：这定义了在抛出404错误时应调用哪个控制器和动作。'
- en: 'Beside specials keys, you can define the custom URLs you want to handle. Let''s
    add a simple example at the end of the array:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 除了特殊键之外，你可以定义你想要处理的自定义URL。让我们在数组的末尾添加一个简单的示例：
- en: '[PRE15]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Now, if you request the following URL:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果你请求以下URL：
- en: '`http://my.app/my/welcome/page`'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://my.app/my/welcome/page`'
- en: 'it will display the same content as in the following URL:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 它将显示与以下URL相同的内容：
- en: '`http://my.app/welcome/index`'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://my.app/welcome/index`'
- en: 'You have probably noticed that there is also another key already defined: `hello(/:name)?`.
    The routing system is quite advanced, and to fully understand it you are recommended
    to take a look at the official documentation:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经注意到还有一个已经定义好的键：`hello(/:name)?`。路由系统相当先进，要完全理解它，建议查看官方文档：
- en: '[http://fuelphp.com/docs/general/routing.html](http://fuelphp.com/docs/general/routing.html)
    (It can be accessed through the FuelPHP website by navigating to **DOCS** | **TABLE
    OF CONTENTS** | **FuelPHP** | **Routing**)'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://fuelphp.com/docs/general/routing.html](http://fuelphp.com/docs/general/routing.html)（可以通过通过FuelPHP网站导航到**DOCS**
    | **目录** | **FuelPHP** | **路由**来访问）'
- en: Presenters
  id: totrans-235
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 演示者
- en: 'You might have seen that the `hello` action doesn''t use the `View` class to
    display its content, but instead it uses the `Presenter` class:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经注意到，`hello`动作没有使用`View`类来显示其内容，而是使用了`Presenter`类：
- en: '[PRE16]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Let''s analyze what is happening in this case. First, you can notice that,
    as for the views, a view file exists at the following path: `fuel/app/views/welcome/hello.php`.
    If you open this file, you will see that the code is the same as the one displayed
    when requesting the URL `http://my.app/welcome/hello`, except for one tiny difference.
    You can find the following code:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分析一下这种情况中发生了什么。首先，你可以注意到，对于视图来说，存在一个视图文件，其路径为`fuel/app/views/welcome/hello.php`。如果你打开这个文件，你会看到代码与请求URL
    `http://my.app/welcome/hello`时显示的代码相同，除了一个微小的差异。你可以找到以下代码：
- en: '[PRE17]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: In a normal view, we would have to define the `name` parameter, except here
    we didn't. Though, when displaying the web page, this parameter seems to have
    a defined value (it displays **Hello, World!**). Where could it be defined then?
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个普通视图中，我们通常需要定义`name`参数，但在这里我们没有定义。尽管如此，当显示网页时，这个参数似乎有一个已定义的值（它显示**Hello,
    World!**）。那么它在哪里定义的呢？
- en: 'Probing a little further, you can find another file located at `fuel/app/classes/presenter/welcome/hello.php`.
    It contains the following:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 再深入一点，你可以在`fuel/app/classes/presenter/welcome/hello.php`位置找到另一个文件。它包含以下内容：
- en: '[PRE18]'
  id: totrans-242
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: This file contains a `Presenter` class. The `view` function is called before
    rendering the view and it is here that the `name` parameter is set. It tries to
    get the name from the request parameter, `name`, but if it is not defined, the
    default value is `World`.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 此文件包含一个`Presenter`类。在渲染视图之前会调用`view`函数，这就是设置`name`参数的地方。它试图从请求参数`name`中获取名称，但如果它未定义，则默认值为`World`。
- en: If you wonder how to change this parameter, refer to the routes. For instance,
    request the URL `http://my.app/hello/Jane`.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想知道如何更改此参数，请参考路由。例如，请求URL `http://my.app/hello/Jane`。
- en: One could then wonder the use of `Presenter` classes, since we could change
    the previous code into a more classic view and controller approach.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 那么有人可能会想知道`Presenter`类的作用，因为我们本可以将之前的代码改为更经典的视图和控制器方法。
- en: 'Let''s show its usefulness by an illustration. Suppose you have created an
    internal website managing the clients of your corporation. Each client is associated
    to a client category. In your creation, edition, and other forms, you thus display
    a selectable list of client categories. Each time you display the exact same selectable
    list, though you access it by using different controllers and actions. You can
    come up with three solutions:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过一个示例来展示它的实用性。假设你创建了一个内部网站，用于管理你公司的客户。每个客户都与一个客户类别相关联。因此，在你的创建、编辑和其他表单中，你显示一个客户类别选择列表。每次你显示完全相同的可选择的列表，尽管你通过不同的控制器和动作访问它。你可以想出三种解决方案：
- en: You can create a classic view for your selectable list, load the list of client
    categories inside each of your actions, and pass this list to each view until
    you reach the location where you want to display your list. The problem is that
    it would induce a lot of code repetition.
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以为你的选择列表创建一个经典视图，在每一个动作中加载客户类别列表，并将此列表传递给每个视图，直到你到达想要显示列表的位置。问题是这会导致大量代码重复。
- en: You can create a classic view and load the list of clients inside this view.
    This way, you wouldn't have to pass along the necessary parameter. The problem
    is that you would break the MVC pattern by mixing models and views.
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以在视图中创建一个经典视图，并在其中加载客户列表。这样，你就不需要传递必要的参数。问题是这会打破MVC模式，因为模型和视图被混合在一起。
- en: You can create a `Presenter` class, load the list inside the `Presenter` class,
    use it inside the view file, and display the view file using `Presenter::forge`.
    This solution is the best because it doesn't mix views and models but still limits
    the code duplication.
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以创建一个`Presenter`类，在`Presenter`类中加载列表，在视图文件中使用它，并使用`Presenter::forge`显示视图文件。这种解决方案是最好的，因为它不混合视图和模型，但仍然限制了代码重复。
- en: What is HMVC?
  id: totrans-250
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 什么是HMVC？
- en: 'FuelPHP is a **Hierarchical Model-View-Controller** (**HMVC**) framework, meaning
    that it allows you to request internal controllers from your application. In concrete
    terms, the following code:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: FuelPHP是一个**分层模型-视图-控制器**（**HMVC**）框架，这意味着它允许你从你的应用程序中请求内部控制器。具体来说，以下代码：
- en: '[PRE19]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'will print exactly what the following URL would return:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 将打印出以下URL返回的确切内容：
- en: '`http://my.app/welcome/index`'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://my.app/welcome/index`'
- en: Though we suggest you to use this feature in moderation, it can come handy when
    you want to implement and display widgets on several web pages.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们建议你适度使用这个功能，但在你需要实现和显示多个网页上的小部件时，它可能很有用。
- en: 'You are recommended to read the following resources if you want to learn more
    about this pattern:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想要了解更多关于这个模式的信息，建议你阅读以下资源：
- en: '[http://en.wikipedia.org/wiki/Hierarchical_model-view-controller](http://en.wikipedia.org/wiki/Hierarchical_model-view-controller)'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://en.wikipedia.org/wiki/Hierarchical_model-view-controller](http://en.wikipedia.org/wiki/Hierarchical_model-view-controller)'
- en: '[http://stackoverflow.com/questions/2263416/what-is-the-hmvc-pattern](http://stackoverflow.com/questions/2263416/what-is-the-hmvc-pattern)'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://stackoverflow.com/questions/2263416/what-is-the-hmvc-pattern](http://stackoverflow.com/questions/2263416/what-is-the-hmvc-pattern)'
- en: The oil utility and the oil console
  id: totrans-259
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: oil 工具和 oil 控制台
- en: 'The `oil` utility is a very handy command-line tool. As the `rails` utility
    of Ruby on Rails, oil allows you to do the following:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: '`oil` 工具是一个非常实用的命令行工具。作为 Ruby on Rails 的 `rails` 工具，oil 允许你做以下事情：'
- en: 'Easily generate code files: models, controllers, migrations, and entire scaffoldings'
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 轻松生成代码文件：模型、控制器、迁移和整个脚手架
- en: Run tasks and migrations
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行任务和迁移
- en: Easily install, update, or remove packages
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 轻松安装、更新或删除包
- en: Test your code using PHPUnit test or a real-time console
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 PHPUnit 测试或实时控制台测试你的代码
- en: Even run a PHP-built-in web server hosting your FuelPHP application (for PHP
    >= 5.4)
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 甚至运行一个 PHP 内置的 web 服务器来托管你的 FuelPHP 应用程序（对于 PHP >= 5.4）
- en: 'Though we will use all these features, except the last one in this book, we
    recommend that you take a look at the official documentation at:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们将在本书中使用所有这些功能（除了最后一个），但我们建议你查看以下官方文档：
- en: '[http://fuelphp.com/docs/packages/oil/intro.html](http://fuelphp.com/docs/packages/oil/intro.html)
    (It can be accessed through the FuelPHP website by navigating to **DOCS** | **TABLE
    OF CONTENTS** | **Oil** | **Introduction**)'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://fuelphp.com/docs/packages/oil/intro.html](http://fuelphp.com/docs/packages/oil/intro.html)（可以通过导航到
    FuelPHP 网站的 **DOCS** | **目录** | **Oil** | **简介** 来访问）'
- en: In this section, we are going to use the oil console, which is an important
    tool if you want to test your website, or, as in this case, a FuelPHP feature.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将使用 oil 控制台，这是如果你想测试你的网站，或者在这个例子中测试 FuelPHP 功能时，一个重要的工具。
- en: 'First, open your command-line utility and go to the root of your website directory.
    Then, enter the following line:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，打开你的命令行工具，转到你的网站目录的根目录。然后，输入以下行：
- en: '[PRE20]'
  id: totrans-270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Tip
  id: totrans-271
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: If you use a web development platform such as WAMP or MAMP, you are recommended
    to use the PHP executable inside the platform directory for launching the oil
    utility (it might not work otherwise). As I wrote this book, this executable is
    located at `WAMP_DIRECTORY\bin\php\phpVERSION\php.exe` for WAMP, and at `MAMP_DIRECTORY/bin/php/phpVERSION/bin/php`
    for MAMP (VERSION depends on the version of PHP you installed, the best is to
    check this directory by yourself using a file explorer).
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用像 WAMP 或 MAMP 这样的网络开发平台，建议你使用平台目录内的 PHP 可执行文件来启动 oil 工具（否则可能不起作用）。在我写这本书的时候，这个可执行文件位于
    WAMP 的 `WAMP_DIRECTORY\bin\php\phpVERSION\php.exe`，MAMP 的 `MAMP_DIRECTORY/bin/php/phpVERSION/bin/php`（VERSION
    取决于你安装的 PHP 版本，最好是使用文件浏览器自行检查这个目录）。
- en: 'This will open the command-line interface oil provides. When you press *Enter*,
    something similar to the following should appear:'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 这将打开 oil 提供的命令行界面。当你按下 *Enter* 时，应该会看到类似以下的内容：
- en: '[PRE21]'
  id: totrans-274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'You can now type any PHP code and it will be executed. Let''s start with something
    simple:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在可以输入任何 PHP 代码，它将被执行。让我们从一些简单的东西开始：
- en: '[PRE22]'
  id: totrans-276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'If you press *Enter*, nothing will be printed, but the `$a` variable will be
    set to `2`. Now, if you want to check a variable value, simply enter its name
    and then press *Enter*:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你按下 *Enter*，将不会打印任何内容，但 `$a` 变量将被设置为 `2`。现在，如果你想检查一个变量的值，只需输入其名称，然后按下 *Enter*：
- en: '[PRE23]'
  id: totrans-278
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'It also works for more complex variables:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 它也适用于更复杂的变量：
- en: '[PRE24]'
  id: totrans-280
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: But be aware, that you might have trouble displaying complex objects.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 但请注意，你可能会有困难显示复杂对象。
- en: Let's now test a FuelPHP feature. Earlier, when discussing the `app` directory
    structure, we explained that the configuration files in the `fuel/app/config`
    directory were merged with the ones with the same filenames in the `fuel/app/config/ENV`
    directory, `ENV` being FuelPHP's current environment. We will now test this behavior.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来测试一个 FuelPHP 功能。早些时候，在讨论 `app` 目录结构时，我们解释了 `fuel/app/config` 目录中的配置文件与
    `fuel/app/config/ENV` 目录中具有相同文件名的文件合并，`ENV` 是 FuelPHP 的当前环境。我们现在将测试这种行为。
- en: 'First, let''s check FuelPHP''s current environment:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们检查 FuelPHP 的当前环境：
- en: '[PRE25]'
  id: totrans-284
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: The environment should be set to `development`.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 环境应设置为 `development`。
- en: 'Now, create a PHP file located at `fuel/app/config/test.php` where you will
    write:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，创建一个位于 `fuel/app/config/test.php` 的 PHP 文件，你将在其中编写以下内容：
- en: '[PRE26]'
  id: totrans-287
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Then create another PHP file located at `fuel/app/config/development/test.php`
    and write the following:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 然后在 `fuel/app/config/development/test.php` 创建另一个 PHP 文件，并编写以下内容：
- en: '[PRE27]'
  id: totrans-289
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'and an additional one located at `fuel/app/config/production/test.php,` where
    you will write the following:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 并在 `fuel/app/config/production/test.php` 添加一个额外的文件，你将在其中编写以下内容：
- en: '[PRE28]'
  id: totrans-291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Now, if you return to the command-line interface, you can load the `test` configuration
    file by writing the following:'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果你回到命令行界面，你可以通过编写以下内容来加载 `test` 配置文件：
- en: '[PRE29]'
  id: totrans-293
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'You are recommended to read the `Config::load` official documentation for more
    information at:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 建议你阅读 `Config::load` 的官方文档以获取更多信息：
- en: '[http://fuelphp.com/docs/classes/config.html#/method_load](http://fuelphp.com/docs/classes/config.html#/method_load).
    (It can be accessed through the FuelPHP website by navigating to **DOCS** | **TABLE
    OF CONTENTS** | **Core** | **Config**)'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://fuelphp.com/docs/classes/config.html#/method_load](http://fuelphp.com/docs/classes/config.html#/method_load)。（可以通过导航到
    FuelPHP 网站的 **DOCS** | **TABLE OF CONTENTS** | **Core** | **Config** 来访问）'
- en: 'As explained before, the value returned will be a mix of the `fuel/app/config/test.php`
    and the `fuel/app/config/development/test.php` configuration files:'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，返回的值将是 `fuel/app/config/test.php` 和 `fuel/app/config/development/test.php`
    配置文件的混合：
- en: '[PRE30]'
  id: totrans-297
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'If we change the FuelPHP environment to `production`:'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们将 FuelPHP 环境更改为 `production`：
- en: '[PRE31]'
  id: totrans-299
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'And load again the `test` configuration file:'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 再次加载 `test` 配置文件：
- en: '[PRE32]'
  id: totrans-301
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: The merging will be done with the configuration file in the `production` folder.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 合并将会使用 `production` 文件夹中的配置文件。
- en: Note
  id: totrans-303
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You have probably noticed that we added a third parameter for `Config::load`.
    This parameter allows you to clear the configuration cache. If we didn't set it
    to `true`, the method would have returned the old configuration we loaded when
    we were in the `development` environment.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经注意到，我们为 `Config::load` 添加了第三个参数。此参数允许你清除配置缓存。如果我们没有将其设置为 `true`，该方法将返回我们在
    `development` 环境中加载的旧配置。
- en: But what happens when the `fuel/app/config/production/test.php` and `fuel/app/config/test.php`
    configuration files contain the same key? The console can find the answer for
    us.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，当 `fuel/app/config/production/test.php` 和 `fuel/app/config/test.php` 配置文件包含相同的键时会发生什么？控制台可以为我们找到答案。
- en: 'Change the content of the `fuel/app/config/test.php` configuration file to
    the following:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `fuel/app/config/test.php` 配置文件的内容更改为以下内容：
- en: '[PRE33]'
  id: totrans-307
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'and change the content of the `fuel/app/config/production/test.php` configuration
    file to the following:'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 并将 `fuel/app/config/production/test.php` 配置文件的内容更改为以下内容：
- en: '[PRE34]'
  id: totrans-309
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Let''s now reload the `test` configuration files as follows:'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们现在按照以下方式重新加载 `test` 配置文件：
- en: '[PRE35]'
  id: totrans-311
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'It is interesting to analyze how the preceding two configuration files have
    been merged:'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 分析前面两个配置文件是如何合并的很有趣：
- en: The `this_is_the_root_config_file` key shared by the two configuration files
    is associated in both cases to a simple value. In the resulting configuration,
    it is the value from the production file that prevails.
  id: totrans-313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两个配置文件共有的 `this_is_the_root_config_file` 键在两种情况下都与一个简单值相关联。在最终配置中，它是由生产文件中的值决定的。
- en: The `complex_value` key is associated in both cases to an array. The two arrays
    seem to have been merged in the resulting configuration.
  id: totrans-314
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在这两种情况下，`complex_value` 键都与一个数组相关联。这两个数组似乎在最终配置中被合并了。
- en: This is because the configuration files are not merged by the `array_merge`
    native PHP function, but instead by the `Arr::merge` FuelPHP function, which merges
    arrays recursively. You are recommended to take a look at its official documentation
    at [http://fuelphp.com/docs/classes/arr.html#/method_merge](http://fuelphp.com/docs/classes/arr.html#/method_merge)
    (It can be accessed through the FuelPHP website by navigating to **DOCS** | **TABLE
    OF CONTENTS** | **Core** | **Arr**)
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为配置文件不是通过 `array_merge` 原生 PHP 函数合并的，而是通过 `Arr::merge` FuelPHP 函数递归合并数组。建议你查看其官方文档，网址为
    [http://fuelphp.com/docs/classes/arr.html#/method_merge](http://fuelphp.com/docs/classes/arr.html#/method_merge)（可以通过导航到
    FuelPHP 网站的 **DOCS** | **TABLE OF CONTENTS** | **Core** | **Arr** 来访问）
- en: It should be clear now that the console is a great tool that allows you to test
    your application. It can also be used as a great complement to the documentation,
    as you can try FuelPHP methods and their parameters without changing any files
    in your application.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 现在应该很清楚，控制台是一个伟大的工具，它允许您测试您的应用程序。它也可以用作文档的绝佳补充，因为您可以在不更改应用程序中的任何文件的情况下尝试FuelPHP方法和它们的参数。
- en: Building your first application
  id: totrans-317
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建您的第一个应用程序
- en: Now that we had a quick overview of the FuelPHP framework, let's build our first
    tiny application.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们对FuelPHP框架有了快速的了解，让我们构建我们的第一个小型应用程序。
- en: 'Suppose that you are a zoo manager and you want to keep track of the monkeys
    you are looking after. For each monkey, you want to save the following:'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您是动物园管理员，您想跟踪您照顾的猴子。对于每只猴子，您想保存以下信息：
- en: Its name
  id: totrans-320
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它的名字
- en: If it is still in the zoo
  id: totrans-321
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果它还在动物园里
- en: Its height
  id: totrans-322
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它的高度
- en: A description input where you can enter custom information
  id: totrans-323
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个描述输入，您可以输入自定义信息
- en: 'You want a very simple interface with the following five major features:'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 您想要一个非常简单的界面，具有以下五个主要功能：
- en: You want to create a new monkey
  id: totrans-325
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您想创建一个新的猴子
- en: You want to edit existing ones
  id: totrans-326
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您想编辑现有的文件
- en: You want to list all monkeys
  id: totrans-327
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您想列出所有猴子
- en: You want to view a detailed file for each monkey
  id: totrans-328
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您想查看每个猴子的详细文件
- en: You want to delete monkeys from the system
  id: totrans-329
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您想从系统中删除猴子
- en: The preceding five major features, very common in computer applications, are
    part of the **Create, Read, Update and Delete** (**CRUD**) basic operations. This
    is a perfect example to use the oil utility to generate a scaffold. Oil will quickly
    generate for us the controllers, models, views, and migrations to handle our monkeys.
    All we will have to do, then, is to refine the generated code and adapt it to
    our needs.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的五个主要功能，在计算机应用程序中非常常见，是 **创建、读取、更新和删除** （**CRUD**） 基本操作的一部分。这是一个使用oil工具生成脚手架的完美示例。Oil将快速为我们生成控制器、模型、视图和迁移来处理我们的猴子。然后，我们只需要对生成的代码进行精炼，并适应我们的需求。
- en: Database configuration
  id: totrans-331
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据库配置
- en: As we will store our monkeys into a MySQL database, it is time to configure
    FuelPHP to use our local database. If you open `fuel/app/config/db.php`, all you
    will see is an empty array, but, as we demonstrated it in the *FuelPHP basics*
    section, this configuration file is merged to `fuel/app/config/ENV/db.php`, `ENV`
    being the current FuelPHP's environment, which in that case is `development`.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们将我们的猴子存储到MySQL数据库中，现在是时候配置FuelPHP以使用我们的本地数据库了。如果您打开 `fuel/app/config/db.php`，您将看到的是一个空数组，但正如我们在
    *FuelPHP基础知识* 部分所展示的，此配置文件会合并到 `fuel/app/config/ENV/db.php`，其中 `ENV` 是当前FuelPHP的环境，在这种情况下是
    `development`。
- en: 'You should, therefore, open `fuel/app/config/development/db.php`:'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，您应该打开 `fuel/app/config/development/db.php`：
- en: '[PRE36]'
  id: totrans-334
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: This is the generated default configuration, which you should adapt to your
    local configuration, particularly the database name (currently set to `fuel_dev`),
    the username, and password. You must create the database of your project manually.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 这是生成的默认配置，您应该将其适应到您本地的配置中，特别是数据库名称（目前设置为 `fuel_dev`）、用户名和密码。您必须手动创建您项目的数据库。
- en: Scaffolding
  id: totrans-336
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 脚手架
- en: Now that the database configuration is set, we will be able to generate a scaffold.
    We will use the `generate` feature of the oil utility.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 现在数据库配置已设置，我们将能够生成脚手架。我们将使用oil工具的 `generate` 功能。
- en: 'Open the command-line utility and go to your website root directory. To generate
    a scaffold for a new model, you will need to enter the following line:'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 打开命令行工具并转到您的网站根目录。要为新的模型生成脚手架，您需要输入以下行：
- en: '[PRE37]'
  id: totrans-339
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'where:'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 其中：
- en: '`MODEL` is the model name'
  id: totrans-341
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MODEL` 是模型名称'
- en: '`ATTR_1`, `ATTR_2`… are the model''s attribute names'
  id: totrans-342
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ATTR_1`, `ATTR_2`… 是模型的属性名称'
- en: '`TYPE_1`, `TYPE_2`… are attribute types'
  id: totrans-343
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TYPE_1`, `TYPE_2`… 是属性类型'
- en: 'In our case, it should be as follows:'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的情况下，它应该是这样的：
- en: '[PRE38]'
  id: totrans-345
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Here we are telling oil to generate a scaffold for the `monkey` model with
    the following attributes:'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们告诉oil为具有以下属性的 `monkey` 模型生成脚手架：
- en: '`name`: The name of the monkey. Its type is string and the associated MySQL
    column type will be VARCHAR(255).'
  id: totrans-347
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name`: 猴子的名字。其类型是字符串，相关的MySQL列类型将是 VARCHAR(255)。'
- en: '`still_here`: Whether or not the monkey is still in the facility. Its type
    is boolean and the associated MySQL column type will be TINYINT(1).'
  id: totrans-348
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`still_here`: 猴子是否仍然在设施中。其类型是布尔型，相关的MySQL列类型将是 TINYINT(1)。'
- en: '`height`: Height of the monkey. Its type is float and the associated MySQL
    column type will be FLOAT.'
  id: totrans-349
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`height`: 猴子的高度。其类型是浮点数，相关的MySQL列类型将是 FLOAT。'
- en: '`description`: Description of the monkey. Its type is text and the associated
    MySQL column type will be TEXT.'
  id: totrans-350
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`description`：猴子的描述。其类型为文本，相关的 MySQL 列类型将是 TEXT。'
- en: You can do much more using the oil generate feature, such as generating models,
    controllers, migrations, tasks, packages, and so on. We will see some of these
    later in the book, but you are recommended to take a look at the official documentation
    at [http://fuelphp.com/docs/packages/oil/generate.html](http://fuelphp.com/docs/packages/oil/generate.html)
    (It can be accessed through the FuelPHP website by navigating to **DOCS** | **TABLE
    OF CONTENTS** | **Oil** | **Generate**)
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用 oil generate 功能做更多的事情，例如生成模型、控制器、迁移、任务、包等。我们将在本书的后面部分看到一些这些内容，但建议你查看官方文档[http://fuelphp.com/docs/packages/oil/generate.html](http://fuelphp.com/docs/packages/oil/generate.html)（可以通过通过导航到
    FuelPHP 网站的 **DOCS** | **目录** | **Oil** | **生成** 来访问）（它可以通过 FuelPHP 网站访问）
- en: 'When you press *Enter*, you will see the following lines appear:'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 当你按下 *Enter* 键时，你会看到以下行出现：
- en: '[PRE39]'
  id: totrans-353
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Oil has generated for us nine files, which are as follows:'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: Oil为我们生成了九个文件，具体如下：
- en: A migration file, containing all the necessary information to create the model's
    associated table
  id: totrans-355
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包含创建模型相关表所需所有信息的迁移文件
- en: The model
  id: totrans-356
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模型
- en: A controller
  id: totrans-357
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个控制器
- en: Five view files and a template file
  id: totrans-358
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 五个视图文件和一个模板文件
- en: We will take a closer look at these files in the next sections.
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在下一节中更详细地查看这些文件。
- en: Note
  id: totrans-360
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 备注
- en: 'You might have noticed that we used the `scaffold/crud` command, and, if you
    read the official documentation, we could have typed only `scaffold`. This is
    because two types of scaffold can be generated: `scaffold/crud`, which uses simple
    models, and `scaffold/orm` alias `scaffold,` which uses the `orm` models. Since
    using FuelPHP''s native ORM was out of the scope of this chapter, and we didn''t
    have to use complex model features such as relations, we chose to use `scaffold/crud`.'
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经注意到我们使用了 `scaffold/crud` 命令，如果你阅读了官方文档，我们只需输入 `scaffold`。这是因为可以生成两种类型的脚手架：`scaffold/crud`，它使用简单的模型，以及
    `scaffold/orm` 别名 `scaffold`，它使用 `orm` 模型。由于使用 FuelPHP 的原生 ORM 不在本章的范围内，而且我们不需要使用复杂模型功能，如关系，所以我们选择了使用
    `scaffold/crud`。
- en: Migrating
  id: totrans-362
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 迁移
- en: One of the generated files was `APPPATH/migrations/001_create_monkeys.php`.
    It is a migration file and contains the required information to create our monkey
    table. Notice that the name is structured as `VER_NAME,` where `VER` is the version
    number and `NAME` is the name of the migration.
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 生成的文件之一是 `APPPATH/migrations/001_create_monkeys.php`。这是一个迁移文件，包含创建我们猴子表所需的所有信息。请注意，文件名结构为
    `VER_NAME,` 其中 `VER` 是版本号，`NAME` 是迁移的名称。
- en: 'If you execute the following command line:'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你执行以下命令行：
- en: '[PRE40]'
  id: totrans-365
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: All migration files that have not yet been executed will be executed from the
    oldest version to the latest version (001, 002, 003, and so on). Once all migration
    files are executed, oil will display the latest version number.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 所有尚未执行的迁移文件将从最老版本到最新版本（001、002、003 等）执行。一旦所有迁移文件都执行完毕，oil 将显示最新版本号。
- en: 'Once executed, if you take a look at your database, you will observe that not
    one but two tables have been created:'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 执行后，如果你查看你的数据库，你会观察到创建了不止一个表：
- en: '`monkeys`: As expected, a table has been created to handle your monkeys. Notice
    that the table name is the plural version of the word we typed for generating
    the scaffold; such a transformation was internally done using the `Inflector::pluralize`
    method. The table will contain the specified columns (`name`, `still_here`), the
    `id` column, and also `created_at` and `updated_at`. These columns store the time
    an object was created and updated, and are added by default each time you generate
    your models. It is possible to not generate them with the `--no-timestamp` argument.'
  id: totrans-368
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`monkeys`：正如预期的那样，已经创建了一个表来处理你的猴子。请注意，表名是我们用于生成脚手的单词的复数形式；这种转换是通过使用 `Inflector::pluralize`
    方法内部完成的。该表将包含指定的列（`name`、`still_here`），`id` 列，以及 `created_at` 和 `updated_at`。这些列存储对象创建和更新的时间，并且在每次生成模型时默认添加。可以通过使用
    `--no-timestamp` 参数来不生成它们。'
- en: '`migration`: This table is automatically created the first time you execute
    migrations. It keeps track of the migrations that were executed. If you look into
    its content, you will see that it already contains one row; this is the migration
    you just executed. You can notice that the row does not only indicate the name
    of the migration, but also a type and a name. This is because migration files
    can be placed at many places such as modules or packages (see [Chapter 3](ch03.html
    "Chapter 3. Building a Blog Application"), *Building a Blog Application*).'
  id: totrans-369
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`迁移`：这个表是在你第一次执行迁移时自动创建的。它跟踪已执行的迁移。如果你查看其内容，你会看到它已经包含了一行；这就是你刚刚执行的迁移。你可以注意到，这一行不仅指明了迁移的名称，还指明了一个类型和一个名称。这是因为迁移文件可以放置在许多地方，如模块或包（参见[第3章](ch03.html
    "第3章。构建博客应用程序")，*构建博客应用程序*）。'
- en: Note
  id: totrans-370
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: It is important to note that the `migration` table is not the only location
    where FuelPHP keeps track of the already executed migrations. This information
    is also stored in `fuel/app/config/ENV/migrations.php`, `ENV` being FuelPHP's
    environment. If you decide to edit the `migration` table, you might want to also
    edit or delete this file, as it might prevent the execution of your migrations.
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，`迁移`表并不是FuelPHP跟踪已执行迁移的唯一位置。这些信息也存储在`fuel/app/config/ENV/migrations.php`中，其中`ENV`是FuelPHP的环境。如果你决定编辑`迁移`表，你可能还想编辑或删除此文件，因为它可能会阻止你的迁移执行。
- en: 'The `refine migrate` feature of oil allows you to have much more control on
    migrations than simply executing all the new ones. For instance, you can also
    revert to a previous version using the following command line:'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: oil的`refine migrate`功能让你对迁移有更多的控制，而不仅仅是执行所有新的迁移。例如，你可以使用以下命令行回退到之前的版本：
- en: '[PRE41]'
  id: totrans-373
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Or revert to a specified version using the following command line:'
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 或者使用以下命令行回退到指定版本：
- en: '[PRE42]'
  id: totrans-375
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Or even choose which modules or packages you want to update using the `--modules`
    or `--package` arguments. To have a complete overview, you are recommended to
    take a look at the official documentation at [http://fuelphp.com/docs/general/migrations.html](http://fuelphp.com/docs/general/migrations.html)
    (It can be accessed through the FuelPHP website by navigating to **DOCS** | **TABLE
    OF CONTENTS** | **FuelPHP** | **Migrations**)
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 或者甚至可以使用`--modules`或`--package`参数来选择你想要更新的模块或包。为了有一个完整的概述，建议你查看官方文档[http://fuelphp.com/docs/general/migrations.html](http://fuelphp.com/docs/general/migrations.html)（可以通过导航到FuelPHP网站上的**DOCS**
    | **目录** | **FuelPHP** | **迁移**来访问）。
- en: 'But how do migration files allow such complex manipulations? Let''s open our
    migration file located at `APPPATH/migrations/001_create_monkeys.php` to find
    out. You should see the following:'
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 但迁移文件是如何允许这样的复杂操作的？让我们打开位于`APPPATH/migrations/001_create_monkeys.php`的迁移文件来了解。你应该会看到以下内容：
- en: '[PRE43]'
  id: totrans-378
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'The file contains a class named `Create_monkeys` that has the following two
    methods:'
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 文件包含一个名为`Create_monkeys`的类，它有以下两个方法：
- en: '`up`: This method defines how to update your data structure. Note that this
    migration file creates the monkey table using the `DBUtil::create_table` method,
    but you could perfectly execute a handmade SQL request to do that. Though migrations
    are generally used to update your database, you can also use them to update custom
    data files or old configuration files.'
  id: totrans-380
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`up`：此方法定义了如何更新你的数据结构。请注意，此迁移文件使用`DBUtil::create_table`方法创建猴子表，但你完全可以执行一个手动的SQL请求来完成这个任务。尽管迁移通常用于更新你的数据库，但你也可以使用它们来更新自定义数据文件或旧配置文件。'
- en: Tip
  id: totrans-381
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: In some cases, if you want to implement your own migrations, you might find
    the idea of using your application's methods (in models or helpers) attractive.
    Though it can allow you to limit your code duplication, it is not recommended.
    This is because, for compatibility reasons, the migration files are intended to
    stay in your application indefinitely, whereas your application's code can evolve
    a lot. Therefore, by changing or deleting a method in your application, you might
    unexpectedly break some migration files (that use this method) without even noticing
    it, making the future installation of your application complicated.
  id: totrans-382
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在某些情况下，如果你想实现自己的迁移，你可能会觉得使用应用程序的方法（在模型或助手中）的想法很有吸引力。尽管它可以让你限制代码重复，但并不推荐这样做。这是因为出于兼容性的原因，迁移文件打算无限期地留在你的应用程序中，而你的应用程序代码可能会发生很大的变化。因此，通过更改或删除应用程序中的方法，你可能会意外地破坏一些迁移文件（使用此方法），而你甚至可能没有注意到，这使得未来安装你的应用程序变得复杂。
- en: '`down`: This method defines how to cancel all changes that were made by the
    `up` method. Suppose you realize that the feature was a mistake and you want to
    revert to an older version: this is when this method will be executed. In our
    case, the method simply deletes the monkey table.'
  id: totrans-383
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`down`：此方法定义了如何取消由`up`方法所做的所有更改。假设你意识到这个功能是一个错误，并且你想恢复到旧版本：这就是这个方法将被执行的时候。在我们的例子中，这个方法简单地删除了猴子表。'
- en: Tip
  id: totrans-384
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: If the information contained in the table is important, it might be a good idea
    to instead move the table, for instance, to an archive database. A human mistake
    could have disastrous consequences otherwise.
  id: totrans-385
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果表中的信息很重要，那么将表格移动到归档数据库中可能是个好主意。否则，人为错误可能会产生灾难性的后果。
- en: The migration files are a powerful tool and their usefulness increase tenfold
    as the number of instances and the number of developers working on the same project
    rise. Using them from scratch is always a good decision.
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 迁移文件是一个强大的工具，随着实例数量和在同一项目上工作的开发者数量的增加，其有用性会增长十倍。从头开始使用它们始终是一个好决定。
- en: Using your application
  id: totrans-387
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用您的应用程序
- en: Now that we have generated the code and migrated the database, our application
    is ready to be used. You might have noticed during the generation that a controller
    was created at `APPPATH/classes/controller/monkey.php` and that the route configuration
    file was not changed, meaning that the controller must be accessible through the
    default URL.
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经生成了代码并迁移了数据库，我们的应用程序准备就绪，可以使用了。你可能已经注意到在生成过程中，在`APPPATH/classes/controller/monkey.php`创建了一个控制器，并且路由配置文件没有更改，这意味着控制器必须可以通过默认URL访问。
- en: Let's request, then, the URL `http://my.app/monkey`.
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，让我们请求 URL `http://my.app/monkey`。
- en: 'As you can notice, this web page is intended to display the list of all monkeys,
    but since none have been added, the list is empty:'
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所注意到的，这个网页旨在显示所有猴子的列表，但由于还没有添加任何猴子，列表是空的：
- en: '![Using your application](img/5401OS_01_04.jpg)'
  id: totrans-391
  prefs: []
  type: TYPE_IMG
  zh: '![使用您的应用程序](img/5401OS_01_04.jpg)'
- en: 'Then, let''s add a new monkey by clicking on the **Add new Monkey** button.
    The following web page should appear:'
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，通过点击**添加新猴子**按钮来添加一个新的猴子。以下网页应该会出现：
- en: '![Using your application](img/5401OS_01_05.jpg)'
  id: totrans-393
  prefs: []
  type: TYPE_IMG
  zh: '![使用您的应用程序](img/5401OS_01_05.jpg)'
- en: 'You can enter your monkey''s information here. There are, however, several
    inconsistencies:'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在这里输入你的猴子信息。然而，有几个不一致的地方：
- en: All fields are required, meaning that you can't leave any field empty, otherwise
    errors will be triggered preventing you from adding the monkey. This is not what
    we might want for the description field.
  id: totrans-395
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有字段都是必填的，这意味着你不能留下任何字段为空，否则会触发错误，阻止你添加猴子。这并不是我们可能想要的描述字段的情况。
- en: Though you can enter anything you want in the **Height** field without triggering
    any error, if you enter anything other than a float, it will be replaced by 0\.
    We might want to trigger an error in such a case.
  id: totrans-396
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽管你可以在**高度**字段中输入任何你想要的内容而不会触发任何错误，但如果输入的不是浮点数，它将被替换为0。在这种情况下，我们可能希望触发一个错误。
- en: '**Still here** can only have two values: 0 or 1 (false or true). Though the
    type of the associated database column is correct, the generated form uses a standard
    input where we might want a checkbox.'
  id: totrans-397
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**仍在**只能有两个值：0或1（假或真）。尽管相关数据库列的类型是正确的，但生成的表单使用了一个标准输入，我们可能希望有一个复选框。'
- en: The form is certainly not perfect, but it is a great start. All we will have
    to do is refine the code a little bit.
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 表单当然不是完美的，但这是一个很好的开始。我们只需要稍微改进一下代码。
- en: 'Once you have added several monkeys, you can again take a look at the listing
    page as follows:'
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦添加了几个猴子，你还可以再次查看如下所示的列表页面：
- en: '![Using your application](img/5401OS_01_06.jpg)'
  id: totrans-400
  prefs: []
  type: TYPE_IMG
  zh: '![使用您的应用程序](img/5401OS_01_06.jpg)'
- en: 'Again, this is a great start, though we might want to refine it a little bit:
    display **Yes** and **No** instead of **1** and **0**, respectively, for the **Still
    here** column, and remove the **Description** column because there might be too
    much text to display.'
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 再次强调，这是一个很好的开始，尽管我们可能还想稍微改进一下：对于**仍在**列，分别显示**是**和**否**而不是**1**和**0**，并删除**描述**列，因为可能显示的文本太多。
- en: 'Each item on the list has three associated actions: **View**, **Edit**, and
    **Delete**.'
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 列表中的每个条目都有三个相关操作：**查看**、**编辑**和**删除**。
- en: 'Let''s first click on **View**:'
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先点击**查看**：
- en: '![Using your application](img/5401OS_01_10.jpg)'
  id: totrans-404
  prefs: []
  type: TYPE_IMG
  zh: '![使用您的应用程序](img/5401OS_01_10.jpg)'
- en: Again this is a great start, though we will also refine this web page.
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 再次强调，这是一个很好的开始，尽管我们还将改进这个网页。
- en: You can return back to the listing by clicking on **Back** or edit the monkey
    by clicking on **Edit**. Accessed from either the listing page or the view page,
    it will display the same form as when creating a new monkey, except that the form
    will be prefilled of course.
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过点击**返回**回到列表，或者通过点击**编辑**来编辑猴子。无论是从列表页面还是查看页面访问，它将显示与创建新猴子时相同的表单，当然，表单将被预先填充。
- en: 'Finally, if you click on **Delete**, a confirmation box will appear to prevent
    any miss clicking:'
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，如果你点击**删除**，将弹出一个确认框以防止任何误点击：
- en: '![Using your application](img/5401OS_01_09.jpg)'
  id: totrans-408
  prefs: []
  type: TYPE_IMG
  zh: '![使用您的应用程序](img/5401OS_01_09.jpg)'
- en: Refining the application
  id: totrans-409
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 精炼应用程序
- en: Now that we took a look at our interface, let's refine our application so that
    it becomes more user-friendly. In this section, we will explore the files that
    have been generated by oil and try to adapt them to our needs.
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经查看了一下我们的界面，让我们改进我们的应用程序，使其更加用户友好。在本节中，我们将探索oil生成的文件，并尝试使它们适应我们的需求。
- en: Refining the monkey listing
  id: totrans-411
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 精炼猴子列表
- en: 'During the previous section, two small issues bothered us for the monkey''s
    listing:'
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一节中，两个小问题困扰了我们关于猴子的列表：
- en: We wanted more explicit values than 0 and 1 for the `Still here` column
  id: totrans-413
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们希望`Still here`列的值比0和1更明确
- en: We wanted to remove the `Description` column
  id: totrans-414
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们希望删除`描述`列
- en: 'We know that the list appears when requesting the following URL:'
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: 我们知道列表在请求以下URL时出现：
- en: '`http://my.app/monkey`'
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://my.app/monkey`'
- en: You have probably noticed that in this URL we indicated a controller, but no
    action. It is important to know that, by default and without any routing configuration
    involved, this URL is equivalent to `http://my.app/monkey/index`
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经注意到，在这个URL中我们指明了一个控制器，但没有动作。重要的是要知道，默认情况下，并且没有涉及任何路由配置，这个URL等同于`http://my.app/monkey/index`
- en: 'So, in fact, we are calling the `index` action of the `monkey` controller.
    If we open the generated controller at `APPPATH/classes/controller/monkey.php`,
    we will read the following:'
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，实际上我们正在调用`monkey`控制器的`index`动作。如果我们打开在`APPPATH/classes/controller/monkey.php`生成的控制器，我们将读到以下内容：
- en: '[PRE44]'
  id: totrans-419
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'First, you can notice that `Controller_Monkey` extends `Controller_Template`
    instead of `Controller,` as we saw before in `Controller_Welcome`. `Controller_Template`
    is an extension of `Controller` that adds template support. The idea is that most
    of the time your web pages will have the same layout: the headers, footers, and
    menus generally stay the same, regardless of the web pages you are in. Templates
    allow you to achieve this by limiting the code duplication.'
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你可以注意到`Controller_Monkey`扩展了`Controller_Template`而不是`Controller,`正如我们在`Controller_Welcome`中之前看到的。`Controller_Template`是`Controller`的扩展，它增加了模板支持。想法是，大多数时候你的网页将具有相同的布局：头部、底部和菜单通常保持不变，无论你在哪个网页。模板允许你通过限制代码重复来实现这一点。
- en: 'By default, `Controller_Template` is associated with the `APPPATH/views/template.php`
    template that was generated by oil. If you open this file, you will see that it
    generates the HTML code around the page content. You will also probably notice
    that it prints the `$title` and `$content` variables. We will find out how to
    set their values by exploring the `index` action. If you go back to the **Monkey**
    controller, the `action_index` method should contain the following:'
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，`Controller_Template`与由oil生成的`APPPATH/views/template.php`模板相关联。如果你打开这个文件，你会看到它生成围绕页面内容的HTML代码。你也会可能注意到它打印了`$title`和`$content`变量。我们将通过探索`index`动作来找出如何设置它们的值。如果你回到**Monkey**控制器，`action_index`方法应该包含以下内容：
- en: '[PRE45]'
  id: totrans-422
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: The first line stores all the monkeys' instances into the `$data['monkeys']`
    variable. In a general manner, `MODEL::find_all()` returns all a model's instances,
    but it is definitely not the only method that retrieve instances. These methods
    will be discussed more thoroughly in [Chapter 2](ch02.html "Chapter 2. Building
    a To-do List Application"), *Building a To-do List Application*.
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 第一行将所有猴子的实例存储到`$data['monkeys']`变量中。一般来说，`MODEL::find_all()`返回一个模型的所有实例，但这绝对不是检索实例的唯一方法。这些方法将在[第2章](ch02.html
    "第2章。构建待办事项列表应用程序")*构建待办事项列表应用程序*中更详细地讨论。
- en: The second and third lines set the `$title` and `$content` variables displayed
    in the template file. If you change the second line by `$this->template->title
    = "My monkeys";` and then refresh the web page, you will see that its title has
    changed accordingly.
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: 第二行和第三行设置了在模板文件中显示的`$title`和`$content`变量。如果你将第二行改为`$this->template->title =
    "My monkeys";`然后刷新网页，你会看到标题相应地改变。
- en: 'The third line sets the `$content` variable to a view instance that, from what
    we have observed in the previous sections, executes the view file located at `APPPATH/views/monkey/index.php`
    with the `$monkey` variable set to all monkeys'' instances. Let''s open this view
    file. You should see the following:'
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 第三行将`$content`变量设置为视图实例，从我们在前几节中观察到的，它执行位于`APPPATH/views/monkey/index.php`的视图文件，并将`$monkey`变量设置为所有猴子的实例。让我们打开这个视图文件。您应该看到以下内容：
- en: '[PRE46]'
  id: totrans-426
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: We have found where the table is displayed, so it is time to make our changes.
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经找到了表格显示的位置，因此现在是时候进行我们的更改了。
- en: 'First, remove the `Description` column by removing the following:'
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，通过删除以下内容来删除`描述**列`：
- en: '[PRE47]'
  id: totrans-429
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: and
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: 和
- en: '[PRE48]'
  id: totrans-431
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Then, let''s refine how the `Still here` attribute is displayed by replacing
    the following:'
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，让我们通过替换以下内容来细化如何显示`仍在**列`属性：
- en: '[PRE49]'
  id: totrans-433
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: by
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: 通过
- en: '[PRE50]'
  id: totrans-435
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: The **Still here** column should now display **Yes** and **No** instead of **1**
    and **0**, respectively.
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: '**仍在**列现在应显示**是**和**否**，分别代替**1**和**0**。'
- en: Refining the monkey detailed view
  id: totrans-437
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 精炼猴子详细视图
- en: 'On the list, when clicking on an item''s **View** link, a detailed view of
    the monkey appears. We would like to change two details here:'
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: 在列表中，当点击一个项目的**查看**链接时，会出现猴子的详细视图。我们希望在这里更改两个细节：
- en: As in the previous section, display more explicit values for the **Still here**
    attribute
  id: totrans-439
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如前所述，为**仍在**属性显示更明确的值
- en: Currently, if you save a monkey with a multiline description, it is displayed
    on one line only
  id: totrans-440
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目前，如果您保存一个多行描述的猴子，它只会在一行上显示
- en: First, if you are on a detailed view page, you can notice that the URL is similar
    to `http://my.app/monkey/view/1`
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，如果您在一个详细视图页面上，您会注意到URL类似于`http://my.app/monkey/view/1`
- en: 'This means we are calling the `view` action of the `monkey` controller with
    the first and only parameter set to `1`. The `view` action is quite similar to
    the `index` action, as you can see in the following snippet:'
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着我们正在调用`monkey`控制器的`view`动作，其中第一个和唯一的参数设置为`1`。`view`动作与`index`动作非常相似，如以下代码片段所示：
- en: '[PRE51]'
  id: totrans-443
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: The first line simply checks if the parameter of the action (associated to the
    `$id` variable) is actually set, and otherwise redirects the user (using the `Response::redirect`
    method) to the listing page.
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: 第一行简单地检查动作的参数（与`$id`变量相关联）是否实际设置，如果没有设置，则使用`Response::redirect`方法将用户重定向到列表页面。
- en: The second line stores the monkey with ID `$id` into the `$data['monkey']` variable.
    The `find_by_pk` (`pk` for primary key) method of a model finds one of its instances
    by its primary key. As we explained earlier, models' methods will be discussed
    more thoroughly in [Chapter 2](ch02.html "Chapter 2. Building a To-do List Application"),
    *Building a To-do List Application*.
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: 第二行将ID为`$id`的猴子存储到`$data['monkey']`变量中。模型的一个实例通过其主键找到其实例的`find_by_pk`（`pk`代表主键）方法。正如我们之前解释的，模型的方法将在[第2章](ch02.html
    "第2章。构建待办事项列表应用程序")中更详细地讨论，*构建待办事项列表应用程序*。
- en: Note
  id: totrans-446
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 备注
- en: Just to be perfectly clear, requesting the URL `http://my.app/monkey/view/ID`
    will load the monkey instance with `id = ID`.
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完全清楚，请求URL `http://my.app/monkey/view/ID`将加载`id = ID`的猴子实例。
- en: The third and fourth lines, as in the previous section, set the template variables.
    The template content is set to the view located at `APPPATH/views/monkey/view.php`.
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: 第三行和第四行，与前一节一样，设置了模板变量。模板内容设置为位于`APPPATH/views/monkey/view.php`的视图。
- en: '[PRE52]'
  id: totrans-449
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: It is time to do some changes.
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: 是时候做一些更改了。
- en: 'Replace:'
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: 替换：
- en: '[PRE53]'
  id: totrans-452
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'By:'
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: 通过：
- en: '[PRE54]'
  id: totrans-454
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'And replace:'
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: 并替换：
- en: '[PRE55]'
  id: totrans-456
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'By:'
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: 通过：
- en: '[PRE56]'
  id: totrans-458
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: Allowing an empty description
  id: totrans-459
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 允许空描述
- en: One of the issues we pointed out previously, is that the description field is
    required, though we want to be able to enter an empty value.
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: 我们之前指出的一个问题之一是，描述字段是必需的，尽管我们希望能够输入空值。
- en: 'First, open your browser and request the following URL:'
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，打开您的浏览器并请求以下URL：
- en: '`http://my.app/monkey`'
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://my.app/monkey`'
- en: Click on the **Add a new Monkey** button, and you can see you are redirected
    to `http://my.app/monkey/create`
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**添加新猴子**按钮，您会看到您被重定向到`http://my.app/monkey/create`
- en: 'If you take a look at the page source, you will find that the form''s `action`
    attribute is actually the same URL:'
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您查看页面源代码，您会发现表单的`action`属性实际上是相同的URL：
- en: '[PRE57]'
  id: totrans-465
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'It means that whether we are opening the monkey''s creation form or submitting
    it, we will always call the `create` action of the `monkey` controller. We should
    then read how this action is implemented:'
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着无论我们是打开猴子的创建表单还是提交它，我们都会始终调用`monkey`控制器的`create`动作。因此，我们应该阅读这个动作是如何实现的：
- en: '[PRE58]'
  id: totrans-467
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: As you can notice, the action is able to know whether or not it is accessed
    through a POST request by using `Input::method()`. You are recommended to take
    a look at the official documentation of the `Input` class at [http://fuelphp.com/docs/classes/input.html](http://fuelphp.com/docs/classes/input.html)
    (It can be accessed through the FuelPHP website by navigating to **DOCS** | **TABLE
    OF CONTENTS** | **Core** | **Input**)
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所注意到的，动作能够通过使用 `Input::method()` 来判断是否是通过 POST 请求访问的。建议您查看 `Input` 类的官方文档[http://fuelphp.com/docs/classes/input.html](http://fuelphp.com/docs/classes/input.html)（可以通过导航到
    FuelPHP 网站的 **DOCS** | **TABLE OF CONTENTS** | **Core** | **Input**）来访问）
- en: '`Model_Monkey::validate(''create'')` returns an object that seems to define
    whether or not the object can be saved (depending on what `$val->run()` returns).
    This is a method from the **Monkey** model, so we should look into it. Open `APPPATH/classes/model/monkey.php`:'
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: '`Model_Monkey::validate(''create'')` 返回一个对象，该对象似乎定义了对象是否可以被保存（取决于 `$val->run()`
    返回的结果）。这是一个来自 **Monkey** 模型的方法，因此我们应该深入研究。打开 `APPPATH/classes/model/monkey.php`：'
- en: '[PRE59]'
  id: totrans-470
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: The file contains the `Model_Monkey` class that extends `Model_Crud` and allows
    us to handle the monkey instances.
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: 该文件包含扩展 `Model_Crud` 的 `Model_Monkey` 类，使我们能够处理猴子实例。
- en: First, you can notice the `$_table_name` static attribute that defines the table
    name where the objects are saved (here, all our monkeys are saved into the `monkeys`
    table).
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，您可以注意到定义对象保存的表名的 `$_table_name` 静态属性（在这里，我们所有的猴子都保存在 `monkeys` 表中）。
- en: 'And then there is the `validate` static method we are looking for. It returns
    a `Validation` object, that in our case will check that:'
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: 然后是我们要找的 `validate` 静态方法。它返回一个 `Validation` 对象，在我们的情况下，将检查以下内容：
- en: The `name` attribute is not empty and its length is less than 255 characters
  id: totrans-474
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name` 属性不为空且长度小于 255 个字符'
- en: '`still_here`, `height`, and `description` are not empty'
  id: totrans-475
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`still_here`、`height` 和 `description` 都不为空'
- en: For more detail about this class, you are recommended to read the official documentation
    at [http://fuelphp.com/docs/classes/validation/validation.html](http://fuelphp.com/docs/classes/validation/validation.html)
    (It can be accessed through the FuelPHP website by navigating to **DOCS** | **TABLE
    OF CONTENTS** | **Core** | **Validation** | **Introduction**)
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: 关于这个类的更多详细信息，建议您阅读官方文档[http://fuelphp.com/docs/classes/validation/validation.html](http://fuelphp.com/docs/classes/validation/validation.html)（可以通过导航到
    FuelPHP 网站的 **DOCS** | **TABLE OF CONTENTS** | **Core** | **Validation** | **Introduction**）来访问）
- en: 'In our case, simply comment or remove the following line:'
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的情况下，只需注释或删除以下行：
- en: '[PRE60]'
  id: totrans-478
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: Note
  id: totrans-479
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You might have read `Session::set_flash` several times in the `Controller_Monkey`
    controller and `Session::get_flash` several times in the template. Session flash
    variables have a very limited life span and are generally used to store temporary
    information, such as notices or errors displayed to the user.
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能在 `Controller_Monkey` 控制器中多次读取 `Session::set_flash`，在模板中多次读取 `Session::get_flash`。会话闪存变量具有非常有限的生命周期，通常用于存储临时信息，例如显示给用户的提示或错误。
- en: Checking whether the height is a float
  id: totrans-481
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 检查高度是否为浮点数
- en: 'It is now easy to check if the height is a float. As we know that monkeys are
    generally not taller than 4 feet, we can even add a numerical constraint. In the
    `validate` method of `Model_Monkey`, replace the following line:'
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: 现在很容易检查高度是否为浮点数。因为我们知道猴子通常不会超过 4 英尺高，我们甚至可以添加一个数值约束。在 `Model_Monkey` 的 `validate`
    方法中，替换以下行：
- en: '[PRE61]'
  id: totrans-483
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: by
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: by
- en: '[PRE62]'
  id: totrans-485
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: Using a checkbox instead of an input for the still_here attribute
  id: totrans-486
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用复选框而不是输入框来设置 still_here 属性
- en: 'This change will be a bit more complex. First, still in the `validate` method
    of `Model_Monkey`, remove the following line as we won''t need this validation:'
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
  zh: 这个更改将更加复杂。首先，仍然在 `Model_Monkey` 的 `validate` 方法中，删除以下行，因为我们不需要这个验证：
- en: '[PRE63]'
  id: totrans-488
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'Now, if you go back to our `create` action in `Controller_Monkey` (located
    at `APPPATH/classes/controller/monkey.php`), you will see that the template content
    is set to the view located at `APPPATH/views/monkey/create.php`. If you look at
    the file content, it is pretty simple:'
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果您回到 `Controller_Monkey` 中的 `create` 动作（位于 `APPPATH/classes/controller/monkey.php`），您将看到模板内容被设置为位于
    `APPPATH/views/monkey/create.php` 的视图。如果您查看文件内容，它相当简单：
- en: '[PRE64]'
  id: totrans-490
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: For your information, the `render` method is an alias of `View::render`, and
    in this case equivalent to `View::forge`. This illustrates that it is possible
    to render views inside other views. It can be convenient to prevent code repetition;
    the view located at `APPPATH/views/monkey/edit.php` also renders the same view
    (`monkey/_form`), and this makes sense since the forms displayed are exactly the
    same, whether you create a new monkey or edit an existing one.
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
  zh: 供你参考，`render` 方法是 `View::render` 的别名，在这种情况下等同于 `View::forge`。这表明在视图内部渲染视图是可能的。这可以方便地防止代码重复；位于
    `APPPATH/views/monkey/edit.php` 的视图也渲染了相同的视图（`monkey/_form`），这是有意义的，因为显示的表单完全相同，无论是创建一个新的猴子还是编辑现有的一个。
- en: 'Since we want to edit the form to replace the `still_here` input by a checkbox,
    open the view located at `APPPATH/views/monkey/_form.php` and replace the following
    lines:'
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们想要将 `still_here` 输入替换为复选框，请打开位于 `APPPATH/views/monkey/_form.php` 的视图，并替换以下行：
- en: '[PRE65]'
  id: totrans-493
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: By
  id: totrans-494
  prefs: []
  type: TYPE_NORMAL
  zh: 通过
- en: '[PRE66]'
  id: totrans-495
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: Note
  id: totrans-496
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: In the code above, the first parameter is the name attribute of the checkbox.
    The second parameter is the value attribute of the checkbox. The third parameter
    determines whether the checkbox is checked or not. You can notice that, when we
    create a new monkey (and therefore no monkey is set), the checkbox will be checked
    by default. You are recommended to read the official documentation for more information
    about the `Form` class at [http://fuelphp.com/docs/classes/form.html](http://fuelphp.com/docs/classes/form.html)
    (It can be accessed through the FuelPHP website by navigating to **DOCS** | **TABLE
    OF CONTENTS** | **Core** | **Form**)
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的代码中，第一个参数是复选框的名称属性。第二个参数是复选框的值属性。第三个参数确定复选框是否被勾选。你可以注意到，当我们创建一个新的猴子（因此没有猴子被设置）时，复选框将默认勾选。建议你阅读官方文档以获取有关
    `Form` 类的更多信息，请访问 [http://fuelphp.com/docs/classes/form.html](http://fuelphp.com/docs/classes/form.html)（可以通过导航到
    FuelPHP 网站的 **DOCS** | **目录** | **核心** | **表单** 来访问）（It can be accessed through
    the FuelPHP website by navigating to **DOCS** | **TABLE OF CONTENTS** | **Core**
    | **Form**）
- en: 'Finally, you are probably aware that the `still_here` POST attribute won''t
    be defined if the checkbox is unchecked when submitting the form. Thus, we need
    to define a default value when retrieving the `still_here` POST attribute, not
    only in the `create` action but also in the `edit` action. In both the methods,
    replace the following:'
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你可能知道，当提交表单时，如果复选框未被勾选，`still_here` POST 属性将不会被定义。因此，在检索 `still_here` POST
    属性时，我们不仅需要在 `create` 动作中定义默认值，还需要在 `edit` 动作中定义。在这两种方法中，替换以下内容：
- en: '[PRE67]'
  id: totrans-499
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: by
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
  zh: 通过
- en: '[PRE68]'
  id: totrans-501
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: Tip
  id: totrans-502
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Our solution works, but, in most cases, hard-coding a default value is not a
    good idea. When indicating a default value, for a request parameter or a configuration
    item, the best is to define this value inside a centralized configuration file
    and load it from there. Always avoid hard-coding constants, even for default values.
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的方法是有效的，但在大多数情况下，硬编码默认值不是一个好主意。在指示请求参数或配置项的默认值时，最佳做法是在集中式配置文件中定义此值，并从那里加载它。始终避免硬编码常量，即使是对于默认值。
- en: Setting custom routes
  id: totrans-504
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置自定义路由
- en: Last but not least, we don't want to display FuelPHP's welcome screen when requesting
    the root URL, but instead the monkeys' listing. For doing that we will have to
    change the routes' configuration file located at `APPPATH/config/routes.php`.
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
  zh: 最后但同样重要的是，我们不希望在请求根 URL 时显示 FuelPHP 的欢迎屏幕，而是显示猴子的列表。为此，我们需要更改位于 `APPPATH/config/routes.php`
    的路由配置文件。
- en: 'Replace:'
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
  zh: 替换：
- en: '[PRE69]'
  id: totrans-507
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'By:'
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
  zh: 通过：
- en: '[PRE70]'
  id: totrans-509
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: 'When requesting:'
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
  zh: 当请求时：
- en: '`http://my.app/`'
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://my.app/`'
- en: You should now see your monkey listing.
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在应该能看到你的猴子列表。
- en: Removing useless routes and files
  id: totrans-513
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 移除无用的路由和文件
- en: 'Now that our project is working as intended, it might be a good idea to clean
    it:'
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的项目按预期工作，清理它可能是个好主意：
- en: Remove `APPPATH/classes/controller/welcome.php` as we don't need this controller
    anymore
  id: totrans-515
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移除 `APPPATH/classes/controller/welcome.php`，因为我们不再需要这个控制器了
- en: Remove the `APPPATH/classes/presenter` folder
  id: totrans-516
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移除 `APPPATH/classes/presenter` 文件夹
- en: Remove the `APPPATH/views/welcome` folder
  id: totrans-517
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移除 `APPPATH/views/welcome` 文件夹
- en: And remove the `_404_`, `hello(/:name)?`, `my/welcome/page` keys from the routes'
    configuration file located at `APPPATH/config/routes.php`.
  id: totrans-518
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 并且从位于 `APPPATH/config/routes.php` 的路由配置文件中移除 `_404_`、`hello(/:name)?`、`my/welcome/page`
    键。
- en: A few notes about deploying your application
  id: totrans-519
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于部署你的应用程序的一些注意事项
- en: Now that you have a working application, you might want to publish it on hosts.
    Handling this is quite easy, the longer part being sending the project's files
    (using FTP, Git, or any other tool depending on your hosting service), but there
    are a couple of things you should know.
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经有一个运行中的应用程序，你可能想要将其发布到主机上。处理这一点相当简单，较长的部分是发送项目的文件（使用FTP、Git或任何其他根据你的托管服务选择的工具），但有一些事情你应该知道。
- en: 'First, you have to set your apache `FUEL_ENV` environment to `production`.
    An easy way to do that is to edit `public/.htaccess` and uncomment the second
    line:'
  id: totrans-521
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你必须将你的apache `FUEL_ENV`环境设置为`production`。一个简单的方法是编辑`public/.htaccess`并取消注释第二行：
- en: '[PRE71]'
  id: totrans-522
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: Keep in mind, that in this case you will have two different files between your
    local environment and your production environment, so it will be prone to human
    error. You are recommended to read the official documentation at [http://fuelphp.com/docs/general/environments.html](http://fuelphp.com/docs/general/environments.html)
    (It can be accessed through the FuelPHP website by navigating to **DOCS** | **TABLE
    OF CONTENTS** | **FuelPHP** | **Environments**)
  id: totrans-523
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，在这种情况下，你将在本地环境和生产环境之间有两个不同的文件，因此容易出错。建议您阅读官方文档[http://fuelphp.com/docs/general/environments.html](http://fuelphp.com/docs/general/environments.html)（可以通过导航到FuelPHP网站上的**DOCS**
    | **目录** | **FuelPHP** | **环境**来访问）
- en: If you are using a shared hosting solution, keep in mind that, as explained
    in *The simplest way* section,you should take additional security precautions
  id: totrans-524
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是共享托管解决方案，请记住，正如在*最简单的方法*部分所解释的，你应该采取额外的安全预防措施
- en: Summary
  id: totrans-525
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we have seen the very basics of the FuelPHP framework and we
    have built our first project. We have learnt how to install FuelPHP, used the
    oil command line to generate code files and migrate our application, understood
    how routes work, and seen how models, views, presenters, and controllers interact
    with each other.
  id: totrans-526
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们了解了FuelPHP框架的非常基础的内容，并构建了我们的第一个项目。我们学习了如何安装FuelPHP，使用oil命令行生成代码文件并迁移我们的应用程序，理解了路由是如何工作的，并看到了模型、视图、演示者和控制器是如何相互交互的。
- en: Though you are now able to create an application and implement basic features,
    you might not be yet ready for more complex projects. In the next chapter, we
    will improve your skills by using FuelPHP's Object Relational Mapper (ORM).
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然你现在能够创建一个应用程序并实现基本功能，但你可能还没有准备好进行更复杂的项目。在下一章中，我们将通过使用FuelPHP的对象关系映射器（ORM）来提高你的技能。
